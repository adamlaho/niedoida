/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dsdd_AC_zy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2022_13_32(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30224 = ce * de;
    const double C30223 = ce + de;
    const double C30222 = 0 * de;
    const double C30221 = yC - yD;
    const double C30262 = 0 * ce;
    const double C30257 = 0 * de;
    const double C30256 = 0 * de;
    const double C30307 = 0 * de;
    const double C30353 = ae * be;
    const double C30352 = 0 * be;
    const double C30351 = zA - zB;
    const double C30350 = ae + be;
    const double C30373 = yP - yQ;
    const double C30372 = zP - zQ;
    const double C30371 = p + q;
    const double C30370 = p * q;
    const double C30382 = bs[4];
    const double C30380 = xP - xQ;
    const double C30388 = bs[5];
    const double C30395 = bs[6];
    const double C30407 = bs[7];
    const double C30423 = bs[3];
    const double C30939 = bs[2];
    const double C115 = bs[0];
    const double C31306 = xA - xB;
    const double C31320 = xC - xD;
    const double C31368 = zC - zD;
    const double C31536 = yA - yB;
    const double C30225 = std::pow(C30223, 2);
    const double C30240 = 2 * C30223;
    const double C30258 = C30222 / C30223;
    const double C30226 = C30224 * C30221;
    const double C30259 = C30221 * C30222;
    const double C31351 = std::pow(C30221, 2);
    const double C31410 = C30221 * de;
    const double C31408 = C30221 * ce;
    const double C30269 = C30262 / C30223;
    const double C30264 = C30221 * C30257;
    const double C30308 = C30307 / C30223;
    const double C30355 = C30353 * C30351;
    const double C31548 = std::pow(C30351, 2);
    const double C31645 = C30351 * be;
    const double C30354 = 2 * C30350;
    const double C30383 = C30223 * C30350;
    const double C136 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (zP - zQ) * (yP - yQ) * ae * ce) /
                         C30223) /
                        C30350;
    const double C137 = (-((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                           bs[3] * (zP - zQ) * (yP - yQ) * ae * ce) /
                         C30223) /
                        C30350;
    const double C31611 = std::pow(C30350, 2);
    const double C30463 = C30373 * ce;
    const double C30519 = std::pow(C30373, 2);
    const double C30375 = C30372 * C30373;
    const double C30424 = C30372 * ae;
    const double C30614 = std::pow(C30372, 2);
    const double C30374 = 2 * C30370;
    const double C30389 = std::pow(C30380, 2);
    const double C31307 = std::pow(C31306, 2);
    const double C31610 = C31306 * be;
    const double C31323 = C31320 * de;
    const double C31322 = C31320 * ce;
    const double C31321 = std::pow(C31320, 2);
    const double C31369 = std::pow(C31368, 2);
    const double C31452 = C31368 * de;
    const double C31450 = C31368 * ce;
    const double C31537 = std::pow(C31536, 2);
    const double C31644 = C31536 * be;
    const double C30227 = 2 * C30225;
    const double C31624 = 4 * C30225;
    const double C31335 = std::pow(C30240, -1);
    const double C31625 = C30225 * C30240;
    const double C31621 = std::pow(C30240, -2);
    const double C30267 = C30259 / C30223;
    const double C31352 = C31351 * C30224;
    const double C31626 = std::pow(C31408, 2);
    const double C30270 = C30264 / C30223;
    const double C31549 = C31548 * C30353;
    const double C31613 = std::pow(C30354, -2);
    const double C31612 = std::pow(C30354, -1);
    const double C30465 = C30382 * C30463;
    const double C30469 = C30388 * C30463;
    const double C30472 = C30423 * C30463;
    const double C30481 = C30395 * C30463;
    const double C30493 = C30407 * C30463;
    const double C30377 = C30375 * ae;
    const double C30425 = C30423 * C30424;
    const double C30429 = C30382 * C30424;
    const double C30434 = C30388 * C30424;
    const double C30441 = C30395 * C30424;
    const double C30452 = C30407 * C30424;
    const double C30376 = C30374 / C30371;
    const double C122 = (-(bs[1] * C30424 * C30374) / C30371) / C30350;
    const double C123 = (bs[1] * C30463 * C30374) / (C30371 * C30223);
    const double C116 = -(C30380 * bs[1] * C30374) / C30371;
    const double C305 = -(C30373 * bs[1] * C30374) / C30371;
    const double C520 = -(C30372 * bs[1] * C30374) / C30371;
    const double C31308 = C31307 * C30353;
    const double C31614 = std::pow(C31322, 2);
    const double C31324 = C31321 * C30224;
    const double C31370 = C31369 * C30224;
    const double C31628 = std::pow(C31450, 2);
    const double C31538 = C31537 * C30353;
    const double C30261 = C30222 / C30227;
    const double C30266 = C30257 / C30227;
    const double C30265 = C30256 / C30227;
    const double C31655 = C30223 * C31624;
    const double C31656 = 4 * C31625;
    const double C30271 = 0 - C30267;
    const double C31353 = C31352 / C30223;
    const double C30274 = 0 - C30270;
    const double C31550 = C31549 / C30350;
    const double C30378 = C30377 * ce;
    const double C30381 = std::pow(C30376, 4);
    const double C30387 = -C30376;
    const double C30394 = std::pow(C30376, 6);
    const double C30940 = std::pow(C30376, 2);
    const double C124 =
        (C30380 * std::pow(C30376, 2) * bs[2] * C30424) / C30350;
    const double C125 =
        -(C30380 * std::pow(C30376, 2) * bs[2] * C30463) / C30223;
    const double C315 =
        (C30373 * std::pow(C30376, 2) * bs[2] * C30424) / C30350;
    const double C316 =
        (ce * bs[1] * C30374) / (C30371 * C30223) -
        (C30373 * std::pow(C30376, 2) * bs[2] * C30463) / C30223;
    const double C31309 = C31308 / C30350;
    const double C31325 = C31324 / C30223;
    const double C31371 = C31370 / C30223;
    const double C31539 = C31538 / C30350;
    const double C30275 = C30271 * ce;
    const double C31354 = -C31353;
    const double C30278 = C30274 * ce;
    const double C31551 = -C31550;
    const double C30384 = C30382 * C30378;
    const double C30391 = C30388 * C30378;
    const double C30397 = C30395 * C30378;
    const double C30410 = C30407 * C30378;
    const double C138 =
        (-(std::pow(C30376, 4) * bs[4] * C30378 * std::pow(xP - xQ, 2)) /
         C30223) /
            C30350 -
        (std::pow(-C30376, 3) * bs[3] * C30378) / (C30223 * C30350);
    const double C30430 = C30381 * C30429;
    const double C30466 = C30381 * C30465;
    const double C30511 = C30382 * C30381;
    const double C30390 = std::pow(C30387, 5);
    const double C30406 = std::pow(C30387, 7);
    const double C30422 = std::pow(C30387, 3);
    const double C335 =
        (-(C30373 * std::pow(C30387, 3) * bs[3] * C30378) / C30223) / C30350 -
        (std::pow(C30376, 2) * bs[2] * C30372 * ae * ce) / C30383;
    const double C30443 = C30394 * C30441;
    const double C30483 = C30394 * C30481;
    const double C30589 = C30395 * C30394;
    const double C30941 = C30939 * C30940;
    const double C533 = -(C30372 * C30940 * C30939 * C30463) / C30223;
    const double C534 = (C30372 * C30940 * C30939 * C30424) / C30350 -
                        (ae * bs[1] * C30374) / (C30371 * C30350);
    const double C31310 = -C31309;
    const double C31326 = -C31325;
    const double C31372 = -C31371;
    const double C31540 = -C31539;
    const double C30279 = C30275 / C30223;
    const double C31355 = std::exp(C31354);
    const double C30282 = C30278 / C30223;
    const double C31552 = std::exp(C31551);
    const double C30385 = C30381 * C30384;
    const double C30398 = C30394 * C30397;
    const double C30431 = C30380 * C30430;
    const double C30518 = C30430 * ce;
    const double C30516 = C30373 * C30430;
    const double C31057 = C30372 * C30430;
    const double C30475 = C30380 * C30466;
    const double C30557 = C30373 * C30466;
    const double C30613 = ae * C30466;
    const double C30611 = C30372 * C30466;
    const double C30552 = C30380 * C30511;
    const double C30563 = C30373 * C30511;
    const double C30562 = C30511 * ce;
    const double C30951 = C30511 * C30389;
    const double C31006 = C30511 * C30519;
    const double C31060 = C30511 * C30614;
    const double C31144 = C30372 * C30511;
    const double C31143 = C30511 * ae;
    const double C30392 = C30390 * C30391;
    const double C30435 = C30390 * C30434;
    const double C30470 = C30390 * C30469;
    const double C30513 = C30388 * C30390;
    const double C30412 = C30406 * C30410;
    const double C30454 = C30406 * C30452;
    const double C30496 = C30406 * C30493;
    const double C30426 = C30422 * C30425;
    const double C30473 = C30422 * C30472;
    const double C30550 = C30423 * C30422;
    const double C550 =
        (-(C30372 * C30422 * C30423 * C30378) / C30223) / C30350 -
        (ae * std::pow(C30376, 2) * bs[2] * C30463) / C30383;
    const double C30444 = C30443 * C30389;
    const double C30451 = C30380 * C30443;
    const double C30654 = C30443 * C30519;
    const double C30676 = C30443 * ce;
    const double C30674 = C30373 * C30443;
    const double C31157 = C30372 * C30443;
    const double C30485 = C30483 * C30389;
    const double C30492 = C30380 * C30483;
    const double C30706 = C30373 * C30483;
    const double C30820 = C30483 * C30614;
    const double C30844 = ae * C30483;
    const double C30842 = C30372 * C30483;
    const double C30590 = C30589 * C30389;
    const double C30727 = C30589 * C30519;
    const double C30726 = C30373 * C30589;
    const double C30725 = C30589 * ce;
    const double C30775 = C30380 * C30589;
    const double C31161 = C30589 * C30614;
    const double C117 = C30941 * C30389 - (bs[1] * C30374) / C30371;
    const double C306 = C30941 * C30519 - (bs[1] * C30374) / C30371;
    const double C307 = C30373 * C30380 * C30941;
    const double C517 = C30372 * C30380 * C30941;
    const double C522 = C30941 * C30614 - (bs[1] * C30374) / C30371;
    const double C1004 = C30372 * C30373 * C30941;
    const double C31311 = std::exp(C31310);
    const double C31327 = std::exp(C31326);
    const double C31373 = std::exp(C31372);
    const double C31541 = std::exp(C31540);
    const double C30283 = C30279 - C30266;
    const double C30228 = C30226 * C31355;
    const double C114 = -(2 * ce * de * (yC - yD) * C31355) / (ce + de);
    const double C31409 = C31355 / C30240;
    const double C31411 = C31355 * C31408;
    const double C31418 = C31335 * C31355;
    const double C31632 = C31355 * C31410;
    const double C31659 = C31621 * C31355;
    const double C31657 = C31355 * C31626;
    const double C30286 = C30282 - C30265;
    const double C151 = C31552 * C138;
    const double C147 = C31552 * C137;
    const double C145 = C31552 * C124;
    const double C5138 = C31552 * C335;
    const double C5136 = C31552 * C315;
    const double C30356 = C30355 * C31552;
    const double C113 = -(2 * ae * be * (zA - zB) * C31552) / (ae + be);
    const double C31677 = C31552 * C31645;
    const double C9286 =
        (C31552 * std::pow(C31645, 2)) / C31611 + C31552 / C30354;
    const double C9288 = C31613 * C31552;
    const double C19033 = C31612 * C31552;
    const double C139 =
        (-2 * C30380 * C30385) / C30383 +
        C30380 *
            ((-(std::pow(-C30376, 5) * bs[5] * C30378 * std::pow(C30380, 2)) /
              C30223) /
                 C30350 -
             C30385 / C30383);
    const double C547 = (-(C30372 * C30380 * C30385) / C30223) / C30350 -
                        (ae * C30380 * C30422 * C30423 * C30373 * ce) / C30383;
    const double C30399 = C30398 * C30389;
    const double C30408 = C30398 / C30383;
    const double C30405 = C30380 * C30398;
    const double C30652 = C30373 * C30398;
    const double C30818 = C30372 * C30398;
    const double C30521 = C30518 / C30383;
    const double C30616 = C30613 / C30383;
    const double C30571 = C30552 * ce;
    const double C30957 = 2 * C30552;
    const double C31012 = C30373 * C30552;
    const double C31067 = C30372 * C30552;
    const double C31066 = C30552 * ae;
    const double C30565 = C30563 * ce;
    const double C31093 = 2 * C30563;
    const double C31121 = C30372 * C30563;
    const double C31120 = C30563 * ae;
    const double C31149 = 2 * C31144;
    const double C31147 = C31144 * ae;
    const double C30396 = C30392 / C30383;
    const double C30517 = C30373 * C30392;
    const double C30528 = C30380 * C30392;
    const double C30612 = C30372 * C30392;
    const double C140 =
        3 * ((-(C30392 * C30389) / C30223) / C30350 - C30385 / C30383) +
        C30380 * ((-2 * C30380 * C30392) / C30383 +
                  C30380 * ((-(std::pow(C30376, 6) * bs[6] * C30378 * C30389) /
                             C30223) /
                                C30350 -
                            C30392 / C30383));
    const double C338 =
        (-(C30373 * C30431 * ce) / C30223) / C30350 -
        (C30380 * C30385) / C30383 +
        C30373 * ((-(C30373 * C30380 * C30392) / C30223) / C30350 -
                  (C30431 * ce) / C30383);
    const double C548 =
        C30372 * ((-(C30392 * C30389) / C30223) / C30350 - C30385 / C30383) -
        (ae * (C30381 * C30382 * C30463 * C30389 + C30422 * C30423 * C30463)) /
            C30383;
    const double C553 =
        (-(ae * C30372 * C30475) / C30223) / C30350 -
        (C30380 * C30385) / C30383 +
        C30372 * ((-(C30372 * C30380 * C30392) / C30223) / C30350 -
                  (ae * C30475) / C30383);
    const double C1020 =
        C30372 * ((-(C30373 * C30380 * C30392) / C30223) / C30350 -
                  (C30431 * ce) / C30383) -
        (ae * (C30373 * C30475 + C30380 * C30423 * C30422 * ce)) / C30383;
    const double C30436 = C30435 * C30389;
    const double C30440 = C30380 * C30435;
    const double C30522 = C30435 * C30519;
    const double C30653 = C30435 * ce;
    const double C30651 = C30373 * C30435;
    const double C31142 = C30372 * C30435;
    const double C30477 = C30470 * C30389;
    const double C30480 = C30380 * C30470;
    const double C30561 = C30373 * C30470;
    const double C30617 = C30470 * C30614;
    const double C30819 = ae * C30470;
    const double C30817 = C30372 * C30470;
    const double C30554 = C30513 * C30389;
    const double C30575 = C30380 * C30513;
    const double C30702 = C30513 * C30519;
    const double C30708 = C30373 * C30513;
    const double C30707 = C30513 * ce;
    const double C31145 = C30513 * C30614;
    const double C31159 = C30372 * C30513;
    const double C31158 = C30513 * ae;
    const double C30413 = C30412 * C30389;
    const double C30675 = C30373 * C30412;
    const double C30753 = C30380 * C30412;
    const double C30843 = C30372 * C30412;
    const double C30455 = C30454 * C30389;
    const double C30678 = C30454 * C30519;
    const double C30755 = C30380 * C30454;
    const double C30498 = C30496 * C30389;
    const double C30724 = C30373 * C30496;
    const double C30798 = C30380 * C30496;
    const double C30846 = C30496 * C30614;
    const double C336 = (-(C30373 * C30426 * ce) / C30223) / C30350 -
                        (C30422 * C30423 * C30378) / C30383 +
                        C30373 * ((-(C30373 * C30385) / C30223) / C30350 -
                                  (C30426 * ce) / C30383);
    const double C337 = (-(C30373 * C30380 * C30385) / C30223) / C30350 -
                        (C30380 * C30426 * ce) / C30383;
    const double C339 =
        C30373 * ((-(C30392 * C30389) / C30223) / C30350 - C30385 / C30383) -
        ((C30426 + C30430 * C30389) * ce) / C30383;
    const double C1290 =
        2 * ((-(C30373 * C30385) / C30223) / C30350 - (C30426 * ce) / C30383) -
        ((C30426 + C30430 * std::pow(C30373, 2)) * ce) / C30383 +
        C30373 *
            ((-(C30373 * C30430 * ce) / C30223) / C30350 - C30385 / C30383 +
             C30373 * ((-(C30373 * C30392) / C30223) / C30350 -
                       (C30430 * ce) / C30383));
    const double C126 =
        (std::pow(C30376, 2) * bs[2] * C30424 + C30426 * C30389) / C30350;
    const double C129 =
        (2 * C30380 * C30426 + C30380 * (C30426 + C30430 * C30389)) / C30350;
    const double C317 =
        (std::pow(C30376, 2) * bs[2] * C30424 + C30426 * C30519) / C30350;
    const double C319 = (C30373 * C30380 * C30426) / C30350;
    const double C321 = (C30380 * C30426 + C30431 * C30519) / C30350;
    const double C323 = (C30373 * (C30426 + C30430 * C30389)) / C30350;
    const double C527 =
        (C30372 * C30380 * C30426 + C30380 * C30941 * ae) / C30350;
    const double C537 =
        (C30940 * C30939 * C30424 + C30372 * (C30372 * C30426 + C30941 * ae) +
         C30372 * C30941 * ae) /
        C30350;
    const double C1009 =
        (C30372 * C30373 * C30426 + C30373 * C30941 * ae) / C30350;
    const double C1278 =
        (2 * C30373 * C30426 + C30373 * (C30426 + C30430 * C30519)) / C30350;
    const double C552 = (-(ae * C30372 * C30473) / C30223) / C30350 -
                        (C30422 * C30423 * C30378) / C30383 +
                        C30372 * ((-(C30372 * C30385) / C30223) / C30350 -
                                  (ae * C30473) / C30383);
    const double C1019 =
        C30372 *
            ((-(C30373 * C30385) / C30223) / C30350 - (C30426 * ce) / C30383) -
        (ae * (C30373 * C30473 + bs[2] * std::pow(C30376, 2) * ce)) / C30383;
    const double C2176 =
        2 * ((-(C30372 * C30385) / C30223) / C30350 - (ae * C30473) / C30383) -
        (ae * (C30466 * std::pow(C30372, 2) + C30473)) / C30383 +
        C30372 *
            ((-(ae * C30372 * C30466) / C30223) / C30350 - C30385 / C30383 +
             C30372 * ((-(C30372 * C30392) / C30223) / C30350 -
                       (ae * C30466) / C30383));
    const double C127 =
        -(C30473 * C30389 + std::pow(C30376, 2) * bs[2] * C30463) / C30223;
    const double C128 = (-2 * C30380 * C30473) / C30223 -
                        (C30380 * (C30466 * C30389 + C30473)) / C30223;
    const double C318 = -(C30373 * (C30373 * C30473 + C30941 * ce) +
                          C30940 * C30939 * C30463 + C30373 * C30941 * ce) /
                        C30223;
    const double C320 =
        -(C30373 * C30380 * C30473 + C30380 * C30941 * ce) / C30223;
    const double C528 = -(C30372 * C30380 * C30473) / C30223;
    const double C530 = -(C30372 * (C30466 * C30389 + C30473)) / C30223;
    const double C538 = -(C30473 * C30614 + C30940 * C30939 * C30463) / C30223;
    const double C540 = -(C30475 * C30614 + C30380 * C30473) / C30223;
    const double C1010 = -(C30372 * (C30373 * C30473 + C30941 * ce)) / C30223;
    const double C2166 = (-2 * C30372 * C30473) / C30223 -
                         (C30372 * (C30466 * C30614 + C30473)) / C30223;
    const double C30558 = C30550 * ce;
    const double C30946 = C30380 * C30550;
    const double C30952 = C30550 + C30951;
    const double C31005 = C30373 * C30550;
    const double C31007 = C30550 + C31006;
    const double C31059 = C30372 * C30550;
    const double C31058 = C30550 * ae;
    const double C31062 = C30550 + C31060;
    const double C324 = -(C30373 * (C30466 * C30389 + C30473) +
                          (C30941 + C30550 * C30389) * ce) /
                        C30223;
    const double C529 = (C30372 * (C30426 + C30430 * C30389) +
                         (C30941 + C30550 * C30389) * ae) /
                        C30350;
    const double C1415 = (C30372 * (C30426 + C30430 * C30519) +
                          (C30941 + C30550 * C30519) * ae) /
                         C30350;
    const double C2167 =
        (2 * (C30372 * C30426 + C30941 * ae) +
         C30372 * (C30426 + C30372 * (C30372 * C30430 + C30550 * ae) +
                   C30372 * C30550 * ae) +
         (C30941 + C30550 * C30614) * ae) /
        C30350;
    const double C118 =
        2 * C30380 * C30941 + C30380 * (C30941 + C30550 * C30389);
    const double C309 = C30373 * (C30941 + C30550 * C30389);
    const double C518 = C30372 * (C30941 + C30550 * C30389);
    const double C1272 =
        2 * C30373 * C30941 + C30373 * (C30941 + C30550 * C30519);
    const double C1406 = C30372 * (C30941 + C30550 * C30519);
    const double C2158 =
        2 * C30372 * C30941 + C30372 * (C30941 + C30550 * C30614);
    const double C30445 = C30435 + C30444;
    const double C30453 = 2 * C30451;
    const double C30533 = C30451 * C30519;
    const double C30754 = C30451 * ce;
    const double C30751 = C30373 * C30451;
    const double C31187 = C30372 * C30451;
    const double C30659 = C30435 + C30654;
    const double C30682 = C30676 / C30383;
    const double C30683 = 2 * C30674;
    const double C30680 = C30674 * ce;
    const double C31202 = C30372 * C30674;
    const double C30486 = C30485 + C30470;
    const double C30495 = -2 * C30492;
    const double C30574 = C30373 * C30492;
    const double C30626 = C30492 * C30614;
    const double C30883 = ae * C30492;
    const double C30881 = C30372 * C30492;
    const double C30825 = C30820 + C30470;
    const double C30850 = C30844 / C30383;
    const double C30852 = -2 * C30842;
    const double C30848 = ae * C30842;
    const double C30591 = C30513 + C30590;
    const double C30733 = C30513 + C30727;
    const double C30732 = C30726 * ce;
    const double C31205 = C30726 * C30614;
    const double C30776 = C30775 * C30519;
    const double C30800 = C30373 * C30775;
    const double C30799 = C30775 * ce;
    const double C31190 = C30775 * C30614;
    const double C31165 = C30513 + C31161;
    const double C31646 = C31311 * C31610;
    const double C103 =
        (C31311 * std::pow(C31610, 2)) / C31611 + C31311 / C30354;
    const double C105 = C31613 * C31311;
    const double C13437 = C31612 * C31311;
    const double C31329 = C31327 * C31322;
    const double C31328 = C31327 / C30240;
    const double C31337 = C31335 * C31327;
    const double C31617 = C31327 * C31323;
    const double C31653 = C31621 * C31327;
    const double C31647 = C31327 * C31614;
    const double C31451 = C31373 / C30240;
    const double C31453 = C31373 * C31450;
    const double C31460 = C31335 * C31373;
    const double C31638 = C31373 * C31452;
    const double C31662 = C31621 * C31373;
    const double C31660 = C31373 * C31628;
    const double C31676 = C31541 * C31644;
    const double C5021 =
        (C31541 * std::pow(C31644, 2)) / C31611 + C31541 / C30354;
    const double C5023 = C31613 * C31541;
    const double C13439 = C31612 * C31541;
    const double C30288 = C30283 / C30240;
    const double C30287 = C30221 * C30283;
    const double C30241 = 2 * C30228;
    const double C30263 = C30228 / C30225;
    const double C304 = ((0 * ce) / C30223 - C30228 / C30225) / (2 * C30223) +
                        (0 * ce) / C30223;
    const double C711 =
        ((C31355 - (C30221 * 2 * C30228) / C30223) * ce) / C30223 -
        C30222 / C30227;
    const double C712 = (0 * ce) / C30223 - C30228 / C30225;
    const double C1167 = (C31355 * std::pow(C31410, 2)) / C30225 + C31409;
    const double C31412 = C31411 * C31410;
    const double C31417 = C31411 / C30227;
    const double C31630 = C31411 / C30223;
    const double C31627 = C31335 * C31411;
    const double C303 =
        (((C31355 - (C30221 * 2 * C30228) / C30223) * ce) / C30223 -
         C30222 / C30227) /
            (2 * C30223) +
        ((C30221 * ((0 * ce) / C30223 - C30228 / C30225) + C31418) * ce) /
            C30223;
    const double C31419 = C31418 * C31410;
    const double C31636 = C31408 * C31418;
    const double C31635 = 2 * C31418;
    const double C31669 = C31418 / C31624;
    const double C1265 = C31418 / C31656;
    const double C3108 = C31418 / C30240;
    const double C31665 = C31632 / C30223;
    const double C1168 = (-2 * C31335 * C31632) / C30223;
    const double C31683 = C31657 / C30225;
    const double C30292 = C30286 + C30258;
    const double C30357 = 2 * C30356;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C348 = C113 * C307;
    const double C558 = C113 * C517;
    const double C5139 = C113 * C306;
    const double C5137 = C113 * C316;
    const double C5135 = C113 * C305;
    const double C5605 = C113 * C1004;
    const double C9287 = (-2 * C31612 * C31677) / C30350;
    const double C19032 = -C31677 / C30350;
    const double C153 = C31552 * C139;
    const double C561 = C31552 * C547;
    const double C19044 = C19033 * C547;
    const double C30400 = C30399 / C30223;
    const double C30409 = -2 * C30405;
    const double C30531 = C30373 * C30405;
    const double C30624 = C30372 * C30405;
    const double C30752 = C30405 / C30383;
    const double C30656 = C30652 / C30223;
    const double C30822 = C30818 / C30223;
    const double C30520 = C30517 / C30223;
    const double C30615 = C30612 / C30223;
    const double C159 = C31552 * C140;
    const double C355 = C31552 * C338;
    const double C565 = C31552 * C548;
    const double C19046 = C19033 * C548;
    const double C573 = C31552 * C553;
    const double C19432 = C19033 * C553;
    const double C1030 = C31552 * C1020;
    const double C19236 = C19033 * C1020;
    const double C30437 = C30430 + C30436;
    const double C30442 = 2 * C30440;
    const double C30532 = C30440 * ce;
    const double C30530 = C30373 * C30440;
    const double C1292 =
        2 * ((-(C30373 * C30528) / C30223) / C30350 - (C30431 * ce) / C30383) -
        ((C30431 + C30440 * C30519) * ce) / C30383 +
        C30373 *
            ((-(C30373 * C30440 * ce) / C30223) / C30350 - C30528 / C30383 +
             C30373 * ((-(C30373 * C30405) / C30223) / C30350 -
                       (C30440 * ce) / C30383));
    const double C31065 = C30372 * C30440;
    const double C1282 =
        (2 * C30373 * C30431 + C30373 * (C30431 + C30440 * C30519)) / C30350;
    const double C30524 = C30430 + C30522;
    const double C30657 = C30653 / C30383;
    const double C30658 = 2 * C30651;
    const double C30655 = C30651 * ce;
    const double C31119 = C30372 * C30651;
    const double C31146 = C31142 + C31143;
    const double C30478 = C30477 + C30466;
    const double C30482 = -2 * C30480;
    const double C30570 = C30373 * C30480;
    const double C30625 = ae * C30480;
    const double C30623 = C30372 * C30480;
    const double C2175 =
        2 * ((-(C30372 * C30528) / C30223) / C30350 - (ae * C30475) / C30383) -
        (ae * (C30480 * std::pow(C30372, 2) + C30475)) / C30383 +
        C30372 *
            ((-(ae * C30372 * C30480) / C30223) / C30350 - C30528 / C30383 +
             C30372 * ((-(C30372 * C30405) / C30223) / C30350 -
                       (ae * C30480) / C30383));
    const double C2164 = (-2 * C30372 * C30475) / C30223 -
                         (C30372 * (C30480 * C30614 + C30475)) / C30223;
    const double C30564 = C30561 + C30562;
    const double C30619 = C30617 + C30466;
    const double C30823 = C30819 / C30383;
    const double C30824 = -2 * C30817;
    const double C30821 = ae * C30817;
    const double C30555 = C30511 + C30554;
    const double C30577 = C30373 * C30575;
    const double C30576 = C30575 * ce;
    const double C30601 = 2 * C30575;
    const double C31013 = C30575 * C30519;
    const double C31068 = C30575 * C30614;
    const double C31189 = C30372 * C30575;
    const double C31188 = C30575 * ae;
    const double C30703 = C30511 + C30702;
    const double C30712 = C30708 * ce;
    const double C30728 = 2 * C30708;
    const double C31122 = C30708 * C30614;
    const double C31204 = C30372 * C30708;
    const double C31203 = C30708 * ae;
    const double C30711 = C30706 + C30707;
    const double C31148 = C30511 + C31145;
    const double C31166 = 2 * C31159;
    const double C31164 = C31159 * ae;
    const double C31163 = C31157 + C31158;
    const double C30414 = C30413 / C30223;
    const double C30681 = C30675 / C30223;
    const double C30757 = C30373 * C30753;
    const double C30882 = C30372 * C30753;
    const double C30849 = C30843 / C30223;
    const double C30456 = C30443 + C30455;
    const double C30684 = C30443 + C30678;
    const double C30760 = C30755 * C30519;
    const double C30499 = C30498 + C30483;
    const double C30731 = C30724 + C30725;
    const double C30803 = C30373 * C30798;
    const double C30884 = C30798 * C30614;
    const double C30853 = C30846 + C30483;
    const double C5142 = C31552 * C336;
    const double C351 = C31552 * C337;
    const double C361 = C31552 * C339;
    const double C5146 = C31552 * C1290;
    const double C149 = C31552 * C126;
    const double C155 = C31552 * C129;
    const double C5140 = C31552 * C317;
    const double C349 = C31552 * C319;
    const double C353 = C31552 * C321;
    const double C359 = C31552 * C323;
    const double C559 = C31552 * C527;
    const double C19040 = C19033 * C527;
    const double C5606 = C31552 * C1009;
    const double C24872 = C19033 * C1009;
    const double C5144 = C31552 * C1278;
    const double C5608 = C31552 * C1019;
    const double C24876 = C19033 * C1019;
    const double C150 = C113 * C127;
    const double C152 = C113 * C128;
    const double C5141 = C113 * C318;
    const double C350 = C113 * C320;
    const double C560 = C113 * C528;
    const double C564 = C113 * C530;
    const double C572 = C113 * C540;
    const double C5607 = C113 * C1010;
    const double C30559 = C30557 + C30558;
    const double C322 = -(C30373 * (C30373 * C30475 + C30946 * ce) +
                          C30380 * C30473 + C30373 * C30946 * ce) /
                        C30223;
    const double C539 =
        (C30380 * C30426 + C30372 * (C30372 * C30431 + C30946 * ae) +
         C30372 * C30946 * ae) /
        C30350;
    const double C1011 =
        (C30372 * C30373 * C30431 + C30373 * C30946 * ae) / C30350;
    const double C1012 = -(C30372 * (C30373 * C30475 + C30946 * ce)) / C30223;
    const double C1417 = (C30372 * (C30431 + C30440 * C30519) +
                          (C30946 + C30552 * C30519) * ae) /
                         C30350;
    const double C2165 =
        (2 * (C30372 * C30431 + C30946 * ae) +
         C30372 * (C30431 + C30372 * (C30372 * C30440 + C30552 * ae) +
                   C30372 * C30552 * ae) +
         (C30946 + C30552 * C30614) * ae) /
        C30350;
    const double C308 = C30380 * C30941 + C30946 * C30519;
    const double C523 = C30380 * C30941 + C30946 * C30614;
    const double C1005 = C30372 * C30373 * C30946;
    const double C1274 =
        2 * C30373 * C30946 + C30373 * (C30946 + C30552 * C30519);
    const double C1407 = C30372 * (C30946 + C30552 * C30519);
    const double C1411 = C30373 * C30946 + C31012 * C30614;
    const double C2157 =
        2 * C30372 * C30946 + C30372 * (C30946 + C30552 * C30614);
    const double C119 = 3 * (C30941 + C30550 * C30389) +
                        C30380 * (2 * C30946 + C30380 * C30952);
    const double C310 = C30941 + C30550 * C30389 + C30952 * C30519;
    const double C311 = C30373 * (2 * C30946 + C30380 * C30952);
    const double C519 = C30372 * (2 * C30946 + C30380 * C30952);
    const double C524 = C30941 + C30550 * C30389 + C30952 * C30614;
    const double C1006 = C30372 * C30373 * C30952;
    const double C1421 =
        (C30373 * C30426 + C30372 * (C30372 * C30516 + C31005 * ae) +
         C30372 * C31005 * ae) /
        C30350;
    const double C2573 =
        (2 * (C30372 * C30516 + C31005 * ae) +
         C30372 * (C30516 + C30372 * (C30372 * C30651 + C30563 * ae) +
                   C30372 * C30563 * ae) +
         (C31005 + C30563 * C30614) * ae) /
        C30350;
    const double C1409 = C30373 * C30941 + C31005 * C30614;
    const double C2570 =
        2 * C30372 * C31005 + C30372 * (C31005 + C30563 * C30614);
    const double C1273 = 3 * (C30941 + C30550 * C30519) +
                         C30373 * (2 * C31005 + C30373 * C31007);
    const double C1410 = C30941 + C30550 * C30519 + C31007 * C30614;
    const double C1854 = C30372 * (2 * C31005 + C30373 * C31007);
    const double C31061 = C31057 + C31058;
    const double C2159 = 3 * (C30941 + C30550 * C30614) +
                         C30372 * (2 * C31059 + C30372 * C31062);
    const double C360 = C113 * C324;
    const double C563 = C31552 * C529;
    const double C19050 = C19033 * C529;
    const double C5610 = C31552 * C1415;
    const double C24882 = C19033 * C1415;
    const double C154 = C113 * C118;
    const double C358 = C113 * C309;
    const double C562 = C113 * C518;
    const double C5143 = C113 * C1272;
    const double C5609 = C113 * C1406;
    const double C30446 = C30380 * C30445;
    const double C30450 = 3 * C30445;
    const double C30544 = C30445 * ce;
    const double C30542 = C30373 * C30445;
    const double C31073 = C30372 * C30445;
    const double C30536 = C30440 + C30533;
    const double C30758 = C30754 / C30383;
    const double C30759 = 2 * C30751;
    const double C30756 = C30751 * ce;
    const double C31179 = C30372 * C30751;
    const double C30662 = C30373 * C30659;
    const double C30677 = 3 * C30659;
    const double C30673 = C30659 * ce;
    const double C31127 = C30372 * C30659;
    const double C30686 = C30680 / C30223;
    const double C30487 = C30380 * C30486;
    const double C30491 = -3 * C30486;
    const double C30584 = C30373 * C30486;
    const double C30636 = ae * C30486;
    const double C30634 = C30372 * C30486;
    const double C30497 = C30495 / C30223;
    const double C30629 = C30626 + C30480;
    const double C30887 = C30883 / C30383;
    const double C30888 = -2 * C30881;
    const double C30885 = ae * C30881;
    const double C30829 = C30372 * C30825;
    const double C30845 = -3 * C30825;
    const double C30841 = ae * C30825;
    const double C30857 = C30852 / C30223;
    const double C30855 = C30848 / C30223;
    const double C30593 = C30373 * C30591;
    const double C30592 = C30591 * ce;
    const double C30602 = C30380 * C30591;
    const double C31020 = C30591 * C30519;
    const double C31076 = C30591 * C30614;
    const double C30736 = C30373 * C30733;
    const double C30735 = C30733 * ce;
    const double C31130 = C30733 * C30614;
    const double C31208 = C30708 + C31205;
    const double C30777 = C30575 + C30776;
    const double C30804 = C30800 * ce;
    const double C31182 = C30800 * C30614;
    const double C31193 = C30575 + C31190;
    const double C31168 = C30372 * C31165;
    const double C104 = (-2 * C31612 * C31646) / C30350;
    const double C13436 = -C31646 / C30350;
    const double C31330 = C31329 * C31323;
    const double C31336 = C31329 / C30227;
    const double C31618 = C31335 * C31329;
    const double C31616 = C31329 / C30223;
    const double C299 = (C31327 * std::pow(C31323, 2)) / C30225 + C31328;
    const double C31338 = C31337 * C31323;
    const double C31622 = C31322 * C31337;
    const double C31620 = 2 * C31337;
    const double C31663 = C31337 / C31624;
    const double C111 = C31337 / C31656;
    const double C3111 = C31337 / C30240;
    const double C31649 = C31617 / C30223;
    const double C300 = (-2 * C31335 * C31617) / C30223;
    const double C31678 = C31647 / C30225;
    const double C1976 = (C31373 * std::pow(C31452, 2)) / C30225 + C31451;
    const double C31454 = C31453 * C31452;
    const double C31459 = C31453 / C30227;
    const double C31631 = C31453 / C30223;
    const double C31629 = C31335 * C31453;
    const double C31461 = C31460 * C31452;
    const double C31642 = C31450 * C31460;
    const double C31641 = 2 * C31460;
    const double C31675 = C31460 / C31624;
    const double C2155 = C31460 / C31656;
    const double C4067 = C31460 / C30240;
    const double C31671 = C31638 / C30223;
    const double C1977 = (-2 * C31335 * C31638) / C30223;
    const double C31685 = C31660 / C30225;
    const double C5022 = (-2 * C31612 * C31676) / C30350;
    const double C13438 = -C31676 / C30350;
    const double C30293 = C30287 + 0;
    const double C30260 = C30221 * C30241;
    const double C1174 =
        ((-C30222 / C30223) / C30240 -
         ((C31355 - (C30221 * C30241) / C30223) * de) / C30223) /
            C30240 -
        ((C30221 * ((-C30241 / C30223) / C30240 - (0 * de) / C30223) + C31418) *
         de) /
            C30223;
    const double C1175 =
        ((-C30241 / C30223) / C30240 - (0 * de) / C30223) / C30240 -
        (0 * de) / C30223;
    const double C2687 = (-C30241 / C30223) / C30240 - (0 * de) / C30223;
    const double C30273 = C30269 - C30263;
    const double C31413 = C31412 / C30225;
    const double C302 =
        (((0 - (C30221 * C30222) / C30223) * ce) / C30223 - (0 * de) / C30227) /
            (2 * C30223) +
        ((C30221 * (((C31355 - (C30221 * 2 * C30228) / C30223) * ce) / C30223 -
                    C30222 / C30227) +
          C31630) *
         ce) /
            C30223 +
        (0 * ce) / C30223 - C30228 / C30225;
    const double C31658 = 2 * C31627;
    const double C31420 = C31419 / C30223;
    const double C31668 = C31636 / C30227;
    const double C31687 = C31630 - C31665;
    const double C2680 = -C31665;
    const double C31696 = C31683 + C31409;
    const double C30296 = C30292 / C30240;
    const double C9290 =
        ((-C30352 / C30350) / C30354 -
         ((C31552 - (C30351 * C30357) / C30350) * be) / C30350) /
            C30354 -
        ((C30351 * ((-C30357 / C30350) / C30354 - (0 * be) / C30350) + C19033) *
         be) /
            C30350;
    const double C9291 =
        ((-C30357 / C30350) / C30354 - (0 * be) / C30350) / C30354 -
        (0 * be) / C30350;
    const double C19034 = (-C30352 / C30350) / C30354 -
                          ((C31552 - (C30351 * C30357) / C30350) * be) / C30350;
    const double C19035 = (-C30357 / C30350) / C30354 - (0 * be) / C30350;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C5148 = C5137 + C5138;
    const double C5147 = C5135 + C5136;
    const double C19064 = C19032 * C140;
    const double C19058 = C19032 * C139;
    const double C19054 = C19032 * C129;
    const double C19052 = C19032 * C126;
    const double C19048 = C19032 * C138;
    const double C19042 = C19032 * C137;
    const double C19038 = C19032 * C124;
    const double C19252 = C19032 * C339;
    const double C19248 = C19032 * C323;
    const double C19244 = C19032 * C338;
    const double C19240 = C19032 * C321;
    const double C19238 = C19032 * C337;
    const double C19234 = C19032 * C319;
    const double C19446 = C19032 * C553;
    const double C19438 = C19032 * C548;
    const double C19434 = C19032 * C529;
    const double C19430 = C19032 * C547;
    const double C19426 = C19032 * C527;
    const double C19956 = C19032 * C1020;
    const double C24884 = C19032 * C336;
    const double C24880 = C19032 * C317;
    const double C24878 = C19032 * C335;
    const double C24874 = C19032 * C315;
    const double C25500 = C19032 * C1019;
    const double C25496 = C19032 * C1009;
    const double C25742 = C19032 * C1290;
    const double C25738 = C19032 * C1278;
    const double C25908 = C19032 * C1415;
    const double C9289 =
        ((-(0 * be) / C30350) / C30354 -
         ((0 - (C30351 * C30352) / C30350) * be) / C30350) /
            C30354 -
        ((C30351 * ((-C30352 / C30350) / C30354 -
                    ((C31552 - (C30351 * C30357) / C30350) * be) / C30350) +
          C19032) *
         be) /
            C30350 +
        (-C30357 / C30350) / C30354 - (0 * be) / C30350;
    const double C30401 = -C30400;
    const double C30411 = C30409 / C30383;
    const double C30534 = C30531 / C30223;
    const double C30627 = C30624 / C30223;
    const double C30661 = -C30656;
    const double C30827 = -C30822;
    const double C30523 = -C30520;
    const double C30618 = -C30615;
    const double C130 = (3 * (C30426 + C30430 * C30389) +
                         C30380 * (2 * C30431 + C30380 * C30437)) /
                        C30350;
    const double C325 = (C30426 + C30430 * C30389 + C30437 * C30519) / C30350;
    const double C327 = (C30373 * (2 * C30431 + C30380 * C30437)) / C30350;
    const double C531 = (C30372 * (2 * C30431 + C30380 * C30437) +
                         (2 * C30946 + C30380 * C30952) * ae) /
                        C30350;
    const double C541 =
        (C30426 + C30430 * C30389 + C30372 * (C30372 * C30437 + C30952 * ae) +
         C30372 * C30952 * ae) /
        C30350;
    const double C1013 =
        (C30372 * C30373 * C30437 + C30373 * C30952 * ae) / C30350;
    const double C1286 =
        (2 * C30373 * C30437 + C30373 * (C30437 + C30445 * C30519)) / C30350;
    const double C30535 = C30532 / C30383;
    const double C1425 =
        (C30373 * C30431 + C30372 * (C30372 * C30530 + C31012 * ae) +
         C30372 * C31012 * ae) /
        C30350;
    const double C1564 = C31552 * C1292;
    const double C20486 = C19032 * C1292;
    const double C31069 = C31065 + C31066;
    const double C1562 = C31552 * C1282;
    const double C20482 = C19032 * C1282;
    const double C1280 = (3 * (C30426 + C30430 * C30519) +
                          C30373 * (2 * C30516 + C30373 * C30524)) /
                         C30350;
    const double C1423 =
        (C30426 + C30430 * C30519 + C30372 * (C30372 * C30524 + C31007 * ae) +
         C30372 * C31007 * ae) /
        C30350;
    const double C1857 = (C30372 * (2 * C30516 + C30373 * C30524) +
                          (2 * C31005 + C30373 * C31007) * ae) /
                         C30350;
    const double C30660 = C30655 / C30223;
    const double C31123 = C31119 + C31120;
    const double C31150 = C30372 * C31146;
    const double C31156 = 2 * C31146;
    const double C131 =
        (-3 * (C30466 * C30389 + C30473)) / C30223 +
        C30380 * ((-2 * C30475) / C30223 - (C30380 * C30478) / C30223);
    const double C326 = -(C30373 * (C30373 * C30478 + C30952 * ce) +
                          C30466 * C30389 + C30473 + C30373 * C30952 * ce) /
                        C30223;
    const double C328 =
        C30373 * ((-2 * C30475) / C30223 - (C30380 * C30478) / C30223) -
        ((2 * C30946 + C30380 * C30952) * ce) / C30223;
    const double C532 =
        C30372 * ((-2 * C30475) / C30223 - (C30380 * C30478) / C30223);
    const double C542 = -(C30478 * C30614 + C30466 * C30389 + C30473) / C30223;
    const double C1014 = -(C30372 * (C30373 * C30478 + C30952 * ce)) / C30223;
    const double C2162 = (-2 * C30372 * C30478) / C30223 -
                         (C30372 * (C30486 * C30614 + C30478)) / C30223;
    const double C30484 = C30482 / C30223;
    const double C30572 = C30570 + C30571;
    const double C30628 = C30625 / C30383;
    const double C2460 = C31552 * C2175;
    const double C19448 = C19033 * C2175;
    const double C21542 = C19032 * C2175;
    const double C2459 = C113 * C2164;
    const double C30566 = C30373 * C30564;
    const double C30705 = -2 * C30564;
    const double C30783 = ae * C30564;
    const double C30781 = C30372 * C30564;
    const double C2169 =
        (-3 * (C30466 * C30614 + C30473)) / C30223 +
        C30372 * ((-2 * C30611) / C30223 - (C30372 * C30619) / C30223);
    const double C30828 = C30824 / C30223;
    const double C30826 = C30821 / C30223;
    const double C30585 = C30555 * ce;
    const double C30958 = C30380 * C30555;
    const double C30964 = 3 * C30555;
    const double C31019 = C30373 * C30555;
    const double C31075 = C30372 * C30555;
    const double C31074 = C30555 * ae;
    const double C1419 = (C30372 * (C30437 + C30445 * C30519) +
                          (C30952 + C30555 * C30519) * ae) /
                         C30350;
    const double C2163 =
        (2 * (C30372 * C30437 + C30952 * ae) +
         C30372 * (C30437 + C30372 * (C30372 * C30445 + C30555 * ae) +
                   C30372 * C30555 * ae) +
         (C30952 + C30555 * C30614) * ae) /
        C30350;
    const double C1276 =
        2 * C30373 * C30952 + C30373 * (C30952 + C30555 * C30519);
    const double C1408 = C30372 * (C30952 + C30555 * C30519);
    const double C2156 =
        2 * C30372 * C30952 + C30372 * (C30952 + C30555 * C30614);
    const double C30579 = C30577 * ce;
    const double C31109 = 2 * C30577;
    const double C31181 = C30372 * C30577;
    const double C31180 = C30577 * ae;
    const double C2575 =
        (2 * (C30372 * C30530 + C31012 * ae) +
         C30372 * (C30530 + C30372 * (C30372 * C30751 + C30577 * ae) +
                   C30372 * C30577 * ae) +
         (C31012 + C30577 * C30614) * ae) /
        C30350;
    const double C2571 =
        2 * C30372 * C31012 + C30372 * (C31012 + C30577 * C30614);
    const double C30578 = C30574 + C30576;
    const double C31014 = C30552 + C31013;
    const double C31070 = C30552 + C31068;
    const double C31194 = 2 * C31189;
    const double C31192 = C31189 * ae;
    const double C31191 = C31187 + C31188;
    const double C30709 = C30703 * ce;
    const double C31094 = C30373 * C30703;
    const double C31098 = 3 * C30703;
    const double C31129 = C30372 * C30703;
    const double C31128 = C30703 * ae;
    const double C6612 =
        (2 * (C30372 * C30524 + C31007 * ae) +
         C30372 * (C30524 + C30372 * (C30372 * C30659 + C30703 * ae) +
                   C30372 * C30703 * ae) +
         (C31007 + C30703 * C30614) * ae) /
        C30350;
    const double C6608 =
        2 * C30372 * C31007 + C30372 * (C31007 + C30703 * C30614);
    const double C31124 = C30563 + C31122;
    const double C31209 = 2 * C31204;
    const double C31207 = C31204 * ae;
    const double C31206 = C31202 + C31203;
    const double C30714 = C30373 * C30711;
    const double C30723 = -2 * C30711;
    const double C30784 = C30711 * C30614;
    const double C30906 = ae * C30711;
    const double C30904 = C30372 * C30711;
    const double C31151 = C30372 * C31148;
    const double C31162 = 3 * C31148;
    const double C31160 = C31148 * ae;
    const double C31167 = C30372 * C31163;
    const double C30415 = -C30414;
    const double C30687 = -C30681;
    const double C30762 = C30757 / C30223;
    const double C30886 = C30882 / C30223;
    const double C30856 = -C30849;
    const double C30457 = C30380 * C30456;
    const double C30545 = C30456 * C30519;
    const double C30688 = C30373 * C30684;
    const double C30763 = C30451 + C30760;
    const double C30500 = C30380 * C30499;
    const double C30588 = C30373 * C30499;
    const double C30637 = C30499 * C30614;
    const double C30734 = C30373 * C30731;
    const double C30907 = C30731 * C30614;
    const double C30806 = C30803 + C30799;
    const double C30889 = C30884 + C30492;
    const double C30858 = C30372 * C30853;
    const double C166 = C148 + C149;
    const double C5149 = C5139 + C5140;
    const double C376 = C348 + C349;
    const double C582 = C558 + C559;
    const double C5613 = C5605 + C5606;
    const double C167 = C150 + C151;
    const double C168 = C152 + C153;
    const double C5150 = C5141 + C5142;
    const double C377 = C350 + C351;
    const double C583 = C560 + C561;
    const double C585 = C564 + C565;
    const double C589 = C572 + C573;
    const double C5614 = C5607 + C5608;
    const double C1279 =
        (-2 * (C30373 * C30473 + C30941 * ce)) / C30223 -
        (C30373 * (C30373 * C30559 + C30473 + C30373 * C30550 * ce)) / C30223 -
        ((C30941 + C30550 * C30519) * ce) / C30223;
    const double C1416 =
        -(C30372 * (C30373 * C30559 + C30473 + C31005 * ce)) / C30223;
    const double C1422 =
        -(C30559 * C30614 + C30373 * C30473 + C30941 * ce) / C30223;
    const double C2574 = (-2 * C30372 * C30559) / C30223 -
                         (C30372 * (C30564 * C30614 + C30559)) / C30223;
    const double C354 = C113 * C322;
    const double C571 = C31552 * C539;
    const double C19442 = C19032 * C539;
    const double C19428 = C19033 * C539;
    const double C1026 = C31552 * C1011;
    const double C19232 = C19033 * C1011;
    const double C19952 = C19032 * C1011;
    const double C1029 = C113 * C1012;
    const double C1738 = C31552 * C1417;
    const double C19242 = C19033 * C1417;
    const double C20688 = C19032 * C1417;
    const double C2458 = C31552 * C2165;
    const double C19444 = C19033 * C2165;
    const double C21538 = C19032 * C2165;
    const double C352 = C113 * C308;
    const double C570 = C113 * C523;
    const double C1025 = C113 * C1005;
    const double C1561 = C113 * C1274;
    const double C1737 = C113 * C1407;
    const double C2333 = C113 * C1411;
    const double C2457 = C113 * C2157;
    const double C156 = C113 * C119;
    const double C362 = C113 * C310;
    const double C366 = C113 * C311;
    const double C566 = C113 * C519;
    const double C574 = C113 * C524;
    const double C1031 = C113 * C1006;
    const double C5936 = C31552 * C1421;
    const double C25498 = C19033 * C1421;
    const double C25916 = C19032 * C1421;
    const double C6982 = C31552 * C2573;
    const double C25914 = C19033 * C2573;
    const double C27236 = C19032 * C2573;
    const double C5935 = C113 * C1409;
    const double C6981 = C113 * C2570;
    const double C5797 = C113 * C1273;
    const double C5939 = C113 * C1410;
    const double C5931 = C113 * C1854;
    const double C2168 =
        (3 * (C30426 + C30372 * C31061 + C31059 * ae) +
         C30372 * (2 * C31061 +
                   C30372 * (C30430 + C30372 * (C30372 * C30435 + C30511 * ae) +
                             C30372 * C30511 * ae) +
                   C31062 * ae) +
         (2 * C31059 + C30372 * C31062) * ae) /
        C30350;
    const double C382 = C360 + C361;
    const double C169 = C154 + C155;
    const double C381 = C358 + C359;
    const double C584 = C562 + C563;
    const double C5151 = C5143 + C5144;
    const double C5615 = C5609 + C5610;
    const double C30447 = C30442 + C30446;
    const double C30546 = C30544 / C30383;
    const double C1284 = (3 * (C30431 + C30440 * C30519) +
                          C30373 * (2 * C30530 + C30373 * C30536)) /
                         C30350;
    const double C30761 = C30756 / C30223;
    const double C30665 = C30658 + C30662;
    const double C30679 = C30673 / C30383;
    const double C30689 = -C30686;
    const double C30488 = C30487 / C30223;
    const double C30494 = C30491 / C30223;
    const double C30638 = C30636 / C30383;
    const double C2171 =
        (-3 * (C30480 * C30614 + C30475)) / C30223 +
        C30372 * ((-2 * C30623) / C30223 - (C30372 * C30629) / C30223);
    const double C30892 = C30888 / C30223;
    const double C30890 = C30885 / C30223;
    const double C30832 = C30829 / C30223;
    const double C30851 = C30845 / C30223;
    const double C30847 = C30841 / C30383;
    const double C30859 = -C30855;
    const double C30595 = C30593 * ce;
    const double C30603 = C30601 + C30602;
    const double C31021 = C30555 + C31020;
    const double C31078 = C30555 + C31076;
    const double C30739 = C30728 + C30736;
    const double C30738 = C30735 / C30223;
    const double C31132 = C30703 + C31130;
    const double C31211 = C30372 * C31208;
    const double C30801 = C30777 * ce;
    const double C31110 = C30373 * C30777;
    const double C31184 = C30577 + C31182;
    const double C31196 = C30372 * C31193;
    const double C31170 = C31166 + C31168;
    const double C31331 = C31330 / C30225;
    const double C31650 = 2 * C31618;
    const double C31339 = C31338 / C30223;
    const double C31654 = C31622 / C30227;
    const double C31679 = C31616 - C31649;
    const double C2812 = -C31649;
    const double C31693 = C31678 + C31328;
    const double C31455 = C31454 / C30225;
    const double C31661 = 2 * C31629;
    const double C31462 = C31461 / C30223;
    const double C31674 = C31642 / C30227;
    const double C31690 = C31631 - C31671;
    const double C3547 = -C31671;
    const double C31697 = C31685 + C31451;
    const double C30297 = C30293 * de;
    const double C30268 = C30260 / C30223;
    const double C30277 = C30221 * C30273;
    const double C30306 = C30273 / C30240;
    const double C31414 = C31409 - C31413;
    const double C31684 = C31658 / C30223;
    const double C31421 = C31417 - C31420;
    const double C31698 = C31687 / C30240;
    const double C1173 =
        ((-(0 * de) / C30223) / C30240 -
         ((0 - (C30221 * C30222) / C30223) * de) / C30223) /
            C30240 -
        ((C30221 * ((-C30222 / C30223) / C30240 -
                    ((C31355 - (C30221 * C30241) / C30223) * de) / C30223) +
          C2680) *
         de) /
            C30223 +
        (-C30241 / C30223) / C30240 - (0 * de) / C30223;
    const double C19067 = C19034 * C119;
    const double C19057 = C19034 * C128;
    const double C19053 = C19034 * C118;
    const double C19051 = C19034 * C117;
    const double C19047 = C19034 * C127;
    const double C19041 = C19034 * C125;
    const double C19037 = C19034 * C116;
    const double C19257 = C19034 * C310;
    const double C19251 = C19034 * C324;
    const double C19247 = C19034 * C309;
    const double C19243 = C19034 * C322;
    const double C19239 = C19034 * C308;
    const double C19237 = C19034 * C320;
    const double C19233 = C19034 * C307;
    const double C19455 = C19034 * C524;
    const double C19445 = C19034 * C540;
    const double C19441 = C19034 * C523;
    const double C19437 = C19034 * C530;
    const double C19433 = C19034 * C518;
    const double C19429 = C19034 * C528;
    const double C19425 = C19034 * C517;
    const double C19605 = C19034 * C311;
    const double C19751 = C19034 * C519;
    const double C19961 = C19034 * C1006;
    const double C19955 = C19034 * C1012;
    const double C19951 = C19034 * C1005;
    const double C20481 = C19034 * C1274;
    const double C20687 = C19034 * C1407;
    const double C21397 = C19034 * C1411;
    const double C21541 = C19034 * C2164;
    const double C21537 = C19034 * C2157;
    const double C24883 = C19034 * C318;
    const double C24879 = C19034 * C306;
    const double C24877 = C19034 * C316;
    const double C24873 = C19034 * C305;
    const double C25499 = C19034 * C1010;
    const double C25495 = C19034 * C1004;
    const double C25743 = C19034 * C1273;
    const double C25737 = C19034 * C1272;
    const double C25921 = C19034 * C1410;
    const double C25915 = C19034 * C1409;
    const double C25907 = C19034 * C1406;
    const double C26395 = C19034 * C1854;
    const double C27235 = C19034 * C2570;
    const double C19055 = C19035 * C519;
    const double C19049 = C19035 * C518;
    const double C19045 = C19035 * C530;
    const double C19043 = C19035 * C528;
    const double C19039 = C19035 * C517;
    const double C19249 = C19035 * C1006;
    const double C19241 = C19035 * C1407;
    const double C19235 = C19035 * C1012;
    const double C19231 = C19035 * C1005;
    const double C19447 = C19035 * C2164;
    const double C19443 = C19035 * C2157;
    const double C19435 = C19035 * C524;
    const double C19431 = C19035 * C540;
    const double C19427 = C19035 * C523;
    const double C19953 = C19035 * C1411;
    const double C24881 = C19035 * C1406;
    const double C24875 = C19035 * C1010;
    const double C24871 = C19035 * C1004;
    const double C25497 = C19035 * C1409;
    const double C25735 = C19035 * C1854;
    const double C25913 = C19035 * C2570;
    const double C25905 = C19035 * C1410;
    const double C175 = C165 * C31355;
    const double C347 = C165 * C31696;
    const double C719 = C165 * C31630;
    const double C1178 = C165 * C1167;
    const double C2690 = C165 * C2680;
    const double C174 = C164 * C114;
    const double C346 = C164 * C302;
    const double C718 = C164 * C711;
    const double C30402 = C30401 / C30350;
    const double C30537 = -C30534;
    const double C30630 = -C30627;
    const double C30664 = C30661 / C30350;
    const double C30831 = C30827 / C30350;
    const double C30525 = C30523 / C30350;
    const double C30620 = C30618 / C30350;
    const double C157 = C31552 * C130;
    const double C19068 = C19032 * C130;
    const double C363 = C31552 * C325;
    const double C19258 = C19032 * C325;
    const double C367 = C31552 * C327;
    const double C19606 = C19032 * C327;
    const double C567 = C31552 * C531;
    const double C19056 = C19033 * C531;
    const double C19752 = C19032 * C531;
    const double C575 = C31552 * C541;
    const double C19456 = C19032 * C541;
    const double C19436 = C19033 * C541;
    const double C1032 = C31552 * C1013;
    const double C19250 = C19033 * C1013;
    const double C19962 = C19032 * C1013;
    const double C1572 = C31552 * C1286;
    const double C2334 = C31552 * C1425;
    const double C19954 = C19033 * C1425;
    const double C21398 = C19032 * C1425;
    const double C5798 = C31552 * C1280;
    const double C25744 = C19032 * C1280;
    const double C5940 = C31552 * C1423;
    const double C25922 = C19032 * C1423;
    const double C25906 = C19033 * C1423;
    const double C5932 = C31552 * C1857;
    const double C25736 = C19033 * C1857;
    const double C26396 = C19032 * C1857;
    const double C30663 = -C30660;
    const double C31152 = C30430 + C31150;
    const double C158 = C113 * C131;
    const double C19063 = C19034 * C131;
    const double C364 = C113 * C326;
    const double C19261 = C19034 * C326;
    const double C370 = C113 * C328;
    const double C19609 = C19034 * C328;
    const double C568 = C113 * C532;
    const double C19059 = C19035 * C532;
    const double C19747 = C19034 * C532;
    const double C576 = C113 * C542;
    const double C19451 = C19034 * C542;
    const double C19439 = C19035 * C542;
    const double C1035 = C113 * C1014;
    const double C19253 = C19035 * C1014;
    const double C19965 = C19034 * C1014;
    const double C2463 = C113 * C2162;
    const double C19449 = C19035 * C2162;
    const double C1283 =
        (-2 * (C30373 * C30475 + C30946 * ce)) / C30223 -
        (C30373 * (C30373 * C30572 + C30475 + C30373 * C30552 * ce)) / C30223 -
        ((C30946 + C30552 * C30519) * ce) / C30223;
    const double C1418 =
        -(C30372 * (C30373 * C30572 + C30475 + C31012 * ce)) / C30223;
    const double C1426 =
        -(C30572 * C30614 + C30373 * C30475 + C30946 * ce) / C30223;
    const double C2466 = C2459 + C2460;
    const double C30567 = C30566 + C30466;
    const double C30710 = C30705 / C30223;
    const double C30785 = C30783 / C30383;
    const double C30830 = -C30826;
    const double C30586 = C30584 + C30585;
    const double C30959 = C30957 + C30958;
    const double C1429 =
        (C30373 * C30437 + C30372 * (C30372 * C30542 + C31019 * ae) +
         C30372 * C31019 * ae) /
        C30350;
    const double C2577 =
        (2 * (C30372 * C30542 + C31019 * ae) +
         C30372 * (C30542 + C30372 * (C30372 * C30373 * C30456 + C30593 * ae) +
                   C30372 * C30593 * ae) +
         (C31019 + C30593 * C30614) * ae) /
        C30350;
    const double C1413 = C30373 * C30952 + C31019 * C30614;
    const double C2572 =
        2 * C30372 * C31019 + C30372 * (C31019 + C30593 * C30614);
    const double C31077 = C31073 + C31074;
    const double C1746 = C31552 * C1419;
    const double C19256 = C19033 * C1419;
    const double C2462 = C31552 * C2163;
    const double C19454 = C19033 * C2163;
    const double C1571 = C113 * C1276;
    const double C1745 = C113 * C1408;
    const double C19255 = C19035 * C1408;
    const double C2461 = C113 * C2156;
    const double C19453 = C19035 * C2156;
    const double C31183 = C31179 + C31180;
    const double C15794 = C31552 * C2575;
    const double C21396 = C19033 * C2575;
    const double C15793 = C113 * C2571;
    const double C21395 = C19035 * C2571;
    const double C30580 = C30373 * C30578;
    const double C30797 = -2 * C30578;
    const double C30875 = ae * C30578;
    const double C30873 = C30372 * C30578;
    const double C2576 = (-2 * C30372 * C30572) / C30223 -
                         (C30372 * (C30578 * C30614 + C30572)) / C30223;
    const double C1427 =
        (C30431 + C30440 * C30519 + C30372 * (C30372 * C30536 + C31014 * ae) +
         C30372 * C31014 * ae) /
        C30350;
    const double C1859 = (C30372 * (2 * C30530 + C30373 * C30536) +
                          (2 * C31012 + C30373 * C31014) * ae) /
                         C30350;
    const double C1275 = 3 * (C30946 + C30552 * C30519) +
                         C30373 * (2 * C31012 + C30373 * C31014);
    const double C1412 = C30946 + C30552 * C30519 + C31014 * C30614;
    const double C1855 = C30372 * (2 * C31012 + C30373 * C31014);
    const double C6874 =
        2 * C30372 * C31014 + C30372 * (C31014 + C30777 * C30614);
    const double C2170 =
        (3 * (C30431 + C30372 * C31069 + C31067 * ae) +
         C30372 * (2 * C31069 +
                   C30372 * (C30440 + C30372 * (C30372 * C30451 + C30575 * ae) +
                             C30372 * C30575 * ae) +
                   C31070 * ae) +
         (2 * C31067 + C30372 * C31070) * ae) /
        C30350;
    const double C2160 = 3 * (C30946 + C30552 * C30614) +
                         C30372 * (2 * C31067 + C30372 * C31070);
    const double C31195 = C30372 * C31191;
    const double C30713 = C30709 / C30223;
    const double C31095 = C31093 + C31094;
    const double C31131 = C31127 + C31128;
    const double C6986 = C31552 * C6612;
    const double C25924 = C19033 * C6612;
    const double C6985 = C113 * C6608;
    const double C25923 = C19035 * C6608;
    const double C6613 =
        (3 * (C30516 + C30372 * C31123 + C31121 * ae) +
         C30372 * (2 * C31123 +
                   C30372 * (C30651 + C30372 * (C30372 * C30674 + C30708 * ae) +
                             C30372 * C30708 * ae) +
                   C31124 * ae) +
         (2 * C31121 + C30372 * C31124) * ae) /
        C30350;
    const double C6609 = 3 * (C31005 + C30563 * C30614) +
                         C30372 * (2 * C31121 + C30372 * C31124);
    const double C31210 = C30372 * C31206;
    const double C30715 = C30714 + C30470;
    const double C30730 = C30723 / C30223;
    const double C30786 = C30784 + C30564;
    const double C30909 = C30906 / C30383;
    const double C30910 = -2 * C30904;
    const double C30908 = ae * C30904;
    const double C31153 = C31149 + C31151;
    const double C31169 = C30435 + C31167;
    const double C30416 = C30415 / C30350;
    const double C30690 = C30687 / C30350;
    const double C30765 = -C30762;
    const double C30891 = -C30886;
    const double C30860 = C30856 / C30350;
    const double C30458 = C30453 + C30457;
    const double C30547 = C30445 + C30545;
    const double C30691 = C30683 + C30688;
    const double C30766 = C30373 * C30763;
    const double C6875 =
        (2 * (C30372 * C30536 + C31014 * ae) +
         C30372 * (C30536 + C30372 * (C30372 * C30763 + C30777 * ae) +
                   C30372 * C30777 * ae) +
         (C31014 + C30777 * C30614) * ae) /
        C30350;
    const double C30501 = C30500 / C30223;
    const double C30594 = C30588 + C30592;
    const double C30639 = C30637 + C30486;
    const double C30737 = C30734 + C30483;
    const double C30911 = C30907 + C30711;
    const double C30807 = C30373 * C30806;
    const double C30876 = C30806 * C30614;
    const double C30893 = C30372 * C30889;
    const double C30861 = C30858 / C30223;
    const double C176 = C166 * C114;
    const double C356 = C166 * C302;
    const double C722 = C166 * C711;
    const double C389 = C376 * C303;
    const double C720 = C376 * C712;
    const double C1179 = C376 * C1174;
    const double C2691 = C376 * C2687;
    const double C13441 = C376 * C114;
    const double C13595 = C376 * C302;
    const double C13891 = C376 * C711;
    const double C594 = C582 * C114;
    const double C1028 = C582 * C711;
    const double C3698 = C582 * C302;
    const double C177 = C167 * C31355;
    const double C357 = C167 * C31696;
    const double C723 = C167 * C31630;
    const double C1184 = C167 * C1167;
    const double C2694 = C167 * C2680;
    const double C178 = C168 * C31355;
    const double C368 = C168 * C31696;
    const double C727 = C168 * C31630;
    const double C1190 = C168 * C1167;
    const double C2698 = C168 * C2680;
    const double C721 = C377 * C31418;
    const double C1180 = C377 * C1168;
    const double C2692 = C377 * C31418;
    const double C13442 = C377 * C31355;
    const double C13596 = C377 * C31696;
    const double C13892 = C377 * C31630;
    const double C14384 = C377 * C1167;
    const double C16062 = C377 * C2680;
    const double C595 = C583 * C31355;
    const double C1027 = C583 * C31630;
    const double C1734 = C583 * C1167;
    const double C2982 = C583 * C2680;
    const double C3697 = C583 * C31696;
    const double C597 = C585 * C31355;
    const double C1033 = C585 * C31630;
    const double C1742 = C585 * C1167;
    const double C2986 = C585 * C2680;
    const double C3703 = C585 * C31696;
    const double C601 = C589 * C31355;
    const double C2332 = C589 * C31630;
    const double C2990 = C589 * C2680;
    const double C5145 = C113 * C1279;
    const double C25741 = C19034 * C1279;
    const double C5611 = C113 * C1416;
    const double C24885 = C19035 * C1416;
    const double C25911 = C19034 * C1416;
    const double C5937 = C113 * C1422;
    const double C25501 = C19035 * C1422;
    const double C25919 = C19034 * C1422;
    const double C6983 = C113 * C2574;
    const double C25917 = C19035 * C2574;
    const double C27239 = C19034 * C2574;
    const double C379 = C354 + C355;
    const double C1044 = C1029 + C1030;
    const double C378 = C352 + C353;
    const double C588 = C570 + C571;
    const double C1043 = C1025 + C1026;
    const double C1575 = C1561 + C1562;
    const double C1749 = C1737 + C1738;
    const double C2465 = C2457 + C2458;
    const double C5949 = C5935 + C5936;
    const double C6989 = C6981 + C6982;
    const double C725 = C382 * C31418;
    const double C1186 = C382 * C1168;
    const double C2696 = C382 * C31418;
    const double C13443 = C382 * C31355;
    const double C13602 = C382 * C31696;
    const double C13896 = C382 * C31630;
    const double C14390 = C382 * C1167;
    const double C16066 = C382 * C2680;
    const double C179 = C169 * C114;
    const double C369 = C169 * C302;
    const double C728 = C169 * C711;
    const double C393 = C381 * C303;
    const double C724 = C381 * C712;
    const double C1185 = C381 * C1174;
    const double C2695 = C381 * C2687;
    const double C13444 = C381 * C114;
    const double C13603 = C381 * C302;
    const double C13897 = C381 * C711;
    const double C596 = C584 * C114;
    const double C1034 = C584 * C711;
    const double C3704 = C584 * C302;
    const double C133 = (4 * (2 * C30431 + C30380 * C30437) +
                         C30380 * (3 * C30437 + C30380 * C30447)) /
                        C30350;
    const double C329 =
        (2 * C30431 + C30380 * C30437 + C30447 * C30519) / C30350;
    const double C331 = (C30373 * (3 * C30437 + C30380 * C30447)) / C30350;
    const double C6058 = C31552 * C1284;
    const double C30764 = -C30761;
    const double C5790 = (4 * (2 * C30516 + C30373 * C30524) +
                          C30373 * (3 * C30524 + C30373 * C30665)) /
                         C30350;
    const double C30692 = C30689 / C30350;
    const double C30489 = C30484 - C30488;
    const double C21543 = C19035 * C2171;
    const double C30894 = -C30890;
    const double C30835 = C30828 - C30832;
    const double C30862 = C30859 / C30350;
    const double C30643 = C30603 * ce;
    const double C30965 = C30380 * C30603;
    const double C31081 = C30373 * C30603;
    const double C1277 = 3 * (C30952 + C30555 * C30519) +
                         C30373 * (2 * C31019 + C30373 * C31021);
    const double C1414 = C30952 + C30555 * C30519 + C31021 * C30614;
    const double C1856 = C30372 * (2 * C31019 + C30373 * C31021);
    const double C2161 = 3 * (C30952 + C30555 * C30614) +
                         C30372 * (2 * C31075 + C30372 * C31078);
    const double C30741 = C30739 * ce;
    const double C31099 = C30373 * C30739;
    const double C6610 = 3 * (C31007 + C30703 * C30614) +
                         C30372 * (2 * C31129 + C30372 * C31132);
    const double C31213 = C31209 + C31211;
    const double C30805 = C30801 / C30223;
    const double C31111 = C31109 + C31110;
    const double C10914 = 3 * (C31012 + C30577 * C30614) +
                          C30372 * (2 * C31181 + C30372 * C31184);
    const double C31198 = C31194 + C31196;
    const double C31172 = C30372 * C31170;
    const double C31332 = C31328 - C31331;
    const double C31680 = C31650 / C30223;
    const double C31340 = C31336 - C31339;
    const double C31694 = C31679 / C30240;
    const double C31456 = C31451 - C31455;
    const double C31686 = C31661 / C30223;
    const double C31463 = C31459 - C31462;
    const double C31700 = C31690 / C30240;
    const double C30299 = C30297 / C30223;
    const double C30272 = C31355 - C30268;
    const double C30281 = C30277 + C31418;
    const double C30309 = C30306 - C30308;
    const double C3129 = C168 * C31414;
    const double C3123 = C167 * C31414;
    const double C3117 = C165 * C31414;
    const double C3445 = C585 * C31414;
    const double C3439 = C583 * C31414;
    const double C16566 = C382 * C31414;
    const double C16560 = C377 * C31414;
    const double C31633 = C31414 * C31408;
    const double C31667 = C31635 + C31414;
    const double C394 = C382 * C31684;
    const double C390 = C377 * C31684;
    const double C3125 = C382 * C31421;
    const double C3119 = C377 * C31421;
    const double C31637 = C31421 / C30240;
    const double C31634 = C31421 * C31408;
    const double C1540 = C31698 - (C31414 * C31410) / C30223;
    const double C1191 = C169 * C1173;
    const double C1183 = C166 * C1173;
    const double C1177 = C164 * C1173;
    const double C1743 = C584 * C1173;
    const double C1735 = C582 * C1173;
    const double C14391 = C381 * C1173;
    const double C14383 = C376 * C1173;
    const double C19079 = C19057 + C19058;
    const double C19077 = C19053 + C19054;
    const double C19076 = C19051 + C19052;
    const double C19074 = C19047 + C19048;
    const double C19071 = C19041 + C19042;
    const double C19069 = C19037 + C19038;
    const double C19273 = C19251 + C19252;
    const double C19271 = C19247 + C19248;
    const double C19269 = C19243 + C19244;
    const double C19267 = C19239 + C19240;
    const double C19266 = C19237 + C19238;
    const double C19264 = C19233 + C19234;
    const double C19467 = C19445 + C19446;
    const double C19465 = C19441 + C19442;
    const double C19463 = C19437 + C19438;
    const double C19461 = C19433 + C19434;
    const double C19459 = C19429 + C19430;
    const double C19457 = C19425 + C19426;
    const double C19969 = C19955 + C19956;
    const double C19967 = C19951 + C19952;
    const double C20488 = C20481 + C20482;
    const double C20694 = C20687 + C20688;
    const double C21547 = C21541 + C21542;
    const double C21545 = C21537 + C21538;
    const double C24893 = C24883 + C24884;
    const double C24891 = C24879 + C24880;
    const double C24890 = C24877 + C24878;
    const double C24888 = C24873 + C24874;
    const double C25505 = C25499 + C25500;
    const double C25503 = C25495 + C25496;
    const double C25752 = C25737 + C25738;
    const double C25934 = C25915 + C25916;
    const double C25930 = C25907 + C25908;
    const double C27243 = C27235 + C27236;
    const double C19075 = C19049 + C19050;
    const double C19073 = C19045 + C19046;
    const double C19072 = C19043 + C19044;
    const double C19070 = C19039 + C19040;
    const double C19268 = C19241 + C19242;
    const double C19265 = C19235 + C19236;
    const double C19263 = C19231 + C19232;
    const double C19468 = C19447 + C19448;
    const double C19466 = C19443 + C19444;
    const double C19460 = C19431 + C19432;
    const double C19458 = C19427 + C19428;
    const double C24892 = C24881 + C24882;
    const double C24889 = C24875 + C24876;
    const double C24887 = C24871 + C24872;
    const double C25504 = C25497 + C25498;
    const double C25933 = C25913 + C25914;
    const double C30403 = C30402 - C30396;
    const double C30538 = C30537 / C30350;
    const double C30631 = C30630 / C30350;
    const double C30667 = C30664 - C30657;
    const double C30834 = C30831 - C30823;
    const double C30526 = C30525 - C30521;
    const double C30621 = C30620 - C30616;
    const double C170 = C156 + C157;
    const double C19084 = C19067 + C19068;
    const double C383 = C362 + C363;
    const double C19276 = C19257 + C19258;
    const double C385 = C366 + C367;
    const double C19612 = C19605 + C19606;
    const double C586 = C566 + C567;
    const double C19078 = C19055 + C19056;
    const double C19756 = C19751 + C19752;
    const double C590 = C574 + C575;
    const double C19472 = C19455 + C19456;
    const double C19462 = C19435 + C19436;
    const double C1045 = C1031 + C1032;
    const double C19272 = C19249 + C19250;
    const double C19972 = C19961 + C19962;
    const double C2343 = C2333 + C2334;
    const double C19968 = C19953 + C19954;
    const double C21404 = C21397 + C21398;
    const double C5805 = C5797 + C5798;
    const double C25755 = C25743 + C25744;
    const double C5951 = C5939 + C5940;
    const double C25937 = C25921 + C25922;
    const double C25929 = C25905 + C25906;
    const double C5947 = C5931 + C5932;
    const double C25751 = C25735 + C25736;
    const double C26403 = C26395 + C26396;
    const double C30666 = C30663 / C30350;
    const double C31154 = C31152 + C31147;
    const double C171 = C158 + C159;
    const double C19082 = C19063 + C19064;
    const double C1563 = C113 * C1283;
    const double C20485 = C19034 * C1283;
    const double C1739 = C113 * C1418;
    const double C19245 = C19035 * C1418;
    const double C20691 = C19034 * C1418;
    const double C2335 = C113 * C1426;
    const double C19957 = C19035 * C1426;
    const double C21401 = C19034 * C1426;
    const double C2470 = C2466 * C31355;
    const double C30568 = C30567 + C30565;
    const double C30833 = C30830 / C30350;
    const double C1287 =
        (-2 * (C30373 * C30478 + C30952 * ce)) / C30223 -
        (C30373 * (C30373 * C30586 + C30478 + C30373 * C30555 * ce)) / C30223 -
        ((C30952 + C30555 * C30519) * ce) / C30223;
    const double C1420 =
        -(C30372 * (C30373 * C30586 + C30478 + C31019 * ce)) / C30223;
    const double C1430 =
        -(C30586 * C30614 + C30373 * C30478 + C30952 * ce) / C30223;
    const double C536 = (C30372 * (3 * C30437 + C30380 * C30447) +
                         (3 * C30952 + C30380 * C30959) * ae) /
                        C30350;
    const double C544 =
        (2 * C30431 + C30380 * C30437 +
         C30372 * (C30372 * C30447 + C30959 * ae) + C30372 * C30959 * ae) /
        C30350;
    const double C1015 =
        (C30372 * C30373 * C30447 + C30373 * C30959 * ae) / C30350;
    const double C120 = 4 * (2 * C30946 + C30380 * C30952) +
                        C30380 * (3 * C30952 + C30380 * C30959);
    const double C312 = 2 * C30946 + C30380 * C30952 + C30959 * C30519;
    const double C313 = C30373 * (3 * C30952 + C30380 * C30959);
    const double C521 = C30372 * (3 * C30952 + C30380 * C30959);
    const double C525 = 2 * C30946 + C30380 * C30952 + C30959 * C30614;
    const double C1007 = C30372 * C30373 * C30959;
    const double C1550 =
        2 * C30373 * C30959 + C30373 * (C30959 + C30603 * C30519);
    const double C1728 = C30372 * (C30959 + C30603 * C30519);
    const double C2452 =
        2 * C30372 * C30959 + C30372 * (C30959 + C30603 * C30614);
    const double C2340 = C31552 * C1429;
    const double C19960 = C19033 * C1429;
    const double C2339 = C113 * C1413;
    const double C19959 = C19035 * C1413;
    const double C2172 =
        (3 * (C30437 + C30372 * C31077 + C31075 * ae) +
         C30372 * (2 * C31077 +
                   C30372 * (C30445 + C30372 * (C30372 * C30456 + C30591 * ae) +
                             C30372 * C30591 * ae) +
                   C31078 * ae) +
         (2 * C31075 + C30372 * C31078) * ae) /
        C30350;
    const double C1577 = C1571 + C1572;
    const double C1751 = C1745 + C1746;
    const double C19275 = C19255 + C19256;
    const double C2467 = C2461 + C2462;
    const double C19471 = C19453 + C19454;
    const double C10915 =
        (3 * (C30530 + C30372 * C31183 + C31181 * ae) +
         C30372 * (2 * C31183 +
                   C30372 * (C30751 +
                             C30372 * (C30372 * C30373 * C30755 + C30800 * ae) +
                             C30372 * C30800 * ae) +
                   C31184 * ae) +
         (2 * C31181 + C30372 * C31184) * ae) /
        C30350;
    const double C15797 = C15793 + C15794;
    const double C21403 = C21395 + C21396;
    const double C30581 = C30580 + C30480;
    const double C30802 = C30797 / C30223;
    const double C30877 = C30875 / C30383;
    const double C15795 = C113 * C2576;
    const double C21399 = C19035 * C2576;
    const double C6772 = C31552 * C1427;
    const double C20686 = C19033 * C1427;
    const double C6214 = C31552 * C1859;
    const double C20480 = C19033 * C1859;
    const double C6057 = C113 * C1275;
    const double C6771 = C113 * C1412;
    const double C20685 = C19035 * C1412;
    const double C6213 = C113 * C1855;
    const double C20479 = C19035 * C1855;
    const double C21540 = C19033 * C2170;
    const double C21539 = C19035 * C2160;
    const double C31197 = C30440 + C31195;
    const double C5921 = (C30372 * (3 * C30524 + C30373 * C30665) +
                          (3 * C31007 + C30373 * C31095) * ae) /
                         C30350;
    const double C5923 =
        (2 * C30516 + C30373 * C30524 +
         C30372 * (C30372 * C30665 + C31095 * ae) + C30372 * C31095 * ae) /
        C30350;
    const double C5788 = 4 * (2 * C31005 + C30373 * C31007) +
                         C30373 * (3 * C31007 + C30373 * C31095);
    const double C5918 = C30372 * (3 * C31007 + C30373 * C31095);
    const double C5919 = 2 * C31005 + C30373 * C31007 + C31095 * C30614;
    const double C6976 =
        2 * C30372 * C31095 + C30372 * (C31095 + C30739 * C30614);
    const double C6615 =
        (3 * (C30524 + C30372 * C31131 + C31129 * ae) +
         C30372 * (2 * C31131 +
                   C30372 * (C30659 + C30372 * (C30372 * C30684 + C30733 * ae) +
                             C30372 * C30733 * ae) +
                   C31132 * ae) +
         (2 * C31129 + C30372 * C31132) * ae) /
        C30350;
    const double C6991 = C6985 + C6986;
    const double C25938 = C25923 + C25924;
    const double C27238 = C19033 * C6613;
    const double C27237 = C19035 * C6609;
    const double C31212 = C30651 + C31210;
    const double C30716 = C30715 + C30712;
    const double C6614 =
        (-3 * (C30564 * C30614 + C30559)) / C30223 +
        C30372 * ((-2 * C30781) / C30223 - (C30372 * C30786) / C30223);
    const double C30914 = C30910 / C30223;
    const double C30912 = C30908 / C30383;
    const double C10760 = 4 * (2 * C31059 + C30372 * C31062) +
                          C30372 * (3 * C31062 + C30372 * C31153);
    const double C31171 = C31169 + C31164;
    const double C30417 = C30416 - C30408;
    const double C30693 = C30690 - C30682;
    const double C30768 = C30765 / C30350;
    const double C30895 = C30891 / C30350;
    const double C30863 = C30860 - C30850;
    const double C30459 = C30380 * C30458;
    const double C1551 =
        (2 * C30373 * C30447 + C30373 * (C30447 + C30458 * C30519)) / C30350;
    const double C1729 = (C30372 * (C30447 + C30458 * C30519) +
                          (C30959 + C30603 * C30519) * ae) /
                         C30350;
    const double C2453 =
        (2 * (C30372 * C30447 + C30959 * ae) +
         C30372 * (C30447 + C30372 * (C30372 * C30458 + C30603 * ae) +
                   C30372 * C30603 * ae) +
         (C30959 + C30603 * C30614) * ae) /
        C30350;
    const double C1288 = (3 * (C30437 + C30445 * C30519) +
                          C30373 * (2 * C30542 + C30373 * C30547)) /
                         C30350;
    const double C1431 =
        (C30437 + C30445 * C30519 + C30372 * (C30372 * C30547 + C31021 * ae) +
         C30372 * C31021 * ae) /
        C30350;
    const double C1861 = (C30372 * (2 * C30542 + C30373 * C30547) +
                          (2 * C31019 + C30373 * C31021) * ae) /
                         C30350;
    const double C30694 = C30373 * C30691;
    const double C6977 =
        (2 * (C30372 * C30665 + C31095 * ae) +
         C30372 * (C30665 + C30372 * (C30372 * C30691 + C30739 * ae) +
                   C30372 * C30739 * ae) +
         (C31095 + C30739 * C30614) * ae) /
        C30350;
    const double C30769 = C30759 + C30766;
    const double C30502 = C30497 - C30501;
    const double C30596 = C30373 * C30594;
    const double C2578 = (-2 * C30372 * C30586) / C30223 -
                         (C30372 * (C30594 * C30614 + C30586)) / C30223;
    const double C2173 =
        (-3 * (C30486 * C30614 + C30478)) / C30223 +
        C30372 * ((-2 * C30634) / C30223 - (C30372 * C30639) / C30223);
    const double C30740 = C30737 + C30732;
    const double C30915 = C30372 * C30911;
    const double C30808 = C30807 + C30492;
    const double C30878 = C30876 + C30578;
    const double C30896 = C30893 / C30223;
    const double C30864 = C30857 - C30861;
    const double C184 = C176 + C177;
    const double C380 = C356 + C357;
    const double C736 = C722 + C723;
    const double C5152 = C5145 + C5146;
    const double C25754 = C25741 + C25742;
    const double C392 = C379 * C31659;
    const double C1182 = C379 * C31659;
    const double C3121 = C379 * C3108;
    const double C13598 = C379 * C31684;
    const double C13894 = C379 * C31418;
    const double C14386 = C379 * C1168;
    const double C16064 = C379 * C31418;
    const double C16562 = C379 * C31421;
    const double C1051 = C1044 * C31418;
    const double C1736 = C1044 * C1168;
    const double C2984 = C1044 * C31418;
    const double C3441 = C1044 * C31421;
    const double C3699 = C1044 * C31684;
    const double C13754 = C1044 * C31355;
    const double C14230 = C1044 * C31630;
    const double C14956 = C1044 * C1167;
    const double C16406 = C1044 * C2680;
    const double C16964 = C1044 * C31414;
    const double C17294 = C1044 * C31696;
    const double C391 = C378 * C304;
    const double C1181 = C378 * C1175;
    const double C13597 = C378 * C303;
    const double C13893 = C378 * C712;
    const double C14385 = C378 * C1174;
    const double C16063 = C378 * C2687;
    const double C600 = C588 * C114;
    const double C2331 = C588 * C711;
    const double C1050 = C1043 * C712;
    const double C1733 = C1043 * C1174;
    const double C2981 = C1043 * C2687;
    const double C3696 = C1043 * C303;
    const double C13753 = C1043 * C114;
    const double C14231 = C1043 * C711;
    const double C14957 = C1043 * C1173;
    const double C17295 = C1043 * C302;
    const double C13599 = C1575 * C304;
    const double C14387 = C1575 * C1175;
    const double C1753 = C1749 * C1175;
    const double C3700 = C1749 * C304;
    const double C14229 = C1749 * C712;
    const double C14955 = C1749 * C1174;
    const double C16405 = C1749 * C2687;
    const double C17293 = C1749 * C303;
    const double C2469 = C2465 * C114;
    const double C185 = C178 + C179;
    const double C737 = C727 + C728;
    const double C606 = C597 + C596;
    const double C1046 = C1033 + C1034;
    const double C163 = C31552 * C133;
    const double C373 = C31552 * C329;
    const double C733 = C31552 * C331;
    const double C30767 = C30764 / C30350;
    const double C5802 = C31552 * C5790;
    const double C30695 = C30692 - C30408;
    const double C132 =
        4 * ((-2 * C30475) / C30223 - (C30380 * C30478) / C30223) +
        C30380 * ((-3 * C30478) / C30223 + C30380 * C30489);
    const double C330 = (-2 * C30475) / C30223 - (C30380 * C30478) / C30223 +
                        C30373 * (C30373 * C30489 - (C30959 * ce) / C30223) -
                        (C30373 * C30959 * ce) / C30223;
    const double C332 = C30373 * ((-3 * C30478) / C30223 + C30380 * C30489) -
                        ((3 * C30952 + C30380 * C30959) * ce) / C30223;
    const double C535 = C30372 * ((-3 * C30478) / C30223 + C30380 * C30489);
    const double C543 =
        (-2 * C30475) / C30223 - (C30380 * C30478) / C30223 + C30489 * C30614;
    const double C1016 = C30372 * (C30373 * C30489 - (C30959 * ce) / C30223);
    const double C30897 = C30894 / C30350;
    const double C10762 =
        4 * ((-2 * C30611) / C30223 - (C30372 * C30619) / C30223) +
        C30372 * ((-3 * C30619) / C30223 + C30372 * C30835);
    const double C30865 = C30862 - C30408;
    const double C30644 = C30643 / C30223;
    const double C30966 = C30964 + C30965;
    const double C2327 =
        (C30373 * C30447 + C30372 * (C30372 * C30373 * C30458 + C31081 * ae) +
         C30372 * C31081 * ae) /
        C30350;
    const double C2326 = C30373 * C30959 + C31081 * C30614;
    const double C30743 = C30741 / C30223;
    const double C31100 = C31098 + C31099;
    const double C11118 = 4 * (2 * C31121 + C30372 * C31124) +
                          C30372 * (3 * C31124 + C30372 * C31213);
    const double C6052 = 4 * (2 * C31012 + C30373 * C31014) +
                         C30373 * (3 * C31014 + C30373 * C31111);
    const double C6208 = C30372 * (3 * C31014 + C30373 * C31111);
    const double C6766 = 2 * C31012 + C30373 * C31014 + C31111 * C30614;
    const double C11016 = 4 * (2 * C31067 + C30372 * C31070) +
                          C30372 * (3 * C31070 + C30372 * C31198);
    const double C31174 = C31162 + C31172;
    const double C31615 = C31332 * C31322;
    const double C31652 = C31620 + C31332;
    const double C31623 = C31340 / C30240;
    const double C31619 = C31340 * C31322;
    const double C707 = C31694 - (C31332 * C31323) / C30223;
    const double C31639 = C31456 * C31450;
    const double C31673 = C31641 + C31456;
    const double C31643 = C31463 / C30240;
    const double C31640 = C31463 * C31450;
    const double C2448 = C31700 - (C31456 * C31452) / C30223;
    const double C30301 = C30296 - C30299;
    const double C30276 = C30272 * ce;
    const double C2686 = (-C30258) / C30240 - (C30272 * de) / C30223;
    const double C30285 = C30281 * de;
    const double C3120 = C378 * C30309;
    const double C3442 = C1749 * C30309;
    const double C16563 = C1575 * C30309;
    const double C1271 =
        (C30309 / C30240 + (0 * ce) / C30223) / C30240 - (0 * de) / C30223;
    const double C1549 = C30309 / C30240 - (0 * de) / C30223;
    const double C2817 = C30309 / C30240 + (0 * ce) / C30223;
    const double C31664 = C31633 / C30223;
    const double C31688 = C31667 / C30240;
    const double C31689 = C31668 + C31637;
    const double C1542 = C31637 - C31419 / C30227;
    const double C31666 = C31634 / C30223;
    const double C1566 = C167 * C1540;
    const double C1556 = C165 * C1540;
    const double C14754 = C377 * C1540;
    const double C1195 = C1183 + C1184;
    const double C141 =
        4 * ((-2 * C30380 * C30392) / C30383 + C30380 * C30403) +
        C30380 * (3 * C30403 + C30380 * ((-2 * C30380 * C30398) / C30383 +
                                         C30380 * ((-(std::pow(C30387, 7) *
                                                      bs[7] * C30378 * C30389) /
                                                    C30223) /
                                                       C30350 -
                                                   C30398 / C30383)));
    const double C340 = (-(C30392 * C30389) / C30223) / C30350 -
                        C30385 / C30383 - (C30373 * C30437 * ce) / C30383 +
                        C30373 * (C30373 * C30403 - (C30437 * ce) / C30383);
    const double C341 =
        C30373 * ((-2 * C30380 * C30392) / C30383 + C30380 * C30403) -
        ((2 * C30431 + C30380 * C30437) * ce) / C30383;
    const double C549 =
        (((-2 * C30380 * C30466) / C30223 -
          (C30380 * (C30390 * C30388 * C30463 * C30389 + C30466)) / C30223) *
         ae) /
            C30350 +
        C30372 * ((-2 * C30380 * C30392) / C30383 + C30380 * C30403);
    const double C554 = (-(C30392 * C30389) / C30223) / C30350 -
                        C30385 / C30383 - (ae * C30372 * C30478) / C30383 +
                        C30372 * (C30372 * C30403 - (ae * C30478) / C30383);
    const double C1021 =
        C30372 * (C30373 * C30403 - (C30437 * ce) / C30383) -
        (ae * (C30373 * C30478 +
               (C30423 * C30422 + C30382 * C30381 * C30389) * ce)) /
            C30383;
    const double C30539 = C30538 - C30535;
    const double C30632 = C30631 - C30628;
    const double C30669 = C30373 * C30667;
    const double C30672 = 2 * C30667;
    const double C30782 = C30372 * C30667;
    const double C30837 = C30372 * C30834;
    const double C30840 = 2 * C30834;
    const double C1291 =
        3 * ((-(C30516 * ce) / C30223) / C30350 - C30385 / C30383 +
             C30373 * C30526) -
        ((2 * C30516 + C30373 * C30524) * ce) / C30383 +
        C30373 *
            (2 * C30526 - (C30524 * ce) / C30383 +
             C30373 * ((-(C30373 * C30435 * ce) / C30223) / C30350 - C30396 +
                       C30373 * ((-(C30373 * C30398) / C30223) / C30350 -
                                 (C30435 * ce) / C30383)));
    const double C1433 = C30372 * ((-(C30516 * ce) / C30223) / C30350 -
                                   C30385 / C30383 + C30373 * C30526) -
                         (ae * (C30373 * (C30373 * C30466 + C30550 * ce) +
                                C30473 + C30373 * C30550 * ce)) /
                             C30383;
    const double C1436 = (-(C30373 * C30385) / C30223) / C30350 -
                         (C30426 * ce) / C30383 -
                         (ae * C30372 * C30559) / C30383 +
                         C30372 * (C30372 * C30526 - (ae * C30559) / C30383);
    const double C2579 =
        2 * (C30372 * C30526 - (ae * C30559) / C30383) -
        (ae * (C30564 * C30614 + C30559)) / C30383 +
        C30372 * (C30526 - (ae * C30372 * C30564) / C30383 +
                  C30372 * (C30372 * ((-(C30373 * C30398) / C30223) / C30350 -
                                      (C30435 * ce) / C30383) -
                            (ae * C30564) / C30383));
    const double C2177 =
        3 * ((-(ae * C30611) / C30223) / C30350 - C30385 / C30383 +
             C30372 * C30621) +
        (((-2 * C30611) / C30223 - (C30372 * C30619) / C30223) * ae) / C30350 +
        C30372 *
            (2 * C30621 - (ae * C30619) / C30383 +
             C30372 * ((-(ae * C30372 * C30470) / C30223) / C30350 - C30396 +
                       C30372 * ((-(C30372 * C30398) / C30223) / C30350 -
                                 (ae * C30470) / C30383)));
    const double C180 = C170 * C114;
    const double C730 = C170 * C711;
    const double C395 = C383 * C304;
    const double C1187 = C383 * C1175;
    const double C3126 = C383 * C30309;
    const double C13601 = C383 * C303;
    const double C13895 = C383 * C712;
    const double C14389 = C383 * C1174;
    const double C16065 = C383 * C2687;
    const double C397 = C385 * C303;
    const double C726 = C385 * C712;
    const double C1189 = C385 * C1174;
    const double C2697 = C385 * C2687;
    const double C13445 = C385 * C114;
    const double C13899 = C385 * C711;
    const double C598 = C586 * C114;
    const double C1037 = C586 * C711;
    const double C602 = C590 * C114;
    const double C2337 = C590 * C711;
    const double C1052 = C1045 * C712;
    const double C1741 = C1045 * C1174;
    const double C2985 = C1045 * C2687;
    const double C3702 = C1045 * C303;
    const double C13755 = C1045 * C114;
    const double C14233 = C1045 * C711;
    const double C2347 = C2343 * C712;
    const double C2991 = C2343 * C2687;
    const double C13757 = C2343 * C114;
    const double C15659 = C2343 * C711;
    const double C30668 = C30666 - C30396;
    const double C10763 =
        (4 * (2 * C31061 + C30372 * C31154 + C31062 * ae) +
         C30372 *
             (3 * C31154 +
              C30372 *
                  (2 * C31146 +
                   C30372 * (C30435 + C30372 * (C30372 * C30443 + C30513 * ae) +
                             C30372 * C30513 * ae) +
                   C31148 * ae) +
              C31153 * ae) +
         (3 * C31062 + C30372 * C31153) * ae) /
        C30350;
    const double C181 = C171 * C31355;
    const double C731 = C171 * C31630;
    const double C2702 = C171 * C2680;
    const double C1576 = C1563 + C1564;
    const double C20490 = C20485 + C20486;
    const double C1437 =
        (-(C30516 * ce) / C30223) / C30350 - C30385 / C30383 + C30373 * C30526 -
        (ae * C30372 * C30568) / C30383 +
        C30372 *
            (C30372 * ((-(C30373 * C30435 * ce) / C30223) / C30350 - C30396 +
                       C30373 * ((-(C30373 * C30398) / C30223) / C30350 -
                                 (C30435 * ce) / C30383)) -
             (ae * C30568) / C30383);
    const double C1863 =
        (((-2 * C30559) / C30223 - (C30373 * C30568) / C30223 -
          ((C30550 + C30511 * C30519) * ce) / C30223) *
         ae) /
            C30350 +
        C30372 *
            (2 * C30526 - (C30524 * ce) / C30383 +
             C30373 * ((-(C30373 * C30435 * ce) / C30223) / C30350 - C30396 +
                       C30373 * ((-(C30373 * C30398) / C30223) / C30350 -
                                 (C30435 * ce) / C30383)));
    const double C1281 =
        (-3 * (C30373 * C30559 + C30473 + C31005 * ce)) / C30223 +
        C30373 * ((-2 * C30559) / C30223 - (C30373 * C30568) / C30223 -
                  (C31007 * ce) / C30223) -
        ((2 * C31005 + C30373 * C31007) * ce) / C30223;
    const double C1424 =
        -(C30568 * C30614 + C30373 * C30559 + C30473 + C31005 * ce) / C30223;
    const double C1858 =
        C30372 * ((-2 * C30559) / C30223 - (C30373 * C30568) / C30223 -
                  (C31007 * ce) / C30223);
    const double C30836 = C30833 - C30396;
    const double C1573 = C113 * C1287;
    const double C1747 = C113 * C1420;
    const double C19259 = C19035 * C1420;
    const double C2341 = C113 * C1430;
    const double C19963 = C19035 * C1430;
    const double C854 = C31552 * C536;
    const double C19066 = C19033 * C536;
    const double C581 = C31552 * C544;
    const double C19750 = C19033 * C544;
    const double C1040 = C31552 * C1015;
    const double C19604 = C19033 * C1015;
    const double C162 = C113 * C120;
    const double C372 = C113 * C312;
    const double C732 = C113 * C313;
    const double C853 = C113 * C521;
    const double C19065 = C19035 * C521;
    const double C580 = C113 * C525;
    const double C19749 = C19035 * C525;
    const double C1039 = C113 * C1007;
    const double C19603 = C19035 * C1007;
    const double C2345 = C2339 + C2340;
    const double C19971 = C19959 + C19960;
    const double C13605 = C1577 * C304;
    const double C14393 = C1577 * C1175;
    const double C16569 = C1577 * C30309;
    const double C1755 = C1751 * C1175;
    const double C3448 = C1751 * C30309;
    const double C3706 = C1751 * C304;
    const double C14235 = C1751 * C712;
    const double C16767 = C1751 * C2687;
    const double C2471 = C2467 * C114;
    const double C15799 = C15797 * C114;
    const double C30582 = C30581 + C30579;
    const double C6061 = C6057 + C6058;
    const double C6775 = C6771 + C6772;
    const double C20693 = C20685 + C20686;
    const double C6217 = C6213 + C6214;
    const double C20487 = C20479 + C20480;
    const double C21546 = C21539 + C21540;
    const double C31199 = C31197 + C31192;
    const double C6322 = C31552 * C5921;
    const double C25746 = C19033 * C5921;
    const double C5944 = C31552 * C5923;
    const double C26398 = C19033 * C5923;
    const double C5801 = C113 * C5788;
    const double C6321 = C113 * C5918;
    const double C25745 = C19035 * C5918;
    const double C5943 = C113 * C5919;
    const double C26397 = C19035 * C5919;
    const double C27244 = C27237 + C27238;
    const double C31214 = C31212 + C31207;
    const double C30717 = C30373 * C30716;
    const double C30722 = -3 * C30716;
    const double C30791 = ae * C30716;
    const double C30789 = C30372 * C30716;
    const double C6611 = (-2 * C30372 * C30568) / C30223 -
                         (C30372 * (C30716 * C30614 + C30568)) / C30223;
    const double C27241 = C19035 * C6614;
    const double C30916 = C30667 - C30912;
    const double C31173 = C30372 * C31171;
    const double C30418 = C30380 * C30417;
    const double C30543 = C30373 * C30417;
    const double C30635 = C30372 * C30417;
    const double C1294 =
        2 * (C30373 * C30403 - (C30437 * ce) / C30383) -
        ((C30437 + C30445 * C30519) * ce) / C30383 +
        C30373 * (C30403 - (C30373 * C30445 * ce) / C30383 +
                  C30373 * (C30373 * C30417 - (C30445 * ce) / C30383));
    const double C2174 =
        2 * (C30372 * C30403 - (ae * C30478) / C30383) -
        (ae * (C30486 * std::pow(C30372, 2) + C30478)) / C30383 +
        C30372 * (C30403 - (ae * C30372 * C30486) / C30383 +
                  C30372 * (C30372 * C30417 - (ae * C30486) / C30383));
    const double C30696 = C30373 * C30693;
    const double C30905 = C30372 * C30693;
    const double C30771 = C30768 - C30758;
    const double C30898 = C30895 - C30887;
    const double C30866 = C30372 * C30863;
    const double C30460 = C30450 + C30459;
    const double C30697 = C30677 + C30694;
    const double C6053 = (4 * (2 * C30530 + C30373 * C30536) +
                          C30373 * (3 * C30536 + C30373 * C30769)) /
                         C30350;
    const double C6209 = (C30372 * (3 * C30536 + C30373 * C30769) +
                          (3 * C31014 + C30373 * C31111) * ae) /
                         C30350;
    const double C6767 =
        (2 * C30530 + C30373 * C30536 +
         C30372 * (C30372 * C30769 + C31111 * ae) + C30372 * C31111 * ae) /
        C30350;
    const double C30503 = C30380 * C30502;
    const double C30642 = C30373 * C30502;
    const double C2454 =
        2 * C30372 * C30489 + C30372 * (C30489 + C30502 * C30614);
    const double C30597 = C30596 + C30486;
    const double C30742 = C30373 * C30740;
    const double C30792 = C30740 * C30614;
    const double C30918 = C30915 / C30223;
    const double C30809 = C30808 + C30804;
    const double C10916 =
        (-3 * (C30578 * C30614 + C30572)) / C30223 +
        C30372 * ((-2 * C30873) / C30223 - (C30372 * C30878) / C30223);
    const double C30899 = C30892 - C30896;
    const double C30867 = C30372 * C30864;
    const double C401 = C380 - C393;
    const double C740 = C736 - C724;
    const double C30770 = C30767 - C30752;
    const double C160 = C113 * C132;
    const double C374 = C113 * C330;
    const double C734 = C113 * C332;
    const double C851 = C113 * C535;
    const double C19061 = C19035 * C535;
    const double C578 = C113 * C543;
    const double C19745 = C19035 * C543;
    const double C1041 = C113 * C1016;
    const double C19607 = C19035 * C1016;
    const double C30900 = C30897 - C30752;
    const double C121 = 5 * (3 * C30952 + C30380 * C30959) +
                        C30380 * (4 * C30959 + C30380 * C30966);
    const double C314 = 3 * C30952 + C30380 * C30959 + C30966 * C30519;
    const double C526 = 3 * C30952 + C30380 * C30959 + C30966 * C30614;
    const double C713 = C30373 * (4 * C30959 + C30380 * C30966);
    const double C845 = C30372 * (4 * C30959 + C30380 * C30966);
    const double C1008 = C30372 * C30373 * C30966;
    const double C5789 = 5 * (3 * C31007 + C30373 * C31095) +
                         C30373 * (4 * C31095 + C30373 * C31100);
    const double C5920 = 3 * C31007 + C30373 * C31095 + C31100 * C30614;
    const double C6316 = C30372 * (4 * C31095 + C30373 * C31100);
    const double C10761 = 5 * (3 * C31062 + C30372 * C31153) +
                          C30372 * (4 * C31153 + C30372 * C31174);
    const double C31648 = C31615 / C30223;
    const double C31681 = C31652 / C30240;
    const double C31682 = C31654 + C31623;
    const double C709 = C31623 - C31338 / C30227;
    const double C31651 = C31619 / C30223;
    const double C31670 = C31639 / C30223;
    const double C31691 = C31673 / C30240;
    const double C31692 = C31674 + C31643;
    const double C2450 = C31643 - C31461 / C30227;
    const double C31672 = C31640 / C30223;
    const double C30280 = C30276 / C30223;
    const double C2701 = C170 * C2686;
    const double C2699 = C169 * C2686;
    const double C2693 = C166 * C2686;
    const double C2689 = C164 * C2686;
    const double C2993 = C590 * C2686;
    const double C2989 = C588 * C2686;
    const double C2987 = C584 * C2686;
    const double C2983 = C582 * C2686;
    const double C3286 = C586 * C2686;
    const double C16069 = C385 * C2686;
    const double C16067 = C381 * C2686;
    const double C16061 = C376 * C2686;
    const double C16409 = C2343 * C2686;
    const double C16407 = C1043 * C2686;
    const double C16765 = C1045 * C2686;
    const double C30291 = C30285 / C30223;
    const double C1581 = C1577 * C1549;
    const double C1579 = C1575 * C1549;
    const double C2833 = C1577 * C2817;
    const double C2825 = C1575 * C2817;
    const double C31703 = C31664 + C31698;
    const double C1541 = C31688 - (C31421 * C31410) / C30223;
    const double C2824 = C379 * C31689;
    const double C1264 = C31689 / C30240 - C31419 / C31655;
    const double C1560 = C379 * C1542;
    const double C31699 = C31666 + C31688;
    const double C1196 = C1195 - C1185;
    const double C161 = C31552 * C141;
    const double C365 = C31552 * C340;
    const double C19262 = C19032 * C340;
    const double C371 = C31552 * C341;
    const double C19610 = C19032 * C341;
    const double C569 = C31552 * C549;
    const double C19060 = C19033 * C549;
    const double C19748 = C19032 * C549;
    const double C577 = C31552 * C554;
    const double C19452 = C19032 * C554;
    const double C19440 = C19033 * C554;
    const double C1036 = C31552 * C1021;
    const double C19254 = C19033 * C1021;
    const double C19966 = C19032 * C1021;
    const double C1293 =
        3 * ((-(C30530 * ce) / C30223) / C30350 - C30528 / C30383 +
             C30373 * C30539) -
        ((2 * C30530 + C30373 * C30536) * ce) / C30383 +
        C30373 * (2 * C30539 - (C30536 * ce) / C30383 +
                  C30373 * ((-(C30373 * C30451 * ce) / C30223) / C30350 -
                            C30405 / C30383 +
                            C30373 * ((-(C30373 * C30380 * C30412) / C30223) /
                                          C30350 -
                                      (C30451 * ce) / C30383)));
    const double C1434 = C30372 * ((-(C30530 * ce) / C30223) / C30350 -
                                   C30528 / C30383 + C30373 * C30539) -
                         (ae * (C30373 * (C30373 * C30480 + C30552 * ce) +
                                C30475 + C30373 * C30552 * ce)) /
                             C30383;
    const double C1438 = (-(C30373 * C30528) / C30223) / C30350 -
                         (C30431 * ce) / C30383 -
                         (ae * C30372 * C30572) / C30383 +
                         C30372 * (C30372 * C30539 - (ae * C30572) / C30383);
    const double C2580 =
        2 * (C30372 * C30539 - (ae * C30572) / C30383) -
        (ae * (C30578 * C30614 + C30572)) / C30383 +
        C30372 * (C30539 - (ae * C30372 * C30578) / C30383 +
                  C30372 * (C30372 * ((-(C30373 * C30380 * C30412) / C30223) /
                                          C30350 -
                                      (C30451 * ce) / C30383) -
                            (ae * C30578) / C30383));
    const double C2178 =
        3 * ((-(ae * C30623) / C30223) / C30350 - C30528 / C30383 +
             C30372 * C30632) +
        (((-2 * C30623) / C30223 - (C30372 * C30629) / C30223) * ae) / C30350 +
        C30372 * (2 * C30632 - (ae * C30629) / C30383 +
                  C30372 * ((-(ae * C30372 * C30492) / C30223) / C30350 -
                            C30405 / C30383 +
                            C30372 * ((-(C30372 * C30380 * C30412) / C30223) /
                                          C30350 -
                                      (ae * C30492) / C30383)));
    const double C30685 = C30672 - C30679;
    const double C30787 = C30782 - C30785;
    const double C30854 = C30840 - C30847;
    const double C5800 = C31552 * C1291;
    const double C25748 = C19032 * C1291;
    const double C5612 = C31552 * C1433;
    const double C24886 = C19033 * C1433;
    const double C25912 = C19032 * C1433;
    const double C5938 = C31552 * C1436;
    const double C25502 = C19033 * C1436;
    const double C25920 = C19032 * C1436;
    const double C6984 = C31552 * C2579;
    const double C25918 = C19033 * C2579;
    const double C27240 = C19032 * C2579;
    const double C741 = C726 - C737;
    const double C1056 = C1052 - C1046;
    const double C30670 = C30668 + C30669;
    const double C186 = C180 + C181;
    const double C1580 = C1576 * C31669;
    const double C2826 = C1576 * C31669;
    const double C13600 = C1576 * C31659;
    const double C14388 = C1576 * C31659;
    const double C14758 = C1576 * C1542;
    const double C16208 = C1576 * C31689;
    const double C16564 = C1576 * C3108;
    const double C5942 = C31552 * C1437;
    const double C25926 = C19032 * C1437;
    const double C25910 = C19033 * C1437;
    const double C5934 = C31552 * C1863;
    const double C25740 = C19033 * C1863;
    const double C26400 = C19032 * C1863;
    const double C5799 = C113 * C1281;
    const double C25747 = C19034 * C1281;
    const double C5941 = C113 * C1424;
    const double C25925 = C19034 * C1424;
    const double C25909 = C19035 * C1424;
    const double C5933 = C113 * C1858;
    const double C25739 = C19035 * C1858;
    const double C26399 = C19034 * C1858;
    const double C30838 = C30836 + C30837;
    const double C173 = C162 + C163;
    const double C387 = C372 + C373;
    const double C738 = C732 + C733;
    const double C856 = C853 + C854;
    const double C19083 = C19065 + C19066;
    const double C593 = C580 + C581;
    const double C19755 = C19749 + C19750;
    const double C1048 = C1039 + C1040;
    const double C19611 = C19603 + C19604;
    const double C2349 = C2345 * C712;
    const double C2995 = C2345 * C2687;
    const double C13760 = C2345 * C114;
    const double C1439 =
        (-(C30530 * ce) / C30223) / C30350 - C30528 / C30383 + C30373 * C30539 -
        (ae * C30372 * C30582) / C30383 +
        C30372 * (C30372 * ((-(C30373 * C30451 * ce) / C30223) / C30350 -
                            C30405 / C30383 +
                            C30373 * ((-(C30373 * C30380 * C30412) / C30223) /
                                          C30350 -
                                      (C30451 * ce) / C30383)) -
                  (ae * C30582) / C30383);
    const double C1864 =
        (((-2 * C30572) / C30223 - (C30373 * C30582) / C30223 -
          ((C30552 + C30575 * C30519) * ce) / C30223) *
         ae) /
            C30350 +
        C30372 * (2 * C30539 - (C30536 * ce) / C30383 +
                  C30373 * ((-(C30373 * C30451 * ce) / C30223) / C30350 -
                            C30405 / C30383 +
                            C30373 * ((-(C30373 * C30380 * C30412) / C30223) /
                                          C30350 -
                                      (C30451 * ce) / C30383)));
    const double C1285 =
        (-3 * (C30373 * C30572 + C30475 + C31012 * ce)) / C30223 +
        C30373 * ((-2 * C30572) / C30223 - (C30373 * C30582) / C30223 -
                  (C31014 * ce) / C30223) -
        ((2 * C31012 + C30373 * C31014) * ce) / C30223;
    const double C1428 =
        -(C30582 * C30614 + C30373 * C30572 + C30475 + C31012 * ce) / C30223;
    const double C1860 =
        C30372 * ((-2 * C30572) / C30223 - (C30373 * C30582) / C30223 -
                  (C31014 * ce) / C30223);
    const double C14759 = C6061 * C1549;
    const double C16209 = C6061 * C2817;
    const double C15661 = C6775 * C712;
    const double C16411 = C6775 * C2687;
    const double C14959 = C6217 * C1175;
    const double C16967 = C6217 * C30309;
    const double C17297 = C6217 * C304;
    const double C11017 =
        (4 * (2 * C31069 + C30372 * C31199 + C31070 * ae) +
         C30372 *
             (3 * C31199 +
              C30372 *
                  (2 * C31191 +
                   C30372 * (C30451 + C30372 * (C30372 * C30755 + C30775 * ae) +
                             C30372 * C30775 * ae) +
                   C31193 * ae) +
              C31198 * ae) +
         (3 * C31070 + C30372 * C31198) * ae) /
        C30350;
    const double C5807 = C5801 + C5802;
    const double C6325 = C6321 + C6322;
    const double C25756 = C25745 + C25746;
    const double C5953 = C5943 + C5944;
    const double C26404 = C26397 + C26398;
    const double C11119 =
        (4 * (2 * C31123 + C30372 * C31214 + C31124 * ae) +
         C30372 * (3 * C31214 +
                   C30372 * (2 * C31206 +
                             C30372 * (C30674 +
                                       C30372 * (C30372 * C30373 * C30454 +
                                                 C30726 * ae) +
                                       C30372 * C30726 * ae) +
                             C31208 * ae) +
                   C31213 * ae) +
         (3 * C31124 + C30372 * C31213) * ae) /
        C30350;
    const double C30718 = C30717 / C30223;
    const double C30729 = C30722 / C30223;
    const double C30793 = C30791 / C30383;
    const double C6987 = C113 * C6611;
    const double C25927 = C19035 * C6611;
    const double C31175 = C31156 + C31173;
    const double C30419 = C30411 + C30418;
    const double C30548 = C30543 - C30546;
    const double C30640 = C30635 - C30638;
    const double C1574 = C31552 * C1294;
    const double C2464 = C31552 * C2174;
    const double C19450 = C19033 * C2174;
    const double C30698 = C30695 + C30696;
    const double C30913 = C30905 - C30909;
    const double C30772 = C30373 * C30771;
    const double C30874 = C30372 * C30771;
    const double C30901 = C30372 * C30898;
    const double C30868 = C30865 + C30866;
    const double C134 = (5 * (3 * C30437 + C30380 * C30447) +
                         C30380 * (4 * C30447 + C30380 * C30460)) /
                        C30350;
    const double C333 =
        (3 * C30437 + C30380 * C30447 + C30460 * C30519) / C30350;
    const double C545 =
        (3 * C30437 + C30380 * C30447 +
         C30372 * (C30372 * C30460 + C30966 * ae) + C30372 * C30966 * ae) /
        C30350;
    const double C714 = (C30373 * (4 * C30447 + C30380 * C30460)) / C30350;
    const double C846 = (C30372 * (4 * C30447 + C30380 * C30460) +
                         (4 * C30959 + C30380 * C30966) * ae) /
                        C30350;
    const double C1017 =
        (C30372 * C30373 * C30460 + C30373 * C30966 * ae) / C30350;
    const double C5792 = (5 * (3 * C30524 + C30373 * C30665) +
                          C30373 * (4 * C30665 + C30373 * C30697)) /
                         C30350;
    const double C5925 =
        (3 * C30524 + C30373 * C30665 +
         C30372 * (C30372 * C30697 + C31100 * ae) + C30372 * C31100 * ae) /
        C30350;
    const double C6317 = (C30372 * (4 * C30665 + C30373 * C30697) +
                          (4 * C31095 + C30373 * C31100) * ae) /
                         C30350;
    const double C30504 = C30494 + C30503;
    const double C30645 = C30642 - C30644;
    const double C30598 = C30597 + C30595;
    const double C30744 = C30742 / C30223;
    const double C30794 = C30792 + C30716;
    const double C30920 = C30914 - C30918;
    const double C30810 = C30373 * C30809;
    const double C6876 = (-2 * C30372 * C30582) / C30223 -
                         (C30372 * (C30809 * C30614 + C30582)) / C30223;
    const double C11018 =
        4 * ((-2 * C30623) / C30223 - (C30372 * C30629) / C30223) +
        C30372 * ((-3 * C30629) / C30223 + C30372 * C30899);
    const double C30869 = C30851 + C30867;
    const double C402 = C401 - C394;
    const double C744 = C740 - C725;
    const double C31702 = C31648 + C31694;
    const double C708 = C31681 - (C31340 * C31323) / C30223;
    const double C110 = C31682 / C30240 - C31338 / C31655;
    const double C31695 = C31651 + C31681;
    const double C31704 = C31670 + C31700;
    const double C2449 = C31691 - (C31463 * C31452) / C30223;
    const double C2154 = C31692 / C30240 - C31461 / C31655;
    const double C31701 = C31672 + C31691;
    const double C30284 = C30280 - C30261;
    const double C2706 = C2698 + C2699;
    const double C2705 = C2693 + C2694;
    const double C3285 = C2986 + C2987;
    const double C2828 = C167 * C31703;
    const double C2820 = C165 * C31703;
    const double C16204 = C377 * C31703;
    const double C1261 =
        (C31696 + 2 * C31414) / C30240 - (C31703 * C31410) / C30223;
    const double C1568 = C382 * C1541;
    const double C1558 = C377 * C1541;
    const double C14756 = C379 * C1541;
    const double C2830 = C382 * C31699;
    const double C2822 = C377 * C31699;
    const double C16206 = C379 * C31699;
    const double C1262 =
        (C31684 + 2 * C31421 + C31703) / C30240 - (C31699 * C31410) / C30223;
    const double C1263 = (C31659 + C31418 / C30223 + C31699) / C30240 -
                         (C31689 * C31410) / C30223;
    const double C1197 = C1196 - C1186;
    const double C172 = C160 + C161;
    const double C384 = C364 + C365;
    const double C19278 = C19261 + C19262;
    const double C386 = C370 + C371;
    const double C19614 = C19609 + C19610;
    const double C587 = C568 + C569;
    const double C19080 = C19059 + C19060;
    const double C19754 = C19747 + C19748;
    const double C591 = C576 + C577;
    const double C19470 = C19451 + C19452;
    const double C19464 = C19439 + C19440;
    const double C1047 = C1035 + C1036;
    const double C19274 = C19253 + C19254;
    const double C19974 = C19965 + C19966;
    const double C6060 = C31552 * C1293;
    const double C1740 = C31552 * C1434;
    const double C19246 = C19033 * C1434;
    const double C20692 = C19032 * C1434;
    const double C2336 = C31552 * C1438;
    const double C19958 = C19033 * C1438;
    const double C21402 = C19032 * C1438;
    const double C15796 = C31552 * C2580;
    const double C21400 = C19033 * C2580;
    const double C21544 = C19033 * C2178;
    const double C6618 =
        3 * (C30526 - (ae * C30781) / C30383 + C30372 * C30787) +
        (((-2 * C30781) / C30223 - (C30372 * C30786) / C30223) * ae) / C30350 +
        C30372 *
            (2 * C30787 - (ae * C30786) / C30383 +
             C30372 * (C30667 - (ae * C30372 * C30711) / C30383 +
                       C30372 * (C30372 * C30693 - (ae * C30711) / C30383)));
    const double C5616 = C5611 + C5612;
    const double C24894 = C24885 + C24886;
    const double C25932 = C25911 + C25912;
    const double C5950 = C5937 + C5938;
    const double C25506 = C25501 + C25502;
    const double C25936 = C25919 + C25920;
    const double C6990 = C6983 + C6984;
    const double C25935 = C25917 + C25918;
    const double C27245 = C27239 + C27240;
    const double C5794 =
        4 * (2 * C30526 - (C30524 * ce) / C30383 + C30373 * C30670) -
        ((3 * C30524 + C30373 * C30665) * ce) / C30383 +
        C30373 *
            (3 * C30670 - (C30665 * ce) / C30383 +
             C30373 *
                 (2 * C30667 - (C30659 * ce) / C30383 +
                  C30373 *
                      ((-(C30373 * C30443 * ce) / C30223) / C30350 - C30408 +
                       C30373 * ((-(C30373 * C30412) / C30223) / C30350 -
                                 (C30443 * ce) / C30383))));
    const double C5806 = C5799 + C5800;
    const double C25757 = C25747 + C25748;
    const double C5952 = C5941 + C5942;
    const double C25939 = C25925 + C25926;
    const double C25931 = C25909 + C25910;
    const double C5948 = C5933 + C5934;
    const double C25753 = C25739 + C25740;
    const double C26405 = C26399 + C26400;
    const double C10766 =
        4 * (2 * C30621 - (ae * C30619) / C30383 + C30372 * C30838) +
        (((-3 * C30619) / C30223 + C30372 * C30835) * ae) / C30350 +
        C30372 *
            (3 * C30838 + (C30835 * ae) / C30350 +
             C30372 *
                 (2 * C30834 - (ae * C30825) / C30383 +
                  C30372 *
                      ((-(ae * C30372 * C30483) / C30223) / C30350 - C30408 +
                       C30372 * ((-(C30372 * C30412) / C30223) / C30350 -
                                 (ae * C30483) / C30383))));
    const double C183 = C173 * C114;
    const double C399 = C387 * C304;
    const double C1193 = C387 * C1175;
    const double C3132 = C387 * C30309;
    const double C13901 = C387 * C712;
    const double C16071 = C387 * C2687;
    const double C742 = C738 * C712;
    const double C2703 = C738 * C2687;
    const double C13448 = C738 * C114;
    const double C858 = C856 * C114;
    const double C605 = C593 * C114;
    const double C1054 = C1048 * C712;
    const double C3288 = C1048 * C2687;
    const double C14034 = C1048 * C114;
    const double C6774 = C31552 * C1439;
    const double C20690 = C19033 * C1439;
    const double C6216 = C31552 * C1864;
    const double C20484 = C19033 * C1864;
    const double C6059 = C113 * C1285;
    const double C6773 = C113 * C1428;
    const double C20689 = C19035 * C1428;
    const double C6215 = C113 * C1860;
    const double C20483 = C19035 * C1860;
    const double C30719 = C30710 - C30718;
    const double C31176 = C31175 + C31160;
    const double C142 =
        5 * (3 * C30403 + C30380 * C30419) +
        C30380 * (4 * C30419 +
                  C30380 * (3 * C30417 +
                            C30380 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383))));
    const double C342 = (-2 * C30380 * C30392) / C30383 + C30380 * C30403 -
                        (C30373 * C30447 * ce) / C30383 +
                        C30373 * (C30373 * C30419 - (C30447 * ce) / C30383);
    const double C343 = C30373 * (3 * C30403 + C30380 * C30419) -
                        ((3 * C30437 + C30380 * C30447) * ce) / C30383;
    const double C344 =
        3 * C30403 + C30380 * C30419 - (C30373 * C30460 * ce) / C30383 +
        C30373 * (C30373 * (3 * C30417 +
                            C30380 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383))) -
                  (C30460 * ce) / C30383);
    const double C551 =
        (((-3 * (C30470 * C30389 + C30466)) / C30223 +
          C30380 * ((-2 * C30380 * C30470) / C30223 -
                    (C30380 * (C30394 * C30395 * C30463 * C30389 + C30470)) /
                        C30223)) *
         ae) /
            C30350 +
        C30372 * (3 * C30403 + C30380 * C30419);
    const double C555 = (-2 * C30380 * C30392) / C30383 + C30380 * C30403 +
                        (C30372 * C30489 * ae) / C30350 +
                        C30372 * ((C30489 * ae) / C30350 + C30372 * C30419);
    const double C716 =
        C30373 * (4 * C30419 +
                  C30380 * (3 * C30417 +
                            C30380 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383)))) -
        ((4 * C30447 + C30380 * C30460) * ce) / C30383;
    const double C1022 =
        ((C30373 * C30489 - ((2 * C30380 * C30511 +
                              C30380 * (C30511 + C30388 * C30390 * C30389)) *
                             ce) /
                                C30223) *
         ae) /
            C30350 +
        C30372 * (C30373 * C30419 - (C30447 * ce) / C30383);
    const double C1553 =
        2 * (C30373 * C30419 - (C30447 * ce) / C30383) -
        ((C30447 + C30458 * C30519) * ce) / C30383 +
        C30373 * (C30419 - (C30373 * C30458 * ce) / C30383 +
                  C30373 * (C30373 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383)) -
                            (C30458 * ce) / C30383));
    const double C1731 =
        ((C30489 + C30373 * (C30373 * C30502 - (C30603 * ce) / C30223) -
          (C30373 * C30603 * ce) / C30223) *
         ae) /
            C30350 +
        C30372 * (C30419 - (C30373 * C30458 * ce) / C30383 +
                  C30373 * (C30373 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383)) -
                            (C30458 * ce) / C30383));
    const double C2455 =
        2 * ((C30489 * ae) / C30350 + C30372 * C30419) +
        ((C30489 + C30502 * C30614) * ae) / C30350 +
        C30372 * (C30419 + (C30372 * C30502 * ae) / C30350 +
                  C30372 * ((C30502 * ae) / C30350 +
                            C30372 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383))));
    const double C1295 =
        3 * (C30403 - (C30542 * ce) / C30383 + C30373 * C30548) -
        ((2 * C30542 + C30373 * C30547) * ce) / C30383 +
        C30373 * (2 * C30548 - (C30547 * ce) / C30383 +
                  C30373 * (C30417 - (C30373 * C30456 * ce) / C30383 +
                            C30373 * (C30373 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383) -
                                      (C30456 * ce) / C30383)));
    const double C1435 =
        C30372 * (C30403 - (C30542 * ce) / C30383 + C30373 * C30548) -
        (ae * (C30373 * (C30373 * C30486 + C30555 * ce) + C30478 +
               C30373 * C30555 * ce)) /
            C30383;
    const double C1440 = C30373 * C30403 - (C30437 * ce) / C30383 -
                         (ae * C30372 * C30586) / C30383 +
                         C30372 * (C30372 * C30548 - (ae * C30586) / C30383);
    const double C2581 =
        2 * (C30372 * C30548 - (ae * C30586) / C30383) -
        (ae * (C30594 * C30614 + C30586)) / C30383 +
        C30372 * (C30548 - (ae * C30372 * C30594) / C30383 +
                  C30372 * (C30372 * (C30373 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383) -
                                      (C30456 * ce) / C30383) -
                            (ae * C30594) / C30383));
    const double C2179 =
        3 * (C30403 - (ae * C30634) / C30383 + C30372 * C30640) +
        (((-2 * C30634) / C30223 - (C30372 * C30639) / C30223) * ae) / C30350 +
        C30372 * (2 * C30640 - (ae * C30639) / C30383 +
                  C30372 * (C30417 - (ae * C30372 * C30499) / C30383 +
                            C30372 * (C30372 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383) -
                                      (ae * C30499) / C30383)));
    const double C1578 = C1573 + C1574;
    const double C2468 = C2463 + C2464;
    const double C19469 = C19449 + C19450;
    const double C30699 = C30373 * C30698;
    const double C30790 = C30372 * C30698;
    const double C6617 =
        2 * (C30372 * C30670 - (ae * C30568) / C30383) -
        (ae * (C30716 * C30614 + C30568)) / C30383 +
        C30372 * (C30670 - (ae * C30372 * C30716) / C30383 +
                  C30372 * (C30372 * C30698 - (ae * C30716) / C30383));
    const double C30917 = C30372 * C30913;
    const double C30773 = C30770 + C30772;
    const double C30879 = C30874 - C30877;
    const double C30902 = C30900 + C30901;
    const double C30870 = C30372 * C30868;
    const double C556 =
        3 * C30403 + C30380 * C30419 + (C30372 * C30504 * ae) / C30350 +
        C30372 * ((C30504 * ae) / C30350 +
                  C30372 * (3 * C30417 +
                            C30380 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383))));
    const double C848 =
        ((4 * C30489 + C30380 * C30504) * ae) / C30350 +
        C30372 * (4 * C30419 +
                  C30380 * (3 * C30417 +
                            C30380 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383))));
    const double C1023 =
        ((C30373 * C30504 -
          ((3 * (C30511 + C30513 * C30389) +
            C30380 * (2 * C30380 * C30513 +
                      C30380 * (C30513 + C30395 * C30394 * C30389))) *
           ce) /
              C30223) *
         ae) /
            C30350 +
        C30372 * (C30373 * (3 * C30417 +
                            C30380 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383))) -
                  (C30460 * ce) / C30383);
    const double C135 = 5 * ((-3 * C30478) / C30223 + C30380 * C30489) +
                        C30380 * (4 * C30489 + C30380 * C30504);
    const double C334 = (-3 * C30478) / C30223 + C30380 * C30489 +
                        C30373 * (C30373 * C30504 - (C30966 * ce) / C30223) -
                        (C30373 * C30966 * ce) / C30223;
    const double C546 =
        (-3 * C30478) / C30223 + C30380 * C30489 + C30504 * C30614;
    const double C715 = C30373 * (4 * C30489 + C30380 * C30504) -
                        ((4 * C30959 + C30380 * C30966) * ce) / C30223;
    const double C847 = C30372 * (4 * C30489 + C30380 * C30504);
    const double C1018 = C30372 * (C30373 * C30504 - (C30966 * ce) / C30223);
    const double C2329 =
        C30373 * C30419 - (C30447 * ce) / C30383 +
        (C30372 * C30645 * ae) / C30350 +
        C30372 * ((C30645 * ae) / C30350 +
                  C30372 * (C30373 * ((-2 * C30380 * C30412) / C30383 +
                                      C30380 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383)) -
                            (C30458 * ce) / C30383));
    const double C1552 =
        2 * (C30373 * C30489 - (C30959 * ce) / C30223) +
        C30373 * (C30489 + C30373 * C30645 - (C30373 * C30603 * ce) / C30223) -
        ((C30959 + C30603 * C30519) * ce) / C30223;
    const double C1730 =
        C30372 * (C30489 + C30373 * C30645 - (C30373 * C30603 * ce) / C30223);
    const double C2328 =
        C30373 * C30489 - (C30959 * ce) / C30223 + C30645 * C30614;
    const double C1441 =
        C30403 - (C30542 * ce) / C30383 + C30373 * C30548 -
        (ae * C30372 * C30598) / C30383 +
        C30372 * (C30372 * (C30417 - (C30373 * C30456 * ce) / C30383 +
                            C30373 * (C30373 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383) -
                                      (C30456 * ce) / C30383)) -
                  (ae * C30598) / C30383);
    const double C1865 =
        (((-2 * C30586) / C30223 - (C30373 * C30598) / C30223 -
          ((C30555 + C30591 * C30519) * ce) / C30223) *
         ae) /
            C30350 +
        C30372 * (2 * C30548 - (C30547 * ce) / C30383 +
                  C30373 * (C30417 - (C30373 * C30456 * ce) / C30383 +
                            C30373 * (C30373 * ((-(std::pow(C30376, 8) * bs[8] *
                                                   C30378 * C30389) /
                                                 C30223) /
                                                    C30350 -
                                                C30412 / C30383) -
                                      (C30456 * ce) / C30383)));
    const double C1289 =
        (-3 * (C30373 * C30586 + C30478 + C31019 * ce)) / C30223 +
        C30373 * ((-2 * C30586) / C30223 - (C30373 * C30598) / C30223 -
                  (C31021 * ce) / C30223) -
        ((2 * C31019 + C30373 * C31021) * ce) / C30223;
    const double C1432 =
        -(C30598 * C30614 + C30373 * C30586 + C30478 + C31019 * ce) / C30223;
    const double C1862 =
        C30372 * ((-2 * C30586) / C30223 - (C30373 * C30598) / C30223 -
                  (C31021 * ce) / C30223);
    const double C30745 = C30730 - C30744;
    const double C6616 =
        (-3 * (C30716 * C30614 + C30568)) / C30223 +
        C30372 * ((-2 * C30789) / C30223 - (C30372 * C30794) / C30223);
    const double C11120 =
        4 * ((-2 * C30781) / C30223 - (C30372 * C30786) / C30223) +
        C30372 * ((-3 * C30786) / C30223 + C30372 * C30920);
    const double C30811 = C30810 / C30223;
    const double C10765 = 5 * ((-3 * C30619) / C30223 + C30372 * C30835) +
                          C30372 * (4 * C30835 + C30372 * C30869);
    const double C403 = C402 + C395;
    const double C107 =
        (C31693 + 2 * C31332) / C30240 - (C31702 * C31323) / C30223;
    const double C108 =
        (C31680 + 2 * C31340 + C31702) / C30240 - (C31695 * C31323) / C30223;
    const double C109 = (C31653 + C31337 / C30223 + C31695) / C30240 -
                        (C31682 * C31323) / C30223;
    const double C2151 =
        (C31697 + 2 * C31456) / C30240 - (C31704 * C31452) / C30223;
    const double C2152 =
        (C31686 + 2 * C31463 + C31704) / C30240 - (C31701 * C31452) / C30223;
    const double C2153 = (C31662 + C31460 / C30223 + C31701) / C30240 -
                         (C31692 * C31452) / C30223;
    const double C30290 = C30284 / C30240;
    const double C30289 = C30221 * C30284;
    const double C2708 = C2697 - C2706;
    const double C2707 = C2705 - C2695;
    const double C3290 = C2985 - C3285;
    const double C1198 = C1197 + C1187;
    const double C182 = C172 * C31355;
    const double C396 = C384 * C31659;
    const double C1188 = C384 * C31659;
    const double C1570 = C384 * C1542;
    const double C2832 = C384 * C31689;
    const double C3127 = C384 * C3108;
    const double C13604 = C384 * C31684;
    const double C13898 = C384 * C31418;
    const double C14392 = C384 * C1168;
    const double C16068 = C384 * C31418;
    const double C16568 = C384 * C31421;
    const double C398 = C386 * C31684;
    const double C729 = C386 * C31418;
    const double C1192 = C386 * C1168;
    const double C2700 = C386 * C31418;
    const double C3131 = C386 * C31421;
    const double C13446 = C386 * C31355;
    const double C13900 = C386 * C31630;
    const double C16070 = C386 * C2680;
    const double C599 = C587 * C31355;
    const double C1038 = C587 * C31630;
    const double C3287 = C587 * C2680;
    const double C603 = C591 * C31355;
    const double C2338 = C591 * C31630;
    const double C2994 = C591 * C2680;
    const double C1053 = C1047 * C31418;
    const double C1744 = C1047 * C1168;
    const double C2988 = C1047 * C31418;
    const double C3447 = C1047 * C31421;
    const double C3705 = C1047 * C31684;
    const double C13756 = C1047 * C31355;
    const double C14234 = C1047 * C31630;
    const double C16766 = C1047 * C2680;
    const double C1750 = C1739 + C1740;
    const double C19270 = C19245 + C19246;
    const double C20696 = C20691 + C20692;
    const double C2344 = C2335 + C2336;
    const double C19970 = C19957 + C19958;
    const double C21406 = C21401 + C21402;
    const double C15798 = C15795 + C15796;
    const double C21405 = C21399 + C21400;
    const double C21548 = C21543 + C21544;
    const double C27242 = C19033 * C6618;
    const double C5804 = C31552 * C5794;
    const double C6062 = C6059 + C6060;
    const double C6776 = C6773 + C6774;
    const double C20695 = C20689 + C20690;
    const double C6218 = C6215 + C6216;
    const double C20489 = C20483 + C20484;
    const double C30720 = C30719 - C30713;
    const double C10764 =
        (5 * (3 * C31154 + C30372 * C31176 + C31153 * ae) +
         C30372 * (4 * C31176 +
                   C30372 * (3 * C31171 +
                             C30372 * (2 * C31163 +
                                       C30372 * (C30443 +
                                                 C30372 * (C30372 * C30454 +
                                                           C30589 * ae) +
                                                 C30372 * C30589 * ae) +
                                       C31165 * ae) +
                             C31170 * ae) +
                   C31174 * ae) +
         (4 * C31153 + C30372 * C31174) * ae) /
        C30350;
    const double C375 = C31552 * C342;
    const double C735 = C31552 * C343;
    const double C852 = C31552 * C551;
    const double C19062 = C19033 * C551;
    const double C579 = C31552 * C555;
    const double C19746 = C19033 * C555;
    const double C1042 = C31552 * C1022;
    const double C19608 = C19033 * C1022;
    const double C1748 = C31552 * C1435;
    const double C19260 = C19033 * C1435;
    const double C2342 = C31552 * C1440;
    const double C19964 = C19033 * C1440;
    const double C1582 = C1578 * C31669;
    const double C2834 = C1578 * C31669;
    const double C13606 = C1578 * C31659;
    const double C14394 = C1578 * C31659;
    const double C16570 = C1578 * C3108;
    const double C2472 = C2468 * C31355;
    const double C30700 = C30685 + C30699;
    const double C30795 = C30790 - C30793;
    const double C6988 = C31552 * C6617;
    const double C25928 = C19033 * C6617;
    const double C30919 = C30916 + C30917;
    const double C6055 =
        4 * (2 * C30539 - (C30536 * ce) / C30383 + C30373 * C30773) -
        ((3 * C30536 + C30373 * C30769) * ce) / C30383 +
        C30373 *
            (3 * C30773 - (C30769 * ce) / C30383 +
             C30373 *
                 (2 * C30771 - (C30763 * ce) / C30383 +
                  C30373 * ((-(C30373 * C30755 * ce) / C30223) / C30350 -
                            C30753 / C30383 +
                            C30373 * ((-(C30373 * C30380 * std::pow(C30376, 8) *
                                         bs[8] * C30378) /
                                       C30223) /
                                          C30350 -
                                      (C30755 * ce) / C30383))));
    const double C6211 =
        (((-3 * C30582) / C30223 +
          C30373 *
              ((-2 * C30578) / C30223 -
               (C30373 * (C30373 * (C30373 * C30380 * C30496 + C30775 * ce) +
                          C30492 + C30373 * C30775 * ce)) /
                   C30223 -
               (C30777 * ce) / C30223) -
          ((2 * C30577 + C30373 * C30777) * ce) / C30223) *
         ae) /
            C30350 +
        C30372 *
            (3 * C30773 - (C30769 * ce) / C30383 +
             C30373 *
                 (2 * C30771 - (C30763 * ce) / C30383 +
                  C30373 * ((-(C30373 * C30755 * ce) / C30223) / C30350 -
                            C30753 / C30383 +
                            C30373 * ((-(C30373 * C30380 * std::pow(C30376, 8) *
                                         bs[8] * C30378) /
                                       C30223) /
                                          C30350 -
                                      (C30755 * ce) / C30383))));
    const double C6877 =
        2 * (C30372 * C30773 - (ae * C30582) / C30383) -
        (ae * (C30809 * C30614 + C30582)) / C30383 +
        C30372 *
            (C30773 - (ae * C30372 * C30809) / C30383 +
             C30372 *
                 (C30372 * ((-(C30373 * C30755 * ce) / C30223) / C30350 -
                            C30753 / C30383 +
                            C30373 * ((-(C30373 * C30380 * std::pow(C30376, 8) *
                                         bs[8] * C30378) /
                                       C30223) /
                                          C30350 -
                                      (C30755 * ce) / C30383)) -
                  (ae * C30809) / C30383));
    const double C10917 =
        3 * (C30539 - (ae * C30873) / C30383 + C30372 * C30879) +
        (((-2 * C30873) / C30223 - (C30372 * C30878) / C30223) * ae) / C30350 +
        C30372 *
            (2 * C30879 - (ae * C30878) / C30383 +
             C30372 *
                 (C30771 - (ae * C30372 * C30806) / C30383 +
                  C30372 * (C30372 * ((-(C30373 * C30380 * std::pow(C30376, 8) *
                                         bs[8] * C30378) /
                                       C30223) /
                                          C30350 -
                                      (C30755 * ce) / C30383) -
                            (ae * C30806) / C30383)));
    const double C11019 =
        4 * (2 * C30632 - (ae * C30629) / C30383 + C30372 * C30902) +
        (((-3 * C30629) / C30223 + C30372 * C30899) * ae) / C30350 +
        C30372 *
            (3 * C30902 + (C30899 * ae) / C30350 +
             C30372 *
                 (2 * C30898 - (ae * C30889) / C30383 +
                  C30372 * ((-(ae * C30372 * C30798) / C30223) / C30350 -
                            C30753 / C30383 +
                            C30372 * ((-(C30372 * C30380 * std::pow(C30376, 8) *
                                         bs[8] * C30378) /
                                       C30223) /
                                          C30350 -
                                      (ae * C30798) / C30383))));
    const double C30871 = C30854 + C30870;
    const double C30746 = C30745 - C30738;
    const double C30812 = C30802 - C30811;
    const double C30295 = C30290 - C30291;
    const double C30294 = C30289 + C31630;
    const double C2709 = C2707 - C2696;
    const double C404 = C403 + C396;
    const double C1199 = C1198 + C1188;
    const double C745 = C741 + C729;
    const double C2710 = C2708 + C2700;
    const double C850 = C598 + C599;
    const double C607 = C602 + C603;
    const double C1057 = C1056 + C1053;
    const double C3291 = C3290 + C2988;
    const double C1754 = C1750 * C31659;
    const double C3443 = C1750 * C3108;
    const double C3701 = C1750 * C31659;
    const double C14232 = C1750 * C31418;
    const double C14958 = C1750 * C1168;
    const double C16408 = C1750 * C31418;
    const double C16966 = C1750 * C31421;
    const double C17296 = C1750 * C31684;
    const double C2348 = C2344 * C31418;
    const double C2992 = C2344 * C31418;
    const double C13758 = C2344 * C31355;
    const double C15660 = C2344 * C31630;
    const double C16410 = C2344 * C2680;
    const double C15800 = C15798 * C31355;
    const double C27246 = C27241 + C27242;
    const double C14760 = C6062 * C31669;
    const double C16210 = C6062 * C31669;
    const double C15662 = C6776 * C31418;
    const double C16412 = C6776 * C31418;
    const double C14960 = C6218 * C31659;
    const double C16968 = C6218 * C3108;
    const double C17298 = C6218 * C31659;
    const double C5791 =
        4 * ((-2 * C30559) / C30223 - (C30373 * C30568) / C30223 -
             (C31007 * ce) / C30223) +
        C30373 * ((-3 * C30568) / C30223 + C30373 * C30720 -
                  (C31095 * ce) / C30223) -
        ((3 * C31007 + C30373 * C31095) * ce) / C30223;
    const double C5922 = C30372 * ((-3 * C30568) / C30223 + C30373 * C30720 -
                                   (C31095 * ce) / C30223);
    const double C5924 = (-2 * C30559) / C30223 - (C30373 * C30568) / C30223 -
                         (C31007 * ce) / C30223 + C30720 * C30614;
    const double C388 = C374 + C375;
    const double C739 = C734 + C735;
    const double C855 = C851 + C852;
    const double C19081 = C19061 + C19062;
    const double C592 = C578 + C579;
    const double C19753 = C19745 + C19746;
    const double C1049 = C1041 + C1042;
    const double C19613 = C19607 + C19608;
    const double C1752 = C1747 + C1748;
    const double C19277 = C19259 + C19260;
    const double C2346 = C2341 + C2342;
    const double C19973 = C19963 + C19964;
    const double C5795 =
        5 * (3 * C30670 - (C30665 * ce) / C30383 + C30373 * C30700) -
        ((4 * C30665 + C30373 * C30697) * ce) / C30383 +
        C30373 *
            (4 * C30700 - (C30697 * ce) / C30383 +
             C30373 *
                 (3 * C30698 - (C30691 * ce) / C30383 +
                  C30373 *
                      (2 * C30693 - (C30684 * ce) / C30383 +
                       C30373 * ((-(C30373 * C30454 * ce) / C30223) / C30350 -
                                 C30412 / C30383 +
                                 C30373 * ((-(C30373 * std::pow(C30376, 8) *
                                              bs[8] * C30378) /
                                            C30223) /
                                               C30350 -
                                           (C30454 * ce) / C30383)))));
    const double C5927 =
        (((-3 * C30568) / C30223 +
          C30373 * ((-2 * C30564) / C30223 -
                    (C30373 * (C30373 * (C30373 * C30483 + C30513 * ce) +
                               C30470 + C30373 * C30513 * ce)) /
                        C30223 -
                    (C30703 * ce) / C30223) -
          ((2 * C30563 + C30373 * C30703) * ce) / C30223) *
         ae) /
            C30350 +
        C30372 * (3 * C30670 - (C30665 * ce) / C30383 + C30373 * C30700);
    const double C5928 = 2 * C30526 - (C30524 * ce) / C30383 + C30373 * C30670 +
                         (C30372 * C30720 * ae) / C30350 +
                         C30372 * ((C30720 * ae) / C30350 + C30372 * C30700);
    const double C6619 =
        3 * (C30670 - (ae * C30789) / C30383 + C30372 * C30795) +
        (((-2 * C30789) / C30223 - (C30372 * C30794) / C30223) * ae) / C30350 +
        C30372 *
            (2 * C30795 - (ae * C30794) / C30383 +
             C30372 *
                 (C30698 - (ae * C30372 * C30740) / C30383 +
                  C30372 *
                      (C30372 * ((-(C30373 * C30454 * ce) / C30223) / C30350 -
                                 C30412 / C30383 +
                                 C30373 * ((-(C30373 * std::pow(C30376, 8) *
                                              bs[8] * C30378) /
                                            C30223) /
                                               C30350 -
                                           (C30454 * ce) / C30383)) -
                       (ae * C30740) / C30383)));
    const double C6992 = C6987 + C6988;
    const double C25940 = C25927 + C25928;
    const double C11121 =
        4 * (2 * C30787 - (ae * C30786) / C30383 + C30372 * C30919) +
        (((-3 * C30786) / C30223 + C30372 * C30920) * ae) / C30350 +
        C30372 *
            (3 * C30919 + (C30920 * ae) / C30350 +
             C30372 *
                 (2 * C30913 - (ae * C30911) / C30383 +
                  C30372 *
                      (C30693 - (ae * C30372 * C30731) / C30383 +
                       C30372 * (C30372 * ((-(C30373 * std::pow(C30376, 8) *
                                              bs[8] * C30378) /
                                            C30223) /
                                               C30350 -
                                           (C30454 * ce) / C30383) -
                                 (ae * C30731) / C30383))));
    const double C10767 =
        5 * (3 * C30838 + (C30835 * ae) / C30350 + C30372 * C30871) +
        ((4 * C30835 + C30372 * C30869) * ae) / C30350 +
        C30372 *
            (4 * C30871 + (C30869 * ae) / C30350 +
             C30372 *
                 (3 * C30868 + (C30864 * ae) / C30350 +
                  C30372 *
                      (2 * C30863 - (ae * C30853) / C30383 +
                       C30372 * ((-(ae * C30372 * C30496) / C30223) / C30350 -
                                 C30412 / C30383 +
                                 C30372 * ((-(C30372 * std::pow(C30376, 8) *
                                              bs[8] * C30378) /
                                            C30223) /
                                               C30350 -
                                           (ae * C30496) / C30383)))));
    const double C30747 = C30373 * C30746;
    const double C6979 =
        2 * ((C30720 * ae) / C30350 + C30372 * C30700) +
        ((C30720 + C30746 * C30614) * ae) / C30350 +
        C30372 *
            (C30700 + (C30372 * C30746 * ae) / C30350 +
             C30372 *
                 ((C30746 * ae) / C30350 +
                  C30372 *
                      (2 * C30693 - (C30684 * ce) / C30383 +
                       C30373 * ((-(C30373 * C30454 * ce) / C30223) / C30350 -
                                 C30412 / C30383 +
                                 C30373 * ((-(C30373 * std::pow(C30376, 8) *
                                              bs[8] * C30378) /
                                            C30223) /
                                               C30350 -
                                           (C30454 * ce) / C30383)))));
    const double C6978 =
        2 * C30372 * C30720 + C30372 * (C30720 + C30746 * C30614);
    const double C30813 = C30812 - C30805;
    const double C3128 = C385 * C30295;
    const double C3124 = C381 * C30295;
    const double C3118 = C376 * C30295;
    const double C3444 = C1045 * C30295;
    const double C3438 = C1043 * C30295;
    const double C16565 = C383 * C30295;
    const double C16561 = C378 * C30295;
    const double C16963 = C1749 * C30295;
    const double C1270 =
        (C30295 / C30240 + ((C30221 * C30309 + C3108) * ce) / C30223) / C30240 -
        ((C30221 * (C30309 / C30240 + (0 * ce) / C30223) + C31669) * de) /
            C30223;
    const double C1548 =
        C30295 / C30240 - ((C30221 * C30309 + C3108) * de) / C30223;
    const double C2816 =
        C30295 / C30240 + ((C30221 * C30309 + C3108) * ce) / C30223;
    const double C30298 = C30294 * de;
    const double C5803 = C113 * C5791;
    const double C6323 = C113 * C5922;
    const double C25749 = C19035 * C5922;
    const double C5945 = C113 * C5924;
    const double C26401 = C19035 * C5924;
    const double C400 = C388 * C31659;
    const double C1194 = C388 * C31659;
    const double C3133 = C388 * C3108;
    const double C13902 = C388 * C31418;
    const double C16072 = C388 * C31418;
    const double C743 = C739 * C31418;
    const double C2704 = C739 * C31418;
    const double C13447 = C739 * C31355;
    const double C857 = C855 * C31355;
    const double C604 = C592 * C31355;
    const double C1055 = C1049 * C31418;
    const double C3289 = C1049 * C31418;
    const double C14033 = C1049 * C31355;
    const double C1756 = C1752 * C31659;
    const double C3449 = C1752 * C3108;
    const double C3707 = C1752 * C31659;
    const double C14236 = C1752 * C31418;
    const double C16768 = C1752 * C31418;
    const double C2350 = C2346 * C31418;
    const double C2996 = C2346 * C31418;
    const double C13759 = C2346 * C31355;
    const double C6324 = C31552 * C5927;
    const double C25750 = C19033 * C5927;
    const double C5946 = C31552 * C5928;
    const double C26402 = C19033 * C5928;
    const double C30748 = C30729 + C30747;
    const double C6769 =
        2 * C30539 - (C30536 * ce) / C30383 + C30373 * C30773 +
        (C30372 * C30813 * ae) / C30350 +
        C30372 *
            ((C30813 * ae) / C30350 +
             C30372 *
                 (2 * C30771 - (C30763 * ce) / C30383 +
                  C30373 * ((-(C30373 * C30755 * ce) / C30223) / C30350 -
                            C30753 / C30383 +
                            C30373 * ((-(C30373 * C30380 * std::pow(C30376, 8) *
                                         bs[8] * C30378) /
                                       C30223) /
                                          C30350 -
                                      (C30755 * ce) / C30383))));
    const double C6054 =
        4 * ((-2 * C30572) / C30223 - (C30373 * C30582) / C30223 -
             (C31014 * ce) / C30223) +
        C30373 * ((-3 * C30582) / C30223 + C30373 * C30813 -
                  (C31111 * ce) / C30223) -
        ((3 * C31014 + C30373 * C31111) * ce) / C30223;
    const double C6210 = C30372 * ((-3 * C30582) / C30223 + C30373 * C30813 -
                                   (C31111 * ce) / C30223);
    const double C6768 = (-2 * C30572) / C30223 - (C30373 * C30582) / C30223 -
                         (C31014 * ce) / C30223 + C30813 * C30614;
    const double C1569 = C383 * C1548;
    const double C1559 = C378 * C1548;
    const double C14757 = C1575 * C1548;
    const double C2831 = C383 * C2816;
    const double C2823 = C378 * C2816;
    const double C16207 = C1575 * C2816;
    const double C30300 = C30298 / C30223;
    const double C5808 = C5803 + C5804;
    const double C6326 = C6323 + C6324;
    const double C25758 = C25749 + C25750;
    const double C5954 = C5945 + C5946;
    const double C26406 = C26401 + C26402;
    const double C30749 = C30748 - C30743;
    const double C30302 = C30288 - C30300;
    const double C5929 =
        3 * C30670 - (C30665 * ce) / C30383 + C30373 * C30700 +
        (C30372 * C30749 * ae) / C30350 +
        C30372 *
            ((C30749 * ae) / C30350 +
             C30372 *
                 (3 * C30698 - (C30691 * ce) / C30383 +
                  C30373 *
                      (2 * C30693 - (C30684 * ce) / C30383 +
                       C30373 * ((-(C30373 * C30454 * ce) / C30223) / C30350 -
                                 C30412 / C30383 +
                                 C30373 * ((-(C30373 * std::pow(C30376, 8) *
                                              bs[8] * C30378) /
                                            C30223) /
                                               C30350 -
                                           (C30454 * ce) / C30383)))));
    const double C6319 =
        ((4 * C30720 + C30373 * C30749 -
          ((3 * C30703 + C30373 * C30739) * ce) / C30223) *
         ae) /
            C30350 +
        C30372 *
            (4 * C30700 - (C30697 * ce) / C30383 +
             C30373 *
                 (3 * C30698 - (C30691 * ce) / C30383 +
                  C30373 *
                      (2 * C30693 - (C30684 * ce) / C30383 +
                       C30373 * ((-(C30373 * C30454 * ce) / C30223) / C30350 -
                                 C30412 / C30383 +
                                 C30373 * ((-(C30373 * std::pow(C30376, 8) *
                                              bs[8] * C30378) /
                                            C30223) /
                                               C30350 -
                                           (C30454 * ce) / C30383)))));
    const double C5793 =
        5 * ((-3 * C30568) / C30223 + C30373 * C30720 -
             (C31095 * ce) / C30223) +
        C30373 * (4 * C30720 + C30373 * C30749 - (C31100 * ce) / C30223) -
        ((4 * C31095 + C30373 * C31100) * ce) / C30223;
    const double C5926 = (-3 * C30568) / C30223 + C30373 * C30720 -
                         (C31095 * ce) / C30223 + C30749 * C30614;
    const double C6318 =
        C30372 * (4 * C30720 + C30373 * C30749 - (C31100 * ce) / C30223);
    const double C30303 = C30302 + C30273;
    const double C3130 = C169 * C30303;
    const double C3122 = C166 * C30303;
    const double C3116 = C164 * C30303;
    const double C3446 = C584 * C30303;
    const double C3440 = C582 * C30303;
    const double C16567 = C381 * C30303;
    const double C16559 = C376 * C30303;
    const double C16965 = C1043 * C30303;
    const double C1267 =
        (((((0 - (C30221 * C30256) / C30223) * ce) / C30223 -
           (0 * de) / C30227 + (2 * C30257) / C30223) /
              C30240 -
          ((C30221 * C30292 + 0) * de) / C30223 + C30266 - C30279) /
             C30240 +
         ((C30221 * C30301 + 0) * ce) / C30223) /
            C30240 -
        ((C30221 * (C30301 / C30240 +
                    ((C30221 * C30303 + C31414) * ce) / C30223 + C30295) +
          C31703) *
         de) /
            C30223 +
        C30303 / C30240 + ((C30221 * C30295 + C31421) * ce) / C30223 +
        2 * (C30273 / C30240 - (0 * de) / C30223);
    const double C1268 =
        (C30301 / C30240 + ((C30221 * C30303 + C31414) * ce) / C30223 +
         C30295) /
            C30240 -
        ((C30221 * (C30303 / C30240 +
                    ((C30221 * C30295 + C31421) * ce) / C30223 + 2 * C30309) +
          C31699) *
         de) /
            C30223 +
        2 * (C30295 / C30240 + ((C30221 * C30309 + C3108) * ce) / C30223);
    const double C1269 =
        (C30303 / C30240 + ((C30221 * C30295 + C31421) * ce) / C30223 +
         2 * C30309) /
            C30240 -
        ((C30221 *
              (C30295 / C30240 + ((C30221 * C30309 + C3108) * ce) / C30223) +
          C31689) *
         de) /
            C30223 +
        3 * (C30309 / C30240 + (0 * ce) / C30223);
    const double C1546 =
        C30301 / C30240 - ((C30221 * C30303 + C31414) * de) / C30223 + C30295;
    const double C1547 = C30303 / C30240 -
                         ((C30221 * C30295 + C31421) * de) / C30223 +
                         2 * C30309;
    const double C2814 =
        C30301 / C30240 + ((C30221 * C30303 + C31414) * ce) / C30223 + C30295;
    const double C2815 = C30303 / C30240 +
                         ((C30221 * C30295 + C31421) * ce) / C30223 +
                         2 * C30309;
    const double C3134 = C3122 + C3123;
    const double C1565 = C166 * C1546;
    const double C1555 = C164 * C1546;
    const double C14753 = C376 * C1546;
    const double C1567 = C381 * C1547;
    const double C1557 = C376 * C1547;
    const double C14755 = C378 * C1547;
    const double C2827 = C166 * C2814;
    const double C2819 = C164 * C2814;
    const double C16203 = C376 * C2814;
    const double C2829 = C381 * C2815;
    const double C2821 = C376 * C2815;
    const double C16205 = C378 * C2815;
    const double C3135 = C3134 - C3124;
    const double C3136 = C3135 - C3125;
    const double C3137 = C3136 + C3126;
    const double C3138 = C3137 + C3127;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
             C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                C13436 +
            (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C13437) *
               C13438 +
           ((C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
             C5151 * C30309 + C5152 * C3108) *
                C13436 +
            (C16559 + C16560 - C16561 - C16562 + C16563 + C16564) * C13437) *
               C13439) *
              C31332 +
          (((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C13436 +
            (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C13437) *
               C13438 +
           ((C16561 - (C16560 + C16559) + C16562 - C16563 - C16564) * C13436 +
            (C16565 - (C16566 + C16567) + C16568 - C16569 - C16570) * C13437) *
               C13439) *
              C31340 +
          ((C3138 * C13436 +
            (C3130 + C3129 - C3128 - C3131 + C3132 + C3133) * C13437) *
               C13438 +
           ((C16567 + C16566 - C16565 - C16568 + C16569 + C16570) * C13436 +
            (C385 * C30303 + C386 * C31414 - C387 * C30295 - C388 * C31421 +
             (C113 * C1550 + C31552 * C1551) * C30309 +
             (C113 * C1552 + C31552 * C1553) * C3108) *
                C13437) *
               C13439) *
              C3111) *
         C31373) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C30303 +
              (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
              C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                 C13436 +
             (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C13437) *
                C13438 +
            ((C5147 * C30303 + C5148 * C31414 - C5149 * C30295 -
              C5150 * C31421 + C5151 * C30309 + C5152 * C3108) *
                 C13436 +
             (C16559 + C16560 - C16561 - C16562 + C16563 + C16564) * C13437) *
                C13439) *
               C2812 +
           (((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C13436 +
             (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C13437) *
                C13438 +
            ((C16561 - (C16560 + C16559) + C16562 - C16563 - C16564) * C13436 +
             (C16565 - (C16566 + C16567) + C16568 - C16569 - C16570) * C13437) *
                C13439) *
               C31337) *
              C31631 +
          ((((C5613 * C30295 -
              ((C113 * C533 + C31552 * C550) * C31414 +
               (C113 * C520 + C31552 * C534) * C30303) +
              C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                 C13436 +
             (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C13437) *
                C13438 +
            ((C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
              C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                 C13436 +
             (C16963 - (C16964 + C16965) + C16966 - C16967 - C16968) * C13437) *
                C13439) *
               C2812 +
           (((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C13436 +
             (C3446 + C3445 - C3444 - C3447 + C3448 + C3449) * C13437) *
                C13438 +
            ((C16965 + C16964 - C16963 - C16966 + C16967 + C16968) * C13436 +
             (C1045 * C30303 + C1047 * C31414 - C1751 * C30295 -
              C1752 * C31421 + (C113 * C1856 + C31552 * C1861) * C30309 +
              (C113 * C1862 + C31552 * C1865) * C3108) *
                 C13437) *
                C13439) *
               C31337) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2814 +
             (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
             C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
             C5152 * C31669) *
                C13436 +
            (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
                C13437) *
               C13438 +
           ((C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
             C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
                C13436 +
            (C16203 + C16204 - C16205 - C16206 + C16207 + C16208 - C16209 -
             C16210) *
                C13437) *
               C13439) *
              C2812 +
          (((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
                C13436 +
            (C2829 - (C2828 + C2827) + C2830 - C2831 - C2832 + C2833 + C2834) *
                C13437) *
               C13438 +
           ((C16205 - (C16204 + C16203) + C16206 - C16207 - C16208 + C16209 +
             C16210) *
                C13436 +
            (C383 * C2815 - (C382 * C31703 + C381 * C2814) + C384 * C31699 -
             C1577 * C2816 - C1578 * C31689 +
             (C113 * C1277 + C31552 * C1288) * C2817 +
             (C113 * C1289 + C31552 * C1295) * C31669) *
                C13437) *
               C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C13436 +
            (C2689 + C2690 - C2691 - C2692) * C13437) *
               C13438 +
           ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C13436 +
            (C16061 + C16062 - C16063 - C16064) * C13437) *
               C13439) *
              C31702 +
          (((C2691 - (C2690 + C2689) + C2692) * C13436 +
            (C2695 - (C2694 + C2693) + C2696) * C13437) *
               C13438 +
           ((C16063 - (C16062 + C16061) + C16064) * C13436 +
            (C16065 - (C16066 + C16067) + C16068) * C13437) *
               C13439) *
              C31695 +
          ((C2709 * C13436 + (C2699 + C2698 - C2697 - C2700) * C13437) *
               C13438 +
           ((C16067 + C16066 - C16065 - C16068) * C13436 +
            (C16069 + C16070 - C16071 - C16072) * C13437) *
               C13439) *
              C31682 +
          ((C2710 * C13436 + (C2703 - (C2702 + C2701) + C2704) * C13437) *
               C13438 +
           ((C16071 - (C16070 + C16069) + C16072) * C13436 +
            ((C113 * C314 + C31552 * C333) * C2687 -
             (C739 * C2680 + C738 * C2686) +
             (C113 * C334 + C31552 * C344) * C31418) *
                C13437) *
               C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C2686 +
              (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
              C5148 * C31418) *
                 C13436 +
             (C2689 + C2690 - C2691 - C2692) * C13437) *
                C13438 +
            ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                 C13436 +
             (C16061 + C16062 - C16063 - C16064) * C13437) *
                C13439) *
               C2812 +
           (((C2691 - (C2690 + C2689) + C2692) * C13436 +
             (C2695 - (C2694 + C2693) + C2696) * C13437) *
                C13438 +
            ((C16063 - (C16062 + C16061) + C16064) * C13436 +
             (C16065 - (C16066 + C16067) + C16068) * C13437) *
                C13439) *
               C31337) *
              C31697 +
          ((((C5613 * C2687 -
              ((C113 * C533 + C31552 * C550) * C2680 +
               (C113 * C520 + C31552 * C534) * C2686) +
              C5614 * C31418) *
                 C13436 +
             (C2981 - (C2982 + C2983) + C2984) * C13437) *
                C13438 +
            ((C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) +
              C5616 * C31418) *
                 C13436 +
             (C16405 - (C16406 + C16407) + C16408) * C13437) *
                C13439) *
               C2812 +
           (((C2983 + C2982 - C2981 - C2984) * C13436 +
             (C2987 + C2986 - C2985 - C2988) * C13437) *
                C13438 +
            ((C16407 + C16406 - C16405 - C16408) * C13436 +
             (C1045 * C2686 + C1047 * C2680 - C1751 * C2687 - C1752 * C31418) *
                 C13437) *
                C13439) *
               C31337) *
              C31686 +
          (((((C113 * C522 + C31552 * C537) * C2686 +
              (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
              C5950 * C31418) *
                 C13436 +
             (C2989 + C2990 - C2991 - C2992) * C13437) *
                C13438 +
            ((C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
                 C13436 +
             (C16409 + C16410 - C16411 - C16412) * C13437) *
                C13439) *
               C2812 +
           (((C2991 - (C2990 + C2989) + C2992) * C13436 +
             (C2995 - (C2994 + C2993) + C2996) * C13437) *
                C13438 +
            ((C16411 - (C16410 + C16409) + C16412) * C13436 +
             ((C113 * C1414 + C31552 * C1431) * C2687 -
              (C2346 * C2680 + C2345 * C2686) +
              (C113 * C1432 + C31552 * C1441) * C31418) *
                 C13437) *
                C13439) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C2686 +
              (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
              C5148 * C31418) *
                 C13436 +
             (C2689 + C2690 - C2691 - C2692) * C13437) *
                C13438 +
            ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                 C13436 +
             (C16061 + C16062 - C16063 - C16064) * C13437) *
                C13439) *
               C31332 +
           (((C2691 - (C2690 + C2689) + C2692) * C13436 +
             (C2695 - (C2694 + C2693) + C2696) * C13437) *
                C13438 +
            ((C16063 - (C16062 + C16061) + C16064) * C13436 +
             (C16065 - (C16066 + C16067) + C16068) * C13437) *
                C13439) *
               C31340 +
           ((C2709 * C13436 + (C2699 + C2698 - C2697 - C2700) * C13437) *
                C13438 +
            ((C16067 + C16066 - C16065 - C16068) * C13436 +
             (C16069 + C16070 - C16071 - C16072) * C13437) *
                C13439) *
               C3111) *
              C31631 +
          ((((C5613 * C2687 -
              ((C113 * C533 + C31552 * C550) * C2680 +
               (C113 * C520 + C31552 * C534) * C2686) +
              C5614 * C31418) *
                 C13436 +
             (C2981 - (C2982 + C2983) + C2984) * C13437) *
                C13438 +
            ((C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) +
              C5616 * C31418) *
                 C13436 +
             (C16405 - (C16406 + C16407) + C16408) * C13437) *
                C13439) *
               C31332 +
           (((C2983 + C2982 - C2981 - C2984) * C13436 +
             (C2987 + C2986 - C2985 - C2988) * C13437) *
                C13438 +
            ((C16407 + C16406 - C16405 - C16408) * C13436 +
             (C16765 + C16766 - C16767 - C16768) * C13437) *
                C13439) *
               C31340 +
           ((C3291 * C13436 + (C3288 - (C3287 + C3286) + C3289) * C13437) *
                C13438 +
            ((C16767 - (C16766 + C16765) + C16768) * C13436 +
             ((C113 * C1728 + C31552 * C1729) * C2687 -
              (C1049 * C2680 + C1048 * C2686) +
              (C113 * C1730 + C31552 * C1731) * C31418) *
                 C13437) *
                C13439) *
               C3111) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C13436 +
            (C2689 + C2690 - C2691 - C2692) * C13437) *
               C13438 +
           ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C13436 +
            (C16061 + C16062 - C16063 - C16064) * C13437) *
               C13439) *
              C31702 +
          (((C2691 - (C2690 + C2689) + C2692) * C13436 +
            (C2695 - (C2694 + C2693) + C2696) * C13437) *
               C13438 +
           ((C16063 - (C16062 + C16061) + C16064) * C13436 +
            (C16065 - (C16066 + C16067) + C16068) * C13437) *
               C13439) *
              C31695 +
          ((C2709 * C13436 + (C2699 + C2698 - C2697 - C2700) * C13437) *
               C13438 +
           ((C16067 + C16066 - C16065 - C16068) * C13436 +
            (C16069 + C16070 - C16071 - C16072) * C13437) *
               C13439) *
              C31682 +
          ((C2710 * C13436 + (C2703 - (C2702 + C2701) + C2704) * C13437) *
               C13438 +
           ((C16071 - (C16070 + C16069) + C16072) * C13436 +
            ((C113 * C314 + C31552 * C333) * C2687 -
             (C739 * C2680 + C738 * C2686) +
             (C113 * C334 + C31552 * C344) * C31418) *
                C13437) *
               C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2814 +
             (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
             C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
             C5152 * C31669) *
                C13436 +
            (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
                C13437) *
               C13438 +
           ((C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
             C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
                C13436 +
            (C16203 + C16204 - C16205 - C16206 + C16207 + C16208 - C16209 -
             C16210) *
                C13437) *
               C13439) *
              C2812 +
          (((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
                C13436 +
            (C2829 - (C2828 + C2827) + C2830 - C2831 - C2832 + C2833 + C2834) *
                C13437) *
               C13438 +
           ((C16205 - (C16204 + C16203) + C16206 - C16207 - C16208 + C16209 +
             C16210) *
                C13436 +
            (C383 * C2815 - (C382 * C31703 + C381 * C2814) + C384 * C31699 -
             C1577 * C2816 - C1578 * C31689 +
             (C113 * C1277 + C31552 * C1288) * C2817 +
             (C113 * C1289 + C31552 * C1295) * C31669) *
                C13437) *
               C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C30303 +
              (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
              C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                 C13436 +
             (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C13437) *
                C13438 +
            ((C5147 * C30303 + C5148 * C31414 - C5149 * C30295 -
              C5150 * C31421 + C5151 * C30309 + C5152 * C3108) *
                 C13436 +
             (C16559 + C16560 - C16561 - C16562 + C16563 + C16564) * C13437) *
                C13439) *
               C31616 +
           (((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C13436 +
             (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C13437) *
                C13438 +
            ((C16561 - (C16560 + C16559) + C16562 - C16563 - C16564) * C13436 +
             (C16565 - (C16566 + C16567) + C16568 - C16569 - C16570) * C13437) *
                C13439) *
               C31337) *
              C3547 +
          ((((C5613 * C30295 -
              ((C113 * C533 + C31552 * C550) * C31414 +
               (C113 * C520 + C31552 * C534) * C30303) +
              C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                 C13436 +
             (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C13437) *
                C13438 +
            ((C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
              C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                 C13436 +
             (C16963 - (C16964 + C16965) + C16966 - C16967 - C16968) * C13437) *
                C13439) *
               C31616 +
           (((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C13436 +
             (C3446 + C3445 - C3444 - C3447 + C3448 + C3449) * C13437) *
                C13438 +
            ((C16965 + C16964 - C16963 - C16966 + C16967 + C16968) * C13436 +
             (C1045 * C30303 + C1047 * C31414 - C1751 * C30295 -
              C1752 * C31421 + (C113 * C1856 + C31552 * C1861) * C30309 +
              (C113 * C1862 + C31552 * C1865) * C3108) *
                 C13437) *
                C13439) *
               C31337) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
             C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                C13436 +
            (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C13437) *
               C13438 +
           ((C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
             C5151 * C30309 + C5152 * C3108) *
                C13436 +
            (C16559 + C16560 - C16561 - C16562 + C16563 + C16564) * C13437) *
               C13439) *
              C31327 * C31456 +
          (((C5613 * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                C13436 +
            (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C13437) *
               C13438 +
           ((C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
             C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                C13436 +
            (C16963 - (C16964 + C16965) + C16966 - C16967 - C16968) * C13437) *
               C13439) *
              C31327 * C31463 +
          ((((C113 * C522 + C31552 * C537) * C30303 +
             (C113 * C538 + C31552 * C552) * C31414 - C5949 * C30295 -
             C5950 * C31421 + C5951 * C30309 + C5952 * C3108) *
                C13436 +
            (C588 * C30303 + C589 * C31414 - C2343 * C30295 - C2344 * C31421 +
             C6775 * C30309 + C6776 * C3108) *
                C13437) *
               C13438 +
           ((C5949 * C30303 + C5950 * C31414 - C5951 * C30295 - C5952 * C31421 +
             C5953 * C30309 + C5954 * C3108) *
                C13436 +
            (C2343 * C30303 + C2344 * C31414 - C6775 * C30295 - C6776 * C31421 +
             (C113 * C6766 + C31552 * C6767) * C30309 +
             (C113 * C6768 + C31552 * C6769) * C3108) *
                C13437) *
               C13439) *
              C31327 * C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2814 +
             (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
             C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
             C5152 * C31669) *
                C13436 +
            (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
                C13437) *
               C13438 +
           ((C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
             C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
                C13436 +
            (C16203 + C16204 - C16205 - C16206 + C16207 + C16208 - C16209 -
             C16210) *
                C13437) *
               C13439) *
              C31327 * C3547 +
          (((C5613 * C2815 -
             ((C113 * C533 + C31552 * C550) * C31703 +
              (C113 * C520 + C31552 * C534) * C2814) +
             C5614 * C31699 - C5615 * C2816 - C5616 * C31689 + C5947 * C2817 +
             C5948 * C31669) *
                C13436 +
            (C1043 * C2815 - (C583 * C31703 + C582 * C2814) + C1044 * C31699 -
             C1749 * C2816 - C1750 * C31689 + C6217 * C2817 + C6218 * C31669) *
                C13437) *
               C13438 +
           ((C5615 * C2815 - (C5614 * C31703 + C5613 * C2814) + C5616 * C31699 -
             C5947 * C2816 - C5948 * C31689 + C6325 * C2817 + C6326 * C31669) *
                C13436 +
            (C1749 * C2815 - (C1044 * C31703 + C1043 * C2814) + C1750 * C31699 -
             C6217 * C2816 - C6218 * C31689 +
             (C113 * C6208 + C31552 * C6209) * C2817 +
             (C113 * C6210 + C31552 * C6211) * C31669) *
                C13437) *
               C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C2686 +
              (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
              C5148 * C31418) *
                 C13436 +
             (C2689 + C2690 - C2691 - C2692) * C13437) *
                C13438 +
            ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                 C13436 +
             (C16061 + C16062 - C16063 - C16064) * C13437) *
                C13439) *
               C31693 +
           (((C2691 - (C2690 + C2689) + C2692) * C13436 +
             (C2695 - (C2694 + C2693) + C2696) * C13437) *
                C13438 +
            ((C16063 - (C16062 + C16061) + C16064) * C13436 +
             (C16065 - (C16066 + C16067) + C16068) * C13437) *
                C13439) *
               C31680 +
           ((C2709 * C13436 + (C2699 + C2698 - C2697 - C2700) * C13437) *
                C13438 +
            ((C16067 + C16066 - C16065 - C16068) * C13436 +
             (C16069 + C16070 - C16071 - C16072) * C13437) *
                C13439) *
               C31653) *
              C3547 +
          ((((C5613 * C2687 -
              ((C113 * C533 + C31552 * C550) * C2680 +
               (C113 * C520 + C31552 * C534) * C2686) +
              C5614 * C31418) *
                 C13436 +
             (C2981 - (C2982 + C2983) + C2984) * C13437) *
                C13438 +
            ((C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) +
              C5616 * C31418) *
                 C13436 +
             (C16405 - (C16406 + C16407) + C16408) * C13437) *
                C13439) *
               C31693 +
           (((C2983 + C2982 - C2981 - C2984) * C13436 +
             (C2987 + C2986 - C2985 - C2988) * C13437) *
                C13438 +
            ((C16407 + C16406 - C16405 - C16408) * C13436 +
             (C16765 + C16766 - C16767 - C16768) * C13437) *
                C13439) *
               C31680 +
           ((C3291 * C13436 + (C3288 - (C3287 + C3286) + C3289) * C13437) *
                C13438 +
            ((C16767 - (C16766 + C16765) + C16768) * C13436 +
             ((C113 * C1728 + C31552 * C1729) * C2687 -
              (C1049 * C2680 + C1048 * C2686) +
              (C113 * C1730 + C31552 * C1731) * C31418) *
                 C13437) *
                C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C13436 +
            (C2689 + C2690 - C2691 - C2692) * C13437) *
               C13438 +
           ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C13436 +
            (C16061 + C16062 - C16063 - C16064) * C13437) *
               C13439) *
              C31327 * C31704 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C13436 +
            (C2981 - (C2982 + C2983) + C2984) * C13437) *
               C13438 +
           ((C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C13436 +
            (C16405 - (C16406 + C16407) + C16408) * C13437) *
               C13439) *
              C31327 * C31701 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
             C5950 * C31418) *
                C13436 +
            (C2989 + C2990 - C2991 - C2992) * C13437) *
               C13438 +
           ((C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
                C13436 +
            (C16409 + C16410 - C16411 - C16412) * C13437) *
               C13439) *
              C31327 * C31692 +
          (((C6989 * C2687 -
             ((C113 * C2166 + C31552 * C2176) * C2680 +
              (C113 * C2158 + C31552 * C2167) * C2686) +
             C6990 * C31418) *
                C13436 +
            (C15797 * C2687 - (C2466 * C2680 + C2465 * C2686) +
             C15798 * C31418) *
                C13437) *
               C13438 +
           ((C6991 * C2687 - (C6990 * C2680 + C6989 * C2686) + C6992 * C31418) *
                C13436 +
            ((C113 * C6874 + C31552 * C6875) * C2687 -
             (C15798 * C2680 + C15797 * C2686) +
             (C113 * C6876 + C31552 * C6877) * C31418) *
                C13437) *
               C13439) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C2686 +
              (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
              C5148 * C31418) *
                 C13436 +
             (C2689 + C2690 - C2691 - C2692) * C13437) *
                C13438 +
            ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                 C13436 +
             (C16061 + C16062 - C16063 - C16064) * C13437) *
                C13439) *
               C31616 +
           (((C2691 - (C2690 + C2689) + C2692) * C13436 +
             (C2695 - (C2694 + C2693) + C2696) * C13437) *
                C13438 +
            ((C16063 - (C16062 + C16061) + C16064) * C13436 +
             (C16065 - (C16066 + C16067) + C16068) * C13437) *
                C13439) *
               C31337) *
              C31456 +
          ((((C5613 * C2687 -
              ((C113 * C533 + C31552 * C550) * C2680 +
               (C113 * C520 + C31552 * C534) * C2686) +
              C5614 * C31418) *
                 C13436 +
             (C2981 - (C2982 + C2983) + C2984) * C13437) *
                C13438 +
            ((C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) +
              C5616 * C31418) *
                 C13436 +
             (C16405 - (C16406 + C16407) + C16408) * C13437) *
                C13439) *
               C31616 +
           (((C2983 + C2982 - C2981 - C2984) * C13436 +
             (C2987 + C2986 - C2985 - C2988) * C13437) *
                C13438 +
            ((C16407 + C16406 - C16405 - C16408) * C13436 +
             (C16765 + C16766 - C16767 - C16768) * C13437) *
                C13439) *
               C31337) *
              C31463 +
          (((((C113 * C522 + C31552 * C537) * C2686 +
              (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
              C5950 * C31418) *
                 C13436 +
             (C2989 + C2990 - C2991 - C2992) * C13437) *
                C13438 +
            ((C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
                 C13436 +
             (C16409 + C16410 - C16411 - C16412) * C13437) *
                C13439) *
               C31616 +
           (((C2991 - (C2990 + C2989) + C2992) * C13436 +
             (C2995 - (C2994 + C2993) + C2996) * C13437) *
                C13438 +
            ((C16411 - (C16410 + C16409) + C16412) * C13436 +
             ((C113 * C1414 + C31552 * C1431) * C2687 -
              (C2346 * C2680 + C2345 * C2686) +
              (C113 * C1432 + C31552 * C1441) * C31418) *
                 C13437) *
                C13439) *
               C31337) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C2686 +
              (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
              C5148 * C31418) *
                 C13436 +
             (C2689 + C2690 - C2691 - C2692) * C13437) *
                C13438 +
            ((C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                 C13436 +
             (C16061 + C16062 - C16063 - C16064) * C13437) *
                C13439) *
               C31693 +
           (((C2691 - (C2690 + C2689) + C2692) * C13436 +
             (C2695 - (C2694 + C2693) + C2696) * C13437) *
                C13438 +
            ((C16063 - (C16062 + C16061) + C16064) * C13436 +
             (C16065 - (C16066 + C16067) + C16068) * C13437) *
                C13439) *
               C31680 +
           ((C2709 * C13436 + (C2699 + C2698 - C2697 - C2700) * C13437) *
                C13438 +
            ((C16067 + C16066 - C16065 - C16068) * C13436 +
             (C16069 + C16070 - C16071 - C16072) * C13437) *
                C13439) *
               C31653) *
              C3547 +
          ((((C5613 * C2687 -
              ((C113 * C533 + C31552 * C550) * C2680 +
               (C113 * C520 + C31552 * C534) * C2686) +
              C5614 * C31418) *
                 C13436 +
             (C2981 - (C2982 + C2983) + C2984) * C13437) *
                C13438 +
            ((C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) +
              C5616 * C31418) *
                 C13436 +
             (C16405 - (C16406 + C16407) + C16408) * C13437) *
                C13439) *
               C31693 +
           (((C2983 + C2982 - C2981 - C2984) * C13436 +
             (C2987 + C2986 - C2985 - C2988) * C13437) *
                C13438 +
            ((C16407 + C16406 - C16405 - C16408) * C13436 +
             (C16765 + C16766 - C16767 - C16768) * C13437) *
                C13439) *
               C31680 +
           ((C3291 * C13436 + (C3288 - (C3287 + C3286) + C3289) * C13437) *
                C13438 +
            ((C16767 - (C16766 + C16765) + C16768) * C13436 +
             ((C113 * C1728 + C31552 * C1729) * C2687 -
              (C1049 * C2680 + C1048 * C2686) +
              (C113 * C1730 + C31552 * C1731) * C31418) *
                 C13437) *
                C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2814 +
             (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
             C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
             C5152 * C31669) *
                C13436 +
            (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
                C13437) *
               C13438 +
           ((C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
             C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
                C13436 +
            (C16203 + C16204 - C16205 - C16206 + C16207 + C16208 - C16209 -
             C16210) *
                C13437) *
               C13439) *
              C31327 * C3547 +
          (((C5613 * C2815 -
             ((C113 * C533 + C31552 * C550) * C31703 +
              (C113 * C520 + C31552 * C534) * C2814) +
             C5614 * C31699 - C5615 * C2816 - C5616 * C31689 + C5947 * C2817 +
             C5948 * C31669) *
                C13436 +
            (C1043 * C2815 - (C583 * C31703 + C582 * C2814) + C1044 * C31699 -
             C1749 * C2816 - C1750 * C31689 + C6217 * C2817 + C6218 * C31669) *
                C13437) *
               C13438 +
           ((C5615 * C2815 - (C5614 * C31703 + C5613 * C2814) + C5616 * C31699 -
             C5947 * C2816 - C5948 * C31689 + C6325 * C2817 + C6326 * C31669) *
                C13436 +
            (C1749 * C2815 - (C1044 * C31703 + C1043 * C2814) + C1750 * C31699 -
             C6217 * C2816 - C6218 * C31689 +
             (C113 * C6208 + C31552 * C6209) * C2817 +
             (C113 * C6210 + C31552 * C6211) * C31669) *
                C13437) *
               C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1546 +
             (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
             C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
             C5152 * C31669) *
                C13436 +
            (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
                C13437) *
               C13438 +
           ((C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
             C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
                C13436 +
            (C14753 + C14754 - C14755 - C14756 + C14757 + C14758 - C14759 -
             C14760) *
                C13437) *
               C13439) *
              C31616 +
          (((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
                C13436 +
            (C1567 - (C1566 + C1565) + C1568 - C1569 - C1570 + C1581 + C1582) *
                C13437) *
               C13438 +
           ((C14755 - (C14754 + C14753) + C14756 - C14757 - C14758 + C14759 +
             C14760) *
                C13436 +
            (C383 * C1547 - (C382 * C1540 + C381 * C1546) + C384 * C1541 -
             C1577 * C1548 - C1578 * C1542 +
             (C113 * C1277 + C31552 * C1288) * C1549 +
             (C113 * C1289 + C31552 * C1295) * C31669) *
                C13437) *
               C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C13436 +
            (C718 + C719 - C720 - C721) * C13437) *
               C13438 +
           ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C13436 +
            (C13891 + C13892 - C13893 - C13894) * C13437) *
               C13439) *
              C707 +
          (((C720 - (C719 + C718) + C721) * C13436 +
            (C724 - (C723 + C722) + C725) * C13437) *
               C13438 +
           ((C13893 - (C13892 + C13891) + C13894) * C13436 +
            (C13895 - (C13896 + C13897) + C13898) * C13437) *
               C13439) *
              C708 +
          ((C744 * C13436 + (C728 + C727 - C726 - C729) * C13437) * C13438 +
           ((C13897 + C13896 - C13895 - C13898) * C13436 +
            (C13899 + C13900 - C13901 - C13902) * C13437) *
               C13439) *
              C709 +
          ((C745 * C13436 + (C742 - (C731 + C730) + C743) * C13437) * C13438 +
           ((C13901 - (C13900 + C13899) + C13902) * C13436 +
            ((C113 * C314 + C31552 * C333) * C712 -
             (C739 * C31630 + C738 * C711) +
             (C113 * C334 + C31552 * C344) * C31418) *
                C13437) *
               C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C711 +
              (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
              C5148 * C31418) *
                 C13436 +
             (C718 + C719 - C720 - C721) * C13437) *
                C13438 +
            ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                 C13436 +
             (C13891 + C13892 - C13893 - C13894) * C13437) *
                C13439) *
               C31616 +
           (((C720 - (C719 + C718) + C721) * C13436 +
             (C724 - (C723 + C722) + C725) * C13437) *
                C13438 +
            ((C13893 - (C13892 + C13891) + C13894) * C13436 +
             (C13895 - (C13896 + C13897) + C13898) * C13437) *
                C13439) *
               C31337) *
              C1976 +
          ((((C5613 * C712 -
              ((C113 * C533 + C31552 * C550) * C31630 +
               (C113 * C520 + C31552 * C534) * C711) +
              C5614 * C31418) *
                 C13436 +
             (C1050 - (C1027 + C1028) + C1051) * C13437) *
                C13438 +
            ((C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                 C13436 +
             (C14229 - (C14230 + C14231) + C14232) * C13437) *
                C13439) *
               C31616 +
           (((C1028 + C1027 - C1050 - C1051) * C13436 +
             (C1034 + C1033 - C1052 - C1053) * C13437) *
                C13438 +
            ((C14231 + C14230 - C14229 - C14232) * C13436 +
             (C14233 + C14234 - C14235 - C14236) * C13437) *
                C13439) *
               C31337) *
              C1977 +
          (((((C113 * C522 + C31552 * C537) * C711 +
              (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
              C5950 * C31418) *
                 C13436 +
             (C2331 + C2332 - C2347 - C2348) * C13437) *
                C13438 +
            ((C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
                 C13436 +
             (C15659 + C15660 - C15661 - C15662) * C13437) *
                C13439) *
               C31616 +
           (((C2347 - (C2332 + C2331) + C2348) * C13436 +
             (C2349 - (C2338 + C2337) + C2350) * C13437) *
                C13438 +
            ((C15661 - (C15660 + C15659) + C15662) * C13436 +
             ((C113 * C1414 + C31552 * C1431) * C712 -
              (C2346 * C31630 + C2345 * C711) +
              (C113 * C1432 + C31552 * C1441) * C31418) *
                 C13437) *
                C13439) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1546 +
             (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
             C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
             C5152 * C31669) *
                C13436 +
            (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
                C13437) *
               C13438 +
           ((C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
             C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
                C13436 +
            (C14753 + C14754 - C14755 - C14756 + C14757 + C14758 - C14759 -
             C14760) *
                C13437) *
               C13439) *
              C31327 * C31631 +
          (((C5613 * C1547 -
             ((C113 * C533 + C31552 * C550) * C1540 +
              (C113 * C520 + C31552 * C534) * C1546) +
             C5614 * C1541 - C5615 * C1548 - C5616 * C1542 + C5947 * C1549 +
             C5948 * C31669) *
                C13436 +
            (C1043 * C1547 - (C583 * C1540 + C582 * C1546) + C1044 * C1541 -
             C1749 * C1548 - C1750 * C1542 + C6217 * C1549 + C6218 * C31669) *
                C13437) *
               C13438 +
           ((C5615 * C1547 - (C5614 * C1540 + C5613 * C1546) + C5616 * C1541 -
             C5947 * C1548 - C5948 * C1542 + C6325 * C1549 + C6326 * C31669) *
                C13436 +
            (C1749 * C1547 - (C1044 * C1540 + C1043 * C1546) + C1750 * C1541 -
             C6217 * C1548 - C6218 * C1542 +
             (C113 * C6208 + C31552 * C6209) * C1549 +
             (C113 * C6210 + C31552 * C6211) * C31669) *
                C13437) *
               C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C711 +
              (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
              C5148 * C31418) *
                 C13436 +
             (C718 + C719 - C720 - C721) * C13437) *
                C13438 +
            ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                 C13436 +
             (C13891 + C13892 - C13893 - C13894) * C13437) *
                C13439) *
               C299 +
           (((C720 - (C719 + C718) + C721) * C13436 +
             (C724 - (C723 + C722) + C725) * C13437) *
                C13438 +
            ((C13893 - (C13892 + C13891) + C13894) * C13436 +
             (C13895 - (C13896 + C13897) + C13898) * C13437) *
                C13439) *
               C300 +
           ((C744 * C13436 + (C728 + C727 - C726 - C729) * C13437) * C13438 +
            ((C13897 + C13896 - C13895 - C13898) * C13436 +
             (C13899 + C13900 - C13901 - C13902) * C13437) *
                C13439) *
               C31653) *
              C31631 +
          ((((C5613 * C712 -
              ((C113 * C533 + C31552 * C550) * C31630 +
               (C113 * C520 + C31552 * C534) * C711) +
              C5614 * C31418) *
                 C13436 +
             (C1050 - (C1027 + C1028) + C1051) * C13437) *
                C13438 +
            ((C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                 C13436 +
             (C14229 - (C14230 + C14231) + C14232) * C13437) *
                C13439) *
               C299 +
           (((C1028 + C1027 - C1050 - C1051) * C13436 +
             (C1034 + C1033 - C1052 - C1053) * C13437) *
                C13438 +
            ((C14231 + C14230 - C14229 - C14232) * C13436 +
             (C14233 + C14234 - C14235 - C14236) * C13437) *
                C13439) *
               C300 +
           ((C1057 * C13436 + (C1054 - (C1038 + C1037) + C1055) * C13437) *
                C13438 +
            ((C14235 - (C14234 + C14233) + C14236) * C13436 +
             ((C113 * C1728 + C31552 * C1729) * C712 -
              (C1049 * C31630 + C1048 * C711) +
              (C113 * C1730 + C31552 * C1731) * C31418) *
                 C13437) *
                C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C13436 +
            (C718 + C719 - C720 - C721) * C13437) *
               C13438 +
           ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C13436 +
            (C13891 + C13892 - C13893 - C13894) * C13437) *
               C13439) *
              C31327 * C2448 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C13436 +
            (C1050 - (C1027 + C1028) + C1051) * C13437) *
               C13438 +
           ((C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C13436 +
            (C14229 - (C14230 + C14231) + C14232) * C13437) *
               C13439) *
              C31327 * C2449 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
             C5950 * C31418) *
                C13436 +
            (C2331 + C2332 - C2347 - C2348) * C13437) *
               C13438 +
           ((C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
                C13436 +
            (C15659 + C15660 - C15661 - C15662) * C13437) *
               C13439) *
              C31327 * C2450 +
          (((C6989 * C712 -
             ((C113 * C2166 + C31552 * C2176) * C31630 +
              (C113 * C2158 + C31552 * C2167) * C711) +
             C6990 * C31418) *
                C13436 +
            (C15797 * C712 - (C2466 * C31630 + C2465 * C711) +
             C15798 * C31418) *
                C13437) *
               C13438 +
           ((C6991 * C712 - (C6990 * C31630 + C6989 * C711) + C6992 * C31418) *
                C13436 +
            ((C113 * C6874 + C31552 * C6875) * C712 -
             (C15798 * C31630 + C15797 * C711) +
             (C113 * C6876 + C31552 * C6877) * C31418) *
                C13437) *
               C13439) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C114 +
                 (C113 * C123 + C31552 * C136) * C31355) *
                    C13436 +
                (C174 + C175) * C13437) *
                   C13438 +
               ((C5147 * C114 + C5148 * C31355) * C13436 +
                (C13441 + C13442) * C13437) *
                   C13439) *
                  C107 -
              (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) *
                   C13439 +
               ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
                  C108 +
              ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
               ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                   C13439) *
                  C109 -
              (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) *
                   C13439 +
               ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
                  C110 +
              ((C186 * C13436 + (C183 + C182) * C13437) * C13438 +
               ((C13448 + C13447) * C13436 +
                ((C113 * C713 + C31552 * C714) * C114 +
                 (C113 * C715 + C31552 * C716) * C31355) *
                    C13437) *
                   C13439) *
                  C111) *
             C31373 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C302 +
                 (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
                 C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                    C13436 +
                (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
                   C13438 +
               ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
                 C5151 * C304 + C5152 * C31659) *
                    C13436 +
                (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) *
                    C13437) *
                   C13439) *
                  C299 +
              (((C389 - (C347 + C346) + C390 - C391 - C392) * C13436 +
                (C393 - (C357 + C356) + C394 - C395 - C396) * C13437) *
                   C13438 +
               ((C13597 - (C13596 + C13595) + C13598 - C13599 - C13600) *
                    C13436 +
                (C13601 - (C13602 + C13603) + C13604 - C13605 - C13606) *
                    C13437) *
                   C13439) *
                  C300 +
              ((C404 * C13436 +
                (C369 + C368 - C397 - C398 + C399 + C400) * C13437) *
                   C13438 +
               ((C13603 + C13602 - C13601 - C13604 + C13605 + C13606) * C13436 +
                (C385 * C302 + C386 * C31696 - C387 * C303 - C388 * C31684 +
                 (C113 * C1550 + C31552 * C1551) * C304 +
                 (C113 * C1552 + C31552 * C1553) * C31659) *
                    C13437) *
                   C13439) *
                  C31653) *
             C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C299 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C300 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C31653) *
              C31697 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C300 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C299 -
           (((C1049 * C31355 + C1048 * C114) * C13437 +
             (C13756 + C13755) * C13436) *
                C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C31653) *
              C31686 +
          (((((C113 * C522 + C31552 * C537) * C114 +
              (C113 * C538 + C31552 * C552) * C31355) *
                 C13436 +
             (C600 + C601) * C13437) *
                C13438 +
            ((C5949 * C114 + C5950 * C31355) * C13436 +
             (C13757 + C13758) * C13437) *
                C13439) *
               C299 -
           (((C13759 + C13760) * C13437 + (C13758 + C13757) * C13436) * C13439 +
            ((C603 + C602) * C13437 + (C601 + C600) * C13436) * C13438) *
               C300 +
           ((C607 * C13436 + (C605 + C604) * C13437) * C13438 +
            ((C13760 + C13759) * C13436 +
             ((C113 * C2326 + C31552 * C2327) * C114 +
              (C113 * C2328 + C31552 * C2329) * C31355) *
                 C13437) *
                C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C13436 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
               C13438 +
           ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C13436 +
            (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
               C13439) *
              C31693 +
          (((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C13436 +
            (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C13437) *
               C13438 +
           ((C14385 - (C14384 + C14383) + C14386 - C14387 - C14388) * C13436 +
            (C14389 - (C14390 + C14391) + C14392 - C14393 - C14394) * C13437) *
               C13439) *
              C31680 +
          ((C1199 * C13436 +
            (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C13437) *
               C13438 +
           ((C14391 + C14390 - C14389 - C14392 + C14393 + C14394) * C13436 +
            (C385 * C1173 + C386 * C1167 - C387 * C1174 - C388 * C1168 +
             (C113 * C1550 + C31552 * C1551) * C1175 +
             (C113 * C1552 + C31552 * C1553) * C31659) *
                C13437) *
               C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1267 +
            (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
            C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
            C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
               C13436 +
           (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
            C378 * C1269 + C379 * C1263 - C1575 * C1270 - C1576 * C1264 +
            C6061 * C1271 + C6062 * C1265) *
               C13437) *
              C13438 +
          ((C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
            C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
            C5807 * C1271 + C5808 * C1265) *
               C13436 +
           (C376 * C1267 + C377 * C1261 - C378 * C1268 - C379 * C1262 +
            C1575 * C1269 + C1576 * C1263 - C6061 * C1270 - C6062 * C1264 +
            (C113 * C6052 + C31552 * C6053) * C1271 +
            (C113 * C6054 + C31552 * C6055) * C1265) *
               C13437) *
              C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C13436 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
               C13438 +
           ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C13436 +
            (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
               C13439) *
              C31327 * C31697 +
          (((C5613 * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                C13436 +
            (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C13437) *
               C13438 +
           ((C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
             C5947 * C1175 - C5948 * C31659) *
                C13436 +
            (C1749 * C1174 - (C1044 * C1167 + C1043 * C1173) + C1750 * C1168 -
             C6217 * C1175 - C6218 * C31659) *
                C13437) *
               C13439) *
              C31327 * C31686 +
          ((((C113 * C522 + C31552 * C537) * C1173 +
             (C113 * C538 + C31552 * C552) * C1167 - C5949 * C1174 -
             C5950 * C1168 + C5951 * C1175 + C5952 * C31659) *
                C13436 +
            (C588 * C1173 + C589 * C1167 - C2343 * C1174 - C2344 * C1168 +
             C6775 * C1175 + C6776 * C31659) *
                C13437) *
               C13438 +
           ((C5949 * C1173 + C5950 * C1167 - C5951 * C1174 - C5952 * C1168 +
             C5953 * C1175 + C5954 * C31659) *
                C13436 +
            (C2343 * C1173 + C2344 * C1167 - C6775 * C1174 - C6776 * C1168 +
             (C113 * C6766 + C31552 * C6767) * C1175 +
             (C113 * C6768 + C31552 * C6769) * C31659) *
                C13437) *
               C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C31693 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C31680 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C31653) *
              C1976 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C31680 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C31693 -
           (((C14033 + C14034) * C13437 + (C13756 + C13755) * C13436) * C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C31653) *
              C1977 +
          (((((C113 * C522 + C31552 * C537) * C114 +
              (C113 * C538 + C31552 * C552) * C31355) *
                 C13436 +
             (C600 + C601) * C13437) *
                C13438 +
            ((C5949 * C114 + C5950 * C31355) * C13436 +
             (C13757 + C13758) * C13437) *
                C13439) *
               C31693 -
           (((C13759 + C13760) * C13437 + (C13758 + C13757) * C13436) * C13439 +
            ((C603 + C602) * C13437 + (C601 + C600) * C13436) * C13438) *
               C31680 +
           ((C607 * C13436 + (C605 + C604) * C13437) * C13438 +
            ((C13760 + C13759) * C13436 +
             ((C113 * C2326 + C31552 * C2327) * C114 +
              (C113 * C2328 + C31552 * C2329) * C31355) *
                 C13437) *
                C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C13436 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
               C13438 +
           ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C13436 +
            (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) * C13437) *
               C13439) *
              C31327 * C1976 +
          (((C5613 * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                C13436 +
            (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C13437) *
               C13438 +
           ((C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
             C5947 * C304 - C5948 * C31659) *
                C13436 +
            (C1749 * C303 - (C1044 * C31696 + C1043 * C302) + C1750 * C31684 -
             C6217 * C304 - C6218 * C31659) *
                C13437) *
               C13439) *
              C31327 * C1977 +
          ((((C113 * C522 + C31552 * C537) * C302 +
             (C113 * C538 + C31552 * C552) * C31696 - C5949 * C303 -
             C5950 * C31684 + C5951 * C304 + C5952 * C31659) *
                C13436 +
            (C588 * C302 + C589 * C31696 - C2343 * C303 - C2344 * C31684 +
             C6775 * C304 + C6776 * C31659) *
                C13437) *
               C13438 +
           ((C5949 * C302 + C5950 * C31696 - C5951 * C303 - C5952 * C31684 +
             C5953 * C304 + C5954 * C31659) *
                C13436 +
            (C2343 * C302 + C2344 * C31696 - C6775 * C303 - C6776 * C31684 +
             (C113 * C6766 + C31552 * C6767) * C304 +
             (C113 * C6768 + C31552 * C6769) * C31659) *
                C13437) *
               C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C13436 +
            (C174 + C175) * C13437) *
               C13438 +
           ((C5147 * C114 + C5148 * C31355) * C13436 +
            (C13441 + C13442) * C13437) *
               C13439) *
              C31327 * C2151 -
          (((C13754 + C13753) * C13437 +
            (C5614 * C31355 + C5613 * C114) * C13436) *
               C13439 +
           ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                      (C113 * C520 + C31552 * C534) * C114) *
                                         C13436) *
               C13438) *
              C31327 * C2152 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C13436 +
            (C600 + C601) * C13437) *
               C13438 +
           ((C5949 * C114 + C5950 * C31355) * C13436 +
            (C13757 + C13758) * C13437) *
               C13439) *
              C31327 * C2153 -
          ((((C113 * C2576 + C31552 * C2580) * C31355 +
             (C113 * C2571 + C31552 * C2575) * C114) *
                C13437 +
            (C6990 * C31355 + C6989 * C114) * C13436) *
               C13439 +
           ((C2470 + C2469) * C13437 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C13436) *
               C13438) *
              C31327 * C2154 +
          ((((C113 * C2159 + C31552 * C2168) * C114 +
             (C113 * C2169 + C31552 * C2177) * C31355) *
                C13436 +
            ((C113 * C2160 + C31552 * C2170) * C114 +
             (C113 * C2171 + C31552 * C2178) * C31355) *
                C13437) *
               C13438 +
           (((C113 * C6609 + C31552 * C6613) * C114 +
             (C113 * C6614 + C31552 * C6618) * C31355) *
                C13436 +
            ((C113 * C10914 + C31552 * C10915) * C114 +
             (C113 * C10916 + C31552 * C10917) * C31355) *
                C13437) *
               C13439) *
              C31327 * C2155)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C1173 +
              (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
              C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                 C13436 +
             (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
                C13438 +
            ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
              C5151 * C1175 + C5152 * C31659) *
                 C13436 +
             (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
                C13439) *
               C31616 +
           (((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C13436 +
             (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C13437) *
                C13438 +
            ((C14385 - (C14384 + C14383) + C14386 - C14387 - C14388) * C13436 +
             (C14389 - (C14390 + C14391) + C14392 - C14393 - C14394) * C13437) *
                C13439) *
               C31337) *
              C31631 +
          ((((C5613 * C1174 -
              ((C113 * C533 + C31552 * C550) * C1167 +
               (C113 * C520 + C31552 * C534) * C1173) +
              C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                 C13436 +
             (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C13437) *
                C13438 +
            ((C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
              C5947 * C1175 - C5948 * C31659) *
                 C13436 +
             (C14955 - (C14956 + C14957) + C14958 - C14959 - C14960) * C13437) *
                C13439) *
               C31616 +
           (((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C13436 +
             (C1743 + C1742 - C1741 - C1744 + C1755 + C1756) * C13437) *
                C13438 +
            ((C14957 + C14956 - C14955 - C14958 + C14959 + C14960) * C13436 +
             (C1045 * C1173 + C1047 * C1167 - C1751 * C1174 - C1752 * C1168 +
              (C113 * C1856 + C31552 * C1861) * C1175 +
              (C113 * C1862 + C31552 * C1865) * C31659) *
                 C13437) *
                C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C707 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C708 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C709 -
           (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) * C13439 +
            ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
               C31663) *
              C31631 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C708 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C707 -
           (((C14033 + C14034) * C13437 + (C13756 + C13755) * C13436) * C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C709 +
           ((C850 * C13436 + (C858 + C857) * C13437) * C13438 +
            ((C14034 + C14033) * C13436 +
             ((C113 * C1008 + C31552 * C1017) * C114 +
              (C113 * C1018 + C31552 * C1023) * C31355) *
                 C13437) *
                C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C31616 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C31337) *
              C2448 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C31337 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C31616) *
              C2449 +
          (((((C113 * C522 + C31552 * C537) * C114 +
              (C113 * C538 + C31552 * C552) * C31355) *
                 C13436 +
             (C600 + C601) * C13437) *
                C13438 +
            ((C5949 * C114 + C5950 * C31355) * C13436 +
             (C13757 + C13758) * C13437) *
                C13439) *
               C31616 -
           (((C13759 + C13760) * C13437 + (C13758 + C13757) * C13436) * C13439 +
            ((C603 + C602) * C13437 + (C601 + C600) * C13436) * C13438) *
               C31337) *
              C2450 +
          ((((C2469 + C2470) * C13436 + (C2471 + C2472) * C13437) * C13438 +
            ((C15799 + C15800) * C13436 +
             ((C113 * C2572 + C31552 * C2577) * C114 +
              (C113 * C2578 + C31552 * C2581) * C31355) *
                 C13437) *
                C13439) *
               C31337 -
           (((C15800 + C15799) * C13437 +
             (C6990 * C31355 + C6989 * C114) * C13436) *
                C13439 +
            ((C2470 + C2469) * C13437 +
             ((C113 * C2166 + C31552 * C2176) * C31355 +
              (C113 * C2158 + C31552 * C2167) * C114) *
                 C13436) *
                C13438) *
               C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C13436 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
               C13438 +
           ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C13436 +
            (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) * C13437) *
               C13439) *
              C299 +
          (((C389 - (C347 + C346) + C390 - C391 - C392) * C13436 +
            (C393 - (C357 + C356) + C394 - C395 - C396) * C13437) *
               C13438 +
           ((C13597 - (C13596 + C13595) + C13598 - C13599 - C13600) * C13436 +
            (C13601 - (C13602 + C13603) + C13604 - C13605 - C13606) * C13437) *
               C13439) *
              C300 +
          ((C404 * C13436 +
            (C369 + C368 - C397 - C398 + C399 + C400) * C13437) *
               C13438 +
           ((C13603 + C13602 - C13601 - C13604 + C13605 + C13606) * C13436 +
            (C385 * C302 + C386 * C31696 - C387 * C303 - C388 * C31684 +
             (C113 * C1550 + C31552 * C1551) * C304 +
             (C113 * C1552 + C31552 * C1553) * C31659) *
                C13437) *
               C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C13436 +
            (C174 + C175) * C13437) *
               C13438 +
           ((C5147 * C114 + C5148 * C31355) * C13436 +
            (C13441 + C13442) * C13437) *
               C13439) *
              C107 -
          (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
           ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
              C108 +
          ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
           ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) * C13439) *
              C109 -
          (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) * C13439 +
           ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
              C110 +
          ((C186 * C13436 + (C183 + C182) * C13437) * C13438 +
           ((C13448 + C13447) * C13436 +
            ((C113 * C713 + C31552 * C714) * C114 +
             (C113 * C715 + C31552 * C716) * C31355) *
                C13437) *
               C13439) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C13436 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
               C13438 +
           ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C13436 +
            (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
               C13439) *
              C31693 +
          (((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C13436 +
            (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C13437) *
               C13438 +
           ((C14385 - (C14384 + C14383) + C14386 - C14387 - C14388) * C13436 +
            (C14389 - (C14390 + C14391) + C14392 - C14393 - C14394) * C13437) *
               C13439) *
              C31680 +
          ((C1199 * C13436 +
            (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C13437) *
               C13438 +
           ((C14391 + C14390 - C14389 - C14392 + C14393 + C14394) * C13436 +
            (C385 * C1173 + C386 * C1167 - C387 * C1174 - C388 * C1168 +
             (C113 * C1550 + C31552 * C1551) * C1175 +
             (C113 * C1552 + C31552 * C1553) * C31659) *
                C13437) *
               C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1267 +
            (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
            C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
            C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
               C13436 +
           (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
            C378 * C1269 + C379 * C1263 - C1575 * C1270 - C1576 * C1264 +
            C6061 * C1271 + C6062 * C1265) *
               C13437) *
              C13438 +
          ((C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
            C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
            C5807 * C1271 + C5808 * C1265) *
               C13436 +
           (C376 * C1267 + C377 * C1261 - C378 * C1268 - C379 * C1262 +
            C1575 * C1269 + C1576 * C1263 - C6061 * C1270 - C6062 * C1264 +
            (C113 * C6052 + C31552 * C6053) * C1271 +
            (C113 * C6054 + C31552 * C6055) * C1265) *
               C13437) *
              C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C31693 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C31680 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C31653) *
              C1976 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C31680 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C31693 -
           (((C14033 + C14034) * C13437 + (C13756 + C13755) * C13436) * C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C31653) *
              C1977 +
          (((((C113 * C522 + C31552 * C537) * C114 +
              (C113 * C538 + C31552 * C552) * C31355) *
                 C13436 +
             (C600 + C601) * C13437) *
                C13438 +
            ((C5949 * C114 + C5950 * C31355) * C13436 +
             (C13757 + C13758) * C13437) *
                C13439) *
               C31693 -
           (((C13759 + C13760) * C13437 + (C13758 + C13757) * C13436) * C13439 +
            ((C603 + C602) * C13437 + (C601 + C600) * C13436) * C13438) *
               C31680 +
           ((C607 * C13436 + (C605 + C604) * C13437) * C13438 +
            ((C13760 + C13759) * C13436 +
             ((C113 * C2326 + C31552 * C2327) * C114 +
              (C113 * C2328 + C31552 * C2329) * C31355) *
                 C13437) *
                C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C13436 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
               C13438 +
           ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C13436 +
            (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) * C13437) *
               C13439) *
              C31327 * C1976 +
          (((C5613 * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                C13436 +
            (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C13437) *
               C13438 +
           ((C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
             C5947 * C304 - C5948 * C31659) *
                C13436 +
            (C1749 * C303 - (C1044 * C31696 + C1043 * C302) + C1750 * C31684 -
             C6217 * C304 - C6218 * C31659) *
                C13437) *
               C13439) *
              C31327 * C1977 +
          ((((C113 * C522 + C31552 * C537) * C302 +
             (C113 * C538 + C31552 * C552) * C31696 - C5949 * C303 -
             C5950 * C31684 + C5951 * C304 + C5952 * C31659) *
                C13436 +
            (C588 * C302 + C589 * C31696 - C2343 * C303 - C2344 * C31684 +
             C6775 * C304 + C6776 * C31659) *
                C13437) *
               C13438 +
           ((C5949 * C302 + C5950 * C31696 - C5951 * C303 - C5952 * C31684 +
             C5953 * C304 + C5954 * C31659) *
                C13436 +
            (C2343 * C302 + C2344 * C31696 - C6775 * C303 - C6776 * C31684 +
             (C113 * C6766 + C31552 * C6767) * C304 +
             (C113 * C6768 + C31552 * C6769) * C31659) *
                C13437) *
               C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C711 +
              (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
              C5148 * C31418) *
                 C13436 +
             (C718 + C719 - C720 - C721) * C13437) *
                C13438 +
            ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                 C13436 +
             (C13891 + C13892 - C13893 - C13894) * C13437) *
                C13439) *
               C31332 +
           (((C720 - (C719 + C718) + C721) * C13436 +
             (C724 - (C723 + C722) + C725) * C13437) *
                C13438 +
            ((C13893 - (C13892 + C13891) + C13894) * C13436 +
             (C13895 - (C13896 + C13897) + C13898) * C13437) *
                C13439) *
               C31340 +
           ((C744 * C13436 + (C728 + C727 - C726 - C729) * C13437) * C13438 +
            ((C13897 + C13896 - C13895 - C13898) * C13436 +
             (C13899 + C13900 - C13901 - C13902) * C13437) *
                C13439) *
               C3111) *
              C3547 +
          ((((C5613 * C712 -
              ((C113 * C533 + C31552 * C550) * C31630 +
               (C113 * C520 + C31552 * C534) * C711) +
              C5614 * C31418) *
                 C13436 +
             (C1050 - (C1027 + C1028) + C1051) * C13437) *
                C13438 +
            ((C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                 C13436 +
             (C14229 - (C14230 + C14231) + C14232) * C13437) *
                C13439) *
               C31332 +
           (((C1028 + C1027 - C1050 - C1051) * C13436 +
             (C1034 + C1033 - C1052 - C1053) * C13437) *
                C13438 +
            ((C14231 + C14230 - C14229 - C14232) * C13436 +
             (C14233 + C14234 - C14235 - C14236) * C13437) *
                C13439) *
               C31340 +
           ((C1057 * C13436 + (C1054 - (C1038 + C1037) + C1055) * C13437) *
                C13438 +
            ((C14235 - (C14234 + C14233) + C14236) * C13436 +
             ((C113 * C1728 + C31552 * C1729) * C712 -
              (C1049 * C31630 + C1048 * C711) +
              (C113 * C1730 + C31552 * C1731) * C31418) *
                 C13437) *
                C13439) *
               C3111) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C711 +
              (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
              C5148 * C31418) *
                 C13436 +
             (C718 + C719 - C720 - C721) * C13437) *
                C13438 +
            ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                 C13436 +
             (C13891 + C13892 - C13893 - C13894) * C13437) *
                C13439) *
               C2812 +
           (((C720 - (C719 + C718) + C721) * C13436 +
             (C724 - (C723 + C722) + C725) * C13437) *
                C13438 +
            ((C13893 - (C13892 + C13891) + C13894) * C13436 +
             (C13895 - (C13896 + C13897) + C13898) * C13437) *
                C13439) *
               C31337) *
              C31456 +
          ((((C5613 * C712 -
              ((C113 * C533 + C31552 * C550) * C31630 +
               (C113 * C520 + C31552 * C534) * C711) +
              C5614 * C31418) *
                 C13436 +
             (C1050 - (C1027 + C1028) + C1051) * C13437) *
                C13438 +
            ((C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                 C13436 +
             (C14229 - (C14230 + C14231) + C14232) * C13437) *
                C13439) *
               C2812 +
           (((C1028 + C1027 - C1050 - C1051) * C13436 +
             (C1034 + C1033 - C1052 - C1053) * C13437) *
                C13438 +
            ((C14231 + C14230 - C14229 - C14232) * C13436 +
             (C14233 + C14234 - C14235 - C14236) * C13437) *
                C13439) *
               C31337) *
              C31463 +
          (((((C113 * C522 + C31552 * C537) * C711 +
              (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
              C5950 * C31418) *
                 C13436 +
             (C2331 + C2332 - C2347 - C2348) * C13437) *
                C13438 +
            ((C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
                 C13436 +
             (C15659 + C15660 - C15661 - C15662) * C13437) *
                C13439) *
               C2812 +
           (((C2347 - (C2332 + C2331) + C2348) * C13436 +
             (C2349 - (C2338 + C2337) + C2350) * C13437) *
                C13438 +
            ((C15661 - (C15660 + C15659) + C15662) * C13436 +
             ((C113 * C1414 + C31552 * C1431) * C712 -
              (C2346 * C31630 + C2345 * C711) +
              (C113 * C1432 + C31552 * C1441) * C31418) *
                 C13437) *
                C13439) *
               C31337) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C302 +
              (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
              C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                 C13436 +
             (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
                C13438 +
            ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
              C5151 * C304 + C5152 * C31659) *
                 C13436 +
             (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) * C13437) *
                C13439) *
               C2812 +
           (((C389 - (C347 + C346) + C390 - C391 - C392) * C13436 +
             (C393 - (C357 + C356) + C394 - C395 - C396) * C13437) *
                C13438 +
            ((C13597 - (C13596 + C13595) + C13598 - C13599 - C13600) * C13436 +
             (C13601 - (C13602 + C13603) + C13604 - C13605 - C13606) * C13437) *
                C13439) *
               C31337) *
              C3547 +
          ((((C5613 * C303 -
              ((C113 * C533 + C31552 * C550) * C31696 +
               (C113 * C520 + C31552 * C534) * C302) +
              C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                 C13436 +
             (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C13437) *
                C13438 +
            ((C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
              C5947 * C304 - C5948 * C31659) *
                 C13436 +
             (C17293 - (C17294 + C17295) + C17296 - C17297 - C17298) * C13437) *
                C13439) *
               C2812 +
           (((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C13436 +
             (C3704 + C3703 - C3702 - C3705 + C3706 + C3707) * C13437) *
                C13438 +
            ((C17295 + C17294 - C17293 - C17296 + C17297 + C17298) * C13436 +
             (C1045 * C302 + C1047 * C31696 - C1751 * C303 - C1752 * C31684 +
              (C113 * C1856 + C31552 * C1861) * C304 +
              (C113 * C1862 + C31552 * C1865) * C31659) *
                 C13437) *
                C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C31702 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C31695 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C31682 -
           (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) * C13439 +
            ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
               C31663) *
              C3547 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C31695 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C31702 -
           (((C14033 + C14034) * C13437 + (C13756 + C13755) * C13436) * C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C31682 +
           ((C850 * C13436 + (C858 + C857) * C13437) * C13438 +
            ((C14034 + C14033) * C13436 +
             ((C113 * C1008 + C31552 * C1017) * C114 +
              (C113 * C1018 + C31552 * C1023) * C31355) *
                 C13437) *
                C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C2812 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C31337) *
              C31704 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C31337 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C2812) *
              C31701 +
          (((((C113 * C522 + C31552 * C537) * C114 +
              (C113 * C538 + C31552 * C552) * C31355) *
                 C13436 +
             (C600 + C601) * C13437) *
                C13438 +
            ((C5949 * C114 + C5950 * C31355) * C13436 +
             (C13757 + C13758) * C13437) *
                C13439) *
               C2812 -
           (((C13759 + C13760) * C13437 + (C13758 + C13757) * C13436) * C13439 +
            ((C603 + C602) * C13437 + (C601 + C600) * C13436) * C13438) *
               C31337) *
              C31692 +
          ((((C2469 + C2470) * C13436 + (C2471 + C2472) * C13437) * C13438 +
            ((C15799 + C15800) * C13436 +
             ((C113 * C2572 + C31552 * C2577) * C114 +
              (C113 * C2578 + C31552 * C2581) * C31355) *
                 C13437) *
                C13439) *
               C31337 -
           (((C15800 + C15799) * C13437 +
             (C6990 * C31355 + C6989 * C114) * C13436) *
                C13439 +
            ((C2470 + C2469) * C13437 +
             ((C113 * C2166 + C31552 * C2176) * C31355 +
              (C113 * C2158 + C31552 * C2167) * C114) *
                 C13436) *
                C13438) *
               C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C31332 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C31340 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C3111) *
              C31456 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C31340 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C31332 -
           (((C14033 + C14034) * C13437 + (C13756 + C13755) * C13436) * C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C3111) *
              C31463 +
          (((((C113 * C522 + C31552 * C537) * C114 +
              (C113 * C538 + C31552 * C552) * C31355) *
                 C13436 +
             (C600 + C601) * C13437) *
                C13438 +
            ((C5949 * C114 + C5950 * C31355) * C13436 +
             (C13757 + C13758) * C13437) *
                C13439) *
               C31332 -
           (((C13759 + C13760) * C13437 + (C13758 + C13757) * C13436) * C13439 +
            ((C603 + C602) * C13437 + (C601 + C600) * C13436) * C13438) *
               C31340 +
           ((C607 * C13436 + (C605 + C604) * C13437) * C13438 +
            ((C13760 + C13759) * C13436 +
             ((C113 * C2326 + C31552 * C2327) * C114 +
              (C113 * C2328 + C31552 * C2329) * C31355) *
                 C13437) *
                C13439) *
               C3111) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C31702 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C31695 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C31682 -
           (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) * C13439 +
            ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
               C31663) *
              C3547 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C31695 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C31702 -
           (((C14033 + C14034) * C13437 + (C13756 + C13755) * C13436) * C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C31682 +
           ((C850 * C13436 + (C858 + C857) * C13437) * C13438 +
            ((C14034 + C14033) * C13436 +
             ((C113 * C1008 + C31552 * C1017) * C114 +
              (C113 * C1018 + C31552 * C1023) * C31355) *
                 C13437) *
                C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C302 +
              (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
              C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                 C13436 +
             (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
                C13438 +
            ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
              C5151 * C304 + C5152 * C31659) *
                 C13436 +
             (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) * C13437) *
                C13439) *
               C2812 +
           (((C389 - (C347 + C346) + C390 - C391 - C392) * C13436 +
             (C393 - (C357 + C356) + C394 - C395 - C396) * C13437) *
                C13438 +
            ((C13597 - (C13596 + C13595) + C13598 - C13599 - C13600) * C13436 +
             (C13601 - (C13602 + C13603) + C13604 - C13605 - C13606) * C13437) *
                C13439) *
               C31337) *
              C3547 +
          ((((C5613 * C303 -
              ((C113 * C533 + C31552 * C550) * C31696 +
               (C113 * C520 + C31552 * C534) * C302) +
              C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                 C13436 +
             (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C13437) *
                C13438 +
            ((C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
              C5947 * C304 - C5948 * C31659) *
                 C13436 +
             (C17293 - (C17294 + C17295) + C17296 - C17297 - C17298) * C13437) *
                C13439) *
               C2812 +
           (((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C13436 +
             (C3704 + C3703 - C3702 - C3705 + C3706 + C3707) * C13437) *
                C13438 +
            ((C17295 + C17294 - C17293 - C17296 + C17297 + C17298) * C13436 +
             (C1045 * C302 + C1047 * C31696 - C1751 * C303 - C1752 * C31684 +
              (C113 * C1856 + C31552 * C1861) * C304 +
              (C113 * C1862 + C31552 * C1865) * C31659) *
                 C13437) *
                C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C13436 +
            (C718 + C719 - C720 - C721) * C13437) *
               C13438 +
           ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C13436 +
            (C13891 + C13892 - C13893 - C13894) * C13437) *
               C13439) *
              C707 +
          (((C720 - (C719 + C718) + C721) * C13436 +
            (C724 - (C723 + C722) + C725) * C13437) *
               C13438 +
           ((C13893 - (C13892 + C13891) + C13894) * C13436 +
            (C13895 - (C13896 + C13897) + C13898) * C13437) *
               C13439) *
              C708 +
          ((C744 * C13436 + (C728 + C727 - C726 - C729) * C13437) * C13438 +
           ((C13897 + C13896 - C13895 - C13898) * C13436 +
            (C13899 + C13900 - C13901 - C13902) * C13437) *
               C13439) *
              C709 +
          ((C745 * C13436 + (C742 - (C731 + C730) + C743) * C13437) * C13438 +
           ((C13901 - (C13900 + C13899) + C13902) * C13436 +
            ((C113 * C314 + C31552 * C333) * C712 -
             (C739 * C31630 + C738 * C711) +
             (C113 * C334 + C31552 * C344) * C31418) *
                C13437) *
               C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1546 +
             (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
             C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
             C5152 * C31669) *
                C13436 +
            (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
                C13437) *
               C13438 +
           ((C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
             C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
                C13436 +
            (C14753 + C14754 - C14755 - C14756 + C14757 + C14758 - C14759 -
             C14760) *
                C13437) *
               C13439) *
              C31616 +
          (((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
                C13436 +
            (C1567 - (C1566 + C1565) + C1568 - C1569 - C1570 + C1581 + C1582) *
                C13437) *
               C13438 +
           ((C14755 - (C14754 + C14753) + C14756 - C14757 - C14758 + C14759 +
             C14760) *
                C13436 +
            (C383 * C1547 - (C382 * C1540 + C381 * C1546) + C384 * C1541 -
             C1577 * C1548 - C1578 * C1542 +
             (C113 * C1277 + C31552 * C1288) * C1549 +
             (C113 * C1289 + C31552 * C1295) * C31669) *
                C13437) *
               C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C711 +
              (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
              C5148 * C31418) *
                 C13436 +
             (C718 + C719 - C720 - C721) * C13437) *
                C13438 +
            ((C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                 C13436 +
             (C13891 + C13892 - C13893 - C13894) * C13437) *
                C13439) *
               C299 +
           (((C720 - (C719 + C718) + C721) * C13436 +
             (C724 - (C723 + C722) + C725) * C13437) *
                C13438 +
            ((C13893 - (C13892 + C13891) + C13894) * C13436 +
             (C13895 - (C13896 + C13897) + C13898) * C13437) *
                C13439) *
               C300 +
           ((C744 * C13436 + (C728 + C727 - C726 - C729) * C13437) * C13438 +
            ((C13897 + C13896 - C13895 - C13898) * C13436 +
             (C13899 + C13900 - C13901 - C13902) * C13437) *
                C13439) *
               C31653) *
              C31631 +
          ((((C5613 * C712 -
              ((C113 * C533 + C31552 * C550) * C31630 +
               (C113 * C520 + C31552 * C534) * C711) +
              C5614 * C31418) *
                 C13436 +
             (C1050 - (C1027 + C1028) + C1051) * C13437) *
                C13438 +
            ((C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                 C13436 +
             (C14229 - (C14230 + C14231) + C14232) * C13437) *
                C13439) *
               C299 +
           (((C1028 + C1027 - C1050 - C1051) * C13436 +
             (C1034 + C1033 - C1052 - C1053) * C13437) *
                C13438 +
            ((C14231 + C14230 - C14229 - C14232) * C13436 +
             (C14233 + C14234 - C14235 - C14236) * C13437) *
                C13439) *
               C300 +
           ((C1057 * C13436 + (C1054 - (C1038 + C1037) + C1055) * C13437) *
                C13438 +
            ((C14235 - (C14234 + C14233) + C14236) * C13436 +
             ((C113 * C1728 + C31552 * C1729) * C712 -
              (C1049 * C31630 + C1048 * C711) +
              (C113 * C1730 + C31552 * C1731) * C31418) *
                 C13437) *
                C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1546 +
             (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
             C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
             C5152 * C31669) *
                C13436 +
            (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
                C13437) *
               C13438 +
           ((C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
             C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
                C13436 +
            (C14753 + C14754 - C14755 - C14756 + C14757 + C14758 - C14759 -
             C14760) *
                C13437) *
               C13439) *
              C31327 * C31631 +
          (((C5613 * C1547 -
             ((C113 * C533 + C31552 * C550) * C1540 +
              (C113 * C520 + C31552 * C534) * C1546) +
             C5614 * C1541 - C5615 * C1548 - C5616 * C1542 + C5947 * C1549 +
             C5948 * C31669) *
                C13436 +
            (C1043 * C1547 - (C583 * C1540 + C582 * C1546) + C1044 * C1541 -
             C1749 * C1548 - C1750 * C1542 + C6217 * C1549 + C6218 * C31669) *
                C13437) *
               C13438 +
           ((C5615 * C1547 - (C5614 * C1540 + C5613 * C1546) + C5616 * C1541 -
             C5947 * C1548 - C5948 * C1542 + C6325 * C1549 + C6326 * C31669) *
                C13436 +
            (C1749 * C1547 - (C1044 * C1540 + C1043 * C1546) + C1750 * C1541 -
             C6217 * C1548 - C6218 * C1542 +
             (C113 * C6208 + C31552 * C6209) * C1549 +
             (C113 * C6210 + C31552 * C6211) * C31669) *
                C13437) *
               C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C13436 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
               C13438 +
           ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C13436 +
            (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) * C13437) *
               C13439) *
              C299 +
          (((C389 - (C347 + C346) + C390 - C391 - C392) * C13436 +
            (C393 - (C357 + C356) + C394 - C395 - C396) * C13437) *
               C13438 +
           ((C13597 - (C13596 + C13595) + C13598 - C13599 - C13600) * C13436 +
            (C13601 - (C13602 + C13603) + C13604 - C13605 - C13606) * C13437) *
               C13439) *
              C300 +
          ((C404 * C13436 +
            (C369 + C368 - C397 - C398 + C399 + C400) * C13437) *
               C13438 +
           ((C13603 + C13602 - C13601 - C13604 + C13605 + C13606) * C13436 +
            (C385 * C302 + C386 * C31696 - C387 * C303 - C388 * C31684 +
             (C113 * C1550 + C31552 * C1551) * C304 +
             (C113 * C1552 + C31552 * C1553) * C31659) *
                C13437) *
               C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C13436 +
            (C174 + C175) * C13437) *
               C13438 +
           ((C5147 * C114 + C5148 * C31355) * C13436 +
            (C13441 + C13442) * C13437) *
               C13439) *
              C107 -
          (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
           ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
              C108 +
          ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
           ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) * C13439) *
              C109 -
          (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) * C13439 +
           ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
              C110 +
          ((C186 * C13436 + (C183 + C182) * C13437) * C13438 +
           ((C13448 + C13447) * C13436 +
            ((C113 * C713 + C31552 * C714) * C114 +
             (C113 * C715 + C31552 * C716) * C31355) *
                C13437) *
               C13439) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C299 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C300 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C31653) *
              C31697 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C300 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C299 -
           (((C1049 * C31355 + C1048 * C114) * C13437 +
             (C13756 + C13755) * C13436) *
                C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C31653) *
              C31686 +
          (((((C113 * C522 + C31552 * C537) * C114 +
              (C113 * C538 + C31552 * C552) * C31355) *
                 C13436 +
             (C600 + C601) * C13437) *
                C13438 +
            ((C5949 * C114 + C5950 * C31355) * C13436 +
             (C13757 + C13758) * C13437) *
                C13439) *
               C299 -
           (((C13759 + C13760) * C13437 + (C13758 + C13757) * C13436) * C13439 +
            ((C603 + C602) * C13437 + (C601 + C600) * C13436) * C13438) *
               C300 +
           ((C607 * C13436 + (C605 + C604) * C13437) * C13438 +
            ((C13760 + C13759) * C13436 +
             ((C113 * C2326 + C31552 * C2327) * C114 +
              (C113 * C2328 + C31552 * C2329) * C31355) *
                 C13437) *
                C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C13436 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
               C13438 +
           ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C13436 +
            (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
               C13439) *
              C31693 +
          (((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C13436 +
            (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C13437) *
               C13438 +
           ((C14385 - (C14384 + C14383) + C14386 - C14387 - C14388) * C13436 +
            (C14389 - (C14390 + C14391) + C14392 - C14393 - C14394) * C13437) *
               C13439) *
              C31680 +
          ((C1199 * C13436 +
            (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C13437) *
               C13438 +
           ((C14391 + C14390 - C14389 - C14392 + C14393 + C14394) * C13436 +
            (C385 * C1173 + C386 * C1167 - C387 * C1174 - C388 * C1168 +
             (C113 * C1550 + C31552 * C1551) * C1175 +
             (C113 * C1552 + C31552 * C1553) * C31659) *
                C13437) *
               C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1267 +
            (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
            C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
            C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
               C13436 +
           (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
            C378 * C1269 + C379 * C1263 - C1575 * C1270 - C1576 * C1264 +
            C6061 * C1271 + C6062 * C1265) *
               C13437) *
              C13438 +
          ((C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
            C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
            C5807 * C1271 + C5808 * C1265) *
               C13436 +
           (C376 * C1267 + C377 * C1261 - C378 * C1268 - C379 * C1262 +
            C1575 * C1269 + C1576 * C1263 - C6061 * C1270 - C6062 * C1264 +
            (C113 * C6052 + C31552 * C6053) * C1271 +
            (C113 * C6054 + C31552 * C6055) * C1265) *
               C13437) *
              C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C13436 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
               C13438 +
           ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C13436 +
            (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
               C13439) *
              C31327 * C31697 +
          (((C5613 * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                C13436 +
            (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C13437) *
               C13438 +
           ((C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
             C5947 * C1175 - C5948 * C31659) *
                C13436 +
            (C1749 * C1174 - (C1044 * C1167 + C1043 * C1173) + C1750 * C1168 -
             C6217 * C1175 - C6218 * C31659) *
                C13437) *
               C13439) *
              C31327 * C31686 +
          ((((C113 * C522 + C31552 * C537) * C1173 +
             (C113 * C538 + C31552 * C552) * C1167 - C5949 * C1174 -
             C5950 * C1168 + C5951 * C1175 + C5952 * C31659) *
                C13436 +
            (C588 * C1173 + C589 * C1167 - C2343 * C1174 - C2344 * C1168 +
             C6775 * C1175 + C6776 * C31659) *
                C13437) *
               C13438 +
           ((C5949 * C1173 + C5950 * C1167 - C5951 * C1174 - C5952 * C1168 +
             C5953 * C1175 + C5954 * C31659) *
                C13436 +
            (C2343 * C1173 + C2344 * C1167 - C6775 * C1174 - C6776 * C1168 +
             (C113 * C6766 + C31552 * C6767) * C1175 +
             (C113 * C6768 + C31552 * C6769) * C31659) *
                C13437) *
               C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C114 +
              (C113 * C123 + C31552 * C136) * C31355) *
                 C13436 +
             (C174 + C175) * C13437) *
                C13438 +
            ((C5147 * C114 + C5148 * C31355) * C13436 +
             (C13441 + C13442) * C13437) *
                C13439) *
               C707 -
           (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
            ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
               C708 +
           ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
            ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) *
                C13439) *
               C709 -
           (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) * C13439 +
            ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
               C31663) *
              C31631 +
          ((((C594 + C595) * C13436 + (C596 + C597) * C13437) * C13438 +
            ((C13753 + C13754) * C13436 + (C13755 + C13756) * C13437) *
                C13439) *
               C708 -
           (((C13754 + C13753) * C13437 +
             (C5614 * C31355 + C5613 * C114) * C13436) *
                C13439 +
            ((C595 + C594) * C13437 + ((C113 * C533 + C31552 * C550) * C31355 +
                                       (C113 * C520 + C31552 * C534) * C114) *
                                          C13436) *
                C13438) *
               C707 -
           (((C14033 + C14034) * C13437 + (C13756 + C13755) * C13436) * C13439 +
            ((C599 + C598) * C13437 + C606 * C13436) * C13438) *
               C709 +
           ((C850 * C13436 + (C858 + C857) * C13437) * C13438 +
            ((C14034 + C14033) * C13436 +
             ((C113 * C1008 + C31552 * C1017) * C114 +
              (C113 * C1018 + C31552 * C1023) * C31355) *
                 C13437) *
                C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31552 * C122) * C1173 +
              (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
              C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                 C13436 +
             (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
                C13438 +
            ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
              C5151 * C1175 + C5152 * C31659) *
                 C13436 +
             (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
                C13439) *
               C31616 +
           (((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C13436 +
             (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C13437) *
                C13438 +
            ((C14385 - (C14384 + C14383) + C14386 - C14387 - C14388) * C13436 +
             (C14389 - (C14390 + C14391) + C14392 - C14393 - C14394) * C13437) *
                C13439) *
               C31337) *
              C31631 +
          ((((C5613 * C1174 -
              ((C113 * C533 + C31552 * C550) * C1167 +
               (C113 * C520 + C31552 * C534) * C1173) +
              C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                 C13436 +
             (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C13437) *
                C13438 +
            ((C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
              C5947 * C1175 - C5948 * C31659) *
                 C13436 +
             (C14955 - (C14956 + C14957) + C14958 - C14959 - C14960) * C13437) *
                C13439) *
               C31616 +
           (((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C13436 +
             (C1743 + C1742 - C1741 - C1744 + C1755 + C1756) * C13437) *
                C13438 +
            ((C14957 + C14956 - C14955 - C14958 + C14959 + C14960) * C13436 +
             (C1045 * C1173 + C1047 * C1167 - C1751 * C1174 - C1752 * C1168 +
              (C113 * C1856 + C31552 * C1861) * C1175 +
              (C113 * C1862 + C31552 * C1865) * C31659) *
                 C13437) *
                C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C13436 +
            (C174 + C175) * C13437) *
               C13438 +
           ((C5147 * C114 + C5148 * C31355) * C13436 +
            (C13441 + C13442) * C13437) *
               C13439) *
              C107 -
          (((C13443 + C13444) * C13437 + (C13442 + C13441) * C13436) * C13439 +
           ((C177 + C176) * C13437 + (C175 + C174) * C13436) * C13438) *
              C108 +
          ((C184 * C13436 + (C179 + C178) * C13437) * C13438 +
           ((C13444 + C13443) * C13436 + (C13445 + C13446) * C13437) * C13439) *
              C109 -
          (((C13447 + C13448) * C13437 + (C13446 + C13445) * C13436) * C13439 +
           ((C181 + C180) * C13437 + C185 * C13436) * C13438) *
              C110 +
          ((C186 * C13436 + (C183 + C182) * C13437) * C13438 +
           ((C13448 + C13447) * C13436 +
            ((C113 * C713 + C31552 * C714) * C114 +
             (C113 * C715 + C31552 * C716) * C31355) *
                C13437) *
               C13439) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C13436 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C13437) *
               C13438 +
           ((C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C13436 +
            (C13595 + C13596 - C13597 - C13598 + C13599 + C13600) * C13437) *
               C13439) *
              C299 +
          (((C389 - (C347 + C346) + C390 - C391 - C392) * C13436 +
            (C393 - (C357 + C356) + C394 - C395 - C396) * C13437) *
               C13438 +
           ((C13597 - (C13596 + C13595) + C13598 - C13599 - C13600) * C13436 +
            (C13601 - (C13602 + C13603) + C13604 - C13605 - C13606) * C13437) *
               C13439) *
              C300 +
          ((C404 * C13436 +
            (C369 + C368 - C397 - C398 + C399 + C400) * C13437) *
               C13438 +
           ((C13603 + C13602 - C13601 - C13604 + C13605 + C13606) * C13436 +
            (C385 * C302 + C386 * C31696 - C387 * C303 - C388 * C31684 +
             (C113 * C1550 + C31552 * C1551) * C304 +
             (C113 * C1552 + C31552 * C1553) * C31659) *
                C13437) *
               C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C13436 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C13437) *
               C13438 +
           ((C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C13436 +
            (C14383 + C14384 - C14385 - C14386 + C14387 + C14388) * C13437) *
               C13439) *
              C31693 +
          (((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C13436 +
            (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C13437) *
               C13438 +
           ((C14385 - (C14384 + C14383) + C14386 - C14387 - C14388) * C13436 +
            (C14389 - (C14390 + C14391) + C14392 - C14393 - C14394) * C13437) *
               C13439) *
              C31680 +
          ((C1199 * C13436 +
            (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C13437) *
               C13438 +
           ((C14391 + C14390 - C14389 - C14392 + C14393 + C14394) * C13436 +
            (C385 * C1173 + C386 * C1167 - C387 * C1174 - C388 * C1168 +
             (C113 * C1550 + C31552 * C1551) * C1175 +
             (C113 * C1552 + C31552 * C1553) * C31659) *
                C13437) *
               C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1267 +
            (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
            C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
            C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
               C13436 +
           (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
            C378 * C1269 + C379 * C1263 - C1575 * C1270 - C1576 * C1264 +
            C6061 * C1271 + C6062 * C1265) *
               C13437) *
              C13438 +
          ((C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
            C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
            C5807 * C1271 + C5808 * C1265) *
               C13436 +
           (C376 * C1267 + C377 * C1261 - C378 * C1268 - C379 * C1262 +
            C1575 * C1269 + C1576 * C1263 - C6061 * C1270 - C6062 * C1264 +
            (C113 * C6052 + C31552 * C6053) * C1271 +
            (C113 * C6054 + C31552 * C6055) * C1265) *
               C13437) *
              C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C30303 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31414 -
            (C24887 + C24888) * C30295 - (C24889 + C24890) * C31421 +
            (C24891 + C24892) * C30309 + (C24893 + C24894) * C3108) *
               C31311 * C13438 +
           ((C24888 + C24887) * C30303 + (C24890 + C24889) * C31414 -
            (C24892 + C24891) * C30295 - (C24894 + C24893) * C31421 +
            (C25752 + C25751) * C30309 + (C25754 + C25753) * C3108) *
               C31311 * C13439) *
              C31332 +
          (((C19264 + C19263) * C30295 -
            ((C19072 + C19071) * C31414 + (C19070 + C19069) * C30303) +
            (C19266 + C19265) * C31421 - (C19268 + C19267) * C30309 -
            (C19270 + C19269) * C3108) *
               C31311 * C13438 +
           ((C19267 + C19268) * C30295 -
            ((C19265 + C19266) * C31414 + (C19263 + C19264) * C30303) +
            (C19269 + C19270) * C31421 - (C20487 + C20488) * C30309 -
            (C20489 + C20490) * C3108) *
               C31311 * C13439) *
              C31340 +
          (((C19076 + C19075) * C30303 + (C19074 + C19073) * C31414 -
            (C19272 + C19271) * C30295 - (C19274 + C19273) * C31421 +
            (C19276 + C19275) * C30309 + (C19278 + C19277) * C3108) *
               C31311 * C13438 +
           ((C19271 + C19272) * C30303 + (C19273 + C19274) * C31414 -
            (C19275 + C19276) * C30295 - (C19277 + C19278) * C31421 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C30309 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C3108) *
               C31311 * C13439) *
              C3111) *
         C31373) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C30303 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31414 -
             (C24887 + C24888) * C30295 - (C24889 + C24890) * C31421 +
             (C24891 + C24892) * C30309 + (C24893 + C24894) * C3108) *
                C31311 * C13438 +
            ((C24888 + C24887) * C30303 + (C24890 + C24889) * C31414 -
             (C24892 + C24891) * C30295 - (C24894 + C24893) * C31421 +
             (C25752 + C25751) * C30309 + (C25754 + C25753) * C3108) *
                C31311 * C13439) *
               C2812 +
           (((C19264 + C19263) * C30295 -
             ((C19072 + C19071) * C31414 + (C19070 + C19069) * C30303) +
             (C19266 + C19265) * C31421 - (C19268 + C19267) * C30309 -
             (C19270 + C19269) * C3108) *
                C31311 * C13438 +
            ((C19267 + C19268) * C30295 -
             ((C19265 + C19266) * C31414 + (C19263 + C19264) * C30303) +
             (C19269 + C19270) * C31421 - (C20487 + C20488) * C30309 -
             (C20489 + C20490) * C3108) *
                C31311 * C13439) *
               C31337) *
              C31631 +
          ((((C25503 + C25504) * C30295 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31414 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C30303) +
             (C25505 + C25506) * C31421 - (C25929 + C25930) * C30309 -
             (C25931 + C25932) * C3108) *
                C31311 * C13438 +
            ((C25930 + C25929) * C30295 -
             ((C25506 + C25505) * C31414 + (C25504 + C25503) * C30303) +
             (C25932 + C25931) * C31421 - (C26404 + C26403) * C30309 -
             (C26406 + C26405) * C3108) *
                C31311 * C13439) *
               C2812 +
           (((C19457 + C19458) * C30303 + (C19459 + C19460) * C31414 -
             (C19968 + C19967) * C30295 - (C19970 + C19969) * C31421 +
             (C20694 + C20693) * C30309 + (C20696 + C20695) * C3108) *
                C31311 * C13438 +
            ((C19967 + C19968) * C30303 + (C19969 + C19970) * C31414 -
             (C20693 + C20694) * C30295 - (C20695 + C20696) * C31421 +
             (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
              C19033 * C6767) *
                 C30309 +
             (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
              C19033 * C6769) *
                 C3108) *
                C31311 * C13439) *
               C31337) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C24887 + C24888) * C2815 - (C24889 + C24890) * C31699 +
            (C24891 + C24892) * C2816 + (C24893 + C24894) * C31689 -
            (C25751 + C25752) * C2817 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C2814 + (C24890 + C24889) * C31703 -
            (C24892 + C24891) * C2815 - (C24894 + C24893) * C31699 +
            (C25752 + C25751) * C2816 + (C25754 + C25753) * C31689 -
            (C25756 + C25755) * C2817 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C2812 +
          (((C19264 + C19263) * C2815 -
            ((C19072 + C19071) * C31703 + (C19070 + C19069) * C2814) +
            (C19266 + C19265) * C31699 - (C19268 + C19267) * C2816 -
            (C19270 + C19269) * C31689 + (C20488 + C20487) * C2817 +
            (C20490 + C20489) * C31669) *
               C31311 * C13438 +
           ((C19267 + C19268) * C2815 -
            ((C19265 + C19266) * C31703 + (C19263 + C19264) * C2814) +
            (C19269 + C19270) * C31699 - (C20487 + C20488) * C2816 -
            (C20489 + C20490) * C31689 +
            (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 +
             C19033 * C6209) *
                C2817 +
            (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 +
             C19033 * C6211) *
                C31669) *
               C31311 * C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2686 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C2680 -
            (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
               C31311 * C13438 +
           ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
            (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
               C31311 * C13439) *
              C31702 +
          (((C19264 + C19263) * C2687 -
            ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
            (C19266 + C19265) * C31418) *
               C31311 * C13438 +
           ((C19267 + C19268) * C2687 -
            ((C19265 + C19266) * C2680 + (C19263 + C19264) * C2686) +
            (C19269 + C19270) * C31418) *
               C31311 * C13439) *
              C31695 +
          (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
            (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
               C31311 * C13438 +
           ((C19271 + C19272) * C2686 + (C19273 + C19274) * C2680 -
            (C19275 + C19276) * C2687 - (C19277 + C19278) * C31418) *
               C31311 * C13439) *
              C31682 +
          (((C19612 + C19611) * C2687 -
            ((C19080 + C19079) * C2680 + (C19078 + C19077) * C2686) +
            (C19614 + C19613) * C31418) *
               C31311 * C13438 +
           ((C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C2687 -
            ((C19613 + C19614) * C2680 + (C19611 + C19612) * C2686) +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31418) *
               C31311 * C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
             (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C2812 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C2687 -
             ((C19265 + C19266) * C2680 + (C19263 + C19264) * C2686) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31337) *
              C31697 +
          ((((C25503 + C25504) * C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C2687 -
             ((C25506 + C25505) * C2680 + (C25504 + C25503) * C2686) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C2812 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C2686 + (C19969 + C19970) * C2680 -
             (C20693 + C20694) * C2687 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31337) *
              C31686 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C2686 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C2680 -
             (C25933 + C25934) * C2687 - (C25935 + C25936) * C31418) *
                C31311 * C13438 +
            ((C25934 + C25933) * C2686 + (C25936 + C25935) * C2680 -
             (C25938 + C25937) * C2687 - (C25940 + C25939) * C31418) *
                C31311 * C13439) *
               C2812 +
           (((C21404 + C21403) * C2687 -
             ((C19468 + C19467) * C2680 + (C19466 + C19465) * C2686) +
             (C21406 + C21405) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
              C19033 * C6875) *
                 C2687 -
             ((C21405 + C21406) * C2680 + (C21403 + C21404) * C2686) +
             (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
              C19033 * C6877) *
                 C31418) *
                C31311 * C13439) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
             (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C31332 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C2687 -
             ((C19265 + C19266) * C2680 + (C19263 + C19264) * C2686) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31340 +
           (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
             (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
                C31311 * C13438 +
            ((C19271 + C19272) * C2686 + (C19273 + C19274) * C2680 -
             (C19275 + C19276) * C2687 - (C19277 + C19278) * C31418) *
                C31311 * C13439) *
               C3111) *
              C31631 +
          ((((C25503 + C25504) * C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C2687 -
             ((C25506 + C25505) * C2680 + (C25504 + C25503) * C2686) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C31332 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C2686 + (C19969 + C19970) * C2680 -
             (C20693 + C20694) * C2687 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31340 +
           (((C19972 + C19971) * C2687 -
             ((C19464 + C19463) * C2680 + (C19462 + C19461) * C2686) +
             (C19974 + C19973) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C2687 -
             ((C19973 + C19974) * C2680 + (C19971 + C19972) * C2686) +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31418) *
                C31311 * C13439) *
               C3111) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2686 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C2680 -
            (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
               C31311 * C13438 +
           ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
            (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
               C31311 * C13439) *
              C31702 +
          (((C19264 + C19263) * C2687 -
            ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
            (C19266 + C19265) * C31418) *
               C31311 * C13438 +
           ((C19267 + C19268) * C2687 -
            ((C19265 + C19266) * C2680 + (C19263 + C19264) * C2686) +
            (C19269 + C19270) * C31418) *
               C31311 * C13439) *
              C31695 +
          (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
            (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
               C31311 * C13438 +
           ((C19271 + C19272) * C2686 + (C19273 + C19274) * C2680 -
            (C19275 + C19276) * C2687 - (C19277 + C19278) * C31418) *
               C31311 * C13439) *
              C31682 +
          (((C19612 + C19611) * C2687 -
            ((C19080 + C19079) * C2680 + (C19078 + C19077) * C2686) +
            (C19614 + C19613) * C31418) *
               C31311 * C13438 +
           ((C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C2687 -
            ((C19613 + C19614) * C2680 + (C19611 + C19612) * C2686) +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31418) *
               C31311 * C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C24887 + C24888) * C2815 - (C24889 + C24890) * C31699 +
            (C24891 + C24892) * C2816 + (C24893 + C24894) * C31689 -
            (C25751 + C25752) * C2817 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C2814 + (C24890 + C24889) * C31703 -
            (C24892 + C24891) * C2815 - (C24894 + C24893) * C31699 +
            (C25752 + C25751) * C2816 + (C25754 + C25753) * C31689 -
            (C25756 + C25755) * C2817 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C2812 +
          (((C19264 + C19263) * C2815 -
            ((C19072 + C19071) * C31703 + (C19070 + C19069) * C2814) +
            (C19266 + C19265) * C31699 - (C19268 + C19267) * C2816 -
            (C19270 + C19269) * C31689 + (C20488 + C20487) * C2817 +
            (C20490 + C20489) * C31669) *
               C31311 * C13438 +
           ((C19267 + C19268) * C2815 -
            ((C19265 + C19266) * C31703 + (C19263 + C19264) * C2814) +
            (C19269 + C19270) * C31699 - (C20487 + C20488) * C2816 -
            (C20489 + C20490) * C31689 +
            (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 +
             C19033 * C6209) *
                C2817 +
            (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 +
             C19033 * C6211) *
                C31669) *
               C31311 * C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C30303 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31414 -
             (C24887 + C24888) * C30295 - (C24889 + C24890) * C31421 +
             (C24891 + C24892) * C30309 + (C24893 + C24894) * C3108) *
                C31311 * C13438 +
            ((C24888 + C24887) * C30303 + (C24890 + C24889) * C31414 -
             (C24892 + C24891) * C30295 - (C24894 + C24893) * C31421 +
             (C25752 + C25751) * C30309 + (C25754 + C25753) * C3108) *
                C31311 * C13439) *
               C31616 +
           (((C19264 + C19263) * C30295 -
             ((C19072 + C19071) * C31414 + (C19070 + C19069) * C30303) +
             (C19266 + C19265) * C31421 - (C19268 + C19267) * C30309 -
             (C19270 + C19269) * C3108) *
                C31311 * C13438 +
            ((C19267 + C19268) * C30295 -
             ((C19265 + C19266) * C31414 + (C19263 + C19264) * C30303) +
             (C19269 + C19270) * C31421 - (C20487 + C20488) * C30309 -
             (C20489 + C20490) * C3108) *
                C31311 * C13439) *
               C31337) *
              C3547 +
          ((((C25503 + C25504) * C30295 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31414 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C30303) +
             (C25505 + C25506) * C31421 - (C25929 + C25930) * C30309 -
             (C25931 + C25932) * C3108) *
                C31311 * C13438 +
            ((C25930 + C25929) * C30295 -
             ((C25506 + C25505) * C31414 + (C25504 + C25503) * C30303) +
             (C25932 + C25931) * C31421 - (C26404 + C26403) * C30309 -
             (C26406 + C26405) * C3108) *
                C31311 * C13439) *
               C31616 +
           (((C19457 + C19458) * C30303 + (C19459 + C19460) * C31414 -
             (C19968 + C19967) * C30295 - (C19970 + C19969) * C31421 +
             (C20694 + C20693) * C30309 + (C20696 + C20695) * C3108) *
                C31311 * C13438 +
            ((C19967 + C19968) * C30303 + (C19969 + C19970) * C31414 -
             (C20693 + C20694) * C30295 - (C20695 + C20696) * C31421 +
             (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
              C19033 * C6767) *
                 C30309 +
             (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
              C19033 * C6769) *
                 C3108) *
                C31311 * C13439) *
               C31337) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C30303 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31414 -
            (C24887 + C24888) * C30295 - (C24889 + C24890) * C31421 +
            (C24891 + C24892) * C30309 + (C24893 + C24894) * C3108) *
               C31311 * C13438 +
           ((C24888 + C24887) * C30303 + (C24890 + C24889) * C31414 -
            (C24892 + C24891) * C30295 - (C24894 + C24893) * C31421 +
            (C25752 + C25751) * C30309 + (C25754 + C25753) * C3108) *
               C31311 * C13439) *
              C31327 * C31456 +
          (((C25503 + C25504) * C30295 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31414 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C30303) +
            (C25505 + C25506) * C31421 - (C25929 + C25930) * C30309 -
            (C25931 + C25932) * C3108) *
               C31311 * C13438 +
           ((C25930 + C25929) * C30295 -
            ((C25506 + C25505) * C31414 + (C25504 + C25503) * C30303) +
            (C25932 + C25931) * C31421 - (C26404 + C26403) * C30309 -
            (C26406 + C26405) * C3108) *
               C31311 * C13439) *
              C31327 * C31463 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C30303 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31414 -
            (C25933 + C25934) * C30295 - (C25935 + C25936) * C31421 +
            (C25937 + C25938) * C30309 + (C25939 + C25940) * C3108) *
               C31311 * C13438 +
           ((C25934 + C25933) * C30303 + (C25936 + C25935) * C31414 -
            (C25938 + C25937) * C30295 - (C25940 + C25939) * C31421 +
            (C19034 * C5919 + C19032 * C5923 + C19035 * C6976 +
             C19033 * C6977) *
                C30309 +
            (C19034 * C5924 + C19032 * C5928 + C19035 * C6978 +
             C19033 * C6979) *
                C3108) *
               C31311 * C13439) *
              C31327 * C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C24887 + C24888) * C2815 - (C24889 + C24890) * C31699 +
            (C24891 + C24892) * C2816 + (C24893 + C24894) * C31689 -
            (C25751 + C25752) * C2817 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C2814 + (C24890 + C24889) * C31703 -
            (C24892 + C24891) * C2815 - (C24894 + C24893) * C31699 +
            (C25752 + C25751) * C2816 + (C25754 + C25753) * C31689 -
            (C25756 + C25755) * C2817 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C31327 * C3547 +
          (((C25503 + C25504) * C2815 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31703 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C2814) +
            (C25505 + C25506) * C31699 - (C25929 + C25930) * C2816 -
            (C25931 + C25932) * C31689 + (C26403 + C26404) * C2817 +
            (C26405 + C26406) * C31669) *
               C31311 * C13438 +
           ((C25930 + C25929) * C2815 -
            ((C25506 + C25505) * C31703 + (C25504 + C25503) * C2814) +
            (C25932 + C25931) * C31699 - (C26404 + C26403) * C2816 -
            (C26406 + C26405) * C31689 +
            (C19034 * C5918 + C19032 * C5921 + C19035 * C5920 +
             C19033 * C5925) *
                C2817 +
            (C19034 * C5922 + C19032 * C5927 + C19035 * C5926 +
             C19033 * C5929) *
                C31669) *
               C31311 * C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
             (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C31693 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C2687 -
             ((C19265 + C19266) * C2680 + (C19263 + C19264) * C2686) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31680 +
           (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
             (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
                C31311 * C13438 +
            ((C19271 + C19272) * C2686 + (C19273 + C19274) * C2680 -
             (C19275 + C19276) * C2687 - (C19277 + C19278) * C31418) *
                C31311 * C13439) *
               C31653) *
              C3547 +
          ((((C25503 + C25504) * C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C2687 -
             ((C25506 + C25505) * C2680 + (C25504 + C25503) * C2686) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C31693 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C2686 + (C19969 + C19970) * C2680 -
             (C20693 + C20694) * C2687 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31680 +
           (((C19972 + C19971) * C2687 -
             ((C19464 + C19463) * C2680 + (C19462 + C19461) * C2686) +
             (C19974 + C19973) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C2687 -
             ((C19973 + C19974) * C2680 + (C19971 + C19972) * C2686) +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31418) *
                C31311 * C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2686 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C2680 -
            (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
               C31311 * C13438 +
           ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
            (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
               C31311 * C13439) *
              C31327 * C31704 +
          (((C25503 + C25504) * C2687 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C2680 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C2686) +
            (C25505 + C25506) * C31418) *
               C31311 * C13438 +
           ((C25930 + C25929) * C2687 -
            ((C25506 + C25505) * C2680 + (C25504 + C25503) * C2686) +
            (C25932 + C25931) * C31418) *
               C31311 * C13439) *
              C31327 * C31701 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C2686 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C2680 -
            (C25933 + C25934) * C2687 - (C25935 + C25936) * C31418) *
               C31311 * C13438 +
           ((C25934 + C25933) * C2686 + (C25936 + C25935) * C2680 -
            (C25938 + C25937) * C2687 - (C25940 + C25939) * C31418) *
               C31311 * C13439) *
              C31327 * C31692 +
          (((C27243 + C27244) * C2687 -
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C2680 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C2686) +
            (C27245 + C27246) * C31418) *
               C31311 * C13438 +
           ((C19034 * C6608 + C19032 * C6612 + C19035 * C6610 +
             C19033 * C6615) *
                C2687 -
            ((C27246 + C27245) * C2680 + (C27244 + C27243) * C2686) +
            (C19034 * C6611 + C19032 * C6617 + C19035 * C6616 +
             C19033 * C6619) *
                C31418) *
               C31311 * C13439) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
             (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C31616 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C2687 -
             ((C19265 + C19266) * C2680 + (C19263 + C19264) * C2686) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31337) *
              C31456 +
          ((((C25503 + C25504) * C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C2687 -
             ((C25506 + C25505) * C2680 + (C25504 + C25503) * C2686) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C31616 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C2686 + (C19969 + C19970) * C2680 -
             (C20693 + C20694) * C2687 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31337) *
              C31463 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C2686 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C2680 -
             (C25933 + C25934) * C2687 - (C25935 + C25936) * C31418) *
                C31311 * C13438 +
            ((C25934 + C25933) * C2686 + (C25936 + C25935) * C2680 -
             (C25938 + C25937) * C2687 - (C25940 + C25939) * C31418) *
                C31311 * C13439) *
               C31616 +
           (((C21404 + C21403) * C2687 -
             ((C19468 + C19467) * C2680 + (C19466 + C19465) * C2686) +
             (C21406 + C21405) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
              C19033 * C6875) *
                 C2687 -
             ((C21405 + C21406) * C2680 + (C21403 + C21404) * C2686) +
             (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
              C19033 * C6877) *
                 C31418) *
                C31311 * C13439) *
               C31337) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C24887 + C24888) * C2687 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C2686 + (C24890 + C24889) * C2680 -
             (C24892 + C24891) * C2687 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C31693 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C2687 -
             ((C19265 + C19266) * C2680 + (C19263 + C19264) * C2686) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31680 +
           (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
             (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
                C31311 * C13438 +
            ((C19271 + C19272) * C2686 + (C19273 + C19274) * C2680 -
             (C19275 + C19276) * C2687 - (C19277 + C19278) * C31418) *
                C31311 * C13439) *
               C31653) *
              C3547 +
          ((((C25503 + C25504) * C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C2687 -
             ((C25506 + C25505) * C2680 + (C25504 + C25503) * C2686) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C31693 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C2686 + (C19969 + C19970) * C2680 -
             (C20693 + C20694) * C2687 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31680 +
           (((C19972 + C19971) * C2687 -
             ((C19464 + C19463) * C2680 + (C19462 + C19461) * C2686) +
             (C19974 + C19973) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C2687 -
             ((C19973 + C19974) * C2680 + (C19971 + C19972) * C2686) +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31418) *
                C31311 * C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C24887 + C24888) * C2815 - (C24889 + C24890) * C31699 +
            (C24891 + C24892) * C2816 + (C24893 + C24894) * C31689 -
            (C25751 + C25752) * C2817 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C2814 + (C24890 + C24889) * C31703 -
            (C24892 + C24891) * C2815 - (C24894 + C24893) * C31699 +
            (C25752 + C25751) * C2816 + (C25754 + C25753) * C31689 -
            (C25756 + C25755) * C2817 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C31327 * C3547 +
          (((C25503 + C25504) * C2815 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31703 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C2814) +
            (C25505 + C25506) * C31699 - (C25929 + C25930) * C2816 -
            (C25931 + C25932) * C31689 + (C26403 + C26404) * C2817 +
            (C26405 + C26406) * C31669) *
               C31311 * C13438 +
           ((C25930 + C25929) * C2815 -
            ((C25506 + C25505) * C31703 + (C25504 + C25503) * C2814) +
            (C25932 + C25931) * C31699 - (C26404 + C26403) * C2816 -
            (C26406 + C26405) * C31689 +
            (C19034 * C5918 + C19032 * C5921 + C19035 * C5920 +
             C19033 * C5925) *
                C2817 +
            (C19034 * C5922 + C19032 * C5927 + C19035 * C5926 +
             C19033 * C5929) *
                C31669) *
               C31311 * C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C24887 + C24888) * C1547 - (C24889 + C24890) * C1541 +
            (C24891 + C24892) * C1548 + (C24893 + C24894) * C1542 -
            (C25751 + C25752) * C1549 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1546 + (C24890 + C24889) * C1540 -
            (C24892 + C24891) * C1547 - (C24894 + C24893) * C1541 +
            (C25752 + C25751) * C1548 + (C25754 + C25753) * C1542 -
            (C25756 + C25755) * C1549 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C31616 +
          (((C19264 + C19263) * C1547 -
            ((C19072 + C19071) * C1540 + (C19070 + C19069) * C1546) +
            (C19266 + C19265) * C1541 - (C19268 + C19267) * C1548 -
            (C19270 + C19269) * C1542 + (C20488 + C20487) * C1549 +
            (C20490 + C20489) * C31669) *
               C31311 * C13438 +
           ((C19267 + C19268) * C1547 -
            ((C19265 + C19266) * C1540 + (C19263 + C19264) * C1546) +
            (C19269 + C19270) * C1541 - (C20487 + C20488) * C1548 -
            (C20489 + C20490) * C1542 +
            (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 +
             C19033 * C6209) *
                C1549 +
            (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 +
             C19033 * C6211) *
                C31669) *
               C31311 * C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C711 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31630 -
            (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
               C31311 * C13438 +
           ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
            (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
               C31311 * C13439) *
              C707 +
          (((C19264 + C19263) * C712 -
            ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
            (C19266 + C19265) * C31418) *
               C31311 * C13438 +
           ((C19267 + C19268) * C712 -
            ((C19265 + C19266) * C31630 + (C19263 + C19264) * C711) +
            (C19269 + C19270) * C31418) *
               C31311 * C13439) *
              C708 +
          (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
            (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
               C31311 * C13438 +
           ((C19271 + C19272) * C711 + (C19273 + C19274) * C31630 -
            (C19275 + C19276) * C712 - (C19277 + C19278) * C31418) *
               C31311 * C13439) *
              C709 +
          (((C19612 + C19611) * C712 -
            ((C19080 + C19079) * C31630 + (C19078 + C19077) * C711) +
            (C19614 + C19613) * C31418) *
               C31311 * C13438 +
           ((C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C712 -
            ((C19613 + C19614) * C31630 + (C19611 + C19612) * C711) +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31418) *
               C31311 * C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
             (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C31616 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C712 -
             ((C19265 + C19266) * C31630 + (C19263 + C19264) * C711) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31337) *
              C1976 +
          ((((C25503 + C25504) * C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C712 -
             ((C25506 + C25505) * C31630 + (C25504 + C25503) * C711) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C31616 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C711 + (C19969 + C19970) * C31630 -
             (C20693 + C20694) * C712 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31337) *
              C1977 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C711 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31630 -
             (C25933 + C25934) * C712 - (C25935 + C25936) * C31418) *
                C31311 * C13438 +
            ((C25934 + C25933) * C711 + (C25936 + C25935) * C31630 -
             (C25938 + C25937) * C712 - (C25940 + C25939) * C31418) *
                C31311 * C13439) *
               C31616 +
           (((C21404 + C21403) * C712 -
             ((C19468 + C19467) * C31630 + (C19466 + C19465) * C711) +
             (C21406 + C21405) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
              C19033 * C6875) *
                 C712 -
             ((C21405 + C21406) * C31630 + (C21403 + C21404) * C711) +
             (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
              C19033 * C6877) *
                 C31418) *
                C31311 * C13439) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C24887 + C24888) * C1547 - (C24889 + C24890) * C1541 +
            (C24891 + C24892) * C1548 + (C24893 + C24894) * C1542 -
            (C25751 + C25752) * C1549 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1546 + (C24890 + C24889) * C1540 -
            (C24892 + C24891) * C1547 - (C24894 + C24893) * C1541 +
            (C25752 + C25751) * C1548 + (C25754 + C25753) * C1542 -
            (C25756 + C25755) * C1549 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C31327 * C31631 +
          (((C25503 + C25504) * C1547 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1540 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1546) +
            (C25505 + C25506) * C1541 - (C25929 + C25930) * C1548 -
            (C25931 + C25932) * C1542 + (C26403 + C26404) * C1549 +
            (C26405 + C26406) * C31669) *
               C31311 * C13438 +
           ((C25930 + C25929) * C1547 -
            ((C25506 + C25505) * C1540 + (C25504 + C25503) * C1546) +
            (C25932 + C25931) * C1541 - (C26404 + C26403) * C1548 -
            (C26406 + C26405) * C1542 +
            (C19034 * C5918 + C19032 * C5921 + C19035 * C5920 +
             C19033 * C5925) *
                C1549 +
            (C19034 * C5922 + C19032 * C5927 + C19035 * C5926 +
             C19033 * C5929) *
                C31669) *
               C31311 * C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
             (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C299 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C712 -
             ((C19265 + C19266) * C31630 + (C19263 + C19264) * C711) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C300 +
           (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
             (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
                C31311 * C13438 +
            ((C19271 + C19272) * C711 + (C19273 + C19274) * C31630 -
             (C19275 + C19276) * C712 - (C19277 + C19278) * C31418) *
                C31311 * C13439) *
               C31653) *
              C31631 +
          ((((C25503 + C25504) * C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1406 + C19032 * C1415 + C19035 * C1410 +
              C19033 * C1423) *
                 C712 -
             ((C25506 + C25505) * C31630 + (C25504 + C25503) * C711) +
             (C19034 * C1416 + C19032 * C1433 + C19035 * C1424 +
              C19033 * C1437) *
                 C31418) *
                C31311 * C13439) *
               C299 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C711 + (C19969 + C19970) * C31630 -
             (C20693 + C20694) * C712 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C300 +
           (((C19972 + C19971) * C712 -
             ((C19464 + C19463) * C31630 + (C19462 + C19461) * C711) +
             (C19974 + C19973) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C712 -
             ((C19973 + C19974) * C31630 + (C19971 + C19972) * C711) +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31418) *
                C31311 * C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C711 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31630 -
            (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
               C31311 * C13438 +
           ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
            (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
               C31311 * C13439) *
              C31327 * C2448 +
          (((C25503 + C25504) * C712 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31630 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C711) +
            (C25505 + C25506) * C31418) *
               C31311 * C13438 +
           ((C25930 + C25929) * C712 -
            ((C25506 + C25505) * C31630 + (C25504 + C25503) * C711) +
            (C25932 + C25931) * C31418) *
               C31311 * C13439) *
              C31327 * C2449 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C711 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31630 -
            (C25933 + C25934) * C712 - (C25935 + C25936) * C31418) *
               C31311 * C13438 +
           ((C25934 + C25933) * C711 + (C25936 + C25935) * C31630 -
            (C25938 + C25937) * C712 - (C25940 + C25939) * C31418) *
               C31311 * C13439) *
              C31327 * C2450 +
          (((C27243 + C27244) * C712 -
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C31630 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C711) +
            (C27245 + C27246) * C31418) *
               C31311 * C13438 +
           ((C19034 * C6608 + C19032 * C6612 + C19035 * C6610 +
             C19033 * C6615) *
                C712 -
            ((C27246 + C27245) * C31630 + (C27244 + C27243) * C711) +
            (C19034 * C6611 + C19032 * C6617 + C19035 * C6616 +
             C19033 * C6619) *
                C31418) *
               C31311 * C13439) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19034 * C115 + C19032 * C122 + C19035 * C520 +
                 C19033 * C534) *
                    C114 +
                (C19034 * C123 + C19032 * C136 + C19035 * C533 +
                 C19033 * C550) *
                    C31355) *
                   C31311 * C13438 +
               ((C19034 * C305 + C19032 * C315 + C19035 * C1004 +
                 C19033 * C1009) *
                    C114 +
                (C19034 * C316 + C19032 * C335 + C19035 * C1010 +
                 C19033 * C1019) *
                    C31355) *
                   C31311 * C13439) *
                  C107 -
              (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) *
                   C31311 * C13439 +
               ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) *
                   C31311 * C13438) *
                  C108 +
              (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) *
                   C31311 * C13438 +
               ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) *
                   C31311 * C13439) *
                  C109 -
              (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) *
                   C31311 * C13439 +
               ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) *
                   C31311 * C13438) *
                  C110 +
              (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) *
                   C31311 * C13438 +
               ((C19034 * C313 + C19032 * C331 + C19035 * C1008 +
                 C19033 * C1017) *
                    C114 +
                (C19034 * C332 + C19032 * C343 + C19035 * C1018 +
                 C19033 * C1023) *
                    C31355) *
                   C31311 * C13439) *
                  C111) *
             C31373 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19034 * C115 + C19032 * C122 + C19035 * C520 +
                 C19033 * C534) *
                    C302 +
                (C19034 * C123 + C19032 * C136 + C19035 * C533 +
                 C19033 * C550) *
                    C31696 -
                (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
                (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
                   C31311 * C13438 +
               ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
                (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
                (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
                 C19033 * C1857) *
                    C304 +
                (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
                 C19033 * C1863) *
                    C31659) *
                   C31311 * C13439) *
                  C299 +
              (((C19264 + C19263) * C303 -
                ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
                (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
                (C19270 + C19269) * C31659) *
                   C31311 * C13438 +
               ((C19267 + C19268) * C303 -
                ((C19265 + C19266) * C31696 + (C19263 + C19264) * C302) +
                (C19269 + C19270) * C31684 - (C20487 + C20488) * C304 -
                (C20489 + C20490) * C31659) *
                   C31311 * C13439) *
                  C300 +
              (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
                (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
                (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
                   C31311 * C13438 +
               ((C19271 + C19272) * C302 + (C19273 + C19274) * C31696 -
                (C19275 + C19276) * C303 - (C19277 + C19278) * C31684 +
                (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
                 C19033 * C1861) *
                    C304 +
                (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
                 C19033 * C1865) *
                    C31659) *
                   C31311 * C13439) *
                  C31653) *
             C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C299 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C300 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C31653) *
              C31697 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C300 -
           (((C19035 * C1422 + C19033 * C1436 + C19034 * C1010 +
              C19032 * C1019) *
                 C31355 +
             (C19035 * C1409 + C19033 * C1421 + C19034 * C1004 +
              C19032 * C1009) *
                 C114) *
                C31311 * C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C299 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C31653) *
              C31686 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C31311 * C13438 +
            ((C19034 * C1409 + C19032 * C1421 + C19035 * C2570 +
              C19033 * C2573) *
                 C114 +
             (C19034 * C1422 + C19032 * C1436 + C19035 * C2574 +
              C19033 * C2579) *
                 C31355) *
                C31311 * C13439) *
               C299 -
           (((C21405 + C21406) * C31355 + (C21403 + C21404) * C114) * C31311 *
                C13439 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C31311 *
                C13438) *
               C300 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C114 +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31355) *
                C31311 * C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
            (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
            (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
            (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
             C19033 * C1857) *
                C1175 +
            (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
             C19033 * C1863) *
                C31659) *
               C31311 * C13439) *
              C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C31311 * C13438 +
           ((C19267 + C19268) * C1174 -
            ((C19265 + C19266) * C1167 + (C19263 + C19264) * C1173) +
            (C19269 + C19270) * C1168 - (C20487 + C20488) * C1175 -
            (C20489 + C20490) * C31659) *
               C31311 * C13439) *
              C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C31311 * C13438 +
           ((C19271 + C19272) * C1173 + (C19273 + C19274) * C1167 -
            (C19275 + C19276) * C1174 - (C19277 + C19278) * C1168 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C1175 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31659) *
               C31311 * C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C24887 + C24888) * C1268 - (C24889 + C24890) * C1262 +
           (C24891 + C24892) * C1269 + (C24893 + C24894) * C1263 -
           (C25751 + C25752) * C1270 - (C25753 + C25754) * C1264 +
           (C25755 + C25756) * C1271 + (C25757 + C25758) * C1265) *
              C31311 * C13438 +
          ((C24888 + C24887) * C1267 + (C24890 + C24889) * C1261 -
           (C24892 + C24891) * C1268 - (C24894 + C24893) * C1262 +
           (C25752 + C25751) * C1269 + (C25754 + C25753) * C1263 -
           (C25756 + C25755) * C1270 - (C25758 + C25757) * C1264 +
           (C19034 * C5788 + C19032 * C5790 + C19035 * C6316 + C19033 * C6317) *
               C1271 +
           (C19034 * C5791 + C19032 * C5794 + C19035 * C6318 + C19033 * C6319) *
               C1265) *
              C31311 * C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
            (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
            (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
            (C25752 + C25751) * C1175 + (C25754 + C25753) * C31659) *
               C31311 * C13439) *
              C31327 * C31697 +
          (((C25503 + C25504) * C1174 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1167 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1173) +
            (C25505 + C25506) * C1168 - (C25929 + C25930) * C1175 -
            (C25931 + C25932) * C31659) *
               C31311 * C13438 +
           ((C25930 + C25929) * C1174 -
            ((C25506 + C25505) * C1167 + (C25504 + C25503) * C1173) +
            (C25932 + C25931) * C1168 -
            (C19035 * C5919 + C19033 * C5923 + C19034 * C1854 +
             C19032 * C1857) *
                C1175 -
            (C19035 * C5924 + C19033 * C5928 + C19034 * C1858 +
             C19032 * C1863) *
                C31659) *
               C31311 * C13439) *
              C31327 * C31686 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C1173 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C1167 -
            (C25933 + C25934) * C1174 - (C25935 + C25936) * C1168 +
            (C25937 + C25938) * C1175 + (C25939 + C25940) * C31659) *
               C31311 * C13438 +
           ((C25934 + C25933) * C1173 + (C25936 + C25935) * C1167 -
            (C25938 + C25937) * C1174 - (C25940 + C25939) * C1168 +
            (C19034 * C5919 + C19032 * C5923 + C19035 * C6976 +
             C19033 * C6977) *
                C1175 +
            (C19034 * C5924 + C19032 * C5928 + C19035 * C6978 +
             C19033 * C6979) *
                C31659) *
               C31311 * C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C31693 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C31680 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C31653) *
              C1976 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C31680 -
           (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
                C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C31693 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C31653) *
              C1977 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C31311 * C13438 +
            ((C25934 + C25933) * C114 + (C25936 + C25935) * C31355) * C31311 *
                C13439) *
               C31693 -
           (((C21405 + C21406) * C31355 + (C21403 + C21404) * C114) * C31311 *
                C13439 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C31311 *
                C13438) *
               C31680 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C114 +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31355) *
                C31311 * C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
            (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
            (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
            (C25752 + C25751) * C304 + (C25754 + C25753) * C31659) *
               C31311 * C13439) *
              C31327 * C1976 +
          (((C25503 + C25504) * C303 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31696 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C302) +
            (C25505 + C25506) * C31684 - (C25929 + C25930) * C304 -
            (C25931 + C25932) * C31659) *
               C31311 * C13438 +
           ((C25930 + C25929) * C303 -
            ((C25506 + C25505) * C31696 + (C25504 + C25503) * C302) +
            (C25932 + C25931) * C31684 - (C26404 + C26403) * C304 -
            (C26406 + C26405) * C31659) *
               C31311 * C13439) *
              C31327 * C1977 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C302 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31696 -
            (C25933 + C25934) * C303 - (C25935 + C25936) * C31684 +
            (C25937 + C25938) * C304 + (C25939 + C25940) * C31659) *
               C31311 * C13438 +
           ((C25934 + C25933) * C302 + (C25936 + C25935) * C31696 -
            (C25938 + C25937) * C303 - (C25940 + C25939) * C31684 +
            (C19034 * C5919 + C19032 * C5923 + C19035 * C6976 +
             C19033 * C6977) *
                C304 +
            (C19034 * C5924 + C19032 * C5928 + C19035 * C6978 +
             C19033 * C6979) *
                C31659) *
               C31311 * C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C31311 * C13438 +
           ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
               C13439) *
              C31327 * C2151 -
          (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
               C13439 +
           ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                C31355 +
            (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                C114) *
               C31311 * C13438) *
              C31327 * C2152 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C114 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31355) *
               C31311 * C13438 +
           ((C25934 + C25933) * C114 + (C25936 + C25935) * C31355) * C31311 *
               C13439) *
              C31327 * C2153 -
          (((C19035 * C6614 + C19033 * C6618 + C19034 * C2574 +
             C19032 * C2579) *
                C31355 +
            (C19035 * C6609 + C19033 * C6613 + C19034 * C2570 +
             C19032 * C2573) *
                C114) *
               C31311 * C13439 +
           ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
             C19032 * C2176) *
                C31355 +
            (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
             C19032 * C2167) *
                C114) *
               C31311 * C13438) *
              C31327 * C2154 +
          (((C19034 * C2159 + C19032 * C2168 + C19035 * C10760 +
             C19033 * C10763) *
                C114 +
            (C19034 * C2169 + C19032 * C2177 + C19035 * C10762 +
             C19033 * C10766) *
                C31355) *
               C31311 * C13438 +
           ((C19034 * C6609 + C19032 * C6613 + C19035 * C11118 +
             C19033 * C11119) *
                C114 +
            (C19034 * C6614 + C19032 * C6618 + C19035 * C11120 +
             C19033 * C11121) *
                C31355) *
               C31311 * C13439) *
              C31327 * C2155)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C1173 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C1167 -
             (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
             (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
                C31311 * C13438 +
            ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
             (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
             (C25752 + C25751) * C1175 + (C25754 + C25753) * C31659) *
                C31311 * C13439) *
               C31616 +
           (((C19264 + C19263) * C1174 -
             ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
             (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
             (C19270 + C19269) * C31659) *
                C31311 * C13438 +
            ((C19267 + C19268) * C1174 -
             ((C19265 + C19266) * C1167 + (C19263 + C19264) * C1173) +
             (C19269 + C19270) * C1168 - (C20487 + C20488) * C1175 -
             (C20489 + C20490) * C31659) *
                C31311 * C13439) *
               C31337) *
              C31631 +
          ((((C25503 + C25504) * C1174 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C1167 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C1173) +
             (C25505 + C25506) * C1168 - (C25929 + C25930) * C1175 -
             (C25931 + C25932) * C31659) *
                C31311 * C13438 +
            ((C25930 + C25929) * C1174 -
             ((C25506 + C25505) * C1167 + (C25504 + C25503) * C1173) +
             (C25932 + C25931) * C1168 -
             (C19035 * C5919 + C19033 * C5923 + C19034 * C1854 +
              C19032 * C1857) *
                 C1175 -
             (C19035 * C5924 + C19033 * C5928 + C19034 * C1858 +
              C19032 * C1863) *
                 C31659) *
                C31311 * C13439) *
               C31616 +
           (((C19457 + C19458) * C1173 + (C19459 + C19460) * C1167 -
             (C19968 + C19967) * C1174 - (C19970 + C19969) * C1168 +
             (C20694 + C20693) * C1175 + (C20696 + C20695) * C31659) *
                C31311 * C13438 +
            ((C19967 + C19968) * C1173 + (C19969 + C19970) * C1167 -
             (C20693 + C20694) * C1174 - (C20695 + C20696) * C1168 +
             (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
              C19033 * C6767) *
                 C1175 +
             (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
              C19033 * C6769) *
                 C31659) *
                C31311 * C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C707 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C708 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C709 -
           (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) * C31311 *
                C13439 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C31311 *
                C13438) *
               C31663) *
              C31631 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C708 -
           (((C19035 * C1422 + C19033 * C1436 + C19034 * C1010 +
              C19032 * C1019) *
                 C31355 +
             (C19035 * C1409 + C19033 * C1421 + C19034 * C1004 +
              C19032 * C1009) *
                 C114) *
                C31311 * C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C707 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C709 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C114 +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31355) *
                C31311 * C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C31616 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C31337) *
              C2448 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C31337 -
           (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
                C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C31616) *
              C2449 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C31311 * C13438 +
            ((C25934 + C25933) * C114 + (C25936 + C25935) * C31355) * C31311 *
                C13439) *
               C31616 -
           (((C21405 + C21406) * C31355 + (C21403 + C21404) * C114) * C31311 *
                C13439 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C31311 *
                C13438) *
               C31337) *
              C2450 +
          ((((C21545 + C21546) * C114 + (C21547 + C21548) * C31355) * C31311 *
                C13438 +
            ((C19034 * C2571 + C19032 * C2575 + C19035 * C10914 +
              C19033 * C10915) *
                 C114 +
             (C19034 * C2576 + C19032 * C2580 + C19035 * C10916 +
              C19033 * C10917) *
                 C31355) *
                C31311 * C13439) *
               C31337 -
           (((C19035 * C6614 + C19033 * C6618 + C19034 * C2574 +
              C19032 * C2579) *
                 C31355 +
             (C19035 * C6609 + C19033 * C6613 + C19034 * C2570 +
              C19032 * C2573) *
                 C114) *
                C31311 * C13439 +
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C31355 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C114) *
                C31311 * C13438) *
               C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
            (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
            (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
            (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
             C19033 * C1857) *
                C304 +
            (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
             C19033 * C1863) *
                C31659) *
               C31311 * C13439) *
              C299 +
          (((C19264 + C19263) * C303 -
            ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
            (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
            (C19270 + C19269) * C31659) *
               C31311 * C13438 +
           ((C19267 + C19268) * C303 -
            ((C19265 + C19266) * C31696 + (C19263 + C19264) * C302) +
            (C19269 + C19270) * C31684 - (C20487 + C20488) * C304 -
            (C20489 + C20490) * C31659) *
               C31311 * C13439) *
              C300 +
          (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
            (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
            (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
               C31311 * C13438 +
           ((C19271 + C19272) * C302 + (C19273 + C19274) * C31696 -
            (C19275 + C19276) * C303 - (C19277 + C19278) * C31684 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C304 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31659) *
               C31311 * C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C31311 * C13438 +
           ((C19034 * C305 + C19032 * C315 + C19035 * C1004 + C19033 * C1009) *
                C114 +
            (C19034 * C316 + C19032 * C335 + C19035 * C1010 + C19033 * C1019) *
                C31355) *
               C31311 * C13439) *
              C107 -
          (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
               C13439 +
           ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
               C13438) *
              C108 +
          (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
               C13438 +
           ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
               C13439) *
              C109 -
          (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) * C31311 *
               C13439 +
           ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C31311 *
               C13438) *
              C110 +
          (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) * C31311 *
               C13438 +
           ((C19034 * C313 + C19032 * C331 + C19035 * C1008 + C19033 * C1017) *
                C114 +
            (C19034 * C332 + C19032 * C343 + C19035 * C1018 + C19033 * C1023) *
                C31355) *
               C31311 * C13439) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
            (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
            (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
            (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
             C19033 * C1857) *
                C1175 +
            (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
             C19033 * C1863) *
                C31659) *
               C31311 * C13439) *
              C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C31311 * C13438 +
           ((C19267 + C19268) * C1174 -
            ((C19265 + C19266) * C1167 + (C19263 + C19264) * C1173) +
            (C19269 + C19270) * C1168 - (C20487 + C20488) * C1175 -
            (C20489 + C20490) * C31659) *
               C31311 * C13439) *
              C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C31311 * C13438 +
           ((C19271 + C19272) * C1173 + (C19273 + C19274) * C1167 -
            (C19275 + C19276) * C1174 - (C19277 + C19278) * C1168 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C1175 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31659) *
               C31311 * C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C24887 + C24888) * C1268 - (C24889 + C24890) * C1262 +
           (C24891 + C24892) * C1269 + (C24893 + C24894) * C1263 -
           (C25751 + C25752) * C1270 - (C25753 + C25754) * C1264 +
           (C25755 + C25756) * C1271 + (C25757 + C25758) * C1265) *
              C31311 * C13438 +
          ((C24888 + C24887) * C1267 + (C24890 + C24889) * C1261 -
           (C24892 + C24891) * C1268 - (C24894 + C24893) * C1262 +
           (C25752 + C25751) * C1269 + (C25754 + C25753) * C1263 -
           (C25756 + C25755) * C1270 - (C25758 + C25757) * C1264 +
           (C19034 * C5788 + C19032 * C5790 + C19035 * C6316 + C19033 * C6317) *
               C1271 +
           (C19034 * C5791 + C19032 * C5794 + C19035 * C6318 + C19033 * C6319) *
               C1265) *
              C31311 * C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C31693 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C31680 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C31653) *
              C1976 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C31680 -
           (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
                C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C31693 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C31653) *
              C1977 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C31311 * C13438 +
            ((C25934 + C25933) * C114 + (C25936 + C25935) * C31355) * C31311 *
                C13439) *
               C31693 -
           (((C21405 + C21406) * C31355 + (C21403 + C21404) * C114) * C31311 *
                C13439 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C31311 *
                C13438) *
               C31680 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C114 +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31355) *
                C31311 * C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
            (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
            (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
            (C25752 + C25751) * C304 + (C25754 + C25753) * C31659) *
               C31311 * C13439) *
              C31327 * C1976 +
          (((C25503 + C25504) * C303 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31696 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C302) +
            (C25505 + C25506) * C31684 - (C25929 + C25930) * C304 -
            (C25931 + C25932) * C31659) *
               C31311 * C13438 +
           ((C25930 + C25929) * C303 -
            ((C25506 + C25505) * C31696 + (C25504 + C25503) * C302) +
            (C25932 + C25931) * C31684 - (C26404 + C26403) * C304 -
            (C26406 + C26405) * C31659) *
               C31311 * C13439) *
              C31327 * C1977 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C302 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31696 -
            (C25933 + C25934) * C303 - (C25935 + C25936) * C31684 +
            (C25937 + C25938) * C304 + (C25939 + C25940) * C31659) *
               C31311 * C13438 +
           ((C25934 + C25933) * C302 + (C25936 + C25935) * C31696 -
            (C25938 + C25937) * C303 - (C25940 + C25939) * C31684 +
            (C19034 * C5919 + C19032 * C5923 + C19035 * C6976 +
             C19033 * C6977) *
                C304 +
            (C19034 * C5924 + C19032 * C5928 + C19035 * C6978 +
             C19033 * C6979) *
                C31659) *
               C31311 * C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
             (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C31332 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C712 -
             ((C19265 + C19266) * C31630 + (C19263 + C19264) * C711) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31340 +
           (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
             (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
                C31311 * C13438 +
            ((C19271 + C19272) * C711 + (C19273 + C19274) * C31630 -
             (C19275 + C19276) * C712 - (C19277 + C19278) * C31418) *
                C31311 * C13439) *
               C3111) *
              C3547 +
          ((((C25503 + C25504) * C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C712 -
             ((C25506 + C25505) * C31630 + (C25504 + C25503) * C711) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C31332 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C711 + (C19969 + C19970) * C31630 -
             (C20693 + C20694) * C712 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31340 +
           (((C19972 + C19971) * C712 -
             ((C19464 + C19463) * C31630 + (C19462 + C19461) * C711) +
             (C19974 + C19973) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C712 -
             ((C19973 + C19974) * C31630 + (C19971 + C19972) * C711) +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31418) *
                C31311 * C13439) *
               C3111) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
             (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C2812 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C712 -
             ((C19265 + C19266) * C31630 + (C19263 + C19264) * C711) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C31337) *
              C31456 +
          ((((C25503 + C25504) * C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C25930 + C25929) * C712 -
             ((C25506 + C25505) * C31630 + (C25504 + C25503) * C711) +
             (C25932 + C25931) * C31418) *
                C31311 * C13439) *
               C2812 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C711 + (C19969 + C19970) * C31630 -
             (C20693 + C20694) * C712 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C31337) *
              C31463 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C711 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31630 -
             (C25933 + C25934) * C712 - (C25935 + C25936) * C31418) *
                C31311 * C13438 +
            ((C25934 + C25933) * C711 + (C25936 + C25935) * C31630 -
             (C25938 + C25937) * C712 - (C25940 + C25939) * C31418) *
                C31311 * C13439) *
               C2812 +
           (((C21404 + C21403) * C712 -
             ((C19468 + C19467) * C31630 + (C19466 + C19465) * C711) +
             (C21406 + C21405) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
              C19033 * C6875) *
                 C712 -
             ((C21405 + C21406) * C31630 + (C21403 + C21404) * C711) +
             (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
              C19033 * C6877) *
                 C31418) *
                C31311 * C13439) *
               C31337) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C302 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31696 -
             (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
             (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
                C31311 * C13438 +
            ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
             (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
             (C25752 + C25751) * C304 + (C25754 + C25753) * C31659) *
                C31311 * C13439) *
               C2812 +
           (((C19264 + C19263) * C303 -
             ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
             (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
             (C19270 + C19269) * C31659) *
                C31311 * C13438 +
            ((C19267 + C19268) * C303 -
             ((C19265 + C19266) * C31696 + (C19263 + C19264) * C302) +
             (C19269 + C19270) * C31684 - (C20487 + C20488) * C304 -
             (C20489 + C20490) * C31659) *
                C31311 * C13439) *
               C31337) *
              C3547 +
          ((((C25503 + C25504) * C303 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31696 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C302) +
             (C25505 + C25506) * C31684 - (C25929 + C25930) * C304 -
             (C25931 + C25932) * C31659) *
                C31311 * C13438 +
            ((C25930 + C25929) * C303 -
             ((C25506 + C25505) * C31696 + (C25504 + C25503) * C302) +
             (C25932 + C25931) * C31684 - (C26404 + C26403) * C304 -
             (C26406 + C26405) * C31659) *
                C31311 * C13439) *
               C2812 +
           (((C19457 + C19458) * C302 + (C19459 + C19460) * C31696 -
             (C19968 + C19967) * C303 - (C19970 + C19969) * C31684 +
             (C20694 + C20693) * C304 + (C20696 + C20695) * C31659) *
                C31311 * C13438 +
            ((C19967 + C19968) * C302 + (C19969 + C19970) * C31696 -
             (C20693 + C20694) * C303 - (C20695 + C20696) * C31684 +
             (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
              C19033 * C6767) *
                 C304 +
             (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
              C19033 * C6769) *
                 C31659) *
                C31311 * C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C31702 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C31695 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C31682 -
           (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) * C31311 *
                C13439 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C31311 *
                C13438) *
               C31663) *
              C3547 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C31695 -
           (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
                C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C31702 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C31682 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C114 +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31355) *
                C31311 * C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C2812 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C31337) *
              C31704 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C31337 -
           (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
                C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C2812) *
              C31701 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C31311 * C13438 +
            ((C25934 + C25933) * C114 + (C25936 + C25935) * C31355) * C31311 *
                C13439) *
               C2812 -
           (((C21405 + C21406) * C31355 + (C21403 + C21404) * C114) * C31311 *
                C13439 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C31311 *
                C13438) *
               C31337) *
              C31692 +
          ((((C21545 + C21546) * C114 + (C21547 + C21548) * C31355) * C31311 *
                C13438 +
            ((C19034 * C2571 + C19032 * C2575 + C19035 * C10914 +
              C19033 * C10915) *
                 C114 +
             (C19034 * C2576 + C19032 * C2580 + C19035 * C10916 +
              C19033 * C10917) *
                 C31355) *
                C31311 * C13439) *
               C31337 -
           (((C27246 + C27245) * C31355 + (C27244 + C27243) * C114) * C31311 *
                C13439 +
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C31355 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C114) *
                C31311 * C13438) *
               C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C31332 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C31340 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C3111) *
              C31456 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C31340 -
           (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
                C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C31332 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C3111) *
              C31463 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C31311 * C13438 +
            ((C25934 + C25933) * C114 + (C25936 + C25935) * C31355) * C31311 *
                C13439) *
               C31332 -
           (((C21405 + C21406) * C31355 + (C21403 + C21404) * C114) * C31311 *
                C13439 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C31311 *
                C13438) *
               C31340 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C114 +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31355) *
                C31311 * C13439) *
               C3111) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C31702 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C31695 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C31682 -
           (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) * C31311 *
                C13439 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C31311 *
                C13438) *
               C31663) *
              C3547 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C31695 -
           (((C25506 + C25505) * C31355 + (C25504 + C25503) * C114) * C31311 *
                C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C31702 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C31682 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C114 +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31355) *
                C31311 * C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C302 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31696 -
             (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
             (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
                C31311 * C13438 +
            ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
             (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
             (C25752 + C25751) * C304 + (C25754 + C25753) * C31659) *
                C31311 * C13439) *
               C2812 +
           (((C19264 + C19263) * C303 -
             ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
             (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
             (C19270 + C19269) * C31659) *
                C31311 * C13438 +
            ((C19267 + C19268) * C303 -
             ((C19265 + C19266) * C31696 + (C19263 + C19264) * C302) +
             (C19269 + C19270) * C31684 - (C20487 + C20488) * C304 -
             (C20489 + C20490) * C31659) *
                C31311 * C13439) *
               C31337) *
              C3547 +
          ((((C25503 + C25504) * C303 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31696 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C302) +
             (C25505 + C25506) * C31684 - (C25929 + C25930) * C304 -
             (C25931 + C25932) * C31659) *
                C31311 * C13438 +
            ((C25930 + C25929) * C303 -
             ((C25506 + C25505) * C31696 + (C25504 + C25503) * C302) +
             (C25932 + C25931) * C31684 - (C26404 + C26403) * C304 -
             (C26406 + C26405) * C31659) *
                C31311 * C13439) *
               C2812 +
           (((C19457 + C19458) * C302 + (C19459 + C19460) * C31696 -
             (C19968 + C19967) * C303 - (C19970 + C19969) * C31684 +
             (C20694 + C20693) * C304 + (C20696 + C20695) * C31659) *
                C31311 * C13438 +
            ((C19967 + C19968) * C302 + (C19969 + C19970) * C31696 -
             (C20693 + C20694) * C303 - (C20695 + C20696) * C31684 +
             (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
              C19033 * C6767) *
                 C304 +
             (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
              C19033 * C6769) *
                 C31659) *
                C31311 * C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C711 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31630 -
            (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
               C31311 * C13438 +
           ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
            (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
               C31311 * C13439) *
              C707 +
          (((C19264 + C19263) * C712 -
            ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
            (C19266 + C19265) * C31418) *
               C31311 * C13438 +
           ((C19267 + C19268) * C712 -
            ((C19265 + C19266) * C31630 + (C19263 + C19264) * C711) +
            (C19269 + C19270) * C31418) *
               C31311 * C13439) *
              C708 +
          (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
            (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
               C31311 * C13438 +
           ((C19271 + C19272) * C711 + (C19273 + C19274) * C31630 -
            (C19275 + C19276) * C712 - (C19277 + C19278) * C31418) *
               C31311 * C13439) *
              C709 +
          (((C19612 + C19611) * C712 -
            ((C19080 + C19079) * C31630 + (C19078 + C19077) * C711) +
            (C19614 + C19613) * C31418) *
               C31311 * C13438 +
           ((C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C712 -
            ((C19613 + C19614) * C31630 + (C19611 + C19612) * C711) +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31418) *
               C31311 * C13439) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C24887 + C24888) * C1547 - (C24889 + C24890) * C1541 +
            (C24891 + C24892) * C1548 + (C24893 + C24894) * C1542 -
            (C25751 + C25752) * C1549 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1546 + (C24890 + C24889) * C1540 -
            (C24892 + C24891) * C1547 - (C24894 + C24893) * C1541 +
            (C25752 + C25751) * C1548 + (C25754 + C25753) * C1542 -
            (C25756 + C25755) * C1549 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C31616 +
          (((C19264 + C19263) * C1547 -
            ((C19072 + C19071) * C1540 + (C19070 + C19069) * C1546) +
            (C19266 + C19265) * C1541 - (C19268 + C19267) * C1548 -
            (C19270 + C19269) * C1542 + (C20488 + C20487) * C1549 +
            (C20490 + C20489) * C31669) *
               C31311 * C13438 +
           ((C19267 + C19268) * C1547 -
            ((C19265 + C19266) * C1540 + (C19263 + C19264) * C1546) +
            (C19269 + C19270) * C1541 - (C20487 + C20488) * C1548 -
            (C20489 + C20490) * C1542 +
            (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 +
             C19033 * C6209) *
                C1549 +
            (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 +
             C19033 * C6211) *
                C31669) *
               C31311 * C13439) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C24887 + C24888) * C712 - (C24889 + C24890) * C31418) *
                C31311 * C13438 +
            ((C24888 + C24887) * C711 + (C24890 + C24889) * C31630 -
             (C24892 + C24891) * C712 - (C24894 + C24893) * C31418) *
                C31311 * C13439) *
               C299 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C31311 * C13438 +
            ((C19267 + C19268) * C712 -
             ((C19265 + C19266) * C31630 + (C19263 + C19264) * C711) +
             (C19269 + C19270) * C31418) *
                C31311 * C13439) *
               C300 +
           (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
             (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
                C31311 * C13438 +
            ((C19271 + C19272) * C711 + (C19273 + C19274) * C31630 -
             (C19275 + C19276) * C712 - (C19277 + C19278) * C31418) *
                C31311 * C13439) *
               C31653) *
              C31631 +
          ((((C25503 + C25504) * C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C25505 + C25506) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1406 + C19032 * C1415 + C19035 * C1410 +
              C19033 * C1423) *
                 C712 -
             ((C25506 + C25505) * C31630 + (C25504 + C25503) * C711) +
             (C19034 * C1416 + C19032 * C1433 + C19035 * C1424 +
              C19033 * C1437) *
                 C31418) *
                C31311 * C13439) *
               C299 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C31311 * C13438 +
            ((C19967 + C19968) * C711 + (C19969 + C19970) * C31630 -
             (C20693 + C20694) * C712 - (C20695 + C20696) * C31418) *
                C31311 * C13439) *
               C300 +
           (((C19972 + C19971) * C712 -
             ((C19464 + C19463) * C31630 + (C19462 + C19461) * C711) +
             (C19974 + C19973) * C31418) *
                C31311 * C13438 +
            ((C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C712 -
             ((C19973 + C19974) * C31630 + (C19971 + C19972) * C711) +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31418) *
                C31311 * C13439) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C24887 + C24888) * C1547 - (C24889 + C24890) * C1541 +
            (C24891 + C24892) * C1548 + (C24893 + C24894) * C1542 -
            (C25751 + C25752) * C1549 - (C25753 + C25754) * C31669) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1546 + (C24890 + C24889) * C1540 -
            (C24892 + C24891) * C1547 - (C24894 + C24893) * C1541 +
            (C25752 + C25751) * C1548 + (C25754 + C25753) * C1542 -
            (C25756 + C25755) * C1549 - (C25758 + C25757) * C31669) *
               C31311 * C13439) *
              C31327 * C31631 +
          (((C25503 + C25504) * C1547 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1540 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1546) +
            (C25505 + C25506) * C1541 - (C25929 + C25930) * C1548 -
            (C25931 + C25932) * C1542 + (C26403 + C26404) * C1549 +
            (C26405 + C26406) * C31669) *
               C31311 * C13438 +
           ((C25930 + C25929) * C1547 -
            ((C25506 + C25505) * C1540 + (C25504 + C25503) * C1546) +
            (C25932 + C25931) * C1541 - (C26404 + C26403) * C1548 -
            (C26406 + C26405) * C1542 +
            (C19034 * C5918 + C19032 * C5921 + C19035 * C5920 +
             C19033 * C5925) *
                C1549 +
            (C19034 * C5922 + C19032 * C5927 + C19035 * C5926 +
             C19033 * C5929) *
                C31669) *
               C31311 * C13439) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
            (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
            (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
            (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
             C19033 * C1857) *
                C304 +
            (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
             C19033 * C1863) *
                C31659) *
               C31311 * C13439) *
              C299 +
          (((C19264 + C19263) * C303 -
            ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
            (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
            (C19270 + C19269) * C31659) *
               C31311 * C13438 +
           ((C19267 + C19268) * C303 -
            ((C19265 + C19266) * C31696 + (C19263 + C19264) * C302) +
            (C19269 + C19270) * C31684 - (C20487 + C20488) * C304 -
            (C20489 + C20490) * C31659) *
               C31311 * C13439) *
              C300 +
          (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
            (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
            (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
               C31311 * C13438 +
           ((C19271 + C19272) * C302 + (C19273 + C19274) * C31696 -
            (C19275 + C19276) * C303 - (C19277 + C19278) * C31684 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C304 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31659) *
               C31311 * C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C31311 * C13438 +
           ((C19034 * C305 + C19032 * C315 + C19035 * C1004 + C19033 * C1009) *
                C114 +
            (C19034 * C316 + C19032 * C335 + C19035 * C1010 + C19033 * C1019) *
                C31355) *
               C31311 * C13439) *
              C107 -
          (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
               C13439 +
           ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
               C13438) *
              C108 +
          (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
               C13438 +
           ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
               C13439) *
              C109 -
          (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) * C31311 *
               C13439 +
           ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C31311 *
               C13438) *
              C110 +
          (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) * C31311 *
               C13438 +
           ((C19034 * C313 + C19032 * C331 + C19035 * C1008 + C19033 * C1017) *
                C114 +
            (C19034 * C332 + C19032 * C343 + C19035 * C1018 + C19033 * C1023) *
                C31355) *
               C31311 * C13439) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C299 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C300 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C31653) *
              C31697 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C300 -
           (((C19035 * C1422 + C19033 * C1436 + C19034 * C1010 +
              C19032 * C1019) *
                 C31355 +
             (C19035 * C1409 + C19033 * C1421 + C19034 * C1004 +
              C19032 * C1009) *
                 C114) *
                C31311 * C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C299 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C31653) *
              C31686 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C31311 * C13438 +
            ((C19034 * C1409 + C19032 * C1421 + C19035 * C2570 +
              C19033 * C2573) *
                 C114 +
             (C19034 * C1422 + C19032 * C1436 + C19035 * C2574 +
              C19033 * C2579) *
                 C31355) *
                C31311 * C13439) *
               C299 -
           (((C21405 + C21406) * C31355 + (C21403 + C21404) * C114) * C31311 *
                C13439 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C31311 *
                C13438) *
               C300 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C114 +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31355) *
                C31311 * C13439) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
            (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
            (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
            (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
             C19033 * C1857) *
                C1175 +
            (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
             C19033 * C1863) *
                C31659) *
               C31311 * C13439) *
              C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C31311 * C13438 +
           ((C19267 + C19268) * C1174 -
            ((C19265 + C19266) * C1167 + (C19263 + C19264) * C1173) +
            (C19269 + C19270) * C1168 - (C20487 + C20488) * C1175 -
            (C20489 + C20490) * C31659) *
               C31311 * C13439) *
              C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C31311 * C13438 +
           ((C19271 + C19272) * C1173 + (C19273 + C19274) * C1167 -
            (C19275 + C19276) * C1174 - (C19277 + C19278) * C1168 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C1175 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31659) *
               C31311 * C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C24887 + C24888) * C1268 - (C24889 + C24890) * C1262 +
           (C24891 + C24892) * C1269 + (C24893 + C24894) * C1263 -
           (C25751 + C25752) * C1270 - (C25753 + C25754) * C1264 +
           (C25755 + C25756) * C1271 + (C25757 + C25758) * C1265) *
              C31311 * C13438 +
          ((C24888 + C24887) * C1267 + (C24890 + C24889) * C1261 -
           (C24892 + C24891) * C1268 - (C24894 + C24893) * C1262 +
           (C25752 + C25751) * C1269 + (C25754 + C25753) * C1263 -
           (C25756 + C25755) * C1270 - (C25758 + C25757) * C1264 +
           (C19034 * C5788 + C19032 * C5790 + C19035 * C6316 + C19033 * C6317) *
               C1271 +
           (C19034 * C5791 + C19032 * C5794 + C19035 * C6318 + C19033 * C6319) *
               C1265) *
              C31311 * C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
            (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
            (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
            (C25752 + C25751) * C1175 + (C25754 + C25753) * C31659) *
               C31311 * C13439) *
              C31327 * C31697 +
          (((C25503 + C25504) * C1174 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1167 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1173) +
            (C25505 + C25506) * C1168 - (C25929 + C25930) * C1175 -
            (C25931 + C25932) * C31659) *
               C31311 * C13438 +
           ((C25930 + C25929) * C1174 -
            ((C25506 + C25505) * C1167 + (C25504 + C25503) * C1173) +
            (C25932 + C25931) * C1168 -
            (C19035 * C5919 + C19033 * C5923 + C19034 * C1854 +
             C19032 * C1857) *
                C1175 -
            (C19035 * C5924 + C19033 * C5928 + C19034 * C1858 +
             C19032 * C1863) *
                C31659) *
               C31311 * C13439) *
              C31327 * C31686 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C1173 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C1167 -
            (C25933 + C25934) * C1174 - (C25935 + C25936) * C1168 +
            (C25937 + C25938) * C1175 + (C25939 + C25940) * C31659) *
               C31311 * C13438 +
           ((C25934 + C25933) * C1173 + (C25936 + C25935) * C1167 -
            (C25938 + C25937) * C1174 - (C25940 + C25939) * C1168 +
            (C19034 * C5919 + C19032 * C5923 + C19035 * C6976 +
             C19033 * C6977) *
                C1175 +
            (C19034 * C5924 + C19032 * C5928 + C19035 * C6978 +
             C19033 * C6979) *
                C31659) *
               C31311 * C13439) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C31311 * C13438 +
            ((C24888 + C24887) * C114 + (C24890 + C24889) * C31355) * C31311 *
                C13439) *
               C707 -
           (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
                C13439 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
                C13438) *
               C708 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
                C13438 +
            ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
                C13439) *
               C709 -
           (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) * C31311 *
                C13439 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C31311 *
                C13438) *
               C31663) *
              C31631 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C31311 *
                C13438 +
            ((C19967 + C19968) * C114 + (C19969 + C19970) * C31355) * C31311 *
                C13439) *
               C708 -
           (((C19035 * C1422 + C19033 * C1436 + C19034 * C1010 +
              C19032 * C1019) *
                 C31355 +
             (C19035 * C1409 + C19033 * C1421 + C19034 * C1004 +
              C19032 * C1009) *
                 C114) *
                C31311 * C13439 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C31311 * C13438) *
               C707 -
           (((C19973 + C19974) * C31355 + (C19971 + C19972) * C114) * C31311 *
                C13439 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C31311 *
                C13438) *
               C709 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C31311 *
                C13438 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C114 +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31355) *
                C31311 * C13439) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C1173 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C1167 -
             (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
             (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
                C31311 * C13438 +
            ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
             (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
             (C25752 + C25751) * C1175 + (C25754 + C25753) * C31659) *
                C31311 * C13439) *
               C31616 +
           (((C19264 + C19263) * C1174 -
             ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
             (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
             (C19270 + C19269) * C31659) *
                C31311 * C13438 +
            ((C19267 + C19268) * C1174 -
             ((C19265 + C19266) * C1167 + (C19263 + C19264) * C1173) +
             (C19269 + C19270) * C1168 - (C20487 + C20488) * C1175 -
             (C20489 + C20490) * C31659) *
                C31311 * C13439) *
               C31337) *
              C31631 +
          ((((C25503 + C25504) * C1174 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C1167 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C1173) +
             (C25505 + C25506) * C1168 - (C25929 + C25930) * C1175 -
             (C25931 + C25932) * C31659) *
                C31311 * C13438 +
            ((C25930 + C25929) * C1174 -
             ((C25506 + C25505) * C1167 + (C25504 + C25503) * C1173) +
             (C25932 + C25931) * C1168 -
             (C19035 * C5919 + C19033 * C5923 + C19034 * C1854 +
              C19032 * C1857) *
                 C1175 -
             (C19035 * C5924 + C19033 * C5928 + C19034 * C1858 +
              C19032 * C1863) *
                 C31659) *
                C31311 * C13439) *
               C31616 +
           (((C19457 + C19458) * C1173 + (C19459 + C19460) * C1167 -
             (C19968 + C19967) * C1174 - (C19970 + C19969) * C1168 +
             (C20694 + C20693) * C1175 + (C20696 + C20695) * C31659) *
                C31311 * C13438 +
            ((C19967 + C19968) * C1173 + (C19969 + C19970) * C1167 -
             (C20693 + C20694) * C1174 - (C20695 + C20696) * C1168 +
             (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
              C19033 * C6767) *
                 C1175 +
             (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
              C19033 * C6769) *
                 C31659) *
                C31311 * C13439) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C31311 * C13438 +
           ((C19034 * C305 + C19032 * C315 + C19035 * C1004 + C19033 * C1009) *
                C114 +
            (C19034 * C316 + C19032 * C335 + C19035 * C1010 + C19033 * C1019) *
                C31355) *
               C31311 * C13439) *
              C107 -
          (((C19265 + C19266) * C31355 + (C19263 + C19264) * C114) * C31311 *
               C13439 +
           ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C31311 *
               C13438) *
              C108 +
          (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C31311 *
               C13438 +
           ((C19271 + C19272) * C114 + (C19273 + C19274) * C31355) * C31311 *
               C13439) *
              C109 -
          (((C19613 + C19614) * C31355 + (C19611 + C19612) * C114) * C31311 *
               C13439 +
           ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C31311 *
               C13438) *
              C110 +
          (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) * C31311 *
               C13438 +
           ((C19034 * C313 + C19032 * C331 + C19035 * C1008 + C19033 * C1017) *
                C114 +
            (C19034 * C332 + C19032 * C343 + C19035 * C1018 + C19033 * C1023) *
                C31355) *
               C31311 * C13439) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C24887 + C24888) * C303 - (C24889 + C24890) * C31684 +
            (C24891 + C24892) * C304 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C302 + (C24890 + C24889) * C31696 -
            (C24892 + C24891) * C303 - (C24894 + C24893) * C31684 +
            (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
             C19033 * C1857) *
                C304 +
            (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
             C19033 * C1863) *
                C31659) *
               C31311 * C13439) *
              C299 +
          (((C19264 + C19263) * C303 -
            ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
            (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
            (C19270 + C19269) * C31659) *
               C31311 * C13438 +
           ((C19267 + C19268) * C303 -
            ((C19265 + C19266) * C31696 + (C19263 + C19264) * C302) +
            (C19269 + C19270) * C31684 - (C20487 + C20488) * C304 -
            (C20489 + C20490) * C31659) *
               C31311 * C13439) *
              C300 +
          (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
            (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
            (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
               C31311 * C13438 +
           ((C19271 + C19272) * C302 + (C19273 + C19274) * C31696 -
            (C19275 + C19276) * C303 - (C19277 + C19278) * C31684 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C304 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31659) *
               C31311 * C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C24887 + C24888) * C1174 - (C24889 + C24890) * C1168 +
            (C24891 + C24892) * C1175 + (C24893 + C24894) * C31659) *
               C31311 * C13438 +
           ((C24888 + C24887) * C1173 + (C24890 + C24889) * C1167 -
            (C24892 + C24891) * C1174 - (C24894 + C24893) * C1168 +
            (C19034 * C1272 + C19032 * C1278 + C19035 * C1854 +
             C19033 * C1857) *
                C1175 +
            (C19034 * C1279 + C19032 * C1290 + C19035 * C1858 +
             C19033 * C1863) *
                C31659) *
               C31311 * C13439) *
              C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C31311 * C13438 +
           ((C19267 + C19268) * C1174 -
            ((C19265 + C19266) * C1167 + (C19263 + C19264) * C1173) +
            (C19269 + C19270) * C1168 - (C20487 + C20488) * C1175 -
            (C20489 + C20490) * C31659) *
               C31311 * C13439) *
              C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C31311 * C13438 +
           ((C19271 + C19272) * C1173 + (C19273 + C19274) * C1167 -
            (C19275 + C19276) * C1174 - (C19277 + C19278) * C1168 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C1175 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31659) *
               C31311 * C13439) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C24887 + C24888) * C1268 - (C24889 + C24890) * C1262 +
           (C24891 + C24892) * C1269 + (C24893 + C24894) * C1263 -
           (C25751 + C25752) * C1270 - (C25753 + C25754) * C1264 +
           (C25755 + C25756) * C1271 + (C25757 + C25758) * C1265) *
              C31311 * C13438 +
          ((C24888 + C24887) * C1267 + (C24890 + C24889) * C1261 -
           (C24892 + C24891) * C1268 - (C24894 + C24893) * C1262 +
           (C25752 + C25751) * C1269 + (C25754 + C25753) * C1263 -
           (C25756 + C25755) * C1270 - (C25758 + C25757) * C1264 +
           (C19034 * C5788 + C19032 * C5790 + C19035 * C6316 + C19033 * C6317) *
               C1271 +
           (C19034 * C5791 + C19032 * C5794 + C19035 * C6318 + C19033 * C6319) *
               C1265) *
              C31311 * C13439) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C30303 +
            (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
            C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
               C31311 * C5021 +
           (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
            C5151 * C30309 + C5152 * C3108) *
               C31311 * C5022 +
           (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 - C5152 * C31421 +
            C5805 * C30309 + C5806 * C3108) *
               C31311 * C5023) *
              C31332 +
          ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C31311 * C5021 +
           (C378 * C30295 - (C377 * C31414 + C376 * C30303) + C379 * C31421 -
            C1575 * C30309 - C1576 * C3108) *
               C31311 * C5022 +
           (C1575 * C30295 - (C379 * C31414 + C378 * C30303) + C1576 * C31421 -
            C6061 * C30309 - C6062 * C3108) *
               C31311 * C5023) *
              C31340 +
          (C3138 * C31311 * C5021 +
           (C381 * C30303 + C382 * C31414 - C383 * C30295 - C384 * C31421 +
            C1577 * C30309 + C1578 * C3108) *
               C31311 * C5022 +
           (C383 * C30303 + C384 * C31414 - C1577 * C30295 - C1578 * C31421 +
            (C113 * C1277 + C31552 * C1288) * C30309 +
            (C113 * C1289 + C31552 * C1295) * C3108) *
               C31311 * C5023) *
              C3111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C30303 +
            (C113 * C123 + C31552 * C136) * C31414 -
            (C113 * C305 + C31552 * C315) * C30295 -
            (C113 * C316 + C31552 * C335) * C31421 +
            (C113 * C306 + C31552 * C317) * C30309 +
            (C113 * C318 + C31552 * C336) * C3108) *
               C103 +
           (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
           C3138 * C105) *
              C31541 * C31332 +
          ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C103 +
           (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C104 +
           (C3128 - (C3129 + C3130) + C3131 - C3132 - C3133) * C105) *
              C31541 * C31340 +
          (C3138 * C103 +
           (C3130 + C3129 - C3128 - C3131 + C3132 + C3133) * C104 +
           (C170 * C30303 + C171 * C31414 - C738 * C30295 - C739 * C31421 +
            (C113 * C314 + C31552 * C333) * C30309 +
            (C113 * C334 + C31552 * C344) * C3108) *
               C105) *
              C31541 * C3111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C30303 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31414 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C30295 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31421 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C30309 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C3108) *
              C31311 * C31541 * C31332 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C30295 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31414 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C30303) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31421 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C30309 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C3108) *
              C31311 * C31541 * C31340 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C30303 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31414 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C30295 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31421 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C30309 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C3108) *
              C31311 * C31541 * C3111) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
             C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                C31311 * C5021 +
            (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
             C5151 * C30309 + C5152 * C3108) *
                C31311 * C5022 +
            (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 - C5152 * C31421 +
             C5805 * C30309 + C5806 * C3108) *
                C31311 * C5023) *
               C2812 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C31311 * C5021 +
            (C378 * C30295 - (C377 * C31414 + C376 * C30303) + C379 * C31421 -
             C1575 * C30309 - C1576 * C3108) *
                C31311 * C5022 +
            (C1575 * C30295 - (C379 * C31414 + C378 * C30303) + C1576 * C31421 -
             C6061 * C30309 - C6062 * C3108) *
                C31311 * C5023) *
               C31337) *
              C31631 +
          (((C5613 * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                C31311 * C5021 +
            (C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
             C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                C31311 * C5022 +
            (C5947 * C30295 - (C5616 * C31414 + C5615 * C30303) +
             C5948 * C31421 - C6325 * C30309 - C6326 * C3108) *
                C31311 * C5023) *
               C2812 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C31311 * C5021 +
            (C1043 * C30303 + C1044 * C31414 - C1749 * C30295 - C1750 * C31421 +
             C6217 * C30309 + C6218 * C3108) *
                C31311 * C5022 +
            (C1749 * C30303 + C1750 * C31414 - C6217 * C30295 - C6218 * C31421 +
             (C113 * C6208 + C31552 * C6209) * C30309 +
             (C113 * C6210 + C31552 * C6211) * C3108) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 -
             (C113 * C305 + C31552 * C315) * C30295 -
             (C113 * C316 + C31552 * C335) * C31421 +
             (C113 * C306 + C31552 * C317) * C30309 +
             (C113 * C318 + C31552 * C336) * C3108) *
                C103 +
            (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
            C3138 * C105) *
               C31541 * C2812 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C103 +
            (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C104 +
            (C3128 - (C3129 + C3130) + C3131 - C3132 - C3133) * C105) *
               C31541 * C31337) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             (C113 * C1010 + C31552 * C1019) * C31421 -
             (C113 * C1406 + C31552 * C1415) * C30309 -
             (C113 * C1416 + C31552 * C1433) * C3108) *
                C103 +
            (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C104 +
            (C3444 - (C3445 + C3446) + C3447 - C3448 - C3449) * C105) *
               C31541 * C2812 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C103 +
            (C3446 + C3445 - C3444 - C3447 + C3448 + C3449) * C104 +
            (C586 * C30303 + C587 * C31414 - C1048 * C30295 - C1049 * C31421 +
             (C113 * C1728 + C31552 * C1729) * C30309 +
             (C113 * C1730 + C31552 * C1731) * C3108) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C30303 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31414 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C30295 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31421 +
            (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
             C9291 * C1410 + C9288 * C1423) *
                C30309 +
            (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
             C9291 * C1424 + C9288 * C1437) *
                C3108) *
               C31311 * C31541 * C2812 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C30295 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31414 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C30303) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31421 -
            (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
             C9289 * C308 + C9286 * C321) *
                C30309 -
            (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
             C9289 * C322 + C9286 * C338) *
                C3108) *
               C31311 * C31541 * C31337) *
              C31631 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C30295 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31414 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C30303) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31421 -
            (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
             C9289 * C1406 + C9286 * C1415) *
                C30309 -
            (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
             C9289 * C1416 + C9286 * C1433) *
                C3108) *
               C31311 * C31541 * C2812 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C30303 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31414 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C30295 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31421 +
            (C9289 * C1407 + C9286 * C1417 + C9290 * C1412 + C9287 * C1427 +
             C9291 * C6874 + C9288 * C6875) *
                C30309 +
            (C9289 * C1418 + C9286 * C1434 + C9290 * C1428 + C9287 * C1439 +
             C9291 * C6876 + C9288 * C6877) *
                C3108) *
               C31311 * C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C2686 +
                (C113 * C123 + C31552 * C136) * C2680 -
                (C113 * C305 + C31552 * C315) * C2687 -
                (C113 * C316 + C31552 * C335) * C31418) *
                   C103 +
               (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
                  C31541 * C31702 +
              ((C2691 - (C2690 + C2689) + C2692) * C103 +
               (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
                  C31541 * C31695 +
              (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
               (C2701 + C2702 - C2703 - C2704) * C105) *
                  C31541 * C31682 +
              (C2710 * C103 + (C2703 - (C2702 + C2701) + C2704) * C104 +
               ((C113 * C713 + C31552 * C714) * C2687 -
                (C172 * C2680 + C173 * C2686) +
                (C113 * C715 + C31552 * C716) * C31418) *
                   C105) *
                  C31541 * C31663) *
             C31373 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C2814 +
                (C113 * C123 + C31552 * C136) * C31703 -
                (C113 * C305 + C31552 * C315) * C2815 -
                (C113 * C316 + C31552 * C335) * C31699 +
                (C113 * C306 + C31552 * C317) * C2816 +
                (C113 * C318 + C31552 * C336) * C31689 -
                (C113 * C1272 + C31552 * C1278) * C2817 -
                (C113 * C1279 + C31552 * C1290) * C31669) *
                   C103 +
               (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
                   C104 +
               (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
                   C105) *
                  C31541 * C2812 +
              ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 +
                C2826) *
                   C103 +
               (C2829 - (C2828 + C2827) + C2830 - C2831 - C2832 + C2833 +
                C2834) *
                   C104 +
               (C385 * C2815 - (C168 * C31703 + C169 * C2814) + C386 * C31699 -
                C387 * C2816 - C388 * C31689 +
                (C113 * C1550 + C31552 * C1551) * C2817 +
                (C113 * C1552 + C31552 * C1553) * C31669) *
                   C105) *
                  C31541 * C31337) *
             C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C2812 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31337) *
              C31697 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 +
            (C2985 - (C2986 + C2987) + C2988) * C105) *
               C31541 * C2812 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C586 * C2686 + C587 * C2680 - C1048 * C2687 - C1049 * C31418) *
                C105) *
               C31541 * C31337) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 -
             (C113 * C1409 + C31552 * C1421) * C2687 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2989 + C2990 - C2991 - C2992) * C104 +
            (C2993 + C2994 - C2995 - C2996) * C105) *
               C31541 * C2812 +
           ((C2991 - (C2990 + C2989) + C2992) * C103 +
            (C2995 - (C2994 + C2993) + C2996) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C2687 -
             (C592 * C2680 + C593 * C2686) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
               C31311 * C5023) *
              C31702 +
          ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
           (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
               C31311 * C5023) *
              C31695 +
          (C2709 * C31311 * C5021 +
           (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
               C31311 * C5023) *
              C31682 +
          (C2710 * C31311 * C5021 +
           (C387 * C2687 - (C386 * C2680 + C385 * C2686) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C2687 -
            (C388 * C2680 + C387 * C2686) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C2812 +
          ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
               C31311 * C5021 +
           (C378 * C2815 - (C377 * C31703 + C376 * C2814) + C379 * C31699 -
            C1575 * C2816 - C1576 * C31689 + C6061 * C2817 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C2815 - (C379 * C31703 + C378 * C2814) + C1576 * C31699 -
            C6061 * C2816 - C6062 * C31689 +
            (C113 * C6052 + C31552 * C6053) * C2817 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31697 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C2686 + C5952 * C2680 - C5953 * C2687 - C5954 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2991 - (C2990 + C2989) + C2992) * C31311 * C5021 +
            (C6775 * C2687 - (C2344 * C2680 + C2343 * C2686) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C2687 -
             (C6776 * C2680 + C6775 * C2686) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C2686 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C2680 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C2687 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31418) *
              C31311 * C31541 * C31702 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C2687 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C2680 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C2686) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31418) *
              C31311 * C31541 * C31695 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C2686 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C2680 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C2687 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31418) *
              C31311 * C31541 * C31682 +
          ((C9289 * C311 + C9286 * C327 + C9290 * C1007 + C9287 * C1015 +
            C9291 * C2326 + C9288 * C2327) *
               C2687 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C2680 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C2686) +
           (C9289 * C328 + C9286 * C341 + C9290 * C1016 + C9287 * C1022 +
            C9291 * C2328 + C9288 * C2329) *
               C31418) *
              C31311 * C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C2814 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31703 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C2815 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31699 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C2816 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31689 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C2817 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C2812 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C2815 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31703 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C2814) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31699 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C2816 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31689 +
           (C9289 * C1274 + C9286 * C1282 + C9290 * C1855 + C9287 * C1859 +
            C9291 * C6766 + C9288 * C6767) *
               C2817 +
           (C9289 * C1283 + C9286 * C1292 + C9290 * C1860 + C9287 * C1864 +
            C9291 * C6768 + C9288 * C6769) *
               C31669) *
              C31311 * C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C2686 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C2680 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C2687 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C2812 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C2687 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C2680 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C2686) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31697 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C2687 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C2680 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C2686) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C2812 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C2686 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C2680 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C2687 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31686 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C2686 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C2680 -
            (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
             C9289 * C1409 + C9286 * C1421) *
                C2687 -
            (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
             C9289 * C1422 + C9286 * C1436) *
                C31418) *
               C31311 * C31541 * C2812 +
           ((C9289 * C1411 + C9286 * C1425 + C9290 * C2571 + C9287 * C2575 +
             C9291 * C10914 + C9288 * C10915) *
                C2687 -
            ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
              C9289 * C540 + C9286 * C553) *
                 C2680 +
             (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
              C9289 * C523 + C9286 * C539) *
                 C2686) +
            (C9289 * C1426 + C9286 * C1438 + C9290 * C2576 + C9287 * C2580 +
             C9291 * C10916 + C9288 * C10917) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C2709 * C31311 * C5021 +
            (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
                C31311 * C5023) *
               C3111) *
              C31631 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C3291 * C31311 * C5021 +
            (C1751 * C2687 - (C1047 * C2680 + C1045 * C2686) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C2687 -
             (C1752 * C2680 + C1751 * C2686) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C31332 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31340 +
           (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
            (C2701 + C2702 - C2703 - C2704) * C105) *
               C31541 * C3111) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
               C31541 * C31332 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C3286 + C3287 - C3288 - C3289) * C105) *
               C31541 * C31340 +
           (C3291 * C103 + (C3288 - (C3287 + C3286) + C3289) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C2687 -
             (C855 * C2680 + C856 * C2686) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C2686 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C2680 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C2687 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C31332 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C2687 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C2680 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C2686) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31340 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C2686 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C2680 -
            (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
             C9289 * C309 + C9286 * C323) *
                C2687 -
            (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
             C9289 * C324 + C9286 * C339) *
                C31418) *
               C31311 * C31541 * C3111) *
              C31631 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C2687 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C2680 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C2686) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C31332 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C2686 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C2680 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C2687 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31340 +
           ((C9289 * C1006 + C9286 * C1013 + C9290 * C1413 + C9287 * C1429 +
             C9291 * C2572 + C9288 * C2577) *
                C2687 -
            ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
              C9289 * C530 + C9286 * C548) *
                 C2680 +
             (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
              C9289 * C518 + C9286 * C529) *
                 C2686) +
            (C9289 * C1014 + C9286 * C1021 + C9290 * C1430 + C9287 * C1440 +
             C9291 * C2578 + C9288 * C2581) *
                C31418) *
               C31311 * C31541 * C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 -
            (C113 * C305 + C31552 * C315) * C2815 -
            (C113 * C316 + C31552 * C335) * C31699 +
            (C113 * C306 + C31552 * C317) * C2816 +
            (C113 * C318 + C31552 * C336) * C31689 -
            (C113 * C1272 + C31552 * C1278) * C2817 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
               C104 +
           (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
               C105) *
              C31541 * C2812 +
          ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
               C103 +
           (C2829 - (C2828 + C2827) + C2830 - C2831 - C2832 + C2833 + C2834) *
               C104 +
           (C385 * C2815 - (C168 * C31703 + C169 * C2814) + C386 * C31699 -
            C387 * C2816 - C388 * C31689 +
            (C113 * C1550 + C31552 * C1551) * C2817 +
            (C113 * C1552 + C31552 * C1553) * C31669) *
               C105) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 -
            (C113 * C305 + C31552 * C315) * C2687 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
              C31541 * C31702 +
          ((C2691 - (C2690 + C2689) + C2692) * C103 +
           (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
              C31541 * C31695 +
          (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
           (C2701 + C2702 - C2703 - C2704) * C105) *
              C31541 * C31682 +
          (C2710 * C103 + (C2703 - (C2702 + C2701) + C2704) * C104 +
           ((C113 * C713 + C31552 * C714) * C2687 -
            (C172 * C2680 + C173 * C2686) +
            (C113 * C715 + C31552 * C716) * C31418) *
               C105) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
               C31311 * C5023) *
              C31702 +
          ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
           (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
               C31311 * C5023) *
              C31695 +
          (C2709 * C31311 * C5021 +
           (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
               C31311 * C5023) *
              C31682 +
          (C2710 * C31311 * C5021 +
           (C387 * C2687 - (C386 * C2680 + C385 * C2686) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C2687 -
            (C388 * C2680 + C387 * C2686) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C2812 +
          ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
               C31311 * C5021 +
           (C378 * C2815 - (C377 * C31703 + C376 * C2814) + C379 * C31699 -
            C1575 * C2816 - C1576 * C31689 + C6061 * C2817 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C2815 - (C379 * C31703 + C378 * C2814) + C1576 * C31699 -
            C6061 * C2816 - C6062 * C31689 +
            (C113 * C6052 + C31552 * C6053) * C2817 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C2686 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C2680 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C2687 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31418) *
              C31311 * C31541 * C31702 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C2687 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C2680 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C2686) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31418) *
              C31311 * C31541 * C31695 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C2686 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C2680 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C2687 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31418) *
              C31311 * C31541 * C31682 +
          ((C9289 * C311 + C9286 * C327 + C9290 * C1007 + C9287 * C1015 +
            C9291 * C2326 + C9288 * C2327) *
               C2687 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C2680 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C2686) +
           (C9289 * C328 + C9286 * C341 + C9290 * C1016 + C9287 * C1022 +
            C9291 * C2328 + C9288 * C2329) *
               C31418) *
              C31311 * C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C2814 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31703 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C2815 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31699 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C2816 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31689 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C2817 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C2812 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C2815 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31703 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C2814) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31699 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C2816 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31689 +
           (C9289 * C1274 + C9286 * C1282 + C9290 * C1855 + C9287 * C1859 +
            C9291 * C6766 + C9288 * C6767) *
               C2817 +
           (C9289 * C1283 + C9286 * C1292 + C9290 * C1860 + C9287 * C1864 +
            C9291 * C6768 + C9288 * C6769) *
               C31669) *
              C31311 * C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
             C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                C31311 * C5021 +
            (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
             C5151 * C30309 + C5152 * C3108) *
                C31311 * C5022 +
            (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 - C5152 * C31421 +
             C5805 * C30309 + C5806 * C3108) *
                C31311 * C5023) *
               C31616 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C31311 * C5021 +
            (C378 * C30295 - (C377 * C31414 + C376 * C30303) + C379 * C31421 -
             C1575 * C30309 - C1576 * C3108) *
                C31311 * C5022 +
            (C1575 * C30295 - (C379 * C31414 + C378 * C30303) + C1576 * C31421 -
             C6061 * C30309 - C6062 * C3108) *
                C31311 * C5023) *
               C31337) *
              C3547 +
          (((C5613 * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                C31311 * C5021 +
            (C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
             C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                C31311 * C5022 +
            (C5947 * C30295 - (C5616 * C31414 + C5615 * C30303) +
             C5948 * C31421 - C6325 * C30309 - C6326 * C3108) *
                C31311 * C5023) *
               C31616 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C31311 * C5021 +
            (C1043 * C30303 + C1044 * C31414 - C1749 * C30295 - C1750 * C31421 +
             C6217 * C30309 + C6218 * C3108) *
                C31311 * C5022 +
            (C1749 * C30303 + C1750 * C31414 - C6217 * C30295 - C6218 * C31421 +
             (C113 * C6208 + C31552 * C6209) * C30309 +
             (C113 * C6210 + C31552 * C6211) * C3108) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 -
             (C113 * C305 + C31552 * C315) * C30295 -
             (C113 * C316 + C31552 * C335) * C31421 +
             (C113 * C306 + C31552 * C317) * C30309 +
             (C113 * C318 + C31552 * C336) * C3108) *
                C103 +
            (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
            C3138 * C105) *
               C31541 * C31616 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C103 +
            (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C104 +
            (C3128 - (C3129 + C3130) + C3131 - C3132 - C3133) * C105) *
               C31541 * C31337) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             (C113 * C1010 + C31552 * C1019) * C31421 -
             (C113 * C1406 + C31552 * C1415) * C30309 -
             (C113 * C1416 + C31552 * C1433) * C3108) *
                C103 +
            (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C104 +
            (C3444 - (C3445 + C3446) + C3447 - C3448 - C3449) * C105) *
               C31541 * C31616 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C103 +
            (C3446 + C3445 - C3444 - C3447 + C3448 + C3449) * C104 +
            (C586 * C30303 + C587 * C31414 - C1048 * C30295 - C1049 * C31421 +
             (C113 * C1728 + C31552 * C1729) * C30309 +
             (C113 * C1730 + C31552 * C1731) * C3108) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C30303 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31414 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C30295 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31421 +
            (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
             C9291 * C1410 + C9288 * C1423) *
                C30309 +
            (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
             C9291 * C1424 + C9288 * C1437) *
                C3108) *
               C31311 * C31541 * C31616 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C30295 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31414 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C30303) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31421 -
            (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
             C9289 * C308 + C9286 * C321) *
                C30309 -
            (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
             C9289 * C322 + C9286 * C338) *
                C3108) *
               C31311 * C31541 * C31337) *
              C3547 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C30295 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31414 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C30303) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31421 -
            (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
             C9289 * C1406 + C9286 * C1415) *
                C30309 -
            (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
             C9289 * C1416 + C9286 * C1433) *
                C3108) *
               C31311 * C31541 * C31616 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C30303 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31414 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C30295 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31421 +
            (C9289 * C1407 + C9286 * C1417 + C9290 * C1412 + C9287 * C1427 +
             C9291 * C6874 + C9288 * C6875) *
                C30309 +
            (C9289 * C1418 + C9286 * C1434 + C9290 * C1428 + C9287 * C1439 +
             C9291 * C6876 + C9288 * C6877) *
                C3108) *
               C31311 * C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31552 * C122) * C30303 +
                    (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
                    C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                       C31311 * C5021 +
                   (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 -
                    C5150 * C31421 + C5151 * C30309 + C5152 * C3108) *
                       C31311 * C5022 +
                   (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 -
                    C5152 * C31421 + C5805 * C30309 + C5806 * C3108) *
                       C31311 * C5023) *
                      C31327 * C31456 +
                  ((C5613 * C30295 -
                    ((C113 * C533 + C31552 * C550) * C31414 +
                     (C113 * C520 + C31552 * C534) * C30303) +
                    C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                       C31311 * C5021 +
                   (C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
                    C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                       C31311 * C5022 +
                   (C5947 * C30295 - (C5616 * C31414 + C5615 * C30303) +
                    C5948 * C31421 - C6325 * C30309 - C6326 * C3108) *
                       C31311 * C5023) *
                      C31327 * C31463 +
                  (((C113 * C522 + C31552 * C537) * C30303 +
                    (C113 * C538 + C31552 * C552) * C31414 - C5949 * C30295 -
                    C5950 * C31421 + C5951 * C30309 + C5952 * C3108) *
                       C31311 * C5021 +
                   (C5949 * C30303 + C5950 * C31414 - C5951 * C30295 -
                    C5952 * C31421 + C5953 * C30309 + C5954 * C3108) *
                       C31311 * C5022 +
                   (C5951 * C30303 + C5952 * C31414 - C5953 * C30295 -
                    C5954 * C31421 + (C113 * C5920 + C31552 * C5925) * C30309 +
                    (C113 * C5926 + C31552 * C5929) * C3108) *
                       C31311 * C5023) *
                      C31327 * C4067)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31552 * C122) * C30303 +
                    (C113 * C123 + C31552 * C136) * C31414 -
                    (C113 * C305 + C31552 * C315) * C30295 -
                    (C113 * C316 + C31552 * C335) * C31421 +
                    (C113 * C306 + C31552 * C317) * C30309 +
                    (C113 * C318 + C31552 * C336) * C3108) *
                       C103 +
                   (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
                   C3138 * C105) *
                      C31541 * C31327 * C31456 +
                  (((C113 * C1004 + C31552 * C1009) * C30295 -
                    ((C113 * C533 + C31552 * C550) * C31414 +
                     (C113 * C520 + C31552 * C534) * C30303) +
                    (C113 * C1010 + C31552 * C1019) * C31421 -
                    (C113 * C1406 + C31552 * C1415) * C30309 -
                    (C113 * C1416 + C31552 * C1433) * C3108) *
                       C103 +
                   (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C104 +
                   (C3444 - (C3445 + C3446) + C3447 - C3448 - C3449) * C105) *
                      C31541 * C31327 * C31463 +
                  (((C113 * C522 + C31552 * C537) * C30303 +
                    (C113 * C538 + C31552 * C552) * C31414 -
                    (C113 * C1409 + C31552 * C1421) * C30295 -
                    (C113 * C1422 + C31552 * C1436) * C31421 +
                    (C113 * C1410 + C31552 * C1423) * C30309 +
                    (C113 * C1424 + C31552 * C1437) * C3108) *
                       C103 +
                   (C588 * C30303 + C589 * C31414 - C2343 * C30295 -
                    C2344 * C31421 + (C113 * C1412 + C31552 * C1427) * C30309 +
                    (C113 * C1428 + C31552 * C1439) * C3108) *
                       C104 +
                   (C590 * C30303 + C591 * C31414 - C2345 * C30295 -
                    C2346 * C31421 + (C113 * C1414 + C31552 * C1431) * C30309 +
                    (C113 * C1432 + C31552 * C1441) * C3108) *
                       C105) *
                      C31541 * C31327 * C4067)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
                    C9291 * C522 + C9288 * C537) *
                       C30303 +
                   (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
                    C9291 * C538 + C9288 * C552) *
                       C31414 -
                   (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 +
                    C9287 * C1009 + C9289 * C305 + C9286 * C315) *
                       C30295 -
                   (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 +
                    C9287 * C1019 + C9289 * C316 + C9286 * C335) *
                       C31421 +
                   (C9289 * C306 + C9286 * C317 + C9290 * C1406 +
                    C9287 * C1415 + C9291 * C1410 + C9288 * C1423) *
                       C30309 +
                   (C9289 * C318 + C9286 * C336 + C9290 * C1416 +
                    C9287 * C1433 + C9291 * C1424 + C9288 * C1437) *
                       C3108) *
                      C31311 * C31541 * C31327 * C31456 +
                  ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 +
                    C9287 * C1421 + C9291 * C2570 + C9288 * C2573) *
                       C30295 -
                   ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 +
                     C9287 * C552 + C9289 * C533 + C9286 * C550) *
                        C31414 +
                    (C9291 * C2158 + C9288 * C2167 + C9290 * C522 +
                     C9287 * C537 + C9289 * C520 + C9286 * C534) *
                        C30303) +
                   (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 +
                    C9287 * C1436 + C9291 * C2574 + C9288 * C2579) *
                       C31421 -
                   (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 +
                    C9287 * C1423 + C9289 * C1406 + C9286 * C1415) *
                       C30309 -
                   (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 +
                    C9287 * C1437 + C9289 * C1416 + C9286 * C1433) *
                       C3108) *
                      C31311 * C31541 * C31327 * C31463 +
                  ((C9289 * C522 + C9286 * C537 + C9290 * C2158 +
                    C9287 * C2167 + C9291 * C2159 + C9288 * C2168) *
                       C30303 +
                   (C9289 * C538 + C9286 * C552 + C9290 * C2166 +
                    C9287 * C2176 + C9291 * C2169 + C9288 * C2177) *
                       C31414 -
                   (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 +
                    C9287 * C2573 + C9289 * C1409 + C9286 * C1421) *
                       C30295 -
                   (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 +
                    C9287 * C2579 + C9289 * C1422 + C9286 * C1436) *
                       C31421 +
                   (C9289 * C1410 + C9286 * C1423 + C9290 * C6608 +
                    C9287 * C6612 + C9291 * C6610 + C9288 * C6615) *
                       C30309 +
                   (C9289 * C1424 + C9286 * C1437 + C9290 * C6611 +
                    C9287 * C6617 + C9291 * C6616 + C9288 * C6619) *
                       C3108) *
                      C31311 * C31541 * C31327 * C4067)) /
                    (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C2686 +
                 (C113 * C123 + C31552 * C136) * C2680 -
                 (C113 * C305 + C31552 * C315) * C2687 -
                 (C113 * C316 + C31552 * C335) * C31418) *
                    C103 +
                (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
                   C31541 * C31693 +
               ((C2691 - (C2690 + C2689) + C2692) * C103 +
                (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
                   C31541 * C31680 +
               (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
                (C2701 + C2702 - C2703 - C2704) * C105) *
                   C31541 * C31653) *
                  C3547 +
              ((((C113 * C1004 + C31552 * C1009) * C2687 -
                 ((C113 * C533 + C31552 * C550) * C2680 +
                  (C113 * C520 + C31552 * C534) * C2686) +
                 (C113 * C1010 + C31552 * C1019) * C31418) *
                    C103 +
                (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
                   C31541 * C31693 +
               ((C2983 + C2982 - C2981 - C2984) * C103 +
                (C2987 + C2986 - C2985 - C2988) * C104 +
                (C3286 + C3287 - C3288 - C3289) * C105) *
                   C31541 * C31680 +
               (C3291 * C103 + (C3288 - (C3287 + C3286) + C3289) * C104 +
                ((C113 * C1008 + C31552 * C1017) * C2687 -
                 (C855 * C2680 + C856 * C2686) +
                 (C113 * C1018 + C31552 * C1023) * C31418) *
                    C105) *
                   C31541 * C31653) *
                  C31460) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C2814 +
                (C113 * C123 + C31552 * C136) * C31703 -
                (C113 * C305 + C31552 * C315) * C2815 -
                (C113 * C316 + C31552 * C335) * C31699 +
                (C113 * C306 + C31552 * C317) * C2816 +
                (C113 * C318 + C31552 * C336) * C31689 -
                (C113 * C1272 + C31552 * C1278) * C2817 -
                (C113 * C1279 + C31552 * C1290) * C31669) *
                   C103 +
               (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
                   C104 +
               (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
                   C105) *
                  C31541 * C31327 * C3547 +
              (((C113 * C1004 + C31552 * C1009) * C2815 -
                ((C113 * C533 + C31552 * C550) * C31703 +
                 (C113 * C520 + C31552 * C534) * C2814) +
                (C113 * C1010 + C31552 * C1019) * C31699 -
                (C113 * C1406 + C31552 * C1415) * C2816 -
                (C113 * C1416 + C31552 * C1433) * C31689 +
                (C113 * C1854 + C31552 * C1857) * C2817 +
                (C113 * C1858 + C31552 * C1863) * C31669) *
                   C103 +
               (C1043 * C2815 - (C583 * C31703 + C582 * C2814) +
                C1044 * C31699 - C1749 * C2816 - C1750 * C31689 +
                (C113 * C1855 + C31552 * C1859) * C2817 +
                (C113 * C1860 + C31552 * C1864) * C31669) *
                   C104 +
               (C1045 * C2815 - (C585 * C31703 + C584 * C2814) +
                C1047 * C31699 - C1751 * C2816 - C1752 * C31689 +
                (C113 * C1856 + C31552 * C1861) * C2817 +
                (C113 * C1862 + C31552 * C1865) * C31669) *
                   C105) *
                  C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 -
            (C113 * C305 + C31552 * C315) * C2687 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
              C31541 * C31327 * C31704 +
          (((C113 * C1004 + C31552 * C1009) * C2687 -
            ((C113 * C533 + C31552 * C550) * C2680 +
             (C113 * C520 + C31552 * C534) * C2686) +
            (C113 * C1010 + C31552 * C1019) * C31418) *
               C103 +
           (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
              C31541 * C31327 * C31701 +
          (((C113 * C522 + C31552 * C537) * C2686 +
            (C113 * C538 + C31552 * C552) * C2680 -
            (C113 * C1409 + C31552 * C1421) * C2687 -
            (C113 * C1422 + C31552 * C1436) * C31418) *
               C103 +
           (C2989 + C2990 - C2991 - C2992) * C104 +
           (C2993 + C2994 - C2995 - C2996) * C105) *
              C31541 * C31327 * C31692 +
          (((C113 * C2570 + C31552 * C2573) * C2687 -
            ((C113 * C2166 + C31552 * C2176) * C2680 +
             (C113 * C2158 + C31552 * C2167) * C2686) +
            (C113 * C2574 + C31552 * C2579) * C31418) *
               C103 +
           ((C113 * C2571 + C31552 * C2575) * C2687 -
            (C2466 * C2680 + C2465 * C2686) +
            (C113 * C2576 + C31552 * C2580) * C31418) *
               C104 +
           ((C113 * C2572 + C31552 * C2577) * C2687 -
            (C2468 * C2680 + C2467 * C2686) +
            (C113 * C2578 + C31552 * C2581) * C31418) *
               C105) *
              C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C2709 * C31311 * C5021 +
            (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C3547 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C3291 * C31311 * C5021 +
            (C1751 * C2687 - (C1047 * C2680 + C1045 * C2686) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C2687 -
             (C1752 * C2680 + C1751 * C2686) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C3547 +
          ((C5613 * C2815 -
            ((C113 * C533 + C31552 * C550) * C31703 +
             (C113 * C520 + C31552 * C534) * C2814) +
            C5614 * C31699 - C5615 * C2816 - C5616 * C31689 + C5947 * C2817 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C2815 - (C5614 * C31703 + C5613 * C2814) + C5616 * C31699 -
            C5947 * C2816 - C5948 * C31689 + C6325 * C2817 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C2815 - (C5616 * C31703 + C5615 * C2814) + C5948 * C31699 -
            C6325 * C2816 - C6326 * C31689 +
            (C113 * C6316 + C31552 * C6317) * C2817 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
               C31311 * C5023) *
              C31327 * C31704 +
          ((C5613 * C2687 -
            ((C113 * C533 + C31552 * C550) * C2680 +
             (C113 * C520 + C31552 * C534) * C2686) +
            C5614 * C31418) *
               C31311 * C5021 +
           (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
               C31311 * C5022 +
           (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
               C31311 * C5023) *
              C31327 * C31701 +
          (((C113 * C522 + C31552 * C537) * C2686 +
            (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
            C5950 * C31418) *
               C31311 * C5021 +
           (C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
               C31311 * C5022 +
           (C5951 * C2686 + C5952 * C2680 - C5953 * C2687 - C5954 * C31418) *
               C31311 * C5023) *
              C31327 * C31692 +
          ((C6989 * C2687 -
            ((C113 * C2166 + C31552 * C2176) * C2680 +
             (C113 * C2158 + C31552 * C2167) * C2686) +
            C6990 * C31418) *
               C31311 * C5021 +
           (C6991 * C2687 - (C6990 * C2680 + C6989 * C2686) + C6992 * C31418) *
               C31311 * C5022 +
           ((C113 * C6976 + C31552 * C6977) * C2687 -
            (C6992 * C2680 + C6991 * C2686) +
            (C113 * C6978 + C31552 * C6979) * C31418) *
               C31311 * C5023) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C2686 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C2680 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C2687 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C31693 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C2687 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C2680 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C2686) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31680 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C2686 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C2680 -
            (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
             C9289 * C309 + C9286 * C323) *
                C2687 -
            (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
             C9289 * C324 + C9286 * C339) *
                C31418) *
               C31311 * C31541 * C31653) *
              C3547 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C2687 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C2680 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C2686) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C31693 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C2686 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C2680 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C2687 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31680 +
           ((C9289 * C1006 + C9286 * C1013 + C9290 * C1413 + C9287 * C1429 +
             C9291 * C2572 + C9288 * C2577) *
                C2687 -
            ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
              C9289 * C530 + C9286 * C548) *
                 C2680 +
             (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
              C9289 * C518 + C9286 * C529) *
                 C2686) +
            (C9289 * C1014 + C9286 * C1021 + C9290 * C1430 + C9287 * C1440 +
             C9291 * C2578 + C9288 * C2581) *
                C31418) *
               C31311 * C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C2814 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31703 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C2815 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31699 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C2816 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31689 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C2817 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C31327 * C3547 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C2815 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31703 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C2814) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C31699 -
           (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
            C9289 * C1406 + C9286 * C1415) *
               C2816 -
           (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
            C9289 * C1416 + C9286 * C1433) *
               C31689 +
           (C9289 * C1854 + C9286 * C1857 + C9290 * C5919 + C9287 * C5923 +
            C9291 * C6976 + C9288 * C6977) *
               C2817 +
           (C9289 * C1858 + C9286 * C1863 + C9290 * C5924 + C9287 * C5928 +
            C9291 * C6978 + C9288 * C6979) *
               C31669) *
              C31311 * C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C2686 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C2680 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C2687 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31418) *
              C31311 * C31541 * C31327 * C31704 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C2687 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C2680 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C2686) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C31418) *
              C31311 * C31541 * C31327 * C31701 +
          ((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
            C9291 * C2159 + C9288 * C2168) *
               C2686 +
           (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
            C9291 * C2169 + C9288 * C2177) *
               C2680 -
           (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
            C9289 * C1409 + C9286 * C1421) *
               C2687 -
           (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
            C9289 * C1422 + C9286 * C1436) *
               C31418) *
              C31311 * C31541 * C31327 * C31692 +
          ((C9289 * C2570 + C9286 * C2573 + C9290 * C6609 + C9287 * C6613 +
            C9291 * C11118 + C9288 * C11119) *
               C2687 -
           ((C9291 * C10762 + C9288 * C10766 + C9290 * C2169 + C9287 * C2177 +
             C9289 * C2166 + C9286 * C2176) *
                C2680 +
            (C9291 * C10760 + C9288 * C10763 + C9290 * C2159 + C9287 * C2168 +
             C9289 * C2158 + C9286 * C2167) *
                C2686) +
           (C9289 * C2574 + C9286 * C2579 + C9290 * C6614 + C9287 * C6618 +
            C9291 * C11120 + C9288 * C11121) *
               C31418) *
              C31311 * C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31456 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C2686 + C5952 * C2680 - C5953 * C2687 - C5954 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2991 - (C2990 + C2989) + C2992) * C31311 * C5021 +
            (C6775 * C2687 - (C2344 * C2680 + C2343 * C2686) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C2687 -
             (C6776 * C2680 + C6775 * C2686) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C31616 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31337) *
              C31456 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
               C31541 * C31616 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C3286 + C3287 - C3288 - C3289) * C105) *
               C31541 * C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 -
             (C113 * C1409 + C31552 * C1421) * C2687 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2989 + C2990 - C2991 - C2992) * C104 +
            (C2993 + C2994 - C2995 - C2996) * C105) *
               C31541 * C31616 +
           ((C2991 - (C2990 + C2989) + C2992) * C103 +
            (C2995 - (C2994 + C2993) + C2996) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C2687 -
             (C592 * C2680 + C593 * C2686) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C2686 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C2680 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C2687 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C31616 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C2687 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C2680 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C2686) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31456 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C2687 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C2680 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C2686) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C31616 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C2686 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C2680 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C2687 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31463 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C2686 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C2680 -
            (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
             C9289 * C1409 + C9286 * C1421) *
                C2687 -
            (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
             C9289 * C1422 + C9286 * C1436) *
                C31418) *
               C31311 * C31541 * C31616 +
           ((C9289 * C1411 + C9286 * C1425 + C9290 * C2571 + C9287 * C2575 +
             C9291 * C10914 + C9288 * C10915) *
                C2687 -
            ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
              C9289 * C540 + C9286 * C553) *
                 C2680 +
             (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
              C9289 * C523 + C9286 * C539) *
                 C2686) +
            (C9289 * C1426 + C9286 * C1438 + C9290 * C2576 + C9287 * C2580 +
             C9291 * C10916 + C9288 * C10917) *
                C31418) *
               C31311 * C31541 * C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 -
            (C113 * C305 + C31552 * C315) * C2815 -
            (C113 * C316 + C31552 * C335) * C31699 +
            (C113 * C306 + C31552 * C317) * C2816 +
            (C113 * C318 + C31552 * C336) * C31689 -
            (C113 * C1272 + C31552 * C1278) * C2817 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
               C104 +
           (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
               C105) *
              C31541 * C31327 * C3547 +
          (((C113 * C1004 + C31552 * C1009) * C2815 -
            ((C113 * C533 + C31552 * C550) * C31703 +
             (C113 * C520 + C31552 * C534) * C2814) +
            (C113 * C1010 + C31552 * C1019) * C31699 -
            (C113 * C1406 + C31552 * C1415) * C2816 -
            (C113 * C1416 + C31552 * C1433) * C31689 +
            (C113 * C1854 + C31552 * C1857) * C2817 +
            (C113 * C1858 + C31552 * C1863) * C31669) *
               C103 +
           (C1043 * C2815 - (C583 * C31703 + C582 * C2814) + C1044 * C31699 -
            C1749 * C2816 - C1750 * C31689 +
            (C113 * C1855 + C31552 * C1859) * C2817 +
            (C113 * C1860 + C31552 * C1864) * C31669) *
               C104 +
           (C1045 * C2815 - (C585 * C31703 + C584 * C2814) + C1047 * C31699 -
            C1751 * C2816 - C1752 * C31689 +
            (C113 * C1856 + C31552 * C1861) * C2817 +
            (C113 * C1862 + C31552 * C1865) * C31669) *
               C105) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C31693 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31680 +
           (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
            (C2701 + C2702 - C2703 - C2704) * C105) *
               C31541 * C31653) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
               C31541 * C31693 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C3286 + C3287 - C3288 - C3289) * C105) *
               C31541 * C31680 +
           (C3291 * C103 + (C3288 - (C3287 + C3286) + C3289) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C2687 -
             (C855 * C2680 + C856 * C2686) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C2709 * C31311 * C5021 +
            (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C3547 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C3291 * C31311 * C5021 +
            (C1751 * C2687 - (C1047 * C2680 + C1045 * C2686) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C2687 -
             (C1752 * C2680 + C1751 * C2686) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C3547 +
          ((C5613 * C2815 -
            ((C113 * C533 + C31552 * C550) * C31703 +
             (C113 * C520 + C31552 * C534) * C2814) +
            C5614 * C31699 - C5615 * C2816 - C5616 * C31689 + C5947 * C2817 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C2815 - (C5614 * C31703 + C5613 * C2814) + C5616 * C31699 -
            C5947 * C2816 - C5948 * C31689 + C6325 * C2817 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C2815 - (C5616 * C31703 + C5615 * C2814) + C5948 * C31699 -
            C6325 * C2816 - C6326 * C31689 +
            (C113 * C6316 + C31552 * C6317) * C2817 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C2686 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C2680 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C2687 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C31693 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C2687 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C2680 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C2686) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31680 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C2686 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C2680 -
            (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
             C9289 * C309 + C9286 * C323) *
                C2687 -
            (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
             C9289 * C324 + C9286 * C339) *
                C31418) *
               C31311 * C31541 * C31653) *
              C3547 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C2687 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C2680 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C2686) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C31693 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C2686 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C2680 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C2687 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31680 +
           ((C9289 * C1006 + C9286 * C1013 + C9290 * C1413 + C9287 * C1429 +
             C9291 * C2572 + C9288 * C2577) *
                C2687 -
            ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
              C9289 * C530 + C9286 * C548) *
                 C2680 +
             (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
              C9289 * C518 + C9286 * C529) *
                 C2686) +
            (C9289 * C1014 + C9286 * C1021 + C9290 * C1430 + C9287 * C1440 +
             C9291 * C2578 + C9288 * C2581) *
                C31418) *
               C31311 * C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C2814 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31703 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C2815 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31699 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C2816 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31689 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C2817 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C31327 * C3547 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C2815 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31703 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C2814) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C31699 -
           (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
            C9289 * C1406 + C9286 * C1415) *
               C2816 -
           (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
            C9289 * C1416 + C9286 * C1433) *
               C31689 +
           (C9289 * C1854 + C9286 * C1857 + C9290 * C5919 + C9287 * C5923 +
            C9291 * C6976 + C9288 * C6977) *
               C2817 +
           (C9289 * C1858 + C9286 * C1863 + C9290 * C5924 + C9287 * C5928 +
            C9291 * C6978 + C9288 * C6979) *
               C31669) *
              C31311 * C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C711 +
                (C113 * C123 + C31552 * C136) * C31630 -
                (C113 * C305 + C31552 * C315) * C712 -
                (C113 * C316 + C31552 * C335) * C31418) *
                   C103 +
               (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
                  C31541 * C707 +
              ((C720 - (C719 + C718) + C721) * C103 +
               (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
                  C31541 * C708 +
              (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
               (C730 + C731 - C742 - C743) * C105) *
                  C31541 * C709 +
              (C745 * C103 + (C742 - (C731 + C730) + C743) * C104 +
               ((C113 * C713 + C31552 * C714) * C712 -
                (C172 * C31630 + C173 * C711) +
                (C113 * C715 + C31552 * C716) * C31418) *
                   C105) *
                  C31541 * C31663) *
             C31373 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C1546 +
                (C113 * C123 + C31552 * C136) * C1540 -
                (C113 * C305 + C31552 * C315) * C1547 -
                (C113 * C316 + C31552 * C335) * C1541 +
                (C113 * C306 + C31552 * C317) * C1548 +
                (C113 * C318 + C31552 * C336) * C1542 -
                (C113 * C1272 + C31552 * C1278) * C1549 -
                (C113 * C1279 + C31552 * C1290) * C31669) *
                   C103 +
               (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
                   C104 +
               (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
                   C105) *
                  C31541 * C31616 +
              ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 +
                C1580) *
                   C103 +
               (C1567 - (C1566 + C1565) + C1568 - C1569 - C1570 + C1581 +
                C1582) *
                   C104 +
               (C385 * C1547 - (C168 * C1540 + C169 * C1546) + C386 * C1541 -
                C387 * C1548 - C388 * C1542 +
                (C113 * C1550 + C31552 * C1551) * C1549 +
                (C113 * C1552 + C31552 * C1553) * C31669) *
                   C105) *
                  C31541 * C31337) *
             C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C31616 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C31337) *
              C1976 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C31616 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C31337) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 -
             (C113 * C1409 + C31552 * C1421) * C712 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2331 + C2332 - C2347 - C2348) * C104 +
            (C2337 + C2338 - C2349 - C2350) * C105) *
               C31541 * C31616 +
           ((C2347 - (C2332 + C2331) + C2348) * C103 +
            (C2349 - (C2338 + C2337) + C2350) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C712 -
             (C592 * C31630 + C593 * C711) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
               C31311 * C5023) *
              C707 +
          ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
           (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
               C31311 * C5023) *
              C708 +
          (C744 * C31311 * C5021 +
           (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
               C31311 * C5023) *
              C709 +
          (C745 * C31311 * C5021 +
           (C387 * C712 - (C386 * C31630 + C385 * C711) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C712 -
            (C388 * C31630 + C387 * C711) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31616 +
          ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
               C31311 * C5021 +
           (C378 * C1547 - (C377 * C1540 + C376 * C1546) + C379 * C1541 -
            C1575 * C1548 - C1576 * C1542 + C6061 * C1549 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C1547 - (C379 * C1540 + C378 * C1546) + C1576 * C1541 -
            C6061 * C1548 - C6062 * C1542 +
            (C113 * C6052 + C31552 * C6053) * C1549 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C1976 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 - C6217 * C712 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C711 + C5952 * C31630 - C5953 * C712 - C5954 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2347 - (C2332 + C2331) + C2348) * C31311 * C5021 +
            (C6775 * C712 - (C2344 * C31630 + C2343 * C711) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C712 -
             (C6776 * C31630 + C6775 * C711) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C711 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31630 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C712 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31418) *
              C31311 * C31541 * C707 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C712 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31630 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C711) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31418) *
              C31311 * C31541 * C708 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C711 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31630 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C712 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31418) *
              C31311 * C31541 * C709 +
          ((C9289 * C311 + C9286 * C327 + C9290 * C1007 + C9287 * C1015 +
            C9291 * C2326 + C9288 * C2327) *
               C712 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C31630 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C711) +
           (C9289 * C328 + C9286 * C341 + C9290 * C1016 + C9287 * C1022 +
            C9291 * C2328 + C9288 * C2329) *
               C31418) *
              C31311 * C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1546 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1540 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1547 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1541 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1548 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C1542 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C1549 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C31616 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C1547 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C1540 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C1546) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C1541 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C1548 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C1542 +
           (C9289 * C1274 + C9286 * C1282 + C9290 * C1855 + C9287 * C1859 +
            C9291 * C6766 + C9288 * C6767) *
               C1549 +
           (C9289 * C1283 + C9286 * C1292 + C9290 * C1860 + C9287 * C1864 +
            C9291 * C6768 + C9288 * C6769) *
               C31669) *
              C31311 * C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C711 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31630 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C712 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C31616 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C712 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31630 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C711) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31337) *
              C1976 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C712 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31630 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C711) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C31616 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C711 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31630 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C712 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31337) *
              C1977 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C711 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31630 -
            (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
             C9289 * C1409 + C9286 * C1421) *
                C712 -
            (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
             C9289 * C1422 + C9286 * C1436) *
                C31418) *
               C31311 * C31541 * C31616 +
           ((C9289 * C1411 + C9286 * C1425 + C9290 * C2571 + C9287 * C2575 +
             C9291 * C10914 + C9288 * C10915) *
                C712 -
            ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
              C9289 * C540 + C9286 * C553) *
                 C31630 +
             (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
              C9289 * C523 + C9286 * C539) *
                 C711) +
            (C9289 * C1426 + C9286 * C1438 + C9290 * C2576 + C9287 * C2580 +
             C9291 * C10916 + C9288 * C10917) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C711 +
                 (C113 * C123 + C31552 * C136) * C31630 -
                 (C113 * C305 + C31552 * C315) * C712 -
                 (C113 * C316 + C31552 * C335) * C31418) *
                    C103 +
                (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
                   C31541 * C299 +
               ((C720 - (C719 + C718) + C721) * C103 +
                (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
                   C31541 * C300 +
               (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
                (C730 + C731 - C742 - C743) * C105) *
                   C31541 * C31653) *
                  C31631 +
              ((((C113 * C1004 + C31552 * C1009) * C712 -
                 ((C113 * C533 + C31552 * C550) * C31630 +
                  (C113 * C520 + C31552 * C534) * C711) +
                 (C113 * C1010 + C31552 * C1019) * C31418) *
                    C103 +
                (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
                   C31541 * C299 +
               ((C1028 + C1027 - C1050 - C1051) * C103 +
                (C1034 + C1033 - C1052 - C1053) * C104 +
                (C1037 + C1038 - C1054 - C1055) * C105) *
                   C31541 * C300 +
               (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
                ((C113 * C1008 + C31552 * C1017) * C712 -
                 (C855 * C31630 + C856 * C711) +
                 (C113 * C1018 + C31552 * C1023) * C31418) *
                    C105) *
                   C31541 * C31653) *
                  C31460) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C1546 +
                (C113 * C123 + C31552 * C136) * C1540 -
                (C113 * C305 + C31552 * C315) * C1547 -
                (C113 * C316 + C31552 * C335) * C1541 +
                (C113 * C306 + C31552 * C317) * C1548 +
                (C113 * C318 + C31552 * C336) * C1542 -
                (C113 * C1272 + C31552 * C1278) * C1549 -
                (C113 * C1279 + C31552 * C1290) * C31669) *
                   C103 +
               (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
                   C104 +
               (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
                   C105) *
                  C31541 * C31327 * C31631 +
              (((C113 * C1004 + C31552 * C1009) * C1547 -
                ((C113 * C533 + C31552 * C550) * C1540 +
                 (C113 * C520 + C31552 * C534) * C1546) +
                (C113 * C1010 + C31552 * C1019) * C1541 -
                (C113 * C1406 + C31552 * C1415) * C1548 -
                (C113 * C1416 + C31552 * C1433) * C1542 +
                (C113 * C1854 + C31552 * C1857) * C1549 +
                (C113 * C1858 + C31552 * C1863) * C31669) *
                   C103 +
               (C1043 * C1547 - (C583 * C1540 + C582 * C1546) + C1044 * C1541 -
                C1749 * C1548 - C1750 * C1542 +
                (C113 * C1855 + C31552 * C1859) * C1549 +
                (C113 * C1860 + C31552 * C1864) * C31669) *
                   C104 +
               (C1045 * C1547 - (C585 * C1540 + C584 * C1546) + C1047 * C1541 -
                C1751 * C1548 - C1752 * C1542 +
                (C113 * C1856 + C31552 * C1861) * C1549 +
                (C113 * C1862 + C31552 * C1865) * C31669) *
                   C105) *
                  C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 -
            (C113 * C305 + C31552 * C315) * C712 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
              C31541 * C31327 * C2448 +
          (((C113 * C1004 + C31552 * C1009) * C712 -
            ((C113 * C533 + C31552 * C550) * C31630 +
             (C113 * C520 + C31552 * C534) * C711) +
            (C113 * C1010 + C31552 * C1019) * C31418) *
               C103 +
           (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
              C31541 * C31327 * C2449 +
          (((C113 * C522 + C31552 * C537) * C711 +
            (C113 * C538 + C31552 * C552) * C31630 -
            (C113 * C1409 + C31552 * C1421) * C712 -
            (C113 * C1422 + C31552 * C1436) * C31418) *
               C103 +
           (C2331 + C2332 - C2347 - C2348) * C104 +
           (C2337 + C2338 - C2349 - C2350) * C105) *
              C31541 * C31327 * C2450 +
          (((C113 * C2570 + C31552 * C2573) * C712 -
            ((C113 * C2166 + C31552 * C2176) * C31630 +
             (C113 * C2158 + C31552 * C2167) * C711) +
            (C113 * C2574 + C31552 * C2579) * C31418) *
               C103 +
           ((C113 * C2571 + C31552 * C2575) * C712 -
            (C2466 * C31630 + C2465 * C711) +
            (C113 * C2576 + C31552 * C2580) * C31418) *
               C104 +
           ((C113 * C2572 + C31552 * C2577) * C712 -
            (C2468 * C31630 + C2467 * C711) +
            (C113 * C2578 + C31552 * C2581) * C31418) *
               C105) *
              C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C299 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C300 +
           (C744 * C31311 * C5021 +
            (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C31631 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            ((C113 * C1854 + C31552 * C1857) * C712 -
             (C5616 * C31630 + C5615 * C711) +
             (C113 * C1858 + C31552 * C1863) * C31418) *
                C31311 * C5023) *
               C299 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 -
             (C113 * C1855 + C31552 * C1859) * C712 -
             (C113 * C1860 + C31552 * C1864) * C31418) *
                C31311 * C5023) *
               C300 +
           (C1057 * C31311 * C5021 +
            (C1751 * C712 - (C1047 * C31630 + C1045 * C711) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C712 -
             (C1752 * C31630 + C1751 * C711) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C31631 +
          ((C5613 * C1547 -
            ((C113 * C533 + C31552 * C550) * C1540 +
             (C113 * C520 + C31552 * C534) * C1546) +
            C5614 * C1541 - C5615 * C1548 - C5616 * C1542 + C5947 * C1549 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C1547 - (C5614 * C1540 + C5613 * C1546) + C5616 * C1541 -
            C5947 * C1548 - C5948 * C1542 + C6325 * C1549 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C1547 - (C5616 * C1540 + C5615 * C1546) + C5948 * C1541 -
            C6325 * C1548 - C6326 * C1542 +
            (C113 * C6316 + C31552 * C6317) * C1549 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
               C31311 * C5023) *
              C31327 * C2448 +
          ((C5613 * C712 -
            ((C113 * C533 + C31552 * C550) * C31630 +
             (C113 * C520 + C31552 * C534) * C711) +
            C5614 * C31418) *
               C31311 * C5021 +
           (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
               C31311 * C5022 +
           (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
               C31311 * C5023) *
              C31327 * C2449 +
          (((C113 * C522 + C31552 * C537) * C711 +
            (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
            C5950 * C31418) *
               C31311 * C5021 +
           (C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
               C31311 * C5022 +
           (C5951 * C711 + C5952 * C31630 - C5953 * C712 - C5954 * C31418) *
               C31311 * C5023) *
              C31327 * C2450 +
          ((C6989 * C712 -
            ((C113 * C2166 + C31552 * C2176) * C31630 +
             (C113 * C2158 + C31552 * C2167) * C711) +
            C6990 * C31418) *
               C31311 * C5021 +
           (C6991 * C712 - (C6990 * C31630 + C6989 * C711) + C6992 * C31418) *
               C31311 * C5022 +
           ((C113 * C6976 + C31552 * C6977) * C712 -
            (C6992 * C31630 + C6991 * C711) +
            (C113 * C6978 + C31552 * C6979) * C31418) *
               C31311 * C5023) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C711 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31630 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C712 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C299 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C712 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31630 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C711) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C300 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C711 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31630 -
            (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
             C9289 * C309 + C9286 * C323) *
                C712 -
            (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
             C9289 * C324 + C9286 * C339) *
                C31418) *
               C31311 * C31541 * C31653) *
              C31631 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C712 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31630 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C711) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C299 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C711 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31630 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C712 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C300 +
           ((C9289 * C1006 + C9286 * C1013 + C9290 * C1413 + C9287 * C1429 +
             C9291 * C2572 + C9288 * C2577) *
                C712 -
            ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
              C9289 * C530 + C9286 * C548) *
                 C31630 +
             (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
              C9289 * C518 + C9286 * C529) *
                 C711) +
            (C9289 * C1014 + C9286 * C1021 + C9290 * C1430 + C9287 * C1440 +
             C9291 * C2578 + C9288 * C2581) *
                C31418) *
               C31311 * C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1546 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1540 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1547 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1541 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1548 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C1542 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C1549 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C31327 * C31631 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C1547 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C1540 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C1546) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C1541 -
           (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
            C9289 * C1406 + C9286 * C1415) *
               C1548 -
           (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
            C9289 * C1416 + C9286 * C1433) *
               C1542 +
           (C9289 * C1854 + C9286 * C1857 + C9290 * C5919 + C9287 * C5923 +
            C9291 * C6976 + C9288 * C6977) *
               C1549 +
           (C9289 * C1858 + C9286 * C1863 + C9290 * C5924 + C9287 * C5928 +
            C9291 * C6978 + C9288 * C6979) *
               C31669) *
              C31311 * C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C711 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31630 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C712 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31418) *
              C31311 * C31541 * C31327 * C2448 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C712 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31630 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C711) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C31418) *
              C31311 * C31541 * C31327 * C2449 +
          ((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
            C9291 * C2159 + C9288 * C2168) *
               C711 +
           (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
            C9291 * C2169 + C9288 * C2177) *
               C31630 -
           (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
            C9289 * C1409 + C9286 * C1421) *
               C712 -
           (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
            C9289 * C1422 + C9286 * C1436) *
               C31418) *
              C31311 * C31541 * C31327 * C2450 +
          ((C9289 * C2570 + C9286 * C2573 + C9290 * C6609 + C9287 * C6613 +
            C9291 * C11118 + C9288 * C11119) *
               C712 -
           ((C9291 * C10762 + C9288 * C10766 + C9290 * C2169 + C9287 * C2177 +
             C9289 * C2166 + C9286 * C2176) *
                C31630 +
            (C9291 * C10760 + C9288 * C10763 + C9290 * C2159 + C9287 * C2168 +
             C9289 * C2158 + C9286 * C2167) *
                C711) +
           (C9289 * C2574 + C9286 * C2579 + C9290 * C6614 + C9287 * C6618 +
            C9291 * C11120 + C9288 * C11121) *
               C31418) *
              C31311 * C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C114 +
                (C113 * C123 + C31552 * C136) * C31355) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C31541 * C107 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C31541 * C108 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                  C109 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C31541 * C110 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31552 * C134) * C114 +
                (C113 * C135 + C31552 * C142) * C31355) *
                   C105) *
                  C31541 * C111) *
             C31373 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C302 +
                (C113 * C123 + C31552 * C136) * C31696 -
                (C113 * C305 + C31552 * C315) * C303 -
                (C113 * C316 + C31552 * C335) * C31684 +
                (C113 * C306 + C31552 * C317) * C304 +
                (C113 * C318 + C31552 * C336) * C31659) *
                   C103 +
               (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
                  C31541 * C299 +
              ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
               (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
               (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
                  C31541 * C300 +
              (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
               (C170 * C302 + C171 * C31696 -
                (C113 * C313 + C31552 * C331) * C303 -
                (C113 * C332 + C31552 * C343) * C31684 +
                (C113 * C314 + C31552 * C333) * C304 +
                (C113 * C334 + C31552 * C344) * C31659) *
                   C105) *
                  C31541 * C31653) *
             C31373 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C114 +
                 (C113 * C123 + C31552 * C136) * C31355) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31541 * C299 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31541 * C300 +
               (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                   C31653) *
                  C31697 +
              (((C594 + C595) * C103 + (C596 + C597) * C104 +
                (C598 + C599) * C105) *
                   C31541 * C300 -
               (C606 * C105 + (C595 + C594) * C104 +
                ((C113 * C533 + C31552 * C550) * C31355 +
                 (C113 * C520 + C31552 * C534) * C114) *
                    C103) *
                   C31541 * C299 -
               (((C113 * C535 + C31552 * C551) * C31355 +
                 (C113 * C521 + C31552 * C536) * C114) *
                    C105 +
                (C599 + C598) * C104 + C606 * C103) *
                   C31541 * C31653) *
                  C31686 +
              ((((C113 * C522 + C31552 * C537) * C114 +
                 (C113 * C538 + C31552 * C552) * C31355) *
                    C103 +
                (C600 + C601) * C104 + C607 * C105) *
                   C31541 * C299 -
               ((C604 + C605) * C105 + (C603 + C602) * C104 +
                (C601 + C600) * C103) *
                   C31541 * C300 +
               (C607 * C103 + (C605 + C604) * C104 +
                ((C113 * C526 + C31552 * C545) * C114 +
                 (C113 * C546 + C31552 * C556) * C31355) *
                    C105) *
                   C31541 * C31653) *
                  C31662) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C1173 +
                (C113 * C123 + C31552 * C136) * C1167 -
                (C113 * C305 + C31552 * C315) * C1174 -
                (C113 * C316 + C31552 * C335) * C1168 +
                (C113 * C306 + C31552 * C317) * C1175 +
                (C113 * C318 + C31552 * C336) * C31659) *
                   C103 +
               (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
               C1199 * C105) *
                  C31541 * C31693 +
              ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
               (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
               (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
                  C31541 * C31680 +
              (C1199 * C103 +
               (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
               (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
                (C113 * C314 + C31552 * C333) * C1175 +
                (C113 * C334 + C31552 * C344) * C31659) *
                   C105) *
                  C31541 * C31653) *
             C31373 -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C115 + C31552 * C122) * C1267 +
               (C113 * C123 + C31552 * C136) * C1261 -
               (C113 * C305 + C31552 * C315) * C1268 -
               (C113 * C316 + C31552 * C335) * C1262 +
               (C113 * C306 + C31552 * C317) * C1269 +
               (C113 * C318 + C31552 * C336) * C1263 -
               (C113 * C1272 + C31552 * C1278) * C1270 -
               (C113 * C1279 + C31552 * C1290) * C1264 +
               (C113 * C1273 + C31552 * C1280) * C1271 +
               (C113 * C1281 + C31552 * C1291) * C1265) *
                  C103 +
              (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
               C378 * C1269 + C379 * C1263 -
               (C113 * C1274 + C31552 * C1282) * C1270 -
               (C113 * C1283 + C31552 * C1292) * C1264 +
               (C113 * C1275 + C31552 * C1284) * C1271 +
               (C113 * C1285 + C31552 * C1293) * C1265) *
                  C104 +
              (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
               C383 * C1269 + C384 * C1263 -
               (C113 * C1276 + C31552 * C1286) * C1270 -
               (C113 * C1287 + C31552 * C1294) * C1264 +
               (C113 * C1277 + C31552 * C1288) * C1271 +
               (C113 * C1289 + C31552 * C1295) * C1265) *
                  C105) *
             C31541 * C31327 * C31373 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C1173 +
                (C113 * C123 + C31552 * C136) * C1167 -
                (C113 * C305 + C31552 * C315) * C1174 -
                (C113 * C316 + C31552 * C335) * C1168 +
                (C113 * C306 + C31552 * C317) * C1175 +
                (C113 * C318 + C31552 * C336) * C31659) *
                   C103 +
               (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
               C1199 * C105) *
                  C31541 * C31327 * C31697 +
              (((C113 * C1004 + C31552 * C1009) * C1174 -
                ((C113 * C533 + C31552 * C550) * C1167 +
                 (C113 * C520 + C31552 * C534) * C1173) +
                (C113 * C1010 + C31552 * C1019) * C1168 -
                (C113 * C1406 + C31552 * C1415) * C1175 -
                (C113 * C1416 + C31552 * C1433) * C31659) *
                   C103 +
               (C1043 * C1174 - (C583 * C1167 + C582 * C1173) + C1044 * C1168 -
                (C113 * C1407 + C31552 * C1417) * C1175 -
                (C113 * C1418 + C31552 * C1434) * C31659) *
                   C104 +
               (C1045 * C1174 - (C585 * C1167 + C584 * C1173) + C1047 * C1168 -
                (C113 * C1408 + C31552 * C1419) * C1175 -
                (C113 * C1420 + C31552 * C1435) * C31659) *
                   C105) *
                  C31541 * C31327 * C31686 +
              (((C113 * C522 + C31552 * C537) * C1173 +
                (C113 * C538 + C31552 * C552) * C1167 -
                (C113 * C1409 + C31552 * C1421) * C1174 -
                (C113 * C1422 + C31552 * C1436) * C1168 +
                (C113 * C1410 + C31552 * C1423) * C1175 +
                (C113 * C1424 + C31552 * C1437) * C31659) *
                   C103 +
               (C588 * C1173 + C589 * C1167 -
                (C113 * C1411 + C31552 * C1425) * C1174 -
                (C113 * C1426 + C31552 * C1438) * C1168 +
                (C113 * C1412 + C31552 * C1427) * C1175 +
                (C113 * C1428 + C31552 * C1439) * C31659) *
                   C104 +
               (C590 * C1173 + C591 * C1167 -
                (C113 * C1413 + C31552 * C1429) * C1174 -
                (C113 * C1430 + C31552 * C1440) * C1168 +
                (C113 * C1414 + C31552 * C1431) * C1175 +
                (C113 * C1432 + C31552 * C1441) * C31659) *
                   C105) *
                  C31541 * C31327 * C31662) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C114 +
                 (C113 * C123 + C31552 * C136) * C31355) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31541 * C31693 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31541 * C31680 +
               (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                   C31653) *
                  C1976 +
              (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
                   C31541 * C31680 -
               (C606 * C105 + (C595 + C594) * C104 +
                ((C113 * C533 + C31552 * C550) * C31355 +
                 (C113 * C520 + C31552 * C534) * C114) *
                    C103) *
                   C31541 * C31693 -
               ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
                   C31541 * C31653) *
                  C1977 +
              ((((C113 * C522 + C31552 * C537) * C114 +
                 (C113 * C538 + C31552 * C552) * C31355) *
                    C103 +
                (C600 + C601) * C104 + C607 * C105) *
                   C31541 * C31693 -
               ((C604 + C605) * C105 + (C603 + C602) * C104 +
                (C601 + C600) * C103) *
                   C31541 * C31680 +
               (C607 * C103 + (C605 + C604) * C104 +
                ((C113 * C526 + C31552 * C545) * C114 +
                 (C113 * C546 + C31552 * C556) * C31355) *
                    C105) *
                   C31541 * C31653) *
                  C31662) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C302 +
                (C113 * C123 + C31552 * C136) * C31696 -
                (C113 * C305 + C31552 * C315) * C303 -
                (C113 * C316 + C31552 * C335) * C31684 +
                (C113 * C306 + C31552 * C317) * C304 +
                (C113 * C318 + C31552 * C336) * C31659) *
                   C103 +
               (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
                  C31541 * C31327 * C1976 +
              (((C113 * C1004 + C31552 * C1009) * C303 -
                ((C113 * C533 + C31552 * C550) * C31696 +
                 (C113 * C520 + C31552 * C534) * C302) +
                (C113 * C1010 + C31552 * C1019) * C31684 -
                (C113 * C1406 + C31552 * C1415) * C304 -
                (C113 * C1416 + C31552 * C1433) * C31659) *
                   C103 +
               (C1043 * C303 - (C583 * C31696 + C582 * C302) + C1044 * C31684 -
                C1749 * C304 - C1750 * C31659) *
                   C104 +
               (C1045 * C303 - (C585 * C31696 + C584 * C302) + C1047 * C31684 -
                C1751 * C304 - C1752 * C31659) *
                   C105) *
                  C31541 * C31327 * C1977 +
              (((C113 * C522 + C31552 * C537) * C302 +
                (C113 * C538 + C31552 * C552) * C31696 -
                (C113 * C1409 + C31552 * C1421) * C303 -
                (C113 * C1422 + C31552 * C1436) * C31684 +
                (C113 * C1410 + C31552 * C1423) * C304 +
                (C113 * C1424 + C31552 * C1437) * C31659) *
                   C103 +
               (C588 * C302 + C589 * C31696 -
                (C113 * C1411 + C31552 * C1425) * C303 -
                (C113 * C1426 + C31552 * C1438) * C31684 +
                (C113 * C1412 + C31552 * C1427) * C304 +
                (C113 * C1428 + C31552 * C1439) * C31659) *
                   C104 +
               (C590 * C302 + C591 * C31696 -
                (C113 * C1413 + C31552 * C1429) * C303 -
                (C113 * C1430 + C31552 * C1440) * C31684 +
                (C113 * C1414 + C31552 * C1431) * C304 +
                (C113 * C1432 + C31552 * C1441) * C31659) *
                   C105) *
                  C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C113 * C115 + C31552 * C122) * C114 +
                                (C113 * C123 + C31552 * C136) * C31355) *
                                   C103 +
                               (C174 + C175) * C104 + C184 * C105) *
                                  C31541 * C31327 * C2151 -
                              (C606 * C105 + (C595 + C594) * C104 +
                               ((C113 * C533 + C31552 * C550) * C31355 +
                                (C113 * C520 + C31552 * C534) * C114) *
                                   C103) *
                                  C31541 * C31327 * C2152 +
                              (((C113 * C522 + C31552 * C537) * C114 +
                                (C113 * C538 + C31552 * C552) * C31355) *
                                   C103 +
                               (C600 + C601) * C104 + C607 * C105) *
                                  C31541 * C31327 * C2153 -
                              (((C113 * C2162 + C31552 * C2174) * C31355 +
                                (C113 * C2156 + C31552 * C2163) * C114) *
                                   C105 +
                               ((C113 * C2164 + C31552 * C2175) * C31355 +
                                (C113 * C2157 + C31552 * C2165) * C114) *
                                   C104 +
                               ((C113 * C2166 + C31552 * C2176) * C31355 +
                                (C113 * C2158 + C31552 * C2167) * C114) *
                                   C103) *
                                  C31541 * C31327 * C2154 +
                              (((C113 * C2159 + C31552 * C2168) * C114 +
                                (C113 * C2169 + C31552 * C2177) * C31355) *
                                   C103 +
                               ((C113 * C2160 + C31552 * C2170) * C114 +
                                (C113 * C2171 + C31552 * C2178) * C31355) *
                                   C104 +
                               ((C113 * C2161 + C31552 * C2172) * C114 +
                                (C113 * C2173 + C31552 * C2179) * C31355) *
                                   C105) *
                                  C31541 * C31327 * C2155)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C299 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C300 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C31697 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C300 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C299 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            ((C113 * C1409 + C31552 * C1421) * C114 +
             (C113 * C1422 + C31552 * C1436) * C31355) *
                C31311 * C5022 +
            ((C113 * C1410 + C31552 * C1423) * C114 +
             (C113 * C1424 + C31552 * C1437) * C31355) *
                C31311 * C5023) *
               C299 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C300 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            C5805 * C1175 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C31697 +
          ((C5613 * C1174 -
            ((C113 * C533 + C31552 * C550) * C1167 +
             (C113 * C520 + C31552 * C534) * C1173) +
            C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
            C5947 * C1175 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
            (C113 * C5918 + C31552 * C5921) * C1175 -
            (C113 * C5922 + C31552 * C5927) * C31659) *
               C31311 * C5023) *
              C31327 * C31686 +
          (((C113 * C522 + C31552 * C537) * C1173 +
            (C113 * C538 + C31552 * C552) * C1167 - C5949 * C1174 -
            C5950 * C1168 + C5951 * C1175 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C1173 + C5950 * C1167 - C5951 * C1174 - C5952 * C1168 +
            C5953 * C1175 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C1173 + C5952 * C1167 - C5953 * C1174 - C5954 * C1168 +
            (C113 * C5920 + C31552 * C5925) * C1175 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31693 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31680 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C1976 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31680 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31693 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C31693 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31680 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            C5805 * C304 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C1976 +
          ((C5613 * C303 -
            ((C113 * C533 + C31552 * C550) * C31696 +
             (C113 * C520 + C31552 * C534) * C302) +
            C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
            C5947 * C304 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
            C6325 * C304 - C6326 * C31659) *
               C31311 * C5023) *
              C31327 * C1977 +
          (((C113 * C522 + C31552 * C537) * C302 +
            (C113 * C538 + C31552 * C552) * C31696 - C5949 * C303 -
            C5950 * C31684 + C5951 * C304 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C302 + C5950 * C31696 - C5951 * C303 - C5952 * C31684 +
            C5953 * C304 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C302 + C5952 * C31696 - C5953 * C303 - C5954 * C31684 +
            (C113 * C5920 + C31552 * C5925) * C304 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
           (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
              C31327 * C2151 -
          ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
           (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
           ((C113 * C533 + C31552 * C550) * C31355 +
            (C113 * C520 + C31552 * C534) * C114) *
               C31311 * C5021) *
              C31327 * C2152 +
          (((C113 * C522 + C31552 * C537) * C114 +
            (C113 * C538 + C31552 * C552) * C31355) *
               C31311 * C5021 +
           (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
           (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
              C31327 * C2153 -
          (((C113 * C6611 + C31552 * C6617) * C31355 +
            (C113 * C6608 + C31552 * C6612) * C114) *
               C31311 * C5023 +
           ((C113 * C2574 + C31552 * C2579) * C31355 +
            (C113 * C2570 + C31552 * C2573) * C114) *
               C31311 * C5022 +
           ((C113 * C2166 + C31552 * C2176) * C31355 +
            (C113 * C2158 + C31552 * C2167) * C114) *
               C31311 * C5021) *
              C31327 * C2154 +
          (((C113 * C2159 + C31552 * C2168) * C114 +
            (C113 * C2169 + C31552 * C2177) * C31355) *
               C31311 * C5021 +
           ((C113 * C6609 + C31552 * C6613) * C114 +
            (C113 * C6614 + C31552 * C6618) * C31355) *
               C31311 * C5022 +
           ((C113 * C6610 + C31552 * C6615) * C114 +
            (C113 * C6616 + C31552 * C6619) * C31355) *
               C31311 * C5023) *
              C31327 * C2155)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C114 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31355) *
              C31311 * C31541 * C107 -
          ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
            C9289 * C125 + C9286 * C137) *
               C31355 +
           (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
            C9289 * C116 + C9286 * C124) *
               C114) *
              C31311 * C31541 * C108 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C114 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31355) *
              C31311 * C31541 * C109 -
          ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
            C9289 * C128 + C9286 * C139) *
               C31355 +
           (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
            C9289 * C118 + C9286 * C129) *
               C114) *
              C31311 * C31541 * C110 +
          ((C9289 * C119 + C9286 * C130 + C9290 * C521 + C9287 * C536 +
            C9291 * C526 + C9288 * C545) *
               C114 +
           (C9289 * C131 + C9286 * C140 + C9290 * C535 + C9287 * C551 +
            C9291 * C546 + C9288 * C556) *
               C31355) *
              C31311 * C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C302 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31696 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C303 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31684 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C304 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C299 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C303 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31696 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C302) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31684 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C304 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C300 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C302 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31696 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C303 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31684 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C304 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C299 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C300 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C31653) *
              C31697 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C300 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C299 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C31653) *
              C31686 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C114 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31355) *
               C31311 * C31541 * C299 -
           ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
             C9289 * C540 + C9286 * C553) *
                C31355 +
            (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
             C9289 * C523 + C9286 * C539) *
                C114) *
               C31311 * C31541 * C300 +
           ((C9289 * C524 + C9286 * C541 + C9290 * C2156 + C9287 * C2163 +
             C9291 * C2161 + C9288 * C2172) *
                C114 +
            (C9289 * C542 + C9286 * C554 + C9290 * C2162 + C9287 * C2174 +
             C9291 * C2173 + C9288 * C2179) *
                C31355) *
               C31311 * C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1173 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1167 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1174 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1168 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1175 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C31693 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C1174 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C1167 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C1173) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C1168 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C1175 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C31680 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C1173 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C1167 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C1174 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C1168 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C1175 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
           C9291 * C522 + C9288 * C537) *
              C1267 +
          (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
           C9291 * C538 + C9288 * C552) *
              C1261 -
          (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
           C9289 * C305 + C9286 * C315) *
              C1268 -
          (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
           C9289 * C316 + C9286 * C335) *
              C1262 +
          (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
           C9291 * C1410 + C9288 * C1423) *
              C1269 +
          (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
           C9291 * C1424 + C9288 * C1437) *
              C1263 -
          (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
           C9289 * C1272 + C9286 * C1278) *
              C1270 -
          (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
           C9289 * C1279 + C9286 * C1290) *
              C1264 +
          (C9289 * C1273 + C9286 * C1280 + C9290 * C5918 + C9287 * C5921 +
           C9291 * C5920 + C9288 * C5925) *
              C1271 +
          (C9289 * C1281 + C9286 * C1291 + C9290 * C5922 + C9287 * C5927 +
           C9291 * C5926 + C9288 * C5929) *
              C1265) *
         C31311 * C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C9289 * C115 + C9286 * C122 + C9290 * C520 +
                                C9287 * C534 + C9291 * C522 + C9288 * C537) *
                                   C1173 +
                               (C9289 * C123 + C9286 * C136 + C9290 * C533 +
                                C9287 * C550 + C9291 * C538 + C9288 * C552) *
                                   C1167 -
                               (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 +
                                C9287 * C1009 + C9289 * C305 + C9286 * C315) *
                                   C1174 -
                               (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 +
                                C9287 * C1019 + C9289 * C316 + C9286 * C335) *
                                   C1168 +
                               (C9289 * C306 + C9286 * C317 + C9290 * C1406 +
                                C9287 * C1415 + C9291 * C1410 + C9288 * C1423) *
                                   C1175 +
                               (C9289 * C318 + C9286 * C336 + C9290 * C1416 +
                                C9287 * C1433 + C9291 * C1424 + C9288 * C1437) *
                                   C31659) *
                                  C31311 * C31541 * C31327 * C31697 +
                              ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 +
                                C9287 * C1421 + C9291 * C2570 + C9288 * C2573) *
                                   C1174 -
                               ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 +
                                 C9287 * C552 + C9289 * C533 + C9286 * C550) *
                                    C1167 +
                                (C9291 * C2158 + C9288 * C2167 + C9290 * C522 +
                                 C9287 * C537 + C9289 * C520 + C9286 * C534) *
                                    C1173) +
                               (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 +
                                C9287 * C1436 + C9291 * C2574 + C9288 * C2579) *
                                   C1168 -
                               (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 +
                                C9287 * C1423 + C9289 * C1406 + C9286 * C1415) *
                                   C1175 -
                               (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 +
                                C9287 * C1437 + C9289 * C1416 + C9286 * C1433) *
                                   C31659) *
                                  C31311 * C31541 * C31327 * C31686 +
                              ((C9289 * C522 + C9286 * C537 + C9290 * C2158 +
                                C9287 * C2167 + C9291 * C2159 + C9288 * C2168) *
                                   C1173 +
                               (C9289 * C538 + C9286 * C552 + C9290 * C2166 +
                                C9287 * C2176 + C9291 * C2169 + C9288 * C2177) *
                                   C1167 -
                               (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 +
                                C9287 * C2573 + C9289 * C1409 + C9286 * C1421) *
                                   C1174 -
                               (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 +
                                C9287 * C2579 + C9289 * C1422 + C9286 * C1436) *
                                   C1168 +
                               (C9289 * C1410 + C9286 * C1423 + C9290 * C6608 +
                                C9287 * C6612 + C9291 * C6610 + C9288 * C6615) *
                                   C1175 +
                               (C9289 * C1424 + C9286 * C1437 + C9290 * C6611 +
                                C9287 * C6617 + C9291 * C6616 + C9288 * C6619) *
                                   C31659) *
                                  C31311 * C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C31693 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C31680 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C31653) *
              C1976 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C31680 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C31693 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C31653) *
              C1977 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C114 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31355) *
               C31311 * C31541 * C31693 -
           ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
             C9289 * C540 + C9286 * C553) *
                C31355 +
            (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
             C9289 * C523 + C9286 * C539) *
                C114) *
               C31311 * C31541 * C31680 +
           ((C9289 * C524 + C9286 * C541 + C9290 * C2156 + C9287 * C2163 +
             C9291 * C2161 + C9288 * C2172) *
                C114 +
            (C9289 * C542 + C9286 * C554 + C9290 * C2162 + C9287 * C2174 +
             C9291 * C2173 + C9288 * C2179) *
                C31355) *
               C31311 * C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C9289 * C115 + C9286 * C122 + C9290 * C520 +
                                C9287 * C534 + C9291 * C522 + C9288 * C537) *
                                   C302 +
                               (C9289 * C123 + C9286 * C136 + C9290 * C533 +
                                C9287 * C550 + C9291 * C538 + C9288 * C552) *
                                   C31696 -
                               (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 +
                                C9287 * C1009 + C9289 * C305 + C9286 * C315) *
                                   C303 -
                               (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 +
                                C9287 * C1019 + C9289 * C316 + C9286 * C335) *
                                   C31684 +
                               (C9289 * C306 + C9286 * C317 + C9290 * C1406 +
                                C9287 * C1415 + C9291 * C1410 + C9288 * C1423) *
                                   C304 +
                               (C9289 * C318 + C9286 * C336 + C9290 * C1416 +
                                C9287 * C1433 + C9291 * C1424 + C9288 * C1437) *
                                   C31659) *
                                  C31311 * C31541 * C31327 * C1976 +
                              ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 +
                                C9287 * C1421 + C9291 * C2570 + C9288 * C2573) *
                                   C303 -
                               ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 +
                                 C9287 * C552 + C9289 * C533 + C9286 * C550) *
                                    C31696 +
                                (C9291 * C2158 + C9288 * C2167 + C9290 * C522 +
                                 C9287 * C537 + C9289 * C520 + C9286 * C534) *
                                    C302) +
                               (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 +
                                C9287 * C1436 + C9291 * C2574 + C9288 * C2579) *
                                   C31684 -
                               (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 +
                                C9287 * C1423 + C9289 * C1406 + C9286 * C1415) *
                                   C304 -
                               (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 +
                                C9287 * C1437 + C9289 * C1416 + C9286 * C1433) *
                                   C31659) *
                                  C31311 * C31541 * C31327 * C1977 +
                              ((C9289 * C522 + C9286 * C537 + C9290 * C2158 +
                                C9287 * C2167 + C9291 * C2159 + C9288 * C2168) *
                                   C302 +
                               (C9289 * C538 + C9286 * C552 + C9290 * C2166 +
                                C9287 * C2176 + C9291 * C2169 + C9288 * C2177) *
                                   C31696 -
                               (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 +
                                C9287 * C2573 + C9289 * C1409 + C9286 * C1421) *
                                   C303 -
                               (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 +
                                C9287 * C2579 + C9289 * C1422 + C9286 * C1436) *
                                   C31684 +
                               (C9289 * C1410 + C9286 * C1423 + C9290 * C6608 +
                                C9287 * C6612 + C9291 * C6610 + C9288 * C6615) *
                                   C304 +
                               (C9289 * C1424 + C9286 * C1437 + C9290 * C6611 +
                                C9287 * C6617 + C9291 * C6616 + C9288 * C6619) *
                                   C31659) *
                                  C31311 * C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C114 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31355) *
              C31311 * C31541 * C31327 * C2151 -
          ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
            C9289 * C533 + C9286 * C550) *
               C31355 +
           (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
            C9289 * C520 + C9286 * C534) *
               C114) *
              C31311 * C31541 * C31327 * C2152 +
          ((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
            C9291 * C2159 + C9288 * C2168) *
               C114 +
           (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
            C9291 * C2169 + C9288 * C2177) *
               C31355) *
              C31311 * C31541 * C31327 * C2153 -
          ((C9291 * C10762 + C9288 * C10766 + C9290 * C2169 + C9287 * C2177 +
            C9289 * C2166 + C9286 * C2176) *
               C31355 +
           (C9291 * C10760 + C9288 * C10763 + C9290 * C2159 + C9287 * C2168 +
            C9289 * C2158 + C9286 * C2167) *
               C114) *
              C31311 * C31541 * C31327 * C2154 +
          ((C9289 * C2159 + C9286 * C2168 + C9290 * C10760 + C9287 * C10763 +
            C9291 * C10761 + C9288 * C10764) *
               C114 +
           (C9289 * C2169 + C9286 * C2177 + C9290 * C10762 + C9287 * C10766 +
            C9291 * C10765 + C9288 * C10767) *
               C31355) *
              C31311 * C31541 * C31327 * C2155)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C114 +
                 (C113 * C123 + C31552 * C136) * C31355) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31541 * C707 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31541 * C708 +
               (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                   C709 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C31541 * C31663) *
                  C31631 +
              (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
                   C31541 * C708 -
               (C606 * C105 + (C595 + C594) * C104 +
                ((C113 * C533 + C31552 * C550) * C31355 +
                 (C113 * C520 + C31552 * C534) * C114) *
                    C103) *
                   C31541 * C707 -
               ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
                   C31541 * C709 +
               (C850 * C103 + (C858 + C857) * C104 +
                ((C113 * C845 + C31552 * C846) * C114 +
                 (C113 * C847 + C31552 * C848) * C31355) *
                    C105) *
                   C31541 * C31663) *
                  C31460) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C1173 +
                 (C113 * C123 + C31552 * C136) * C1167 -
                 (C113 * C305 + C31552 * C315) * C1174 -
                 (C113 * C316 + C31552 * C335) * C1168 +
                 (C113 * C306 + C31552 * C317) * C1175 +
                 (C113 * C318 + C31552 * C336) * C31659) *
                    C103 +
                (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
                C1199 * C105) *
                   C31541 * C31616 +
               ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
                (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
                (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
                   C31541 * C31337) *
                  C31631 +
              ((((C113 * C1004 + C31552 * C1009) * C1174 -
                 ((C113 * C533 + C31552 * C550) * C1167 +
                  (C113 * C520 + C31552 * C534) * C1173) +
                 (C113 * C1010 + C31552 * C1019) * C1168 -
                 (C113 * C1406 + C31552 * C1415) * C1175 -
                 (C113 * C1416 + C31552 * C1433) * C31659) *
                    C103 +
                (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C104 +
                (C1741 - (C1742 + C1743) + C1744 - C1755 - C1756) * C105) *
                   C31541 * C31616 +
               ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C103 +
                (C1743 + C1742 - C1741 - C1744 + C1755 + C1756) * C104 +
                (C586 * C1173 + C587 * C1167 - C1048 * C1174 - C1049 * C1168 +
                 (C113 * C1728 + C31552 * C1729) * C1175 +
                 (C113 * C1730 + C31552 * C1731) * C31659) *
                    C105) *
                   C31541 * C31337) *
                  C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31616 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31337) *
              C2448 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31337 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31616) *
              C2449 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C31616 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31337) *
              C2450 +
          (((C2469 + C2470) * C103 + (C2471 + C2472) * C104 +
            ((C113 * C2452 + C31552 * C2453) * C114 +
             (C113 * C2454 + C31552 * C2455) * C31355) *
                C105) *
               C31541 * C31337 -
           ((C2472 + C2471) * C105 + (C2470 + C2469) * C104 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C103) *
               C31541 * C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C707 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C708 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C709 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C31631 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C708 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C707 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C709 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
             C5805 * C1175 + C5806 * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
            (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
             C1575 * C1175 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
             C6061 * C1175 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C31631 +
          (((C5613 * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
             C5947 * C1175 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
             (C113 * C5918 + C31552 * C5921) * C1175 -
             (C113 * C5922 + C31552 * C5927) * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C31311 * C5021 +
            (C1043 * C1173 + C1044 * C1167 - C1749 * C1174 - C1750 * C1168 +
             C6217 * C1175 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C1173 + C1750 * C1167 - C6217 * C1174 - C6218 * C1168 +
             (C113 * C6208 + C31552 * C6209) * C1175 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31616 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31337) *
              C2448 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31337 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31616) *
              C2449 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C31616 -
           ((C6776 * C31355 + C6775 * C114) * C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31337) *
              C2450 +
          (((C2469 + C2470) * C31311 * C5021 +
            ((C113 * C2571 + C31552 * C2575) * C114 +
             (C113 * C2576 + C31552 * C2580) * C31355) *
                C31311 * C5022 +
            ((C113 * C6874 + C31552 * C6875) * C114 +
             (C113 * C6876 + C31552 * C6877) * C31355) *
                C31311 * C5023) *
               C31337 -
           (((C113 * C6611 + C31552 * C6617) * C31355 +
             (C113 * C6608 + C31552 * C6612) * C114) *
                C31311 * C5023 +
            ((C113 * C2574 + C31552 * C2579) * C31355 +
             (C113 * C2570 + C31552 * C2573) * C114) *
                C31311 * C5022 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C31311 * C5021) *
               C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C707 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C708 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C709 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C31355 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C114) *
               C31311 * C31541 * C31663) *
              C31631 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C708 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C707 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C709 +
           ((C9289 * C519 + C9286 * C531 + C9290 * C525 + C9287 * C544 +
             C9291 * C2452 + C9288 * C2453) *
                C114 +
            (C9289 * C532 + C9286 * C549 + C9290 * C543 + C9287 * C555 +
             C9291 * C2454 + C9288 * C2455) *
                C31355) *
               C31311 * C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C1173 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C1167 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C1174 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C1168 +
            (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
             C9291 * C1410 + C9288 * C1423) *
                C1175 +
            (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
             C9291 * C1424 + C9288 * C1437) *
                C31659) *
               C31311 * C31541 * C31616 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C1174 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C1167 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C1173) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C1168 -
            (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
             C9289 * C308 + C9286 * C321) *
                C1175 -
            (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
             C9289 * C322 + C9286 * C338) *
                C31659) *
               C31311 * C31541 * C31337) *
              C31631 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C1174 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C1167 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C1173) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C1168 -
            (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
             C9289 * C1406 + C9286 * C1415) *
                C1175 -
            (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
             C9289 * C1416 + C9286 * C1433) *
                C31659) *
               C31311 * C31541 * C31616 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C1173 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C1167 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C1174 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C1168 +
            (C9289 * C1407 + C9286 * C1417 + C9290 * C1412 + C9287 * C1427 +
             C9291 * C6874 + C9288 * C6875) *
                C1175 +
            (C9289 * C1418 + C9286 * C1434 + C9290 * C1428 + C9287 * C1439 +
             C9291 * C6876 + C9288 * C6877) *
                C31659) *
               C31311 * C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C31616 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C31337) *
              C2448 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C31337 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C31616) *
              C2449 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C114 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31355) *
               C31311 * C31541 * C31616 -
           ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
             C9289 * C540 + C9286 * C553) *
                C31355 +
            (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
             C9289 * C523 + C9286 * C539) *
                C114) *
               C31311 * C31541 * C31337) *
              C2450 +
          (((C9289 * C2157 + C9286 * C2165 + C9290 * C2160 + C9287 * C2170 +
             C9291 * C11016 + C9288 * C11017) *
                C114 +
            (C9289 * C2164 + C9286 * C2175 + C9290 * C2171 + C9287 * C2178 +
             C9291 * C11018 + C9288 * C11019) *
                C31355) *
               C31311 * C31541 * C31337 -
           ((C9291 * C10762 + C9288 * C10766 + C9290 * C2169 + C9287 * C2177 +
             C9289 * C2166 + C9286 * C2176) *
                C31355 +
            (C9291 * C10760 + C9288 * C10763 + C9290 * C2159 + C9287 * C2168 +
             C9289 * C2158 + C9286 * C2167) *
                C114) *
               C31311 * C31541 * C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31541 * C107 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31541 *
              C108 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C109 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31541 *
              C110 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31552 * C134) * C114 +
            (C113 * C135 + C31552 * C142) * C31355) *
               C105) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
           (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
           (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
              C31541 * C300 +
          (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
           (C170 * C302 + C171 * C31696 - (C113 * C313 + C31552 * C331) * C303 -
            (C113 * C332 + C31552 * C343) * C31684 +
            (C113 * C314 + C31552 * C333) * C304 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
           (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
           (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
              C31541 * C31680 +
          (C1199 * C103 +
           (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
           (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
            (C113 * C314 + C31552 * C333) * C1175 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 -
           (C113 * C305 + C31552 * C315) * C1268 -
           (C113 * C316 + C31552 * C335) * C1262 +
           (C113 * C306 + C31552 * C317) * C1269 +
           (C113 * C318 + C31552 * C336) * C1263 -
           (C113 * C1272 + C31552 * C1278) * C1270 -
           (C113 * C1279 + C31552 * C1290) * C1264 +
           (C113 * C1273 + C31552 * C1280) * C1271 +
           (C113 * C1281 + C31552 * C1291) * C1265) *
              C103 +
          (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
           C378 * C1269 + C379 * C1263 -
           (C113 * C1274 + C31552 * C1282) * C1270 -
           (C113 * C1283 + C31552 * C1292) * C1264 +
           (C113 * C1275 + C31552 * C1284) * C1271 +
           (C113 * C1285 + C31552 * C1293) * C1265) *
              C104 +
          (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
           C383 * C1269 + C384 * C1263 -
           (C113 * C1276 + C31552 * C1286) * C1270 -
           (C113 * C1287 + C31552 * C1294) * C1264 +
           (C113 * C1277 + C31552 * C1288) * C1271 +
           (C113 * C1289 + C31552 * C1295) * C1265) *
              C105) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31693 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31680 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31653) *
              C1976 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31680 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31693 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31653) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C31693 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31680 +
           (C607 * C103 + (C605 + C604) * C104 +
            ((C113 * C526 + C31552 * C545) * C114 +
             (C113 * C546 + C31552 * C556) * C31355) *
                C105) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C31327 * C1976 +
          (((C113 * C1004 + C31552 * C1009) * C303 -
            ((C113 * C533 + C31552 * C550) * C31696 +
             (C113 * C520 + C31552 * C534) * C302) +
            (C113 * C1010 + C31552 * C1019) * C31684 -
            (C113 * C1406 + C31552 * C1415) * C304 -
            (C113 * C1416 + C31552 * C1433) * C31659) *
               C103 +
           (C1043 * C303 - (C583 * C31696 + C582 * C302) + C1044 * C31684 -
            C1749 * C304 - C1750 * C31659) *
               C104 +
           (C1045 * C303 - (C585 * C31696 + C584 * C302) + C1047 * C31684 -
            C1751 * C304 - C1752 * C31659) *
               C105) *
              C31541 * C31327 * C1977 +
          (((C113 * C522 + C31552 * C537) * C302 +
            (C113 * C538 + C31552 * C552) * C31696 -
            (C113 * C1409 + C31552 * C1421) * C303 -
            (C113 * C1422 + C31552 * C1436) * C31684 +
            (C113 * C1410 + C31552 * C1423) * C304 +
            (C113 * C1424 + C31552 * C1437) * C31659) *
               C103 +
           (C588 * C302 + C589 * C31696 -
            (C113 * C1411 + C31552 * C1425) * C303 -
            (C113 * C1426 + C31552 * C1438) * C31684 +
            (C113 * C1412 + C31552 * C1427) * C304 +
            (C113 * C1428 + C31552 * C1439) * C31659) *
               C104 +
           (C590 * C302 + C591 * C31696 -
            (C113 * C1413 + C31552 * C1429) * C303 -
            (C113 * C1430 + C31552 * C1440) * C31684 +
            (C113 * C1414 + C31552 * C1431) * C304 +
            (C113 * C1432 + C31552 * C1441) * C31659) *
               C105) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31693 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31680 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C1976 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31680 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31693 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C31693 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31680 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            C5805 * C304 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C1976 +
          ((C5613 * C303 -
            ((C113 * C533 + C31552 * C550) * C31696 +
             (C113 * C520 + C31552 * C534) * C302) +
            C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
            C5947 * C304 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
            C6325 * C304 - C6326 * C31659) *
               C31311 * C5023) *
              C31327 * C1977 +
          (((C113 * C522 + C31552 * C537) * C302 +
            (C113 * C538 + C31552 * C552) * C31696 - C5949 * C303 -
            C5950 * C31684 + C5951 * C304 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C302 + C5950 * C31696 - C5951 * C303 - C5952 * C31684 +
            C5953 * C304 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C302 + C5952 * C31696 - C5953 * C303 - C5954 * C31684 +
            (C113 * C5920 + C31552 * C5925) * C304 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C114 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31355) *
              C31311 * C31541 * C107 -
          ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
            C9289 * C125 + C9286 * C137) *
               C31355 +
           (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
            C9289 * C116 + C9286 * C124) *
               C114) *
              C31311 * C31541 * C108 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C114 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31355) *
              C31311 * C31541 * C109 -
          ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
            C9289 * C128 + C9286 * C139) *
               C31355 +
           (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
            C9289 * C118 + C9286 * C129) *
               C114) *
              C31311 * C31541 * C110 +
          ((C9289 * C119 + C9286 * C130 + C9290 * C521 + C9287 * C536 +
            C9291 * C526 + C9288 * C545) *
               C114 +
           (C9289 * C131 + C9286 * C140 + C9290 * C535 + C9287 * C551 +
            C9291 * C546 + C9288 * C556) *
               C31355) *
              C31311 * C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C302 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31696 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C303 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31684 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C304 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C299 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C303 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31696 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C302) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31684 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C304 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C300 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C302 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31696 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C303 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31684 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C304 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1173 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1167 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1174 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1168 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1175 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C31693 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C1174 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C1167 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C1173) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C1168 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C1175 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C31680 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C1173 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C1167 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C1174 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C1168 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C1175 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
           C9291 * C522 + C9288 * C537) *
              C1267 +
          (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
           C9291 * C538 + C9288 * C552) *
              C1261 -
          (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
           C9289 * C305 + C9286 * C315) *
              C1268 -
          (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
           C9289 * C316 + C9286 * C335) *
              C1262 +
          (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
           C9291 * C1410 + C9288 * C1423) *
              C1269 +
          (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
           C9291 * C1424 + C9288 * C1437) *
              C1263 -
          (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
           C9289 * C1272 + C9286 * C1278) *
              C1270 -
          (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
           C9289 * C1279 + C9286 * C1290) *
              C1264 +
          (C9289 * C1273 + C9286 * C1280 + C9290 * C5918 + C9287 * C5921 +
           C9291 * C5920 + C9288 * C5925) *
              C1271 +
          (C9289 * C1281 + C9286 * C1291 + C9290 * C5922 + C9287 * C5927 +
           C9291 * C5926 + C9288 * C5929) *
              C1265) *
         C31311 * C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C31693 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C31680 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C31653) *
              C1976 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C31680 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C31693 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C31653) *
              C1977 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C114 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31355) *
               C31311 * C31541 * C31693 -
           ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
             C9289 * C540 + C9286 * C553) *
                C31355 +
            (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
             C9289 * C523 + C9286 * C539) *
                C114) *
               C31311 * C31541 * C31680 +
           ((C9289 * C524 + C9286 * C541 + C9290 * C2156 + C9287 * C2163 +
             C9291 * C2161 + C9288 * C2172) *
                C114 +
            (C9289 * C542 + C9286 * C554 + C9290 * C2162 + C9287 * C2174 +
             C9291 * C2173 + C9288 * C2179) *
                C31355) *
               C31311 * C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C302 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31696 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C303 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31684 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C304 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C31327 * C1976 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C303 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31696 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C302) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C31684 -
           (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
            C9289 * C1406 + C9286 * C1415) *
               C304 -
           (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
            C9289 * C1416 + C9286 * C1433) *
               C31659) *
              C31311 * C31541 * C31327 * C1977 +
          ((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
            C9291 * C2159 + C9288 * C2168) *
               C302 +
           (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
            C9291 * C2169 + C9288 * C2177) *
               C31696 -
           (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
            C9289 * C1409 + C9286 * C1421) *
               C303 -
           (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
            C9289 * C1422 + C9286 * C1436) *
               C31684 +
           (C9289 * C1410 + C9286 * C1423 + C9290 * C6608 + C9287 * C6612 +
            C9291 * C6610 + C9288 * C6615) *
               C304 +
           (C9289 * C1424 + C9286 * C1437 + C9290 * C6611 + C9287 * C6617 +
            C9291 * C6616 + C9288 * C6619) *
               C31659) *
              C31311 * C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C744 * C31311 * C5021 +
            (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
                C31311 * C5023) *
               C3111) *
              C3547 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 - C6217 * C712 - C6218 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C1057 * C31311 * C5021 +
            (C1751 * C712 - (C1047 * C31630 + C1045 * C711) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C712 -
             (C1752 * C31630 + C1751 * C711) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C31332 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C31340 +
           (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
            (C730 + C731 - C742 - C743) * C105) *
               C31541 * C3111) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C31332 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C31340 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C712 -
             (C855 * C31630 + C856 * C711) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C711 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31630 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C712 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C31332 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C712 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31630 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C711) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31340 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C711 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31630 -
            (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
             C9289 * C309 + C9286 * C323) *
                C712 -
            (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
             C9289 * C324 + C9286 * C339) *
                C31418) *
               C31311 * C31541 * C3111) *
              C3547 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C712 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31630 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C711) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C31332 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C711 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31630 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C712 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31340 +
           ((C9289 * C1006 + C9286 * C1013 + C9290 * C1413 + C9287 * C1429 +
             C9291 * C2572 + C9288 * C2577) *
                C712 -
            ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
              C9289 * C530 + C9286 * C548) *
                 C31630 +
             (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
              C9289 * C518 + C9286 * C529) *
                 C711) +
            (C9289 * C1014 + C9286 * C1021 + C9290 * C1430 + C9287 * C1440 +
             C9291 * C2578 + C9288 * C2581) *
                C31418) *
               C31311 * C31541 * C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31456 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 - C6217 * C712 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C711 + C5952 * C31630 - C5953 * C712 - C5954 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2347 - (C2332 + C2331) + C2348) * C31311 * C5021 +
            (C6775 * C712 - (C2344 * C31630 + C2343 * C711) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C712 -
             (C6776 * C31630 + C6775 * C711) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C2812 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C31337) *
              C31456 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C2812 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 -
             (C113 * C1409 + C31552 * C1421) * C712 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2331 + C2332 - C2347 - C2348) * C104 +
            (C2337 + C2338 - C2349 - C2350) * C105) *
               C31541 * C2812 +
           ((C2347 - (C2332 + C2331) + C2348) * C103 +
            (C2349 - (C2338 + C2337) + C2350) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C712 -
             (C592 * C31630 + C593 * C711) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C711 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31630 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C712 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C2812 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C712 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31630 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C711) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31456 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C712 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31630 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C711) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C2812 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C711 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31630 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C712 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C31337) *
              C31463 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C711 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31630 -
            (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
             C9289 * C1409 + C9286 * C1421) *
                C712 -
            (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
             C9289 * C1422 + C9286 * C1436) *
                C31418) *
               C31311 * C31541 * C2812 +
           ((C9289 * C1411 + C9286 * C1425 + C9290 * C2571 + C9287 * C2575 +
             C9291 * C10914 + C9288 * C10915) *
                C712 -
            ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
              C9289 * C540 + C9286 * C553) *
                 C31630 +
             (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
              C9289 * C523 + C9286 * C539) *
                 C711) +
            (C9289 * C1426 + C9286 * C1438 + C9290 * C2576 + C9287 * C2580 +
             C9291 * C10916 + C9288 * C10917) *
                C31418) *
               C31311 * C31541 * C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C114 +
                 (C113 * C123 + C31552 * C136) * C31355) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31541 * C31702 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31541 * C31695 +
               (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                   C31682 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C31541 * C31663) *
                  C3547 +
              (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
                   C31541 * C31695 -
               (C606 * C105 + (C595 + C594) * C104 +
                ((C113 * C533 + C31552 * C550) * C31355 +
                 (C113 * C520 + C31552 * C534) * C114) *
                    C103) *
                   C31541 * C31702 -
               ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
                   C31541 * C31682 +
               (C850 * C103 + (C858 + C857) * C104 +
                ((C113 * C845 + C31552 * C846) * C114 +
                 (C113 * C847 + C31552 * C848) * C31355) *
                    C105) *
                   C31541 * C31663) *
                  C31460) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31552 * C122) * C302 +
                 (C113 * C123 + C31552 * C136) * C31696 -
                 (C113 * C305 + C31552 * C315) * C303 -
                 (C113 * C316 + C31552 * C335) * C31684 +
                 (C113 * C306 + C31552 * C317) * C304 +
                 (C113 * C318 + C31552 * C336) * C31659) *
                    C103 +
                (C346 + C347 - C389 - C390 + C391 + C392) * C104 +
                C404 * C105) *
                   C31541 * C2812 +
               ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
                (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
                (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
                   C31541 * C31337) *
                  C3547 +
              ((((C113 * C1004 + C31552 * C1009) * C303 -
                 ((C113 * C533 + C31552 * C550) * C31696 +
                  (C113 * C520 + C31552 * C534) * C302) +
                 (C113 * C1010 + C31552 * C1019) * C31684 -
                 (C113 * C1406 + C31552 * C1415) * C304 -
                 (C113 * C1416 + C31552 * C1433) * C31659) *
                    C103 +
                (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C104 +
                (C3702 - (C3703 + C3704) + C3705 - C3706 - C3707) * C105) *
                   C31541 * C2812 +
               ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C103 +
                (C3704 + C3703 - C3702 - C3705 + C3706 + C3707) * C104 +
                (C586 * C302 + C587 * C31696 - C1048 * C303 - C1049 * C31684 +
                 (C113 * C1728 + C31552 * C1729) * C304 +
                 (C113 * C1730 + C31552 * C1731) * C31659) *
                    C105) *
                   C31541 * C31337) *
                  C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C2812 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31337) *
              C31704 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31337 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C2812) *
              C31701 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C2812 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31337) *
              C31692 +
          (((C2469 + C2470) * C103 + (C2471 + C2472) * C104 +
            ((C113 * C2452 + C31552 * C2453) * C114 +
             (C113 * C2454 + C31552 * C2455) * C31355) *
                C105) *
               C31541 * C31337 -
           ((C2472 + C2471) * C105 + (C2470 + C2469) * C104 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C103) *
               C31541 * C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31702 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31695 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31682 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C3547 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31695 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31702 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31682 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
             C5805 * C304 + C5806 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
            (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
             C1575 * C304 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
             C6061 * C304 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C3547 +
          (((C5613 * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
             C5947 * C304 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
             C6325 * C304 - C6326 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C31311 * C5021 +
            (C1043 * C302 + C1044 * C31696 - C1749 * C303 - C1750 * C31684 +
             C6217 * C304 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C302 + C1750 * C31696 - C6217 * C303 - C6218 * C31684 +
             (C113 * C6208 + C31552 * C6209) * C304 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C2812 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31337) *
              C31704 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31337 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C2812) *
              C31701 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C2812 -
           ((C6776 * C31355 + C6775 * C114) * C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31337) *
              C31692 +
          (((C2469 + C2470) * C31311 * C5021 +
            ((C113 * C2571 + C31552 * C2575) * C114 +
             (C113 * C2576 + C31552 * C2580) * C31355) *
                C31311 * C5022 +
            ((C113 * C6874 + C31552 * C6875) * C114 +
             (C113 * C6876 + C31552 * C6877) * C31355) *
                C31311 * C5023) *
               C31337 -
           ((C6992 * C31355 + C6991 * C114) * C31311 * C5023 +
            (C6990 * C31355 + C6989 * C114) * C31311 * C5022 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C31311 * C5021) *
               C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C31702 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C31695 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C31682 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C31355 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C114) *
               C31311 * C31541 * C31663) *
              C3547 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C31695 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C31702 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C31682 +
           ((C9289 * C519 + C9286 * C531 + C9290 * C525 + C9287 * C544 +
             C9291 * C2452 + C9288 * C2453) *
                C114 +
            (C9289 * C532 + C9286 * C549 + C9290 * C543 + C9287 * C555 +
             C9291 * C2454 + C9288 * C2455) *
                C31355) *
               C31311 * C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C302 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31696 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C303 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31684 +
            (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
             C9291 * C1410 + C9288 * C1423) *
                C304 +
            (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
             C9291 * C1424 + C9288 * C1437) *
                C31659) *
               C31311 * C31541 * C2812 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C303 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31696 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C302) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31684 -
            (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
             C9289 * C308 + C9286 * C321) *
                C304 -
            (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
             C9289 * C322 + C9286 * C338) *
                C31659) *
               C31311 * C31541 * C31337) *
              C3547 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C303 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31696 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C302) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31684 -
            (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
             C9289 * C1406 + C9286 * C1415) *
                C304 -
            (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
             C9289 * C1416 + C9286 * C1433) *
                C31659) *
               C31311 * C31541 * C2812 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C302 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31696 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C303 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31684 +
            (C9289 * C1407 + C9286 * C1417 + C9290 * C1412 + C9287 * C1427 +
             C9291 * C6874 + C9288 * C6875) *
                C304 +
            (C9289 * C1418 + C9286 * C1434 + C9290 * C1428 + C9287 * C1439 +
             C9291 * C6876 + C9288 * C6877) *
                C31659) *
               C31311 * C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C2812 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C31337) *
              C31704 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C31337 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C2812) *
              C31701 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C114 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31355) *
               C31311 * C31541 * C2812 -
           ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
             C9289 * C540 + C9286 * C553) *
                C31355 +
            (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
             C9289 * C523 + C9286 * C539) *
                C114) *
               C31311 * C31541 * C31337) *
              C31692 +
          (((C9289 * C2157 + C9286 * C2165 + C9290 * C2160 + C9287 * C2170 +
             C9291 * C11016 + C9288 * C11017) *
                C114 +
            (C9289 * C2164 + C9286 * C2175 + C9290 * C2171 + C9287 * C2178 +
             C9291 * C11018 + C9288 * C11019) *
                C31355) *
               C31311 * C31541 * C31337 -
           ((C9291 * C10762 + C9288 * C10766 + C9290 * C2169 + C9287 * C2177 +
             C9289 * C2166 + C9286 * C2176) *
                C31355 +
            (C9291 * C10760 + C9288 * C10763 + C9290 * C2159 + C9287 * C2168 +
             C9289 * C2158 + C9286 * C2167) *
                C114) *
               C31311 * C31541 * C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31552 * C122) * C114 +
                     (C113 * C123 + C31552 * C136) * C31355) *
                        C31311 * C5021 +
                    (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
                    (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
                       C31332 -
                   ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
                    (C377 * C31355 + C376 * C114) * C31311 * C5022 +
                    (C175 + C174) * C31311 * C5021) *
                       C31340 +
                   (C184 * C31311 * C5021 +
                    (C381 * C114 + C382 * C31355) * C31311 * C5022 +
                    (C383 * C114 + C384 * C31355) * C31311 * C5023) *
                       C3111) *
                      C31456 +
                  (((C594 + C595) * C31311 * C5021 +
                    (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
                    (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
                       C31340 -
                   ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
                    (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
                    ((C113 * C533 + C31552 * C550) * C31355 +
                     (C113 * C520 + C31552 * C534) * C114) *
                        C31311 * C5021) *
                       C31332 -
                   ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
                    (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
                    C606 * C31311 * C5021) *
                       C3111) *
                      C31463 +
                  ((((C113 * C522 + C31552 * C537) * C114 +
                     (C113 * C538 + C31552 * C552) * C31355) *
                        C31311 * C5021 +
                    (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
                    (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
                       C31332 -
                   ((C6776 * C31355 + C6775 * C114) * C31311 * C5023 +
                    (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
                    (C601 + C600) * C31311 * C5021) *
                       C31340 +
                   (C607 * C31311 * C5021 +
                    (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
                    ((C113 * C1414 + C31552 * C1431) * C114 +
                     (C113 * C1432 + C31552 * C1441) * C31355) *
                        C31311 * C5023) *
                       C3111) *
                      C4067)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31552 * C122) * C114 +
                     (C113 * C123 + C31552 * C136) * C31355) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C31541 * C31332 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C31541 * C31340 +
                   (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                       C3111) *
                      C31456 +
                  (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
                       C31541 * C31340 -
                   (C606 * C105 + (C595 + C594) * C104 +
                    ((C113 * C533 + C31552 * C550) * C31355 +
                     (C113 * C520 + C31552 * C534) * C114) *
                        C103) *
                       C31541 * C31332 -
                   ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
                       C31541 * C3111) *
                      C31463 +
                  ((((C113 * C522 + C31552 * C537) * C114 +
                     (C113 * C538 + C31552 * C552) * C31355) *
                        C103 +
                    (C600 + C601) * C104 + C607 * C105) *
                       C31541 * C31332 -
                   ((C604 + C605) * C105 + (C603 + C602) * C104 +
                    (C601 + C600) * C103) *
                       C31541 * C31340 +
                   (C607 * C103 + (C605 + C604) * C104 +
                    ((C113 * C526 + C31552 * C545) * C114 +
                     (C113 * C546 + C31552 * C556) * C31355) *
                        C105) *
                       C31541 * C3111) *
                      C4067)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
                     C9291 * C522 + C9288 * C537) *
                        C114 +
                    (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
                     C9291 * C538 + C9288 * C552) *
                        C31355) *
                       C31311 * C31541 * C31332 -
                   ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
                     C9289 * C125 + C9286 * C137) *
                        C31355 +
                    (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
                     C9289 * C116 + C9286 * C124) *
                        C114) *
                       C31311 * C31541 * C31340 +
                   ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
                     C9291 * C524 + C9288 * C541) *
                        C114 +
                    (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
                     C9291 * C542 + C9288 * C554) *
                        C31355) *
                       C31311 * C31541 * C3111) *
                      C31456 +
                  (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
                     C9291 * C2157 + C9288 * C2165) *
                        C114 +
                    (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
                     C9291 * C2164 + C9288 * C2175) *
                        C31355) *
                       C31311 * C31541 * C31340 -
                   ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 +
                     C9287 * C552 + C9289 * C533 + C9286 * C550) *
                        C31355 +
                    (C9291 * C2158 + C9288 * C2167 + C9290 * C522 +
                     C9287 * C537 + C9289 * C520 + C9286 * C534) *
                        C114) *
                       C31311 * C31541 * C31332 -
                   ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 +
                     C9287 * C554 + C9289 * C530 + C9286 * C548) *
                        C31355 +
                    (C9291 * C2156 + C9288 * C2163 + C9290 * C524 +
                     C9287 * C541 + C9289 * C518 + C9286 * C529) *
                        C114) *
                       C31311 * C31541 * C3111) *
                      C31463 +
                  (((C9289 * C522 + C9286 * C537 + C9290 * C2158 +
                     C9287 * C2167 + C9291 * C2159 + C9288 * C2168) *
                        C114 +
                    (C9289 * C538 + C9286 * C552 + C9290 * C2166 +
                     C9287 * C2176 + C9291 * C2169 + C9288 * C2177) *
                        C31355) *
                       C31311 * C31541 * C31332 -
                   ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 +
                     C9287 * C2175 + C9289 * C540 + C9286 * C553) *
                        C31355 +
                    (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 +
                     C9287 * C2165 + C9289 * C523 + C9286 * C539) *
                        C114) *
                       C31311 * C31541 * C31340 +
                   ((C9289 * C524 + C9286 * C541 + C9290 * C2156 +
                     C9287 * C2163 + C9291 * C2161 + C9288 * C2172) *
                        C114 +
                    (C9289 * C542 + C9286 * C554 + C9290 * C2162 +
                     C9287 * C2174 + C9291 * C2173 + C9288 * C2179) *
                        C31355) *
                       C31311 * C31541 * C3111) *
                      C4067)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 -
             (C113 * C305 + C31552 * C315) * C303 -
             (C113 * C316 + C31552 * C335) * C31684 +
             (C113 * C306 + C31552 * C317) * C304 +
             (C113 * C318 + C31552 * C336) * C31659) *
                C103 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
               C31541 * C2812 +
           ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
            (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
            (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
               C31541 * C31337) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             (C113 * C1010 + C31552 * C1019) * C31684 -
             (C113 * C1406 + C31552 * C1415) * C304 -
             (C113 * C1416 + C31552 * C1433) * C31659) *
                C103 +
            (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C104 +
            (C3702 - (C3703 + C3704) + C3705 - C3706 - C3707) * C105) *
               C31541 * C2812 +
           ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C103 +
            (C3704 + C3703 - C3702 - C3705 + C3706 + C3707) * C104 +
            (C586 * C302 + C587 * C31696 - C1048 * C303 - C1049 * C31684 +
             (C113 * C1728 + C31552 * C1729) * C304 +
             (C113 * C1730 + C31552 * C1731) * C31659) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31702 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31695 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31682 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31541 * C31663) *
              C3547 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31695 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31702 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31682 +
           (C850 * C103 + (C858 + C857) * C104 +
            ((C113 * C845 + C31552 * C846) * C114 +
             (C113 * C847 + C31552 * C848) * C31355) *
                C105) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31702 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31695 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31682 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C3547 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31695 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31702 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31682 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
             C5805 * C304 + C5806 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
            (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
             C1575 * C304 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
             C6061 * C304 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C3547 +
          (((C5613 * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
             C5947 * C304 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
             C6325 * C304 - C6326 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C31311 * C5021 +
            (C1043 * C302 + C1044 * C31696 - C1749 * C303 - C1750 * C31684 +
             C6217 * C304 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C302 + C1750 * C31696 - C6217 * C303 - C6218 * C31684 +
             (C113 * C6208 + C31552 * C6209) * C304 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C31702 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C31695 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C31682 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C31355 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C114) *
               C31311 * C31541 * C31663) *
              C3547 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C31695 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C31702 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C31682 +
           ((C9289 * C519 + C9286 * C531 + C9290 * C525 + C9287 * C544 +
             C9291 * C2452 + C9288 * C2453) *
                C114 +
            (C9289 * C532 + C9286 * C549 + C9290 * C543 + C9287 * C555 +
             C9291 * C2454 + C9288 * C2455) *
                C31355) *
               C31311 * C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C302 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31696 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C303 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31684 +
            (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
             C9291 * C1410 + C9288 * C1423) *
                C304 +
            (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
             C9291 * C1424 + C9288 * C1437) *
                C31659) *
               C31311 * C31541 * C2812 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C303 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31696 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C302) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31684 -
            (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
             C9289 * C308 + C9286 * C321) *
                C304 -
            (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
             C9289 * C322 + C9286 * C338) *
                C31659) *
               C31311 * C31541 * C31337) *
              C3547 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C303 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31696 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C302) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31684 -
            (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
             C9289 * C1406 + C9286 * C1415) *
                C304 -
            (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
             C9289 * C1416 + C9286 * C1433) *
                C31659) *
               C31311 * C31541 * C2812 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C302 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31696 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C303 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31684 +
            (C9289 * C1407 + C9286 * C1417 + C9290 * C1412 + C9287 * C1427 +
             C9291 * C6874 + C9288 * C6875) *
                C304 +
            (C9289 * C1418 + C9286 * C1434 + C9290 * C1428 + C9287 * C1439 +
             C9291 * C6876 + C9288 * C6877) *
                C31659) *
               C31311 * C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 -
            (C113 * C305 + C31552 * C315) * C1547 -
            (C113 * C316 + C31552 * C335) * C1541 +
            (C113 * C306 + C31552 * C317) * C1548 +
            (C113 * C318 + C31552 * C336) * C1542 -
            (C113 * C1272 + C31552 * C1278) * C1549 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
               C104 +
           (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
               C105) *
              C31541 * C31616 +
          ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
               C103 +
           (C1567 - (C1566 + C1565) + C1568 - C1569 - C1570 + C1581 + C1582) *
               C104 +
           (C385 * C1547 - (C168 * C1540 + C169 * C1546) + C386 * C1541 -
            C387 * C1548 - C388 * C1542 +
            (C113 * C1550 + C31552 * C1551) * C1549 +
            (C113 * C1552 + C31552 * C1553) * C31669) *
               C105) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 -
            (C113 * C305 + C31552 * C315) * C712 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
              C31541 * C707 +
          ((C720 - (C719 + C718) + C721) * C103 +
           (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
              C31541 * C708 +
          (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
           (C730 + C731 - C742 - C743) * C105) *
              C31541 * C709 +
          (C745 * C103 + (C742 - (C731 + C730) + C743) * C104 +
           ((C113 * C713 + C31552 * C714) * C712 -
            (C172 * C31630 + C173 * C711) +
            (C113 * C715 + C31552 * C716) * C31418) *
               C105) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
               C31311 * C5023) *
              C707 +
          ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
           (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
               C31311 * C5023) *
              C708 +
          (C744 * C31311 * C5021 +
           (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
               C31311 * C5023) *
              C709 +
          (C745 * C31311 * C5021 +
           (C387 * C712 - (C386 * C31630 + C385 * C711) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C712 -
            (C388 * C31630 + C387 * C711) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31616 +
          ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
               C31311 * C5021 +
           (C378 * C1547 - (C377 * C1540 + C376 * C1546) + C379 * C1541 -
            C1575 * C1548 - C1576 * C1542 + C6061 * C1549 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C1547 - (C379 * C1540 + C378 * C1546) + C1576 * C1541 -
            C6061 * C1548 - C6062 * C1542 +
            (C113 * C6052 + C31552 * C6053) * C1549 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C711 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31630 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C712 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31418) *
              C31311 * C31541 * C707 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C712 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31630 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C711) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31418) *
              C31311 * C31541 * C708 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C711 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31630 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C712 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31418) *
              C31311 * C31541 * C709 +
          ((C9289 * C311 + C9286 * C327 + C9290 * C1007 + C9287 * C1015 +
            C9291 * C2326 + C9288 * C2327) *
               C712 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C31630 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C711) +
           (C9289 * C328 + C9286 * C341 + C9290 * C1016 + C9287 * C1022 +
            C9291 * C2328 + C9288 * C2329) *
               C31418) *
              C31311 * C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1546 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1540 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1547 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1541 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1548 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C1542 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C1549 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C31616 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C1547 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C1540 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C1546) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C1541 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C1548 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C1542 +
           (C9289 * C1274 + C9286 * C1282 + C9290 * C1855 + C9287 * C1859 +
            C9291 * C6766 + C9288 * C6767) *
               C1549 +
           (C9289 * C1283 + C9286 * C1292 + C9290 * C1860 + C9287 * C1864 +
            C9291 * C6768 + C9288 * C6769) *
               C31669) *
              C31311 * C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 -
            (C113 * C305 + C31552 * C315) * C1547 -
            (C113 * C316 + C31552 * C335) * C1541 +
            (C113 * C306 + C31552 * C317) * C1548 +
            (C113 * C318 + C31552 * C336) * C1542 -
            (C113 * C1272 + C31552 * C1278) * C1549 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
               C104 +
           (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
               C105) *
              C31541 * C31327 * C31631 +
          (((C113 * C1004 + C31552 * C1009) * C1547 -
            ((C113 * C533 + C31552 * C550) * C1540 +
             (C113 * C520 + C31552 * C534) * C1546) +
            (C113 * C1010 + C31552 * C1019) * C1541 -
            (C113 * C1406 + C31552 * C1415) * C1548 -
            (C113 * C1416 + C31552 * C1433) * C1542 +
            (C113 * C1854 + C31552 * C1857) * C1549 +
            (C113 * C1858 + C31552 * C1863) * C31669) *
               C103 +
           (C1043 * C1547 - (C583 * C1540 + C582 * C1546) + C1044 * C1541 -
            C1749 * C1548 - C1750 * C1542 +
            (C113 * C1855 + C31552 * C1859) * C1549 +
            (C113 * C1860 + C31552 * C1864) * C31669) *
               C104 +
           (C1045 * C1547 - (C585 * C1540 + C584 * C1546) + C1047 * C1541 -
            C1751 * C1548 - C1752 * C1542 +
            (C113 * C1856 + C31552 * C1861) * C1549 +
            (C113 * C1862 + C31552 * C1865) * C31669) *
               C105) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C299 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C300 +
           (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
            (C730 + C731 - C742 - C743) * C105) *
               C31541 * C31653) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C299 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C300 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C712 -
             (C855 * C31630 + C856 * C711) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C299 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C300 +
           (C744 * C31311 * C5021 +
            (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C31631 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            ((C113 * C1854 + C31552 * C1857) * C712 -
             (C5616 * C31630 + C5615 * C711) +
             (C113 * C1858 + C31552 * C1863) * C31418) *
                C31311 * C5023) *
               C299 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 -
             (C113 * C1855 + C31552 * C1859) * C712 -
             (C113 * C1860 + C31552 * C1864) * C31418) *
                C31311 * C5023) *
               C300 +
           (C1057 * C31311 * C5021 +
            (C1751 * C712 - (C1047 * C31630 + C1045 * C711) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C712 -
             (C1752 * C31630 + C1751 * C711) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C31631 +
          ((C5613 * C1547 -
            ((C113 * C533 + C31552 * C550) * C1540 +
             (C113 * C520 + C31552 * C534) * C1546) +
            C5614 * C1541 - C5615 * C1548 - C5616 * C1542 + C5947 * C1549 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C1547 - (C5614 * C1540 + C5613 * C1546) + C5616 * C1541 -
            C5947 * C1548 - C5948 * C1542 + C6325 * C1549 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C1547 - (C5616 * C1540 + C5615 * C1546) + C5948 * C1541 -
            C6325 * C1548 - C6326 * C1542 +
            (C113 * C6316 + C31552 * C6317) * C1549 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C711 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31630 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C712 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C31418) *
               C31311 * C31541 * C299 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C712 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C31630 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C711) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C31418) *
               C31311 * C31541 * C300 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C711 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31630 -
            (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
             C9289 * C309 + C9286 * C323) *
                C712 -
            (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
             C9289 * C324 + C9286 * C339) *
                C31418) *
               C31311 * C31541 * C31653) *
              C31631 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C712 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C31630 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C711) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C31418) *
               C31311 * C31541 * C299 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C711 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31630 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C712 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C31418) *
               C31311 * C31541 * C300 +
           ((C9289 * C1006 + C9286 * C1013 + C9290 * C1413 + C9287 * C1429 +
             C9291 * C2572 + C9288 * C2577) *
                C712 -
            ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
              C9289 * C530 + C9286 * C548) *
                 C31630 +
             (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
              C9289 * C518 + C9286 * C529) *
                 C711) +
            (C9289 * C1014 + C9286 * C1021 + C9290 * C1430 + C9287 * C1440 +
             C9291 * C2578 + C9288 * C2581) *
                C31418) *
               C31311 * C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1546 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1540 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1547 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1541 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1548 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C1542 -
           (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
            C9289 * C1272 + C9286 * C1278) *
               C1549 -
           (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
            C9289 * C1279 + C9286 * C1290) *
               C31669) *
              C31311 * C31541 * C31327 * C31631 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C1547 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C1540 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C1546) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C1541 -
           (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
            C9289 * C1406 + C9286 * C1415) *
               C1548 -
           (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
            C9289 * C1416 + C9286 * C1433) *
               C1542 +
           (C9289 * C1854 + C9286 * C1857 + C9290 * C5919 + C9287 * C5923 +
            C9291 * C6976 + C9288 * C6977) *
               C1549 +
           (C9289 * C1858 + C9286 * C1863 + C9290 * C5924 + C9287 * C5928 +
            C9291 * C6978 + C9288 * C6979) *
               C31669) *
              C31311 * C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C114 +
                (C113 * C123 + C31552 * C136) * C31355) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C31541 * C107 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C31541 * C108 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                  C109 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C31541 * C110 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31552 * C134) * C114 +
                (C113 * C135 + C31552 * C142) * C31355) *
                   C105) *
                  C31541 * C111) *
             C31373 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C302 +
                (C113 * C123 + C31552 * C136) * C31696 -
                (C113 * C305 + C31552 * C315) * C303 -
                (C113 * C316 + C31552 * C335) * C31684 +
                (C113 * C306 + C31552 * C317) * C304 +
                (C113 * C318 + C31552 * C336) * C31659) *
                   C103 +
               (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
                  C31541 * C299 +
              ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
               (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
               (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
                  C31541 * C300 +
              (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
               (C170 * C302 + C171 * C31696 -
                (C113 * C313 + C31552 * C331) * C303 -
                (C113 * C332 + C31552 * C343) * C31684 +
                (C113 * C314 + C31552 * C333) * C304 +
                (C113 * C334 + C31552 * C344) * C31659) *
                   C105) *
                  C31541 * C31653) *
             C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C299 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C300 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31653) *
              C31697 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 +
            (C598 + C599) * C105) *
               C31541 * C300 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C299 -
           (((C113 * C535 + C31552 * C551) * C31355 +
             (C113 * C521 + C31552 * C536) * C114) *
                C105 +
            (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31653) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C299 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C300 +
           (C607 * C103 + (C605 + C604) * C104 +
            ((C113 * C526 + C31552 * C545) * C114 +
             (C113 * C546 + C31552 * C556) * C31355) *
                C105) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
           (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
           (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
              C31541 * C31680 +
          (C1199 * C103 +
           (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
           (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
            (C113 * C314 + C31552 * C333) * C1175 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 -
           (C113 * C305 + C31552 * C315) * C1268 -
           (C113 * C316 + C31552 * C335) * C1262 +
           (C113 * C306 + C31552 * C317) * C1269 +
           (C113 * C318 + C31552 * C336) * C1263 -
           (C113 * C1272 + C31552 * C1278) * C1270 -
           (C113 * C1279 + C31552 * C1290) * C1264 +
           (C113 * C1273 + C31552 * C1280) * C1271 +
           (C113 * C1281 + C31552 * C1291) * C1265) *
              C103 +
          (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
           C378 * C1269 + C379 * C1263 -
           (C113 * C1274 + C31552 * C1282) * C1270 -
           (C113 * C1283 + C31552 * C1292) * C1264 +
           (C113 * C1275 + C31552 * C1284) * C1271 +
           (C113 * C1285 + C31552 * C1293) * C1265) *
              C104 +
          (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
           C383 * C1269 + C384 * C1263 -
           (C113 * C1276 + C31552 * C1286) * C1270 -
           (C113 * C1287 + C31552 * C1294) * C1264 +
           (C113 * C1277 + C31552 * C1288) * C1271 +
           (C113 * C1289 + C31552 * C1295) * C1265) *
              C105) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31327 * C31697 +
          (((C113 * C1004 + C31552 * C1009) * C1174 -
            ((C113 * C533 + C31552 * C550) * C1167 +
             (C113 * C520 + C31552 * C534) * C1173) +
            (C113 * C1010 + C31552 * C1019) * C1168 -
            (C113 * C1406 + C31552 * C1415) * C1175 -
            (C113 * C1416 + C31552 * C1433) * C31659) *
               C103 +
           (C1043 * C1174 - (C583 * C1167 + C582 * C1173) + C1044 * C1168 -
            (C113 * C1407 + C31552 * C1417) * C1175 -
            (C113 * C1418 + C31552 * C1434) * C31659) *
               C104 +
           (C1045 * C1174 - (C585 * C1167 + C584 * C1173) + C1047 * C1168 -
            (C113 * C1408 + C31552 * C1419) * C1175 -
            (C113 * C1420 + C31552 * C1435) * C31659) *
               C105) *
              C31541 * C31327 * C31686 +
          (((C113 * C522 + C31552 * C537) * C1173 +
            (C113 * C538 + C31552 * C552) * C1167 -
            (C113 * C1409 + C31552 * C1421) * C1174 -
            (C113 * C1422 + C31552 * C1436) * C1168 +
            (C113 * C1410 + C31552 * C1423) * C1175 +
            (C113 * C1424 + C31552 * C1437) * C31659) *
               C103 +
           (C588 * C1173 + C589 * C1167 -
            (C113 * C1411 + C31552 * C1425) * C1174 -
            (C113 * C1426 + C31552 * C1438) * C1168 +
            (C113 * C1412 + C31552 * C1427) * C1175 +
            (C113 * C1428 + C31552 * C1439) * C31659) *
               C104 +
           (C590 * C1173 + C591 * C1167 -
            (C113 * C1413 + C31552 * C1429) * C1174 -
            (C113 * C1430 + C31552 * C1440) * C1168 +
            (C113 * C1414 + C31552 * C1431) * C1175 +
            (C113 * C1432 + C31552 * C1441) * C31659) *
               C105) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C299 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C300 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C31697 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C300 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C299 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            ((C113 * C1409 + C31552 * C1421) * C114 +
             (C113 * C1422 + C31552 * C1436) * C31355) *
                C31311 * C5022 +
            ((C113 * C1410 + C31552 * C1423) * C114 +
             (C113 * C1424 + C31552 * C1437) * C31355) *
                C31311 * C5023) *
               C299 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C300 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            C5805 * C1175 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C31697 +
          ((C5613 * C1174 -
            ((C113 * C533 + C31552 * C550) * C1167 +
             (C113 * C520 + C31552 * C534) * C1173) +
            C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
            C5947 * C1175 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
            (C113 * C5918 + C31552 * C5921) * C1175 -
            (C113 * C5922 + C31552 * C5927) * C31659) *
               C31311 * C5023) *
              C31327 * C31686 +
          (((C113 * C522 + C31552 * C537) * C1173 +
            (C113 * C538 + C31552 * C552) * C1167 - C5949 * C1174 -
            C5950 * C1168 + C5951 * C1175 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C1173 + C5950 * C1167 - C5951 * C1174 - C5952 * C1168 +
            C5953 * C1175 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C1173 + C5952 * C1167 - C5953 * C1174 - C5954 * C1168 +
            (C113 * C5920 + C31552 * C5925) * C1175 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C114 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31355) *
              C31311 * C31541 * C107 -
          ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
            C9289 * C125 + C9286 * C137) *
               C31355 +
           (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
            C9289 * C116 + C9286 * C124) *
               C114) *
              C31311 * C31541 * C108 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C114 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31355) *
              C31311 * C31541 * C109 -
          ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
            C9289 * C128 + C9286 * C139) *
               C31355 +
           (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
            C9289 * C118 + C9286 * C129) *
               C114) *
              C31311 * C31541 * C110 +
          ((C9289 * C119 + C9286 * C130 + C9290 * C521 + C9287 * C536 +
            C9291 * C526 + C9288 * C545) *
               C114 +
           (C9289 * C131 + C9286 * C140 + C9290 * C535 + C9287 * C551 +
            C9291 * C546 + C9288 * C556) *
               C31355) *
              C31311 * C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C302 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31696 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C303 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31684 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C304 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C299 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C303 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31696 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C302) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31684 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C304 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C300 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C302 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31696 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C303 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31684 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C304 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C299 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C300 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C31653) *
              C31697 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C300 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C299 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C31653) *
              C31686 +
          (((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
             C9291 * C2159 + C9288 * C2168) *
                C114 +
            (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
             C9291 * C2169 + C9288 * C2177) *
                C31355) *
               C31311 * C31541 * C299 -
           ((C9291 * C2171 + C9288 * C2178 + C9290 * C2164 + C9287 * C2175 +
             C9289 * C540 + C9286 * C553) *
                C31355 +
            (C9291 * C2160 + C9288 * C2170 + C9290 * C2157 + C9287 * C2165 +
             C9289 * C523 + C9286 * C539) *
                C114) *
               C31311 * C31541 * C300 +
           ((C9289 * C524 + C9286 * C541 + C9290 * C2156 + C9287 * C2163 +
             C9291 * C2161 + C9288 * C2172) *
                C114 +
            (C9289 * C542 + C9286 * C554 + C9290 * C2162 + C9287 * C2174 +
             C9291 * C2173 + C9288 * C2179) *
                C31355) *
               C31311 * C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1173 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1167 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1174 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1168 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1175 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C31693 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C1174 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C1167 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C1173) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C1168 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C1175 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C31680 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C1173 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C1167 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C1174 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C1168 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C1175 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
           C9291 * C522 + C9288 * C537) *
              C1267 +
          (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
           C9291 * C538 + C9288 * C552) *
              C1261 -
          (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
           C9289 * C305 + C9286 * C315) *
              C1268 -
          (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
           C9289 * C316 + C9286 * C335) *
              C1262 +
          (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
           C9291 * C1410 + C9288 * C1423) *
              C1269 +
          (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
           C9291 * C1424 + C9288 * C1437) *
              C1263 -
          (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
           C9289 * C1272 + C9286 * C1278) *
              C1270 -
          (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
           C9289 * C1279 + C9286 * C1290) *
              C1264 +
          (C9289 * C1273 + C9286 * C1280 + C9290 * C5918 + C9287 * C5921 +
           C9291 * C5920 + C9288 * C5925) *
              C1271 +
          (C9289 * C1281 + C9286 * C1291 + C9290 * C5922 + C9287 * C5927 +
           C9291 * C5926 + C9288 * C5929) *
              C1265) *
         C31311 * C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1173 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1167 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1174 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1168 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1175 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C31327 * C31697 +
          ((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
            C9291 * C2570 + C9288 * C2573) *
               C1174 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C1167 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C1173) +
           (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
            C9291 * C2574 + C9288 * C2579) *
               C1168 -
           (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
            C9289 * C1406 + C9286 * C1415) *
               C1175 -
           (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
            C9289 * C1416 + C9286 * C1433) *
               C31659) *
              C31311 * C31541 * C31327 * C31686 +
          ((C9289 * C522 + C9286 * C537 + C9290 * C2158 + C9287 * C2167 +
            C9291 * C2159 + C9288 * C2168) *
               C1173 +
           (C9289 * C538 + C9286 * C552 + C9290 * C2166 + C9287 * C2176 +
            C9291 * C2169 + C9288 * C2177) *
               C1167 -
           (C9291 * C6609 + C9288 * C6613 + C9290 * C2570 + C9287 * C2573 +
            C9289 * C1409 + C9286 * C1421) *
               C1174 -
           (C9291 * C6614 + C9288 * C6618 + C9290 * C2574 + C9287 * C2579 +
            C9289 * C1422 + C9286 * C1436) *
               C1168 +
           (C9289 * C1410 + C9286 * C1423 + C9290 * C6608 + C9287 * C6612 +
            C9291 * C6610 + C9288 * C6615) *
               C1175 +
           (C9289 * C1424 + C9286 * C1437 + C9290 * C6611 + C9287 * C6617 +
            C9291 * C6616 + C9288 * C6619) *
               C31659) *
              C31311 * C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 -
             (C113 * C305 + C31552 * C315) * C1174 -
             (C113 * C316 + C31552 * C335) * C1168 +
             (C113 * C306 + C31552 * C317) * C1175 +
             (C113 * C318 + C31552 * C336) * C31659) *
                C103 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
            C1199 * C105) *
               C31541 * C31616 +
           ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
            (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
            (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
               C31541 * C31337) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             (C113 * C1010 + C31552 * C1019) * C1168 -
             (C113 * C1406 + C31552 * C1415) * C1175 -
             (C113 * C1416 + C31552 * C1433) * C31659) *
                C103 +
            (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C104 +
            (C1741 - (C1742 + C1743) + C1744 - C1755 - C1756) * C105) *
               C31541 * C31616 +
           ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C103 +
            (C1743 + C1742 - C1741 - C1744 + C1755 + C1756) * C104 +
            (C586 * C1173 + C587 * C1167 - C1048 * C1174 - C1049 * C1168 +
             (C113 * C1728 + C31552 * C1729) * C1175 +
             (C113 * C1730 + C31552 * C1731) * C31659) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C707 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C708 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C709 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31541 * C31663) *
              C31631 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C708 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C707 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C709 +
           (C850 * C103 + (C858 + C857) * C104 +
            ((C113 * C845 + C31552 * C846) * C114 +
             (C113 * C847 + C31552 * C848) * C31355) *
                C105) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C707 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C708 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C709 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C31631 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C708 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C707 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C709 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
             C5805 * C1175 + C5806 * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
            (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
             C1575 * C1175 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
             C6061 * C1175 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C31631 +
          (((C5613 * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
             C5947 * C1175 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
             (C113 * C5918 + C31552 * C5921) * C1175 -
             (C113 * C5922 + C31552 * C5927) * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C31311 * C5021 +
            (C1043 * C1173 + C1044 * C1167 - C1749 * C1174 - C1750 * C1168 +
             C6217 * C1175 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C1173 + C1750 * C1167 - C6217 * C1174 - C6218 * C1168 +
             (C113 * C6208 + C31552 * C6209) * C1175 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C114 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C31355) *
               C31311 * C31541 * C707 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31355 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C114) *
               C31311 * C31541 * C708 +
           ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
             C9291 * C524 + C9288 * C541) *
                C114 +
            (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
             C9291 * C542 + C9288 * C554) *
                C31355) *
               C31311 * C31541 * C709 -
           ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
             C9289 * C128 + C9286 * C139) *
                C31355 +
            (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
             C9289 * C118 + C9286 * C129) *
                C114) *
               C31311 * C31541 * C31663) *
              C31631 +
          (((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C114 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C31355) *
               C31311 * C31541 * C708 -
           ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
             C9289 * C533 + C9286 * C550) *
                C31355 +
            (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
             C9289 * C520 + C9286 * C534) *
                C114) *
               C31311 * C31541 * C707 -
           ((C9291 * C2162 + C9288 * C2174 + C9290 * C542 + C9287 * C554 +
             C9289 * C530 + C9286 * C548) *
                C31355 +
            (C9291 * C2156 + C9288 * C2163 + C9290 * C524 + C9287 * C541 +
             C9289 * C518 + C9286 * C529) *
                C114) *
               C31311 * C31541 * C709 +
           ((C9289 * C519 + C9286 * C531 + C9290 * C525 + C9287 * C544 +
             C9291 * C2452 + C9288 * C2453) *
                C114 +
            (C9289 * C532 + C9286 * C549 + C9290 * C543 + C9287 * C555 +
             C9291 * C2454 + C9288 * C2455) *
                C31355) *
               C31311 * C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
             C9291 * C522 + C9288 * C537) *
                C1173 +
            (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
             C9291 * C538 + C9288 * C552) *
                C1167 -
            (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
             C9289 * C305 + C9286 * C315) *
                C1174 -
            (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
             C9289 * C316 + C9286 * C335) *
                C1168 +
            (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
             C9291 * C1410 + C9288 * C1423) *
                C1175 +
            (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
             C9291 * C1424 + C9288 * C1437) *
                C31659) *
               C31311 * C31541 * C31616 +
           ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
             C9291 * C1411 + C9288 * C1425) *
                C1174 -
            ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
              C9289 * C125 + C9286 * C137) *
                 C1167 +
             (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
              C9289 * C116 + C9286 * C124) *
                 C1173) +
            (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
             C9291 * C1426 + C9288 * C1438) *
                C1168 -
            (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
             C9289 * C308 + C9286 * C321) *
                C1175 -
            (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
             C9289 * C322 + C9286 * C338) *
                C31659) *
               C31311 * C31541 * C31337) *
              C31631 +
          (((C9289 * C1004 + C9286 * C1009 + C9290 * C1409 + C9287 * C1421 +
             C9291 * C2570 + C9288 * C2573) *
                C1174 -
            ((C9291 * C2166 + C9288 * C2176 + C9290 * C538 + C9287 * C552 +
              C9289 * C533 + C9286 * C550) *
                 C1167 +
             (C9291 * C2158 + C9288 * C2167 + C9290 * C522 + C9287 * C537 +
              C9289 * C520 + C9286 * C534) *
                 C1173) +
            (C9289 * C1010 + C9286 * C1019 + C9290 * C1422 + C9287 * C1436 +
             C9291 * C2574 + C9288 * C2579) *
                C1168 -
            (C9291 * C6608 + C9288 * C6612 + C9290 * C1410 + C9287 * C1423 +
             C9289 * C1406 + C9286 * C1415) *
                C1175 -
            (C9291 * C6611 + C9288 * C6617 + C9290 * C1424 + C9287 * C1437 +
             C9289 * C1416 + C9286 * C1433) *
                C31659) *
               C31311 * C31541 * C31616 +
           ((C9289 * C517 + C9286 * C527 + C9290 * C523 + C9287 * C539 +
             C9291 * C2157 + C9288 * C2165) *
                C1173 +
            (C9289 * C528 + C9286 * C547 + C9290 * C540 + C9287 * C553 +
             C9291 * C2164 + C9288 * C2175) *
                C1167 -
            (C9291 * C2571 + C9288 * C2575 + C9290 * C1411 + C9287 * C1425 +
             C9289 * C1005 + C9286 * C1011) *
                C1174 -
            (C9291 * C2576 + C9288 * C2580 + C9290 * C1426 + C9287 * C1438 +
             C9289 * C1012 + C9286 * C1020) *
                C1168 +
            (C9289 * C1407 + C9286 * C1417 + C9290 * C1412 + C9287 * C1427 +
             C9291 * C6874 + C9288 * C6875) *
                C1175 +
            (C9289 * C1418 + C9286 * C1434 + C9290 * C1428 + C9287 * C1439 +
             C9291 * C6876 + C9288 * C6877) *
                C31659) *
               C31311 * C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
           (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
           (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
              C31541 * C300 +
          (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
           (C170 * C302 + C171 * C31696 - (C113 * C313 + C31552 * C331) * C303 -
            (C113 * C332 + C31552 * C343) * C31684 +
            (C113 * C314 + C31552 * C333) * C304 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31541 * C107 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31541 *
              C108 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C109 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31541 *
              C110 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31552 * C134) * C114 +
            (C113 * C135 + C31552 * C142) * C31355) *
               C105) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
           (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
           (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
              C31541 * C31680 +
          (C1199 * C103 +
           (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
           (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
            (C113 * C314 + C31552 * C333) * C1175 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 -
           (C113 * C305 + C31552 * C315) * C1268 -
           (C113 * C316 + C31552 * C335) * C1262 +
           (C113 * C306 + C31552 * C317) * C1269 +
           (C113 * C318 + C31552 * C336) * C1263 -
           (C113 * C1272 + C31552 * C1278) * C1270 -
           (C113 * C1279 + C31552 * C1290) * C1264 +
           (C113 * C1273 + C31552 * C1280) * C1271 +
           (C113 * C1281 + C31552 * C1291) * C1265) *
              C103 +
          (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
           C378 * C1269 + C379 * C1263 -
           (C113 * C1274 + C31552 * C1282) * C1270 -
           (C113 * C1283 + C31552 * C1292) * C1264 +
           (C113 * C1275 + C31552 * C1284) * C1271 +
           (C113 * C1285 + C31552 * C1293) * C1265) *
              C104 +
          (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
           C383 * C1269 + C384 * C1263 -
           (C113 * C1276 + C31552 * C1286) * C1270 -
           (C113 * C1287 + C31552 * C1294) * C1264 +
           (C113 * C1277 + C31552 * C1288) * C1271 +
           (C113 * C1289 + C31552 * C1295) * C1265) *
              C105) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C114 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31355) *
              C31311 * C31541 * C107 -
          ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
            C9289 * C125 + C9286 * C137) *
               C31355 +
           (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
            C9289 * C116 + C9286 * C124) *
               C114) *
              C31311 * C31541 * C108 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C114 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31355) *
              C31311 * C31541 * C109 -
          ((C9291 * C543 + C9288 * C555 + C9290 * C532 + C9287 * C549 +
            C9289 * C128 + C9286 * C139) *
               C31355 +
           (C9291 * C525 + C9288 * C544 + C9290 * C519 + C9287 * C531 +
            C9289 * C118 + C9286 * C129) *
               C114) *
              C31311 * C31541 * C110 +
          ((C9289 * C119 + C9286 * C130 + C9290 * C521 + C9287 * C536 +
            C9291 * C526 + C9288 * C545) *
               C114 +
           (C9289 * C131 + C9286 * C140 + C9290 * C535 + C9287 * C551 +
            C9291 * C546 + C9288 * C556) *
               C31355) *
              C31311 * C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C302 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C31696 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C303 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C31684 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C304 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C299 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C303 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C31696 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C302) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C31684 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C304 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C300 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C302 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C31696 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C303 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C31684 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C304 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
            C9291 * C522 + C9288 * C537) *
               C1173 +
           (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
            C9291 * C538 + C9288 * C552) *
               C1167 -
           (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
            C9289 * C305 + C9286 * C315) *
               C1174 -
           (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
            C9289 * C316 + C9286 * C335) *
               C1168 +
           (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
            C9291 * C1410 + C9288 * C1423) *
               C1175 +
           (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
            C9291 * C1424 + C9288 * C1437) *
               C31659) *
              C31311 * C31541 * C31693 +
          ((C9289 * C307 + C9286 * C319 + C9290 * C1005 + C9287 * C1011 +
            C9291 * C1411 + C9288 * C1425) *
               C1174 -
           ((C9291 * C540 + C9288 * C553 + C9290 * C528 + C9287 * C547 +
             C9289 * C125 + C9286 * C137) *
                C1167 +
            (C9291 * C523 + C9288 * C539 + C9290 * C517 + C9287 * C527 +
             C9289 * C116 + C9286 * C124) *
                C1173) +
           (C9289 * C320 + C9286 * C337 + C9290 * C1012 + C9287 * C1020 +
            C9291 * C1426 + C9288 * C1438) *
               C1168 -
           (C9291 * C1412 + C9288 * C1427 + C9290 * C1407 + C9287 * C1417 +
            C9289 * C308 + C9286 * C321) *
               C1175 -
           (C9291 * C1428 + C9288 * C1439 + C9290 * C1418 + C9287 * C1434 +
            C9289 * C322 + C9286 * C338) *
               C31659) *
              C31311 * C31541 * C31680 +
          ((C9289 * C117 + C9286 * C126 + C9290 * C518 + C9287 * C529 +
            C9291 * C524 + C9288 * C541) *
               C1173 +
           (C9289 * C127 + C9286 * C138 + C9290 * C530 + C9287 * C548 +
            C9291 * C542 + C9288 * C554) *
               C1167 -
           (C9291 * C1413 + C9288 * C1429 + C9290 * C1006 + C9287 * C1013 +
            C9289 * C309 + C9286 * C323) *
               C1174 -
           (C9291 * C1430 + C9288 * C1440 + C9290 * C1014 + C9287 * C1021 +
            C9289 * C324 + C9286 * C339) *
               C1168 +
           (C9289 * C310 + C9286 * C325 + C9290 * C1408 + C9287 * C1419 +
            C9291 * C1414 + C9288 * C1431) *
               C1175 +
           (C9289 * C326 + C9286 * C340 + C9290 * C1420 + C9287 * C1435 +
            C9291 * C1432 + C9288 * C1441) *
               C31659) *
              C31311 * C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C9289 * C115 + C9286 * C122 + C9290 * C520 + C9287 * C534 +
           C9291 * C522 + C9288 * C537) *
              C1267 +
          (C9289 * C123 + C9286 * C136 + C9290 * C533 + C9287 * C550 +
           C9291 * C538 + C9288 * C552) *
              C1261 -
          (C9291 * C1409 + C9288 * C1421 + C9290 * C1004 + C9287 * C1009 +
           C9289 * C305 + C9286 * C315) *
              C1268 -
          (C9291 * C1422 + C9288 * C1436 + C9290 * C1010 + C9287 * C1019 +
           C9289 * C316 + C9286 * C335) *
              C1262 +
          (C9289 * C306 + C9286 * C317 + C9290 * C1406 + C9287 * C1415 +
           C9291 * C1410 + C9288 * C1423) *
              C1269 +
          (C9289 * C318 + C9286 * C336 + C9290 * C1416 + C9287 * C1433 +
           C9291 * C1424 + C9288 * C1437) *
              C1263 -
          (C9291 * C5919 + C9288 * C5923 + C9290 * C1854 + C9287 * C1857 +
           C9289 * C1272 + C9286 * C1278) *
              C1270 -
          (C9291 * C5924 + C9288 * C5928 + C9290 * C1858 + C9287 * C1863 +
           C9289 * C1279 + C9286 * C1290) *
              C1264 +
          (C9289 * C1273 + C9286 * C1280 + C9290 * C5918 + C9287 * C5921 +
           C9291 * C5920 + C9288 * C5925) *
              C1271 +
          (C9289 * C1281 + C9286 * C1291 + C9290 * C5922 + C9287 * C5927 +
           C9291 * C5926 + C9288 * C5929) *
              C1265) *
         C31311 * C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C30303 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31414 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C30295 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31421 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C30309 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C3108) *
               C13436 +
           ((C19069 + C19070) * C30303 + (C19071 + C19072) * C31414 -
            (C19263 + C19264) * C30295 - (C19265 + C19266) * C31421 +
            (C19267 + C19268) * C30309 + (C19269 + C19270) * C3108) *
               C13437) *
              C31541 * C31332 +
          (((C19264 + C19263) * C30295 -
            ((C19072 + C19071) * C31414 + (C19070 + C19069) * C30303) +
            (C19266 + C19265) * C31421 - (C19268 + C19267) * C30309 -
            (C19270 + C19269) * C3108) *
               C13436 +
           ((C19271 + C19272) * C30295 -
            ((C19073 + C19074) * C31414 + (C19075 + C19076) * C30303) +
            (C19273 + C19274) * C31421 - (C19275 + C19276) * C30309 -
            (C19277 + C19278) * C3108) *
               C13437) *
              C31541 * C31340 +
          (((C19076 + C19075) * C30303 + (C19074 + C19073) * C31414 -
            (C19272 + C19271) * C30295 - (C19274 + C19273) * C31421 +
            (C19276 + C19275) * C30309 + (C19278 + C19277) * C3108) *
               C13436 +
           ((C19077 + C19078) * C30303 + (C19079 + C19080) * C31414 -
            (C19611 + C19612) * C30295 - (C19613 + C19614) * C31421 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C30309 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C3108) *
               C13437) *
              C31541 * C3111) *
         C31373) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C30303 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31414 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C30295 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31421 +
             (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                 C30309 +
             (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                 C3108) *
                C13436 +
            ((C19069 + C19070) * C30303 + (C19071 + C19072) * C31414 -
             (C19263 + C19264) * C30295 - (C19265 + C19266) * C31421 +
             (C19267 + C19268) * C30309 + (C19269 + C19270) * C3108) *
                C13437) *
               C31541 * C2812 +
           (((C19264 + C19263) * C30295 -
             ((C19072 + C19071) * C31414 + (C19070 + C19069) * C30303) +
             (C19266 + C19265) * C31421 - (C19268 + C19267) * C30309 -
             (C19270 + C19269) * C3108) *
                C13436 +
            ((C19271 + C19272) * C30295 -
             ((C19073 + C19074) * C31414 + (C19075 + C19076) * C30303) +
             (C19273 + C19274) * C31421 - (C19275 + C19276) * C30309 -
             (C19277 + C19278) * C3108) *
                C13437) *
               C31541 * C31337) *
              C31631 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C30295 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31414 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C30303) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31421 -
             (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
              C19032 * C1415) *
                 C30309 -
             (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
              C19032 * C1433) *
                 C3108) *
                C13436 +
            ((C19967 + C19968) * C30295 -
             ((C19460 + C19459) * C31414 + (C19458 + C19457) * C30303) +
             (C19969 + C19970) * C31421 - (C20693 + C20694) * C30309 -
             (C20695 + C20696) * C3108) *
                C13437) *
               C31541 * C2812 +
           (((C19457 + C19458) * C30303 + (C19459 + C19460) * C31414 -
             (C19968 + C19967) * C30295 - (C19970 + C19969) * C31421 +
             (C20694 + C20693) * C30309 + (C20696 + C20695) * C3108) *
                C13436 +
            ((C19461 + C19462) * C30303 + (C19463 + C19464) * C31414 -
             (C19971 + C19972) * C30295 - (C19973 + C19974) * C31421 +
             (C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C30309 +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C3108) *
                C13437) *
               C31541 * C31337) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C2815 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31699 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C2816 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31689 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C2817 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C2814 + (C19071 + C19072) * C31703 -
            (C19263 + C19264) * C2815 - (C19265 + C19266) * C31699 +
            (C19267 + C19268) * C2816 + (C19269 + C19270) * C31689 -
            (C20487 + C20488) * C2817 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C2812 +
          (((C19264 + C19263) * C2815 -
            ((C19072 + C19071) * C31703 + (C19070 + C19069) * C2814) +
            (C19266 + C19265) * C31699 - (C19268 + C19267) * C2816 -
            (C19270 + C19269) * C31689 + (C20488 + C20487) * C2817 +
            (C20490 + C20489) * C31669) *
               C13436 +
           ((C19271 + C19272) * C2815 -
            ((C19073 + C19074) * C31703 + (C19075 + C19076) * C2814) +
            (C19273 + C19274) * C31699 - (C19275 + C19276) * C2816 -
            (C19277 + C19278) * C31689 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C2817 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31669) *
               C13437) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2686 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C2680 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C2687 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31418) *
               C13436 +
           ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
            (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
               C13437) *
              C31541 * C31702 +
          (((C19264 + C19263) * C2687 -
            ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
            (C19266 + C19265) * C31418) *
               C13436 +
           ((C19271 + C19272) * C2687 -
            ((C19073 + C19074) * C2680 + (C19075 + C19076) * C2686) +
            (C19273 + C19274) * C31418) *
               C13437) *
              C31541 * C31695 +
          (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
            (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
               C13436 +
           ((C19077 + C19078) * C2686 + (C19079 + C19080) * C2680 -
            (C19611 + C19612) * C2687 - (C19613 + C19614) * C31418) *
               C13437) *
              C31541 * C31682 +
          (((C19612 + C19611) * C2687 -
            ((C19080 + C19079) * C2680 + (C19078 + C19077) * C2686) +
            (C19614 + C19613) * C31418) *
               C13436 +
           ((C19034 * C313 + C19032 * C331 + C19035 * C1008 + C19033 * C1017) *
                C2687 -
            ((C19081 + C19082) * C2680 + (C19083 + C19084) * C2686) +
            (C19034 * C332 + C19032 * C343 + C19035 * C1018 + C19033 * C1023) *
                C31418) *
               C13437) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C2687 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
             (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C2812 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C2687 -
             ((C19073 + C19074) * C2680 + (C19075 + C19076) * C2686) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31337) *
              C31697 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C2687 -
             ((C19460 + C19459) * C2680 + (C19458 + C19457) * C2686) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C2812 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C2686 + (C19463 + C19464) * C2680 -
             (C19971 + C19972) * C2687 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31337) *
              C31686 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C2686 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C2680 -
             (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
              C19032 * C1421) *
                 C2687 -
             (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
              C19032 * C1436) *
                 C31418) *
                C13436 +
            ((C19465 + C19466) * C2686 + (C19467 + C19468) * C2680 -
             (C21403 + C21404) * C2687 - (C21405 + C21406) * C31418) *
                C13437) *
               C31541 * C2812 +
           (((C21404 + C21403) * C2687 -
             ((C19468 + C19467) * C2680 + (C19466 + C19465) * C2686) +
             (C21406 + C21405) * C31418) *
                C13436 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C2687 -
             ((C19469 + C19470) * C2680 + (C19471 + C19472) * C2686) +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31418) *
                C13437) *
               C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C2687 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
             (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C31332 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C2687 -
             ((C19073 + C19074) * C2680 + (C19075 + C19076) * C2686) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31340 +
           (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
             (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
                C13436 +
            ((C19077 + C19078) * C2686 + (C19079 + C19080) * C2680 -
             (C19611 + C19612) * C2687 - (C19613 + C19614) * C31418) *
                C13437) *
               C31541 * C3111) *
              C31631 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C2687 -
             ((C19460 + C19459) * C2680 + (C19458 + C19457) * C2686) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C31332 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C2686 + (C19463 + C19464) * C2680 -
             (C19971 + C19972) * C2687 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31340 +
           (((C19972 + C19971) * C2687 -
             ((C19464 + C19463) * C2680 + (C19462 + C19461) * C2686) +
             (C19974 + C19973) * C31418) *
                C13436 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C2687 -
             ((C19753 + C19754) * C2680 + (C19755 + C19756) * C2686) +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31418) *
                C13437) *
               C31541 * C3111) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2686 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C2680 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C2687 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31418) *
               C13436 +
           ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
            (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
               C13437) *
              C31541 * C31702 +
          (((C19264 + C19263) * C2687 -
            ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
            (C19266 + C19265) * C31418) *
               C13436 +
           ((C19271 + C19272) * C2687 -
            ((C19073 + C19074) * C2680 + (C19075 + C19076) * C2686) +
            (C19273 + C19274) * C31418) *
               C13437) *
              C31541 * C31695 +
          (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
            (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
               C13436 +
           ((C19077 + C19078) * C2686 + (C19079 + C19080) * C2680 -
            (C19611 + C19612) * C2687 - (C19613 + C19614) * C31418) *
               C13437) *
              C31541 * C31682 +
          (((C19612 + C19611) * C2687 -
            ((C19080 + C19079) * C2680 + (C19078 + C19077) * C2686) +
            (C19614 + C19613) * C31418) *
               C13436 +
           ((C19034 * C313 + C19032 * C331 + C19035 * C1008 + C19033 * C1017) *
                C2687 -
            ((C19081 + C19082) * C2680 + (C19083 + C19084) * C2686) +
            (C19034 * C332 + C19032 * C343 + C19035 * C1018 + C19033 * C1023) *
                C31418) *
               C13437) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C2815 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31699 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C2816 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31689 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C2817 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C2814 + (C19071 + C19072) * C31703 -
            (C19263 + C19264) * C2815 - (C19265 + C19266) * C31699 +
            (C19267 + C19268) * C2816 + (C19269 + C19270) * C31689 -
            (C20487 + C20488) * C2817 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C2812 +
          (((C19264 + C19263) * C2815 -
            ((C19072 + C19071) * C31703 + (C19070 + C19069) * C2814) +
            (C19266 + C19265) * C31699 - (C19268 + C19267) * C2816 -
            (C19270 + C19269) * C31689 + (C20488 + C20487) * C2817 +
            (C20490 + C20489) * C31669) *
               C13436 +
           ((C19271 + C19272) * C2815 -
            ((C19073 + C19074) * C31703 + (C19075 + C19076) * C2814) +
            (C19273 + C19274) * C31699 - (C19275 + C19276) * C2816 -
            (C19277 + C19278) * C31689 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C2817 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31669) *
               C13437) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C30303 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31414 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C30295 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31421 +
             (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                 C30309 +
             (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                 C3108) *
                C13436 +
            ((C19069 + C19070) * C30303 + (C19071 + C19072) * C31414 -
             (C19263 + C19264) * C30295 - (C19265 + C19266) * C31421 +
             (C19267 + C19268) * C30309 + (C19269 + C19270) * C3108) *
                C13437) *
               C31541 * C31616 +
           (((C19264 + C19263) * C30295 -
             ((C19072 + C19071) * C31414 + (C19070 + C19069) * C30303) +
             (C19266 + C19265) * C31421 - (C19268 + C19267) * C30309 -
             (C19270 + C19269) * C3108) *
                C13436 +
            ((C19271 + C19272) * C30295 -
             ((C19073 + C19074) * C31414 + (C19075 + C19076) * C30303) +
             (C19273 + C19274) * C31421 - (C19275 + C19276) * C30309 -
             (C19277 + C19278) * C3108) *
                C13437) *
               C31541 * C31337) *
              C3547 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C30295 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31414 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C30303) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31421 -
             (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
              C19032 * C1415) *
                 C30309 -
             (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
              C19032 * C1433) *
                 C3108) *
                C13436 +
            ((C19967 + C19968) * C30295 -
             ((C19460 + C19459) * C31414 + (C19458 + C19457) * C30303) +
             (C19969 + C19970) * C31421 - (C20693 + C20694) * C30309 -
             (C20695 + C20696) * C3108) *
                C13437) *
               C31541 * C31616 +
           (((C19457 + C19458) * C30303 + (C19459 + C19460) * C31414 -
             (C19968 + C19967) * C30295 - (C19970 + C19969) * C31421 +
             (C20694 + C20693) * C30309 + (C20696 + C20695) * C3108) *
                C13436 +
            ((C19461 + C19462) * C30303 + (C19463 + C19464) * C31414 -
             (C19971 + C19972) * C30295 - (C19973 + C19974) * C31421 +
             (C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C30309 +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C3108) *
                C13437) *
               C31541 * C31337) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C30303 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31414 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C30295 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31421 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C30309 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C3108) *
               C13436 +
           ((C19069 + C19070) * C30303 + (C19071 + C19072) * C31414 -
            (C19263 + C19264) * C30295 - (C19265 + C19266) * C31421 +
            (C19267 + C19268) * C30309 + (C19269 + C19270) * C3108) *
               C13437) *
              C31541 * C31327 * C31456 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C30295 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31414 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C30303) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C31421 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C30309 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C3108) *
               C13436 +
           ((C19967 + C19968) * C30295 -
            ((C19460 + C19459) * C31414 + (C19458 + C19457) * C30303) +
            (C19969 + C19970) * C31421 - (C20693 + C20694) * C30309 -
            (C20695 + C20696) * C3108) *
               C13437) *
              C31541 * C31327 * C31463 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C30303 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31414 -
            (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
             C19032 * C1421) *
                C30295 -
            (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
             C19032 * C1436) *
                C31421 +
            (C19034 * C1410 + C19032 * C1423 + C19035 * C6608 +
             C19033 * C6612) *
                C30309 +
            (C19034 * C1424 + C19032 * C1437 + C19035 * C6611 +
             C19033 * C6617) *
                C3108) *
               C13436 +
           ((C19465 + C19466) * C30303 + (C19467 + C19468) * C31414 -
            (C21403 + C21404) * C30295 - (C21405 + C21406) * C31421 +
            (C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
             C19033 * C6875) *
                C30309 +
            (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
             C19033 * C6877) *
                C3108) *
               C13437) *
              C31541 * C31327 * C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C2815 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31699 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C2816 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31689 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C2817 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C2814 + (C19071 + C19072) * C31703 -
            (C19263 + C19264) * C2815 - (C19265 + C19266) * C31699 +
            (C19267 + C19268) * C2816 + (C19269 + C19270) * C31689 -
            (C20487 + C20488) * C2817 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C31327 * C3547 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C2815 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31703 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C2814) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C31699 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C2816 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C31689 +
            (C19034 * C1854 + C19032 * C1857 + C19035 * C5919 +
             C19033 * C5923) *
                C2817 +
            (C19034 * C1858 + C19032 * C1863 + C19035 * C5924 +
             C19033 * C5928) *
                C31669) *
               C13436 +
           ((C19967 + C19968) * C2815 -
            ((C19460 + C19459) * C31703 + (C19458 + C19457) * C2814) +
            (C19969 + C19970) * C31699 - (C20693 + C20694) * C2816 -
            (C20695 + C20696) * C31689 +
            (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
             C19033 * C6767) *
                C2817 +
            (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
             C19033 * C6769) *
                C31669) *
               C13437) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C2687 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
             (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C31693 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C2687 -
             ((C19073 + C19074) * C2680 + (C19075 + C19076) * C2686) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31680 +
           (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
             (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
                C13436 +
            ((C19077 + C19078) * C2686 + (C19079 + C19080) * C2680 -
             (C19611 + C19612) * C2687 - (C19613 + C19614) * C31418) *
                C13437) *
               C31541 * C31653) *
              C3547 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C2687 -
             ((C19460 + C19459) * C2680 + (C19458 + C19457) * C2686) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C31693 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C2686 + (C19463 + C19464) * C2680 -
             (C19971 + C19972) * C2687 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31680 +
           (((C19972 + C19971) * C2687 -
             ((C19464 + C19463) * C2680 + (C19462 + C19461) * C2686) +
             (C19974 + C19973) * C31418) *
                C13436 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C2687 -
             ((C19753 + C19754) * C2680 + (C19755 + C19756) * C2686) +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31418) *
                C13437) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2686 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C2680 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C2687 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31418) *
               C13436 +
           ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
            (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
               C13437) *
              C31541 * C31327 * C31704 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C2687 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C2680 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C2686) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C31418) *
               C13436 +
           ((C19967 + C19968) * C2687 -
            ((C19460 + C19459) * C2680 + (C19458 + C19457) * C2686) +
            (C19969 + C19970) * C31418) *
               C13437) *
              C31541 * C31327 * C31701 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C2686 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C2680 -
            (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
             C19032 * C1421) *
                C2687 -
            (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
             C19032 * C1436) *
                C31418) *
               C13436 +
           ((C19465 + C19466) * C2686 + (C19467 + C19468) * C2680 -
            (C21403 + C21404) * C2687 - (C21405 + C21406) * C31418) *
               C13437) *
              C31541 * C31327 * C31692 +
          (((C19034 * C2570 + C19032 * C2573 + C19035 * C6609 +
             C19033 * C6613) *
                C2687 -
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C2680 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C2686) +
            (C19034 * C2574 + C19032 * C2579 + C19035 * C6614 +
             C19033 * C6618) *
                C31418) *
               C13436 +
           ((C19034 * C2571 + C19032 * C2575 + C19035 * C10914 +
             C19033 * C10915) *
                C2687 -
            ((C21548 + C21547) * C2680 + (C21546 + C21545) * C2686) +
            (C19034 * C2576 + C19032 * C2580 + C19035 * C10916 +
             C19033 * C10917) *
                C31418) *
               C13437) *
              C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C2687 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
             (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C31616 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C2687 -
             ((C19073 + C19074) * C2680 + (C19075 + C19076) * C2686) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31337) *
              C31456 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C2687 -
             ((C19460 + C19459) * C2680 + (C19458 + C19457) * C2686) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C31616 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C2686 + (C19463 + C19464) * C2680 -
             (C19971 + C19972) * C2687 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31337) *
              C31463 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C2686 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C2680 -
             (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
              C19032 * C1421) *
                 C2687 -
             (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
              C19032 * C1436) *
                 C31418) *
                C13436 +
            ((C19465 + C19466) * C2686 + (C19467 + C19468) * C2680 -
             (C21403 + C21404) * C2687 - (C21405 + C21406) * C31418) *
                C13437) *
               C31541 * C31616 +
           (((C21404 + C21403) * C2687 -
             ((C19468 + C19467) * C2680 + (C19466 + C19465) * C2686) +
             (C21406 + C21405) * C31418) *
                C13436 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C2687 -
             ((C19469 + C19470) * C2680 + (C19471 + C19472) * C2686) +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31418) *
                C13437) *
               C31541 * C31337) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C2686 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C2680 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C2687 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C2686 + (C19071 + C19072) * C2680 -
             (C19263 + C19264) * C2687 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C31693 +
           (((C19264 + C19263) * C2687 -
             ((C19072 + C19071) * C2680 + (C19070 + C19069) * C2686) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C2687 -
             ((C19073 + C19074) * C2680 + (C19075 + C19076) * C2686) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31680 +
           (((C19076 + C19075) * C2686 + (C19074 + C19073) * C2680 -
             (C19272 + C19271) * C2687 - (C19274 + C19273) * C31418) *
                C13436 +
            ((C19077 + C19078) * C2686 + (C19079 + C19080) * C2680 -
             (C19611 + C19612) * C2687 - (C19613 + C19614) * C31418) *
                C13437) *
               C31541 * C31653) *
              C3547 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C2687 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C2680 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C2686) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C2687 -
             ((C19460 + C19459) * C2680 + (C19458 + C19457) * C2686) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C31693 +
           (((C19457 + C19458) * C2686 + (C19459 + C19460) * C2680 -
             (C19968 + C19967) * C2687 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C2686 + (C19463 + C19464) * C2680 -
             (C19971 + C19972) * C2687 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31680 +
           (((C19972 + C19971) * C2687 -
             ((C19464 + C19463) * C2680 + (C19462 + C19461) * C2686) +
             (C19974 + C19973) * C31418) *
                C13436 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C2687 -
             ((C19753 + C19754) * C2680 + (C19755 + C19756) * C2686) +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31418) *
                C13437) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C2814 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31703 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C2815 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31699 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C2816 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31689 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C2817 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C2814 + (C19071 + C19072) * C31703 -
            (C19263 + C19264) * C2815 - (C19265 + C19266) * C31699 +
            (C19267 + C19268) * C2816 + (C19269 + C19270) * C31689 -
            (C20487 + C20488) * C2817 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C31327 * C3547 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C2815 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31703 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C2814) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C31699 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C2816 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C31689 +
            (C19034 * C1854 + C19032 * C1857 + C19035 * C5919 +
             C19033 * C5923) *
                C2817 +
            (C19034 * C1858 + C19032 * C1863 + C19035 * C5924 +
             C19033 * C5928) *
                C31669) *
               C13436 +
           ((C19967 + C19968) * C2815 -
            ((C19460 + C19459) * C31703 + (C19458 + C19457) * C2814) +
            (C19969 + C19970) * C31699 - (C20693 + C20694) * C2816 -
            (C20695 + C20696) * C31689 +
            (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
             C19033 * C6767) *
                C2817 +
            (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
             C19033 * C6769) *
                C31669) *
               C13437) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1547 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1541 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1548 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C1542 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C1549 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C1546 + (C19071 + C19072) * C1540 -
            (C19263 + C19264) * C1547 - (C19265 + C19266) * C1541 +
            (C19267 + C19268) * C1548 + (C19269 + C19270) * C1542 -
            (C20487 + C20488) * C1549 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C31616 +
          (((C19264 + C19263) * C1547 -
            ((C19072 + C19071) * C1540 + (C19070 + C19069) * C1546) +
            (C19266 + C19265) * C1541 - (C19268 + C19267) * C1548 -
            (C19270 + C19269) * C1542 + (C20488 + C20487) * C1549 +
            (C20490 + C20489) * C31669) *
               C13436 +
           ((C19271 + C19272) * C1547 -
            ((C19073 + C19074) * C1540 + (C19075 + C19076) * C1546) +
            (C19273 + C19274) * C1541 - (C19275 + C19276) * C1548 -
            (C19277 + C19278) * C1542 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C1549 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31669) *
               C13437) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C711 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31630 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C712 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31418) *
               C13436 +
           ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
            (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
               C13437) *
              C31541 * C707 +
          (((C19264 + C19263) * C712 -
            ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
            (C19266 + C19265) * C31418) *
               C13436 +
           ((C19271 + C19272) * C712 -
            ((C19073 + C19074) * C31630 + (C19075 + C19076) * C711) +
            (C19273 + C19274) * C31418) *
               C13437) *
              C31541 * C708 +
          (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
            (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
               C13436 +
           ((C19077 + C19078) * C711 + (C19079 + C19080) * C31630 -
            (C19611 + C19612) * C712 - (C19613 + C19614) * C31418) *
               C13437) *
              C31541 * C709 +
          (((C19612 + C19611) * C712 -
            ((C19080 + C19079) * C31630 + (C19078 + C19077) * C711) +
            (C19614 + C19613) * C31418) *
               C13436 +
           ((C19034 * C313 + C19032 * C331 + C19035 * C1008 + C19033 * C1017) *
                C712 -
            ((C19081 + C19082) * C31630 + (C19083 + C19084) * C711) +
            (C19034 * C332 + C19032 * C343 + C19035 * C1018 + C19033 * C1023) *
                C31418) *
               C13437) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C712 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
             (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C31616 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C712 -
             ((C19073 + C19074) * C31630 + (C19075 + C19076) * C711) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31337) *
              C1976 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C712 -
             ((C19460 + C19459) * C31630 + (C19458 + C19457) * C711) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C31616 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C711 + (C19463 + C19464) * C31630 -
             (C19971 + C19972) * C712 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31337) *
              C1977 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C711 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31630 -
             (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
              C19032 * C1421) *
                 C712 -
             (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
              C19032 * C1436) *
                 C31418) *
                C13436 +
            ((C19465 + C19466) * C711 + (C19467 + C19468) * C31630 -
             (C21403 + C21404) * C712 - (C21405 + C21406) * C31418) *
                C13437) *
               C31541 * C31616 +
           (((C21404 + C21403) * C712 -
             ((C19468 + C19467) * C31630 + (C19466 + C19465) * C711) +
             (C21406 + C21405) * C31418) *
                C13436 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C712 -
             ((C19469 + C19470) * C31630 + (C19471 + C19472) * C711) +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31418) *
                C13437) *
               C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1547 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1541 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1548 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C1542 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C1549 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C1546 + (C19071 + C19072) * C1540 -
            (C19263 + C19264) * C1547 - (C19265 + C19266) * C1541 +
            (C19267 + C19268) * C1548 + (C19269 + C19270) * C1542 -
            (C20487 + C20488) * C1549 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C31327 * C31631 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C1547 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1540 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1546) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C1541 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C1548 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C1542 +
            (C19034 * C1854 + C19032 * C1857 + C19035 * C5919 +
             C19033 * C5923) *
                C1549 +
            (C19034 * C1858 + C19032 * C1863 + C19035 * C5924 +
             C19033 * C5928) *
                C31669) *
               C13436 +
           ((C19967 + C19968) * C1547 -
            ((C19460 + C19459) * C1540 + (C19458 + C19457) * C1546) +
            (C19969 + C19970) * C1541 - (C20693 + C20694) * C1548 -
            (C20695 + C20696) * C1542 +
            (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
             C19033 * C6767) *
                C1549 +
            (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
             C19033 * C6769) *
                C31669) *
               C13437) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C712 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
             (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C299 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C712 -
             ((C19073 + C19074) * C31630 + (C19075 + C19076) * C711) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C300 +
           (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
             (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
                C13436 +
            ((C19077 + C19078) * C711 + (C19079 + C19080) * C31630 -
             (C19611 + C19612) * C712 - (C19613 + C19614) * C31418) *
                C13437) *
               C31541 * C31653) *
              C31631 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C712 -
             ((C19460 + C19459) * C31630 + (C19458 + C19457) * C711) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C299 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C711 + (C19463 + C19464) * C31630 -
             (C19971 + C19972) * C712 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C300 +
           (((C19972 + C19971) * C712 -
             ((C19464 + C19463) * C31630 + (C19462 + C19461) * C711) +
             (C19974 + C19973) * C31418) *
                C13436 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C712 -
             ((C19753 + C19754) * C31630 + (C19755 + C19756) * C711) +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31418) *
                C13437) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C711 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31630 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C712 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31418) *
               C13436 +
           ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
            (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
               C13437) *
              C31541 * C31327 * C2448 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C712 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31630 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C711) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C31418) *
               C13436 +
           ((C19967 + C19968) * C712 -
            ((C19460 + C19459) * C31630 + (C19458 + C19457) * C711) +
            (C19969 + C19970) * C31418) *
               C13437) *
              C31541 * C31327 * C2449 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C711 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31630 -
            (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
             C19032 * C1421) *
                C712 -
            (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
             C19032 * C1436) *
                C31418) *
               C13436 +
           ((C19465 + C19466) * C711 + (C19467 + C19468) * C31630 -
            (C21403 + C21404) * C712 - (C21405 + C21406) * C31418) *
               C13437) *
              C31541 * C31327 * C2450 +
          (((C19034 * C2570 + C19032 * C2573 + C19035 * C6609 +
             C19033 * C6613) *
                C712 -
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C31630 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C711) +
            (C19034 * C2574 + C19032 * C2579 + C19035 * C6614 +
             C19033 * C6618) *
                C31418) *
               C13436 +
           ((C19034 * C2571 + C19032 * C2575 + C19035 * C10914 +
             C19033 * C10915) *
                C712 -
            ((C21548 + C21547) * C31630 + (C21546 + C21545) * C711) +
            (C19034 * C2576 + C19032 * C2580 + C19035 * C10916 +
             C19033 * C10917) *
                C31418) *
               C13437) *
              C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19034 * C115 + C19032 * C122 + C19035 * C520 +
                 C19033 * C534) *
                    C114 +
                (C19034 * C123 + C19032 * C136 + C19035 * C533 +
                 C19033 * C550) *
                    C31355) *
                   C13436 +
               ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) *
                   C13437) *
                  C31541 * C107 -
              (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) *
                   C13437 +
               ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) *
                   C13436) *
                  C31541 * C108 +
              (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) *
                   C13436 +
               ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) *
                   C13437) *
                  C31541 * C109 -
              (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) *
                   C13437 +
               ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) *
                   C13436) *
                  C31541 * C110 +
              (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) *
                   C13436 +
               ((C19034 * C120 + C19032 * C133 + C19035 * C845 +
                 C19033 * C846) *
                    C114 +
                (C19034 * C132 + C19032 * C141 + C19035 * C847 +
                 C19033 * C848) *
                    C31355) *
                   C13437) *
                  C31541 * C111) *
             C31373 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19034 * C115 + C19032 * C122 + C19035 * C520 +
                 C19033 * C534) *
                    C302 +
                (C19034 * C123 + C19032 * C136 + C19035 * C533 +
                 C19033 * C550) *
                    C31696 -
                (C19035 * C1004 + C19033 * C1009 + C19034 * C305 +
                 C19032 * C315) *
                    C303 -
                (C19035 * C1010 + C19033 * C1019 + C19034 * C316 +
                 C19032 * C335) *
                    C31684 +
                (C19034 * C306 + C19032 * C317 + C19035 * C1406 +
                 C19033 * C1415) *
                    C304 +
                (C19034 * C318 + C19032 * C336 + C19035 * C1416 +
                 C19033 * C1433) *
                    C31659) *
                   C13436 +
               ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
                (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
                (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
                   C13437) *
                  C31541 * C299 +
              (((C19264 + C19263) * C303 -
                ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
                (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
                (C19270 + C19269) * C31659) *
                   C13436 +
               ((C19271 + C19272) * C303 -
                ((C19073 + C19074) * C31696 + (C19075 + C19076) * C302) +
                (C19273 + C19274) * C31684 - (C19275 + C19276) * C304 -
                (C19277 + C19278) * C31659) *
                   C13437) *
                  C31541 * C300 +
              (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
                (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
                (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
                   C13436 +
               ((C19077 + C19078) * C302 + (C19079 + C19080) * C31696 -
                (C19035 * C1007 + C19033 * C1015 + C19034 * C311 +
                 C19032 * C327) *
                    C303 -
                (C19035 * C1016 + C19033 * C1022 + C19034 * C328 +
                 C19032 * C341) *
                    C31684 +
                (C19034 * C312 + C19032 * C329 + C19035 * C1728 +
                 C19033 * C1729) *
                    C304 +
                (C19034 * C330 + C19032 * C342 + C19035 * C1730 +
                 C19033 * C1731) *
                    C31659) *
                   C13437) *
                  C31541 * C31653) *
             C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C299 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C300 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C31653) *
              C31697 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C300 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C299 -
           (((C19035 * C543 + C19033 * C555 + C19034 * C532 + C19032 * C549) *
                 C31355 +
             (C19035 * C525 + C19033 * C544 + C19034 * C519 + C19032 * C531) *
                 C114) *
                C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C31653) *
              C31686 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C13436 +
            ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
               C31541 * C299 -
           (((C19469 + C19470) * C31355 + (C19471 + C19472) * C114) * C13437 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C13436) *
               C31541 * C300 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C13436 +
            ((C19034 * C525 + C19032 * C544 + C19035 * C2452 + C19033 * C2453) *
                 C114 +
             (C19034 * C543 + C19032 * C555 + C19035 * C2454 + C19033 * C2455) *
                 C31355) *
                C13437) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1174 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1168 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1175 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
            (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
            (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C13436 +
           ((C19271 + C19272) * C1174 -
            ((C19073 + C19074) * C1167 + (C19075 + C19076) * C1173) +
            (C19273 + C19274) * C1168 - (C19275 + C19276) * C1175 -
            (C19277 + C19278) * C31659) *
               C13437) *
              C31541 * C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C13436 +
           ((C19077 + C19078) * C1173 + (C19079 + C19080) * C1167 -
            (C19611 + C19612) * C1174 - (C19613 + C19614) * C1168 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C1175 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31659) *
               C13437) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
               C1268 -
           (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
               C1262 +
           (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
               C1269 +
           (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
               C1263 -
           (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 + C19032 * C1278) *
               C1270 -
           (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 + C19032 * C1290) *
               C1264 +
           (C19034 * C1273 + C19032 * C1280 + C19035 * C5918 + C19033 * C5921) *
               C1271 +
           (C19034 * C1281 + C19032 * C1291 + C19035 * C5922 + C19033 * C5927) *
               C1265) *
              C13436 +
          ((C19069 + C19070) * C1267 + (C19071 + C19072) * C1261 -
           (C19263 + C19264) * C1268 - (C19265 + C19266) * C1262 +
           (C19267 + C19268) * C1269 + (C19269 + C19270) * C1263 -
           (C19035 * C1855 + C19033 * C1859 + C19034 * C1274 + C19032 * C1282) *
               C1270 -
           (C19035 * C1860 + C19033 * C1864 + C19034 * C1283 + C19032 * C1292) *
               C1264 +
           (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 + C19033 * C6209) *
               C1271 +
           (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 + C19033 * C6211) *
               C1265) *
              C13437) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1174 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1168 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1175 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
            (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
            (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31327 * C31697 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C1174 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1167 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1173) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C1168 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C1175 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C31659) *
               C13436 +
           ((C19967 + C19968) * C1174 -
            ((C19460 + C19459) * C1167 + (C19458 + C19457) * C1173) +
            (C19969 + C19970) * C1168 -
            (C19035 * C1412 + C19033 * C1427 + C19034 * C1407 +
             C19032 * C1417) *
                C1175 -
            (C19035 * C1428 + C19033 * C1439 + C19034 * C1418 +
             C19032 * C1434) *
                C31659) *
               C13437) *
              C31541 * C31327 * C31686 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C1173 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C1167 -
            (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
             C19032 * C1421) *
                C1174 -
            (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
             C19032 * C1436) *
                C1168 +
            (C19034 * C1410 + C19032 * C1423 + C19035 * C6608 +
             C19033 * C6612) *
                C1175 +
            (C19034 * C1424 + C19032 * C1437 + C19035 * C6611 +
             C19033 * C6617) *
                C31659) *
               C13436 +
           ((C19465 + C19466) * C1173 + (C19467 + C19468) * C1167 -
            (C19035 * C2571 + C19033 * C2575 + C19034 * C1411 +
             C19032 * C1425) *
                C1174 -
            (C19035 * C2576 + C19033 * C2580 + C19034 * C1426 +
             C19032 * C1438) *
                C1168 +
            (C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
             C19033 * C6875) *
                C1175 +
            (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
             C19033 * C6877) *
                C31659) *
               C13437) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C31693 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C31680 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C31653) *
              C1976 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C31680 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C31693 -
           (((C19753 + C19754) * C31355 + (C19755 + C19756) * C114) * C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C31653) *
              C1977 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C13436 +
            ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
               C31541 * C31693 -
           (((C19469 + C19470) * C31355 + (C19471 + C19472) * C114) * C13437 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C13436) *
               C31541 * C31680 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C13436 +
            ((C19034 * C525 + C19032 * C544 + C19035 * C2452 + C19033 * C2453) *
                 C114 +
             (C19034 * C543 + C19032 * C555 + C19035 * C2454 + C19033 * C2455) *
                 C31355) *
                C13437) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C303 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31684 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C304 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
            (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
            (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31327 * C1976 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C303 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31696 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C302) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C31684 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C304 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C31659) *
               C13436 +
           ((C19967 + C19968) * C303 -
            ((C19460 + C19459) * C31696 + (C19458 + C19457) * C302) +
            (C19969 + C19970) * C31684 - (C20693 + C20694) * C304 -
            (C20695 + C20696) * C31659) *
               C13437) *
              C31541 * C31327 * C1977 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C302 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31696 -
            (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
             C19032 * C1421) *
                C303 -
            (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
             C19032 * C1436) *
                C31684 +
            (C19034 * C1410 + C19032 * C1423 + C19035 * C6608 +
             C19033 * C6612) *
                C304 +
            (C19034 * C1424 + C19032 * C1437 + C19035 * C6611 +
             C19033 * C6617) *
                C31659) *
               C13436 +
           ((C19465 + C19466) * C302 + (C19467 + C19468) * C31696 -
            (C19035 * C2571 + C19033 * C2575 + C19034 * C1411 +
             C19032 * C1425) *
                C303 -
            (C19035 * C2576 + C19033 * C2580 + C19034 * C1426 +
             C19032 * C1438) *
                C31684 +
            (C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
             C19033 * C6875) *
                C304 +
            (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
             C19033 * C6877) *
                C31659) *
               C13437) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C13436 +
           ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
              C31541 * C31327 * C2151 -
          (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
           ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                C31355 +
            (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                C114) *
               C13436) *
              C31541 * C31327 * C2152 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C114 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31355) *
               C13436 +
           ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
              C31541 * C31327 * C2153 -
          (((C19035 * C2171 + C19033 * C2178 + C19034 * C2164 +
             C19032 * C2175) *
                C31355 +
            (C19035 * C2160 + C19033 * C2170 + C19034 * C2157 +
             C19032 * C2165) *
                C114) *
               C13437 +
           ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
             C19032 * C2176) *
                C31355 +
            (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
             C19032 * C2167) *
                C114) *
               C13436) *
              C31541 * C31327 * C2154 +
          (((C19034 * C2159 + C19032 * C2168 + C19035 * C10760 +
             C19033 * C10763) *
                C114 +
            (C19034 * C2169 + C19032 * C2177 + C19035 * C10762 +
             C19033 * C10766) *
                C31355) *
               C13436 +
           ((C19034 * C2160 + C19032 * C2170 + C19035 * C11016 +
             C19033 * C11017) *
                C114 +
            (C19034 * C2171 + C19032 * C2178 + C19035 * C11018 +
             C19033 * C11019) *
                C31355) *
               C13437) *
              C31541 * C31327 * C2155)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C1173 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C1167 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C1174 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C1168 +
             (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                 C1175 +
             (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                 C31659) *
                C13436 +
            ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
             (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
             (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
                C13437) *
               C31541 * C31616 +
           (((C19264 + C19263) * C1174 -
             ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
             (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
             (C19270 + C19269) * C31659) *
                C13436 +
            ((C19271 + C19272) * C1174 -
             ((C19073 + C19074) * C1167 + (C19075 + C19076) * C1173) +
             (C19273 + C19274) * C1168 - (C19275 + C19276) * C1175 -
             (C19277 + C19278) * C31659) *
                C13437) *
               C31541 * C31337) *
              C31631 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C1174 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C1167 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C1173) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C1168 -
             (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
              C19032 * C1415) *
                 C1175 -
             (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
              C19032 * C1433) *
                 C31659) *
                C13436 +
            ((C19967 + C19968) * C1174 -
             ((C19460 + C19459) * C1167 + (C19458 + C19457) * C1173) +
             (C19969 + C19970) * C1168 - (C20693 + C20694) * C1175 -
             (C20695 + C20696) * C31659) *
                C13437) *
               C31541 * C31616 +
           (((C19457 + C19458) * C1173 + (C19459 + C19460) * C1167 -
             (C19968 + C19967) * C1174 - (C19970 + C19969) * C1168 +
             (C20694 + C20693) * C1175 + (C20696 + C20695) * C31659) *
                C13436 +
            ((C19461 + C19462) * C1173 + (C19463 + C19464) * C1167 -
             (C19971 + C19972) * C1174 - (C19973 + C19974) * C1168 +
             (C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C1175 +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31659) *
                C13437) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C707 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C708 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C709 -
           (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) * C13437 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C13436) *
               C31541 * C31663) *
              C31631 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C708 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C707 -
           (((C19753 + C19754) * C31355 + (C19755 + C19756) * C114) * C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C709 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C13436 +
            ((C19034 * C521 + C19032 * C536 + C19035 * C526 + C19033 * C545) *
                 C114 +
             (C19034 * C535 + C19032 * C551 + C19035 * C546 + C19033 * C556) *
                 C31355) *
                C13437) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C31616 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C31337) *
              C2448 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C31337 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C31616) *
              C2449 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C13436 +
            ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
               C31541 * C31616 -
           (((C19469 + C19470) * C31355 + (C19471 + C19472) * C114) * C13437 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C13436) *
               C31541 * C31337) *
              C2450 +
          ((((C21545 + C21546) * C114 + (C21547 + C21548) * C31355) * C13436 +
            ((C19034 * C2156 + C19032 * C2163 + C19035 * C2161 +
              C19033 * C2172) *
                 C114 +
             (C19034 * C2162 + C19032 * C2174 + C19035 * C2173 +
              C19033 * C2179) *
                 C31355) *
                C13437) *
               C31541 * C31337 -
           (((C21548 + C21547) * C31355 + (C21546 + C21545) * C114) * C13437 +
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C31355 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C114) *
                C13436) *
               C31541 * C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C303 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31684 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C304 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
            (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
            (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C299 +
          (((C19264 + C19263) * C303 -
            ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
            (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
            (C19270 + C19269) * C31659) *
               C13436 +
           ((C19271 + C19272) * C303 -
            ((C19073 + C19074) * C31696 + (C19075 + C19076) * C302) +
            (C19273 + C19274) * C31684 - (C19275 + C19276) * C304 -
            (C19277 + C19278) * C31659) *
               C13437) *
              C31541 * C300 +
          (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
            (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
            (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
               C13436 +
           ((C19077 + C19078) * C302 + (C19079 + C19080) * C31696 -
            (C19035 * C1007 + C19033 * C1015 + C19034 * C311 + C19032 * C327) *
                C303 -
            (C19035 * C1016 + C19033 * C1022 + C19034 * C328 + C19032 * C341) *
                C31684 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C304 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31659) *
               C13437) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C13436 +
           ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
              C31541 * C107 -
          (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
           ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
              C31541 * C108 +
          (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
           ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
              C31541 * C109 -
          (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) * C13437 +
           ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C13436) *
              C31541 * C110 +
          (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) * C13436 +
           ((C19034 * C120 + C19032 * C133 + C19035 * C845 + C19033 * C846) *
                C114 +
            (C19034 * C132 + C19032 * C141 + C19035 * C847 + C19033 * C848) *
                C31355) *
               C13437) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1174 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1168 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1175 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
            (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
            (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C13436 +
           ((C19271 + C19272) * C1174 -
            ((C19073 + C19074) * C1167 + (C19075 + C19076) * C1173) +
            (C19273 + C19274) * C1168 - (C19275 + C19276) * C1175 -
            (C19277 + C19278) * C31659) *
               C13437) *
              C31541 * C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C13436 +
           ((C19077 + C19078) * C1173 + (C19079 + C19080) * C1167 -
            (C19611 + C19612) * C1174 - (C19613 + C19614) * C1168 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C1175 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31659) *
               C13437) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
               C1268 -
           (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
               C1262 +
           (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
               C1269 +
           (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
               C1263 -
           (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 + C19032 * C1278) *
               C1270 -
           (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 + C19032 * C1290) *
               C1264 +
           (C19034 * C1273 + C19032 * C1280 + C19035 * C5918 + C19033 * C5921) *
               C1271 +
           (C19034 * C1281 + C19032 * C1291 + C19035 * C5922 + C19033 * C5927) *
               C1265) *
              C13436 +
          ((C19069 + C19070) * C1267 + (C19071 + C19072) * C1261 -
           (C19263 + C19264) * C1268 - (C19265 + C19266) * C1262 +
           (C19267 + C19268) * C1269 + (C19269 + C19270) * C1263 -
           (C19035 * C1855 + C19033 * C1859 + C19034 * C1274 + C19032 * C1282) *
               C1270 -
           (C19035 * C1860 + C19033 * C1864 + C19034 * C1283 + C19032 * C1292) *
               C1264 +
           (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 + C19033 * C6209) *
               C1271 +
           (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 + C19033 * C6211) *
               C1265) *
              C13437) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C31693 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C31680 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C31653) *
              C1976 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C31680 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C31693 -
           (((C19753 + C19754) * C31355 + (C19755 + C19756) * C114) * C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C31653) *
              C1977 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C13436 +
            ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
               C31541 * C31693 -
           (((C19469 + C19470) * C31355 + (C19471 + C19472) * C114) * C13437 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C13436) *
               C31541 * C31680 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C13436 +
            ((C19034 * C525 + C19032 * C544 + C19035 * C2452 + C19033 * C2453) *
                 C114 +
             (C19034 * C543 + C19032 * C555 + C19035 * C2454 + C19033 * C2455) *
                 C31355) *
                C13437) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C303 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31684 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C304 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
            (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
            (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31327 * C1976 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C303 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31696 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C302) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C31684 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C304 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C31659) *
               C13436 +
           ((C19967 + C19968) * C303 -
            ((C19460 + C19459) * C31696 + (C19458 + C19457) * C302) +
            (C19969 + C19970) * C31684 - (C20693 + C20694) * C304 -
            (C20695 + C20696) * C31659) *
               C13437) *
              C31541 * C31327 * C1977 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C302 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C31696 -
            (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
             C19032 * C1421) *
                C303 -
            (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
             C19032 * C1436) *
                C31684 +
            (C19034 * C1410 + C19032 * C1423 + C19035 * C6608 +
             C19033 * C6612) *
                C304 +
            (C19034 * C1424 + C19032 * C1437 + C19035 * C6611 +
             C19033 * C6617) *
                C31659) *
               C13436 +
           ((C19465 + C19466) * C302 + (C19467 + C19468) * C31696 -
            (C19035 * C2571 + C19033 * C2575 + C19034 * C1411 +
             C19032 * C1425) *
                C303 -
            (C19035 * C2576 + C19033 * C2580 + C19034 * C1426 +
             C19032 * C1438) *
                C31684 +
            (C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
             C19033 * C6875) *
                C304 +
            (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
             C19033 * C6877) *
                C31659) *
               C13437) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C712 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
             (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C31332 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C712 -
             ((C19073 + C19074) * C31630 + (C19075 + C19076) * C711) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31340 +
           (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
             (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
                C13436 +
            ((C19077 + C19078) * C711 + (C19079 + C19080) * C31630 -
             (C19611 + C19612) * C712 - (C19613 + C19614) * C31418) *
                C13437) *
               C31541 * C3111) *
              C3547 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C712 -
             ((C19460 + C19459) * C31630 + (C19458 + C19457) * C711) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C31332 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C711 + (C19463 + C19464) * C31630 -
             (C19971 + C19972) * C712 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31340 +
           (((C19972 + C19971) * C712 -
             ((C19464 + C19463) * C31630 + (C19462 + C19461) * C711) +
             (C19974 + C19973) * C31418) *
                C13436 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C712 -
             ((C19753 + C19754) * C31630 + (C19755 + C19756) * C711) +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31418) *
                C13437) *
               C31541 * C3111) *
              C31460)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C712 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
             (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C2812 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C712 -
             ((C19073 + C19074) * C31630 + (C19075 + C19076) * C711) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C31337) *
              C31456 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C712 -
             ((C19460 + C19459) * C31630 + (C19458 + C19457) * C711) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C2812 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C711 + (C19463 + C19464) * C31630 -
             (C19971 + C19972) * C712 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C31337) *
              C31463 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C711 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31630 -
             (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
              C19032 * C1421) *
                 C712 -
             (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
              C19032 * C1436) *
                 C31418) *
                C13436 +
            ((C19465 + C19466) * C711 + (C19467 + C19468) * C31630 -
             (C21403 + C21404) * C712 - (C21405 + C21406) * C31418) *
                C13437) *
               C31541 * C2812 +
           (((C21404 + C21403) * C712 -
             ((C19468 + C19467) * C31630 + (C19466 + C19465) * C711) +
             (C21406 + C21405) * C31418) *
                C13436 +
            ((C19034 * C1413 + C19032 * C1429 + C19035 * C2572 +
              C19033 * C2577) *
                 C712 -
             ((C19469 + C19470) * C31630 + (C19471 + C19472) * C711) +
             (C19034 * C1430 + C19032 * C1440 + C19035 * C2578 +
              C19033 * C2581) *
                 C31418) *
                C13437) *
               C31541 * C31337) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C302 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31696 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C303 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31684 +
             (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                 C304 +
             (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                 C31659) *
                C13436 +
            ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
             (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
             (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
                C13437) *
               C31541 * C2812 +
           (((C19264 + C19263) * C303 -
             ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
             (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
             (C19270 + C19269) * C31659) *
                C13436 +
            ((C19271 + C19272) * C303 -
             ((C19073 + C19074) * C31696 + (C19075 + C19076) * C302) +
             (C19273 + C19274) * C31684 - (C19275 + C19276) * C304 -
             (C19277 + C19278) * C31659) *
                C13437) *
               C31541 * C31337) *
              C3547 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C303 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31696 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C302) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31684 -
             (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
              C19032 * C1415) *
                 C304 -
             (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
              C19032 * C1433) *
                 C31659) *
                C13436 +
            ((C19967 + C19968) * C303 -
             ((C19460 + C19459) * C31696 + (C19458 + C19457) * C302) +
             (C19969 + C19970) * C31684 - (C20693 + C20694) * C304 -
             (C20695 + C20696) * C31659) *
                C13437) *
               C31541 * C2812 +
           (((C19457 + C19458) * C302 + (C19459 + C19460) * C31696 -
             (C19968 + C19967) * C303 - (C19970 + C19969) * C31684 +
             (C20694 + C20693) * C304 + (C20696 + C20695) * C31659) *
                C13436 +
            ((C19461 + C19462) * C302 + (C19463 + C19464) * C31696 -
             (C19971 + C19972) * C303 - (C19973 + C19974) * C31684 +
             (C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C304 +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31659) *
                C13437) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C31702 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C31695 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C31682 -
           (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) * C13437 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C13436) *
               C31541 * C31663) *
              C3547 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C31695 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C31702 -
           (((C19753 + C19754) * C31355 + (C19755 + C19756) * C114) * C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C31682 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C13436 +
            ((C19034 * C521 + C19032 * C536 + C19035 * C526 + C19033 * C545) *
                 C114 +
             (C19034 * C535 + C19032 * C551 + C19035 * C546 + C19033 * C556) *
                 C31355) *
                C13437) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C2812 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C31337) *
              C31704 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C31337 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C2812) *
              C31701 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C13436 +
            ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
               C31541 * C2812 -
           (((C19469 + C19470) * C31355 + (C19471 + C19472) * C114) * C13437 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C13436) *
               C31541 * C31337) *
              C31692 +
          ((((C21545 + C21546) * C114 + (C21547 + C21548) * C31355) * C13436 +
            ((C19034 * C2156 + C19032 * C2163 + C19035 * C2161 +
              C19033 * C2172) *
                 C114 +
             (C19034 * C2162 + C19032 * C2174 + C19035 * C2173 +
              C19033 * C2179) *
                 C31355) *
                C13437) *
               C31541 * C31337 -
           (((C21548 + C21547) * C31355 + (C21546 + C21545) * C114) * C13437 +
            ((C19035 * C2169 + C19033 * C2177 + C19034 * C2166 +
              C19032 * C2176) *
                 C31355 +
             (C19035 * C2159 + C19033 * C2168 + C19034 * C2158 +
              C19032 * C2167) *
                 C114) *
                C13436) *
               C31541 * C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C31332 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C31340 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C3111) *
              C31456 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C31340 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C31332 -
           (((C19753 + C19754) * C31355 + (C19755 + C19756) * C114) * C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C3111) *
              C31463 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C13436 +
            ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
               C31541 * C31332 -
           (((C19469 + C19470) * C31355 + (C19471 + C19472) * C114) * C13437 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C13436) *
               C31541 * C31340 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C13436 +
            ((C19034 * C525 + C19032 * C544 + C19035 * C2452 + C19033 * C2453) *
                 C114 +
             (C19034 * C543 + C19032 * C555 + C19035 * C2454 + C19033 * C2455) *
                 C31355) *
                C13437) *
               C31541 * C3111) *
              C4067)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C31702 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C31695 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C31682 -
           (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) * C13437 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C13436) *
               C31541 * C31663) *
              C3547 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C31695 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C31702 -
           (((C19753 + C19754) * C31355 + (C19755 + C19756) * C114) * C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C31682 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C13436 +
            ((C19034 * C521 + C19032 * C536 + C19035 * C526 + C19033 * C545) *
                 C114 +
             (C19034 * C535 + C19032 * C551 + C19035 * C546 + C19033 * C556) *
                 C31355) *
                C13437) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C302 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31696 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C303 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31684 +
             (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                 C304 +
             (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                 C31659) *
                C13436 +
            ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
             (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
             (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
                C13437) *
               C31541 * C2812 +
           (((C19264 + C19263) * C303 -
             ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
             (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
             (C19270 + C19269) * C31659) *
                C13436 +
            ((C19271 + C19272) * C303 -
             ((C19073 + C19074) * C31696 + (C19075 + C19076) * C302) +
             (C19273 + C19274) * C31684 - (C19275 + C19276) * C304 -
             (C19277 + C19278) * C31659) *
                C13437) *
               C31541 * C31337) *
              C3547 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C303 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31696 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C302) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31684 -
             (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
              C19032 * C1415) *
                 C304 -
             (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
              C19032 * C1433) *
                 C31659) *
                C13436 +
            ((C19967 + C19968) * C303 -
             ((C19460 + C19459) * C31696 + (C19458 + C19457) * C302) +
             (C19969 + C19970) * C31684 - (C20693 + C20694) * C304 -
             (C20695 + C20696) * C31659) *
                C13437) *
               C31541 * C2812 +
           (((C19457 + C19458) * C302 + (C19459 + C19460) * C31696 -
             (C19968 + C19967) * C303 - (C19970 + C19969) * C31684 +
             (C20694 + C20693) * C304 + (C20696 + C20695) * C31659) *
                C13436 +
            ((C19461 + C19462) * C302 + (C19463 + C19464) * C31696 -
             (C19971 + C19972) * C303 - (C19973 + C19974) * C31684 +
             (C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C304 +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31659) *
                C13437) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C711 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31630 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C712 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31418) *
               C13436 +
           ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
            (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
               C13437) *
              C31541 * C707 +
          (((C19264 + C19263) * C712 -
            ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
            (C19266 + C19265) * C31418) *
               C13436 +
           ((C19271 + C19272) * C712 -
            ((C19073 + C19074) * C31630 + (C19075 + C19076) * C711) +
            (C19273 + C19274) * C31418) *
               C13437) *
              C31541 * C708 +
          (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
            (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
               C13436 +
           ((C19077 + C19078) * C711 + (C19079 + C19080) * C31630 -
            (C19611 + C19612) * C712 - (C19613 + C19614) * C31418) *
               C13437) *
              C31541 * C709 +
          (((C19612 + C19611) * C712 -
            ((C19080 + C19079) * C31630 + (C19078 + C19077) * C711) +
            (C19614 + C19613) * C31418) *
               C13436 +
           ((C19034 * C313 + C19032 * C331 + C19035 * C1008 + C19033 * C1017) *
                C712 -
            ((C19081 + C19082) * C31630 + (C19083 + C19084) * C711) +
            (C19034 * C332 + C19032 * C343 + C19035 * C1018 + C19033 * C1023) *
                C31418) *
               C13437) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1547 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1541 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1548 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C1542 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C1549 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C1546 + (C19071 + C19072) * C1540 -
            (C19263 + C19264) * C1547 - (C19265 + C19266) * C1541 +
            (C19267 + C19268) * C1548 + (C19269 + C19270) * C1542 -
            (C20487 + C20488) * C1549 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C31616 +
          (((C19264 + C19263) * C1547 -
            ((C19072 + C19071) * C1540 + (C19070 + C19069) * C1546) +
            (C19266 + C19265) * C1541 - (C19268 + C19267) * C1548 -
            (C19270 + C19269) * C1542 + (C20488 + C20487) * C1549 +
            (C20490 + C20489) * C31669) *
               C13436 +
           ((C19271 + C19272) * C1547 -
            ((C19073 + C19074) * C1540 + (C19075 + C19076) * C1546) +
            (C19273 + C19274) * C1541 - (C19275 + C19276) * C1548 -
            (C19277 + C19278) * C1542 +
            (C19034 * C1276 + C19032 * C1286 + C19035 * C1856 +
             C19033 * C1861) *
                C1549 +
            (C19034 * C1287 + C19032 * C1294 + C19035 * C1862 +
             C19033 * C1865) *
                C31669) *
               C13437) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C711 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31630 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C712 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C31418) *
                C13436 +
            ((C19069 + C19070) * C711 + (C19071 + C19072) * C31630 -
             (C19263 + C19264) * C712 - (C19265 + C19266) * C31418) *
                C13437) *
               C31541 * C299 +
           (((C19264 + C19263) * C712 -
             ((C19072 + C19071) * C31630 + (C19070 + C19069) * C711) +
             (C19266 + C19265) * C31418) *
                C13436 +
            ((C19271 + C19272) * C712 -
             ((C19073 + C19074) * C31630 + (C19075 + C19076) * C711) +
             (C19273 + C19274) * C31418) *
                C13437) *
               C31541 * C300 +
           (((C19076 + C19075) * C711 + (C19074 + C19073) * C31630 -
             (C19272 + C19271) * C712 - (C19274 + C19273) * C31418) *
                C13436 +
            ((C19077 + C19078) * C711 + (C19079 + C19080) * C31630 -
             (C19611 + C19612) * C712 - (C19613 + C19614) * C31418) *
                C13437) *
               C31541 * C31653) *
              C31631 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C712 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C31630 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C711) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C31418) *
                C13436 +
            ((C19967 + C19968) * C712 -
             ((C19460 + C19459) * C31630 + (C19458 + C19457) * C711) +
             (C19969 + C19970) * C31418) *
                C13437) *
               C31541 * C299 +
           (((C19457 + C19458) * C711 + (C19459 + C19460) * C31630 -
             (C19968 + C19967) * C712 - (C19970 + C19969) * C31418) *
                C13436 +
            ((C19461 + C19462) * C711 + (C19463 + C19464) * C31630 -
             (C19971 + C19972) * C712 - (C19973 + C19974) * C31418) *
                C13437) *
               C31541 * C300 +
           (((C19972 + C19971) * C712 -
             ((C19464 + C19463) * C31630 + (C19462 + C19461) * C711) +
             (C19974 + C19973) * C31418) *
                C13436 +
            ((C19034 * C1007 + C19032 * C1015 + C19035 * C2326 +
              C19033 * C2327) *
                 C712 -
             ((C19753 + C19754) * C31630 + (C19755 + C19756) * C711) +
             (C19034 * C1016 + C19032 * C1022 + C19035 * C2328 +
              C19033 * C2329) *
                 C31418) *
                C13437) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1546 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1540 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1547 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1541 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1548 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C1542 -
            (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 +
             C19032 * C1278) *
                C1549 -
            (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 +
             C19032 * C1290) *
                C31669) *
               C13436 +
           ((C19069 + C19070) * C1546 + (C19071 + C19072) * C1540 -
            (C19263 + C19264) * C1547 - (C19265 + C19266) * C1541 +
            (C19267 + C19268) * C1548 + (C19269 + C19270) * C1542 -
            (C20487 + C20488) * C1549 - (C20489 + C20490) * C31669) *
               C13437) *
              C31541 * C31327 * C31631 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C1547 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1540 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1546) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C1541 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C1548 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C1542 +
            (C19034 * C1854 + C19032 * C1857 + C19035 * C5919 +
             C19033 * C5923) *
                C1549 +
            (C19034 * C1858 + C19032 * C1863 + C19035 * C5924 +
             C19033 * C5928) *
                C31669) *
               C13436 +
           ((C19967 + C19968) * C1547 -
            ((C19460 + C19459) * C1540 + (C19458 + C19457) * C1546) +
            (C19969 + C19970) * C1541 - (C20693 + C20694) * C1548 -
            (C20695 + C20696) * C1542 +
            (C19034 * C1855 + C19032 * C1859 + C19035 * C6766 +
             C19033 * C6767) *
                C1549 +
            (C19034 * C1860 + C19032 * C1864 + C19035 * C6768 +
             C19033 * C6769) *
                C31669) *
               C13437) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C303 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31684 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C304 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
            (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
            (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C299 +
          (((C19264 + C19263) * C303 -
            ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
            (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
            (C19270 + C19269) * C31659) *
               C13436 +
           ((C19271 + C19272) * C303 -
            ((C19073 + C19074) * C31696 + (C19075 + C19076) * C302) +
            (C19273 + C19274) * C31684 - (C19275 + C19276) * C304 -
            (C19277 + C19278) * C31659) *
               C13437) *
              C31541 * C300 +
          (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
            (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
            (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
               C13436 +
           ((C19077 + C19078) * C302 + (C19079 + C19080) * C31696 -
            (C19035 * C1007 + C19033 * C1015 + C19034 * C311 + C19032 * C327) *
                C303 -
            (C19035 * C1016 + C19033 * C1022 + C19034 * C328 + C19032 * C341) *
                C31684 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C304 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31659) *
               C13437) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C13436 +
           ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
              C31541 * C107 -
          (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
           ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
              C31541 * C108 +
          (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
           ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
              C31541 * C109 -
          (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) * C13437 +
           ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C13436) *
              C31541 * C110 +
          (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) * C13436 +
           ((C19034 * C120 + C19032 * C133 + C19035 * C845 + C19033 * C846) *
                C114 +
            (C19034 * C132 + C19032 * C141 + C19035 * C847 + C19033 * C848) *
                C31355) *
               C13437) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C299 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C300 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C31653) *
              C31697 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C300 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C299 -
           (((C19035 * C543 + C19033 * C555 + C19034 * C532 + C19032 * C549) *
                 C31355 +
             (C19035 * C525 + C19033 * C544 + C19034 * C519 + C19032 * C531) *
                 C114) *
                C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C31653) *
              C31686 +
          ((((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                 C114 +
             (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                 C31355) *
                C13436 +
            ((C19465 + C19466) * C114 + (C19467 + C19468) * C31355) * C13437) *
               C31541 * C299 -
           (((C19469 + C19470) * C31355 + (C19471 + C19472) * C114) * C13437 +
            ((C19468 + C19467) * C31355 + (C19466 + C19465) * C114) * C13436) *
               C31541 * C300 +
           (((C19472 + C19471) * C114 + (C19470 + C19469) * C31355) * C13436 +
            ((C19034 * C525 + C19032 * C544 + C19035 * C2452 + C19033 * C2453) *
                 C114 +
             (C19034 * C543 + C19032 * C555 + C19035 * C2454 + C19033 * C2455) *
                 C31355) *
                C13437) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1174 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1168 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1175 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
            (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
            (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C13436 +
           ((C19271 + C19272) * C1174 -
            ((C19073 + C19074) * C1167 + (C19075 + C19076) * C1173) +
            (C19273 + C19274) * C1168 - (C19275 + C19276) * C1175 -
            (C19277 + C19278) * C31659) *
               C13437) *
              C31541 * C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C13436 +
           ((C19077 + C19078) * C1173 + (C19079 + C19080) * C1167 -
            (C19611 + C19612) * C1174 - (C19613 + C19614) * C1168 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C1175 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31659) *
               C13437) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
               C1268 -
           (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
               C1262 +
           (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
               C1269 +
           (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
               C1263 -
           (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 + C19032 * C1278) *
               C1270 -
           (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 + C19032 * C1290) *
               C1264 +
           (C19034 * C1273 + C19032 * C1280 + C19035 * C5918 + C19033 * C5921) *
               C1271 +
           (C19034 * C1281 + C19032 * C1291 + C19035 * C5922 + C19033 * C5927) *
               C1265) *
              C13436 +
          ((C19069 + C19070) * C1267 + (C19071 + C19072) * C1261 -
           (C19263 + C19264) * C1268 - (C19265 + C19266) * C1262 +
           (C19267 + C19268) * C1269 + (C19269 + C19270) * C1263 -
           (C19035 * C1855 + C19033 * C1859 + C19034 * C1274 + C19032 * C1282) *
               C1270 -
           (C19035 * C1860 + C19033 * C1864 + C19034 * C1283 + C19032 * C1292) *
               C1264 +
           (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 + C19033 * C6209) *
               C1271 +
           (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 + C19033 * C6211) *
               C1265) *
              C13437) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1174 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1168 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1175 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
            (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
            (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31327 * C31697 +
          (((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
             C19033 * C1421) *
                C1174 -
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C1167 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C1173) +
            (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
             C19033 * C1436) *
                C1168 -
            (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
             C19032 * C1415) *
                C1175 -
            (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
             C19032 * C1433) *
                C31659) *
               C13436 +
           ((C19967 + C19968) * C1174 -
            ((C19460 + C19459) * C1167 + (C19458 + C19457) * C1173) +
            (C19969 + C19970) * C1168 -
            (C19035 * C1412 + C19033 * C1427 + C19034 * C1407 +
             C19032 * C1417) *
                C1175 -
            (C19035 * C1428 + C19033 * C1439 + C19034 * C1418 +
             C19032 * C1434) *
                C31659) *
               C13437) *
              C31541 * C31327 * C31686 +
          (((C19034 * C522 + C19032 * C537 + C19035 * C2158 + C19033 * C2167) *
                C1173 +
            (C19034 * C538 + C19032 * C552 + C19035 * C2166 + C19033 * C2176) *
                C1167 -
            (C19035 * C2570 + C19033 * C2573 + C19034 * C1409 +
             C19032 * C1421) *
                C1174 -
            (C19035 * C2574 + C19033 * C2579 + C19034 * C1422 +
             C19032 * C1436) *
                C1168 +
            (C19034 * C1410 + C19032 * C1423 + C19035 * C6608 +
             C19033 * C6612) *
                C1175 +
            (C19034 * C1424 + C19032 * C1437 + C19035 * C6611 +
             C19033 * C6617) *
                C31659) *
               C13436 +
           ((C19465 + C19466) * C1173 + (C19467 + C19468) * C1167 -
            (C19035 * C2571 + C19033 * C2575 + C19034 * C1411 +
             C19032 * C1425) *
                C1174 -
            (C19035 * C2576 + C19033 * C2580 + C19034 * C1426 +
             C19032 * C1438) *
                C1168 +
            (C19034 * C1412 + C19032 * C1427 + C19035 * C6874 +
             C19033 * C6875) *
                C1175 +
            (C19034 * C1428 + C19032 * C1439 + C19035 * C6876 +
             C19033 * C6877) *
                C31659) *
               C13437) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C114 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C31355) *
                C13436 +
            ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
               C31541 * C707 -
           (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
            ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
               C31541 * C708 +
           (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
            ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
               C31541 * C709 -
           (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) * C13437 +
            ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C13436) *
               C31541 * C31663) *
              C31631 +
          ((((C19457 + C19458) * C114 + (C19459 + C19460) * C31355) * C13436 +
            ((C19461 + C19462) * C114 + (C19463 + C19464) * C31355) * C13437) *
               C31541 * C708 -
           (((C19460 + C19459) * C31355 + (C19458 + C19457) * C114) * C13437 +
            ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                 C31355 +
             (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                 C114) *
                C13436) *
               C31541 * C707 -
           (((C19753 + C19754) * C31355 + (C19755 + C19756) * C114) * C13437 +
            ((C19464 + C19463) * C31355 + (C19462 + C19461) * C114) * C13436) *
               C31541 * C709 +
           (((C19756 + C19755) * C114 + (C19754 + C19753) * C31355) * C13436 +
            ((C19034 * C521 + C19032 * C536 + C19035 * C526 + C19033 * C545) *
                 C114 +
             (C19034 * C535 + C19032 * C551 + C19035 * C546 + C19033 * C556) *
                 C31355) *
                C13437) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                 C1173 +
             (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                 C1167 -
             (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                 C1174 -
             (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                 C1168 +
             (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                 C1175 +
             (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                 C31659) *
                C13436 +
            ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
             (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
             (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
                C13437) *
               C31541 * C31616 +
           (((C19264 + C19263) * C1174 -
             ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
             (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
             (C19270 + C19269) * C31659) *
                C13436 +
            ((C19271 + C19272) * C1174 -
             ((C19073 + C19074) * C1167 + (C19075 + C19076) * C1173) +
             (C19273 + C19274) * C1168 - (C19275 + C19276) * C1175 -
             (C19277 + C19278) * C31659) *
                C13437) *
               C31541 * C31337) *
              C31631 +
          ((((C19034 * C1004 + C19032 * C1009 + C19035 * C1409 +
              C19033 * C1421) *
                 C1174 -
             ((C19035 * C538 + C19033 * C552 + C19034 * C533 + C19032 * C550) *
                  C1167 +
              (C19035 * C522 + C19033 * C537 + C19034 * C520 + C19032 * C534) *
                  C1173) +
             (C19034 * C1010 + C19032 * C1019 + C19035 * C1422 +
              C19033 * C1436) *
                 C1168 -
             (C19035 * C1410 + C19033 * C1423 + C19034 * C1406 +
              C19032 * C1415) *
                 C1175 -
             (C19035 * C1424 + C19033 * C1437 + C19034 * C1416 +
              C19032 * C1433) *
                 C31659) *
                C13436 +
            ((C19967 + C19968) * C1174 -
             ((C19460 + C19459) * C1167 + (C19458 + C19457) * C1173) +
             (C19969 + C19970) * C1168 - (C20693 + C20694) * C1175 -
             (C20695 + C20696) * C31659) *
                C13437) *
               C31541 * C31616 +
           (((C19457 + C19458) * C1173 + (C19459 + C19460) * C1167 -
             (C19968 + C19967) * C1174 - (C19970 + C19969) * C1168 +
             (C20694 + C20693) * C1175 + (C20696 + C20695) * C31659) *
                C13436 +
            ((C19461 + C19462) * C1173 + (C19463 + C19464) * C1167 -
             (C19971 + C19972) * C1174 - (C19973 + C19974) * C1168 +
             (C19034 * C1408 + C19032 * C1419 + C19035 * C1414 +
              C19033 * C1431) *
                 C1175 +
             (C19034 * C1420 + C19032 * C1435 + C19035 * C1432 +
              C19033 * C1441) *
                 C31659) *
                C13437) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C114 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31355) *
               C13436 +
           ((C19069 + C19070) * C114 + (C19071 + C19072) * C31355) * C13437) *
              C31541 * C107 -
          (((C19073 + C19074) * C31355 + (C19075 + C19076) * C114) * C13437 +
           ((C19072 + C19071) * C31355 + (C19070 + C19069) * C114) * C13436) *
              C31541 * C108 +
          (((C19076 + C19075) * C114 + (C19074 + C19073) * C31355) * C13436 +
           ((C19077 + C19078) * C114 + (C19079 + C19080) * C31355) * C13437) *
              C31541 * C109 -
          (((C19081 + C19082) * C31355 + (C19083 + C19084) * C114) * C13437 +
           ((C19080 + C19079) * C31355 + (C19078 + C19077) * C114) * C13436) *
              C31541 * C110 +
          (((C19084 + C19083) * C114 + (C19082 + C19081) * C31355) * C13436 +
           ((C19034 * C120 + C19032 * C133 + C19035 * C845 + C19033 * C846) *
                C114 +
            (C19034 * C132 + C19032 * C141 + C19035 * C847 + C19033 * C848) *
                C31355) *
               C13437) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C302 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C31696 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C303 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C31684 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C304 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C302 + (C19071 + C19072) * C31696 -
            (C19263 + C19264) * C303 - (C19265 + C19266) * C31684 +
            (C19267 + C19268) * C304 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C299 +
          (((C19264 + C19263) * C303 -
            ((C19072 + C19071) * C31696 + (C19070 + C19069) * C302) +
            (C19266 + C19265) * C31684 - (C19268 + C19267) * C304 -
            (C19270 + C19269) * C31659) *
               C13436 +
           ((C19271 + C19272) * C303 -
            ((C19073 + C19074) * C31696 + (C19075 + C19076) * C302) +
            (C19273 + C19274) * C31684 - (C19275 + C19276) * C304 -
            (C19277 + C19278) * C31659) *
               C13437) *
              C31541 * C300 +
          (((C19076 + C19075) * C302 + (C19074 + C19073) * C31696 -
            (C19272 + C19271) * C303 - (C19274 + C19273) * C31684 +
            (C19276 + C19275) * C304 + (C19278 + C19277) * C31659) *
               C13436 +
           ((C19077 + C19078) * C302 + (C19079 + C19080) * C31696 -
            (C19035 * C1007 + C19033 * C1015 + C19034 * C311 + C19032 * C327) *
                C303 -
            (C19035 * C1016 + C19033 * C1022 + C19034 * C328 + C19032 * C341) *
                C31684 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C304 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31659) *
               C13437) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
                C1173 +
            (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
                C1167 -
            (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
                C1174 -
            (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
                C1168 +
            (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
                C1175 +
            (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
                C31659) *
               C13436 +
           ((C19069 + C19070) * C1173 + (C19071 + C19072) * C1167 -
            (C19263 + C19264) * C1174 - (C19265 + C19266) * C1168 +
            (C19267 + C19268) * C1175 + (C19269 + C19270) * C31659) *
               C13437) *
              C31541 * C31693 +
          (((C19264 + C19263) * C1174 -
            ((C19072 + C19071) * C1167 + (C19070 + C19069) * C1173) +
            (C19266 + C19265) * C1168 - (C19268 + C19267) * C1175 -
            (C19270 + C19269) * C31659) *
               C13436 +
           ((C19271 + C19272) * C1174 -
            ((C19073 + C19074) * C1167 + (C19075 + C19076) * C1173) +
            (C19273 + C19274) * C1168 - (C19275 + C19276) * C1175 -
            (C19277 + C19278) * C31659) *
               C13437) *
              C31541 * C31680 +
          (((C19076 + C19075) * C1173 + (C19074 + C19073) * C1167 -
            (C19272 + C19271) * C1174 - (C19274 + C19273) * C1168 +
            (C19276 + C19275) * C1175 + (C19278 + C19277) * C31659) *
               C13436 +
           ((C19077 + C19078) * C1173 + (C19079 + C19080) * C1167 -
            (C19611 + C19612) * C1174 - (C19613 + C19614) * C1168 +
            (C19034 * C312 + C19032 * C329 + C19035 * C1728 + C19033 * C1729) *
                C1175 +
            (C19034 * C330 + C19032 * C342 + C19035 * C1730 + C19033 * C1731) *
                C31659) *
               C13437) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C19034 * C115 + C19032 * C122 + C19035 * C520 + C19033 * C534) *
               C1267 +
           (C19034 * C123 + C19032 * C136 + C19035 * C533 + C19033 * C550) *
               C1261 -
           (C19035 * C1004 + C19033 * C1009 + C19034 * C305 + C19032 * C315) *
               C1268 -
           (C19035 * C1010 + C19033 * C1019 + C19034 * C316 + C19032 * C335) *
               C1262 +
           (C19034 * C306 + C19032 * C317 + C19035 * C1406 + C19033 * C1415) *
               C1269 +
           (C19034 * C318 + C19032 * C336 + C19035 * C1416 + C19033 * C1433) *
               C1263 -
           (C19035 * C1854 + C19033 * C1857 + C19034 * C1272 + C19032 * C1278) *
               C1270 -
           (C19035 * C1858 + C19033 * C1863 + C19034 * C1279 + C19032 * C1290) *
               C1264 +
           (C19034 * C1273 + C19032 * C1280 + C19035 * C5918 + C19033 * C5921) *
               C1271 +
           (C19034 * C1281 + C19032 * C1291 + C19035 * C5922 + C19033 * C5927) *
               C1265) *
              C13436 +
          ((C19069 + C19070) * C1267 + (C19071 + C19072) * C1261 -
           (C19263 + C19264) * C1268 - (C19265 + C19266) * C1262 +
           (C19267 + C19268) * C1269 + (C19269 + C19270) * C1263 -
           (C19035 * C1855 + C19033 * C1859 + C19034 * C1274 + C19032 * C1282) *
               C1270 -
           (C19035 * C1860 + C19033 * C1864 + C19034 * C1283 + C19032 * C1292) *
               C1264 +
           (C19034 * C1275 + C19032 * C1284 + C19035 * C6208 + C19033 * C6209) *
               C1271 +
           (C19034 * C1285 + C19032 * C1293 + C19035 * C6210 + C19033 * C6211) *
               C1265) *
              C13437) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C30303 +
            (C113 * C123 + C31552 * C136) * C31414 -
            (C113 * C305 + C31552 * C315) * C30295 -
            (C113 * C316 + C31552 * C335) * C31421 +
            (C113 * C306 + C31552 * C317) * C30309 +
            (C113 * C318 + C31552 * C336) * C3108) *
               C103 +
           (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
           C3138 * C105) *
              C31541 * C31332 +
          ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C103 +
           (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C104 +
           (C3128 - (C3129 + C3130) + C3131 - C3132 - C3133) * C105) *
              C31541 * C31340 +
          (C3138 * C103 +
           (C3130 + C3129 - C3128 - C3131 + C3132 + C3133) * C104 +
           (C170 * C30303 + C171 * C31414 - C738 * C30295 - C739 * C31421 +
            (C113 * C314 + C31552 * C333) * C30309 +
            (C113 * C334 + C31552 * C344) * C3108) *
               C105) *
              C31541 * C3111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C30303 +
            (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
            C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
               C31311 * C5021 +
           (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
            C5151 * C30309 + C5152 * C3108) *
               C31311 * C5022 +
           (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 - C5152 * C31421 +
            C5805 * C30309 + C5806 * C3108) *
               C31311 * C5023) *
              C31332 +
          ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C31311 * C5021 +
           (C378 * C30295 - (C377 * C31414 + C376 * C30303) + C379 * C31421 -
            C1575 * C30309 - C1576 * C3108) *
               C31311 * C5022 +
           (C1575 * C30295 - (C379 * C31414 + C378 * C30303) + C1576 * C31421 -
            C6061 * C30309 - C6062 * C3108) *
               C31311 * C5023) *
              C31340 +
          (C3138 * C31311 * C5021 +
           (C381 * C30303 + C382 * C31414 - C383 * C30295 - C384 * C31421 +
            C1577 * C30309 + C1578 * C3108) *
               C31311 * C5022 +
           (C383 * C30303 + C384 * C31414 - C1577 * C30295 - C1578 * C31421 +
            (C113 * C1277 + C31552 * C1288) * C30309 +
            (C113 * C1289 + C31552 * C1295) * C3108) *
               C31311 * C5023) *
              C3111) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 -
             (C113 * C305 + C31552 * C315) * C30295 -
             (C113 * C316 + C31552 * C335) * C31421 +
             (C113 * C306 + C31552 * C317) * C30309 +
             (C113 * C318 + C31552 * C336) * C3108) *
                C103 +
            (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
            C3138 * C105) *
               C31541 * C2812 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C103 +
            (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C104 +
            (C3128 - (C3129 + C3130) + C3131 - C3132 - C3133) * C105) *
               C31541 * C31337) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             (C113 * C1010 + C31552 * C1019) * C31421 -
             (C113 * C1406 + C31552 * C1415) * C30309 -
             (C113 * C1416 + C31552 * C1433) * C3108) *
                C103 +
            (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C104 +
            (C3444 - (C3445 + C3446) + C3447 - C3448 - C3449) * C105) *
               C31541 * C2812 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C103 +
            (C3446 + C3445 - C3444 - C3447 + C3448 + C3449) * C104 +
            (C586 * C30303 + C587 * C31414 - C1048 * C30295 - C1049 * C31421 +
             (C113 * C1728 + C31552 * C1729) * C30309 +
             (C113 * C1730 + C31552 * C1731) * C3108) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
             C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                C31311 * C5021 +
            (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
             C5151 * C30309 + C5152 * C3108) *
                C31311 * C5022 +
            (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 - C5152 * C31421 +
             C5805 * C30309 + C5806 * C3108) *
                C31311 * C5023) *
               C2812 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C31311 * C5021 +
            (C378 * C30295 - (C377 * C31414 + C376 * C30303) + C379 * C31421 -
             C1575 * C30309 - C1576 * C3108) *
                C31311 * C5022 +
            (C1575 * C30295 - (C379 * C31414 + C378 * C30303) + C1576 * C31421 -
             C6061 * C30309 - C6062 * C3108) *
                C31311 * C5023) *
               C31337) *
              C31631 +
          (((C5613 * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                C31311 * C5021 +
            (C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
             C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                C31311 * C5022 +
            (C5947 * C30295 - (C5616 * C31414 + C5615 * C30303) +
             C5948 * C31421 - C6325 * C30309 - C6326 * C3108) *
                C31311 * C5023) *
               C2812 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C31311 * C5021 +
            (C1043 * C30303 + C1044 * C31414 - C1749 * C30295 - C1750 * C31421 +
             C6217 * C30309 + C6218 * C3108) *
                C31311 * C5022 +
            (C1749 * C30303 + C1750 * C31414 - C6217 * C30295 - C6218 * C31421 +
             (C113 * C6208 + C31552 * C6209) * C30309 +
             (C113 * C6210 + C31552 * C6211) * C3108) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 -
            (C113 * C305 + C31552 * C315) * C2815 -
            (C113 * C316 + C31552 * C335) * C31699 +
            (C113 * C306 + C31552 * C317) * C2816 +
            (C113 * C318 + C31552 * C336) * C31689 -
            (C113 * C1272 + C31552 * C1278) * C2817 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
               C104 +
           (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
               C105) *
              C31541 * C2812 +
          ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
               C103 +
           (C2829 - (C2828 + C2827) + C2830 - C2831 - C2832 + C2833 + C2834) *
               C104 +
           (C385 * C2815 - (C168 * C31703 + C169 * C2814) + C386 * C31699 -
            C387 * C2816 - C388 * C31689 +
            (C113 * C1550 + C31552 * C1551) * C2817 +
            (C113 * C1552 + C31552 * C1553) * C31669) *
               C105) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 -
            (C113 * C305 + C31552 * C315) * C2687 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
              C31541 * C31702 +
          ((C2691 - (C2690 + C2689) + C2692) * C103 +
           (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
              C31541 * C31695 +
          (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
           (C2701 + C2702 - C2703 - C2704) * C105) *
              C31541 * C31682 +
          (C2710 * C103 + (C2703 - (C2702 + C2701) + C2704) * C104 +
           ((C113 * C713 + C31552 * C714) * C2687 -
            (C172 * C2680 + C173 * C2686) +
            (C113 * C715 + C31552 * C716) * C31418) *
               C105) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C2812 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31337) *
              C31697 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 +
            (C2985 - (C2986 + C2987) + C2988) * C105) *
               C31541 * C2812 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C586 * C2686 + C587 * C2680 - C1048 * C2687 - C1049 * C31418) *
                C105) *
               C31541 * C31337) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 -
             (C113 * C1409 + C31552 * C1421) * C2687 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2989 + C2990 - C2991 - C2992) * C104 +
            (C2993 + C2994 - C2995 - C2996) * C105) *
               C31541 * C2812 +
           ((C2991 - (C2990 + C2989) + C2992) * C103 +
            (C2995 - (C2994 + C2993) + C2996) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C2687 -
             (C592 * C2680 + C593 * C2686) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
               C31311 * C5023) *
              C31702 +
          ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
           (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
               C31311 * C5023) *
              C31695 +
          (C2709 * C31311 * C5021 +
           (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
               C31311 * C5023) *
              C31682 +
          (C2710 * C31311 * C5021 +
           (C387 * C2687 - (C386 * C2680 + C385 * C2686) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C2687 -
            (C388 * C2680 + C387 * C2686) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C2812 +
          ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
               C31311 * C5021 +
           (C378 * C2815 - (C377 * C31703 + C376 * C2814) + C379 * C31699 -
            C1575 * C2816 - C1576 * C31689 + C6061 * C2817 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C2815 - (C379 * C31703 + C378 * C2814) + C1576 * C31699 -
            C6061 * C2816 - C6062 * C31689 +
            (C113 * C6052 + C31552 * C6053) * C2817 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31697 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C2686 + C5952 * C2680 - C5953 * C2687 - C5954 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2991 - (C2990 + C2989) + C2992) * C31311 * C5021 +
            (C6775 * C2687 - (C2344 * C2680 + C2343 * C2686) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C2687 -
             (C6776 * C2680 + C6775 * C2686) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C31332 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31340 +
           (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
            (C2701 + C2702 - C2703 - C2704) * C105) *
               C31541 * C3111) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
               C31541 * C31332 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C3286 + C3287 - C3288 - C3289) * C105) *
               C31541 * C31340 +
           (C3291 * C103 + (C3288 - (C3287 + C3286) + C3289) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C2687 -
             (C855 * C2680 + C856 * C2686) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C2709 * C31311 * C5021 +
            (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
                C31311 * C5023) *
               C3111) *
              C31631 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C3291 * C31311 * C5021 +
            (C1751 * C2687 - (C1047 * C2680 + C1045 * C2686) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C2687 -
             (C1752 * C2680 + C1751 * C2686) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 -
            (C113 * C305 + C31552 * C315) * C2687 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
              C31541 * C31702 +
          ((C2691 - (C2690 + C2689) + C2692) * C103 +
           (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
              C31541 * C31695 +
          (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
           (C2701 + C2702 - C2703 - C2704) * C105) *
              C31541 * C31682 +
          (C2710 * C103 + (C2703 - (C2702 + C2701) + C2704) * C104 +
           ((C113 * C713 + C31552 * C714) * C2687 -
            (C172 * C2680 + C173 * C2686) +
            (C113 * C715 + C31552 * C716) * C31418) *
               C105) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 -
            (C113 * C305 + C31552 * C315) * C2815 -
            (C113 * C316 + C31552 * C335) * C31699 +
            (C113 * C306 + C31552 * C317) * C2816 +
            (C113 * C318 + C31552 * C336) * C31689 -
            (C113 * C1272 + C31552 * C1278) * C2817 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
               C104 +
           (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
               C105) *
              C31541 * C2812 +
          ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
               C103 +
           (C2829 - (C2828 + C2827) + C2830 - C2831 - C2832 + C2833 + C2834) *
               C104 +
           (C385 * C2815 - (C168 * C31703 + C169 * C2814) + C386 * C31699 -
            C387 * C2816 - C388 * C31689 +
            (C113 * C1550 + C31552 * C1551) * C2817 +
            (C113 * C1552 + C31552 * C1553) * C31669) *
               C105) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
               C31311 * C5023) *
              C31702 +
          ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
           (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
               C31311 * C5023) *
              C31695 +
          (C2709 * C31311 * C5021 +
           (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
               C31311 * C5023) *
              C31682 +
          (C2710 * C31311 * C5021 +
           (C387 * C2687 - (C386 * C2680 + C385 * C2686) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C2687 -
            (C388 * C2680 + C387 * C2686) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C2812 +
          ((C2821 - (C2820 + C2819) + C2822 - C2823 - C2824 + C2825 + C2826) *
               C31311 * C5021 +
           (C378 * C2815 - (C377 * C31703 + C376 * C2814) + C379 * C31699 -
            C1575 * C2816 - C1576 * C31689 + C6061 * C2817 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C2815 - (C379 * C31703 + C378 * C2814) + C1576 * C31699 -
            C6061 * C2816 - C6062 * C31689 +
            (C113 * C6052 + C31552 * C6053) * C2817 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 -
             (C113 * C305 + C31552 * C315) * C30295 -
             (C113 * C316 + C31552 * C335) * C31421 +
             (C113 * C306 + C31552 * C317) * C30309 +
             (C113 * C318 + C31552 * C336) * C3108) *
                C103 +
            (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
            C3138 * C105) *
               C31541 * C31616 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C103 +
            (C3124 - (C3123 + C3122) + C3125 - C3126 - C3127) * C104 +
            (C3128 - (C3129 + C3130) + C3131 - C3132 - C3133) * C105) *
               C31541 * C31337) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             (C113 * C1010 + C31552 * C1019) * C31421 -
             (C113 * C1406 + C31552 * C1415) * C30309 -
             (C113 * C1416 + C31552 * C1433) * C3108) *
                C103 +
            (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C104 +
            (C3444 - (C3445 + C3446) + C3447 - C3448 - C3449) * C105) *
               C31541 * C31616 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C103 +
            (C3446 + C3445 - C3444 - C3447 + C3448 + C3449) * C104 +
            (C586 * C30303 + C587 * C31414 - C1048 * C30295 - C1049 * C31421 +
             (C113 * C1728 + C31552 * C1729) * C30309 +
             (C113 * C1730 + C31552 * C1731) * C3108) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C30303 +
             (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
             C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                C31311 * C5021 +
            (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 - C5150 * C31421 +
             C5151 * C30309 + C5152 * C3108) *
                C31311 * C5022 +
            (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 - C5152 * C31421 +
             C5805 * C30309 + C5806 * C3108) *
                C31311 * C5023) *
               C31616 +
           ((C3118 - (C3117 + C3116) + C3119 - C3120 - C3121) * C31311 * C5021 +
            (C378 * C30295 - (C377 * C31414 + C376 * C30303) + C379 * C31421 -
             C1575 * C30309 - C1576 * C3108) *
                C31311 * C5022 +
            (C1575 * C30295 - (C379 * C31414 + C378 * C30303) + C1576 * C31421 -
             C6061 * C30309 - C6062 * C3108) *
                C31311 * C5023) *
               C31337) *
              C3547 +
          (((C5613 * C30295 -
             ((C113 * C533 + C31552 * C550) * C31414 +
              (C113 * C520 + C31552 * C534) * C30303) +
             C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                C31311 * C5021 +
            (C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
             C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                C31311 * C5022 +
            (C5947 * C30295 - (C5616 * C31414 + C5615 * C30303) +
             C5948 * C31421 - C6325 * C30309 - C6326 * C3108) *
                C31311 * C5023) *
               C31616 +
           ((C3440 + C3439 - C3438 - C3441 + C3442 + C3443) * C31311 * C5021 +
            (C1043 * C30303 + C1044 * C31414 - C1749 * C30295 - C1750 * C31421 +
             C6217 * C30309 + C6218 * C3108) *
                C31311 * C5022 +
            (C1749 * C30303 + C1750 * C31414 - C6217 * C30295 - C6218 * C31421 +
             (C113 * C6208 + C31552 * C6209) * C30309 +
             (C113 * C6210 + C31552 * C6211) * C3108) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C115 + C31552 * C122) * C30303 +
                     (C113 * C123 + C31552 * C136) * C31414 -
                     (C113 * C305 + C31552 * C315) * C30295 -
                     (C113 * C316 + C31552 * C335) * C31421 +
                     (C113 * C306 + C31552 * C317) * C30309 +
                     (C113 * C318 + C31552 * C336) * C3108) *
                        C103 +
                    (C3116 + C3117 - C3118 - C3119 + C3120 + C3121) * C104 +
                    C3138 * C105) *
                       C31541 * C31327 * C31456 +
                   (((C113 * C1004 + C31552 * C1009) * C30295 -
                     ((C113 * C533 + C31552 * C550) * C31414 +
                      (C113 * C520 + C31552 * C534) * C30303) +
                     (C113 * C1010 + C31552 * C1019) * C31421 -
                     (C113 * C1406 + C31552 * C1415) * C30309 -
                     (C113 * C1416 + C31552 * C1433) * C3108) *
                        C103 +
                    (C3438 - (C3439 + C3440) + C3441 - C3442 - C3443) * C104 +
                    (C3444 - (C3445 + C3446) + C3447 - C3448 - C3449) * C105) *
                       C31541 * C31327 * C31463 +
                   (((C113 * C522 + C31552 * C537) * C30303 +
                     (C113 * C538 + C31552 * C552) * C31414 -
                     (C113 * C1409 + C31552 * C1421) * C30295 -
                     (C113 * C1422 + C31552 * C1436) * C31421 +
                     (C113 * C1410 + C31552 * C1423) * C30309 +
                     (C113 * C1424 + C31552 * C1437) * C3108) *
                        C103 +
                    (C588 * C30303 + C589 * C31414 - C2343 * C30295 -
                     C2344 * C31421 + (C113 * C1412 + C31552 * C1427) * C30309 +
                     (C113 * C1428 + C31552 * C1439) * C3108) *
                        C104 +
                    (C590 * C30303 + C591 * C31414 - C2345 * C30295 -
                     C2346 * C31421 + (C113 * C1414 + C31552 * C1431) * C30309 +
                     (C113 * C1432 + C31552 * C1441) * C3108) *
                        C105) *
                       C31541 * C31327 * C4067)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C115 + C31552 * C122) * C30303 +
                     (C113 * C123 + C31552 * C136) * C31414 - C5147 * C30295 -
                     C5148 * C31421 + C5149 * C30309 + C5150 * C3108) *
                        C31311 * C5021 +
                    (C5147 * C30303 + C5148 * C31414 - C5149 * C30295 -
                     C5150 * C31421 + C5151 * C30309 + C5152 * C3108) *
                        C31311 * C5022 +
                    (C5149 * C30303 + C5150 * C31414 - C5151 * C30295 -
                     C5152 * C31421 + C5805 * C30309 + C5806 * C3108) *
                        C31311 * C5023) *
                       C31327 * C31456 +
                   ((C5613 * C30295 -
                     ((C113 * C533 + C31552 * C550) * C31414 +
                      (C113 * C520 + C31552 * C534) * C30303) +
                     C5614 * C31421 - C5615 * C30309 - C5616 * C3108) *
                        C31311 * C5021 +
                    (C5615 * C30295 - (C5614 * C31414 + C5613 * C30303) +
                     C5616 * C31421 - C5947 * C30309 - C5948 * C3108) *
                        C31311 * C5022 +
                    (C5947 * C30295 - (C5616 * C31414 + C5615 * C30303) +
                     C5948 * C31421 - C6325 * C30309 - C6326 * C3108) *
                        C31311 * C5023) *
                       C31327 * C31463 +
                   (((C113 * C522 + C31552 * C537) * C30303 +
                     (C113 * C538 + C31552 * C552) * C31414 - C5949 * C30295 -
                     C5950 * C31421 + C5951 * C30309 + C5952 * C3108) *
                        C31311 * C5021 +
                    (C5949 * C30303 + C5950 * C31414 - C5951 * C30295 -
                     C5952 * C31421 + C5953 * C30309 + C5954 * C3108) *
                        C31311 * C5022 +
                    (C5951 * C30303 + C5952 * C31414 - C5953 * C30295 -
                     C5954 * C31421 + (C113 * C5920 + C31552 * C5925) * C30309 +
                     (C113 * C5926 + C31552 * C5929) * C3108) *
                        C31311 * C5023) *
                       C31327 * C4067)) /
                     (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 -
            (C113 * C305 + C31552 * C315) * C2815 -
            (C113 * C316 + C31552 * C335) * C31699 +
            (C113 * C306 + C31552 * C317) * C2816 +
            (C113 * C318 + C31552 * C336) * C31689 -
            (C113 * C1272 + C31552 * C1278) * C2817 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
               C104 +
           (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
               C105) *
              C31541 * C31327 * C3547 +
          (((C113 * C1004 + C31552 * C1009) * C2815 -
            ((C113 * C533 + C31552 * C550) * C31703 +
             (C113 * C520 + C31552 * C534) * C2814) +
            (C113 * C1010 + C31552 * C1019) * C31699 -
            (C113 * C1406 + C31552 * C1415) * C2816 -
            (C113 * C1416 + C31552 * C1433) * C31689 +
            (C113 * C1854 + C31552 * C1857) * C2817 +
            (C113 * C1858 + C31552 * C1863) * C31669) *
               C103 +
           (C1043 * C2815 - (C583 * C31703 + C582 * C2814) + C1044 * C31699 -
            C1749 * C2816 - C1750 * C31689 +
            (C113 * C1855 + C31552 * C1859) * C2817 +
            (C113 * C1860 + C31552 * C1864) * C31669) *
               C104 +
           (C1045 * C2815 - (C585 * C31703 + C584 * C2814) + C1047 * C31699 -
            C1751 * C2816 - C1752 * C31689 +
            (C113 * C1856 + C31552 * C1861) * C2817 +
            (C113 * C1862 + C31552 * C1865) * C31669) *
               C105) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C31693 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31680 +
           (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
            (C2701 + C2702 - C2703 - C2704) * C105) *
               C31541 * C31653) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
               C31541 * C31693 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C3286 + C3287 - C3288 - C3289) * C105) *
               C31541 * C31680 +
           (C3291 * C103 + (C3288 - (C3287 + C3286) + C3289) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C2687 -
             (C855 * C2680 + C856 * C2686) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 -
            (C113 * C305 + C31552 * C315) * C2687 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
              C31541 * C31327 * C31704 +
          (((C113 * C1004 + C31552 * C1009) * C2687 -
            ((C113 * C533 + C31552 * C550) * C2680 +
             (C113 * C520 + C31552 * C534) * C2686) +
            (C113 * C1010 + C31552 * C1019) * C31418) *
               C103 +
           (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
              C31541 * C31327 * C31701 +
          (((C113 * C522 + C31552 * C537) * C2686 +
            (C113 * C538 + C31552 * C552) * C2680 -
            (C113 * C1409 + C31552 * C1421) * C2687 -
            (C113 * C1422 + C31552 * C1436) * C31418) *
               C103 +
           (C2989 + C2990 - C2991 - C2992) * C104 +
           (C2993 + C2994 - C2995 - C2996) * C105) *
              C31541 * C31327 * C31692 +
          (((C113 * C2570 + C31552 * C2573) * C2687 -
            ((C113 * C2166 + C31552 * C2176) * C2680 +
             (C113 * C2158 + C31552 * C2167) * C2686) +
            (C113 * C2574 + C31552 * C2579) * C31418) *
               C103 +
           ((C113 * C2571 + C31552 * C2575) * C2687 -
            (C2466 * C2680 + C2465 * C2686) +
            (C113 * C2576 + C31552 * C2580) * C31418) *
               C104 +
           ((C113 * C2572 + C31552 * C2577) * C2687 -
            (C2468 * C2680 + C2467 * C2686) +
            (C113 * C2578 + C31552 * C2581) * C31418) *
               C105) *
              C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C2709 * C31311 * C5021 +
            (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C3547 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C3291 * C31311 * C5021 +
            (C1751 * C2687 - (C1047 * C2680 + C1045 * C2686) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C2687 -
             (C1752 * C2680 + C1751 * C2686) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C3547 +
          ((C5613 * C2815 -
            ((C113 * C533 + C31552 * C550) * C31703 +
             (C113 * C520 + C31552 * C534) * C2814) +
            C5614 * C31699 - C5615 * C2816 - C5616 * C31689 + C5947 * C2817 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C2815 - (C5614 * C31703 + C5613 * C2814) + C5616 * C31699 -
            C5947 * C2816 - C5948 * C31689 + C6325 * C2817 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C2815 - (C5616 * C31703 + C5615 * C2814) + C5948 * C31699 -
            C6325 * C2816 - C6326 * C31689 +
            (C113 * C6316 + C31552 * C6317) * C2817 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2686 +
            (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
               C31311 * C5023) *
              C31327 * C31704 +
          ((C5613 * C2687 -
            ((C113 * C533 + C31552 * C550) * C2680 +
             (C113 * C520 + C31552 * C534) * C2686) +
            C5614 * C31418) *
               C31311 * C5021 +
           (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
               C31311 * C5022 +
           (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
               C31311 * C5023) *
              C31327 * C31701 +
          (((C113 * C522 + C31552 * C537) * C2686 +
            (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
            C5950 * C31418) *
               C31311 * C5021 +
           (C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
               C31311 * C5022 +
           (C5951 * C2686 + C5952 * C2680 - C5953 * C2687 - C5954 * C31418) *
               C31311 * C5023) *
              C31327 * C31692 +
          ((C6989 * C2687 -
            ((C113 * C2166 + C31552 * C2176) * C2680 +
             (C113 * C2158 + C31552 * C2167) * C2686) +
            C6990 * C31418) *
               C31311 * C5021 +
           (C6991 * C2687 - (C6990 * C2680 + C6989 * C2686) + C6992 * C31418) *
               C31311 * C5022 +
           ((C113 * C6976 + C31552 * C6977) * C2687 -
            (C6992 * C2680 + C6991 * C2686) +
            (C113 * C6978 + C31552 * C6979) * C31418) *
               C31311 * C5023) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C31616 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31337) *
              C31456 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
               C31541 * C31616 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C3286 + C3287 - C3288 - C3289) * C105) *
               C31541 * C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 -
             (C113 * C1409 + C31552 * C1421) * C2687 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2989 + C2990 - C2991 - C2992) * C104 +
            (C2993 + C2994 - C2995 - C2996) * C105) *
               C31541 * C31616 +
           ((C2991 - (C2990 + C2989) + C2992) * C103 +
            (C2995 - (C2994 + C2993) + C2996) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C2687 -
             (C592 * C2680 + C593 * C2686) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31456 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C2686 +
             (C113 * C538 + C31552 * C552) * C2680 - C5949 * C2687 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C2686 + C5950 * C2680 - C5951 * C2687 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C2686 + C5952 * C2680 - C5953 * C2687 - C5954 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2991 - (C2990 + C2989) + C2992) * C31311 * C5021 +
            (C6775 * C2687 - (C2344 * C2680 + C2343 * C2686) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C2687 -
             (C6776 * C2680 + C6775 * C2686) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 -
             (C113 * C305 + C31552 * C315) * C2687 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C2689 + C2690 - C2691 - C2692) * C104 + C2709 * C105) *
               C31541 * C31693 +
           ((C2691 - (C2690 + C2689) + C2692) * C103 +
            (C2695 - (C2694 + C2693) + C2696) * C104 + C2710 * C105) *
               C31541 * C31680 +
           (C2709 * C103 + (C2699 + C2698 - C2697 - C2700) * C104 +
            (C2701 + C2702 - C2703 - C2704) * C105) *
               C31541 * C31653) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C2981 - (C2982 + C2983) + C2984) * C104 + C3291 * C105) *
               C31541 * C31693 +
           ((C2983 + C2982 - C2981 - C2984) * C103 +
            (C2987 + C2986 - C2985 - C2988) * C104 +
            (C3286 + C3287 - C3288 - C3289) * C105) *
               C31541 * C31680 +
           (C3291 * C103 + (C3288 - (C3287 + C3286) + C3289) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C2687 -
             (C855 * C2680 + C856 * C2686) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 -
            (C113 * C305 + C31552 * C315) * C2815 -
            (C113 * C316 + C31552 * C335) * C31699 +
            (C113 * C306 + C31552 * C317) * C2816 +
            (C113 * C318 + C31552 * C336) * C31689 -
            (C113 * C1272 + C31552 * C1278) * C2817 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C2819 + C2820 - C2821 - C2822 + C2823 + C2824 - C2825 - C2826) *
               C104 +
           (C2827 + C2828 - C2829 - C2830 + C2831 + C2832 - C2833 - C2834) *
               C105) *
              C31541 * C31327 * C3547 +
          (((C113 * C1004 + C31552 * C1009) * C2815 -
            ((C113 * C533 + C31552 * C550) * C31703 +
             (C113 * C520 + C31552 * C534) * C2814) +
            (C113 * C1010 + C31552 * C1019) * C31699 -
            (C113 * C1406 + C31552 * C1415) * C2816 -
            (C113 * C1416 + C31552 * C1433) * C31689 +
            (C113 * C1854 + C31552 * C1857) * C2817 +
            (C113 * C1858 + C31552 * C1863) * C31669) *
               C103 +
           (C1043 * C2815 - (C583 * C31703 + C582 * C2814) + C1044 * C31699 -
            C1749 * C2816 - C1750 * C31689 +
            (C113 * C1855 + C31552 * C1859) * C2817 +
            (C113 * C1860 + C31552 * C1864) * C31669) *
               C104 +
           (C1045 * C2815 - (C585 * C31703 + C584 * C2814) + C1047 * C31699 -
            C1751 * C2816 - C1752 * C31689 +
            (C113 * C1856 + C31552 * C1861) * C2817 +
            (C113 * C1862 + C31552 * C1865) * C31669) *
               C105) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C2686 +
             (C113 * C123 + C31552 * C136) * C2680 - C5147 * C2687 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C2686 + C5148 * C2680 - C5149 * C2687 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C2686 + C5150 * C2680 - C5151 * C2687 - C5152 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2691 - (C2690 + C2689) + C2692) * C31311 * C5021 +
            (C378 * C2687 - (C377 * C2680 + C376 * C2686) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C2687 - (C379 * C2680 + C378 * C2686) + C1576 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C2709 * C31311 * C5021 +
            (C381 * C2686 + C382 * C2680 - C383 * C2687 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C2686 + C384 * C2680 - C1577 * C2687 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C3547 +
          (((C5613 * C2687 -
             ((C113 * C533 + C31552 * C550) * C2680 +
              (C113 * C520 + C31552 * C534) * C2686) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C2687 - (C5614 * C2680 + C5613 * C2686) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C2687 - (C5616 * C2680 + C5615 * C2686) + C5948 * C31418) *
                C31311 * C5023) *
               C31693 +
           ((C2983 + C2982 - C2981 - C2984) * C31311 * C5021 +
            (C1043 * C2686 + C1044 * C2680 - C1749 * C2687 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C2686 + C1750 * C2680 - C6217 * C2687 - C6218 * C31418) *
                C31311 * C5023) *
               C31680 +
           (C3291 * C31311 * C5021 +
            (C1751 * C2687 - (C1047 * C2680 + C1045 * C2686) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C2687 -
             (C1752 * C2680 + C1751 * C2686) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C2814 +
            (C113 * C123 + C31552 * C136) * C31703 - C5147 * C2815 -
            C5148 * C31699 + C5149 * C2816 + C5150 * C31689 - C5151 * C2817 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C2814 + C5148 * C31703 - C5149 * C2815 - C5150 * C31699 +
            C5151 * C2816 + C5152 * C31689 - C5805 * C2817 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C2814 + C5150 * C31703 - C5151 * C2815 - C5152 * C31699 +
            C5805 * C2816 + C5806 * C31689 - C5807 * C2817 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C3547 +
          ((C5613 * C2815 -
            ((C113 * C533 + C31552 * C550) * C31703 +
             (C113 * C520 + C31552 * C534) * C2814) +
            C5614 * C31699 - C5615 * C2816 - C5616 * C31689 + C5947 * C2817 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C2815 - (C5614 * C31703 + C5613 * C2814) + C5616 * C31699 -
            C5947 * C2816 - C5948 * C31689 + C6325 * C2817 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C2815 - (C5616 * C31703 + C5615 * C2814) + C5948 * C31699 -
            C6325 * C2816 - C6326 * C31689 +
            (C113 * C6316 + C31552 * C6317) * C2817 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 -
            (C113 * C305 + C31552 * C315) * C1547 -
            (C113 * C316 + C31552 * C335) * C1541 +
            (C113 * C306 + C31552 * C317) * C1548 +
            (C113 * C318 + C31552 * C336) * C1542 -
            (C113 * C1272 + C31552 * C1278) * C1549 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
               C104 +
           (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
               C105) *
              C31541 * C31616 +
          ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
               C103 +
           (C1567 - (C1566 + C1565) + C1568 - C1569 - C1570 + C1581 + C1582) *
               C104 +
           (C385 * C1547 - (C168 * C1540 + C169 * C1546) + C386 * C1541 -
            C387 * C1548 - C388 * C1542 +
            (C113 * C1550 + C31552 * C1551) * C1549 +
            (C113 * C1552 + C31552 * C1553) * C31669) *
               C105) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 -
            (C113 * C305 + C31552 * C315) * C712 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
              C31541 * C707 +
          ((C720 - (C719 + C718) + C721) * C103 +
           (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
              C31541 * C708 +
          (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
           (C730 + C731 - C742 - C743) * C105) *
              C31541 * C709 +
          (C745 * C103 + (C742 - (C731 + C730) + C743) * C104 +
           ((C113 * C713 + C31552 * C714) * C712 -
            (C172 * C31630 + C173 * C711) +
            (C113 * C715 + C31552 * C716) * C31418) *
               C105) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C31616 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C31337) *
              C1976 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C31616 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C31337) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 -
             (C113 * C1409 + C31552 * C1421) * C712 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2331 + C2332 - C2347 - C2348) * C104 +
            (C2337 + C2338 - C2349 - C2350) * C105) *
               C31541 * C31616 +
           ((C2347 - (C2332 + C2331) + C2348) * C103 +
            (C2349 - (C2338 + C2337) + C2350) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C712 -
             (C592 * C31630 + C593 * C711) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
               C31311 * C5023) *
              C707 +
          ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
           (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
               C31311 * C5023) *
              C708 +
          (C744 * C31311 * C5021 +
           (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
               C31311 * C5023) *
              C709 +
          (C745 * C31311 * C5021 +
           (C387 * C712 - (C386 * C31630 + C385 * C711) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C712 -
            (C388 * C31630 + C387 * C711) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31616 +
          ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
               C31311 * C5021 +
           (C378 * C1547 - (C377 * C1540 + C376 * C1546) + C379 * C1541 -
            C1575 * C1548 - C1576 * C1542 + C6061 * C1549 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C1547 - (C379 * C1540 + C378 * C1546) + C1576 * C1541 -
            C6061 * C1548 - C6062 * C1542 +
            (C113 * C6052 + C31552 * C6053) * C1549 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C1976 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 - C6217 * C712 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C711 + C5952 * C31630 - C5953 * C712 - C5954 * C31418) *
                C31311 * C5023) *
               C31616 +
           ((C2347 - (C2332 + C2331) + C2348) * C31311 * C5021 +
            (C6775 * C712 - (C2344 * C31630 + C2343 * C711) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C712 -
             (C6776 * C31630 + C6775 * C711) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 -
            (C113 * C305 + C31552 * C315) * C1547 -
            (C113 * C316 + C31552 * C335) * C1541 +
            (C113 * C306 + C31552 * C317) * C1548 +
            (C113 * C318 + C31552 * C336) * C1542 -
            (C113 * C1272 + C31552 * C1278) * C1549 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
               C104 +
           (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
               C105) *
              C31541 * C31327 * C31631 +
          (((C113 * C1004 + C31552 * C1009) * C1547 -
            ((C113 * C533 + C31552 * C550) * C1540 +
             (C113 * C520 + C31552 * C534) * C1546) +
            (C113 * C1010 + C31552 * C1019) * C1541 -
            (C113 * C1406 + C31552 * C1415) * C1548 -
            (C113 * C1416 + C31552 * C1433) * C1542 +
            (C113 * C1854 + C31552 * C1857) * C1549 +
            (C113 * C1858 + C31552 * C1863) * C31669) *
               C103 +
           (C1043 * C1547 - (C583 * C1540 + C582 * C1546) + C1044 * C1541 -
            C1749 * C1548 - C1750 * C1542 +
            (C113 * C1855 + C31552 * C1859) * C1549 +
            (C113 * C1860 + C31552 * C1864) * C31669) *
               C104 +
           (C1045 * C1547 - (C585 * C1540 + C584 * C1546) + C1047 * C1541 -
            C1751 * C1548 - C1752 * C1542 +
            (C113 * C1856 + C31552 * C1861) * C1549 +
            (C113 * C1862 + C31552 * C1865) * C31669) *
               C105) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C299 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C300 +
           (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
            (C730 + C731 - C742 - C743) * C105) *
               C31541 * C31653) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C299 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C300 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C712 -
             (C855 * C31630 + C856 * C711) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 -
            (C113 * C305 + C31552 * C315) * C712 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
              C31541 * C31327 * C2448 +
          (((C113 * C1004 + C31552 * C1009) * C712 -
            ((C113 * C533 + C31552 * C550) * C31630 +
             (C113 * C520 + C31552 * C534) * C711) +
            (C113 * C1010 + C31552 * C1019) * C31418) *
               C103 +
           (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
              C31541 * C31327 * C2449 +
          (((C113 * C522 + C31552 * C537) * C711 +
            (C113 * C538 + C31552 * C552) * C31630 -
            (C113 * C1409 + C31552 * C1421) * C712 -
            (C113 * C1422 + C31552 * C1436) * C31418) *
               C103 +
           (C2331 + C2332 - C2347 - C2348) * C104 +
           (C2337 + C2338 - C2349 - C2350) * C105) *
              C31541 * C31327 * C2450 +
          (((C113 * C2570 + C31552 * C2573) * C712 -
            ((C113 * C2166 + C31552 * C2176) * C31630 +
             (C113 * C2158 + C31552 * C2167) * C711) +
            (C113 * C2574 + C31552 * C2579) * C31418) *
               C103 +
           ((C113 * C2571 + C31552 * C2575) * C712 -
            (C2466 * C31630 + C2465 * C711) +
            (C113 * C2576 + C31552 * C2580) * C31418) *
               C104 +
           ((C113 * C2572 + C31552 * C2577) * C712 -
            (C2468 * C31630 + C2467 * C711) +
            (C113 * C2578 + C31552 * C2581) * C31418) *
               C105) *
              C31541 * C31327 * C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C299 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C300 +
           (C744 * C31311 * C5021 +
            (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C31631 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            ((C113 * C1854 + C31552 * C1857) * C712 -
             (C5616 * C31630 + C5615 * C711) +
             (C113 * C1858 + C31552 * C1863) * C31418) *
                C31311 * C5023) *
               C299 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 -
             (C113 * C1855 + C31552 * C1859) * C712 -
             (C113 * C1860 + C31552 * C1864) * C31418) *
                C31311 * C5023) *
               C300 +
           (C1057 * C31311 * C5021 +
            (C1751 * C712 - (C1047 * C31630 + C1045 * C711) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C712 -
             (C1752 * C31630 + C1751 * C711) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C31631 +
          ((C5613 * C1547 -
            ((C113 * C533 + C31552 * C550) * C1540 +
             (C113 * C520 + C31552 * C534) * C1546) +
            C5614 * C1541 - C5615 * C1548 - C5616 * C1542 + C5947 * C1549 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C1547 - (C5614 * C1540 + C5613 * C1546) + C5616 * C1541 -
            C5947 * C1548 - C5948 * C1542 + C6325 * C1549 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C1547 - (C5616 * C1540 + C5615 * C1546) + C5948 * C1541 -
            C6325 * C1548 - C6326 * C1542 +
            (C113 * C6316 + C31552 * C6317) * C1549 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
               C31311 * C5023) *
              C31327 * C2448 +
          ((C5613 * C712 -
            ((C113 * C533 + C31552 * C550) * C31630 +
             (C113 * C520 + C31552 * C534) * C711) +
            C5614 * C31418) *
               C31311 * C5021 +
           (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
               C31311 * C5022 +
           (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
               C31311 * C5023) *
              C31327 * C2449 +
          (((C113 * C522 + C31552 * C537) * C711 +
            (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
            C5950 * C31418) *
               C31311 * C5021 +
           (C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
               C31311 * C5022 +
           (C5951 * C711 + C5952 * C31630 - C5953 * C712 - C5954 * C31418) *
               C31311 * C5023) *
              C31327 * C2450 +
          ((C6989 * C712 -
            ((C113 * C2166 + C31552 * C2176) * C31630 +
             (C113 * C2158 + C31552 * C2167) * C711) +
            C6990 * C31418) *
               C31311 * C5021 +
           (C6991 * C712 - (C6990 * C31630 + C6989 * C711) + C6992 * C31418) *
               C31311 * C5022 +
           ((C113 * C6976 + C31552 * C6977) * C712 -
            (C6992 * C31630 + C6991 * C711) +
            (C113 * C6978 + C31552 * C6979) * C31418) *
               C31311 * C5023) *
              C31327 * C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C114 +
                (C113 * C123 + C31552 * C136) * C31355) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C31541 * C107 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C31541 * C108 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
                  C109 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C31541 * C110 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31552 * C134) * C114 +
                (C113 * C135 + C31552 * C142) * C31355) *
                   C105) *
                  C31541 * C111) *
             C31373 +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31552 * C122) * C302 +
                (C113 * C123 + C31552 * C136) * C31696 -
                (C113 * C305 + C31552 * C315) * C303 -
                (C113 * C316 + C31552 * C335) * C31684 +
                (C113 * C306 + C31552 * C317) * C304 +
                (C113 * C318 + C31552 * C336) * C31659) *
                   C103 +
               (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
                  C31541 * C299 +
              ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
               (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
               (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
                  C31541 * C300 +
              (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
               (C170 * C302 + C171 * C31696 -
                (C113 * C313 + C31552 * C331) * C303 -
                (C113 * C332 + C31552 * C343) * C31684 +
                (C113 * C314 + C31552 * C333) * C304 +
                (C113 * C334 + C31552 * C344) * C31659) *
                   C105) *
                  C31541 * C31653) *
             C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C299 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C300 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31653) *
              C31697 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 +
            (C598 + C599) * C105) *
               C31541 * C300 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C299 -
           (((C113 * C535 + C31552 * C551) * C31355 +
             (C113 * C521 + C31552 * C536) * C114) *
                C105 +
            (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31653) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C299 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C300 +
           (C607 * C103 + (C605 + C604) * C104 +
            ((C113 * C526 + C31552 * C545) * C114 +
             (C113 * C546 + C31552 * C556) * C31355) *
                C105) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
           (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
           (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
              C31541 * C31680 +
          (C1199 * C103 +
           (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
           (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
            (C113 * C314 + C31552 * C333) * C1175 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 -
           (C113 * C305 + C31552 * C315) * C1268 -
           (C113 * C316 + C31552 * C335) * C1262 +
           (C113 * C306 + C31552 * C317) * C1269 +
           (C113 * C318 + C31552 * C336) * C1263 -
           (C113 * C1272 + C31552 * C1278) * C1270 -
           (C113 * C1279 + C31552 * C1290) * C1264 +
           (C113 * C1273 + C31552 * C1280) * C1271 +
           (C113 * C1281 + C31552 * C1291) * C1265) *
              C103 +
          (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
           C378 * C1269 + C379 * C1263 -
           (C113 * C1274 + C31552 * C1282) * C1270 -
           (C113 * C1283 + C31552 * C1292) * C1264 +
           (C113 * C1275 + C31552 * C1284) * C1271 +
           (C113 * C1285 + C31552 * C1293) * C1265) *
              C104 +
          (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
           C383 * C1269 + C384 * C1263 -
           (C113 * C1276 + C31552 * C1286) * C1270 -
           (C113 * C1287 + C31552 * C1294) * C1264 +
           (C113 * C1277 + C31552 * C1288) * C1271 +
           (C113 * C1289 + C31552 * C1295) * C1265) *
              C105) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31327 * C31697 +
          (((C113 * C1004 + C31552 * C1009) * C1174 -
            ((C113 * C533 + C31552 * C550) * C1167 +
             (C113 * C520 + C31552 * C534) * C1173) +
            (C113 * C1010 + C31552 * C1019) * C1168 -
            (C113 * C1406 + C31552 * C1415) * C1175 -
            (C113 * C1416 + C31552 * C1433) * C31659) *
               C103 +
           (C1043 * C1174 - (C583 * C1167 + C582 * C1173) + C1044 * C1168 -
            (C113 * C1407 + C31552 * C1417) * C1175 -
            (C113 * C1418 + C31552 * C1434) * C31659) *
               C104 +
           (C1045 * C1174 - (C585 * C1167 + C584 * C1173) + C1047 * C1168 -
            (C113 * C1408 + C31552 * C1419) * C1175 -
            (C113 * C1420 + C31552 * C1435) * C31659) *
               C105) *
              C31541 * C31327 * C31686 +
          (((C113 * C522 + C31552 * C537) * C1173 +
            (C113 * C538 + C31552 * C552) * C1167 -
            (C113 * C1409 + C31552 * C1421) * C1174 -
            (C113 * C1422 + C31552 * C1436) * C1168 +
            (C113 * C1410 + C31552 * C1423) * C1175 +
            (C113 * C1424 + C31552 * C1437) * C31659) *
               C103 +
           (C588 * C1173 + C589 * C1167 -
            (C113 * C1411 + C31552 * C1425) * C1174 -
            (C113 * C1426 + C31552 * C1438) * C1168 +
            (C113 * C1412 + C31552 * C1427) * C1175 +
            (C113 * C1428 + C31552 * C1439) * C31659) *
               C104 +
           (C590 * C1173 + C591 * C1167 -
            (C113 * C1413 + C31552 * C1429) * C1174 -
            (C113 * C1430 + C31552 * C1440) * C1168 +
            (C113 * C1414 + C31552 * C1431) * C1175 +
            (C113 * C1432 + C31552 * C1441) * C31659) *
               C105) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31693 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31680 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31653) *
              C1976 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31680 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31693 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31653) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C31693 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31680 +
           (C607 * C103 + (C605 + C604) * C104 +
            ((C113 * C526 + C31552 * C545) * C114 +
             (C113 * C546 + C31552 * C556) * C31355) *
                C105) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C31327 * C1976 +
          (((C113 * C1004 + C31552 * C1009) * C303 -
            ((C113 * C533 + C31552 * C550) * C31696 +
             (C113 * C520 + C31552 * C534) * C302) +
            (C113 * C1010 + C31552 * C1019) * C31684 -
            (C113 * C1406 + C31552 * C1415) * C304 -
            (C113 * C1416 + C31552 * C1433) * C31659) *
               C103 +
           (C1043 * C303 - (C583 * C31696 + C582 * C302) + C1044 * C31684 -
            C1749 * C304 - C1750 * C31659) *
               C104 +
           (C1045 * C303 - (C585 * C31696 + C584 * C302) + C1047 * C31684 -
            C1751 * C304 - C1752 * C31659) *
               C105) *
              C31541 * C31327 * C1977 +
          (((C113 * C522 + C31552 * C537) * C302 +
            (C113 * C538 + C31552 * C552) * C31696 -
            (C113 * C1409 + C31552 * C1421) * C303 -
            (C113 * C1422 + C31552 * C1436) * C31684 +
            (C113 * C1410 + C31552 * C1423) * C304 +
            (C113 * C1424 + C31552 * C1437) * C31659) *
               C103 +
           (C588 * C302 + C589 * C31696 -
            (C113 * C1411 + C31552 * C1425) * C303 -
            (C113 * C1426 + C31552 * C1438) * C31684 +
            (C113 * C1412 + C31552 * C1427) * C304 +
            (C113 * C1428 + C31552 * C1439) * C31659) *
               C104 +
           (C590 * C302 + C591 * C31696 -
            (C113 * C1413 + C31552 * C1429) * C303 -
            (C113 * C1430 + C31552 * C1440) * C31684 +
            (C113 * C1414 + C31552 * C1431) * C304 +
            (C113 * C1432 + C31552 * C1441) * C31659) *
               C105) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31541 * C31327 * C2151 -
          (C606 * C105 + (C595 + C594) * C104 +
           ((C113 * C533 + C31552 * C550) * C31355 +
            (C113 * C520 + C31552 * C534) * C114) *
               C103) *
              C31541 * C31327 * C2152 +
          (((C113 * C522 + C31552 * C537) * C114 +
            (C113 * C538 + C31552 * C552) * C31355) *
               C103 +
           (C600 + C601) * C104 + C607 * C105) *
              C31541 * C31327 * C2153 -
          (((C113 * C2162 + C31552 * C2174) * C31355 +
            (C113 * C2156 + C31552 * C2163) * C114) *
               C105 +
           ((C113 * C2164 + C31552 * C2175) * C31355 +
            (C113 * C2157 + C31552 * C2165) * C114) *
               C104 +
           ((C113 * C2166 + C31552 * C2176) * C31355 +
            (C113 * C2158 + C31552 * C2167) * C114) *
               C103) *
              C31541 * C31327 * C2154 +
          (((C113 * C2159 + C31552 * C2168) * C114 +
            (C113 * C2169 + C31552 * C2177) * C31355) *
               C103 +
           ((C113 * C2160 + C31552 * C2170) * C114 +
            (C113 * C2171 + C31552 * C2178) * C31355) *
               C104 +
           ((C113 * C2161 + C31552 * C2172) * C114 +
            (C113 * C2173 + C31552 * C2179) * C31355) *
               C105) *
              C31541 * C31327 * C2155)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C299 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C300 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C31697 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C300 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C299 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            ((C113 * C1409 + C31552 * C1421) * C114 +
             (C113 * C1422 + C31552 * C1436) * C31355) *
                C31311 * C5022 +
            ((C113 * C1410 + C31552 * C1423) * C114 +
             (C113 * C1424 + C31552 * C1437) * C31355) *
                C31311 * C5023) *
               C299 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C300 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            C5805 * C1175 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C31697 +
          ((C5613 * C1174 -
            ((C113 * C533 + C31552 * C550) * C1167 +
             (C113 * C520 + C31552 * C534) * C1173) +
            C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
            C5947 * C1175 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
            (C113 * C5918 + C31552 * C5921) * C1175 -
            (C113 * C5922 + C31552 * C5927) * C31659) *
               C31311 * C5023) *
              C31327 * C31686 +
          (((C113 * C522 + C31552 * C537) * C1173 +
            (C113 * C538 + C31552 * C552) * C1167 - C5949 * C1174 -
            C5950 * C1168 + C5951 * C1175 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C1173 + C5950 * C1167 - C5951 * C1174 - C5952 * C1168 +
            C5953 * C1175 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C1173 + C5952 * C1167 - C5953 * C1174 - C5954 * C1168 +
            (C113 * C5920 + C31552 * C5925) * C1175 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31693 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31680 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C1976 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31680 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31693 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C31693 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31680 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            C5805 * C304 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C1976 +
          ((C5613 * C303 -
            ((C113 * C533 + C31552 * C550) * C31696 +
             (C113 * C520 + C31552 * C534) * C302) +
            C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
            C5947 * C304 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
            C6325 * C304 - C6326 * C31659) *
               C31311 * C5023) *
              C31327 * C1977 +
          (((C113 * C522 + C31552 * C537) * C302 +
            (C113 * C538 + C31552 * C552) * C31696 - C5949 * C303 -
            C5950 * C31684 + C5951 * C304 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C302 + C5950 * C31696 - C5951 * C303 - C5952 * C31684 +
            C5953 * C304 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C302 + C5952 * C31696 - C5953 * C303 - C5954 * C31684 +
            (C113 * C5920 + C31552 * C5925) * C304 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
           (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
              C31327 * C2151 -
          ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
           (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
           ((C113 * C533 + C31552 * C550) * C31355 +
            (C113 * C520 + C31552 * C534) * C114) *
               C31311 * C5021) *
              C31327 * C2152 +
          (((C113 * C522 + C31552 * C537) * C114 +
            (C113 * C538 + C31552 * C552) * C31355) *
               C31311 * C5021 +
           (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
           (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
              C31327 * C2153 -
          (((C113 * C6611 + C31552 * C6617) * C31355 +
            (C113 * C6608 + C31552 * C6612) * C114) *
               C31311 * C5023 +
           ((C113 * C2574 + C31552 * C2579) * C31355 +
            (C113 * C2570 + C31552 * C2573) * C114) *
               C31311 * C5022 +
           ((C113 * C2166 + C31552 * C2176) * C31355 +
            (C113 * C2158 + C31552 * C2167) * C114) *
               C31311 * C5021) *
              C31327 * C2154 +
          (((C113 * C2159 + C31552 * C2168) * C114 +
            (C113 * C2169 + C31552 * C2177) * C31355) *
               C31311 * C5021 +
           ((C113 * C6609 + C31552 * C6613) * C114 +
            (C113 * C6614 + C31552 * C6618) * C31355) *
               C31311 * C5022 +
           ((C113 * C6610 + C31552 * C6615) * C114 +
            (C113 * C6616 + C31552 * C6619) * C31355) *
               C31311 * C5023) *
              C31327 * C2155)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 -
             (C113 * C305 + C31552 * C315) * C1174 -
             (C113 * C316 + C31552 * C335) * C1168 +
             (C113 * C306 + C31552 * C317) * C1175 +
             (C113 * C318 + C31552 * C336) * C31659) *
                C103 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
            C1199 * C105) *
               C31541 * C31616 +
           ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
            (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
            (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
               C31541 * C31337) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             (C113 * C1010 + C31552 * C1019) * C1168 -
             (C113 * C1406 + C31552 * C1415) * C1175 -
             (C113 * C1416 + C31552 * C1433) * C31659) *
                C103 +
            (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C104 +
            (C1741 - (C1742 + C1743) + C1744 - C1755 - C1756) * C105) *
               C31541 * C31616 +
           ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C103 +
            (C1743 + C1742 - C1741 - C1744 + C1755 + C1756) * C104 +
            (C586 * C1173 + C587 * C1167 - C1048 * C1174 - C1049 * C1168 +
             (C113 * C1728 + C31552 * C1729) * C1175 +
             (C113 * C1730 + C31552 * C1731) * C31659) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C707 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C708 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C709 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31541 * C31663) *
              C31631 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C708 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C707 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C709 +
           (C850 * C103 + (C858 + C857) * C104 +
            ((C113 * C845 + C31552 * C846) * C114 +
             (C113 * C847 + C31552 * C848) * C31355) *
                C105) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31616 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31337) *
              C2448 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31337 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31616) *
              C2449 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C31616 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31337) *
              C2450 +
          (((C2469 + C2470) * C103 + (C2471 + C2472) * C104 +
            ((C113 * C2452 + C31552 * C2453) * C114 +
             (C113 * C2454 + C31552 * C2455) * C31355) *
                C105) *
               C31541 * C31337 -
           ((C2472 + C2471) * C105 + (C2470 + C2469) * C104 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C103) *
               C31541 * C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C707 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C708 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C709 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C31631 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C708 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C707 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C709 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
             C5805 * C1175 + C5806 * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
            (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
             C1575 * C1175 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
             C6061 * C1175 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C31631 +
          (((C5613 * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
             C5947 * C1175 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
             (C113 * C5918 + C31552 * C5921) * C1175 -
             (C113 * C5922 + C31552 * C5927) * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C31311 * C5021 +
            (C1043 * C1173 + C1044 * C1167 - C1749 * C1174 - C1750 * C1168 +
             C6217 * C1175 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C1173 + C1750 * C1167 - C6217 * C1174 - C6218 * C1168 +
             (C113 * C6208 + C31552 * C6209) * C1175 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31616 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31337) *
              C2448 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31337 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31616) *
              C2449 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C31616 -
           ((C6776 * C31355 + C6775 * C114) * C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31337) *
              C2450 +
          (((C2469 + C2470) * C31311 * C5021 +
            ((C113 * C2571 + C31552 * C2575) * C114 +
             (C113 * C2576 + C31552 * C2580) * C31355) *
                C31311 * C5022 +
            ((C113 * C6874 + C31552 * C6875) * C114 +
             (C113 * C6876 + C31552 * C6877) * C31355) *
                C31311 * C5023) *
               C31337 -
           (((C113 * C6611 + C31552 * C6617) * C31355 +
             (C113 * C6608 + C31552 * C6612) * C114) *
                C31311 * C5023 +
            ((C113 * C2574 + C31552 * C2579) * C31355 +
             (C113 * C2570 + C31552 * C2573) * C114) *
                C31311 * C5022 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C31311 * C5021) *
               C31616) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
           (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
           (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
              C31541 * C300 +
          (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
           (C170 * C302 + C171 * C31696 - (C113 * C313 + C31552 * C331) * C303 -
            (C113 * C332 + C31552 * C343) * C31684 +
            (C113 * C314 + C31552 * C333) * C304 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31541 * C107 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31541 *
              C108 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C109 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31541 *
              C110 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31552 * C134) * C114 +
            (C113 * C135 + C31552 * C142) * C31355) *
               C105) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
           (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
           (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
              C31541 * C31680 +
          (C1199 * C103 +
           (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
           (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
            (C113 * C314 + C31552 * C333) * C1175 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 -
           (C113 * C305 + C31552 * C315) * C1268 -
           (C113 * C316 + C31552 * C335) * C1262 +
           (C113 * C306 + C31552 * C317) * C1269 +
           (C113 * C318 + C31552 * C336) * C1263 -
           (C113 * C1272 + C31552 * C1278) * C1270 -
           (C113 * C1279 + C31552 * C1290) * C1264 +
           (C113 * C1273 + C31552 * C1280) * C1271 +
           (C113 * C1281 + C31552 * C1291) * C1265) *
              C103 +
          (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
           C378 * C1269 + C379 * C1263 -
           (C113 * C1274 + C31552 * C1282) * C1270 -
           (C113 * C1283 + C31552 * C1292) * C1264 +
           (C113 * C1275 + C31552 * C1284) * C1271 +
           (C113 * C1285 + C31552 * C1293) * C1265) *
              C104 +
          (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
           C383 * C1269 + C384 * C1263 -
           (C113 * C1276 + C31552 * C1286) * C1270 -
           (C113 * C1287 + C31552 * C1294) * C1264 +
           (C113 * C1277 + C31552 * C1288) * C1271 +
           (C113 * C1289 + C31552 * C1295) * C1265) *
              C105) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31693 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31680 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31653) *
              C1976 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31680 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31693 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31653) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C31693 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31680 +
           (C607 * C103 + (C605 + C604) * C104 +
            ((C113 * C526 + C31552 * C545) * C114 +
             (C113 * C546 + C31552 * C556) * C31355) *
                C105) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C31327 * C1976 +
          (((C113 * C1004 + C31552 * C1009) * C303 -
            ((C113 * C533 + C31552 * C550) * C31696 +
             (C113 * C520 + C31552 * C534) * C302) +
            (C113 * C1010 + C31552 * C1019) * C31684 -
            (C113 * C1406 + C31552 * C1415) * C304 -
            (C113 * C1416 + C31552 * C1433) * C31659) *
               C103 +
           (C1043 * C303 - (C583 * C31696 + C582 * C302) + C1044 * C31684 -
            C1749 * C304 - C1750 * C31659) *
               C104 +
           (C1045 * C303 - (C585 * C31696 + C584 * C302) + C1047 * C31684 -
            C1751 * C304 - C1752 * C31659) *
               C105) *
              C31541 * C31327 * C1977 +
          (((C113 * C522 + C31552 * C537) * C302 +
            (C113 * C538 + C31552 * C552) * C31696 -
            (C113 * C1409 + C31552 * C1421) * C303 -
            (C113 * C1422 + C31552 * C1436) * C31684 +
            (C113 * C1410 + C31552 * C1423) * C304 +
            (C113 * C1424 + C31552 * C1437) * C31659) *
               C103 +
           (C588 * C302 + C589 * C31696 -
            (C113 * C1411 + C31552 * C1425) * C303 -
            (C113 * C1426 + C31552 * C1438) * C31684 +
            (C113 * C1412 + C31552 * C1427) * C304 +
            (C113 * C1428 + C31552 * C1439) * C31659) *
               C104 +
           (C590 * C302 + C591 * C31696 -
            (C113 * C1413 + C31552 * C1429) * C303 -
            (C113 * C1430 + C31552 * C1440) * C31684 +
            (C113 * C1414 + C31552 * C1431) * C304 +
            (C113 * C1432 + C31552 * C1441) * C31659) *
               C105) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31693 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31680 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C1976 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31680 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31693 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C1977 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C31693 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31680 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            C5805 * C304 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C1976 +
          ((C5613 * C303 -
            ((C113 * C533 + C31552 * C550) * C31696 +
             (C113 * C520 + C31552 * C534) * C302) +
            C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
            C5947 * C304 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
            C6325 * C304 - C6326 * C31659) *
               C31311 * C5023) *
              C31327 * C1977 +
          (((C113 * C522 + C31552 * C537) * C302 +
            (C113 * C538 + C31552 * C552) * C31696 - C5949 * C303 -
            C5950 * C31684 + C5951 * C304 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C302 + C5950 * C31696 - C5951 * C303 - C5952 * C31684 +
            C5953 * C304 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C302 + C5952 * C31696 - C5953 * C303 - C5954 * C31684 +
            (C113 * C5920 + C31552 * C5925) * C304 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C31332 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C31340 +
           (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
            (C730 + C731 - C742 - C743) * C105) *
               C31541 * C3111) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C31332 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C31340 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C712 -
             (C855 * C31630 + C856 * C711) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C744 * C31311 * C5021 +
            (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
                C31311 * C5023) *
               C3111) *
              C3547 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
                C31311 * C5023) *
               C31332 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 - C6217 * C712 - C6218 * C31418) *
                C31311 * C5023) *
               C31340 +
           (C1057 * C31311 * C5021 +
            (C1751 * C712 - (C1047 * C31630 + C1045 * C711) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C712 -
             (C1752 * C31630 + C1751 * C711) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C3111) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C2812 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C31337) *
              C31456 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C2812 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 -
             (C113 * C1409 + C31552 * C1421) * C712 -
             (C113 * C1422 + C31552 * C1436) * C31418) *
                C103 +
            (C2331 + C2332 - C2347 - C2348) * C104 +
            (C2337 + C2338 - C2349 - C2350) * C105) *
               C31541 * C2812 +
           ((C2347 - (C2332 + C2331) + C2348) * C103 +
            (C2349 - (C2338 + C2337) + C2350) * C104 +
            ((C113 * C2326 + C31552 * C2327) * C712 -
             (C592 * C31630 + C593 * C711) +
             (C113 * C2328 + C31552 * C2329) * C31418) *
                C105) *
               C31541 * C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31456 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            (C5947 * C712 - (C5616 * C31630 + C5615 * C711) + C5948 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 - C6217 * C712 - C6218 * C31418) *
                C31311 * C5023) *
               C31337) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C711 +
             (C113 * C538 + C31552 * C552) * C31630 - C5949 * C712 -
             C5950 * C31418) *
                C31311 * C5021 +
            (C5949 * C711 + C5950 * C31630 - C5951 * C712 - C5952 * C31418) *
                C31311 * C5022 +
            (C5951 * C711 + C5952 * C31630 - C5953 * C712 - C5954 * C31418) *
                C31311 * C5023) *
               C2812 +
           ((C2347 - (C2332 + C2331) + C2348) * C31311 * C5021 +
            (C6775 * C712 - (C2344 * C31630 + C2343 * C711) + C6776 * C31418) *
                C31311 * C5022 +
            ((C113 * C6766 + C31552 * C6767) * C712 -
             (C6776 * C31630 + C6775 * C711) +
             (C113 * C6768 + C31552 * C6769) * C31418) *
                C31311 * C5023) *
               C31337) *
              C4067)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 -
             (C113 * C305 + C31552 * C315) * C303 -
             (C113 * C316 + C31552 * C335) * C31684 +
             (C113 * C306 + C31552 * C317) * C304 +
             (C113 * C318 + C31552 * C336) * C31659) *
                C103 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
               C31541 * C2812 +
           ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
            (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
            (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
               C31541 * C31337) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             (C113 * C1010 + C31552 * C1019) * C31684 -
             (C113 * C1406 + C31552 * C1415) * C304 -
             (C113 * C1416 + C31552 * C1433) * C31659) *
                C103 +
            (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C104 +
            (C3702 - (C3703 + C3704) + C3705 - C3706 - C3707) * C105) *
               C31541 * C2812 +
           ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C103 +
            (C3704 + C3703 - C3702 - C3705 + C3706 + C3707) * C104 +
            (C586 * C302 + C587 * C31696 - C1048 * C303 - C1049 * C31684 +
             (C113 * C1728 + C31552 * C1729) * C304 +
             (C113 * C1730 + C31552 * C1731) * C31659) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31702 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31695 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31682 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31541 * C31663) *
              C3547 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31695 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31702 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31682 +
           (C850 * C103 + (C858 + C857) * C104 +
            ((C113 * C845 + C31552 * C846) * C114 +
             (C113 * C847 + C31552 * C848) * C31355) *
                C105) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C2812 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31337) *
              C31704 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31337 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C2812) *
              C31701 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C2812 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31337) *
              C31692 +
          (((C2469 + C2470) * C103 + (C2471 + C2472) * C104 +
            ((C113 * C2452 + C31552 * C2453) * C114 +
             (C113 * C2454 + C31552 * C2455) * C31355) *
                C105) *
               C31541 * C31337 -
           ((C2472 + C2471) * C105 + (C2470 + C2469) * C104 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C103) *
               C31541 * C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31702 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31695 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31682 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C3547 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31695 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31702 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31682 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
             C5805 * C304 + C5806 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
            (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
             C1575 * C304 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
             C6061 * C304 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C3547 +
          (((C5613 * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
             C5947 * C304 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
             C6325 * C304 - C6326 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C31311 * C5021 +
            (C1043 * C302 + C1044 * C31696 - C1749 * C303 - C1750 * C31684 +
             C6217 * C304 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C302 + C1750 * C31696 - C6217 * C303 - C6218 * C31684 +
             (C113 * C6208 + C31552 * C6209) * C304 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C2812 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31337) *
              C31704 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31337 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C2812) *
              C31701 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C2812 -
           ((C6776 * C31355 + C6775 * C114) * C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31337) *
              C31692 +
          (((C2469 + C2470) * C31311 * C5021 +
            ((C113 * C2571 + C31552 * C2575) * C114 +
             (C113 * C2576 + C31552 * C2580) * C31355) *
                C31311 * C5022 +
            ((C113 * C6874 + C31552 * C6875) * C114 +
             (C113 * C6876 + C31552 * C6877) * C31355) *
                C31311 * C5023) *
               C31337 -
           ((C6992 * C31355 + C6991 * C114) * C31311 * C5023 +
            (C6990 * C31355 + C6989 * C114) * C31311 * C5022 +
            ((C113 * C2166 + C31552 * C2176) * C31355 +
             (C113 * C2158 + C31552 * C2167) * C114) *
                C31311 * C5021) *
               C2812) *
              C31675)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31332 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31340 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C3111) *
              C31456 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31340 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31332 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C3111) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C31332 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C31340 +
           (C607 * C103 + (C605 + C604) * C104 +
            ((C113 * C526 + C31552 * C545) * C114 +
             (C113 * C546 + C31552 * C556) * C31355) *
                C105) *
               C31541 * C3111) *
              C4067)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31332 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31340 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C3111) *
              C31456 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31340 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31332 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C3111) *
              C31463 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            (C5949 * C114 + C5950 * C31355) * C31311 * C5022 +
            (C5951 * C114 + C5952 * C31355) * C31311 * C5023) *
               C31332 -
           ((C6776 * C31355 + C6775 * C114) * C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C31340 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C3111) *
              C4067)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C31702 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C31695 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31682 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31541 * C31663) *
              C3547 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C31695 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C31702 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31682 +
           (C850 * C103 + (C858 + C857) * C104 +
            ((C113 * C845 + C31552 * C846) * C114 +
             (C113 * C847 + C31552 * C848) * C31355) *
                C105) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 -
             (C113 * C305 + C31552 * C315) * C303 -
             (C113 * C316 + C31552 * C335) * C31684 +
             (C113 * C306 + C31552 * C317) * C304 +
             (C113 * C318 + C31552 * C336) * C31659) *
                C103 +
            (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
               C31541 * C2812 +
           ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
            (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
            (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
               C31541 * C31337) *
              C3547 +
          ((((C113 * C1004 + C31552 * C1009) * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             (C113 * C1010 + C31552 * C1019) * C31684 -
             (C113 * C1406 + C31552 * C1415) * C304 -
             (C113 * C1416 + C31552 * C1433) * C31659) *
                C103 +
            (C3696 - (C3697 + C3698) + C3699 - C3700 - C3701) * C104 +
            (C3702 - (C3703 + C3704) + C3705 - C3706 - C3707) * C105) *
               C31541 * C2812 +
           ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C103 +
            (C3704 + C3703 - C3702 - C3705 + C3706 + C3707) * C104 +
            (C586 * C302 + C587 * C31696 - C1048 * C303 - C1049 * C31684 +
             (C113 * C1728 + C31552 * C1729) * C304 +
             (C113 * C1730 + C31552 * C1731) * C31659) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C31702 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C31695 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31682 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C3547 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C31695 -
           ((C5616 * C31355 + C5615 * C114) * C31311 * C5023 +
            (C5614 * C31355 + C5613 * C114) * C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C31702 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31682 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C302 +
             (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
             C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
             C5151 * C304 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
             C5805 * C304 + C5806 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
            (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
             C1575 * C304 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
             C6061 * C304 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C3547 +
          (((C5613 * C303 -
             ((C113 * C533 + C31552 * C550) * C31696 +
              (C113 * C520 + C31552 * C534) * C302) +
             C5614 * C31684 - C5615 * C304 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C303 - (C5614 * C31696 + C5613 * C302) + C5616 * C31684 -
             C5947 * C304 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C303 - (C5616 * C31696 + C5615 * C302) + C5948 * C31684 -
             C6325 * C304 - C6326 * C31659) *
                C31311 * C5023) *
               C2812 +
           ((C3698 + C3697 - C3696 - C3699 + C3700 + C3701) * C31311 * C5021 +
            (C1043 * C302 + C1044 * C31696 - C1749 * C303 - C1750 * C31684 +
             C6217 * C304 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C302 + C1750 * C31696 - C6217 * C303 - C6218 * C31684 +
             (C113 * C6208 + C31552 * C6209) * C304 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 -
            (C113 * C305 + C31552 * C315) * C712 -
            (C113 * C316 + C31552 * C335) * C31418) *
               C103 +
           (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
              C31541 * C707 +
          ((C720 - (C719 + C718) + C721) * C103 +
           (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
              C31541 * C708 +
          (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
           (C730 + C731 - C742 - C743) * C105) *
              C31541 * C709 +
          (C745 * C103 + (C742 - (C731 + C730) + C743) * C104 +
           ((C113 * C713 + C31552 * C714) * C712 -
            (C172 * C31630 + C173 * C711) +
            (C113 * C715 + C31552 * C716) * C31418) *
               C105) *
              C31541 * C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 -
            (C113 * C305 + C31552 * C315) * C1547 -
            (C113 * C316 + C31552 * C335) * C1541 +
            (C113 * C306 + C31552 * C317) * C1548 +
            (C113 * C318 + C31552 * C336) * C1542 -
            (C113 * C1272 + C31552 * C1278) * C1549 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
               C104 +
           (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
               C105) *
              C31541 * C31616 +
          ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
               C103 +
           (C1567 - (C1566 + C1565) + C1568 - C1569 - C1570 + C1581 + C1582) *
               C104 +
           (C385 * C1547 - (C168 * C1540 + C169 * C1546) + C386 * C1541 -
            C387 * C1548 - C388 * C1542 +
            (C113 * C1550 + C31552 * C1551) * C1549 +
            (C113 * C1552 + C31552 * C1553) * C31669) *
               C105) *
              C31541 * C31337) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C711 +
            (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
            C5148 * C31418) *
               C31311 * C5021 +
           (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
               C31311 * C5022 +
           (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
               C31311 * C5023) *
              C707 +
          ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
           (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
               C31311 * C5022 +
           (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
               C31311 * C5023) *
              C708 +
          (C744 * C31311 * C5021 +
           (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
               C31311 * C5022 +
           (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
               C31311 * C5023) *
              C709 +
          (C745 * C31311 * C5021 +
           (C387 * C712 - (C386 * C31630 + C385 * C711) + C388 * C31418) *
               C31311 * C5022 +
           ((C113 * C1550 + C31552 * C1551) * C712 -
            (C388 * C31630 + C387 * C711) +
            (C113 * C1552 + C31552 * C1553) * C31418) *
               C31311 * C5023) *
              C31663) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31616 +
          ((C1557 - (C1556 + C1555) + C1558 - C1559 - C1560 + C1579 + C1580) *
               C31311 * C5021 +
           (C378 * C1547 - (C377 * C1540 + C376 * C1546) + C379 * C1541 -
            C1575 * C1548 - C1576 * C1542 + C6061 * C1549 + C6062 * C31669) *
               C31311 * C5022 +
           (C1575 * C1547 - (C379 * C1540 + C378 * C1546) + C1576 * C1541 -
            C6061 * C1548 - C6062 * C1542 +
            (C113 * C6052 + C31552 * C6053) * C1549 +
            (C113 * C6054 + C31552 * C6055) * C31669) *
               C31311 * C5023) *
              C31337) *
         C31373) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 -
             (C113 * C305 + C31552 * C315) * C712 -
             (C113 * C316 + C31552 * C335) * C31418) *
                C103 +
            (C718 + C719 - C720 - C721) * C104 + C744 * C105) *
               C31541 * C299 +
           ((C720 - (C719 + C718) + C721) * C103 +
            (C724 - (C723 + C722) + C725) * C104 + C745 * C105) *
               C31541 * C300 +
           (C744 * C103 + (C728 + C727 - C726 - C729) * C104 +
            (C730 + C731 - C742 - C743) * C105) *
               C31541 * C31653) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             (C113 * C1010 + C31552 * C1019) * C31418) *
                C103 +
            (C1050 - (C1027 + C1028) + C1051) * C104 + C1057 * C105) *
               C31541 * C299 +
           ((C1028 + C1027 - C1050 - C1051) * C103 +
            (C1034 + C1033 - C1052 - C1053) * C104 +
            (C1037 + C1038 - C1054 - C1055) * C105) *
               C31541 * C300 +
           (C1057 * C103 + (C1054 - (C1038 + C1037) + C1055) * C104 +
            ((C113 * C1008 + C31552 * C1017) * C712 -
             (C855 * C31630 + C856 * C711) +
             (C113 * C1018 + C31552 * C1023) * C31418) *
                C105) *
               C31541 * C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 -
            (C113 * C305 + C31552 * C315) * C1547 -
            (C113 * C316 + C31552 * C335) * C1541 +
            (C113 * C306 + C31552 * C317) * C1548 +
            (C113 * C318 + C31552 * C336) * C1542 -
            (C113 * C1272 + C31552 * C1278) * C1549 -
            (C113 * C1279 + C31552 * C1290) * C31669) *
               C103 +
           (C1555 + C1556 - C1557 - C1558 + C1559 + C1560 - C1579 - C1580) *
               C104 +
           (C1565 + C1566 - C1567 - C1568 + C1569 + C1570 - C1581 - C1582) *
               C105) *
              C31541 * C31327 * C31631 +
          (((C113 * C1004 + C31552 * C1009) * C1547 -
            ((C113 * C533 + C31552 * C550) * C1540 +
             (C113 * C520 + C31552 * C534) * C1546) +
            (C113 * C1010 + C31552 * C1019) * C1541 -
            (C113 * C1406 + C31552 * C1415) * C1548 -
            (C113 * C1416 + C31552 * C1433) * C1542 +
            (C113 * C1854 + C31552 * C1857) * C1549 +
            (C113 * C1858 + C31552 * C1863) * C31669) *
               C103 +
           (C1043 * C1547 - (C583 * C1540 + C582 * C1546) + C1044 * C1541 -
            C1749 * C1548 - C1750 * C1542 +
            (C113 * C1855 + C31552 * C1859) * C1549 +
            (C113 * C1860 + C31552 * C1864) * C31669) *
               C104 +
           (C1045 * C1547 - (C585 * C1540 + C584 * C1546) + C1047 * C1541 -
            C1751 * C1548 - C1752 * C1542 +
            (C113 * C1856 + C31552 * C1861) * C1549 +
            (C113 * C1862 + C31552 * C1865) * C31669) *
               C105) *
              C31541 * C31327 * C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C711 +
             (C113 * C123 + C31552 * C136) * C31630 - C5147 * C712 -
             C5148 * C31418) *
                C31311 * C5021 +
            (C5147 * C711 + C5148 * C31630 - C5149 * C712 - C5150 * C31418) *
                C31311 * C5022 +
            (C5149 * C711 + C5150 * C31630 - C5151 * C712 - C5152 * C31418) *
                C31311 * C5023) *
               C299 +
           ((C720 - (C719 + C718) + C721) * C31311 * C5021 +
            (C378 * C712 - (C377 * C31630 + C376 * C711) + C379 * C31418) *
                C31311 * C5022 +
            (C1575 * C712 - (C379 * C31630 + C378 * C711) + C1576 * C31418) *
                C31311 * C5023) *
               C300 +
           (C744 * C31311 * C5021 +
            (C381 * C711 + C382 * C31630 - C383 * C712 - C384 * C31418) *
                C31311 * C5022 +
            (C383 * C711 + C384 * C31630 - C1577 * C712 - C1578 * C31418) *
                C31311 * C5023) *
               C31653) *
              C31631 +
          (((C5613 * C712 -
             ((C113 * C533 + C31552 * C550) * C31630 +
              (C113 * C520 + C31552 * C534) * C711) +
             C5614 * C31418) *
                C31311 * C5021 +
            (C5615 * C712 - (C5614 * C31630 + C5613 * C711) + C5616 * C31418) *
                C31311 * C5022 +
            ((C113 * C1854 + C31552 * C1857) * C712 -
             (C5616 * C31630 + C5615 * C711) +
             (C113 * C1858 + C31552 * C1863) * C31418) *
                C31311 * C5023) *
               C299 +
           ((C1028 + C1027 - C1050 - C1051) * C31311 * C5021 +
            (C1043 * C711 + C1044 * C31630 - C1749 * C712 - C1750 * C31418) *
                C31311 * C5022 +
            (C1749 * C711 + C1750 * C31630 -
             (C113 * C1855 + C31552 * C1859) * C712 -
             (C113 * C1860 + C31552 * C1864) * C31418) *
                C31311 * C5023) *
               C300 +
           (C1057 * C31311 * C5021 +
            (C1751 * C712 - (C1047 * C31630 + C1045 * C711) + C1752 * C31418) *
                C31311 * C5022 +
            ((C113 * C1856 + C31552 * C1861) * C712 -
             (C1752 * C31630 + C1751 * C711) +
             (C113 * C1862 + C31552 * C1865) * C31418) *
                C31311 * C5023) *
               C31653) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1546 +
            (C113 * C123 + C31552 * C136) * C1540 - C5147 * C1547 -
            C5148 * C1541 + C5149 * C1548 + C5150 * C1542 - C5151 * C1549 -
            C5152 * C31669) *
               C31311 * C5021 +
           (C5147 * C1546 + C5148 * C1540 - C5149 * C1547 - C5150 * C1541 +
            C5151 * C1548 + C5152 * C1542 - C5805 * C1549 - C5806 * C31669) *
               C31311 * C5022 +
           (C5149 * C1546 + C5150 * C1540 - C5151 * C1547 - C5152 * C1541 +
            C5805 * C1548 + C5806 * C1542 - C5807 * C1549 - C5808 * C31669) *
               C31311 * C5023) *
              C31327 * C31631 +
          ((C5613 * C1547 -
            ((C113 * C533 + C31552 * C550) * C1540 +
             (C113 * C520 + C31552 * C534) * C1546) +
            C5614 * C1541 - C5615 * C1548 - C5616 * C1542 + C5947 * C1549 +
            C5948 * C31669) *
               C31311 * C5021 +
           (C5615 * C1547 - (C5614 * C1540 + C5613 * C1546) + C5616 * C1541 -
            C5947 * C1548 - C5948 * C1542 + C6325 * C1549 + C6326 * C31669) *
               C31311 * C5022 +
           (C5947 * C1547 - (C5616 * C1540 + C5615 * C1546) + C5948 * C1541 -
            C6325 * C1548 - C6326 * C1542 +
            (C113 * C6316 + C31552 * C6317) * C1549 +
            (C113 * C6318 + C31552 * C6319) * C31669) *
               C31311 * C5023) *
              C31327 * C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
           (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
           (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
              C31541 * C300 +
          (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
           (C170 * C302 + C171 * C31696 - (C113 * C313 + C31552 * C331) * C303 -
            (C113 * C332 + C31552 * C343) * C31684 +
            (C113 * C314 + C31552 * C333) * C304 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31541 * C107 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31541 *
              C108 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C109 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31541 *
              C110 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31552 * C134) * C114 +
            (C113 * C135 + C31552 * C142) * C31355) *
               C105) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C299 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C300 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 *
               C31653) *
              C31697 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 +
            (C598 + C599) * C105) *
               C31541 * C300 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C299 -
           (((C113 * C535 + C31552 * C551) * C31355 +
             (C113 * C521 + C31552 * C536) * C114) *
                C105 +
            (C599 + C598) * C104 + C606 * C103) *
               C31541 * C31653) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C103 +
            (C600 + C601) * C104 + C607 * C105) *
               C31541 * C299 -
           ((C604 + C605) * C105 + (C603 + C602) * C104 +
            (C601 + C600) * C103) *
               C31541 * C300 +
           (C607 * C103 + (C605 + C604) * C104 +
            ((C113 * C526 + C31552 * C545) * C114 +
             (C113 * C546 + C31552 * C556) * C31355) *
                C105) *
               C31541 * C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
           (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
           (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
              C31541 * C31680 +
          (C1199 * C103 +
           (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
           (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
            (C113 * C314 + C31552 * C333) * C1175 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 -
           (C113 * C305 + C31552 * C315) * C1268 -
           (C113 * C316 + C31552 * C335) * C1262 +
           (C113 * C306 + C31552 * C317) * C1269 +
           (C113 * C318 + C31552 * C336) * C1263 -
           (C113 * C1272 + C31552 * C1278) * C1270 -
           (C113 * C1279 + C31552 * C1290) * C1264 +
           (C113 * C1273 + C31552 * C1280) * C1271 +
           (C113 * C1281 + C31552 * C1291) * C1265) *
              C103 +
          (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
           C378 * C1269 + C379 * C1263 -
           (C113 * C1274 + C31552 * C1282) * C1270 -
           (C113 * C1283 + C31552 * C1292) * C1264 +
           (C113 * C1275 + C31552 * C1284) * C1271 +
           (C113 * C1285 + C31552 * C1293) * C1265) *
              C104 +
          (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
           C383 * C1269 + C384 * C1263 -
           (C113 * C1276 + C31552 * C1286) * C1270 -
           (C113 * C1287 + C31552 * C1294) * C1264 +
           (C113 * C1277 + C31552 * C1288) * C1271 +
           (C113 * C1289 + C31552 * C1295) * C1265) *
              C105) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31327 * C31697 +
          (((C113 * C1004 + C31552 * C1009) * C1174 -
            ((C113 * C533 + C31552 * C550) * C1167 +
             (C113 * C520 + C31552 * C534) * C1173) +
            (C113 * C1010 + C31552 * C1019) * C1168 -
            (C113 * C1406 + C31552 * C1415) * C1175 -
            (C113 * C1416 + C31552 * C1433) * C31659) *
               C103 +
           (C1043 * C1174 - (C583 * C1167 + C582 * C1173) + C1044 * C1168 -
            (C113 * C1407 + C31552 * C1417) * C1175 -
            (C113 * C1418 + C31552 * C1434) * C31659) *
               C104 +
           (C1045 * C1174 - (C585 * C1167 + C584 * C1173) + C1047 * C1168 -
            (C113 * C1408 + C31552 * C1419) * C1175 -
            (C113 * C1420 + C31552 * C1435) * C31659) *
               C105) *
              C31541 * C31327 * C31686 +
          (((C113 * C522 + C31552 * C537) * C1173 +
            (C113 * C538 + C31552 * C552) * C1167 -
            (C113 * C1409 + C31552 * C1421) * C1174 -
            (C113 * C1422 + C31552 * C1436) * C1168 +
            (C113 * C1410 + C31552 * C1423) * C1175 +
            (C113 * C1424 + C31552 * C1437) * C31659) *
               C103 +
           (C588 * C1173 + C589 * C1167 -
            (C113 * C1411 + C31552 * C1425) * C1174 -
            (C113 * C1426 + C31552 * C1438) * C1168 +
            (C113 * C1412 + C31552 * C1427) * C1175 +
            (C113 * C1428 + C31552 * C1439) * C31659) *
               C104 +
           (C590 * C1173 + C591 * C1167 -
            (C113 * C1413 + C31552 * C1429) * C1174 -
            (C113 * C1430 + C31552 * C1440) * C1168 +
            (C113 * C1414 + C31552 * C1431) * C1175 +
            (C113 * C1432 + C31552 * C1441) * C31659) *
               C105) *
              C31541 * C31327 * C31662)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C299 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C300 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C31653) *
              C31697 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C300 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C299 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C31653) *
              C31686 +
          ((((C113 * C522 + C31552 * C537) * C114 +
             (C113 * C538 + C31552 * C552) * C31355) *
                C31311 * C5021 +
            ((C113 * C1409 + C31552 * C1421) * C114 +
             (C113 * C1422 + C31552 * C1436) * C31355) *
                C31311 * C5022 +
            ((C113 * C1410 + C31552 * C1423) * C114 +
             (C113 * C1424 + C31552 * C1437) * C31355) *
                C31311 * C5023) *
               C299 -
           (((C113 * C1428 + C31552 * C1439) * C31355 +
             (C113 * C1412 + C31552 * C1427) * C114) *
                C31311 * C5023 +
            (C2344 * C31355 + C2343 * C114) * C31311 * C5022 +
            (C601 + C600) * C31311 * C5021) *
               C300 +
           (C607 * C31311 * C5021 +
            (C2345 * C114 + C2346 * C31355) * C31311 * C5022 +
            ((C113 * C1414 + C31552 * C1431) * C114 +
             (C113 * C1432 + C31552 * C1441) * C31355) *
                C31311 * C5023) *
               C31653) *
              C31662)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            C5805 * C1175 + C5806 * C31659) *
               C31311 * C5023) *
              C31327 * C31697 +
          ((C5613 * C1174 -
            ((C113 * C533 + C31552 * C550) * C1167 +
             (C113 * C520 + C31552 * C534) * C1173) +
            C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
               C31311 * C5021 +
           (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
            C5947 * C1175 - C5948 * C31659) *
               C31311 * C5022 +
           (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
            (C113 * C5918 + C31552 * C5921) * C1175 -
            (C113 * C5922 + C31552 * C5927) * C31659) *
               C31311 * C5023) *
              C31327 * C31686 +
          (((C113 * C522 + C31552 * C537) * C1173 +
            (C113 * C538 + C31552 * C552) * C1167 - C5949 * C1174 -
            C5950 * C1168 + C5951 * C1175 + C5952 * C31659) *
               C31311 * C5021 +
           (C5949 * C1173 + C5950 * C1167 - C5951 * C1174 - C5952 * C1168 +
            C5953 * C1175 + C5954 * C31659) *
               C31311 * C5022 +
           (C5951 * C1173 + C5952 * C1167 - C5953 * C1174 - C5954 * C1168 +
            (C113 * C5920 + C31552 * C5925) * C1175 +
            (C113 * C5926 + C31552 * C5929) * C31659) *
               C31311 * C5023) *
              C31327 * C31662)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31541 * C707 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31541 * C708 +
           (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C709 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31541 * C31663) *
              C31631 +
          (((C594 + C595) * C103 + (C596 + C597) * C104 + C850 * C105) *
               C31541 * C708 -
           (C606 * C105 + (C595 + C594) * C104 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C103) *
               C31541 * C707 -
           ((C857 + C858) * C105 + (C599 + C598) * C104 + C606 * C103) *
               C31541 * C709 +
           (C850 * C103 + (C858 + C857) * C104 +
            ((C113 * C845 + C31552 * C846) * C114 +
             (C113 * C847 + C31552 * C848) * C31355) *
                C105) *
               C31541 * C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 -
             (C113 * C305 + C31552 * C315) * C1174 -
             (C113 * C316 + C31552 * C335) * C1168 +
             (C113 * C306 + C31552 * C317) * C1175 +
             (C113 * C318 + C31552 * C336) * C31659) *
                C103 +
            (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
            C1199 * C105) *
               C31541 * C31616 +
           ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
            (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
            (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
               C31541 * C31337) *
              C31631 +
          ((((C113 * C1004 + C31552 * C1009) * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             (C113 * C1010 + C31552 * C1019) * C1168 -
             (C113 * C1406 + C31552 * C1415) * C1175 -
             (C113 * C1416 + C31552 * C1433) * C31659) *
                C103 +
            (C1733 - (C1734 + C1735) + C1736 - C1753 - C1754) * C104 +
            (C1741 - (C1742 + C1743) + C1744 - C1755 - C1756) * C105) *
               C31541 * C31616 +
           ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C103 +
            (C1743 + C1742 - C1741 - C1744 + C1755 + C1756) * C104 +
            (C586 * C1173 + C587 * C1167 - C1048 * C1174 - C1049 * C1168 +
             (C113 * C1728 + C31552 * C1729) * C1175 +
             (C113 * C1730 + C31552 * C1731) * C31659) *
                C105) *
               C31541 * C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C114 +
             (C113 * C123 + C31552 * C136) * C31355) *
                C31311 * C5021 +
            (C5147 * C114 + C5148 * C31355) * C31311 * C5022 +
            (C5149 * C114 + C5150 * C31355) * C31311 * C5023) *
               C707 -
           ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
            (C377 * C31355 + C376 * C114) * C31311 * C5022 +
            (C175 + C174) * C31311 * C5021) *
               C708 +
           (C184 * C31311 * C5021 +
            (C381 * C114 + C382 * C31355) * C31311 * C5022 +
            (C383 * C114 + C384 * C31355) * C31311 * C5023) *
               C709 -
           ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
            (C386 * C31355 + C385 * C114) * C31311 * C5022 +
            C185 * C31311 * C5021) *
               C31663) *
              C31631 +
          (((C594 + C595) * C31311 * C5021 +
            (C1043 * C114 + C1044 * C31355) * C31311 * C5022 +
            (C1749 * C114 + C1750 * C31355) * C31311 * C5023) *
               C708 -
           (((C113 * C1416 + C31552 * C1433) * C31355 +
             (C113 * C1406 + C31552 * C1415) * C114) *
                C31311 * C5023 +
            ((C113 * C1010 + C31552 * C1019) * C31355 +
             (C113 * C1004 + C31552 * C1009) * C114) *
                C31311 * C5022 +
            ((C113 * C533 + C31552 * C550) * C31355 +
             (C113 * C520 + C31552 * C534) * C114) *
                C31311 * C5021) *
               C707 -
           ((C1752 * C31355 + C1751 * C114) * C31311 * C5023 +
            (C1047 * C31355 + C1045 * C114) * C31311 * C5022 +
            C606 * C31311 * C5021) *
               C709 +
           (C850 * C31311 * C5021 +
            (C1048 * C114 + C1049 * C31355) * C31311 * C5022 +
            ((C113 * C1728 + C31552 * C1729) * C114 +
             (C113 * C1730 + C31552 * C1731) * C31355) *
                C31311 * C5023) *
               C31663) *
              C31460)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31552 * C122) * C1173 +
             (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
             C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
                C31311 * C5021 +
            (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
             C5151 * C1175 + C5152 * C31659) *
                C31311 * C5022 +
            (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
             C5805 * C1175 + C5806 * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
            (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
             C1575 * C1175 - C1576 * C31659) *
                C31311 * C5022 +
            (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
             C6061 * C1175 - C6062 * C31659) *
                C31311 * C5023) *
               C31337) *
              C31631 +
          (((C5613 * C1174 -
             ((C113 * C533 + C31552 * C550) * C1167 +
              (C113 * C520 + C31552 * C534) * C1173) +
             C5614 * C1168 - C5615 * C1175 - C5616 * C31659) *
                C31311 * C5021 +
            (C5615 * C1174 - (C5614 * C1167 + C5613 * C1173) + C5616 * C1168 -
             C5947 * C1175 - C5948 * C31659) *
                C31311 * C5022 +
            (C5947 * C1174 - (C5616 * C1167 + C5615 * C1173) + C5948 * C1168 -
             (C113 * C5918 + C31552 * C5921) * C1175 -
             (C113 * C5922 + C31552 * C5927) * C31659) *
                C31311 * C5023) *
               C31616 +
           ((C1735 + C1734 - C1733 - C1736 + C1753 + C1754) * C31311 * C5021 +
            (C1043 * C1173 + C1044 * C1167 - C1749 * C1174 - C1750 * C1168 +
             C6217 * C1175 + C6218 * C31659) *
                C31311 * C5022 +
            (C1749 * C1173 + C1750 * C1167 - C6217 * C1174 - C6218 * C1168 +
             (C113 * C6208 + C31552 * C6209) * C1175 +
             (C113 * C6210 + C31552 * C6211) * C31659) *
                C31311 * C5023) *
               C31337) *
              C31460)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C31541 * C107 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C31541 *
              C108 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31541 * C109 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C31541 *
              C110 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31552 * C134) * C114 +
            (C113 * C135 + C31552 * C142) * C31355) *
               C105) *
              C31541 * C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 -
            (C113 * C305 + C31552 * C315) * C303 -
            (C113 * C316 + C31552 * C335) * C31684 +
            (C113 * C306 + C31552 * C317) * C304 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C346 + C347 - C389 - C390 + C391 + C392) * C104 + C404 * C105) *
              C31541 * C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C103 +
           (C393 - (C357 + C356) + C394 - C395 - C396) * C104 +
           (C397 - (C368 + C369) + C398 - C399 - C400) * C105) *
              C31541 * C300 +
          (C404 * C103 + (C369 + C368 - C397 - C398 + C399 + C400) * C104 +
           (C170 * C302 + C171 * C31696 - (C113 * C313 + C31552 * C331) * C303 -
            (C113 * C332 + C31552 * C343) * C31684 +
            (C113 * C314 + C31552 * C333) * C304 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 -
            (C113 * C305 + C31552 * C315) * C1174 -
            (C113 * C316 + C31552 * C335) * C1168 +
            (C113 * C306 + C31552 * C317) * C1175 +
            (C113 * C318 + C31552 * C336) * C31659) *
               C103 +
           (C1177 + C1178 - C1179 - C1180 + C1181 + C1182) * C104 +
           C1199 * C105) *
              C31541 * C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C103 +
           (C1185 - (C1184 + C1183) + C1186 - C1187 - C1188) * C104 +
           (C1189 - (C1190 + C1191) + C1192 - C1193 - C1194) * C105) *
              C31541 * C31680 +
          (C1199 * C103 +
           (C1191 + C1190 - C1189 - C1192 + C1193 + C1194) * C104 +
           (C170 * C1173 + C171 * C1167 - C738 * C1174 - C739 * C1168 +
            (C113 * C314 + C31552 * C333) * C1175 +
            (C113 * C334 + C31552 * C344) * C31659) *
               C105) *
              C31541 * C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 -
           (C113 * C305 + C31552 * C315) * C1268 -
           (C113 * C316 + C31552 * C335) * C1262 +
           (C113 * C306 + C31552 * C317) * C1269 +
           (C113 * C318 + C31552 * C336) * C1263 -
           (C113 * C1272 + C31552 * C1278) * C1270 -
           (C113 * C1279 + C31552 * C1290) * C1264 +
           (C113 * C1273 + C31552 * C1280) * C1271 +
           (C113 * C1281 + C31552 * C1291) * C1265) *
              C103 +
          (C164 * C1267 + C165 * C1261 - C376 * C1268 - C377 * C1262 +
           C378 * C1269 + C379 * C1263 -
           (C113 * C1274 + C31552 * C1282) * C1270 -
           (C113 * C1283 + C31552 * C1292) * C1264 +
           (C113 * C1275 + C31552 * C1284) * C1271 +
           (C113 * C1285 + C31552 * C1293) * C1265) *
              C104 +
          (C166 * C1267 + C167 * C1261 - C381 * C1268 - C382 * C1262 +
           C383 * C1269 + C384 * C1263 -
           (C113 * C1276 + C31552 * C1286) * C1270 -
           (C113 * C1287 + C31552 * C1294) * C1264 +
           (C113 * C1277 + C31552 * C1288) * C1271 +
           (C113 * C1289 + C31552 * C1295) * C1265) *
              C105) *
         C31541 * C31327 * C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C114 +
            (C113 * C123 + C31552 * C136) * C31355) *
               C31311 * C5021 +
           ((C113 * C305 + C31552 * C315) * C114 +
            (C113 * C316 + C31552 * C335) * C31355) *
               C31311 * C5022 +
           ((C113 * C306 + C31552 * C317) * C114 +
            (C113 * C318 + C31552 * C336) * C31355) *
               C31311 * C5023) *
              C107 -
          ((C379 * C31355 + C378 * C114) * C31311 * C5023 +
           (C377 * C31355 + C376 * C114) * C31311 * C5022 +
           (C175 + C174) * C31311 * C5021) *
              C108 +
          (C184 * C31311 * C5021 +
           (C381 * C114 + C382 * C31355) * C31311 * C5022 +
           (C383 * C114 + C384 * C31355) * C31311 * C5023) *
              C109 -
          ((C388 * C31355 + C387 * C114) * C31311 * C5023 +
           (C386 * C31355 + C385 * C114) * C31311 * C5022 +
           C185 * C31311 * C5021) *
              C110 +
          (C186 * C31311 * C5021 +
           (C738 * C114 + C739 * C31355) * C31311 * C5022 +
           ((C113 * C314 + C31552 * C333) * C114 +
            (C113 * C334 + C31552 * C344) * C31355) *
               C31311 * C5023) *
              C111) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C302 +
            (C113 * C123 + C31552 * C136) * C31696 - C5147 * C303 -
            C5148 * C31684 + C5149 * C304 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C302 + C5148 * C31696 - C5149 * C303 - C5150 * C31684 +
            C5151 * C304 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C302 + C5150 * C31696 - C5151 * C303 - C5152 * C31684 +
            (C113 * C1273 + C31552 * C1280) * C304 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C299 +
          ((C389 - (C347 + C346) + C390 - C391 - C392) * C31311 * C5021 +
           (C378 * C303 - (C377 * C31696 + C376 * C302) + C379 * C31684 -
            C1575 * C304 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C303 - (C379 * C31696 + C378 * C302) + C1576 * C31684 -
            (C113 * C1275 + C31552 * C1284) * C304 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C300 +
          (C404 * C31311 * C5021 +
           (C381 * C302 + C382 * C31696 - C383 * C303 - C384 * C31684 +
            C1577 * C304 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C302 + C384 * C31696 - C1577 * C303 - C1578 * C31684 +
            (C113 * C1277 + C31552 * C1288) * C304 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31552 * C122) * C1173 +
            (C113 * C123 + C31552 * C136) * C1167 - C5147 * C1174 -
            C5148 * C1168 + C5149 * C1175 + C5150 * C31659) *
               C31311 * C5021 +
           (C5147 * C1173 + C5148 * C1167 - C5149 * C1174 - C5150 * C1168 +
            C5151 * C1175 + C5152 * C31659) *
               C31311 * C5022 +
           (C5149 * C1173 + C5150 * C1167 - C5151 * C1174 - C5152 * C1168 +
            (C113 * C1273 + C31552 * C1280) * C1175 +
            (C113 * C1281 + C31552 * C1291) * C31659) *
               C31311 * C5023) *
              C31693 +
          ((C1179 - (C1178 + C1177) + C1180 - C1181 - C1182) * C31311 * C5021 +
           (C378 * C1174 - (C377 * C1167 + C376 * C1173) + C379 * C1168 -
            C1575 * C1175 - C1576 * C31659) *
               C31311 * C5022 +
           (C1575 * C1174 - (C379 * C1167 + C378 * C1173) + C1576 * C1168 -
            (C113 * C1275 + C31552 * C1284) * C1175 -
            (C113 * C1285 + C31552 * C1293) * C31659) *
               C31311 * C5023) *
              C31680 +
          (C1199 * C31311 * C5021 +
           (C381 * C1173 + C382 * C1167 - C383 * C1174 - C384 * C1168 +
            C1577 * C1175 + C1578 * C31659) *
               C31311 * C5022 +
           (C383 * C1173 + C384 * C1167 - C1577 * C1174 - C1578 * C1168 +
            (C113 * C1277 + C31552 * C1288) * C1175 +
            (C113 * C1289 + C31552 * C1295) * C31659) *
               C31311 * C5023) *
              C31653) *
         C31373) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31552 * C122) * C1267 +
           (C113 * C123 + C31552 * C136) * C1261 - C5147 * C1268 -
           C5148 * C1262 + C5149 * C1269 + C5150 * C1263 - C5151 * C1270 -
           C5152 * C1264 + C5805 * C1271 + C5806 * C1265) *
              C31311 * C5021 +
          (C5147 * C1267 + C5148 * C1261 - C5149 * C1268 - C5150 * C1262 +
           C5151 * C1269 + C5152 * C1263 - C5805 * C1270 - C5806 * C1264 +
           C5807 * C1271 + C5808 * C1265) *
              C31311 * C5022 +
          (C5149 * C1267 + C5150 * C1261 - C5151 * C1268 - C5152 * C1262 +
           C5805 * C1269 + C5806 * C1263 - C5807 * C1270 - C5808 * C1264 +
           (C113 * C5789 + C31552 * C5792) * C1271 +
           (C113 * C5793 + C31552 * C5795) * C1265) *
              C31311 * C5023) *
         C31327 * C31373) /
            (p * q * std::sqrt(p + q));
}
