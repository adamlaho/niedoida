/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dspd_AA.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_2012_11(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C88089 = ae * be;
    const double C88088 = xA - xB;
    const double C88087 = ae + be;
    const double C88086 = 0 * be;
    const double C88121 = yA - yB;
    const double C88124 = zA - zB;
    const double C88135 = 0 * be;
    const double C88161 = 0 * be;
    const double C88207 = p + q;
    const double C88206 = p * q;
    const double C88212 = xP - xQ;
    const double C88211 = bs[2];
    const double C88219 = std::pow(ae, 2);
    const double C88217 = bs[3];
    const double C88230 = bs[4];
    const double C88251 = bs[5];
    const double C88284 = bs[6];
    const double C88327 = yP - yQ;
    const double C88370 = zP - zQ;
    const double C106 = bs[0];
    const double C89800 = ce + de;
    const double C89799 = ce * de;
    const double C89798 = xC - xD;
    const double C89822 = yC - yD;
    const double C89838 = zC - zD;
    const double C88093 = 2 * C88089;
    const double C88092 = C88089 * C88088;
    const double C89779 = std::pow(C88088, 2);
    const double C89985 = C88088 * be;
    const double C88091 = 2 * C88087;
    const double C88090 = std::pow(C88087, 2);
    const double C88136 = C88089 * C88121;
    const double C89922 = std::pow(C88121, 2);
    const double C90008 = C88121 * be;
    const double C88162 = C88089 * C88124;
    const double C89933 = std::pow(C88124, 2);
    const double C90009 = C88124 * be;
    const double C88208 = 2 * C88206;
    const double C88220 = C88212 * ae;
    const double C88216 = std::pow(C88212, 2);
    const double C88330 = C88327 * ae;
    const double C88329 = C88212 * C88327;
    const double C88414 = C88327 * C88212;
    const double C88435 = std::pow(C88327, 2);
    const double C88373 = C88370 * ae;
    const double C88372 = C88212 * C88370;
    const double C88456 = C88327 * C88370;
    const double C88472 = C88370 * C88212;
    const double C88493 = C88370 * C88327;
    const double C88509 = std::pow(C88370, 2);
    const double C89802 = 2 * C89800;
    const double C89812 = std::pow(C89800, 2);
    const double C89804 = C89798 * de;
    const double C89803 = C89798 * ce;
    const double C89801 = std::pow(C89798, 2);
    const double C89823 = std::pow(C89822, 2);
    const double C89875 = C89822 * de;
    const double C89874 = C89822 * ce;
    const double C89839 = std::pow(C89838, 2);
    const double C89903 = C89838 * de;
    const double C89902 = C89838 * ce;
    const double C89780 = C89779 * C88089;
    const double C89987 = std::pow(C88091, -2);
    const double C89986 = std::pow(C88091, -1);
    const double C89923 = C89922 * C88089;
    const double C89934 = C89933 * C88089;
    const double C88210 = C88208 / C88207;
    const double C118 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C88208 / C88207, 2) -
          (bs[1] * C88208) / C88207) *
         std::pow(ae, 2)) /
        C88090;
    const double C107 = -(C88212 * bs[1] * C88208) / C88207;
    const double C829 = -(C88327 * bs[1] * C88208) / C88207;
    const double C1762 = -(C88370 * bs[1] * C88208) / C88207;
    const double C88222 = C88217 * C88220;
    const double C88233 = C88230 * C88220;
    const double C88256 = C88251 * C88220;
    const double C88292 = C88284 * C88220;
    const double C112 = (-(bs[1] * C88220 * C88208) / C88207) / C88087;
    const double C88232 = C88216 * C88230;
    const double C88255 = C88216 * C88251;
    const double C88291 = C88216 * C88284;
    const double C88332 = C88217 * C88330;
    const double C88336 = C88230 * C88330;
    const double C88343 = C88251 * C88330;
    const double C88354 = C88284 * C88330;
    const double C187 = (-(bs[1] * C88330 * C88208) / C88207) / C88087;
    const double C88331 = C88329 * C88219;
    const double C88415 = C88414 * C88219;
    const double C88437 = C88435 * C88230;
    const double C88442 = C88435 * C88251;
    const double C88447 = C88435 * C88284;
    const double C88375 = C88217 * C88373;
    const double C88379 = C88230 * C88373;
    const double C88386 = C88251 * C88373;
    const double C88397 = C88284 * C88373;
    const double C274 = (-(bs[1] * C88373 * C88208) / C88207) / C88087;
    const double C88374 = C88372 * C88219;
    const double C88457 = C88456 * C88219;
    const double C88473 = C88472 * C88219;
    const double C88494 = C88493 * C88219;
    const double C88511 = C88509 * C88230;
    const double C88516 = C88509 * C88251;
    const double C88521 = C88509 * C88284;
    const double C89813 = std::pow(C89802, -1);
    const double C89996 = std::pow(C89802, -2);
    const double C89817 = 2 * C89812;
    const double C89994 = 4 * C89812;
    const double C89805 = C89801 * C89799;
    const double C89824 = C89823 * C89799;
    const double C89840 = C89839 * C89799;
    const double C89781 = C89780 / C88087;
    const double C89924 = C89923 / C88087;
    const double C89935 = C89934 / C88087;
    const double C88213 = std::pow(C88210, 2);
    const double C88218 = -C88210;
    const double C88231 = std::pow(C88210, 4);
    const double C88285 = std::pow(C88210, 6);
    const double C88335 = C88230 * C88331;
    const double C88342 = C88251 * C88331;
    const double C88353 = C88284 * C88331;
    const double C88417 = C88230 * C88415;
    const double C88420 = C88251 * C88415;
    const double C88426 = C88284 * C88415;
    const double C88378 = C88230 * C88374;
    const double C88385 = C88251 * C88374;
    const double C88396 = C88284 * C88374;
    const double C88459 = C88230 * C88457;
    const double C88462 = C88251 * C88457;
    const double C88465 = C88284 * C88457;
    const double C88475 = C88230 * C88473;
    const double C88478 = C88251 * C88473;
    const double C88484 = C88284 * C88473;
    const double C88496 = C88230 * C88494;
    const double C88499 = C88251 * C88494;
    const double C88502 = C88284 * C88494;
    const double C89806 = C89805 / C89800;
    const double C89825 = C89824 / C89800;
    const double C89841 = C89840 / C89800;
    const double C89782 = -C89781;
    const double C89925 = -C89924;
    const double C89936 = -C89935;
    const double C88215 = C88211 * C88213;
    const double C119 = (2 * ae * C88213 * C88211 * C88212 * ae +
                         C88212 *
                             (C88211 * C88213 + std::pow(C88212, 2) * bs[3] *
                                                    std::pow(-C88210, 3)) *
                             std::pow(ae, 2)) /
                        C88090;
    const double C193 =
        (C88213 * C88211 * C88212 * (yP - yQ) * C88219) / C88090;
    const double C280 =
        (C88213 * C88211 * C88212 * (zP - zQ) * C88219) / C88090;
    const double C360 = (C88213 * C88211 * C88327 * C88212 * C88219) / C88090;
    const double C417 =
        ((std::pow(C88327, 2) * C88211 * C88213 - (bs[1] * C88208) / C88207) *
         C88219) /
        C88090;
    const double C499 = (C88213 * C88211 * C88327 * C88370 * C88219) / C88090;
    const double C577 = (C88213 * C88211 * C88370 * C88212 * C88219) / C88090;
    const double C633 = (C88213 * C88211 * C88370 * C88327 * C88219) / C88090;
    const double C712 =
        ((std::pow(C88370, 2) * C88211 * C88213 - (bs[1] * C88208) / C88207) *
         C88219) /
        C88090;
    const double C113 = (C88212 * C88213 * C88211 * C88220) / C88087 -
                        (ae * bs[1] * C88208) / (C88207 * C88087);
    const double C188 = (C88212 * C88213 * C88211 * C88330) / C88087;
    const double C275 = (C88212 * C88213 * C88211 * C88373) / C88087;
    const double C837 = (C88327 * C88213 * C88211 * C88220) / C88087;
    const double C939 = (C88327 * C88213 * C88211 * C88330) / C88087 -
                        (ae * bs[1] * C88208) / (C88207 * C88087);
    const double C1053 = (C88327 * C88213 * C88211 * C88373) / C88087;
    const double C1770 = (C88370 * C88213 * C88211 * C88220) / C88087;
    const double C1872 = (C88370 * C88213 * C88211 * C88330) / C88087;
    const double C1986 = (C88370 * C88213 * C88211 * C88373) / C88087 -
                         (ae * bs[1] * C88208) / (C88207 * C88087);
    const double C88221 = std::pow(C88218, 3);
    const double C88252 = std::pow(C88218, 5);
    const double C88237 = C88231 * C88233;
    const double C88236 = C88232 * C88231;
    const double C88250 = C88230 * C88231;
    const double C88338 = C88231 * C88336;
    const double C88381 = C88231 * C88379;
    const double C88438 = C88437 * C88231;
    const double C88512 = C88511 * C88231;
    const double C88297 = C88285 * C88292;
    const double C88296 = C88291 * C88285;
    const double C88358 = C88285 * C88354;
    const double C88401 = C88285 * C88397;
    const double C88448 = C88447 * C88285;
    const double C88522 = C88521 * C88285;
    const double C88337 = C88231 * C88335;
    const double C88356 = C88285 * C88353;
    const double C88418 = C88231 * C88417;
    const double C88427 = C88285 * C88426;
    const double C88380 = C88231 * C88378;
    const double C88399 = C88285 * C88396;
    const double C88460 = C88231 * C88459;
    const double C88466 = C88285 * C88465;
    const double C88476 = C88231 * C88475;
    const double C88485 = C88285 * C88484;
    const double C88497 = C88231 * C88496;
    const double C88503 = C88285 * C88502;
    const double C89807 = -C89806;
    const double C89826 = -C89825;
    const double C89842 = -C89841;
    const double C89783 = std::exp(C89782);
    const double C89926 = std::exp(C89925);
    const double C89937 = std::exp(C89936);
    const double C88223 = C88215 * ae;
    const double C108 = C88215 * C88216 - (bs[1] * C88208) / C88207;
    const double C828 = C88327 * C88212 * C88215;
    const double C830 = C88215 * C88435 - (bs[1] * C88208) / C88207;
    const double C1761 = C88370 * C88212 * C88215;
    const double C1763 = C88215 * C88509 - (bs[1] * C88208) / C88207;
    const double C4159 = C88370 * C88327 * C88215;
    const double C88224 = C88221 * C88222;
    const double C88229 = C88217 * C88221;
    const double C88333 = C88221 * C88332;
    const double C88376 = C88221 * C88375;
    const double C194 = (ae * C88213 * C88211 * C88327 * ae +
                         C88212 * C88221 * C88217 * C88212 * C88327 * C88219) /
                        C88090;
    const double C281 = (ae * C88213 * C88211 * C88370 * ae +
                         C88212 * C88221 * C88217 * C88212 * C88370 * C88219) /
                        C88090;
    const double C361 = (ae * C88213 * C88211 * C88330 +
                         C88212 * C88221 * C88217 * C88327 * C88212 * C88219) /
                        C88090;
    const double C418 =
        (C88212 * (C88215 + std::pow(C88327, 2) * C88217 * C88221) * C88219) /
        C88090;
    const double C500 =
        (C88212 * C88221 * C88217 * C88327 * C88370 * C88219) / C88090;
    const double C501 =
        (C88221 * C88217 * C88457 + C88231 * C88230 * C88457 * C88216) / C88090;
    const double C578 = (ae * C88213 * C88211 * C88373 +
                         C88212 * C88221 * C88217 * C88370 * C88212 * C88219) /
                        C88090;
    const double C634 =
        (C88212 * C88221 * C88217 * C88370 * C88327 * C88219) / C88090;
    const double C635 =
        (C88221 * C88217 * C88494 + C88231 * C88230 * C88494 * C88216) / C88090;
    const double C713 =
        (C88212 * (C88215 + std::pow(C88370, 2) * C88217 * C88221) * C88219) /
        C88090;
    const double C845 =
        (C88327 * (C88215 + C88216 * C88217 * C88221) * C88219) / C88090;
    const double C947 =
        (ae * C88213 * C88211 * C88220 + C88327 * C88221 * C88217 * C88331) /
        C88090;
    const double C1061 = (C88327 * C88221 * C88217 * C88374) / C88090;
    const double C1167 =
        (ae * C88213 * C88211 * C88220 + C88327 * C88221 * C88217 * C88415) /
        C88090;
    const double C1249 =
        (2 * ae * C88213 * C88211 * C88330 +
         C88327 * (C88215 + C88435 * C88217 * C88221) * C88219) /
        C88090;
    const double C1359 =
        (ae * C88213 * C88211 * C88373 + C88327 * C88221 * C88217 * C88457) /
        C88090;
    const double C1461 = (C88327 * C88221 * C88217 * C88473) / C88090;
    const double C1543 =
        (ae * C88213 * C88211 * C88373 + C88327 * C88221 * C88217 * C88494) /
        C88090;
    const double C1645 =
        (C88327 * (C88215 + C88509 * C88217 * C88221) * C88219) / C88090;
    const double C1778 =
        (C88370 * (C88215 + C88216 * C88217 * C88221) * C88219) / C88090;
    const double C1880 = (C88370 * C88221 * C88217 * C88331) / C88090;
    const double C1994 =
        (ae * C88213 * C88211 * C88220 + C88370 * C88221 * C88217 * C88374) /
        C88090;
    const double C2100 = (C88370 * C88221 * C88217 * C88415) / C88090;
    const double C2182 =
        (C88370 * (C88215 + C88435 * C88217 * C88221) * C88219) / C88090;
    const double C2292 =
        (ae * C88213 * C88211 * C88330 + C88370 * C88221 * C88217 * C88457) /
        C88090;
    const double C2394 =
        (ae * C88213 * C88211 * C88220 + C88370 * C88221 * C88217 * C88473) /
        C88090;
    const double C2476 =
        (ae * C88213 * C88211 * C88330 + C88370 * C88221 * C88217 * C88494) /
        C88090;
    const double C2578 =
        (2 * ae * C88213 * C88211 * C88373 +
         C88370 * (C88215 + C88509 * C88217 * C88221) * C88219) /
        C88090;
    const double C88261 = C88252 * C88256;
    const double C88260 = C88255 * C88252;
    const double C88283 = C88251 * C88252;
    const double C88345 = C88252 * C88343;
    const double C88344 = C88252 * C88342;
    const double C88388 = C88252 * C88386;
    const double C88387 = C88252 * C88385;
    const double C88421 = C88252 * C88420;
    const double C88443 = C88442 * C88252;
    const double C88463 = C88252 * C88462;
    const double C88479 = C88252 * C88478;
    const double C88500 = C88252 * C88499;
    const double C88517 = C88516 * C88252;
    const double C88240 = C88212 * C88237;
    const double C88249 = ae * C88237;
    const double C88890 = C88327 * C88237;
    const double C89348 = C88370 * C88237;
    const double C88259 = C88250 * C88216;
    const double C88258 = C88212 * C88250;
    const double C88257 = C88250 * ae;
    const double C89038 = C88250 * C88435;
    const double C89037 = C88327 * C88250;
    const double C89386 = C88250 * C88509;
    const double C89385 = C88370 * C88250;
    const double C88341 = ae * C88338;
    const double C88340 = C88212 * C88338;
    const double C88854 = C88327 * C88338;
    const double C89361 = C88370 * C88338;
    const double C88384 = ae * C88381;
    const double C88383 = C88212 * C88381;
    const double C88917 = C88327 * C88381;
    const double C89005 = C88370 * C88381;
    const double C88301 = C88212 * C88297;
    const double C89169 = C88297 * C88435;
    const double C89446 = C88327 * C88297;
    const double C89496 = C88297 * C88509;
    const double C88361 = C88358 * C88216;
    const double C89057 = C88212 * C88358;
    const double C89191 = C88327 * C88358;
    const double C89455 = C88358 * C88509;
    const double C88404 = C88401 * C88216;
    const double C89083 = C88212 * C88401;
    const double C89222 = C88401 * C88435;
    const double C89469 = C88327 * C88401;
    const double C89527 = C88370 * C88401;
    const double C1881 = (C88221 * C88217 * C88331 + C88337 * C88509) / C88090;
    const double C88360 = C88212 * C88356;
    const double C89167 = C88327 * C88356;
    const double C89490 = C88356 * C88509;
    const double C2101 = (C88221 * C88217 * C88415 + C88418 * C88509) / C88090;
    const double C88428 = C88212 * C88427;
    const double C89181 = C88327 * C88427;
    const double C89248 = C88427 * C88509;
    const double C89277 = C88370 * C88427;
    const double C1062 = (C88221 * C88217 * C88374 + C88380 * C88435) / C88090;
    const double C88403 = C88212 * C88399;
    const double C89177 = C88399 * C88435;
    const double C89445 = C88327 * C88399;
    const double C89494 = C88370 * C88399;
    const double C502 =
        (2 * C88212 * C88460 +
         C88212 * (C88460 + C88252 * C88251 * C88457 * C88216)) /
        C88090;
    const double C88467 = C88466 * C88216;
    const double C89082 = C88212 * C88466;
    const double C89221 = C88327 * C88466;
    const double C89261 = C88370 * C88466;
    const double C1462 = (C88221 * C88217 * C88473 + C88476 * C88435) / C88090;
    const double C88486 = C88212 * C88485;
    const double C89233 = C88485 * C88435;
    const double C89459 = C88327 * C88485;
    const double C89511 = C88370 * C88485;
    const double C636 =
        (2 * C88212 * C88497 +
         C88212 * (C88497 + C88252 * C88251 * C88494 * C88216)) /
        C88090;
    const double C88504 = C88503 * C88216;
    const double C89094 = C88212 * C88503;
    const double C89237 = C88327 * C88503;
    const double C89517 = C88370 * C88503;
    const double C89808 = std::exp(C89807);
    const double C89827 = std::exp(C89826);
    const double C89843 = std::exp(C89842);
    const double C14161 = C89783 * C837;
    const double C27542 = C89783 * C1770;
    const double C88094 = C88092 * C89783;
    const double C90010 = C89783 * C89985;
    const double C89 =
        (C89783 * std::pow(C89985, 2)) / C88090 + C89783 / C88091;
    const double C91 = C89987 * C89783;
    const double C38610 = C89986 * C89783;
    const double C201 = C89926 * C188;
    const double C27350 = C89926 * C1872;
    const double C88137 = C88136 * C89926;
    const double C186 = -(2 * C88089 * (yA - yB) * C89926) / C88087;
    const double C416 =
        -((C89926 - (C88121 * 2 * C88089 * C88121 * C89926) / C88087) *
          C88093) /
        C88087;
    const double C90020 = C89926 * C90008;
    const double C13334 =
        (C89926 * std::pow(C90008, 2)) / C88090 + C89926 / C88091;
    const double C13336 = C89987 * C89926;
    const double C38612 = C89986 * C89926;
    const double C288 = C89937 * C275;
    const double C14047 = C89937 * C1053;
    const double C88163 = C88162 * C89937;
    const double C273 = -(2 * C88089 * (zA - zB) * C89937) / C88087;
    const double C711 =
        -((C89937 - (C88124 * 2 * C88089 * C88124 * C89937) / C88087) *
          C88093) /
        C88087;
    const double C90021 = C89937 * C90009;
    const double C26053 =
        (C89937 * std::pow(C90009, 2)) / C88090 + C89937 / C88091;
    const double C26055 = C89987 * C89937;
    const double C55293 = C89986 * C89937;
    const double C88225 = C88212 * C88224;
    const double C948 = (C88221 * C88217 * C88331 + ae * C88327 * C88224 +
                         C88327 * (ae * C88224 + C88327 * C88337)) /
                        C88090;
    const double C1168 = (C88221 * C88217 * C88415 + ae * C88327 * C88224 +
                          C88327 * (ae * C88224 + C88327 * C88418)) /
                         C88090;
    const double C1995 = (C88221 * C88217 * C88374 + ae * C88370 * C88224 +
                          C88370 * (ae * C88224 + C88370 * C88380)) /
                         C88090;
    const double C2395 = (C88221 * C88217 * C88473 + ae * C88370 * C88224 +
                          C88370 * (ae * C88224 + C88370 * C88476)) /
                         C88090;
    const double C4279 = (C88370 * (ae * C88224 + C88327 * C88337)) / C88090;
    const double C4397 =
        (ae * C88327 * C88224 + C88370 * C88327 * C88380) / C88090;
    const double C4511 =
        (ae * C88370 * C88224 + C88327 * C88370 * C88418) / C88090;
    const double C4841 =
        (ae * C88327 * C88224 + C88370 * C88327 * C88476) / C88090;
    const double C838 = (C88213 * C88211 * C88220 + C88224 * C88435) / C88087;
    const double C1771 = (C88213 * C88211 * C88220 + C88224 * C88509) / C88087;
    const double C4163 = (C88370 * C88327 * C88224) / C88087;
    const double C5806 =
        (2 * C88327 * C88224 + C88327 * (C88224 + C88237 * C88435)) / C88087;
    const double C8595 = (C88370 * (C88224 + C88237 * C88435)) / C88087;
    const double C10623 =
        (2 * C88370 * C88224 + C88370 * (C88224 + C88237 * C88509)) / C88087;
    const double C88235 = C88212 * C88229;
    const double C88234 = C88229 * ae;
    const double C88239 = C88229 + C88236;
    const double C88439 = C88229 + C88438;
    const double C88513 = C88229 + C88512;
    const double C88855 = C88327 * C88229;
    const double C89006 = C88370 * C88229;
    const double C419 =
        ((C88215 + C88435 * C88217 * C88221) * C88219 +
         (C88229 + C88435 * C88230 * C88231) * C88219 * C88216) /
        C88090;
    const double C714 =
        ((C88215 + C88509 * C88217 * C88221) * C88219 +
         (C88229 + C88509 * C88230 * C88231) * C88219 * C88216) /
        C88090;
    const double C109 =
        2 * C88212 * C88215 + C88212 * (C88215 + C88229 * C88216);
    const double C827 = C88327 * (C88215 + C88229 * C88216);
    const double C1760 = C88370 * (C88215 + C88229 * C88216);
    const double C5803 =
        2 * C88327 * C88215 + C88327 * (C88215 + C88229 * C88435);
    const double C8592 = C88370 * (C88215 + C88229 * C88435);
    const double C10620 =
        2 * C88370 * C88215 + C88370 * (C88215 + C88229 * C88509);
    const double C88581 = C88327 * C88333;
    const double C195 =
        (C88221 * C88217 * C88331 + ae * C88212 * C88333 +
         C88212 * (ae * C88333 + C88212 * C88231 * C88230 * C88331)) /
        C88090;
    const double C196 =
        (2 * (ae * C88333 + C88212 * C88337) + ae * (C88333 + C88338 * C88216) +
         C88212 *
             (C88337 + ae * C88212 * C88338 +
              C88212 * (ae * C88338 + C88212 * C88252 * C88251 * C88331))) /
        C88090;
    const double C362 =
        (C88221 * C88217 * C88415 + ae * C88212 * C88333 +
         C88212 * (ae * C88333 + C88212 * C88231 * C88230 * C88415)) /
        C88090;
    const double C1879 = (C88370 * (ae * C88333 + C88212 * C88337)) / C88090;
    const double C2099 = (C88370 * (ae * C88333 + C88212 * C88418)) / C88090;
    const double C2291 =
        (ae * C88212 * C88333 + C88370 * C88212 * C88460) / C88090;
    const double C2293 = (C88221 * C88217 * C88457 + ae * C88370 * C88333 +
                          C88370 * (ae * C88333 + C88370 * C88460)) /
                         C88090;
    const double C2475 =
        (ae * C88212 * C88333 + C88370 * C88212 * C88497) / C88090;
    const double C2477 = (C88221 * C88217 * C88494 + ae * C88370 * C88333 +
                          C88370 * (ae * C88333 + C88370 * C88497)) /
                         C88090;
    const double C189 = (C88213 * C88211 * C88330 + C88333 * C88216) / C88087;
    const double C190 =
        (2 * C88212 * C88333 + C88212 * (C88333 + C88338 * C88216)) / C88087;
    const double C937 = (C88327 * (C88333 + C88338 * C88216) +
                         (C88215 + C88229 * C88216) * ae) /
                        C88087;
    const double C938 =
        (C88327 * C88212 * C88333 + C88212 * C88215 * ae) / C88087;
    const double C1870 = (C88370 * (C88333 + C88338 * C88216)) / C88087;
    const double C1871 = (C88370 * C88212 * C88333) / C88087;
    const double C1873 = (C88213 * C88211 * C88330 + C88333 * C88509) / C88087;
    const double C10682 =
        (2 * C88370 * C88333 + C88370 * (C88333 + C88338 * C88509)) / C88087;
    const double C88715 = C88370 * C88376;
    const double C282 =
        (C88221 * C88217 * C88374 + ae * C88212 * C88376 +
         C88212 * (ae * C88376 + C88212 * C88231 * C88230 * C88374)) /
        C88090;
    const double C283 =
        (2 * (ae * C88376 + C88212 * C88380) + ae * (C88376 + C88381 * C88216) +
         C88212 *
             (C88380 + ae * C88212 * C88381 +
              C88212 * (ae * C88381 + C88212 * C88252 * C88251 * C88374))) /
        C88090;
    const double C579 =
        (C88221 * C88217 * C88473 + ae * C88212 * C88376 +
         C88212 * (ae * C88376 + C88212 * C88231 * C88230 * C88473)) /
        C88090;
    const double C1060 = (C88327 * (ae * C88376 + C88212 * C88380)) / C88090;
    const double C1358 =
        (ae * C88212 * C88376 + C88327 * C88212 * C88460) / C88090;
    const double C1360 = (C88221 * C88217 * C88457 + ae * C88327 * C88376 +
                          C88327 * (ae * C88376 + C88327 * C88460)) /
                         C88090;
    const double C1460 = (C88327 * (ae * C88376 + C88212 * C88476)) / C88090;
    const double C1542 =
        (ae * C88212 * C88376 + C88327 * C88212 * C88497) / C88090;
    const double C1544 = (C88221 * C88217 * C88494 + ae * C88327 * C88376 +
                          C88327 * (ae * C88376 + C88327 * C88497)) /
                         C88090;
    const double C276 = (C88213 * C88211 * C88373 + C88376 * C88216) / C88087;
    const double C277 =
        (2 * C88212 * C88376 + C88212 * (C88376 + C88381 * C88216)) / C88087;
    const double C1051 = (C88327 * (C88376 + C88381 * C88216)) / C88087;
    const double C1052 = (C88327 * C88212 * C88376) / C88087;
    const double C1054 = (C88213 * C88211 * C88373 + C88376 * C88435) / C88087;
    const double C1984 = (C88370 * (C88376 + C88381 * C88216) +
                          (C88215 + C88229 * C88216) * ae) /
                         C88087;
    const double C1985 =
        (C88370 * C88212 * C88376 + C88212 * C88215 * ae) / C88087;
    const double C4393 =
        (C88370 * C88327 * C88376 + C88327 * C88215 * ae) / C88087;
    const double C5921 =
        (2 * C88327 * C88376 + C88327 * (C88376 + C88381 * C88435)) / C88087;
    const double C8758 = (C88370 * (C88376 + C88381 * C88435) +
                          (C88215 + C88229 * C88435) * ae) /
                         C88087;
    const double C203 = C89926 * C194;
    const double C290 = C89937 * C281;
    const double C427 = C89926 * C418;
    const double C508 = C89937 * C500;
    const double C511 = C89937 * C501;
    const double C642 = C89926 * C634;
    const double C645 = C89926 * C635;
    const double C722 = C89937 * C713;
    const double C13851 = C89783 * C845;
    const double C14049 = C89937 * C1061;
    const double C14163 = C89783 * C1167;
    const double C14361 = C89937 * C1359;
    const double C14450 = C89783 * C1461;
    const double C14633 = C89937 * C1645;
    const double C27239 = C89783 * C1778;
    const double C27352 = C89926 * C1880;
    const double C27544 = C89783 * C2100;
    const double C27668 = C89926 * C2182;
    const double C27848 = C89783 * C2394;
    const double C27942 = C89926 * C2476;
    const double C88265 = C88212 * C88261;
    const double C88282 = ae * C88261;
    const double C88732 = C88327 * C88261;
    const double C88753 = C88370 * C88261;
    const double C89018 = C88261 * C88435;
    const double C89350 = C88261 * C88509;
    const double C88264 = C88250 + C88260;
    const double C88295 = C88283 * C88216;
    const double C88294 = C88212 * C88283;
    const double C88293 = C88283 * ae;
    const double C88300 = C88283 + C88296;
    const double C88449 = C88283 + C88448;
    const double C88523 = C88283 + C88522;
    const double C89193 = C88283 * C88435;
    const double C89192 = C88327 * C88283;
    const double C89454 = C88283 * C88509;
    const double C89528 = C88370 * C88283;
    const double C88347 = C88345 * C88216;
    const double C88352 = ae * C88345;
    const double C88351 = C88212 * C88345;
    const double C89036 = C88327 * C88345;
    const double C89260 = C88370 * C88345;
    const double C89362 = C88345 * C88509;
    const double C88346 = C88212 * C88344;
    const double C89017 = C88327 * C88344;
    const double C10685 =
        (2 * C88370 * C88337 + C88370 * (C88337 + C88344 * C88509)) / C88090;
    const double C27346 =
        (3 * (C88337 + C88344 * C88509) +
         C88370 * (2 * C88370 * C88344 + C88370 * (C88344 + C88356 * C88509))) /
        C88090;
    const double C88390 = C88388 * C88216;
    const double C88395 = ae * C88388;
    const double C88394 = C88212 * C88388;
    const double C89078 = C88388 * C88435;
    const double C89220 = C88327 * C88388;
    const double C89292 = C88370 * C88388;
    const double C88389 = C88212 * C88387;
    const double C89306 = C88327 * C88387;
    const double C89349 = C88370 * C88387;
    const double C5924 =
        (2 * C88327 * C88380 + C88327 * (C88380 + C88387 * C88435)) / C88090;
    const double C8761 = (ae * (C88224 + C88237 * C88435) +
                          C88370 * (C88380 + C88387 * C88435)) /
                         C88090;
    const double C14043 =
        (3 * (C88380 + C88387 * C88435) +
         C88327 * (2 * C88327 * C88387 + C88327 * (C88387 + C88399 * C88435))) /
        C88090;
    const double C88422 = C88212 * C88421;
    const double C89027 = C88327 * C88421;
    const double C89137 = C88370 * C88421;
    const double C6571 = (ae * (C88224 + C88237 * C88509) +
                          C88327 * (C88418 + C88421 * C88509)) /
                         C88090;
    const double C10794 =
        (2 * C88370 * C88418 + C88370 * (C88418 + C88421 * C88509)) / C88090;
    const double C88444 = C88250 + C88443;
    const double C88865 = C88212 * C88463;
    const double C89077 = C88327 * C88463;
    const double C89153 = C88370 * C88463;
    const double C503 =
        (3 * (C88460 + C88463 * C88216) +
         C88212 * (2 * C88212 * C88463 +
                   C88212 * (C88463 + C88285 * C88284 * C88457 * C88216))) /
        C88090;
    const double C1357 = (ae * (C88376 + C88381 * C88216) +
                          C88327 * (C88460 + C88463 * C88216)) /
                         C88090;
    const double C2290 = (ae * (C88333 + C88338 * C88216) +
                          C88370 * (C88460 + C88463 * C88216)) /
                         C88090;
    const double C88480 = C88212 * C88479;
    const double C89319 = C88327 * C88479;
    const double C89369 = C88370 * C88479;
    const double C6139 =
        (2 * C88327 * C88476 + C88327 * (C88476 + C88479 * C88435)) / C88090;
    const double C9072 = (ae * (C88224 + C88237 * C88435) +
                          C88370 * (C88476 + C88479 * C88435)) /
                         C88090;
    const double C14445 =
        (3 * (C88476 + C88479 * C88435) +
         C88327 * (2 * C88327 * C88479 + C88327 * (C88479 + C88485 * C88435))) /
        C88090;
    const double C88872 = C88212 * C88500;
    const double C89091 = C88327 * C88500;
    const double C89375 = C88370 * C88500;
    const double C637 =
        (3 * (C88497 + C88500 * C88216) +
         C88212 * (2 * C88212 * C88500 +
                   C88212 * (C88500 + C88285 * C88284 * C88494 * C88216))) /
        C88090;
    const double C1541 = (ae * (C88376 + C88381 * C88216) +
                          C88327 * (C88497 + C88500 * C88216)) /
                         C88090;
    const double C2474 = (ae * (C88333 + C88338 * C88216) +
                          C88370 * (C88497 + C88500 * C88216)) /
                         C88090;
    const double C88518 = C88250 + C88517;
    const double C88254 = 2 * C88249;
    const double C5868 =
        (2 * (ae * C88224 + C88327 * C88337) + ae * (C88224 + C88237 * C88435) +
         C88327 * (C88337 + ae * C88327 * C88237 +
                   C88327 * (C88249 + C88327 * C88344))) /
        C88090;
    const double C5977 =
        (2 * (ae * C88224 + C88327 * C88418) + ae * (C88224 + C88237 * C88435) +
         C88327 * (C88418 + ae * C88327 * C88237 +
                   C88327 * (C88249 + C88327 * C88421))) /
        C88090;
    const double C6414 =
        (ae * C88224 + C88327 * C88337 + (C88249 + C88327 * C88344) * C88509) /
        C88090;
    const double C10741 =
        (2 * (ae * C88224 + C88370 * C88380) + ae * (C88224 + C88237 * C88509) +
         C88370 * (C88380 + ae * C88370 * C88237 +
                   C88370 * (C88249 + C88370 * C88387))) /
        C88090;
    const double C10956 =
        (2 * (ae * C88224 + C88370 * C88476) + ae * (C88224 + C88237 * C88509) +
         C88370 * (C88476 + ae * C88370 * C88237 +
                   C88370 * (C88249 + C88370 * C88479))) /
        C88090;
    const double C6494 = (C88327 * C88380 + ae * C88370 * C88890 +
                          C88370 * (ae * C88890 + C88370 * C88327 * C88387)) /
                         C88090;
    const double C6805 = (C88327 * C88476 + ae * C88370 * C88890 +
                          C88370 * (ae * C88890 + C88370 * C88327 * C88479)) /
                         C88090;
    const double C8681 = (C88370 * (C88337 + ae * C88890 +
                                    C88327 * (C88249 + C88327 * C88344))) /
                         C88090;
    const double C8838 =
        (C88370 * C88418 + ae * C88370 * C88890 +
         C88327 * (ae * C88370 * C88237 + C88327 * C88370 * C88421)) /
        C88090;
    const double C6328 = (C88327 * C88224 + C88890 * C88509) / C88087;
    const double C88263 = C88229 + C88259;
    const double C88262 = C88258 * ae;
    const double C88288 = 2 * C88258;
    const double C88845 = C88327 * C88258;
    const double C88996 = C88370 * C88258;
    const double C89042 = C88229 + C89038;
    const double C89041 = C89037 * ae;
    const double C89194 = 2 * C89037;
    const double C89335 = C88370 * C89037;
    const double C89390 = C88229 + C89386;
    const double C89389 = C89385 * ae;
    const double C89530 = 2 * C89385;
    const double C89033 = 2 * C88341;
    const double C10903 =
        (2 * (ae * C88333 + C88370 * C88460) + ae * (C88333 + C88338 * C88509) +
         C88370 * (C88460 + ae * C88370 * C88338 +
                   C88370 * (C88341 + C88370 * C88463))) /
        C88090;
    const double C11009 =
        (2 * (ae * C88333 + C88370 * C88497) + ae * (C88333 + C88338 * C88509) +
         C88370 * (C88497 + ae * C88370 * C88338 +
                   C88370 * (C88341 + C88370 * C88500))) /
        C88090;
    const double C88585 = C88327 * C88340;
    const double C363 =
        (2 * (ae * C88333 + C88212 * C88418) + ae * (C88333 + C88338 * C88216) +
         C88212 * (C88418 + ae * C88340 +
                   C88212 * (C88341 + C88212 * C88252 * C88251 * C88415))) /
        C88090;
    const double C2294 = (C88212 * C88460 + ae * C88370 * C88340 +
                          C88370 * (ae * C88340 + C88370 * C88212 * C88463)) /
                         C88090;
    const double C2478 = (C88212 * C88497 + ae * C88370 * C88340 +
                          C88370 * (ae * C88340 + C88370 * C88212 * C88500)) /
                         C88090;
    const double C1874 = (C88212 * C88333 + C88340 * C88509) / C88087;
    const double C89381 = 2 * C88384;
    const double C6086 =
        (2 * (ae * C88376 + C88327 * C88460) + ae * (C88376 + C88381 * C88435) +
         C88327 * (C88460 + ae * C88327 * C88381 +
                   C88327 * (C88384 + C88327 * C88463))) /
        C88090;
    const double C6192 =
        (2 * (ae * C88376 + C88327 * C88497) + ae * (C88376 + C88381 * C88435) +
         C88327 * (C88497 + ae * C88327 * C88381 +
                   C88327 * (C88384 + C88327 * C88500))) /
        C88090;
    const double C88719 = C88370 * C88383;
    const double C580 =
        (2 * (ae * C88376 + C88212 * C88476) + ae * (C88376 + C88381 * C88216) +
         C88212 * (C88476 + ae * C88383 +
                   C88212 * (C88384 + C88212 * C88252 * C88251 * C88473))) /
        C88090;
    const double C1361 = (C88212 * C88460 + ae * C88327 * C88383 +
                          C88327 * (ae * C88383 + C88327 * C88212 * C88463)) /
                         C88090;
    const double C1545 = (C88212 * C88497 + ae * C88327 * C88383 +
                          C88327 * (ae * C88383 + C88327 * C88212 * C88500)) /
                         C88090;
    const double C1055 = (C88212 * C88376 + C88383 * C88435) / C88087;
    const double C88918 = C88370 * C88917;
    const double C89171 = C88261 + C89169;
    const double C89448 = C89446 * C88509;
    const double C89498 = C88261 + C89496;
    const double C88363 = C88345 + C88361;
    const double C89061 = C88327 * C89057;
    const double C89366 = C89057 * C88509;
    const double C89457 = C88345 + C89455;
    const double C88406 = C88388 + C88404;
    const double C89085 = C89083 * C88435;
    const double C89402 = C88370 * C89083;
    const double C89431 = C88327 * C89083;
    const double C89226 = C88388 + C89222;
    const double C89473 = C88370 * C89469;
    const double C27356 = C89926 * C1881;
    const double C89491 = C88344 + C89490;
    const double C27548 = C89783 * C2101;
    const double C89249 = C88421 + C89248;
    const double C89278 = C88327 * C89277;
    const double C14053 = C89937 * C1062;
    const double C89178 = C88387 + C89177;
    const double C89447 = C88370 * C89445;
    const double C513 = C89937 * C502;
    const double C88468 = C88463 + C88467;
    const double C89084 = C88327 * C89082;
    const double C89156 = C88370 * C89082;
    const double C14453 = C89783 * C1462;
    const double C89234 = C88479 + C89233;
    const double C89460 = C88370 * C89459;
    const double C647 = C89926 * C636;
    const double C88505 = C88500 + C88504;
    const double C89095 = C88327 * C89094;
    const double C89378 = C88370 * C89094;
    const double C89809 = C89808 * C89803;
    const double C89814 = C89813 * C89808;
    const double C89991 = C89808 * C89804;
    const double C89988 = C89808 / C89802;
    const double C5153 = C89996 * C89808;
    const double C89876 = C89827 * C89874;
    const double C89879 = C89813 * C89827;
    const double C90000 = C89827 * C89875;
    const double C89995 = C89827 / C89802;
    const double C824 = C89996 * C89827;
    const double C89904 = C89843 * C89902;
    const double C89907 = C89813 * C89843;
    const double C90004 = C89843 * C89903;
    const double C89997 = C89843 / C89802;
    const double C1759 = C89996 * C89843;
    const double C88095 = 2 * C88094;
    const double C90 = (-2 * C89986 * C90010) / C88087;
    const double C38609 = -C90010 / C88087;
    const double C88138 = 2 * C88137;
    const double C204 = C186 * C108;
    const double C202 = C186 * C113;
    const double C200 = C186 * C107;
    const double C426 = C186 * C188;
    const double C424 = C186 * C187;
    const double C641 = C186 * C275;
    const double C960 = C186 * C828;
    const double C1262 = C186 * C939;
    const double C1893 = C186 * C1761;
    const double C2195 = C186 * C1872;
    const double C27353 = C186 * C1763;
    const double C27351 = C186 * C1770;
    const double C27349 = C186 * C1762;
    const double C27941 = C186 * C1986;
    const double C29626 = C186 * C4159;
    const double C428 = C416 * C108;
    const double C425 = C416 * C107;
    const double C1259 = C416 * C828;
    const double C2192 = C416 * C1761;
    const double C27669 = C416 * C1763;
    const double C27667 = C416 * C1762;
    const double C29964 = C416 * C4159;
    const double C13335 = (-2 * C89986 * C90020) / C88087;
    const double C38611 = -C90020 / C88087;
    const double C88164 = 2 * C88163;
    const double C291 = C273 * C108;
    const double C289 = C273 * C113;
    const double C287 = C273 * C107;
    const double C507 = C273 * C188;
    const double C721 = C273 * C275;
    const double C719 = C273 * C274;
    const double C1074 = C273 * C828;
    const double C1658 = C273 * C1053;
    const double C2007 = C273 * C1761;
    const double C2591 = C273 * C1986;
    const double C14050 = C273 * C830;
    const double C14048 = C273 * C837;
    const double C14046 = C273 * C829;
    const double C14360 = C273 * C939;
    const double C17092 = C273 * C4159;
    const double C723 = C711 * C108;
    const double C720 = C711 * C107;
    const double C1655 = C711 * C828;
    const double C2588 = C711 * C1761;
    const double C14634 = C711 * C830;
    const double C14632 = C711 * C829;
    const double C17773 = C711 * C4159;
    const double C26054 = (-2 * C89986 * C90021) / C88087;
    const double C55292 = -C90021 / C88087;
    const double C88226 = C88225 + C88223;
    const double C14167 = C89783 * C1168;
    const double C27850 = C89783 * C2395;
    const double C29629 = C89926 * C4279;
    const double C73500 = C38612 * C4279;
    const double C17091 = C89937 * C4397;
    const double C72644 = C55293 * C4397;
    const double C17217 = C89783 * C4511;
    const double C17555 = C89783 * C4841;
    const double C14052 = C273 * C838;
    const double C14165 = C89783 * C838;
    const double C27355 = C186 * C1771;
    const double C27546 = C89783 * C1771;
    const double C17090 = C273 * C4163;
    const double C17219 = C89783 * C4163;
    const double C29628 = C186 * C4163;
    const double C14054 = C273 * C5806;
    const double C14171 = C89783 * C5806;
    const double C17086 = C273 * C8595;
    const double C17215 = C89783 * C8595;
    const double C33937 = C186 * C8595;
    const double C27357 = C186 * C10623;
    const double C27552 = C89783 * C10623;
    const double C88238 = C88235 * ae;
    const double C4394 =
        (C88370 * C88327 * C88383 + C88327 * C88235 * ae) / C88087;
    const double C831 = C88212 * C88215 + C88235 * C88435;
    const double C1764 = C88212 * C88215 + C88235 * C88509;
    const double C4160 = C88370 * C88327 * C88235;
    const double C5802 =
        2 * C88327 * C88235 + C88327 * (C88235 + C88258 * C88435);
    const double C8591 = C88370 * (C88235 + C88258 * C88435);
    const double C10619 =
        2 * C88370 * C88235 + C88370 * (C88235 + C88258 * C88509);
    const double C88242 = C88240 + C88234;
    const double C88856 = C88854 + C88234;
    const double C89007 = C89005 + C88234;
    const double C6728 = (ae * (C88376 + C88370 * (C88370 * C88381 + C88234) +
                                C88370 * C88229 * ae) +
                          C88327 * (C88460 + ae * C88370 * C88338 +
                                    C88370 * (C88341 + C88370 * C88463))) /
                         C88090;
    const double C88241 = C88239 * C88219;
    const double C88440 = C88439 * C88219;
    const double C88514 = C88513 * C88219;
    const double C88857 = C88855 * ae;
    const double C6325 = C88327 * C88215 + C88855 * C88509;
    const double C23356 =
        2 * C88370 * C88855 + C88370 * (C88855 + C89037 * C88509);
    const double C89008 = C89006 * ae;
    const double C430 = C89926 * C419;
    const double C725 = C89937 * C714;
    const double C210 = C186 * C109;
    const double C297 = C273 * C109;
    const double C431 = C416 * C109;
    const double C726 = C711 * C109;
    const double C956 = C186 * C827;
    const double C1070 = C273 * C827;
    const double C1256 = C416 * C827;
    const double C1652 = C711 * C827;
    const double C1889 = C186 * C1760;
    const double C2003 = C273 * C1760;
    const double C2189 = C416 * C1760;
    const double C2585 = C711 * C1760;
    const double C14056 = C273 * C5803;
    const double C14636 = C711 * C5803;
    const double C17088 = C273 * C8592;
    const double C17771 = C711 * C8592;
    const double C33935 = C186 * C8592;
    const double C34177 = C416 * C8592;
    const double C27359 = C186 * C10620;
    const double C27671 = C416 * C10620;
    const double C88582 = C88581 + C88223;
    const double C207 = C89926 * C195;
    const double C209 = C89926 * C196;
    const double C1892 = C89926 * C1879;
    const double C27556 = C89783 * C2099;
    const double C57388 = C38610 * C2099;
    const double C2303 = C89937 * C2291;
    const double C55668 = C55293 * C2291;
    const double C2487 = C89926 * C2475;
    const double C27944 = C89926 * C2477;
    const double C205 = C89926 * C189;
    const double C429 = C186 * C189;
    const double C510 = C273 * C189;
    const double C211 = C89926 * C190;
    const double C432 = C186 * C190;
    const double C512 = C273 * C190;
    const double C957 = C89926 * C937;
    const double C1257 = C186 * C937;
    const double C1366 = C273 * C937;
    const double C38715 = C38612 * C937;
    const double C961 = C89926 * C938;
    const double C1260 = C186 * C938;
    const double C1369 = C273 * C938;
    const double C38705 = C38612 * C938;
    const double C1890 = C89926 * C1870;
    const double C2190 = C186 * C1870;
    const double C2299 = C273 * C1870;
    const double C1894 = C89926 * C1871;
    const double C2193 = C186 * C1871;
    const double C2302 = C273 * C1871;
    const double C2196 = C186 * C1873;
    const double C27354 = C89926 * C1873;
    const double C10851 = C186 * C10682;
    const double C27360 = C89926 * C10682;
    const double C88716 = C88715 + C88223;
    const double C294 = C89937 * C282;
    const double C296 = C89937 * C283;
    const double C1073 = C89937 * C1060;
    const double C1370 = C89937 * C1358;
    const double C14363 = C89937 * C1360;
    const double C14459 = C89783 * C1460;
    const double C40143 = C38610 * C1460;
    const double C1554 = C89926 * C1542;
    const double C39191 = C38612 * C1542;
    const double C292 = C89937 * C276;
    const double C644 = C186 * C276;
    const double C724 = C273 * C276;
    const double C298 = C89937 * C277;
    const double C646 = C186 * C277;
    const double C727 = C273 * C277;
    const double C1071 = C89937 * C1051;
    const double C1550 = C186 * C1051;
    const double C1653 = C273 * C1051;
    const double C1075 = C89937 * C1052;
    const double C1553 = C186 * C1052;
    const double C1656 = C273 * C1052;
    const double C1659 = C273 * C1054;
    const double C14051 = C89937 * C1054;
    const double C2004 = C89937 * C1984;
    const double C2483 = C186 * C1984;
    const double C2586 = C273 * C1984;
    const double C55444 = C55293 * C1984;
    const double C2008 = C89937 * C1985;
    const double C2486 = C186 * C1985;
    const double C2589 = C273 * C1985;
    const double C55434 = C55293 * C1985;
    const double C5060 = C273 * C4393;
    const double C17093 = C89937 * C4393;
    const double C30285 = C186 * C4393;
    const double C72640 = C55293 * C4393;
    const double C6249 = C273 * C5921;
    const double C14057 = C89937 * C5921;
    const double C9230 = C273 * C8758;
    const double C17089 = C89937 * C8758;
    const double C34412 = C186 * C8758;
    const double C72650 = C55293 * C8758;
    const double C88268 = C88265 + C88257;
    const double C88290 = 2 * C88282;
    const double C89170 = C88282 + C89167;
    const double C89182 = C88282 + C89181;
    const double C89497 = C88282 + C89494;
    const double C89512 = C88282 + C89511;
    const double C88737 = ae * C88732;
    const double C89168 = 2 * C88732;
    const double C89444 = C88370 * C88732;
    const double C14975 =
        (C88418 + C88421 * C88509 + ae * (C88890 + C88732 * C88509) +
         C88327 * (ae * (C88237 + C88261 * C88509) +
                   C88327 * (C88421 + C88427 * C88509))) /
        C88090;
    const double C23358 =
        (2 * C88370 * C88890 + C88370 * (C88890 + C88732 * C88509)) / C88087;
    const double C88758 = ae * C88753;
    const double C89495 = 2 * C88753;
    const double C89020 = C88237 + C89018;
    const double C89352 = C88237 + C89350;
    const double C88267 = C88264 * C88219;
    const double C88299 = C88250 + C88295;
    const double C88298 = C88294 * ae;
    const double C89059 = C88294 * C88435;
    const double C89058 = C88327 * C88294;
    const double C89404 = C88294 * C88509;
    const double C89403 = C88370 * C88294;
    const double C88305 = C88301 + C88293;
    const double C89197 = C89191 + C88293;
    const double C89534 = C89527 + C88293;
    const double C88304 = C88300 * C88219;
    const double C88450 = C88449 * C88219;
    const double C88524 = C88523 * C88219;
    const double C89199 = C88250 + C89193;
    const double C89198 = C89192 * ae;
    const double C89471 = C89192 * C88509;
    const double C89470 = C88370 * C89192;
    const double C89456 = C88250 + C89454;
    const double C89535 = C89528 * ae;
    const double C88349 = C88338 + C88347;
    const double C88362 = C88352 + C88360;
    const double C88429 = C88352 + C88428;
    const double C89187 = 2 * C88352;
    const double C89263 = C88352 + C89261;
    const double C89518 = C88352 + C89517;
    const double C88357 = 2 * C88351;
    const double C88355 = ae * C88351;
    const double C88844 = C88327 * C88351;
    const double C89365 = C88370 * C88351;
    const double C10681 =
        (2 * C88370 * C88340 + C88370 * (C88340 + C88351 * C88509)) / C88087;
    const double C89040 = C89036 + C88257;
    const double C89262 = ae * C89260;
    const double C89506 = 2 * C89260;
    const double C89363 = C88338 + C89362;
    const double C88348 = C88341 + C88346;
    const double C89019 = C88249 + C89017;
    const double C27358 = C89926 * C10685;
    const double C35942 = C89926 * C27346;
    const double C88392 = C88381 + C88390;
    const double C88405 = C88395 + C88403;
    const double C88487 = C88395 + C88486;
    const double C89224 = C88395 + C89221;
    const double C89238 = C88395 + C89237;
    const double C89523 = 2 * C88395;
    const double C88400 = 2 * C88394;
    const double C88398 = ae * C88394;
    const double C88912 = C88327 * C88394;
    const double C88995 = C88370 * C88394;
    const double C5920 =
        (2 * C88327 * C88383 + C88327 * (C88383 + C88394 * C88435)) / C88087;
    const double C8757 = (C88370 * (C88383 + C88394 * C88435) +
                          (C88235 + C88258 * C88435) * ae) /
                         C88087;
    const double C89080 = C88381 + C89078;
    const double C89225 = 2 * C89220;
    const double C89223 = ae * C89220;
    const double C89334 = C88370 * C89220;
    const double C89294 = C89292 + C88257;
    const double C88391 = C88384 + C88389;
    const double C89351 = C88249 + C89349;
    const double C14055 = C89937 * C5924;
    const double C17087 = C89937 * C8761;
    const double C72646 = C55293 * C8761;
    const double C18622 = C89937 * C14043;
    const double C88423 = C88341 + C88422;
    const double C89028 = C88249 + C89027;
    const double C19293 = C89783 * C6571;
    const double C27550 = C89783 * C10794;
    const double C88445 = C88444 * C88219;
    const double C89079 = C88384 + C89077;
    const double C89154 = C88341 + C89153;
    const double C517 = C89937 * C503;
    const double C1367 = C89937 * C1357;
    const double C2300 = C89937 * C2290;
    const double C55670 = C55293 * C2290;
    const double C88481 = C88384 + C88480;
    const double C89370 = C88249 + C89369;
    const double C14455 = C89783 * C6139;
    const double C17552 = C89783 * C9072;
    const double C18846 = C89783 * C14445;
    const double C89092 = C88384 + C89091;
    const double C89376 = C88341 + C89375;
    const double C651 = C89926 * C637;
    const double C1551 = C89926 * C1541;
    const double C39193 = C38612 * C1541;
    const double C2484 = C89926 * C2474;
    const double C88519 = C88518 * C88219;
    const double C14169 = C89783 * C5977;
    const double C29633 = C89926 * C6414;
    const double C73502 = C38612 * C6414;
    const double C27852 = C89783 * C10956;
    const double C19202 = C89937 * C6494;
    const double C76446 = C55293 * C6494;
    const double C19538 = C89783 * C6805;
    const double C33938 = C89926 * C8681;
    const double C76310 = C38612 * C8681;
    const double C17213 = C89783 * C8838;
    const double C19201 = C273 * C6328;
    const double C19291 = C89783 * C6328;
    const double C29632 = C186 * C6328;
    const double C88266 = C88263 * ae;
    const double C110 = 3 * (C88215 + C88229 * C88216) +
                        C88212 * (2 * C88235 + C88212 * C88263);
    const double C832 = C88215 + C88229 * C88216 + C88263 * C88435;
    const double C833 = C88327 * (2 * C88235 + C88212 * C88263);
    const double C1765 = C88215 + C88229 * C88216 + C88263 * C88509;
    const double C1766 = C88370 * (2 * C88235 + C88212 * C88263);
    const double C4161 = C88370 * C88327 * C88263;
    const double C88847 = C88845 * ae;
    const double C6324 = C88327 * C88235 + C88845 * C88509;
    const double C88998 = C88996 * ae;
    const double C89044 = C89042 * ae;
    const double C13843 = 3 * (C88215 + C88229 * C88435) +
                          C88327 * (2 * C88855 + C88327 * C89042);
    const double C14727 = C88215 + C88229 * C88435 + C89042 * C88509;
    const double C16849 = C88370 * (2 * C88855 + C88327 * C89042);
    const double C15139 =
        (C88460 + ae * C88370 * C88338 + C88370 * (C88341 + C88370 * C88463) +
         ae * (C88917 + C88370 * (C88370 * C88327 * C88388 + C89041) +
               C88370 * C89037 * ae) +
         C88327 * (ae * (C88381 + C88370 * (C88370 * C88388 + C88257) +
                         C88370 * C88250 * ae) +
                   C88327 * (C88463 + ae * C88370 * C88345 +
                             C88370 * (C88352 + C88370 * C88466)))) /
        C88090;
    const double C89337 = C89335 * ae;
    const double C89392 = C89390 * ae;
    const double C27231 = 3 * (C88215 + C88229 * C88509) +
                          C88370 * (2 * C89006 + C88370 * C89390);
    const double C27946 = C89926 * C11009;
    const double C2307 = C89937 * C2294;
    const double C57634 = C55293 * C2294;
    const double C2491 = C89926 * C2478;
    const double C1896 = C89926 * C1874;
    const double C2198 = C186 * C1874;
    const double C2306 = C273 * C1874;
    const double C14365 = C89937 * C6086;
    const double C1374 = C89937 * C1361;
    const double C1558 = C89926 * C1545;
    const double C40263 = C38612 * C1545;
    const double C1077 = C89937 * C1055;
    const double C1557 = C186 * C1055;
    const double C1661 = C273 * C1055;
    const double C89173 = C88327 * C89171;
    const double C89450 = C88732 + C89448;
    const double C89500 = C88370 * C89498;
    const double C88365 = C88212 * C88363;
    const double C88833 = C88327 * C88363;
    const double C89367 = C88351 + C89366;
    const double C89507 = C88370 * C89457;
    const double C88408 = C88212 * C88406;
    const double C88907 = C88327 * C88406;
    const double C88985 = C88370 * C88406;
    const double C89087 = C88394 + C89085;
    const double C89433 = C88370 * C89431;
    const double C89229 = C88327 * C89226;
    const double C89323 = C88370 * C89226;
    const double C35936 =
        (4 * (2 * C88370 * C88344 + C88370 * C89491) +
         C88370 * (3 * C89491 +
                   C88370 * (2 * C88370 * C88356 +
                             C88370 * (C88356 + std::pow(C88218, 7) * bs[7] *
                                                    C88331 * C88509)))) /
        C88090;
    const double C23522 =
        (2 * C89137 + C88370 * C89249 +
         ae * (2 * C88370 * C88732 +
               C88370 * (C88732 + C88327 * C88297 * C88509)) +
         C88327 * (ae * (2 * C88753 + C88370 * (C88261 + C88297 * C88509)) +
                   C88327 * (2 * C89277 +
                             C88370 * (C88427 + std::pow(C88218, 7) * bs[7] *
                                                    C88415 * C88509)))) /
        C88090;
    const double C23523 =
        (ae * (2 * C88370 * C88237 + C88370 * (C88237 + C88261 * C88509)) +
         C88327 * (2 * C89137 + C88370 * C89249)) /
        C88090;
    const double C27538 = (3 * (C88418 + C88421 * C88509) +
                           C88370 * (2 * C89137 + C88370 * C89249)) /
                          C88090;
    const double C36048 =
        (4 * (2 * C89137 + C88370 * C89249) +
         C88370 * (3 * C89249 +
                   C88370 * (2 * C89277 +
                             C88370 * (C88427 + std::pow(C88218, 7) * bs[7] *
                                                    C88415 * C88509)))) /
        C88090;
    const double C18616 =
        (4 * (2 * C88327 * C88387 + C88327 * C89178) +
         C88327 * (3 * C89178 +
                   C88327 * (2 * C88327 * C88399 +
                             C88327 * (C88399 + std::pow(C88218, 7) * bs[7] *
                                                    C88374 * C88435)))) /
        C88090;
    const double C504 =
        (4 * (2 * C88212 * C88463 + C88212 * C88468) +
         C88212 * (3 * C88468 +
                   C88212 * (2 * C88212 * C88466 +
                             C88212 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C18841 =
        (4 * (2 * C88327 * C88479 + C88327 * C89234) +
         C88327 * (3 * C89234 +
                   C88327 * (2 * C88327 * C88485 +
                             C88327 * (C88485 + std::pow(C88218, 7) * bs[7] *
                                                    C88473 * C88435)))) /
        C88090;
    const double C638 =
        (4 * (2 * C88212 * C88500 + C88212 * C88505) +
         C88212 * (3 * C88505 +
                   C88212 * (2 * C88212 * C88503 +
                             C88212 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C89992 = C89809 / C89817;
    const double C89990 = C89809 / C89800;
    const double C89989 = C89809 * C89804;
    const double C5152 = (2 * C89813 * C89809) / C89800;
    const double C89993 = C89814 * C89804;
    const double C99 = C89814 / C89994;
    const double C2694 = C89814 / C89802;
    const double C90012 = C89991 / C89800;
    const double C5151 = (C89808 * std::pow(C89803, 2)) / C89812 + C89988;
    const double C90002 = C89876 / C89817;
    const double C90001 = C89876 * C89875;
    const double C89998 = C89876 / C89800;
    const double C823 = (2 * C89813 * C89876) / C89800;
    const double C90003 = C89879 * C89875;
    const double C5799 = C89879 / C89994;
    const double C7039 = C89879 / C89802;
    const double C90014 = C90000 / C89800;
    const double C822 = (C89827 * std::pow(C89874, 2)) / C89812 + C89995;
    const double C90006 = C89904 / C89817;
    const double C90005 = C89904 * C89903;
    const double C89999 = C89904 / C89800;
    const double C1758 = (2 * C89813 * C89904) / C89800;
    const double C90007 = C89907 * C89903;
    const double C10617 = C89907 / C89994;
    const double C12024 = C89907 / C89802;
    const double C90017 = C90004 / C89800;
    const double C1757 = (C89843 * std::pow(C89902, 2)) / C89812 + C89997;
    const double C88096 = C88088 * C88095;
    const double C105 =
        ((-C88095 / C88087) / C88091 - (0 * be) / C88087) / C88091 -
        (0 * be) / C88087;
    const double C13338 = -C88095 / C88087;
    const double C38616 = (-C88095 / C88087) / C88091 - (0 * be) / C88087;
    const double C39377 = C38609 * C845;
    const double C39773 = C38609 * C838;
    const double C39769 = C38609 * C1168;
    const double C39763 = C38609 * C1167;
    const double C39759 = C38609 * C837;
    const double C40149 = C38609 * C1460;
    const double C40147 = C38609 * C1462;
    const double C40141 = C38609 * C1461;
    const double C43813 = C38609 * C4163;
    const double C43809 = C38609 * C4511;
    const double C44243 = C38609 * C4841;
    const double C45687 = C38609 * C5977;
    const double C45683 = C38609 * C5806;
    const double C45897 = C38609 * C6139;
    const double C46447 = C38609 * C6571;
    const double C46443 = C38609 * C6328;
    const double C46753 = C38609 * C6805;
    const double C49419 = C38609 * C8838;
    const double C49415 = C38609 * C8595;
    const double C49725 = C38609 * C9072;
    const double C57006 = C38609 * C1778;
    const double C57402 = C38609 * C2099;
    const double C57396 = C38609 * C1771;
    const double C57392 = C38609 * C2101;
    const double C57386 = C38609 * C2100;
    const double C57382 = C38609 * C1770;
    const double C57750 = C38609 * C2395;
    const double C57744 = C38609 * C2394;
    const double C68457 = C38609 * C10794;
    const double C68453 = C38609 * C10623;
    const double C68665 = C38609 * C10956;
    const double C88146 = C88121 * C88138;
    const double C13402 =
        ((-C88135 / C88087) / C88091 -
         ((C89926 - (C88121 * C88138) / C88087) * be) / C88087) /
            C88091 -
        ((C88121 * ((-C88138 / C88087) / C88091 - (0 * be) / C88087) + C38612) *
         be) /
            C88087;
    const double C13403 =
        ((-C88138 / C88087) / C88091 - (0 * be) / C88087) / C88091 -
        (0 * be) / C88087;
    const double C38700 = (-C88138 / C88087) / C88091 - (0 * be) / C88087;
    const double C217 = C202 + C203;
    const double C216 = C200 + C201;
    const double C652 = C641 + C642;
    const double C27370 = C27351 + C27352;
    const double C27369 = C27349 + C27350;
    const double C27949 = C27941 + C27942;
    const double C438 = C425 + C426;
    const double C27679 = C27667 + C2195;
    const double C38723 = C38611 * C196;
    const double C38719 = C38611 * C190;
    const double C38717 = C38611 * C189;
    const double C38713 = C38611 * C195;
    const double C38707 = C38611 * C194;
    const double C38703 = C38611 * C188;
    const double C38951 = C38611 * C419;
    const double C38942 = C38611 * C418;
    const double C39197 = C38611 * C636;
    const double C39195 = C38611 * C635;
    const double C39189 = C38611 * C634;
    const double C39529 = C38611 * C938;
    const double C40267 = C38611 * C1545;
    const double C40265 = C38611 * C1542;
    const double C40597 = C38611 * C1874;
    const double C40595 = C38611 * C1871;
    const double C40591 = C38611 * C1879;
    const double C41254 = C38611 * C2478;
    const double C41252 = C38611 * C2475;
    const double C41577 = C38611 * C937;
    const double C42215 = C38611 * C1541;
    const double C42521 = C38611 * C1870;
    const double C43137 = C38611 * C2474;
    const double C73508 = C38611 * C1873;
    const double C73504 = C38611 * C1881;
    const double C73498 = C38611 * C1880;
    const double C73494 = C38611 * C1872;
    const double C73828 = C38611 * C2182;
    const double C74148 = C38611 * C2477;
    const double C74142 = C38611 * C2476;
    const double C76308 = C38611 * C4279;
    const double C79002 = C38611 * C6414;
    const double C82006 = C38611 * C8681;
    const double C84656 = C38611 * C10685;
    const double C84652 = C38611 * C10682;
    const double C85076 = C38611 * C11009;
    const double C13401 =
        ((-(0 * be) / C88087) / C88091 -
         ((0 - (C88121 * C88135) / C88087) * be) / C88087) /
            C88091 -
        ((C88121 * ((-C88135 / C88087) / C88091 -
                    ((C89926 - (C88121 * C88138) / C88087) * be) / C88087) +
          C38611) *
         be) /
            C88087 +
        (-C88138 / C88087) / C88091 - (0 * be) / C88087;
    const double C88172 = C88124 * C88164;
    const double C26160 =
        ((-C88161 / C88087) / C88091 -
         ((C89937 - (C88124 * C88164) / C88087) * be) / C88087) /
            C88091 -
        ((C88124 * ((-C88164 / C88087) / C88091 - (0 * be) / C88087) + C55293) *
         be) /
            C88087;
    const double C26161 =
        ((-C88164 / C88087) / C88091 - (0 * be) / C88087) / C88091 -
        (0 * be) / C88087;
    const double C55429 = (-C88164 / C88087) / C88091 - (0 * be) / C88087;
    const double C304 = C289 + C290;
    const double C303 = C287 + C288;
    const double C518 = C507 + C508;
    const double C14067 = C14048 + C14049;
    const double C14066 = C14046 + C14047;
    const double C14368 = C14360 + C14361;
    const double C733 = C720 + C721;
    const double C14642 = C14632 + C1658;
    const double C55452 = C55292 * C283;
    const double C55448 = C55292 * C277;
    const double C55446 = C55292 * C276;
    const double C55442 = C55292 * C282;
    const double C55436 = C55292 * C281;
    const double C55432 = C55292 * C275;
    const double C55674 = C55292 * C502;
    const double C55672 = C55292 * C501;
    const double C55666 = C55292 * C500;
    const double C55908 = C55292 * C714;
    const double C55899 = C55292 * C713;
    const double C56244 = C55292 * C1055;
    const double C56242 = C55292 * C1052;
    const double C56238 = C55292 * C1060;
    const double C56563 = C55292 * C1361;
    const double C56561 = C55292 * C1358;
    const double C57266 = C55292 * C1985;
    const double C57638 = C55292 * C2294;
    const double C57636 = C55292 * C2291;
    const double C58298 = C55292 * C1051;
    const double C58604 = C55292 * C1357;
    const double C59230 = C55292 * C1984;
    const double C59550 = C55292 * C2290;
    const double C72652 = C55292 * C1054;
    const double C72648 = C55292 * C1062;
    const double C72642 = C55292 * C1061;
    const double C72638 = C55292 * C1053;
    const double C72962 = C55292 * C1360;
    const double C72956 = C55292 * C1359;
    const double C73278 = C55292 * C1645;
    const double C76452 = C55292 * C4393;
    const double C76448 = C55292 * C4397;
    const double C78372 = C55292 * C5924;
    const double C78368 = C55292 * C5921;
    const double C78580 = C55292 * C6086;
    const double C79112 = C55292 * C6494;
    const double C82116 = C55292 * C8761;
    const double C82112 = C55292 * C8758;
    const double C26159 =
        ((-(0 * be) / C88087) / C88091 -
         ((0 - (C88124 * C88161) / C88087) * be) / C88087) /
            C88091 -
        ((C88124 * ((-C88161 / C88087) / C88091 -
                    ((C89937 - (C88124 * C88164) / C88087) * be) / C88087) +
          C55292) *
         be) /
            C88087 +
        (-C88164 / C88087) / C88091 - (0 * be) / C88087;
    const double C88227 = ae * C88226;
    const double C114 =
        (C88213 * C88211 * C88220 + C88212 * C88226 + C88212 * C88215 * ae) /
        C88087;
    const double C836 = (C88327 * C88226) / C88087;
    const double C1769 = (C88370 * C88226) / C88087;
    const double C14069 = C14052 + C14053;
    const double C27372 = C27355 + C27356;
    const double C17102 = C17090 + C17091;
    const double C29641 = C29628 + C29629;
    const double C88586 = C88585 + C88238;
    const double C88720 = C88719 + C88238;
    const double C4403 = C89937 * C4394;
    const double C4949 = C186 * C4394;
    const double C5062 = C273 * C4394;
    const double C56240 = C55293 * C4394;
    const double C60270 = C55292 * C4394;
    const double C962 = C186 * C831;
    const double C1076 = C273 * C831;
    const double C1264 = C416 * C831;
    const double C1660 = C711 * C831;
    const double C1895 = C186 * C1764;
    const double C2009 = C273 * C1764;
    const double C2197 = C416 * C1764;
    const double C2593 = C711 * C1764;
    const double C4284 = C186 * C4160;
    const double C4402 = C273 * C4160;
    const double C4619 = C416 * C4160;
    const double C5061 = C711 * C4160;
    const double C14062 = C273 * C5802;
    const double C14639 = C711 * C5802;
    const double C17096 = C273 * C8591;
    const double C17776 = C711 * C8591;
    const double C56131 = C186 * C8591;
    const double C56455 = C416 * C8591;
    const double C27365 = C186 * C10619;
    const double C27676 = C416 * C10619;
    const double C88244 = ae * C88242;
    const double C88243 = C88212 * C88242;
    const double C88253 = 2 * C88242;
    const double C88528 = C88327 * C88242;
    const double C88630 = C88370 * C88242;
    const double C839 = (C88226 + C88242 * C88435) / C88087;
    const double C1772 = (C88226 + C88242 * C88509) / C88087;
    const double C88859 = ae * C88856;
    const double C88858 = C88327 * C88856;
    const double C88942 = C88370 * C88856;
    const double C89035 = 2 * C88856;
    const double C89010 = ae * C89007;
    const double C89009 = C88370 * C89007;
    const double C89383 = 2 * C89007;
    const double C19456 = C89937 * C6728;
    const double C76866 = C55293 * C6728;
    const double C79430 = C55292 * C6728;
    const double C844 =
        (2 * ae * C88327 * C88224 + C88212 * C88327 * C88241) / C88090;
    const double C846 =
        ((C88215 + C88216 * C88217 * C88221) * C88219 + C88241 * C88435) /
        C88090;
    const double C1777 =
        (2 * ae * C88370 * C88224 + C88212 * C88370 * C88241) / C88090;
    const double C1779 =
        ((C88215 + C88216 * C88217 * C88221) * C88219 + C88241 * C88509) /
        C88090;
    const double C4167 = (C88370 * C88327 * C88241) / C88090;
    const double C420 =
        (2 * C88212 * C88440 +
         C88212 *
             (C88440 + (C88250 + C88435 * C88251 * C88252) * C88219 * C88216)) /
        C88090;
    const double C1248 =
        (2 * ae * C88212 * C88333 + C88327 * C88212 * C88440) / C88090;
    const double C2181 = (C88370 * C88212 * C88440) / C88090;
    const double C2183 =
        ((C88215 + C88435 * C88217 * C88221) * C88219 + C88440 * C88509) /
        C88090;
    const double C4613 =
        (2 * ae * C88370 * C88333 + C88327 * C88370 * C88440) / C88090;
    const double C715 =
        (2 * C88212 * C88514 +
         C88212 *
             (C88514 + (C88250 + C88509 * C88251 * C88252) * C88219 * C88216)) /
        C88090;
    const double C1644 = (C88327 * C88212 * C88514) / C88090;
    const double C1646 =
        ((C88215 + C88509 * C88217 * C88221) * C88219 + C88514 * C88435) /
        C88090;
    const double C2577 =
        (2 * ae * C88212 * C88376 + C88370 * C88212 * C88514) / C88090;
    const double C5055 =
        (2 * ae * C88327 * C88376 + C88370 * C88327 * C88514) / C88090;
    const double C88919 = C88918 + C88857;
    const double C19199 = C273 * C6325;
    const double C19696 = C711 * C6325;
    const double C29630 = C186 * C6325;
    const double C29966 = C416 * C6325;
    const double C31679 = C186 * C23356;
    const double C31923 = C416 * C23356;
    const double C88583 = ae * C88582;
    const double C940 =
        (C88213 * C88211 * C88330 + C88327 * C88582 + C88327 * C88215 * ae) /
        C88087;
    const double C4275 = (C88370 * C88582) / C88087;
    const double C6411 = (C88582 + C88856 * C88509) / C88087;
    const double C218 = C204 + C205;
    const double C439 = C428 + C429;
    const double C519 = C510 + C511;
    const double C221 = C210 + C211;
    const double C440 = C431 + C432;
    const double C520 = C512 + C513;
    const double C971 = C956 + C957;
    const double C1272 = C1256 + C1257;
    const double C973 = C960 + C961;
    const double C1273 = C1259 + C1260;
    const double C1904 = C1889 + C1890;
    const double C2205 = C2189 + C2190;
    const double C1906 = C1893 + C1894;
    const double C2206 = C2192 + C2193;
    const double C2312 = C2302 + C2303;
    const double C27680 = C27669 + C2196;
    const double C27371 = C27353 + C27354;
    const double C27681 = C27671 + C10851;
    const double C27374 = C27359 + C27360;
    const double C88717 = ae * C88716;
    const double C1987 =
        (C88213 * C88211 * C88373 + C88370 * C88716 + C88370 * C88215 * ae) /
        C88087;
    const double C1379 = C1369 + C1370;
    const double C305 = C291 + C292;
    const double C653 = C644 + C645;
    const double C734 = C723 + C724;
    const double C308 = C297 + C298;
    const double C654 = C646 + C647;
    const double C735 = C726 + C727;
    const double C1085 = C1070 + C1071;
    const double C1668 = C1652 + C1653;
    const double C1087 = C1074 + C1075;
    const double C1563 = C1553 + C1554;
    const double C1669 = C1655 + C1656;
    const double C14643 = C14634 + C1659;
    const double C14068 = C14050 + C14051;
    const double C2018 = C2003 + C2004;
    const double C2601 = C2585 + C2586;
    const double C2020 = C2007 + C2008;
    const double C2496 = C2486 + C2487;
    const double C2602 = C2588 + C2589;
    const double C17780 = C17773 + C5060;
    const double C17103 = C17092 + C17093;
    const double C14644 = C14636 + C6249;
    const double C14071 = C14056 + C14057;
    const double C17779 = C17771 + C9230;
    const double C17101 = C17088 + C17089;
    const double C88271 = ae * C88268;
    const double C88270 = C88212 * C88268;
    const double C88287 = 2 * C88268;
    const double C88535 = C88268 * C88435;
    const double C88541 = C88327 * C88268;
    const double C88637 = C88268 * C88509;
    const double C88643 = C88370 * C88268;
    const double C89172 = C88327 * C89170;
    const double C89183 = C88327 * C89182;
    const double C89499 = C88370 * C89497;
    const double C89513 = C88370 * C89512;
    const double C88742 = 2 * C88737;
    const double C89166 = C88344 + C88737;
    const double C89180 = C88421 + C88737;
    const double C89449 = C88737 + C89447;
    const double C89461 = C88737 + C89460;
    const double C23471 =
        (2 * (ae * C88890 + C88370 * C89306) + ae * (C88890 + C88732 * C88509) +
         C88370 * (C89306 + ae * C88370 * C88732 +
                   C88370 * (C88737 + C88370 * C88327 * C88399))) /
        C88090;
    const double C23682 =
        (2 * (ae * C88890 + C88370 * C89319) + ae * (C88890 + C88732 * C88509) +
         C88370 * (C89319 + ae * C88370 * C88732 +
                   C88370 * (C88737 + C88370 * C88327 * C88485))) /
        C88090;
    const double C19297 = C89783 * C14975;
    const double C31681 = C186 * C23358;
    const double C31840 = C89783 * C23358;
    const double C88763 = 2 * C88758;
    const double C89279 = C88758 + C89278;
    const double C89493 = C88387 + C88758;
    const double C89510 = C88479 + C88758;
    const double C14899 =
        (C88380 + C88387 * C88435 + ae * C88370 * C89020 +
         C88370 * (ae * C89020 + C88370 * (C88387 + C88399 * C88435))) /
        C88090;
    const double C15215 =
        (C88476 + C88479 * C88435 + ae * C88370 * C89020 +
         C88370 * (ae * C89020 + C88370 * (C88479 + C88485 * C88435))) /
        C88090;
    const double C17083 =
        (ae * (2 * C88890 + C88327 * C89020) +
         C88370 * (2 * C88327 * C88387 + C88327 * (C88387 + C88399 * C88435))) /
        C88090;
    const double C17209 =
        (2 * (ae * C88370 * C88237 + C88327 * C89137) + ae * C88370 * C89020 +
         C88327 * (C89137 + ae * C88370 * C88732 +
                   C88327 * (C88758 + C88327 * C88370 * C88427))) /
        C88090;
    const double C17548 =
        (ae * (2 * C88890 + C88327 * C89020) +
         C88370 * (2 * C88327 * C88479 + C88327 * (C88479 + C88485 * C88435))) /
        C88090;
    const double C19288 =
        (2 * (ae * (C88237 + C88261 * C88509) + C88327 * C89249) +
         ae * (C89020 + C89171 * C88509) +
         C88327 * (C89249 + ae * (C88732 + C88327 * C88297 * C88509) +
                   C88327 * (ae * (C88261 + C88297 * C88509) +
                             C88327 * (C88427 + std::pow(C88218, 7) * bs[7] *
                                                    C88415 * C88509)))) /
        C88090;
    const double C23470 =
        (2 * (ae * C89020 + C88370 * C89178) + ae * (C89020 + C89171 * C88509) +
         C88370 * (C89178 + ae * C88370 * C89171 +
                   C88370 * (ae * C89171 +
                             C88370 * (C88399 + std::pow(C88218, 7) * bs[7] *
                                                    C88374 * C88435)))) /
        C88090;
    const double C23681 =
        (2 * (ae * C89020 + C88370 * C89234) + ae * (C89020 + C89171 * C88509) +
         C88370 * (C89234 + ae * C88370 * C89171 +
                   C88370 * (ae * C89171 +
                             C88370 * (C88485 + std::pow(C88218, 7) * bs[7] *
                                                    C88473 * C88435)))) /
        C88090;
    const double C13845 = (3 * (C88224 + C88237 * C88435) +
                           C88327 * (2 * C88890 + C88327 * C89020)) /
                          C88087;
    const double C14729 = (C88224 + C88237 * C88435 + C89020 * C88509) / C88087;
    const double C16851 = (C88370 * (2 * C88890 + C88327 * C89020)) / C88087;
    const double C23357 =
        (2 * C88370 * C89020 + C88370 * (C89020 + C89171 * C88509)) / C88087;
    const double C31837 =
        (ae * (3 * C89352 +
               C88370 * (2 * C88753 + C88370 * (C88261 + C88297 * C88509))) +
         C88327 * (3 * C89249 +
                   C88370 * (2 * C89277 +
                             C88370 * (C88427 + std::pow(C88218, 7) * bs[7] *
                                                    C88415 * C88509)))) /
        C88090;
    const double C27233 = (3 * (C88224 + C88237 * C88509) +
                           C88370 * (2 * C89348 + C88370 * C89352)) /
                          C88087;
    const double C88269 = C88212 * C88267;
    const double C88539 = C88327 * C88267;
    const double C88641 = C88370 * C88267;
    const double C847 = (2 * ae * (C88224 + C88237 * C88435) +
                         C88212 * (C88241 + C88267 * C88435)) /
                        C88090;
    const double C1780 = (2 * ae * (C88224 + C88237 * C88509) +
                          C88212 * (C88241 + C88267 * C88509)) /
                         C88090;
    const double C5809 =
        (2 * C88327 * C88241 + C88327 * (C88241 + C88267 * C88435)) / C88090;
    const double C8598 = (C88370 * (C88241 + C88267 * C88435)) / C88090;
    const double C10626 =
        (2 * C88370 * C88241 + C88370 * (C88241 + C88267 * C88509)) / C88090;
    const double C88303 = C88212 * C88299;
    const double C88302 = C88299 * ae;
    const double C88834 = C88327 * C88299;
    const double C88986 = C88370 * C88299;
    const double C5801 =
        2 * C88327 * C88263 + C88327 * (C88263 + C88299 * C88435);
    const double C8590 = C88370 * (C88263 + C88299 * C88435);
    const double C10618 =
        2 * C88370 * C88263 + C88370 * (C88263 + C88299 * C88509);
    const double C89065 = C89061 + C88298;
    const double C89406 = C89402 + C88298;
    const double C89063 = C88258 + C89059;
    const double C89062 = C89058 * ae;
    const double C89432 = C88370 * C89058;
    const double C29516 =
        2 * C88370 * C88845 + C88370 * (C88845 + C89058 * C88509);
    const double C89408 = C88258 + C89404;
    const double C89407 = C89403 * ae;
    const double C88310 = ae * C88305;
    const double C88308 = C88212 * C88305;
    const double C88547 = C88305 * C88435;
    const double C88649 = C88305 * C88509;
    const double C88736 = C88327 * C88305;
    const double C88757 = C88370 * C88305;
    const double C89204 = ae * C89197;
    const double C89201 = C88327 * C89197;
    const double C89253 = C89197 * C88509;
    const double C89285 = C88370 * C89197;
    const double C89540 = ae * C89534;
    const double C89538 = C88370 * C89534;
    const double C88307 = C88212 * C88304;
    const double C88545 = C88304 * C88435;
    const double C88647 = C88304 * C88509;
    const double C88733 = C88327 * C88304;
    const double C88754 = C88370 * C88304;
    const double C88451 = C88450 * C88216;
    const double C89055 = C88212 * C88450;
    const double C89188 = C88327 * C88450;
    const double C89251 = C88450 * C88509;
    const double C89282 = C88370 * C88450;
    const double C88525 = C88524 * C88216;
    const double C89099 = C88212 * C88524;
    const double C89242 = C88524 * C88435;
    const double C89467 = C88327 * C88524;
    const double C89524 = C88370 * C88524;
    const double C89203 = C88327 * C89199;
    const double C89202 = C89199 * ae;
    const double C89324 = C88370 * C89199;
    const double C23355 =
        2 * C88370 * C89042 + C88370 * (C89042 + C89199 * C88509);
    const double C89477 = C89473 + C89198;
    const double C89475 = C89037 + C89471;
    const double C89474 = C89470 * ae;
    const double C89531 = C88370 * C89456;
    const double C89529 = C89456 * ae;
    const double C88589 = C88327 * C88349;
    const double C2295 = (C88460 + C88463 * C88216 + ae * C88370 * C88349 +
                          C88370 * (ae * C88349 + C88370 * C88468)) /
                         C88090;
    const double C2296 = (ae * (2 * C88340 + C88212 * C88349) +
                          C88370 * (2 * C88212 * C88463 + C88212 * C88468)) /
                         C88090;
    const double C2479 = (C88497 + C88500 * C88216 + ae * C88370 * C88349 +
                          C88370 * (ae * C88349 + C88370 * C88505)) /
                         C88090;
    const double C2480 = (ae * (2 * C88340 + C88212 * C88349) +
                          C88370 * (2 * C88212 * C88500 + C88212 * C88505)) /
                         C88090;
    const double C10901 =
        (2 * (ae * C88349 + C88370 * C88468) + ae * (C88349 + C88363 * C88509) +
         C88370 * (C88468 + ae * C88370 * C88363 +
                   C88370 * (ae * C88363 +
                             C88370 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C11007 =
        (2 * (ae * C88349 + C88370 * C88505) + ae * (C88349 + C88363 * C88509) +
         C88370 * (C88505 + ae * C88370 * C88363 +
                   C88370 * (ae * C88363 +
                             C88370 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C191 = (3 * (C88333 + C88338 * C88216) +
                         C88212 * (2 * C88340 + C88212 * C88349)) /
                        C88087;
    const double C943 = (C88327 * (2 * C88340 + C88212 * C88349) +
                         (2 * C88235 + C88212 * C88263) * ae) /
                        C88087;
    const double C1875 = (C88333 + C88338 * C88216 + C88349 * C88509) / C88087;
    const double C1876 = (C88370 * (2 * C88340 + C88212 * C88349)) / C88087;
    const double C10680 =
        (2 * C88370 * C88349 + C88370 * (C88349 + C88363 * C88509)) / C88087;
    const double C88364 = C88212 * C88362;
    const double C89022 = C88327 * C88362;
    const double C88430 = C88212 * C88429;
    const double C89030 = C88327 * C88429;
    const double C89139 = C88370 * C88429;
    const double C89265 = C88370 * C89263;
    const double C89293 = C88327 * C89263;
    const double C89519 = C88370 * C89518;
    const double C88359 = C88344 + C88355;
    const double C88425 = C88421 + C88355;
    const double C89054 = 2 * C88355;
    const double C89157 = C88355 + C89156;
    const double C89379 = C88355 + C89378;
    const double C6727 =
        (ae * (C88383 + C88370 * (C88370 * C88394 + C88262) +
               C88370 * C88258 * ae) +
         C88327 * (C88865 + ae * C88370 * C88351 +
                   C88370 * (C88355 + C88370 * C88212 * C88466))) /
        C88090;
    const double C10902 =
        (2 * (ae * C88340 + C88370 * C88865) + ae * (C88340 + C88351 * C88509) +
         C88370 * (C88865 + ae * C88370 * C88351 +
                   C88370 * (C88355 + C88370 * C88212 * C88466))) /
        C88090;
    const double C11008 =
        (2 * (ae * C88340 + C88370 * C88872) + ae * (C88340 + C88351 * C88509) +
         C88370 * (C88872 + ae * C88370 * C88351 +
                   C88370 * (C88355 + C88370 * C88212 * C88503))) /
        C88090;
    const double C88846 = C88844 + C88262;
    const double C10850 = C186 * C10681;
    const double C27366 = C89926 * C10681;
    const double C89045 = ae * C89040;
    const double C89043 = C88327 * C89040;
    const double C89109 = C89040 * C88509;
    const double C89143 = C88370 * C89040;
    const double C89190 = 2 * C89040;
    const double C89264 = C88463 + C89262;
    const double C89281 = 2 * C89262;
    const double C89516 = C88500 + C89262;
    const double C27344 = (3 * (C88333 + C88338 * C88509) +
                           C88370 * (2 * C89361 + C88370 * C89363)) /
                          C88087;
    const double C197 =
        (3 * (C88337 + ae * C88340 + C88212 * C88348) +
         ae * (2 * C88340 + C88212 * C88349) +
         C88212 * (2 * C88348 + ae * C88349 +
                   C88212 * (C88344 + ae * C88212 * C88345 +
                             C88212 * (ae * C88345 +
                                       C88212 * C88285 * C88284 * C88331)))) /
        C88090;
    const double C1878 =
        (C88370 * (C88337 + ae * C88340 + C88212 * C88348)) / C88090;
    const double C1882 =
        (ae * C88333 + C88212 * C88337 + C88348 * C88509) / C88090;
    const double C10684 =
        (2 * C88370 * C88348 + C88370 * (C88348 + C88362 * C88509)) / C88090;
    const double C27347 =
        (3 * (C88348 + C88362 * C88509) +
         C88370 *
             (2 * C88370 * C88362 +
              C88370 * (C88362 + (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88331) *
                                     C88509))) /
        C88090;
    const double C13965 =
        (3 * (C88337 + ae * C88890 + C88327 * C89019) +
         ae * (2 * C88890 + C88327 * C89020) +
         C88327 * (2 * C89019 + ae * C89020 +
                   C88327 * (C88344 + C88737 +
                             C88327 * (C88282 + C88327 * C88356)))) /
        C88090;
    const double C14821 =
        (C88337 + ae * C88890 + C88327 * C89019 +
         (C88344 + C88737 + C88327 * (C88282 + C88327 * C88356)) * C88509) /
        C88090;
    const double C16981 =
        (C88370 *
         (2 * C89019 + ae * C89020 +
          C88327 * (C88344 + C88737 + C88327 * (C88282 + C88327 * C88356)))) /
        C88090;
    const double C23417 =
        (2 * C88370 * C89019 + C88370 * (C89019 + C89170 * C88509)) / C88090;
    const double C31677 =
        (3 * (C89019 + C89170 * C88509) +
         C88370 *
             (2 * C88370 * C89170 +
              C88370 * (C89170 + (ae * C88297 + C88327 * std::pow(C88218, 7) *
                                                    bs[7] * C88331) *
                                     C88509))) /
        C88090;
    const double C27373 = C27357 + C27358;
    const double C88723 = C88370 * C88392;
    const double C1362 = (C88460 + C88463 * C88216 + ae * C88327 * C88392 +
                          C88327 * (ae * C88392 + C88327 * C88468)) /
                         C88090;
    const double C1363 = (ae * (2 * C88383 + C88212 * C88392) +
                          C88327 * (2 * C88212 * C88463 + C88212 * C88468)) /
                         C88090;
    const double C1546 = (C88497 + C88500 * C88216 + ae * C88327 * C88392 +
                          C88327 * (ae * C88392 + C88327 * C88505)) /
                         C88090;
    const double C1547 = (ae * (2 * C88383 + C88212 * C88392) +
                          C88327 * (2 * C88212 * C88500 + C88212 * C88505)) /
                         C88090;
    const double C6084 =
        (2 * (ae * C88392 + C88327 * C88468) + ae * (C88392 + C88406 * C88435) +
         C88327 * (C88468 + ae * C88327 * C88406 +
                   C88327 * (ae * C88406 +
                             C88327 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C6190 =
        (2 * (ae * C88392 + C88327 * C88505) + ae * (C88392 + C88406 * C88435) +
         C88327 * (C88505 + ae * C88327 * C88406 +
                   C88327 * (ae * C88406 +
                             C88327 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C278 = (3 * (C88376 + C88381 * C88216) +
                         C88212 * (2 * C88383 + C88212 * C88392)) /
                        C88087;
    const double C1056 = (C88376 + C88381 * C88216 + C88392 * C88435) / C88087;
    const double C1057 = (C88327 * (2 * C88383 + C88212 * C88392)) / C88087;
    const double C1990 = (C88370 * (2 * C88383 + C88212 * C88392) +
                          (2 * C88235 + C88212 * C88263) * ae) /
                         C88087;
    const double C4395 =
        (C88370 * C88327 * C88392 + C88327 * C88263 * ae) / C88087;
    const double C5919 =
        (2 * C88327 * C88392 + C88327 * (C88392 + C88406 * C88435)) / C88087;
    const double C8756 = (C88370 * (C88392 + C88406 * C88435) +
                          (C88263 + C88299 * C88435) * ae) /
                         C88087;
    const double C88407 = C88212 * C88405;
    const double C89354 = C88370 * C88405;
    const double C89422 = C88327 * C88405;
    const double C88488 = C88212 * C88487;
    const double C89372 = C88370 * C88487;
    const double C89427 = C88327 * C88487;
    const double C89228 = C88327 * C89224;
    const double C89239 = C88327 * C89238;
    const double C89463 = C88370 * C89238;
    const double C88402 = C88387 + C88398;
    const double C88483 = C88479 + C88398;
    const double C89086 = C88398 + C89084;
    const double C89096 = C88398 + C89095;
    const double C89399 = 2 * C88398;
    const double C6085 =
        (2 * (ae * C88383 + C88327 * C88865) + ae * (C88383 + C88394 * C88435) +
         C88327 * (C88865 + ae * C88327 * C88394 +
                   C88327 * (C88398 + C88327 * C88212 * C88466))) /
        C88090;
    const double C6191 =
        (2 * (ae * C88383 + C88327 * C88872) + ae * (C88383 + C88394 * C88435) +
         C88327 * (C88872 + ae * C88327 * C88394 +
                   C88327 * (C88398 + C88327 * C88212 * C88503))) /
        C88090;
    const double C88913 = C88370 * C88912;
    const double C88997 = C88995 + C88262;
    const double C6248 = C273 * C5920;
    const double C14063 = C89937 * C5920;
    const double C9229 = C273 * C8757;
    const double C17097 = C89937 * C8757;
    const double C56246 = C55293 * C8757;
    const double C56773 = C186 * C8757;
    const double C89123 = C88370 * C89080;
    const double C14041 = (3 * (C88376 + C88381 * C88435) +
                           C88327 * (2 * C88917 + C88327 * C89080)) /
                          C88087;
    const double C17081 = (C88370 * (2 * C88917 + C88327 * C89080) +
                           (2 * C88855 + C88327 * C89042) * ae) /
                          C88087;
    const double C89227 = C88463 + C89223;
    const double C89236 = C88500 + C89223;
    const double C89466 = 2 * C89223;
    const double C89336 = C89334 + C89041;
    const double C89295 = ae * C89294;
    const double C89384 = C88370 * C89294;
    const double C89526 = 2 * C89294;
    const double C284 =
        (3 * (C88380 + ae * C88383 + C88212 * C88391) +
         ae * (2 * C88383 + C88212 * C88392) +
         C88212 * (2 * C88391 + ae * C88392 +
                   C88212 * (C88387 + ae * C88212 * C88388 +
                             C88212 * (ae * C88388 +
                                       C88212 * C88285 * C88284 * C88374)))) /
        C88090;
    const double C1059 =
        (C88327 * (C88380 + ae * C88383 + C88212 * C88391)) / C88090;
    const double C1063 =
        (ae * C88376 + C88212 * C88380 + C88391 * C88435) / C88090;
    const double C5923 =
        (2 * C88327 * C88391 + C88327 * (C88391 + C88405 * C88435)) / C88090;
    const double C14044 =
        (3 * (C88391 + C88405 * C88435) +
         C88327 *
             (2 * C88327 * C88405 +
              C88327 * (C88405 + (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374) *
                                     C88435))) /
        C88090;
    const double C27462 =
        (3 * (C88380 + ae * C89348 + C88370 * C89351) +
         ae * (2 * C89348 + C88370 * C89352) +
         C88370 * (2 * C89351 + ae * C89352 +
                   C88370 * (C88387 + C88758 +
                             C88370 * (C88282 + C88370 * C88399)))) /
        C88090;
    const double C14070 = C14054 + C14055;
    const double C17100 = C17086 + C17087;
    const double C364 =
        (3 * (C88418 + ae * C88340 + C88212 * C88423) +
         ae * (2 * C88340 + C88212 * C88349) +
         C88212 * (2 * C88423 + ae * C88349 +
                   C88212 * (C88421 + C88355 +
                             C88212 * (C88352 +
                                       C88212 * C88285 * C88284 * C88415)))) /
        C88090;
    const double C2098 =
        (C88370 * (C88418 + ae * C88340 + C88212 * C88423)) / C88090;
    const double C2102 =
        (ae * C88333 + C88212 * C88418 + C88423 * C88509) / C88090;
    const double C10793 =
        (2 * C88370 * C88423 + C88370 * (C88423 + C88429 * C88509)) / C88090;
    const double C14157 =
        (3 * (C88418 + ae * C88890 + C88327 * C89028) +
         ae * (2 * C88890 + C88327 * C89020) +
         C88327 * (2 * C89028 + ae * C89020 +
                   C88327 * (C88421 + C88737 +
                             C88327 * (C88282 + C88327 * C88427)))) /
        C88090;
    const double C88843 = C88212 * C88445;
    const double C89034 = C88327 * C88445;
    const double C89141 = C88370 * C88445;
    const double C421 =
        (3 * (C88440 + C88445 * C88216) +
         C88212 * (2 * C88212 * C88445 +
                   C88212 * (C88445 + (C88283 + C88435 * C88284 * C88285) *
                                          C88219 * C88216))) /
        C88090;
    const double C1247 = (2 * ae * (C88333 + C88338 * C88216) +
                          C88327 * (C88440 + C88445 * C88216)) /
                         C88090;
    const double C2180 = (C88370 * (C88440 + C88445 * C88216)) / C88090;
    const double C2184 = (C88212 * C88440 + C88212 * C88445 * C88509) / C88090;
    const double C4614 =
        (2 * ae * C88370 * C88340 + C88327 * C88370 * C88212 * C88445) / C88090;
    const double C6648 = (2 * ae * (C88333 + C88338 * C88509) +
                          C88327 * (C88440 + C88445 * C88509)) /
                         C88090;
    const double C10847 =
        (2 * C88370 * C88440 + C88370 * (C88440 + C88445 * C88509)) / C88090;
    const double C14357 =
        (3 * (C88460 + ae * C88917 + C88327 * C89079) +
         ae * (2 * C88917 + C88327 * C89080) +
         C88327 * (2 * C89079 + ae * C89080 +
                   C88327 * (C88463 + ae * C88327 * C88388 +
                             C88327 * (C88395 + C88327 * C88466)))) /
        C88090;
    const double C1378 = C1366 + C1367;
    const double C2311 = C2299 + C2300;
    const double C581 =
        (3 * (C88476 + ae * C88383 + C88212 * C88481) +
         ae * (2 * C88383 + C88212 * C88392) +
         C88212 * (2 * C88481 + ae * C88392 +
                   C88212 * (C88479 + C88398 +
                             C88212 * (C88395 +
                                       C88212 * C88285 * C88284 * C88473)))) /
        C88090;
    const double C1459 =
        (C88327 * (C88476 + ae * C88383 + C88212 * C88481)) / C88090;
    const double C1463 =
        (ae * C88376 + C88212 * C88476 + C88481 * C88435) / C88090;
    const double C6138 =
        (2 * C88327 * C88481 + C88327 * (C88481 + C88487 * C88435)) / C88090;
    const double C14446 =
        (3 * (C88481 + C88487 * C88435) +
         C88327 *
             (2 * C88327 * C88487 +
              C88327 * (C88487 + (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473) *
                                     C88435))) /
        C88090;
    const double C27844 =
        (3 * (C88476 + ae * C89348 + C88370 * C89370) +
         ae * (2 * C89348 + C88370 * C89352) +
         C88370 * (2 * C89370 + ae * C89352 +
                   C88370 * (C88479 + C88758 +
                             C88370 * (C88282 + C88370 * C88485)))) /
        C88090;
    const double C14553 =
        (3 * (C88497 + ae * C88917 + C88327 * C89092) +
         ae * (2 * C88917 + C88327 * C89080) +
         C88327 * (2 * C89092 + ae * C89080 +
                   C88327 * (C88500 + ae * C88327 * C88388 +
                             C88327 * (C88395 + C88327 * C88503)))) /
        C88090;
    const double C27938 =
        (3 * (C88497 + ae * C89361 + C88370 * C89376) +
         ae * (2 * C89361 + C88370 * C89363) +
         C88370 * (2 * C89376 + ae * C89363 +
                   C88370 * (C88500 + C89262 +
                             C88370 * (C88352 + C88370 * C88503)))) /
        C88090;
    const double C1562 = C1550 + C1551;
    const double C2495 = C2483 + C2484;
    const double C88876 = C88212 * C88519;
    const double C89333 = C88327 * C88519;
    const double C89382 = C88370 * C88519;
    const double C716 =
        (3 * (C88514 + C88519 * C88216) +
         C88212 * (2 * C88212 * C88519 +
                   C88212 * (C88519 + (C88283 + C88509 * C88284 * C88285) *
                                          C88219 * C88216))) /
        C88090;
    const double C1643 = (C88327 * (C88514 + C88519 * C88216)) / C88090;
    const double C1647 = (C88212 * C88514 + C88212 * C88519 * C88435) / C88090;
    const double C2576 = (2 * ae * (C88376 + C88381 * C88216) +
                          C88370 * (C88514 + C88519 * C88216)) /
                         C88090;
    const double C5056 =
        (2 * ae * C88327 * C88383 + C88370 * C88327 * C88212 * C88519) / C88090;
    const double C6245 =
        (2 * C88327 * C88514 + C88327 * (C88514 + C88519 * C88435)) / C88090;
    const double C9226 = (2 * ae * (C88376 + C88381 * C88435) +
                          C88370 * (C88514 + C88519 * C88435)) /
                         C88090;
    const double C14629 =
        (3 * (C88514 + C88519 * C88435) +
         C88327 * (2 * C88327 * C88519 + C88327 * (C88519 + C88524 * C88435))) /
        C88090;
    const double C17768 =
        (2 * ae * (2 * C88917 + C88327 * C89080) +
         C88370 * (2 * C88327 * C88519 + C88327 * (C88519 + C88524 * C88435))) /
        C88090;
    const double C33944 = C33937 + C33938;
    const double C19208 = C19201 + C19202;
    const double C29643 = C29632 + C29633;
    const double C212 = C186 * C110;
    const double C299 = C273 * C110;
    const double C434 = C416 * C110;
    const double C729 = C711 * C110;
    const double C966 = C186 * C832;
    const double C1080 = C273 * C832;
    const double C1267 = C416 * C832;
    const double C1663 = C711 * C832;
    const double C2778 = C186 * C833;
    const double C2860 = C273 * C833;
    const double C3016 = C416 * C833;
    const double C3334 = C711 * C833;
    const double C1899 = C186 * C1765;
    const double C2013 = C273 * C1765;
    const double C2200 = C416 * C1765;
    const double C2596 = C711 * C1765;
    const double C3499 = C186 * C1766;
    const double C3581 = C273 * C1766;
    const double C3737 = C416 * C1766;
    const double C4055 = C711 * C1766;
    const double C4288 = C186 * C4161;
    const double C4406 = C273 * C4161;
    const double C4622 = C416 * C4161;
    const double C5064 = C711 * C4161;
    const double C29636 = C186 * C6324;
    const double C29970 = C416 * C6324;
    const double C40710 = C273 * C6324;
    const double C41362 = C711 * C6324;
    const double C18619 = C273 * C13843;
    const double C18951 = C711 * C13843;
    const double C19203 = C273 * C14727;
    const double C19698 = C711 * C14727;
    const double C33939 = C186 * C14727;
    const double C34179 = C416 * C14727;
    const double C21492 = C273 * C16849;
    const double C21968 = C711 * C16849;
    const double C19458 = C89937 * C15139;
    const double C82436 = C55293 * C15139;
    const double C35939 = C186 * C27231;
    const double C36110 = C416 * C27231;
    const double C2313 = C2306 + C2307;
    const double C1564 = C1557 + C1558;
    const double C89175 = C89168 + C89173;
    const double C31594 = (3 * (C88890 + C88732 * C88509) +
                           C88370 * (2 * C89444 + C88370 * C89450)) /
                          C88087;
    const double C89502 = C89495 + C89500;
    const double C88367 = C88357 + C88365;
    const double C27345 = (3 * (C88340 + C88351 * C88509) +
                           C88370 * (2 * C89365 + C88370 * C89367)) /
                          C88087;
    const double C89508 = C89506 + C89507;
    const double C88410 = C88400 + C88408;
    const double C88908 = C88370 * C88907;
    const double C89127 = C88370 * C89087;
    const double C14042 = (3 * (C88383 + C88394 * C88435) +
                           C88327 * (2 * C88912 + C88327 * C89087)) /
                          C88087;
    const double C89231 = C89225 + C89229;
    const double C31842 = C89783 * C23523;
    const double C36054 = C89783 * C27538;
    const double C90011 = C89989 / C89812;
    const double C90013 = C89993 / C89800;
    const double C825 = -C90012;
    const double C90015 = C90001 / C89812;
    const double C90016 = C90003 / C89800;
    const double C5149 = -C90014;
    const double C90018 = C90005 / C89812;
    const double C90019 = C90007 / C89800;
    const double C9304 = -C90017;
    const double C88097 = C88096 / C88087;
    const double C13345 = C13338 * C113;
    const double C13342 = C13338 * C838;
    const double C13341 = C13338 * C837;
    const double C13340 = C13338 * C112;
    const double C13855 = C13338 * C5806;
    const double C14180 = C13338 * C5802;
    const double C14176 = C13338 * C831;
    const double C14174 = C13338 * C938;
    const double C14172 = C13338 * C828;
    const double C14170 = C13338 * C5803;
    const double C14164 = C13338 * C830;
    const double C14162 = C13338 * C939;
    const double C14160 = C13338 * C829;
    const double C14464 = C13338 * C5920;
    const double C14461 = C13338 * C1055;
    const double C14458 = C13338 * C1052;
    const double C14454 = C13338 * C5921;
    const double C14452 = C13338 * C1054;
    const double C14449 = C13338 * C1053;
    const double C14738 = C13338 * C6328;
    const double C14737 = C13338 * C1771;
    const double C14736 = C13338 * C1770;
    const double C14735 = C13338 * C4163;
    const double C14734 = C13338 * C8595;
    const double C15689 = C13338 * C832;
    const double C15687 = C13338 * C937;
    const double C15685 = C13338 * C827;
    const double C15923 = C13338 * C1051;
    const double C17224 = C13338 * C8591;
    const double C17220 = C13338 * C4160;
    const double C17218 = C13338 * C4159;
    const double C17214 = C13338 * C8592;
    const double C17561 = C13338 * C8757;
    const double C17558 = C13338 * C4394;
    const double C17554 = C13338 * C4393;
    const double C17551 = C13338 * C8758;
    const double C18678 = C13338 * C13843;
    const double C19294 = C13338 * C14727;
    const double C19290 = C13338 * C6325;
    const double C21575 = C13338 * C16849;
    const double C23364 = C13338 * C10623;
    const double C23363 = C13338 * C23358;
    const double C27563 = C13338 * C10681;
    const double C27561 = C13338 * C10619;
    const double C27559 = C13338 * C1874;
    const double C27557 = C13338 * C1764;
    const double C27555 = C13338 * C1871;
    const double C27553 = C13338 * C1761;
    const double C27551 = C13338 * C10620;
    const double C27549 = C13338 * C10682;
    const double C27547 = C13338 * C1873;
    const double C27545 = C13338 * C1763;
    const double C27543 = C13338 * C1872;
    const double C27541 = C13338 * C1762;
    const double C27853 = C13338 * C1985;
    const double C27847 = C13338 * C1986;
    const double C29026 = C13338 * C1765;
    const double C29024 = C13338 * C1870;
    const double C29022 = C13338 * C1760;
    const double C29262 = C13338 * C1984;
    const double C29857 = C13338 * C6324;
    const double C31839 = C13338 * C23356;
    const double C36051 = C13338 * C27231;
    const double C74650 = C13338 * C4161;
    const double C38619 = C38616 * C113;
    const double C39784 = C38616 * C832;
    const double C39780 = C38616 * C937;
    const double C39776 = C38616 * C827;
    const double C39770 = C38616 * C831;
    const double C39764 = C38616 * C938;
    const double C39760 = C38616 * C828;
    const double C40150 = C38616 * C1051;
    const double C40144 = C38616 * C1055;
    const double C40142 = C38616 * C1052;
    const double C41790 = C38616 * C833;
    const double C43816 = C38616 * C4161;
    const double C43810 = C38616 * C4160;
    const double C44240 = C38616 * C4394;
    const double C45684 = C38616 * C5802;
    const double C45898 = C38616 * C5920;
    const double C46444 = C38616 * C6324;
    const double C49416 = C38616 * C8591;
    const double C49726 = C38616 * C8757;
    const double C57407 = C38616 * C1765;
    const double C57403 = C38616 * C1870;
    const double C57399 = C38616 * C1760;
    const double C57393 = C38616 * C1764;
    const double C57389 = C38616 * C1874;
    const double C57387 = C38616 * C1871;
    const double C57383 = C38616 * C1761;
    const double C57753 = C38616 * C1984;
    const double C57745 = C38616 * C1985;
    const double C59341 = C38616 * C1766;
    const double C68458 = C38616 * C10681;
    const double C68454 = C38616 * C10619;
    const double C88147 = C88146 / C88087;
    const double C13565 = C13402 * C937;
    const double C13562 = C13402 * C938;
    const double C13559 = C13402 * C939;
    const double C38720 = C38700 * C833;
    const double C38714 = C38700 * C827;
    const double C38704 = C38700 * C828;
    const double C38947 = C38700 * C937;
    const double C38944 = C38700 * C938;
    const double C38939 = C38700 * C939;
    const double C39192 = C38700 * C1051;
    const double C39190 = C38700 * C1052;
    const double C39532 = C38700 * C5802;
    const double C39526 = C38700 * C831;
    const double C40268 = C38700 * C5920;
    const double C40262 = C38700 * C1055;
    const double C40598 = C38700 * C6324;
    const double C40592 = C38700 * C4160;
    const double C41249 = C38700 * C4394;
    const double C41578 = C38700 * C832;
    const double C42522 = C38700 * C4161;
    const double C43528 = C38700 * C8591;
    const double C44384 = C38700 * C8757;
    const double C73505 = C38700 * C6325;
    const double C73501 = C38700 * C6328;
    const double C73499 = C38700 * C4163;
    const double C73495 = C38700 * C4159;
    const double C74143 = C38700 * C4393;
    const double C76309 = C38700 * C8595;
    const double C76305 = C38700 * C8592;
    const double C77141 = C38700 * C8758;
    const double C78999 = C38700 * C14727;
    const double C82003 = C38700 * C16849;
    const double C84657 = C38700 * C23358;
    const double C84653 = C38700 * C23356;
    const double C640 = C216 * C273;
    const double C656 = C652 * C89937;
    const double C55816 = C652 * C55292;
    const double C27379 = C27370 * C89783;
    const double C57146 = C27370 * C38609;
    const double C27378 = C27369 * C13338;
    const double C442 = C438 + C426;
    const double C27683 = C27679 + C2195;
    const double C13569 = C13401 * C190;
    const double C13564 = C13401 * C189;
    const double C13563 = C13401 * C188;
    const double C13558 = C13401 * C187;
    const double C14278 = C13401 * C938;
    const double C14274 = C13401 * C939;
    const double C15065 = C13401 * C1874;
    const double C15060 = C13401 * C1871;
    const double C15057 = C13401 * C1873;
    const double C15056 = C13401 * C1872;
    const double C15773 = C13401 * C937;
    const double C16455 = C13401 * C1870;
    const double C23579 = C13401 * C10682;
    const double C88173 = C88172 / C88087;
    const double C26473 = C26160 * C1984;
    const double C26470 = C26160 * C1985;
    const double C26467 = C26160 * C1986;
    const double C27156 = C26160 * C8757;
    const double C27153 = C26160 * C4394;
    const double C27150 = C26160 * C8758;
    const double C27147 = C26160 * C4393;
    const double C55449 = C55429 * C1766;
    const double C55443 = C55429 * C1760;
    const double C55433 = C55429 * C1761;
    const double C55669 = C55429 * C1870;
    const double C55667 = C55429 * C1871;
    const double C55904 = C55429 * C1984;
    const double C55901 = C55429 * C1985;
    const double C55896 = C55429 * C1986;
    const double C56245 = C55429 * C8591;
    const double C56239 = C55429 * C4160;
    const double C56889 = C55429 * C8757;
    const double C56884 = C55429 * C8758;
    const double C56881 = C55429 * C4393;
    const double C56876 = C55429 * C4394;
    const double C57269 = C55429 * C10619;
    const double C57263 = C55429 * C1764;
    const double C57639 = C55429 * C10681;
    const double C57633 = C55429 * C1874;
    const double C58299 = C55429 * C4161;
    const double C59231 = C55429 * C1765;
    const double C60271 = C55429 * C6324;
    const double C72649 = C55429 * C8592;
    const double C72645 = C55429 * C8595;
    const double C72643 = C55429 * C4163;
    const double C72639 = C55429 * C4159;
    const double C76449 = C55429 * C6325;
    const double C76445 = C55429 * C6328;
    const double C78369 = C55429 * C16849;
    const double C79113 = C55429 * C23358;
    const double C79109 = C55429 * C23356;
    const double C82113 = C55429 * C14727;
    const double C506 = C303 * C186;
    const double C522 = C518 * C89926;
    const double C39045 = C518 * C38611;
    const double C14076 = C14067 * C89783;
    const double C39645 = C14067 * C38609;
    const double C14075 = C14066 * C13338;
    const double C737 = C733 + C721;
    const double C14646 = C14642 + C1658;
    const double C26477 = C26159 * C277;
    const double C26472 = C26159 * C276;
    const double C26471 = C26159 * C275;
    const double C26466 = C26159 * C274;
    const double C27157 = C26159 * C1055;
    const double C27152 = C26159 * C1052;
    const double C27149 = C26159 * C1054;
    const double C27148 = C26159 * C1053;
    const double C28035 = C26159 * C1985;
    const double C28031 = C26159 * C1986;
    const double C28710 = C26159 * C1051;
    const double C29418 = C26159 * C1984;
    const double C30398 = C26159 * C4394;
    const double C30393 = C26159 * C4393;
    const double C31519 = C26159 * C5921;
    const double C34494 = C26159 * C8758;
    const double C120 =
        ((C88215 + C88216 * C88217 * C88221) * C88219 + C88227 + C88227 +
         C88212 *
             (2 * ae * C88224 +
              C88212 *
                  (C88217 * C88221 + C88216 * bs[4] * std::pow(C88210, 4)) *
                  C88219)) /
        C88090;
    const double C946 =
        (C88227 + C88327 * (ae * C88333 + C88212 * C88337)) / C88090;
    const double C1166 =
        (C88227 + C88327 * (ae * C88333 + C88212 * C88418)) / C88090;
    const double C1993 =
        (C88227 + C88370 * (ae * C88376 + C88212 * C88380)) / C88090;
    const double C2393 =
        (C88227 + C88370 * (ae * C88376 + C88212 * C88476)) / C88090;
    const double C127 = C105 * C114;
    const double C206 = C186 * C114;
    const double C293 = C273 * C114;
    const double C13346 = C13338 * C114;
    const double C38624 = C38616 * C114;
    const double C958 = C186 * C836;
    const double C1072 = C273 * C836;
    const double C13344 = C13338 * C836;
    const double C14173 = C89783 * C836;
    const double C38621 = C38616 * C836;
    const double C38708 = C38700 * C836;
    const double C39775 = C38609 * C836;
    const double C39761 = C38610 * C836;
    const double C1891 = C186 * C1769;
    const double C2005 = C273 * C1769;
    const double C14740 = C13338 * C1769;
    const double C27554 = C89783 * C1769;
    const double C40476 = C38616 * C1769;
    const double C55437 = C55429 * C1769;
    const double C57398 = C38609 * C1769;
    const double C57384 = C38610 * C1769;
    const double C14078 = C14069 * C89783;
    const double C39650 = C14069 * C38609;
    const double C27381 = C27372 * C89783;
    const double C57151 = C27372 * C38609;
    const double C17108 = C17102 * C89783;
    const double C43670 = C17102 * C38609;
    const double C29647 = C29641 * C89783;
    const double C60132 = C29641 * C38609;
    const double C88587 = ae * C88586;
    const double C941 =
        (C88212 * C88333 + C88327 * C88586 + C88327 * C88235 * ae) / C88087;
    const double C4276 = (C88370 * C88586) / C88087;
    const double C88721 = ae * C88720;
    const double C1988 =
        (C88212 * C88376 + C88370 * C88720 + C88370 * C88235 * ae) / C88087;
    const double C1088 = C1076 + C1077;
    const double C1670 = C1660 + C1661;
    const double C1907 = C1895 + C1896;
    const double C2207 = C2197 + C2198;
    const double C4410 = C4402 + C4403;
    const double C5068 = C5061 + C5062;
    const double C4280 = (C88370 * (C88244 + C88327 * C88348)) / C88090;
    const double C88245 = C88224 + C88243;
    const double C88529 = ae * C88528;
    const double C4164 = (C88370 * C88528) / C88087;
    const double C88631 = ae * C88630;
    const double C964 = C186 * C839;
    const double C1078 = C273 * C839;
    const double C13343 = C13338 * C839;
    const double C14177 = C89783 * C839;
    const double C39381 = C38616 * C839;
    const double C39522 = C38700 * C839;
    const double C39783 = C38609 * C839;
    const double C39771 = C38610 * C839;
    const double C1897 = C186 * C1772;
    const double C2011 = C273 * C1772;
    const double C14745 = C13338 * C1772;
    const double C27558 = C89783 * C1772;
    const double C40479 = C38616 * C1772;
    const double C57259 = C55429 * C1772;
    const double C57406 = C38609 * C1772;
    const double C57394 = C38610 * C1772;
    const double C6882 =
        (ae * C88376 + C88327 * C88497 + ae * C88370 * C88856 +
         C88370 * (C88859 + C88370 * (C88384 + C88327 * C88500))) /
        C88090;
    const double C88860 = C88333 + C88858;
    const double C88943 = ae * C88942;
    const double C89011 = C88376 + C89009;
    const double C13859 = C89783 * C844;
    const double C39389 = C38609 * C844;
    const double C39379 = C38610 * C844;
    const double C13853 = C89783 * C846;
    const double C39385 = C38609 * C846;
    const double C27246 = C89783 * C1777;
    const double C57014 = C38609 * C1777;
    const double C57008 = C38610 * C1777;
    const double C27241 = C89783 * C1779;
    const double C57012 = C38609 * C1779;
    const double C16859 = C89783 * C4167;
    const double C43375 = C38609 * C4167;
    const double C433 = C89926 * C420;
    const double C38954 = C38611 * C420;
    const double C1261 = C89926 * C1248;
    const double C38945 = C38612 * C1248;
    const double C39909 = C38611 * C1248;
    const double C2194 = C89926 * C2181;
    const double C40917 = C38611 * C2181;
    const double C27670 = C89926 * C2183;
    const double C73834 = C38611 * C2183;
    const double C29965 = C89926 * C4613;
    const double C73830 = C38612 * C4613;
    const double C76726 = C38611 * C4613;
    const double C728 = C89937 * C715;
    const double C55911 = C55292 * C715;
    const double C1657 = C89937 * C1644;
    const double C56880 = C55292 * C1644;
    const double C14635 = C89937 * C1646;
    const double C73284 = C55292 * C1646;
    const double C2590 = C89937 * C2577;
    const double C55902 = C55293 * C2577;
    const double C57976 = C55292 * C2577;
    const double C17774 = C89937 * C5055;
    const double C73280 = C55293 * C5055;
    const double C77278 = C55292 * C5055;
    const double C88920 = ae * C88919;
    const double C6491 =
        (C88327 * C88376 + C88370 * C88919 + C88370 * C88855 * ae) / C88087;
    const double C1250 =
        ((C88215 + C88435 * C88217 * C88221) * C88219 + C88583 + C88583 +
         C88327 * (2 * ae * C88333 + C88327 * C88440)) /
        C88090;
    const double C4943 =
        (C88583 + C88370 * (ae * C88376 + C88327 * C88497)) / C88090;
    const double C1263 = C186 * C940;
    const double C13560 = C13403 * C940;
    const double C14166 = C13338 * C940;
    const double C14275 = C13401 * C940;
    const double C14273 = C13402 * C940;
    const double C14362 = C273 * C940;
    const double C39910 = C38700 * C940;
    const double C4618 = C186 * C4275;
    const double C15055 = C13402 * C4275;
    const double C17216 = C13338 * C4275;
    const double C17336 = C13401 * C4275;
    const double C17444 = C273 * C4275;
    const double C29627 = C89926 * C4275;
    const double C40918 = C38700 * C4275;
    const double C72957 = C55429 * C4275;
    const double C73496 = C38612 * C4275;
    const double C76304 = C38611 * C4275;
    const double C6652 = C186 * C6411;
    const double C15058 = C13402 * C6411;
    const double C19292 = C13338 * C6411;
    const double C19379 = C13401 * C6411;
    const double C19455 = C273 * C6411;
    const double C29631 = C89926 * C6411;
    const double C40921 = C38700 * C6411;
    const double C73506 = C38612 * C6411;
    const double C76865 = C55429 * C6411;
    const double C78998 = C38611 * C6411;
    const double C643 = C218 * C273;
    const double C443 = C439 + C429;
    const double C523 = C519 * C89926;
    const double C39050 = C519 * C38611;
    const double C648 = C221 * C273;
    const double C444 = C440 + C432;
    const double C524 = C520 * C89926;
    const double C39053 = C520 * C38611;
    const double C1552 = C971 * C273;
    const double C1276 = C1272 + C1257;
    const double C1555 = C973 * C273;
    const double C1277 = C1273 + C1260;
    const double C2485 = C1904 * C273;
    const double C28870 = C1904 * C13338;
    const double C55820 = C1904 * C55429;
    const double C57155 = C1904 * C38616;
    const double C2209 = C2205 + C2190;
    const double C2488 = C1906 * C273;
    const double C27361 = C1906 * C13338;
    const double C55817 = C1906 * C55429;
    const double C57147 = C1906 * C38616;
    const double C2210 = C2206 + C2193;
    const double C2316 = C2312 * C89926;
    const double C41044 = C2312 * C38611;
    const double C27684 = C27680 + C2196;
    const double C27380 = C27371 * C13338;
    const double C27685 = C27681 + C10851;
    const double C27383 = C27374 * C13338;
    const double C2579 =
        ((C88215 + C88509 * C88217 * C88221) * C88219 + C88717 + C88717 +
         C88370 * (2 * ae * C88376 + C88370 * C88514)) /
        C88090;
    const double C4729 =
        (C88717 + C88327 * (ae * C88333 + C88370 * C88460)) / C88090;
    const double C2592 = C273 * C1987;
    const double C26468 = C26161 * C1987;
    const double C27849 = C13338 * C1987;
    const double C27943 = C186 * C1987;
    const double C28032 = C26159 * C1987;
    const double C28030 = C26160 * C1987;
    const double C57977 = C55429 * C1987;
    const double C1383 = C1379 * C89926;
    const double C39047 = C1379 * C38612;
    const double C40036 = C1379 * C38611;
    const double C509 = C305 * C186;
    const double C657 = C653 * C89937;
    const double C55821 = C653 * C55292;
    const double C738 = C734 + C724;
    const double C514 = C308 * C186;
    const double C658 = C654 * C89937;
    const double C55824 = C654 * C55292;
    const double C739 = C735 + C727;
    const double C1368 = C1085 * C186;
    const double C15607 = C1085 * C13338;
    const double C39049 = C1085 * C38700;
    const double C39654 = C1085 * C38616;
    const double C1672 = C1668 + C1653;
    const double C1371 = C1087 * C186;
    const double C14058 = C1087 * C13338;
    const double C39046 = C1087 * C38700;
    const double C39646 = C1087 * C38616;
    const double C1567 = C1563 * C89937;
    const double C56768 = C1563 * C55292;
    const double C1673 = C1669 + C1656;
    const double C14647 = C14643 + C1659;
    const double C14077 = C14068 * C13338;
    const double C2301 = C2018 * C186;
    const double C2605 = C2601 + C2586;
    const double C2304 = C2020 * C186;
    const double C2500 = C2496 * C89937;
    const double C55818 = C2496 * C55293;
    const double C57867 = C2496 * C55292;
    const double C2606 = C2602 + C2589;
    const double C17783 = C17780 + C5060;
    const double C17109 = C17103 * C13338;
    const double C14648 = C14644 + C6249;
    const double C14080 = C14071 * C13338;
    const double C17782 = C17779 + C9230;
    const double C17107 = C17101 * C13338;
    const double C88281 = C88267 + C88271;
    const double C6413 =
        (C88244 + C88327 * C88348 + (C88271 + C88327 * C88362) * C88509) /
        C88090;
    const double C88273 = C88237 + C88270;
    const double C88536 = C88242 + C88535;
    const double C88543 = ae * C88541;
    const double C88776 = C88370 * C88541;
    const double C88817 = 2 * C88541;
    const double C6327 = (C88528 + C88541 * C88509) / C88087;
    const double C88638 = C88242 + C88637;
    const double C88645 = ae * C88643;
    const double C88957 = 2 * C88643;
    const double C89174 = C89166 + C89172;
    const double C89184 = C89180 + C89183;
    const double C31762 =
        (3 * (C89306 + ae * C89444 + C88370 * C89449) +
         ae * (2 * C89444 + C88370 * C89450) +
         C88370 * (2 * C89449 + ae * C89450 +
                   C88370 * (C89445 + ae * C88370 * C89446 +
                             C88370 * (ae * C89446 + C88370 * C88327 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88374)))) /
        C88090;
    const double C32078 =
        (3 * (C89319 + ae * C89444 + C88370 * C89461) +
         ae * (2 * C89444 + C88370 * C89450) +
         C88370 * (2 * C89461 + ae * C89450 +
                   C88370 * (C89459 + ae * C88370 * C89446 +
                             C88370 * (ae * C89446 + C88370 * C88327 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88473)))) /
        C88090;
    const double C79114 = C55293 * C23471;
    const double C32081 = C89783 * C23682;
    const double C89501 = C89493 + C89499;
    const double C89514 = C89510 + C89513;
    const double C19206 = C89937 * C14899;
    const double C82118 = C55293 * C14899;
    const double C19541 = C89783 * C15215;
    const double C21495 = C89937 * C17083;
    const double C78374 = C55293 * C17083;
    const double C21578 = C89783 * C17209;
    const double C21815 = C89783 * C17548;
    const double C13857 = C13338 * C13845;
    const double C18621 = C273 * C13845;
    const double C18679 = C89783 * C13845;
    const double C14739 = C13338 * C14729;
    const double C19205 = C273 * C14729;
    const double C19295 = C89783 * C14729;
    const double C33941 = C186 * C14729;
    const double C79003 = C38700 * C14729;
    const double C82117 = C55429 * C14729;
    const double C16860 = C13338 * C16851;
    const double C21494 = C273 * C16851;
    const double C21576 = C89783 * C16851;
    const double C78373 = C55429 * C16851;
    const double C82007 = C38700 * C16851;
    const double C23362 = C13338 * C23357;
    const double C27244 = C13338 * C27233;
    const double C35941 = C186 * C27233;
    const double C36052 = C89783 * C27233;
    const double C88272 = C88254 + C88269;
    const double C4168 =
        (2 * ae * C88370 * C88327 * C88237 + C88212 * C88370 * C88539) / C88090;
    const double C6331 = (C88327 * C88241 + C88539 * C88509) / C88090;
    const double C13861 = C89783 * C847;
    const double C39394 = C38609 * C847;
    const double C39382 = C38610 * C847;
    const double C27248 = C89783 * C1780;
    const double C57018 = C38609 * C1780;
    const double C57010 = C38610 * C1780;
    const double C13856 = C89783 * C5809;
    const double C45469 = C38609 * C5809;
    const double C16857 = C89783 * C8598;
    const double C49105 = C38609 * C8598;
    const double C27243 = C89783 * C10626;
    const double C68239 = C38609 * C10626;
    const double C88306 = C88288 + C88303;
    const double C88835 = C88833 + C88302;
    const double C88987 = C88985 + C88302;
    const double C6726 =
        (ae * (C88392 + C88370 * (C88370 * C88406 + C88302) +
               C88370 * C88299 * ae) +
         C88327 * (C88468 + ae * C88370 * C88363 +
                   C88370 * (ae * C88363 +
                             C88370 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C88836 = C88834 * ae;
    const double C6323 = C88327 * C88263 + C88834 * C88509;
    const double C88988 = C88986 * ae;
    const double C89068 = ae * C89065;
    const double C89067 = C88327 * C89065;
    const double C89113 = C89065 * C88509;
    const double C89149 = C88370 * C89065;
    const double C89411 = ae * C89406;
    const double C89409 = C88370 * C89406;
    const double C89066 = C89063 * ae;
    const double C17082 = (C88370 * (2 * C88912 + C88327 * C89087) +
                           (2 * C88845 + C88327 * C89063) * ae) /
                          C88087;
    const double C13844 = 3 * (C88235 + C88258 * C88435) +
                          C88327 * (2 * C88845 + C88327 * C89063);
    const double C14728 = C88235 + C88258 * C88435 + C89063 * C88509;
    const double C16850 = C88370 * (2 * C88845 + C88327 * C89063);
    const double C89435 = C89433 + C89062;
    const double C15140 =
        (C88865 + ae * C88370 * C88351 + C88370 * (C88355 + C88370 * C89082) +
         ae * (C88912 + C88370 * (C88370 * C88327 * C89083 + C89062) +
               C88370 * C89058 * ae) +
         C88327 * (ae * (C88394 + C88370 * (C88370 * C89083 + C88298) +
                         C88370 * C88294 * ae) +
                   C88327 * (C89082 + ae * C88370 * C89057 +
                             C88370 * (ae * C89057 + C88370 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88457)))) /
        C88090;
    const double C89434 = C89432 * ae;
    const double C89410 = C89408 * ae;
    const double C27232 = 3 * (C88235 + C88258 * C88509) +
                          C88370 * (2 * C88996 + C88370 * C89408);
    const double C88312 = C88261 + C88308;
    const double C88550 = C88268 + C88547;
    const double C88652 = C88268 + C88649;
    const double C88741 = ae * C88736;
    const double C88781 = C88370 * C88736;
    const double C88879 = C88736 * C88509;
    const double C88762 = ae * C88757;
    const double C89206 = C88345 + C89201;
    const double C89256 = C89040 + C89253;
    const double C89289 = ae * C89285;
    const double C89542 = C88388 + C89538;
    const double C88311 = C88290 + C88307;
    const double C88548 = C88267 + C88545;
    const double C88650 = C88267 + C88647;
    const double C88738 = C88212 * C88733;
    const double C88779 = C88370 * C88733;
    const double C6330 = (2 * ae * (C88327 * C88237 + C88732 * C88509) +
                          C88212 * (C88539 + C88733 * C88509)) /
                         C88090;
    const double C16854 =
        (2 * ae * C88370 * (2 * C88732 + C88327 * (C88261 + C88297 * C88435)) +
         C88212 * C88370 *
             (2 * C88733 +
              C88327 * (C88304 + (C88284 * C88285 +
                                  C88216 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88435))) /
        C88090;
    const double C23360 =
        (2 * C88370 * C88539 + C88370 * (C88539 + C88733 * C88509)) / C88090;
    const double C88759 = C88212 * C88754;
    const double C88452 = C88445 + C88451;
    const double C89060 = C88327 * C89055;
    const double C89147 = C88370 * C89055;
    const double C89196 = C89187 + C89188;
    const double C89254 = C88445 + C89251;
    const double C89286 = C88327 * C89282;
    const double C88526 = C88519 + C88525;
    const double C89400 = C88370 * C89099;
    const double C89430 = C88327 * C89099;
    const double C17769 =
        (2 * ae * (2 * C88912 + C88327 * C89087) +
         C88370 *
             (2 * C88327 * C89099 +
              C88327 * (C89099 + C88212 *
                                     (C88284 * C88285 +
                                      C88509 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88435))) /
        C88090;
    const double C89243 = C88519 + C89242;
    const double C89472 = C88370 * C89467;
    const double C89533 = C89523 + C89524;
    const double C89207 = C89194 + C89203;
    const double C89325 = C89323 + C89202;
    const double C89326 = C89324 * ae;
    const double C89480 = ae * C89477;
    const double C89479 = C88370 * C89477;
    const double C89478 = C89475 * ae;
    const double C31593 = 3 * (C88855 + C89037 * C88509) +
                          C88370 * (2 * C89335 + C88370 * C89475);
    const double C89536 = C89530 + C89531;
    const double C88590 = C88589 + C88266;
    const double C2310 = C89937 * C2295;
    const double C59552 = C55293 * C2295;
    const double C3821 = C89937 * C2296;
    const double C55676 = C55293 * C2296;
    const double C2494 = C89926 * C2479;
    const double C3977 = C89926 * C2480;
    const double C213 = C89926 * C191;
    const double C435 = C186 * C191;
    const double C516 = C273 * C191;
    const double C1270 = C186 * C943;
    const double C2779 = C89926 * C943;
    const double C3099 = C273 * C943;
    const double C13568 = C13402 * C943;
    const double C38721 = C38612 * C943;
    const double C38956 = C38700 * C943;
    const double C41794 = C38616 * C943;
    const double C1900 = C89926 * C1875;
    const double C2201 = C186 * C1875;
    const double C2309 = C273 * C1875;
    const double C29028 = C13338 * C1875;
    const double C57411 = C38616 * C1875;
    const double C59551 = C55429 * C1875;
    const double C2203 = C186 * C1876;
    const double C3500 = C89926 * C1876;
    const double C3820 = C273 * C1876;
    const double C55675 = C55429 * C1876;
    const double C59345 = C38616 * C1876;
    const double C10849 = C186 * C10680;
    const double C89023 = C88271 + C89022;
    const double C89031 = C88271 + C89030;
    const double C27539 =
        (3 * (C88423 + C88429 * C88509) +
         C88370 *
             (2 * C89139 +
              C88370 * (C88429 + (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415) *
                                     C88509))) /
        C88090;
    const double C88366 = C88359 + C88364;
    const double C88431 = C88425 + C88430;
    const double C27769 =
        (3 * (C88865 + ae * C89365 + C88370 * C89157) +
         ae * (2 * C89365 + C88370 * C89367) +
         C88370 * (2 * C89157 + ae * C89367 +
                   C88370 * (C89082 + ae * C88370 * C89057 +
                             C88370 * (ae * C89057 + C88370 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88457)))) /
        C88090;
    const double C27939 =
        (3 * (C88872 + ae * C89365 + C88370 * C89379) +
         ae * (2 * C89365 + C88370 * C89367) +
         C88370 * (2 * C89379 + ae * C89367 +
                   C88370 * (C89094 + ae * C88370 * C89057 +
                             C88370 * (ae * C89057 + C88370 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88494)))) /
        C88090;
    const double C41050 = C89937 * C6727;
    const double C60678 = C55293 * C6727;
    const double C57640 = C55293 * C10902;
    const double C27948 = C89926 * C11008;
    const double C88849 = ae * C88846;
    const double C88848 = C88327 * C88846;
    const double C88939 = C88370 * C88846;
    const double C89056 = 2 * C88846;
    const double C6410 = (C88586 + C88846 * C88509) / C88087;
    const double C27682 = C27676 + C10850;
    const double C27375 = C27365 + C27366;
    const double C89186 = C88445 + C89045;
    const double C89046 = C88338 + C89043;
    const double C89110 = C88856 + C89109;
    const double C89145 = ae * C89143;
    const double C89310 = 2 * C89143;
    const double C89266 = C89264 + C89265;
    const double C89520 = C89516 + C89519;
    const double C27673 = C186 * C27344;
    const double C35940 = C89926 * C27344;
    const double C36053 = C13338 * C27344;
    const double C215 = C89926 * C197;
    const double C1888 = C89926 * C1878;
    const double C42525 = C38611 * C1878;
    const double C1898 = C89926 * C1882;
    const double C40601 = C38611 * C1882;
    const double C27368 = C89926 * C10684;
    const double C33942 = C89926 * C14821;
    const double C79004 = C38612 * C14821;
    const double C82008 = C38612 * C16981;
    const double C31682 = C89926 * C23417;
    const double C84658 = C38612 * C23417;
    const double C27382 = C27373 * C89783;
    const double C68317 = C27373 * C38609;
    const double C88724 = C88723 + C88266;
    const double C1377 = C89937 * C1362;
    const double C3100 = C89937 * C1363;
    const double C1561 = C89926 * C1546;
    const double C42217 = C38612 * C1546;
    const double C3256 = C89926 * C1547;
    const double C39199 = C38612 * C1547;
    const double C300 = C89937 * C278;
    const double C650 = C186 * C278;
    const double C730 = C273 * C278;
    const double C1081 = C89937 * C1056;
    const double C1560 = C186 * C1056;
    const double C1664 = C273 * C1056;
    const double C15926 = C13338 * C1056;
    const double C40154 = C38616 * C1056;
    const double C42216 = C38700 * C1056;
    const double C1666 = C273 * C1057;
    const double C2861 = C89937 * C1057;
    const double C3255 = C186 * C1057;
    const double C39198 = C38700 * C1057;
    const double C42112 = C38616 * C1057;
    const double C2599 = C273 * C1990;
    const double C3582 = C89937 * C1990;
    const double C3976 = C186 * C1990;
    const double C26476 = C26160 * C1990;
    const double C55450 = C55293 * C1990;
    const double C55913 = C55429 * C1990;
    const double C59655 = C38616 * C1990;
    const double C4407 = C89937 * C4395;
    const double C4952 = C186 * C4395;
    const double C5065 = C273 * C4395;
    const double C28709 = C26160 * C4395;
    const double C43138 = C38700 * C4395;
    const double C44246 = C38616 * C4395;
    const double C56892 = C55429 * C4395;
    const double C58300 = C55293 * C4395;
    const double C74953 = C13338 * C4395;
    const double C6247 = C273 * C5919;
    const double C9228 = C273 * C8756;
    const double C56893 = C55429 * C8756;
    const double C89355 = C88271 + C89354;
    const double C89373 = C88271 + C89372;
    const double C89464 = C89045 + C89463;
    const double C88409 = C88402 + C88407;
    const double C88489 = C88483 + C88488;
    const double C14358 =
        (3 * (C88865 + ae * C88912 + C88327 * C89086) +
         ae * (2 * C88912 + C88327 * C89087) +
         C88327 * (2 * C89086 + ae * C89087 +
                   C88327 * (C89082 + ae * C88327 * C89083 +
                             C88327 * (ae * C89083 + C88327 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88457)))) /
        C88090;
    const double C14554 =
        (3 * (C88872 + ae * C88912 + C88327 * C89096) +
         ae * (2 * C88912 + C88327 * C89087) +
         C88327 * (2 * C89096 + ae * C89087 +
                   C88327 * (C89094 + ae * C88327 * C89083 +
                             C88327 * (ae * C89083 + C88327 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88494)))) /
        C88090;
    const double C14367 = C89937 * C6085;
    const double C40269 = C38612 * C6191;
    const double C88914 = C88913 + C88847;
    const double C89000 = ae * C88997;
    const double C88999 = C88370 * C88997;
    const double C89401 = 2 * C88997;
    const double C14645 = C14639 + C6248;
    const double C14072 = C14062 + C14063;
    const double C17781 = C17776 + C9229;
    const double C17104 = C17096 + C17097;
    const double C89124 = C89123 + C89044;
    const double C14638 = C273 * C14041;
    const double C18620 = C89937 * C14041;
    const double C18845 = C13338 * C14041;
    const double C17775 = C273 * C17081;
    const double C21493 = C89937 * C17081;
    const double C21814 = C13338 * C17081;
    const double C31518 = C26160 * C17081;
    const double C62570 = C55429 * C17081;
    const double C78370 = C55293 * C17081;
    const double C82641 = C38700 * C17081;
    const double C89230 = C89227 + C89228;
    const double C89240 = C89236 + C89239;
    const double C89339 = ae * C89336;
    const double C89338 = C88370 * C89336;
    const double C89468 = 2 * C89336;
    const double C89296 = C89295 + C89293;
    const double C89522 = C88519 + C89295;
    const double C89388 = C88381 + C89384;
    const double C302 = C89937 * C284;
    const double C1069 = C89937 * C1059;
    const double C58302 = C55292 * C1059;
    const double C1079 = C89937 * C1063;
    const double C56248 = C55292 * C1063;
    const double C14065 = C89937 * C5923;
    const double C14079 = C14070 * C89783;
    const double C45613 = C14070 * C38609;
    const double C17106 = C17100 * C89783;
    const double C49313 = C17100 * C38609;
    const double C29025 = C89783 * C2098;
    const double C57404 = C38610 * C2098;
    const double C59344 = C38609 * C2098;
    const double C27560 = C89783 * C2102;
    const double C57410 = C38609 * C2102;
    const double C57390 = C38610 * C2102;
    const double C27564 = C89783 * C10793;
    const double C68459 = C38610 * C10793;
    const double C18681 = C89783 * C14157;
    const double C6647 = (2 * ae * (C88340 + C88351 * C88509) +
                          C88327 * (C88843 + C88212 * C88450 * C88509)) /
                         C88090;
    const double C10846 =
        (2 * C88370 * C88843 + C88370 * (C88843 + C88212 * C88450 * C88509)) /
        C88090;
    const double C89039 = C89033 + C89034;
    const double C436 = C89926 * C421;
    const double C1258 = C89926 * C1247;
    const double C38948 = C38612 * C1247;
    const double C41899 = C38611 * C1247;
    const double C2191 = C89926 * C2180;
    const double C42827 = C38611 * C2180;
    const double C2199 = C89926 * C2184;
    const double C40924 = C38611 * C2184;
    const double C4621 = C89926 * C4614;
    const double C40914 = C38612 * C4614;
    const double C43964 = C38611 * C4614;
    const double C29967 = C89926 * C6648;
    const double C73832 = C38612 * C6648;
    const double C79320 = C38611 * C6648;
    const double C27672 = C89926 * C10847;
    const double C84866 = C38611 * C10847;
    const double C18790 = C89937 * C14357;
    const double C1382 = C1378 * C89926;
    const double C39048 = C1378 * C38612;
    const double C42009 = C1378 * C38611;
    const double C2315 = C2311 * C89926;
    const double C42937 = C2311 * C38611;
    const double C15924 = C89783 * C1459;
    const double C40151 = C38610 * C1459;
    const double C42111 = C38609 * C1459;
    const double C14462 = C89783 * C1463;
    const double C40153 = C38609 * C1463;
    const double C40145 = C38610 * C1463;
    const double C14465 = C89783 * C6138;
    const double C45899 = C38610 * C6138;
    const double C36220 = C89783 * C27844;
    const double C36274 = C89926 * C27938;
    const double C1566 = C1562 * C89937;
    const double C58806 = C1562 * C55292;
    const double C2499 = C2495 * C89937;
    const double C55819 = C2495 * C55293;
    const double C59758 = C2495 * C55292;
    const double C6244 =
        (2 * C88327 * C88876 + C88327 * (C88876 + C88212 * C88524 * C88435)) /
        C88090;
    const double C9225 = (2 * ae * (C88383 + C88394 * C88435) +
                          C88370 * (C88876 + C88212 * C88524 * C88435)) /
                         C88090;
    const double C14630 =
        (3 * (C88876 + C89099 * C88435) +
         C88327 *
             (2 * C88327 * C89099 +
              C88327 * (C89099 + C88212 *
                                     (C88284 * C88285 +
                                      C88509 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88435))) /
        C88090;
    const double C89387 = C89381 + C89382;
    const double C731 = C89937 * C716;
    const double C1654 = C89937 * C1643;
    const double C58908 = C55292 * C1643;
    const double C1662 = C89937 * C1647;
    const double C56887 = C55292 * C1647;
    const double C2587 = C89937 * C2576;
    const double C55905 = C55293 * C2576;
    const double C59860 = C55292 * C2576;
    const double C5063 = C89937 * C5056;
    const double C56877 = C55293 * C5056;
    const double C61079 = C55292 * C5056;
    const double C14637 = C89937 * C6245;
    const double C78788 = C55292 * C6245;
    const double C17772 = C89937 * C9226;
    const double C73282 = C55293 * C9226;
    const double C82744 = C55292 * C9226;
    const double C18952 = C89937 * C14629;
    const double C21969 = C89937 * C17768;
    const double C78790 = C55293 * C17768;
    const double C33948 = C33944 * C89783;
    const double C65713 = C33944 * C38609;
    const double C19212 = C19208 * C89783;
    const double C46341 = C19208 * C38609;
    const double C29649 = C29643 * C89783;
    const double C62769 = C29643 * C38609;
    const double C2317 = C2313 * C89926;
    const double C41047 = C2313 * C38611;
    const double C1568 = C1564 * C89937;
    const double C56771 = C1564 * C55292;
    const double C19197 =
        (2 * C88327 * C88387 + C88327 * C89178 + ae * C88370 * C89175 +
         C88370 * (ae * C89175 +
                   C88370 * (2 * C88327 * C88399 +
                             C88327 * (C88399 + std::pow(C88218, 7) * bs[7] *
                                                    C88374 * C88435)))) /
        C88090;
    const double C19534 =
        (2 * C88327 * C88479 + C88327 * C89234 + ae * C88370 * C89175 +
         C88370 * (ae * C89175 +
                   C88370 * (2 * C88327 * C88485 +
                             C88327 * (C88485 + std::pow(C88218, 7) * bs[7] *
                                                    C88473 * C88435)))) /
        C88090;
    const double C21489 =
        (ae * (3 * C89020 + C88327 * C89175) +
         C88370 * (3 * C89178 +
                   C88327 * (2 * C88327 * C88399 +
                             C88327 * (C88399 + std::pow(C88218, 7) * bs[7] *
                                                    C88374 * C88435)))) /
        C88090;
    const double C21573 =
        (3 * (C89137 + ae * C88370 * C88732 + C88327 * C89279) +
         ae * C88370 * C89175 +
         C88327 * (2 * C89279 + ae * C88370 * C89171 +
                   C88327 * (C89277 + ae * C88370 * C88327 * C88297 +
                             C88327 * (ae * C88370 * C88297 +
                                       C88327 * C88370 * std::pow(C88218, 7) *
                                           bs[7] * C88415)))) /
        C88090;
    const double C21810 =
        (ae * (3 * C89020 + C88327 * C89175) +
         C88370 * (3 * C89234 +
                   C88327 * (2 * C88327 * C88485 +
                             C88327 * (C88485 + std::pow(C88218, 7) * bs[7] *
                                                    C88473 * C88435)))) /
        C88090;
    const double C18504 = (4 * (2 * C88890 + C88327 * C89020) +
                           C88327 * (3 * C89020 + C88327 * C89175)) /
                          C88087;
    const double C19031 =
        (2 * C88890 + C88327 * C89020 + C89175 * C88509) / C88087;
    const double C21329 = (C88370 * (3 * C89020 + C88327 * C89175)) / C88087;
    const double C31599 = C13338 * C31594;
    const double C35877 = (4 * (2 * C89348 + C88370 * C89352) +
                           C88370 * (3 * C89352 + C88370 * C89502)) /
                          C88087;
    const double C88594 = C88327 * C88367;
    const double C2297 =
        (2 * C88212 * C88463 + C88212 * C88468 + ae * C88370 * C88367 +
         C88370 * (ae * C88367 +
                   C88370 * (2 * C88212 * C88466 +
                             C88212 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C2481 =
        (2 * C88212 * C88500 + C88212 * C88505 + ae * C88370 * C88367 +
         C88370 * (ae * C88367 +
                   C88370 * (2 * C88212 * C88503 +
                             C88212 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C3816 =
        (ae * (3 * C88349 + C88212 * C88367) +
         C88370 * (3 * C88468 +
                   C88212 * (2 * C88212 * C88466 +
                             C88212 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C3972 =
        (ae * (3 * C88349 + C88212 * C88367) +
         C88370 * (3 * C88505 +
                   C88212 * (2 * C88212 * C88503 +
                             C88212 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C4616 =
        (2 * ae * C88370 * C88367 +
         C88327 * C88370 *
             (2 * C88212 * C88450 +
              C88212 * (C88450 + (C88284 * C88285 +
                                  C88435 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88216))) /
        C88090;
    const double C192 = (4 * (2 * C88340 + C88212 * C88349) +
                         C88212 * (3 * C88349 + C88212 * C88367)) /
                        C88087;
    const double C1877 =
        (2 * C88340 + C88212 * C88349 + C88367 * C88509) / C88087;
    const double C3496 = (C88370 * (3 * C88349 + C88212 * C88367)) / C88087;
    const double C27678 = C186 * C27345;
    const double C35935 = (4 * (2 * C89361 + C88370 * C89363) +
                           C88370 * (3 * C89363 + C88370 * C89508)) /
                          C88087;
    const double C88728 = C88370 * C88410;
    const double C1364 =
        (2 * C88212 * C88463 + C88212 * C88468 + ae * C88327 * C88410 +
         C88327 * (ae * C88410 +
                   C88327 * (2 * C88212 * C88466 +
                             C88212 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C1548 =
        (2 * C88212 * C88500 + C88212 * C88505 + ae * C88327 * C88410 +
         C88327 * (ae * C88410 +
                   C88327 * (2 * C88212 * C88503 +
                             C88212 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C3095 =
        (ae * (3 * C88392 + C88212 * C88410) +
         C88327 * (3 * C88468 +
                   C88212 * (2 * C88212 * C88466 +
                             C88212 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C3251 =
        (ae * (3 * C88392 + C88212 * C88410) +
         C88327 * (3 * C88505 +
                   C88212 * (2 * C88212 * C88503 +
                             C88212 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C5058 =
        (2 * ae * C88327 * C88410 +
         C88370 * C88327 *
             (2 * C88212 * C88524 +
              C88212 * (C88524 + (C88284 * C88285 +
                                  C88509 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88216))) /
        C88090;
    const double C279 = (4 * (2 * C88383 + C88212 * C88392) +
                         C88212 * (3 * C88392 + C88212 * C88410)) /
                        C88087;
    const double C1058 =
        (2 * C88383 + C88212 * C88392 + C88410 * C88435) / C88087;
    const double C2857 = (C88327 * (3 * C88392 + C88212 * C88410)) / C88087;
    const double C14641 = C273 * C14042;
    const double C89270 = C88370 * C89231;
    const double C18615 = (4 * (2 * C88917 + C88327 * C89080) +
                           C88327 * (3 * C89080 + C88327 * C89231)) /
                          C88087;
    const double C90022 = C89988 - C90011;
    const double C90023 = C89992 - C90013;
    const double C90024 = C89995 - C90015;
    const double C90025 = C90002 - C90016;
    const double C90026 = C89997 - C90018;
    const double C90027 = C90006 - C90019;
    const double C88098 = C89783 - C88097;
    const double C14189 = C14170 + C14171;
    const double C14186 = C14164 + C14165;
    const double C14185 = C14162 + C14163;
    const double C14184 = C14160 + C14161;
    const double C14469 = C14458 + C14459;
    const double C14468 = C14454 + C14455;
    const double C14467 = C14452 + C14453;
    const double C14466 = C14449 + C14450;
    const double C17231 = C17218 + C17219;
    const double C17229 = C17214 + C17215;
    const double C17564 = C17554 + C17555;
    const double C17563 = C17551 + C17552;
    const double C19298 = C19290 + C19291;
    const double C27572 = C27555 + C27556;
    const double C27570 = C27551 + C27552;
    const double C27569 = C27549 + C27550;
    const double C27568 = C27547 + C27548;
    const double C27567 = C27545 + C27546;
    const double C27566 = C27543 + C27544;
    const double C27565 = C27541 + C27542;
    const double C27859 = C27847 + C27848;
    const double C31844 = C31839 + C31840;
    const double C40157 = C40142 + C40143;
    const double C57416 = C57387 + C57388;
    const double C88148 = C89926 - C88147;
    const double C38732 = C38714 + C38715;
    const double C38727 = C38704 + C38705;
    const double C39202 = C39192 + C39193;
    const double C39201 = C39190 + C39191;
    const double C40270 = C40262 + C40263;
    const double C73513 = C73501 + C73502;
    const double C73512 = C73499 + C73500;
    const double C76314 = C76309 + C76310;
    const double C446 = C442 + C427;
    const double C27687 = C27683 + C27668;
    const double C88174 = C89937 - C88173;
    const double C55461 = C55443 + C55444;
    const double C55456 = C55433 + C55434;
    const double C55679 = C55669 + C55670;
    const double C55678 = C55667 + C55668;
    const double C56256 = C56245 + C56246;
    const double C56253 = C56239 + C56240;
    const double C57641 = C57633 + C57634;
    const double C72659 = C72649 + C72650;
    const double C72657 = C72645 + C72646;
    const double C72656 = C72643 + C72644;
    const double C72654 = C72639 + C72640;
    const double C76453 = C76445 + C76446;
    const double C741 = C737 + C722;
    const double C14650 = C14646 + C14633;
    const double C959 = C89926 * C946;
    const double C38709 = C38612 * C946;
    const double C39525 = C38611 * C946;
    const double C14175 = C89783 * C1166;
    const double C39779 = C38609 * C1166;
    const double C39765 = C38610 * C1166;
    const double C2006 = C89937 * C1993;
    const double C55438 = C55293 * C1993;
    const double C57262 = C55292 * C1993;
    const double C27854 = C89783 * C2393;
    const double C57752 = C38609 * C2393;
    const double C57746 = C38610 * C2393;
    const double C219 = C206 + C207;
    const double C306 = C293 + C294;
    const double C1086 = C1072 + C1073;
    const double C14190 = C14172 + C14173;
    const double C39791 = C39760 + C39761;
    const double C1905 = C1891 + C1892;
    const double C27571 = C27553 + C27554;
    const double C57414 = C57383 + C57384;
    const double C1251 =
        (C88212 * C88440 + C88587 + C88587 +
         C88327 * (2 * ae * C88340 + C88327 * C88212 * C88445)) /
        C88090;
    const double C4944 =
        (C88587 + C88370 * (ae * C88383 + C88327 * C88212 * C88500)) / C88090;
    const double C963 = C89926 * C941;
    const double C1265 = C186 * C941;
    const double C1373 = C273 * C941;
    const double C13561 = C13403 * C941;
    const double C14178 = C13338 * C941;
    const double C14283 = C13401 * C941;
    const double C14279 = C13402 * C941;
    const double C39531 = C38611 * C941;
    const double C39527 = C38612 * C941;
    const double C39766 = C38616 * C941;
    const double C39905 = C38700 * C941;
    const double C4285 = C89926 * C4276;
    const double C4620 = C186 * C4276;
    const double C4735 = C273 * C4276;
    const double C15061 = C13402 * C4276;
    const double C17222 = C13338 * C4276;
    const double C17341 = C13401 * C4276;
    const double C40593 = C38612 * C4276;
    const double C40913 = C38700 * C4276;
    const double C43527 = C38611 * C4276;
    const double C43806 = C38616 * C4276;
    const double C56558 = C55429 * C4276;
    const double C2580 =
        (C88212 * C88514 + C88721 + C88721 +
         C88370 * (2 * ae * C88383 + C88370 * C88212 * C88519)) /
        C88090;
    const double C4730 =
        (C88721 + C88327 * (ae * C88340 + C88370 * C88212 * C88463)) / C88090;
    const double C2010 = C89937 * C1988;
    const double C2490 = C186 * C1988;
    const double C2594 = C273 * C1988;
    const double C26469 = C26161 * C1988;
    const double C27855 = C13338 * C1988;
    const double C28040 = C26159 * C1988;
    const double C28036 = C26160 * C1988;
    const double C57268 = C55292 * C1988;
    const double C57264 = C55293 * C1988;
    const double C57747 = C38616 * C1988;
    const double C57972 = C55429 * C1988;
    const double C1372 = C1088 * C186;
    const double C14060 = C1088 * C13338;
    const double C39649 = C1088 * C38616;
    const double C40035 = C1088 * C38700;
    const double C1674 = C1670 + C1661;
    const double C2489 = C1907 * C273;
    const double C27363 = C1907 * C13338;
    const double C57150 = C1907 * C38616;
    const double C57866 = C1907 * C55429;
    const double C2211 = C2207 + C2198;
    const double C4734 = C4410 * C186;
    const double C17094 = C4410 * C13338;
    const double C41043 = C4410 * C38700;
    const double C43669 = C4410 * C38616;
    const double C5070 = C5068 + C5062;
    const double C4287 = C89926 * C4280;
    const double C40589 = C38612 * C4280;
    const double C43531 = C38611 * C4280;
    const double C88246 = C88245 + C88238;
    const double C843 =
        (C88327 * C88241 + C88529 + C88529 +
         C88212 * (2 * ae * C88327 * C88237 + C88212 * C88327 * C88267)) /
        C88090;
    const double C949 = (ae * C88333 + C88212 * C88337 + C88529 +
                         C88327 * (C88244 + C88327 * C88348)) /
                        C88090;
    const double C1169 = (ae * C88333 + C88212 * C88418 + C88529 +
                          C88327 * (C88244 + C88327 * C88423)) /
                         C88090;
    const double C4398 = (C88529 + C88370 * C88327 * C88391) / C88090;
    const double C4842 = (C88529 + C88370 * C88327 * C88481) / C88090;
    const double C4286 = C186 * C4164;
    const double C4404 = C273 * C4164;
    const double C14741 = C13338 * C4164;
    const double C17221 = C89783 * C4164;
    const double C40474 = C38616 * C4164;
    const double C40588 = C38700 * C4164;
    const double C43815 = C38609 * C4164;
    const double C43811 = C38610 * C4164;
    const double C56235 = C55429 * C4164;
    const double C1776 =
        (C88370 * C88241 + C88631 + C88631 +
         C88212 * (2 * ae * C88370 * C88237 + C88212 * C88370 * C88267)) /
        C88090;
    const double C1996 = (ae * C88376 + C88212 * C88380 + C88631 +
                          C88370 * (C88244 + C88370 * C88391)) /
                         C88090;
    const double C2396 = (ae * C88376 + C88212 * C88476 + C88631 +
                          C88370 * (C88244 + C88370 * C88481)) /
                         C88090;
    const double C4512 = (C88631 + C88327 * C88370 * C88423) / C88090;
    const double C14192 = C14176 + C14177;
    const double C39796 = C39770 + C39771;
    const double C27573 = C27557 + C27558;
    const double C57419 = C57393 + C57394;
    const double C30288 = C89926 * C6882;
    const double C74146 = C38612 * C6882;
    const double C79636 = C38611 * C6882;
    const double C88861 = C88860 + C88857;
    const double C8915 =
        (C88370 * C88440 + C88943 + C88943 +
         C88327 * (2 * ae * C88370 * C88338 + C88327 * C88370 * C88445)) /
        C88090;
    const double C89012 = C89011 + C89008;
    const double C6959 =
        (C88327 * C88514 + C88920 + C88920 +
         C88370 * (2 * ae * C88917 + C88370 * C88327 * C88519)) /
        C88090;
    const double C8995 = (ae * C88333 + C88370 * C88460 + C88920 +
                          C88327 * (ae * (C88370 * C88381 + C88234) +
                                    C88327 * (C88341 + C88370 * C88463))) /
                         C88090;
    const double C6963 = C273 * C6491;
    const double C19200 = C89937 * C6491;
    const double C19537 = C13338 * C6491;
    const double C27146 = C26161 * C6491;
    const double C30287 = C186 * C6491;
    const double C30394 = C26160 * C6491;
    const double C32238 = C26159 * C6491;
    const double C61076 = C55429 * C6491;
    const double C74145 = C38700 * C6491;
    const double C76450 = C55293 * C6491;
    const double C79108 = C55292 * C6491;
    const double C30286 = C89926 * C4943;
    const double C74144 = C38612 * C4943;
    const double C77140 = C38611 * C4943;
    const double C14187 = C14166 + C14167;
    const double C14369 = C14362 + C14363;
    const double C29973 = C29964 + C4618;
    const double C17230 = C17216 + C17217;
    const double C29640 = C29626 + C29627;
    const double C73510 = C73495 + C73496;
    const double C29974 = C29966 + C6652;
    const double C19299 = C19292 + C19293;
    const double C19459 = C19455 + C19456;
    const double C29642 = C29630 + C29631;
    const double C73515 = C73505 + C73506;
    const double C76869 = C76865 + C76866;
    const double C447 = C443 + C430;
    const double C448 = C444 + C433;
    const double C1281 = C1277 + C1261;
    const double C2214 = C2210 + C2194;
    const double C27688 = C27684 + C27670;
    const double C27386 = C27380 + C27381;
    const double C17445 = C89937 * C4729;
    const double C72958 = C55293 * C4729;
    const double C76868 = C55292 * C4729;
    const double C27860 = C27849 + C27850;
    const double C27950 = C27943 + C27944;
    const double C526 = C509 + C523;
    const double C660 = C643 + C657;
    const double C742 = C738 + C725;
    const double C527 = C524 + C514;
    const double C661 = C658 + C648;
    const double C743 = C739 + C728;
    const double C1677 = C1673 + C1657;
    const double C14651 = C14647 + C14635;
    const double C14083 = C14077 + C14078;
    const double C2610 = C2606 + C2590;
    const double C17786 = C17783 + C17774;
    const double C88289 = C88281 + C88271;
    const double C29639 = C89926 * C6413;
    const double C40603 = C38612 * C6413;
    const double C88274 = C88273 + C88262;
    const double C88537 = ae * C88536;
    const double C5805 = (2 * C88528 + C88327 * C88536) / C88087;
    const double C8594 = (C88370 * C88536) / C88087;
    const double C8680 =
        (C88370 * (C88348 + C88543 + C88327 * (C88271 + C88327 * C88362))) /
        C88090;
    const double C88777 = ae * C88776;
    const double C14744 = C13338 * C6327;
    const double C29638 = C186 * C6327;
    const double C29858 = C89783 * C6327;
    const double C40481 = C38616 * C6327;
    const double C40602 = C38700 * C6327;
    const double C40712 = C273 * C6327;
    const double C46445 = C38610 * C6327;
    const double C60275 = C55429 * C6327;
    const double C88639 = ae * C88638;
    const double C10622 = (2 * C88630 + C88370 * C88638) / C88087;
    const double C18564 =
        (4 * (2 * C89019 + ae * C89020 + C88327 * C89174) +
         ae * (3 * C89020 + C88327 * C89175) +
         C88327 * (3 * C89174 + ae * C89175 +
                   C88327 * (2 * C89170 + ae * C89171 +
                             C88327 * (C88356 + ae * C88327 * C88297 +
                                       C88327 * (ae * C88297 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C19121 =
        (2 * C89019 + ae * C89020 + C88327 * C89174 +
         (2 * C89170 + ae * C89171 +
          C88327 * (C88356 + ae * C88327 * C88297 +
                    C88327 * (ae * C88297 +
                              C88327 * std::pow(C88218, 7) * bs[7] * C88331))) *
             C88509) /
        C88090;
    const double C21413 =
        (C88370 * (3 * C89174 + ae * C89175 +
                   C88327 * (2 * C89170 + ae * C89171 +
                             C88327 * (C88356 + ae * C88327 * C88297 +
                                       C88327 * (ae * C88297 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C23416 =
        (2 * C88370 * C89174 +
         C88370 *
             (C89174 + (C88356 + ae * C88327 * C88297 +
                        C88327 * (ae * C88297 + C88327 * std::pow(C88218, 7) *
                                                    bs[7] * C88331)) *
                           C88509)) /
        C88090;
    const double C18676 =
        (4 * (2 * C89028 + ae * C89020 + C88327 * C89184) +
         ae * (3 * C89020 + C88327 * C89175) +
         C88327 * (3 * C89184 + ae * C89175 +
                   C88327 * (2 * C89182 + ae * C89171 +
                             C88327 * (C88427 + ae * C88327 * C88297 +
                                       C88327 * (ae * C88297 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88415))))) /
        C88090;
    const double C79118 = C79113 + C79114;
    const double C35997 =
        (4 * (2 * C89351 + ae * C89352 + C88370 * C89501) +
         ae * (3 * C89352 + C88370 * C89502) +
         C88370 * (3 * C89501 + ae * C89502 +
                   C88370 * (2 * C89497 + ae * C89498 +
                             C88370 * (C88399 + ae * C88370 * C88297 +
                                       C88370 * (ae * C88297 +
                                                 C88370 * std::pow(C88218, 7) *
                                                     bs[7] * C88374))))) /
        C88090;
    const double C36217 =
        (4 * (2 * C89370 + ae * C89352 + C88370 * C89514) +
         ae * (3 * C89352 + C88370 * C89502) +
         C88370 * (3 * C89514 + ae * C89502 +
                   C88370 * (2 * C89512 + ae * C89498 +
                             C88370 * (C88485 + ae * C88370 * C88297 +
                                       C88370 * (ae * C88297 +
                                                 C88370 * std::pow(C88218, 7) *
                                                     bs[7] * C88473))))) /
        C88090;
    const double C18624 = C18621 + C18622;
    const double C18682 = C18678 + C18679;
    const double C19210 = C19205 + C19206;
    const double C19300 = C19294 + C19295;
    const double C82122 = C82117 + C82118;
    const double C21497 = C21494 + C21495;
    const double C21579 = C21575 + C21576;
    const double C78378 = C78373 + C78374;
    const double C35944 = C35941 + C35942;
    const double C36055 = C36051 + C36052;
    const double C16862 = C89783 * C4168;
    const double C43379 = C38609 * C4168;
    const double C43373 = C38610 * C4168;
    const double C19035 = C89783 * C6331;
    const double C46133 = C38609 * C6331;
    const double C88309 = C88306 * ae;
    const double C2775 = (C88327 * (3 * C88349 + C88212 * C88367) +
                          (3 * C88263 + C88212 * C88306) * ae) /
                         C88087;
    const double C3578 = (C88370 * (3 * C88392 + C88212 * C88410) +
                          (3 * C88263 + C88212 * C88306) * ae) /
                         C88087;
    const double C4396 =
        (C88370 * C88327 * C88410 + C88327 * C88306 * ae) / C88087;
    const double C111 = 4 * (2 * C88235 + C88212 * C88263) +
                        C88212 * (3 * C88263 + C88212 * C88306);
    const double C834 = 2 * C88235 + C88212 * C88263 + C88306 * C88435;
    const double C1767 = 2 * C88235 + C88212 * C88263 + C88306 * C88509;
    const double C2695 = C88327 * (3 * C88263 + C88212 * C88306);
    const double C3416 = C88370 * (3 * C88263 + C88212 * C88306);
    const double C4162 = C88370 * C88327 * C88306;
    const double C88838 = ae * C88835;
    const double C88837 = C88327 * C88835;
    const double C88936 = C88370 * C88835;
    const double C88990 = ae * C88987;
    const double C88989 = C88370 * C88987;
    const double C88909 = C88908 + C88836;
    const double C89069 = C88351 + C89067;
    const double C89114 = C88846 + C89113;
    const double C89151 = ae * C89149;
    const double C89412 = C88394 + C89409;
    const double C89128 = C89127 + C89066;
    const double C17778 = C273 * C17082;
    const double C62568 = C55429 * C17082;
    const double C89437 = ae * C89435;
    const double C89436 = C88370 * C89435;
    const double C88314 = C88312 + C88298;
    const double C88552 = ae * C88550;
    const double C88818 = C88327 * C88550;
    const double C88922 = C88370 * C88550;
    const double C14730 = (C88536 + C88550 * C88509) / C88087;
    const double C88654 = ae * C88652;
    const double C88958 = C88370 * C88652;
    const double C88783 = ae * C88781;
    const double C88880 = C88541 + C88879;
    const double C89208 = C89206 + C89198;
    const double C89258 = ae * C89256;
    const double C89311 = C88370 * C89256;
    const double C89543 = C89542 + C89535;
    const double C88313 = C88212 * C88311;
    const double C5808 =
        (2 * ae * (2 * C88327 * C88237 + C88327 * (C88237 + C88261 * C88435)) +
         C88212 * (2 * C88539 + C88327 * C88548)) /
        C88090;
    const double C8597 = (2 * ae * C88370 * (C88237 + C88261 * C88435) +
                          C88212 * C88370 * C88548) /
                         C88090;
    const double C13847 = (3 * (C88241 + C88267 * C88435) +
                           C88327 * (2 * C88539 + C88327 * C88548)) /
                          C88090;
    const double C13848 =
        (2 * ae *
             (3 * (C88237 + C88261 * C88435) +
              C88327 * (2 * C88732 + C88327 * (C88261 + C88297 * C88435))) +
         C88212 * (3 * C88548 +
                   C88327 * (2 * C88733 +
                             C88327 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C14731 = (C88241 + C88267 * C88435 + C88548 * C88509) / C88090;
    const double C14732 =
        (2 * ae * (C89020 + (C88261 + C88297 * C88435) * C88509) +
         C88212 * (C88548 + (C88304 + (C88284 * C88285 +
                                       C88216 * bs[7] * std::pow(C88218, 7)) *
                                          C88219 * C88435) *
                                C88509)) /
        C88090;
    const double C16853 = (C88370 * (2 * C88539 + C88327 * C88548)) / C88090;
    const double C18505 =
        (4 * (2 * C88539 + C88327 * C88548) +
         C88327 * (3 * C88548 +
                   C88327 * (2 * C88733 +
                             C88327 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C19032 =
        (2 * C88539 + C88327 * C88548 +
         (2 * C88733 +
          C88327 * (C88304 +
                    (C88284 * C88285 + C88216 * bs[7] * std::pow(C88218, 7)) *
                        C88219 * C88435)) *
             C88509) /
        C88090;
    const double C21330 =
        (C88370 *
         (3 * C88548 +
          C88327 * (2 * C88733 +
                    C88327 * (C88304 + (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C23359 =
        (2 * C88370 * C88548 +
         C88370 * (C88548 + (C88304 + (C88284 * C88285 +
                                       C88216 * bs[7] * std::pow(C88218, 7)) *
                                          C88219 * C88435) *
                                C88509)) /
        C88090;
    const double C10625 =
        (2 * ae * (2 * C88370 * C88237 + C88370 * (C88237 + C88261 * C88509)) +
         C88212 * (2 * C88641 + C88370 * C88650)) /
        C88090;
    const double C27235 = (3 * (C88241 + C88267 * C88509) +
                           C88370 * (2 * C88641 + C88370 * C88650)) /
                          C88090;
    const double C27236 =
        (2 * ae *
             (3 * (C88237 + C88261 * C88509) +
              C88370 * (2 * C88753 + C88370 * (C88261 + C88297 * C88509))) +
         C88212 * (3 * C88650 +
                   C88370 * (2 * C88754 +
                             C88370 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C35878 =
        (4 * (2 * C88641 + C88370 * C88650) +
         C88370 * (3 * C88650 +
                   C88370 * (2 * C88754 +
                             C88370 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C88743 = C88742 + C88738;
    const double C29518 =
        (2 * ae *
             (2 * C88370 * C88732 +
              C88370 * (C88732 + C88327 * C88297 * C88509)) +
         C88212 *
             (2 * C88779 +
              C88370 * (C88733 + C88327 *
                                     (C88284 * C88285 +
                                      C88216 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88509))) /
        C88090;
    const double C31595 =
        (3 * (C88539 + C88733 * C88509) +
         C88370 *
             (2 * C88779 +
              C88370 * (C88733 + C88327 *
                                     (C88284 * C88285 +
                                      C88216 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88509))) /
        C88090;
    const double C29521 = C89783 * C6330;
    const double C46135 = C38610 * C6330;
    const double C31598 = C89783 * C23360;
    const double C88764 = C88763 + C88759;
    const double C422 =
        (4 * (2 * C88212 * C88445 + C88212 * C88452) +
         C88212 * (3 * C88452 +
                   C88212 * (2 * C88212 * C88450 +
                             C88212 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C1253 = (2 * ae * (2 * C88340 + C88212 * C88349) +
                          C88327 * (2 * C88212 * C88445 + C88212 * C88452)) /
                         C88090;
    const double C2185 = (C88440 + C88445 * C88216 + C88452 * C88509) / C88090;
    const double C2186 =
        (C88370 * (2 * C88212 * C88445 + C88212 * C88452)) / C88090;
    const double C2187 =
        (2 * C88212 * C88445 + C88212 * C88452 +
         (2 * C88212 * C88450 +
          C88212 * (C88450 +
                    (C88284 * C88285 + C88435 * bs[7] * std::pow(C88218, 7)) *
                        C88219 * C88216)) *
             C88509) /
        C88090;
    const double C3014 =
        (2 * ae * (3 * C88349 + C88212 * C88367) +
         C88327 * (3 * C88452 +
                   C88212 * (2 * C88212 * C88450 +
                             C88212 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C3735 =
        (C88370 *
         (3 * C88452 +
          C88212 * (2 * C88212 * C88450 +
                    C88212 * (C88450 + (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C4615 =
        (2 * ae * C88370 * C88349 + C88327 * C88370 * C88452) / C88090;
    const double C6646 =
        (2 * ae * (C88349 + C88363 * C88509) +
         C88327 * (C88452 + (C88450 + (C88284 * C88285 +
                                       C88435 * bs[7] * std::pow(C88218, 7)) *
                                          C88219 * C88216) *
                                C88509)) /
        C88090;
    const double C10845 =
        (2 * C88370 * C88452 +
         C88370 * (C88452 + (C88450 + (C88284 * C88285 +
                                       C88435 * bs[7] * std::pow(C88218, 7)) *
                                          C88219 * C88216) *
                                C88509)) /
        C88090;
    const double C89064 = C89054 + C89060;
    const double C27665 =
        (3 * (C88843 + C89055 * C88509) +
         C88370 *
             (2 * C89147 +
              C88370 * (C89055 + C88212 *
                                     (C88284 * C88285 +
                                      C88435 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88509))) /
        C88090;
    const double C29962 =
        (2 * ae * (2 * C89365 + C88370 * C89367) +
         C88327 *
             (2 * C89147 +
              C88370 * (C89055 + C88212 *
                                     (C88284 * C88285 +
                                      C88435 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88509))) /
        C88090;
    const double C89200 = C88327 * C89196;
    const double C23575 =
        (2 * ae * (2 * C88370 * C88338 + C88370 * (C88338 + C88345 * C88509)) +
         C88327 * (2 * C89141 + C88370 * C89254)) /
        C88090;
    const double C27664 = (3 * (C88440 + C88445 * C88509) +
                           C88370 * (2 * C89141 + C88370 * C89254)) /
                          C88090;
    const double C31921 =
        (2 * ae *
             (3 * C89363 +
              C88370 * (2 * C89260 + C88370 * (C88345 + C88358 * C88509))) +
         C88327 * (3 * C89254 +
                   C88370 * (2 * C89282 +
                             C88370 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C36108 =
        (4 * (2 * C89141 + C88370 * C89254) +
         C88370 * (3 * C89254 +
                   C88370 * (2 * C89282 +
                             C88370 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C89290 = C89281 + C89286;
    const double C717 =
        (4 * (2 * C88212 * C88519 + C88212 * C88526) +
         C88212 * (3 * C88526 +
                   C88212 * (2 * C88212 * C88524 +
                             C88212 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C1648 = (C88514 + C88519 * C88216 + C88526 * C88435) / C88090;
    const double C1649 =
        (C88327 * (2 * C88212 * C88519 + C88212 * C88526)) / C88090;
    const double C1650 =
        (2 * C88212 * C88519 + C88212 * C88526 +
         (2 * C88212 * C88524 +
          C88212 * (C88524 +
                    (C88284 * C88285 + C88509 * bs[7] * std::pow(C88218, 7)) *
                        C88219 * C88216)) *
             C88435) /
        C88090;
    const double C2582 = (2 * ae * (2 * C88383 + C88212 * C88392) +
                          C88370 * (2 * C88212 * C88519 + C88212 * C88526)) /
                         C88090;
    const double C3332 =
        (C88327 *
         (3 * C88526 +
          C88212 * (2 * C88212 * C88524 +
                    C88212 * (C88524 + (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C4053 =
        (2 * ae * (3 * C88392 + C88212 * C88410) +
         C88370 * (3 * C88526 +
                   C88212 * (2 * C88212 * C88524 +
                             C88212 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C5057 =
        (2 * ae * C88327 * C88392 + C88370 * C88327 * C88526) / C88090;
    const double C6243 =
        (2 * C88327 * C88526 +
         C88327 * (C88526 + (C88524 + (C88284 * C88285 +
                                       C88509 * bs[7] * std::pow(C88218, 7)) *
                                          C88219 * C88216) *
                                C88435)) /
        C88090;
    const double C9224 =
        (2 * ae * (C88392 + C88406 * C88435) +
         C88370 * (C88526 + (C88524 + (C88284 * C88285 +
                                       C88509 * bs[7] * std::pow(C88218, 7)) *
                                          C88219 * C88216) *
                                C88435)) /
        C88090;
    const double C89405 = C89399 + C89400;
    const double C18949 =
        (4 * (2 * C88327 * C88519 + C88327 * C89243) +
         C88327 * (3 * C89243 +
                   C88327 * (2 * C88327 * C88524 +
                             C88327 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C21966 =
        (2 * ae * (3 * C89080 + C88327 * C89231) +
         C88370 * (3 * C89243 +
                   C88327 * (2 * C88327 * C88524 +
                             C88327 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C89476 = C89466 + C89472;
    const double C89537 = C88370 * C89533;
    const double C89209 = C89207 * ae;
    const double C21488 = (C88370 * (3 * C89080 + C88327 * C89231) +
                           (3 * C89042 + C88327 * C89207) * ae) /
                          C88087;
    const double C18503 = 4 * (2 * C88855 + C88327 * C89042) +
                          C88327 * (3 * C89042 + C88327 * C89207);
    const double C19030 = 2 * C88855 + C88327 * C89042 + C89207 * C88509;
    const double C21328 = C88370 * (3 * C89042 + C88327 * C89207);
    const double C89328 = ae * C89325;
    const double C89327 = C88370 * C89325;
    const double C89481 = C89220 + C89479;
    const double C89539 = C89536 * ae;
    const double C35876 = 4 * (2 * C89006 + C88370 * C89390) +
                          C88370 * (3 * C89390 + C88370 * C89536);
    const double C88591 = ae * C88590;
    const double C942 =
        (C88333 + C88338 * C88216 + C88327 * C88590 + C88327 * C88263 * ae) /
        C88087;
    const double C4277 = (C88370 * C88590) / C88087;
    const double C6409 = (C88590 + C88835 * C88509) / C88087;
    const double C222 = C212 + C213;
    const double C441 = C434 + C435;
    const double C521 = C516 + C517;
    const double C3019 = C3016 + C1270;
    const double C2782 = C2778 + C2779;
    const double C38735 = C38720 + C38721;
    const double C1909 = C1899 + C1900;
    const double C2208 = C2200 + C2201;
    const double C2314 = C2309 + C2310;
    const double C59554 = C59551 + C59552;
    const double C3740 = C3737 + C2203;
    const double C3503 = C3499 + C3500;
    const double C3822 = C3820 + C3821;
    const double C55682 = C55675 + C55676;
    const double C14822 =
        (C88348 + C88543 + C88327 * C89023 +
         (C88362 + C88741 +
          C88327 *
              (C88310 + C88327 * (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88331))) *
             C88509) /
        C88090;
    const double C29624 =
        (2 * C88370 * C89023 +
         C88370 * (C89023 + (C88310 + C88327 * (ae * C88358 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88331)) *
                                C88509)) /
        C88090;
    const double C198 =
        (4 * (2 * C88348 + ae * C88349 + C88212 * C88366) +
         ae * (3 * C88349 + C88212 * C88367) +
         C88212 * (3 * C88366 + ae * C88367 +
                   C88212 * (2 * C88362 + ae * C88363 +
                             C88212 * (C88356 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C1883 =
        (C88337 + ae * C88340 + C88212 * C88348 + C88366 * C88509) / C88090;
    const double C1884 =
        (C88370 * (2 * C88348 + ae * C88349 + C88212 * C88366)) / C88090;
    const double C1885 =
        (2 * C88348 + ae * C88349 + C88212 * C88366 +
         (2 * C88362 + ae * C88363 +
          C88212 * (C88356 + ae * C88212 * C88358 +
                    C88212 * (ae * C88358 +
                              C88212 * std::pow(C88218, 7) * bs[7] * C88331))) *
             C88509) /
        C88090;
    const double C3497 =
        (C88370 * (3 * C88366 + ae * C88367 +
                   C88212 * (2 * C88362 + ae * C88363 +
                             C88212 * (C88356 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C10683 =
        (2 * C88370 * C88366 +
         C88370 *
             (C88366 + (C88356 + ae * C88212 * C88358 +
                        C88212 * (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88331)) *
                           C88509)) /
        C88090;
    const double C365 =
        (4 * (2 * C88423 + ae * C88349 + C88212 * C88431) +
         ae * (3 * C88349 + C88212 * C88367) +
         C88212 * (3 * C88431 + ae * C88367 +
                   C88212 * (2 * C88429 + ae * C88363 +
                             C88212 * (C88427 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88415))))) /
        C88090;
    const double C2103 =
        (C88418 + ae * C88340 + C88212 * C88423 + C88431 * C88509) / C88090;
    const double C2104 =
        (C88370 * (2 * C88423 + ae * C88349 + C88212 * C88431)) / C88090;
    const double C2105 =
        (2 * C88423 + ae * C88349 + C88212 * C88431 +
         (2 * C88429 + ae * C88363 +
          C88212 * (C88427 + ae * C88212 * C88358 +
                    C88212 * (ae * C88358 +
                              C88212 * std::pow(C88218, 7) * bs[7] * C88415))) *
             C88509) /
        C88090;
    const double C3660 =
        (C88370 * (3 * C88431 + ae * C88367 +
                   C88212 * (2 * C88429 + ae * C88363 +
                             C88212 * (C88427 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88415))))) /
        C88090;
    const double C10792 =
        (2 * C88370 * C88431 +
         C88370 *
             (C88431 + (C88427 + ae * C88212 * C88358 +
                        C88212 * (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415)) *
                           C88509)) /
        C88090;
    const double C57644 = C57639 + C57640;
    const double C6881 =
        (ae * C88383 + C88327 * C88872 + ae * C88370 * C88846 +
         C88370 * (C88849 + C88370 * (C88398 + C88327 * C88212 * C88503))) /
        C88090;
    const double C88850 = C88340 + C88848;
    const double C88940 = ae * C88939;
    const double C6651 = C186 * C6410;
    const double C15064 = C13402 * C6410;
    const double C29637 = C89926 * C6410;
    const double C29859 = C13338 * C6410;
    const double C40599 = C38612 * C6410;
    const double C40926 = C38700 * C6410;
    const double C41049 = C273 * C6410;
    const double C46448 = C38616 * C6410;
    const double C60677 = C55429 * C6410;
    const double C27686 = C27682 + C10850;
    const double C27384 = C27375 * C13338;
    const double C57871 = C27375 * C55429;
    const double C68318 = C27375 * C38616;
    const double C89195 = C89186 + C89045;
    const double C89047 = C89046 + C89041;
    const double C89111 = ae * C89110;
    const double C23415 = (2 * C88942 + C88370 * C89110) / C88087;
    const double C19453 =
        (2 * (ae * (C88381 + C88370 * (C88370 * C88388 + C88257) +
                    C88370 * C88250 * ae) +
              C88327 * C89266) +
         ae * (C89080 + C88370 * (C88370 * C89226 + C89202) +
               C88370 * C89199 * ae) +
         C88327 *
             (C89266 +
              ae * (C89220 + C88370 * (C88370 * C88327 * C88401 + C89198) +
                    C88370 * C89192 * ae) +
              C88327 * (ae * (C88388 + C88370 * (C88370 * C88401 + C88293) +
                              C88370 * C88283 * ae) +
                        C88327 * (C88466 + ae * C88370 * C88358 +
                                  C88370 * (ae * C88358 +
                                            C88370 * std::pow(C88218, 7) *
                                                bs[7] * C88457))))) /
        C88090;
    const double C23629 =
        (2 * C89154 + ae * (C88338 + C88345 * C88509) + C88370 * C89266 +
         ae * (2 * (C88370 * C89220 + C89041) +
               C88370 * (C89220 + C88370 * (C88370 * C88327 * C88401 + C89198) +
                         C88370 * C89192 * ae) +
               (C89037 + C89192 * C88509) * ae) +
         C88327 *
             (ae * (2 * C89294 +
                    C88370 * (C88388 + C88370 * (C88370 * C88401 + C88293) +
                              C88370 * C88283 * ae) +
                    (C88250 + C88283 * C88509) * ae) +
              C88327 * (2 * C89263 + ae * (C88345 + C88358 * C88509) +
                        C88370 * (C88466 + ae * C88370 * C88358 +
                                  C88370 * (ae * C88358 +
                                            C88370 * std::pow(C88218, 7) *
                                                bs[7] * C88457))))) /
        C88090;
    const double C23630 =
        (ae * (2 * C89007 +
               C88370 * (C88381 + C88370 * C89294 + C88370 * C88250 * ae) +
               (C88229 + C88250 * C88509) * ae) +
         C88327 *
             (2 * C89154 + ae * (C88338 + C88345 * C88509) + C88370 * C89266)) /
        C88090;
    const double C27768 =
        (3 * (C88460 + ae * C89361 + C88370 * C89154) +
         ae * (2 * C89361 + C88370 * C89363) +
         C88370 * (2 * C89154 + ae * C89363 + C88370 * C89266)) /
        C88090;
    const double C36166 =
        (4 * (2 * C89154 + ae * C89363 + C88370 * C89266) +
         ae * (3 * C89363 + C88370 * C89508) +
         C88370 * (3 * C89266 + ae * C89508 +
                   C88370 * (2 * C89263 + ae * C89457 +
                             C88370 * (C88466 + ae * C88370 * C88358 +
                                       C88370 * (ae * C88358 +
                                                 C88370 * std::pow(C88218, 7) *
                                                     bs[7] * C88457))))) /
        C88090;
    const double C36271 =
        (4 * (2 * C89376 + ae * C89363 + C88370 * C89520) +
         ae * (3 * C89363 + C88370 * C89508) +
         C88370 * (3 * C89520 + ae * C89508 +
                   C88370 * (2 * C89518 + ae * C89457 +
                             C88370 * (C88503 + ae * C88370 * C88358 +
                                       C88370 * (ae * C88358 +
                                                 C88370 * std::pow(C88218, 7) *
                                                     bs[7] * C88494))))) /
        C88090;
    const double C36113 = C36110 + C27673;
    const double C35943 = C35939 + C35940;
    const double C36056 = C36053 + C36054;
    const double C1908 = C1897 + C1898;
    const double C33946 = C33941 + C33942;
    const double C79008 = C79003 + C79004;
    const double C82012 = C82007 + C82008;
    const double C31685 = C31681 + C31682;
    const double C84662 = C84657 + C84658;
    const double C35938 = C27382 + C27383;
    const double C88725 = ae * C88724;
    const double C1989 =
        (C88376 + C88381 * C88216 + C88370 * C88724 + C88370 * C88263 * ae) /
        C88087;
    const double C3101 = C3099 + C3100;
    const double C309 = C299 + C300;
    const double C655 = C650 + C651;
    const double C736 = C729 + C730;
    const double C1090 = C1080 + C1081;
    const double C1565 = C1560 + C1561;
    const double C1671 = C1663 + C1664;
    const double C42219 = C42216 + C42217;
    const double C3337 = C3334 + C1666;
    const double C2864 = C2860 + C2861;
    const double C3257 = C3255 + C3256;
    const double C39205 = C39198 + C39199;
    const double C4058 = C4055 + C2599;
    const double C3585 = C3581 + C3582;
    const double C3978 = C3976 + C3977;
    const double C55464 = C55449 + C55450;
    const double C4412 = C4406 + C4407;
    const double C5069 = C5064 + C5065;
    const double C58306 = C58299 + C58300;
    const double C285 =
        (4 * (2 * C88391 + ae * C88392 + C88212 * C88409) +
         ae * (3 * C88392 + C88212 * C88410) +
         C88212 * (3 * C88409 + ae * C88410 +
                   C88212 * (2 * C88405 + ae * C88406 +
                             C88212 * (C88399 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88374))))) /
        C88090;
    const double C1064 =
        (C88380 + ae * C88383 + C88212 * C88391 + C88409 * C88435) / C88090;
    const double C1065 =
        (C88327 * (2 * C88391 + ae * C88392 + C88212 * C88409)) / C88090;
    const double C1066 =
        (2 * C88391 + ae * C88392 + C88212 * C88409 +
         (2 * C88405 + ae * C88406 +
          C88212 * (C88399 + ae * C88212 * C88401 +
                    C88212 * (ae * C88401 +
                              C88212 * std::pow(C88218, 7) * bs[7] * C88374))) *
             C88435) /
        C88090;
    const double C2858 =
        (C88327 * (3 * C88409 + ae * C88410 +
                   C88212 * (2 * C88405 + ae * C88406 +
                             C88212 * (C88399 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88374))))) /
        C88090;
    const double C5922 =
        (2 * C88327 * C88409 +
         C88327 *
             (C88409 + (C88399 + ae * C88212 * C88401 +
                        C88212 * (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374)) *
                           C88435)) /
        C88090;
    const double C582 =
        (4 * (2 * C88481 + ae * C88392 + C88212 * C88489) +
         ae * (3 * C88392 + C88212 * C88410) +
         C88212 * (3 * C88489 + ae * C88410 +
                   C88212 * (2 * C88487 + ae * C88406 +
                             C88212 * (C88485 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88473))))) /
        C88090;
    const double C1464 =
        (C88476 + ae * C88383 + C88212 * C88481 + C88489 * C88435) / C88090;
    const double C1465 =
        (C88327 * (2 * C88481 + ae * C88392 + C88212 * C88489)) / C88090;
    const double C1466 =
        (2 * C88481 + ae * C88392 + C88212 * C88489 +
         (2 * C88487 + ae * C88406 +
          C88212 * (C88485 + ae * C88212 * C88401 +
                    C88212 * (ae * C88401 +
                              C88212 * std::pow(C88218, 7) * bs[7] * C88473))) *
             C88435) /
        C88090;
    const double C3176 =
        (C88327 * (3 * C88489 + ae * C88410 +
                   C88212 * (2 * C88487 + ae * C88406 +
                             C88212 * (C88485 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88473))))) /
        C88090;
    const double C6137 =
        (2 * C88327 * C88489 +
         C88327 *
             (C88489 + (C88485 + ae * C88212 * C88401 +
                        C88212 * (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473)) *
                           C88435)) /
        C88090;
    const double C40273 = C40268 + C40269;
    const double C88915 = ae * C88914;
    const double C6490 =
        (C88327 * C88383 + C88370 * C88914 + C88370 * C88845 * ae) / C88087;
    const double C89001 = C88383 + C88999;
    const double C14649 = C14645 + C6248;
    const double C14081 = C14072 * C13338;
    const double C40040 = C14072 * C38700;
    const double C45614 = C14072 * C38616;
    const double C17784 = C17781 + C9229;
    const double C17110 = C17104 * C13338;
    const double C44108 = C17104 * C38700;
    const double C49314 = C17104 * C38616;
    const double C89125 = ae * C89124;
    const double C14897 =
        (C88376 + C88381 * C88435 + C88370 * C89124 + C88370 * C89042 * ae) /
        C88087;
    const double C18954 = C18951 + C14638;
    const double C18623 = C18619 + C18620;
    const double C18847 = C18845 + C18846;
    const double C21971 = C21968 + C17775;
    const double C21496 = C21492 + C21493;
    const double C21816 = C21814 + C21815;
    const double C78376 = C78369 + C78370;
    const double C18787 =
        (4 * (2 * C89079 + ae * C89080 + C88327 * C89230) +
         ae * (3 * C89080 + C88327 * C89231) +
         C88327 * (3 * C89230 + ae * C89231 +
                   C88327 * (2 * C89224 + ae * C89226 +
                             C88327 * (C88466 + ae * C88327 * C88401 +
                                       C88327 * (ae * C88401 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88457))))) /
        C88090;
    const double C18898 =
        (4 * (2 * C89092 + ae * C89080 + C88327 * C89240) +
         ae * (3 * C89080 + C88327 * C89231) +
         C88327 * (3 * C89240 + ae * C89231 +
                   C88327 * (2 * C89238 + ae * C89226 +
                             C88327 * (C88503 + ae * C88327 * C88401 +
                                       C88327 * (ae * C88401 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88494))))) /
        C88090;
    const double C89340 = C88917 + C89338;
    const double C89532 = C89522 + C89295;
    const double C89391 = C89388 + C89389;
    const double C1089 = C1078 + C1079;
    const double C18618 = C14079 + C14080;
    const double C21491 = C17106 + C17107;
    const double C29031 = C29024 + C29025;
    const double C57424 = C57403 + C57404;
    const double C27574 = C27559 + C27560;
    const double C57417 = C57389 + C57390;
    const double C27576 = C27563 + C27564;
    const double C68463 = C68458 + C68459;
    const double C29971 = C89926 * C6647;
    const double C40927 = C38612 * C6647;
    const double C27677 = C89926 * C10846;
    const double C1280 = C1276 + C1258;
    const double C2213 = C2209 + C2191;
    const double C27689 = C27685 + C27672;
    const double C3097 = C1382 + C1368;
    const double C3818 = C2315 + C2301;
    const double C15928 = C15923 + C15924;
    const double C40161 = C40150 + C40151;
    const double C14470 = C14461 + C14462;
    const double C40158 = C40144 + C40145;
    const double C14471 = C14464 + C14465;
    const double C45901 = C45898 + C45899;
    const double C3253 = C1566 + C1552;
    const double C3974 = C2499 + C2485;
    const double C14640 = C89937 * C6244;
    const double C17777 = C89937 * C9225;
    const double C56890 = C55293 * C9225;
    const double C1676 = C1672 + C1654;
    const double C2609 = C2605 + C2587;
    const double C14652 = C14648 + C14637;
    const double C17785 = C17782 + C17772;
    const double C18509 = C13338 * C18504;
    const double C19038 = C13338 * C19031;
    const double C21334 = C13338 * C21329;
    const double C35882 = C13338 * C35877;
    const double C437 = C186 * C192;
    const double C2204 = C186 * C1877;
    const double C3739 = C186 * C3496;
    const double C36112 = C186 * C35935;
    const double C732 = C273 * C279;
    const double C1667 = C273 * C1058;
    const double C3336 = C273 * C2857;
    const double C18953 = C273 * C18615;
    const double C96 = (C90022 * C89803) / C89800 + (C89990 - C90012) / C89802;
    const double C97 =
        (C90023 * C89803) / C89800 + (2 * C89814 + C90022) / C89802;
    const double C98 = (C89803 * C89814) / C89817 + C90023 / C89802;
    const double C5796 =
        (C90024 * C89874) / C89800 + (C89998 - C90014) / C89802;
    const double C5797 =
        (C90025 * C89874) / C89800 + (2 * C89879 + C90024) / C89802;
    const double C5798 = (C89874 * C89879) / C89817 + C90025 / C89802;
    const double C10614 =
        (C90026 * C89902) / C89800 + (C89999 - C90017) / C89802;
    const double C10615 =
        (C90027 * C89902) / C89800 + (2 * C89907 + C90026) / C89802;
    const double C10616 = (C89902 * C89907) / C89817 + C90027 / C89802;
    const double C88099 = C88098 * C88093;
    const double C101 =
        ((-(0 * be) / C88087) / C88091 -
         ((0 - (C88088 * C88086) / C88087) * be) / C88087) /
            C88091 -
        ((C88088 * ((-C88086 / C88087) / C88091 - (C88098 * be) / C88087) +
          C38609) *
         be) /
            C88087 +
        (-C88095 / C88087) / C88091 - (0 * be) / C88087;
    const double C103 =
        ((-C88086 / C88087) / C88091 - (C88098 * be) / C88087) / C88091 -
        ((C88088 * ((-C88095 / C88087) / C88091 - (0 * be) / C88087) + C38610) *
         be) /
            C88087;
    const double C38614 = (-C88086 / C88087) / C88091 - (C88098 * be) / C88087;
    const double C14456 = C14189 * C273;
    const double C14451 = C14186 * C273;
    const double C14448 = C14184 * C273;
    const double C14475 = C14469 * C89937;
    const double C73074 = C14469 * C55292;
    const double C14474 = C14468 * C89937;
    const double C78652 = C14468 * C55292;
    const double C14473 = C14467 * C89937;
    const double C73071 = C14467 * C55292;
    const double C14472 = C14466 * C89937;
    const double C73066 = C14466 * C55292;
    const double C17556 = C17231 * C273;
    const double C29851 = C17231 * C186;
    const double C73067 = C17231 * C55429;
    const double C73715 = C17231 * C38700;
    const double C17553 = C17229 * C273;
    const double C34099 = C17229 * C186;
    const double C73070 = C17229 * C55429;
    const double C76589 = C17229 * C38700;
    const double C17568 = C17564 * C89937;
    const double C73068 = C17564 * C55293;
    const double C77003 = C17564 * C55292;
    const double C17567 = C17563 * C89937;
    const double C73069 = C17563 * C55293;
    const double C82538 = C17563 * C55292;
    const double C19536 = C19298 * C273;
    const double C29853 = C19298 * C186;
    const double C73718 = C19298 * C38700;
    const double C77002 = C19298 * C55429;
    const double C27584 = C27572 * C89926;
    const double C73722 = C27572 * C38611;
    const double C27582 = C27570 * C186;
    const double C27581 = C27569 * C89926;
    const double C84796 = C27569 * C38611;
    const double C27580 = C27568 * C89926;
    const double C73719 = C27568 * C38611;
    const double C27579 = C27567 * C186;
    const double C27578 = C27566 * C89926;
    const double C73714 = C27566 * C38611;
    const double C27577 = C27565 * C186;
    const double C31846 = C31844 * C186;
    const double C79535 = C31844 * C55429;
    const double C84797 = C31844 * C38700;
    const double C88149 = C88148 * C88093;
    const double C38699 = (-C88135 / C88087) / C88091 - (C88148 * be) / C88087;
    const double C27691 = C27687 * C89783;
    const double C57527 = C27687 * C38609;
    const double C88175 = C88174 * C88093;
    const double C55428 = (-C88161 / C88087) / C88091 - (C88174 * be) / C88087;
    const double C745 = C741 * C89926;
    const double C39272 = C741 * C38611;
    const double C972 = C958 + C959;
    const double C38729 = C38708 + C38709;
    const double C14191 = C14174 + C14175;
    const double C39793 = C39764 + C39765;
    const double C2019 = C2005 + C2006;
    const double C55458 = C55437 + C55438;
    const double C27862 = C27853 + C27854;
    const double C57760 = C57745 + C57746;
    const double C14059 = C1086 * C89783;
    const double C39653 = C1086 * C38609;
    const double C39647 = C1086 * C38610;
    const double C14457 = C14190 * C273;
    const double C27362 = C1905 * C89783;
    const double C57154 = C1905 * C38609;
    const double C57148 = C1905 * C38610;
    const double C27583 = C27571 * C186;
    const double C1266 = C89926 * C1251;
    const double C39916 = C38611 * C1251;
    const double C39906 = C38612 * C1251;
    const double C4950 = C89926 * C4944;
    const double C41250 = C38612 * C4944;
    const double C44383 = C38611 * C4944;
    const double C974 = C962 + C963;
    const double C1274 = C1264 + C1265;
    const double C1380 = C1373 + C1374;
    const double C39540 = C39526 + C39527;
    const double C4292 = C4284 + C4285;
    const double C4626 = C4619 + C4620;
    const double C40606 = C40592 + C40593;
    const double C2595 = C89937 * C2580;
    const double C57983 = C55292 * C2580;
    const double C57973 = C55293 * C2580;
    const double C4736 = C89937 * C4730;
    const double C56559 = C55293 * C4730;
    const double C60676 = C55292 * C4730;
    const double C2021 = C2009 + C2010;
    const double C2497 = C2490 + C2491;
    const double C2603 = C2593 + C2594;
    const double C57277 = C57263 + C57264;
    const double C1678 = C1674 + C1662;
    const double C2215 = C2211 + C2199;
    const double C5072 = C5070 + C5063;
    const double C88247 = ae * C88246;
    const double C115 =
        (2 * C88226 + C88212 * C88246 + (C88215 + C88229 * C88216) * ae) /
        C88087;
    const double C835 = (C88327 * C88246) / C88087;
    const double C1768 = (C88370 * C88246) / C88087;
    const double C15447 = C89783 * C843;
    const double C39391 = C38610 * C843;
    const double C41467 = C38609 * C843;
    const double C965 = C89926 * C949;
    const double C39535 = C38611 * C949;
    const double C39523 = C38612 * C949;
    const double C14179 = C89783 * C1169;
    const double C39787 = C38609 * C1169;
    const double C39767 = C38610 * C1169;
    const double C4405 = C89937 * C4398;
    const double C56236 = C55293 * C4398;
    const double C60274 = C55292 * C4398;
    const double C17559 = C89783 * C4842;
    const double C44245 = C38609 * C4842;
    const double C44241 = C38610 * C4842;
    const double C4293 = C4286 + C4287;
    const double C17232 = C17220 + C17221;
    const double C40604 = C40588 + C40589;
    const double C43824 = C43810 + C43811;
    const double C28786 = C89783 * C1776;
    const double C57016 = C38610 * C1776;
    const double C59018 = C38609 * C1776;
    const double C2012 = C89937 * C1996;
    const double C57272 = C55292 * C1996;
    const double C57260 = C55293 * C1996;
    const double C27856 = C89783 * C2396;
    const double C57756 = C38609 * C2396;
    const double C57748 = C38610 * C2396;
    const double C17223 = C89783 * C4512;
    const double C43819 = C38609 * C4512;
    const double C43807 = C38610 * C4512;
    const double C14460 = C14192 * C273;
    const double C27585 = C27573 * C186;
    const double C88862 = ae * C88861;
    const double C5865 =
        (2 * C88582 + C88327 * C88861 + (C88215 + C88229 * C88435) * ae) /
        C88087;
    const double C8678 = (C88370 * C88861) / C88087;
    const double C34178 = C89926 * C8915;
    const double C76728 = C38612 * C8915;
    const double C82324 = C38611 * C8915;
    const double C89013 = ae * C89012;
    const double C10738 =
        (2 * C88716 + C88370 * C89012 + (C88215 + C88229 * C88509) * ae) /
        C88087;
    const double C19697 = C89937 * C6959;
    const double C77276 = C55293 * C6959;
    const double C79740 = C55292 * C6959;
    const double C17443 = C89937 * C8995;
    const double C72960 = C55293 * C8995;
    const double C82434 = C55292 * C8995;
    const double C19701 = C19696 + C6963;
    const double C19207 = C19199 + C19200;
    const double C19542 = C19537 + C19538;
    const double C30292 = C30287 + C30288;
    const double C74151 = C74145 + C74146;
    const double C76455 = C76449 + C76450;
    const double C30291 = C30285 + C30286;
    const double C74150 = C74143 + C74144;
    const double C29976 = C29973 + C4618;
    const double C29852 = C17230 * C89926;
    const double C73716 = C17230 * C38612;
    const double C76588 = C17230 * C38611;
    const double C29646 = C29640 * C13338;
    const double C29977 = C29974 + C6652;
    const double C29854 = C19299 * C89926;
    const double C73717 = C19299 * C38612;
    const double C79218 = C19299 * C38611;
    const double C29648 = C29642 * C13338;
    const double C27674 = C2214 * C89783;
    const double C57531 = C2214 * C38609;
    const double C57528 = C2214 * C38610;
    const double C27692 = C27688 * C89783;
    const double C57530 = C27688 * C38609;
    const double C17449 = C17444 + C17445;
    const double C72964 = C72957 + C72958;
    const double C746 = C742 * C89926;
    const double C39275 = C742 * C38611;
    const double C747 = C743 * C89926;
    const double C39276 = C743 * C38611;
    const double C1681 = C1677 * C89926;
    const double C39273 = C1677 * C38612;
    const double C40373 = C1677 * C38611;
    const double C2614 = C2610 * C89926;
    const double C41360 = C2610 * C38611;
    const double C88276 = ae * C88274;
    const double C88275 = C88212 * C88274;
    const double C88286 = 3 * C88274;
    const double C88540 = C88327 * C88274;
    const double C88642 = C88370 * C88274;
    const double C840 = (C88246 + C88274 * C88435) / C88087;
    const double C1773 = (C88246 + C88274 * C88509) / C88087;
    const double C848 = (C88241 + C88267 * C88435 + C88537 + C88537 +
                         C88212 * (2 * ae * (C88237 + C88261 * C88435) +
                                   C88212 * (C88267 + C88304 * C88435))) /
                        C88090;
    const double C5867 =
        (2 * (C88244 + C88327 * C88348) + C88537 +
         C88327 * (C88348 + C88543 + C88327 * (C88271 + C88327 * C88362))) /
        C88090;
    const double C5976 =
        (2 * (C88244 + C88327 * C88423) + C88537 +
         C88327 * (C88423 + C88543 + C88327 * (C88271 + C88327 * C88429))) /
        C88090;
    const double C8760 =
        (C88537 + C88370 * (C88391 + C88405 * C88435)) / C88090;
    const double C9071 =
        (C88537 + C88370 * (C88481 + C88487 * C88435)) / C88090;
    const double C13863 = C13338 * C5805;
    const double C14064 = C273 * C5805;
    const double C14181 = C89783 * C5805;
    const double C39387 = C38616 * C5805;
    const double C39536 = C38700 * C5805;
    const double C45685 = C38610 * C5805;
    const double C14742 = C13338 * C8594;
    const double C17098 = C273 * C8594;
    const double C17225 = C89783 * C8594;
    const double C43377 = C38616 * C8594;
    const double C43532 = C38700 * C8594;
    const double C49417 = C38610 * C8594;
    const double C56133 = C186 * C8594;
    const double C56249 = C55429 * C8594;
    const double C43533 = C38612 * C8680;
    const double C56134 = C89926 * C8680;
    const double C4169 =
        (C88370 * C88539 + C88777 + C88777 +
         C88212 * (2 * ae * C88370 * C88732 + C88212 * C88370 * C88733)) /
        C88090;
    const double C6493 = (C88327 * C88391 + C88777 +
                          C88370 * (C88543 + C88370 * C88327 * C88405)) /
                         C88090;
    const double C6804 = (C88327 * C88481 + C88777 +
                          C88370 * (C88543 + C88370 * C88327 * C88487)) /
                         C88090;
    const double C8837 = (C88370 * C88423 + C88777 +
                          C88327 * (C88645 + C88327 * C88370 * C88429)) /
                         C88090;
    const double C29645 = C29638 + C29639;
    const double C29861 = C29857 + C29858;
    const double C40611 = C40602 + C40603;
    const double C46451 = C46444 + C46445;
    const double C1781 = (C88241 + C88267 * C88509 + C88639 + C88639 +
                          C88212 * (2 * ae * (C88237 + C88261 * C88509) +
                                    C88212 * (C88267 + C88304 * C88509))) /
                         C88090;
    const double C6570 =
        (C88639 + C88327 * (C88423 + C88429 * C88509)) / C88090;
    const double C10740 =
        (2 * (C88244 + C88370 * C88391) + C88639 +
         C88370 * (C88391 + C88645 + C88370 * (C88271 + C88370 * C88405))) /
        C88090;
    const double C10955 =
        (2 * (C88244 + C88370 * C88481) + C88639 +
         C88370 * (C88481 + C88645 + C88370 * (C88271 + C88370 * C88487))) /
        C88090;
    const double C27250 = C13338 * C10622;
    const double C27367 = C186 * C10622;
    const double C27562 = C89783 * C10622;
    const double C51758 = C38616 * C10622;
    const double C57273 = C55429 * C10622;
    const double C68455 = C38610 * C10622;
    const double C18626 = C18624 * C89783;
    const double C18844 = C18682 * C273;
    const double C19214 = C19210 * C89783;
    const double C19539 = C19300 * C273;
    const double C34101 = C19300 * C186;
    const double C79219 = C19300 * C38700;
    const double C82539 = C19300 * C55429;
    const double C21499 = C21497 * C89783;
    const double C21813 = C21579 * C273;
    const double C78653 = C21579 * C55429;
    const double C82223 = C21579 * C38700;
    const double C35946 = C35944 * C89783;
    const double C36057 = C36055 * C186;
    const double C88595 = C88594 + C88309;
    const double C88729 = C88728 + C88309;
    const double C3018 = C186 * C2775;
    const double C38958 = C38700 * C2775;
    const double C4057 = C273 * C3578;
    const double C55915 = C55429 * C3578;
    const double C5067 = C273 * C4396;
    const double C58911 = C55429 * C4396;
    const double C6880 =
        (ae * C88392 + C88327 * C88505 + ae * C88370 * C88835 +
         C88370 * (C88838 +
                   C88370 * (ae * C88406 +
                             C88327 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C88839 = C88349 + C88837;
    const double C88937 = ae * C88936;
    const double C88991 = C88392 + C88989;
    const double C88910 = ae * C88909;
    const double C6489 =
        (C88327 * C88392 + C88370 * C88909 + C88370 * C88834 * ae) / C88087;
    const double C89070 = C89069 + C89062;
    const double C89115 = ae * C89114;
    const double C29623 = (2 * C88939 + C88370 * C89114) / C88087;
    const double C89413 = C89412 + C89407;
    const double C89129 = ae * C89128;
    const double C14898 =
        (C88383 + C88394 * C88435 + C88370 * C89128 + C88370 * C89063 * ae) /
        C88087;
    const double C89438 = C88912 + C89436;
    const double C88317 = ae * C88314;
    const double C88316 = C88212 * C88314;
    const double C88546 = C88314 * C88435;
    const double C88648 = C88314 * C88509;
    const double C88735 = C88327 * C88314;
    const double C88756 = C88370 * C88314;
    const double C16982 =
        (C88370 *
         (2 * C89023 + C88552 +
          C88327 * (C88362 + C88741 +
                    C88327 * (C88310 + C88327 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C88819 = C88817 + C88818;
    const double C88923 = ae * C88922;
    const double C14743 = C13338 * C14730;
    const double C46136 = C38616 * C14730;
    const double C88959 = C88957 + C88958;
    const double C88881 = ae * C88880;
    const double C29517 = (2 * C88776 + C88370 * C88880) / C88087;
    const double C89211 = ae * C89208;
    const double C89210 = C88327 * C89208;
    const double C89252 = C89208 * C88509;
    const double C89284 = C88370 * C89208;
    const double C89312 = C89310 + C89311;
    const double C89545 = ae * C89543;
    const double C89544 = C88370 * C89543;
    const double C88315 = C88289 + C88313;
    const double C13864 = C89783 * C5808;
    const double C45471 = C38610 * C5808;
    const double C16864 = C89783 * C8597;
    const double C49107 = C38610 * C8597;
    const double C18508 = C89783 * C13847;
    const double C19037 = C89783 * C14731;
    const double C21333 = C89783 * C16853;
    const double C27251 = C89783 * C10625;
    const double C68241 = C38610 * C10625;
    const double C35881 = C89783 * C27235;
    const double C3017 = C89926 * C1253;
    const double C38957 = C38612 * C1253;
    const double C2202 = C89926 * C2185;
    const double C3738 = C89926 * C2186;
    const double C4624 = C89926 * C4615;
    const double C42829 = C38612 * C4615;
    const double C31924 = C89926 * C23575;
    const double C84868 = C38612 * C23575;
    const double C36111 = C89926 * C27664;
    const double C1665 = C89937 * C1648;
    const double C3335 = C89937 * C1649;
    const double C4056 = C89937 * C2582;
    const double C55914 = C55293 * C2582;
    const double C5066 = C89937 * C5057;
    const double C58910 = C55293 * C5057;
    const double C89271 = C89270 + C89209;
    const double C21970 = C273 * C21488;
    const double C78791 = C55429 * C21488;
    const double C89329 = C89080 + C89327;
    const double C89482 = C89481 + C89474;
    const double C1252 = (C88440 + C88445 * C88216 + C88591 + C88591 +
                          C88327 * (2 * ae * C88349 + C88327 * C88452)) /
                         C88090;
    const double C4945 =
        (C88591 + C88370 * (ae * C88392 + C88327 * C88505)) / C88090;
    const double C967 = C89926 * C942;
    const double C1268 = C186 * C942;
    const double C1376 = C273 * C942;
    const double C13566 = C13403 * C942;
    const double C15691 = C13338 * C942;
    const double C15772 = C13402 * C942;
    const double C39788 = C38616 * C942;
    const double C39921 = C38700 * C942;
    const double C41579 = C38612 * C942;
    const double C4289 = C89926 * C4277;
    const double C4623 = C186 * C4277;
    const double C4738 = C273 * C4277;
    const double C16454 = C13402 * C4277;
    const double C40929 = C38700 * C4277;
    const double C42523 = C38612 * C4277;
    const double C43820 = C38616 * C4277;
    const double C58605 = C55429 * C4277;
    const double C74652 = C13338 * C4277;
    const double C6650 = C186 * C6409;
    const double C40930 = C38700 * C6409;
    const double C649 = C222 * C273;
    const double C445 = C441 + C435;
    const double C525 = C521 * C89926;
    const double C3020 = C3019 + C1270;
    const double C3254 = C2782 * C273;
    const double C2492 = C1909 * C273;
    const double C28872 = C1909 * C13338;
    const double C57159 = C1909 * C38616;
    const double C59759 = C1909 * C55429;
    const double C2212 = C2208 + C2201;
    const double C2318 = C2314 * C89926;
    const double C3741 = C3740 + C2203;
    const double C3975 = C3503 * C273;
    const double C55825 = C3503 * C55429;
    const double C59129 = C3503 * C38616;
    const double C3823 = C3822 * C89926;
    const double C1902 = C89926 * C1883;
    const double C3502 = C89926 * C1884;
    const double C29029 = C89783 * C2103;
    const double C57412 = C38610 * C2103;
    const double C59346 = C38610 * C2104;
    const double C30290 = C89926 * C6881;
    const double C41256 = C38612 * C6881;
    const double C88851 = C88850 + C88847;
    const double C8914 = (C88370 * C88843 + C88940 + C88940 +
                          C88327 * (2 * ae * C88370 * C88351 +
                                    C88327 * C88370 * C88212 * C88450)) /
                         C88090;
    const double C29975 = C29970 + C6651;
    const double C29644 = C29636 + C29637;
    const double C40609 = C40598 + C40599;
    const double C41051 = C41049 + C41050;
    const double C60680 = C60677 + C60678;
    const double C89205 = C89195 + C89200;
    const double C89049 = ae * C89047;
    const double C89048 = C88327 * C89047;
    const double C89142 = C88370 * C89047;
    const double C89189 = 3 * C89047;
    const double C14819 = (C88861 + C89047 * C88509) / C88087;
    const double C15051 = (C88440 + C88445 * C88509 + C89111 + C89111 +
                           C88327 * (2 * ae * (C88338 + C88345 * C88509) +
                                     C88327 * (C88445 + C88450 * C88509))) /
                          C88090;
    const double C23734 =
        (2 * (C88859 + C88370 * C89092) + C89111 +
         C88370 * (C89092 + C89145 + C88370 * (C89045 + C88370 * C89238))) /
        C88090;
    const double C23578 = C13402 * C23415;
    const double C29968 = C186 * C23415;
    const double C31680 = C89926 * C23415;
    const double C31841 = C13338 * C23415;
    const double C52026 = C38700 * C23415;
    const double C79431 = C55429 * C23415;
    const double C84654 = C38612 * C23415;
    const double C79432 = C55293 * C23630;
    const double C36114 = C36113 + C27673;
    const double C35945 = C35943 * C13338;
    const double C36058 = C36056 * C89926;
    const double C27364 = C1908 * C89783;
    const double C57158 = C1908 * C38609;
    const double C57149 = C1908 * C38610;
    const double C33950 = C33946 * C89783;
    const double C31687 = C31685 * C89783;
    const double C2581 = (C88514 + C88519 * C88216 + C88725 + C88725 +
                          C88370 * (2 * ae * C88392 + C88370 * C88526)) /
                         C88090;
    const double C4731 =
        (C88725 + C88327 * (ae * C88349 + C88370 * C88468)) / C88090;
    const double C2014 = C89937 * C1989;
    const double C2493 = C186 * C1989;
    const double C2597 = C273 * C1989;
    const double C26474 = C26161 * C1989;
    const double C29264 = C13338 * C1989;
    const double C29417 = C26160 * C1989;
    const double C57757 = C38616 * C1989;
    const double C57988 = C55429 * C1989;
    const double C59232 = C55293 * C1989;
    const double C3102 = C3101 * C89926;
    const double C39055 = C3101 * C38612;
    const double C515 = C309 * C186;
    const double C659 = C655 * C89937;
    const double C740 = C736 + C730;
    const double C1375 = C1090 * C186;
    const double C15609 = C1090 * C13338;
    const double C39658 = C1090 * C38616;
    const double C42010 = C1090 * C38700;
    const double C1569 = C1565 * C89937;
    const double C1675 = C1671 + C1664;
    const double C3338 = C3337 + C1666;
    const double C3098 = C2864 * C186;
    const double C39054 = C2864 * C38700;
    const double C41688 = C2864 * C38616;
    const double C3258 = C3257 * C89937;
    const double C4059 = C4058 + C2599;
    const double C3819 = C3585 * C186;
    const double C3979 = C3978 * C89937;
    const double C55826 = C3978 * C55293;
    const double C4737 = C4412 * C186;
    const double C42938 = C4412 * C38700;
    const double C43674 = C4412 * C38616;
    const double C5071 = C5069 + C5065;
    const double C1083 = C89937 * C1064;
    const double C2863 = C89937 * C1065;
    const double C15927 = C89783 * C1464;
    const double C40155 = C38610 * C1464;
    const double C42113 = C38610 * C1465;
    const double C6958 =
        (C88327 * C88876 + C88915 + C88915 +
         C88370 * (2 * ae * C88912 + C88370 * C88327 * C88212 * C88524)) /
        C88090;
    const double C8994 =
        (ae * C88340 + C88370 * C88865 + C88915 +
         C88327 * (ae * (C88370 * C88394 + C88262) +
                   C88327 * (C88355 + C88370 * C88212 * C88466))) /
        C88090;
    const double C6962 = C273 * C6490;
    const double C27154 = C26161 * C6490;
    const double C30183 = C13338 * C6490;
    const double C30289 = C186 * C6490;
    const double C30397 = C26160 * C6490;
    const double C40711 = C89937 * C6490;
    const double C41255 = C38700 * C6490;
    const double C46754 = C38616 * C6490;
    const double C60272 = C55293 * C6490;
    const double C61081 = C55429 * C6490;
    const double C89002 = C89001 + C88998;
    const double C15367 =
        (C88514 + C88519 * C88435 + C89125 + C89125 +
         C88370 * (2 * ae * C89080 + C88370 * (C88519 + C88524 * C88435))) /
        C88090;
    const double C17439 =
        (2 * (C89010 + C88327 * C89154) + C89125 +
         C88327 * (C89154 + ae * (C88370 * C88327 * C88388 + C89041) +
                   C88327 * (ae * (C88370 * C88388 + C88257) +
                             C88327 * (C88352 + C88370 * C88466)))) /
        C88090;
    const double C15370 = C273 * C14897;
    const double C19204 = C89937 * C14897;
    const double C19540 = C13338 * C14897;
    const double C27151 = C26161 * C14897;
    const double C34414 = C186 * C14897;
    const double C34493 = C26160 * C14897;
    const double C66406 = C55429 * C14897;
    const double C79637 = C38700 * C14897;
    const double C82114 = C55293 * C14897;
    const double C18955 = C18954 + C14638;
    const double C18625 = C18623 * C13338;
    const double C18848 = C18847 * C89937;
    const double C21972 = C21971 + C17775;
    const double C21498 = C21496 * C13338;
    const double C21817 = C21816 * C89937;
    const double C78654 = C21816 * C55293;
    const double C89341 = C89340 + C89337;
    const double C89541 = C89532 + C89537;
    const double C89394 = ae * C89391;
    const double C89393 = C88370 * C89391;
    const double C89525 = 3 * C89391;
    const double C32003 =
        (ae *
             (3 * C89391 +
              C88370 * (2 * C89294 +
                        C88370 * (C88388 + C88370 * (C88370 * C88401 + C88293) +
                                  C88370 * C88283 * ae) +
                        C89456 * ae) +
              (2 * C89385 + C88370 * C89456) * ae) +
         C88327 * (3 * C89266 + ae * (2 * C89260 + C88370 * C89457) +
                   C88370 * (2 * C89263 + ae * C89457 +
                             C88370 * (C88466 + ae * C88370 * C88358 +
                                       C88370 * (ae * C88358 +
                                                 C88370 * std::pow(C88218, 7) *
                                                     bs[7] * C88457))))) /
        C88090;
    const double C14061 = C1089 * C89783;
    const double C39657 = C1089 * C38609;
    const double C39648 = C1089 * C38610;
    const double C29035 = C29031 * C89926;
    const double C75546 = C29031 * C38611;
    const double C27586 = C27574 * C89926;
    const double C73726 = C27574 * C38611;
    const double C27588 = C27576 * C89926;
    const double C27690 = C27686 + C27677;
    const double C29112 = C2213 * C89783;
    const double C57532 = C2213 * C38610;
    const double C59449 = C2213 * C38609;
    const double C27693 = C27689 * C89783;
    const double C68530 = C27689 * C38609;
    const double C15930 = C15928 * C89937;
    const double C74951 = C15928 * C55292;
    const double C14476 = C14470 * C89937;
    const double C73078 = C14470 * C55292;
    const double C14477 = C14471 * C89937;
    const double C14653 = C14649 + C14640;
    const double C17787 = C17784 + C17777;
    const double C1680 = C1676 * C89926;
    const double C39274 = C1676 * C38612;
    const double C42318 = C1676 * C38611;
    const double C2613 = C2609 * C89926;
    const double C43240 = C2609 * C38611;
    const double C88107 = C88088 * C88099;
    const double C100 =
        (-(be * -2 * C88086) / C88090) / C88091 -
        ((2 * ((-C88086 / C88087) / C88091 - (C88098 * be) / C88087) -
          (C88088 * ((-4 * C88094) / C88087 - (C88088 * C88099) / C88087) *
           be) /
              C88087) *
         be) /
            C88087 -
        C88099 / (2 * C88090);
    const double C104 = (-C88099 / C88087) / (4 * C88090);
    const double C13337 = -C88099 / C88087;
    const double C38615 = (-C88099 / C88087) / C88091;
    const double C131 = C101 * C114;
    const double C130 = C101 * C113;
    const double C125 = C101 * C112;
    const double C863 = C101 * C839;
    const double C858 = C101 * C836;
    const double C855 = C101 * C838;
    const double C854 = C101 * C837;
    const double C1796 = C101 * C1772;
    const double C1791 = C101 * C1769;
    const double C1788 = C101 * C1771;
    const double C1787 = C101 * C1770;
    const double C4177 = C101 * C4164;
    const double C4172 = C101 * C4163;
    const double C5813 = C101 * C5806;
    const double C6335 = C101 * C6328;
    const double C8602 = C101 * C8595;
    const double C10630 = C101 * C10623;
    const double C129 = C103 * C114;
    const double C126 = C103 * C113;
    const double C856 = C103 * C839;
    const double C853 = C103 * C836;
    const double C1789 = C103 * C1772;
    const double C1786 = C103 * C1769;
    const double C4173 = C103 * C4164;
    const double C5812 = C103 * C5805;
    const double C6334 = C103 * C6327;
    const double C8601 = C103 * C8594;
    const double C10629 = C103 * C10622;
    const double C38626 = C38614 * C114;
    const double C38625 = C38614 * C113;
    const double C38623 = C38614 * C836;
    const double C38620 = C38614 * C837;
    const double C38618 = C38614 * C112;
    const double C39399 = C38614 * C5805;
    const double C39393 = C38614 * C839;
    const double C39386 = C38614 * C5806;
    const double C39384 = C38614 * C838;
    const double C39656 = C1088 * C38614;
    const double C39652 = C1087 * C38614;
    const double C39651 = C14068 * C38614;
    const double C39644 = C14066 * C38614;
    const double C39786 = C38614 * C941;
    const double C39782 = C38614 * C831;
    const double C39778 = C38614 * C938;
    const double C39774 = C38614 * C828;
    const double C39772 = C38614 * C830;
    const double C39768 = C38614 * C940;
    const double C39762 = C38614 * C939;
    const double C39758 = C38614 * C829;
    const double C40152 = C38614 * C1055;
    const double C40148 = C38614 * C1052;
    const double C40146 = C38614 * C1054;
    const double C40140 = C38614 * C1053;
    const double C40489 = C38614 * C1772;
    const double C40487 = C38614 * C6327;
    const double C40484 = C38614 * C4164;
    const double C40482 = C38614 * C1769;
    const double C40480 = C38614 * C6328;
    const double C40478 = C38614 * C1771;
    const double C40477 = C38614 * C1770;
    const double C40475 = C38614 * C4163;
    const double C41686 = C1085 * C38614;
    const double C41792 = C38614 * C937;
    const double C41788 = C38614 * C827;
    const double C42110 = C38614 * C1051;
    const double C43383 = C38614 * C8594;
    const double C43376 = C38614 * C8595;
    const double C43672 = C4410 * C38614;
    const double C43671 = C17103 * C38614;
    const double C43818 = C38614 * C4276;
    const double C43814 = C38614 * C4160;
    const double C43812 = C38614 * C4159;
    const double C43808 = C38614 * C4275;
    const double C44244 = C38614 * C4394;
    const double C44242 = C38614 * C4393;
    const double C45473 = C38614 * C13845;
    const double C45612 = C14071 * C38614;
    const double C45682 = C38614 * C5803;
    const double C45896 = C38614 * C5921;
    const double C46137 = C38614 * C14729;
    const double C46446 = C38614 * C6411;
    const double C46442 = C38614 * C6325;
    const double C46752 = C38614 * C6491;
    const double C49109 = C38614 * C16851;
    const double C49312 = C17101 * C38614;
    const double C49414 = C38614 * C8592;
    const double C49724 = C38614 * C8758;
    const double C51759 = C38614 * C10623;
    const double C51757 = C38614 * C23358;
    const double C57022 = C38614 * C10622;
    const double C57157 = C1907 * C38614;
    const double C57153 = C1906 * C38614;
    const double C57152 = C27371 * C38614;
    const double C57145 = C27369 * C38614;
    const double C57409 = C38614 * C1874;
    const double C57405 = C38614 * C1764;
    const double C57401 = C38614 * C1871;
    const double C57397 = C38614 * C1761;
    const double C57395 = C38614 * C1763;
    const double C57391 = C38614 * C1873;
    const double C57385 = C38614 * C1872;
    const double C57381 = C38614 * C1762;
    const double C57755 = C38614 * C1988;
    const double C57751 = C38614 * C1985;
    const double C57749 = C38614 * C1987;
    const double C57743 = C38614 * C1986;
    const double C59127 = C1904 * C38614;
    const double C59343 = C38614 * C1870;
    const double C59339 = C38614 * C1760;
    const double C59653 = C38614 * C1984;
    const double C60131 = C29640 * C38614;
    const double C62768 = C29642 * C38614;
    const double C68243 = C38614 * C27233;
    const double C68316 = C27374 * C38614;
    const double C68456 = C38614 * C10682;
    const double C68452 = C38614 * C10620;
    const double C18843 = C14474 + C14456;
    const double C14478 = C14451 + C14473;
    const double C21812 = C17567 + C17553;
    const double C36050 = C27581 + C27582;
    const double C27589 = C27579 + C27580;
    const double C88152 = C88121 * C88149;
    const double C13554 =
        (-(be * -2 * C88135) / C88090) / C88091 -
        ((2 * ((-C88135 / C88087) / C88091 - (C88148 * be) / C88087) -
          (C88121 * ((-4 * C88137) / C88087 - (C88121 * C88149) / C88087) *
           be) /
              C88087) *
         be) /
            C88087 -
        C88149 / (2 * C88090);
    const double C13556 = (-C88149 / C88087) / (4 * C88090);
    const double C38936 = (-C88149 / C88087) / C88091;
    const double C38718 = C38699 * C109;
    const double C38716 = C38699 * C108;
    const double C38712 = C38699 * C114;
    const double C38706 = C38699 * C113;
    const double C38702 = C38699 * C107;
    const double C38959 = C38699 * C191;
    const double C38953 = C38699 * C190;
    const double C38950 = C38699 * C189;
    const double C38941 = C38699 * C188;
    const double C38938 = C38699 * C187;
    const double C39052 = C308 * C38699;
    const double C39051 = C305 * C38699;
    const double C39044 = C303 * C38699;
    const double C39196 = C38699 * C277;
    const double C39194 = C38699 * C276;
    const double C39188 = C38699 * C275;
    const double C39534 = C38699 * C839;
    const double C39530 = C38699 * C831;
    const double C39528 = C38699 * C828;
    const double C39524 = C38699 * C836;
    const double C39923 = C38699 * C942;
    const double C39920 = C38699 * C937;
    const double C39915 = C38699 * C941;
    const double C39912 = C38699 * C940;
    const double C39911 = C38699 * C939;
    const double C39908 = C38699 * C938;
    const double C40038 = C1088 * C38699;
    const double C40037 = C1087 * C38699;
    const double C40266 = C38699 * C1055;
    const double C40264 = C38699 * C1052;
    const double C40600 = C38699 * C1772;
    const double C40596 = C38699 * C1764;
    const double C40594 = C38699 * C1761;
    const double C40590 = C38699 * C1769;
    const double C40931 = C38699 * C1875;
    const double C40928 = C38699 * C1870;
    const double C40923 = C38699 * C1874;
    const double C40920 = C38699 * C1873;
    const double C40919 = C38699 * C1872;
    const double C40916 = C38699 * C1871;
    const double C41045 = C2020 * C38699;
    const double C41253 = C38699 * C1988;
    const double C41251 = C38699 * C1985;
    const double C41576 = C38699 * C827;
    const double C41903 = C38699 * C943;
    const double C42008 = C1085 * C38699;
    const double C42214 = C38699 * C1051;
    const double C42520 = C38699 * C1760;
    const double C42831 = C38699 * C1876;
    const double C42936 = C2018 * C38699;
    const double C43136 = C38699 * C1984;
    const double C43530 = C38699 * C4164;
    const double C43526 = C38699 * C4160;
    const double C43969 = C38699 * C4277;
    const double C43963 = C38699 * C4276;
    const double C43960 = C38699 * C4275;
    const double C44106 = C4410 * C38699;
    const double C44382 = C38699 * C4394;
    const double C46555 = C38699 * C6411;
    const double C46553 = C38699 * C6410;
    const double C52027 = C38699 * C10682;
    const double C52025 = C38699 * C10681;
    const double C73507 = C38699 * C1763;
    const double C73503 = C38699 * C1771;
    const double C73497 = C38699 * C1770;
    const double C73493 = C38699 * C1762;
    const double C73725 = C27573 * C38699;
    const double C73721 = C27571 * C38699;
    const double C73720 = C27567 * C38699;
    const double C73713 = C27565 * C38699;
    const double C74147 = C38699 * C1987;
    const double C74141 = C38699 * C1986;
    const double C76307 = C38699 * C4163;
    const double C76303 = C38699 * C4159;
    const double C76587 = C17231 * C38699;
    const double C77139 = C38699 * C4393;
    const double C79001 = C38699 * C6328;
    const double C78997 = C38699 * C6325;
    const double C79217 = C19298 * C38699;
    const double C79324 = C38699 * C23415;
    const double C79635 = C38699 * C6491;
    const double C82005 = C38699 * C8595;
    const double C82001 = C38699 * C8592;
    const double C82221 = C17229 * C38699;
    const double C82639 = C38699 * C8758;
    const double C84655 = C38699 * C10623;
    const double C84651 = C38699 * C10620;
    const double C84795 = C27570 * C38699;
    const double C84870 = C38699 * C27344;
    const double C88178 = C88124 * C88175;
    const double C26462 =
        (-(be * -2 * C88161) / C88090) / C88091 -
        ((2 * ((-C88161 / C88087) / C88091 - (C88174 * be) / C88087) -
          (C88124 * ((-4 * C88163) / C88087 - (C88124 * C88175) / C88087) *
           be) /
              C88087) *
         be) /
            C88087 -
        C88175 / (2 * C88090);
    const double C26464 = (-C88175 / C88087) / (4 * C88090);
    const double C55893 = (-C88175 / C88087) / C88091;
    const double C55447 = C55428 * C109;
    const double C55445 = C55428 * C108;
    const double C55441 = C55428 * C114;
    const double C55435 = C55428 * C113;
    const double C55431 = C55428 * C107;
    const double C55673 = C55428 * C190;
    const double C55671 = C55428 * C189;
    const double C55665 = C55428 * C188;
    const double C55823 = C221 * C55428;
    const double C55822 = C218 * C55428;
    const double C55815 = C216 * C55428;
    const double C55916 = C55428 * C278;
    const double C55910 = C55428 * C277;
    const double C55907 = C55428 * C276;
    const double C55898 = C55428 * C275;
    const double C55895 = C55428 * C274;
    const double C56247 = C55428 * C839;
    const double C56243 = C55428 * C831;
    const double C56241 = C55428 * C828;
    const double C56237 = C55428 * C836;
    const double C56562 = C55428 * C941;
    const double C56560 = C55428 * C938;
    const double C56769 = C973 * C55428;
    const double C56894 = C55428 * C1056;
    const double C56891 = C55428 * C1051;
    const double C56886 = C55428 * C1055;
    const double C56883 = C55428 * C1054;
    const double C56882 = C55428 * C1053;
    const double C56879 = C55428 * C1052;
    const double C57271 = C55428 * C1772;
    const double C57267 = C55428 * C1764;
    const double C57265 = C55428 * C1761;
    const double C57261 = C55428 * C1769;
    const double C57637 = C55428 * C1874;
    const double C57635 = C55428 * C1871;
    const double C57869 = C1907 * C55428;
    const double C57868 = C1906 * C55428;
    const double C57990 = C55428 * C1989;
    const double C57987 = C55428 * C1984;
    const double C57982 = C55428 * C1988;
    const double C57979 = C55428 * C1987;
    const double C57978 = C55428 * C1986;
    const double C57975 = C55428 * C1985;
    const double C58297 = C55428 * C827;
    const double C58603 = C55428 * C937;
    const double C58805 = C971 * C55428;
    const double C58912 = C55428 * C1057;
    const double C59229 = C55428 * C1760;
    const double C59549 = C55428 * C1870;
    const double C59757 = C1904 * C55428;
    const double C59864 = C55428 * C1990;
    const double C60273 = C55428 * C4164;
    const double C60269 = C55428 * C4160;
    const double C60675 = C55428 * C4276;
    const double C61084 = C55428 * C4395;
    const double C61078 = C55428 * C4394;
    const double C61075 = C55428 * C4393;
    const double C62571 = C55428 * C5921;
    const double C62569 = C55428 * C5920;
    const double C63463 = C55428 * C6491;
    const double C63461 = C55428 * C6490;
    const double C66407 = C55428 * C8758;
    const double C66405 = C55428 * C8757;
    const double C72651 = C55428 * C830;
    const double C72647 = C55428 * C838;
    const double C72641 = C55428 * C837;
    const double C72637 = C55428 * C829;
    const double C72961 = C55428 * C940;
    const double C72955 = C55428 * C939;
    const double C73077 = C14192 * C55428;
    const double C73073 = C14190 * C55428;
    const double C73072 = C14186 * C55428;
    const double C73065 = C14184 * C55428;
    const double C76451 = C55428 * C4159;
    const double C76447 = C55428 * C4163;
    const double C76867 = C55428 * C4275;
    const double C77004 = C17231 * C55428;
    const double C78371 = C55428 * C5806;
    const double C78367 = C55428 * C5803;
    const double C78651 = C14189 * C55428;
    const double C78792 = C55428 * C14041;
    const double C79111 = C55428 * C6328;
    const double C79107 = C55428 * C6325;
    const double C79429 = C55428 * C6411;
    const double C79533 = C19298 * C55428;
    const double C79744 = C55428 * C14897;
    const double C82115 = C55428 * C8595;
    const double C82111 = C55428 * C8592;
    const double C82537 = C17229 * C55428;
    const double C82748 = C55428 * C17081;
    const double C4954 = C4949 + C4950;
    const double C41257 = C41249 + C41250;
    const double C1556 = C974 * C273;
    const double C56770 = C974 * C55428;
    const double C1278 = C1274 + C1265;
    const double C1384 = C1380 * C89926;
    const double C40039 = C1380 * C38611;
    const double C40034 = C1380 * C38612;
    const double C4948 = C4292 * C273;
    const double C29634 = C4292 * C13338;
    const double C56767 = C4292 * C55429;
    const double C60135 = C4292 * C38614;
    const double C60133 = C4292 * C38616;
    const double C60941 = C4292 * C55428;
    const double C4628 = C4626 + C4620;
    const double C4740 = C4735 + C4736;
    const double C56566 = C56558 + C56559;
    const double C2305 = C2021 * C186;
    const double C41046 = C2021 * C38699;
    const double C2501 = C2497 * C89937;
    const double C57870 = C2497 * C55292;
    const double C57865 = C2497 * C55293;
    const double C2607 = C2603 + C2594;
    const double C1682 = C1678 * C89926;
    const double C40374 = C1678 * C38611;
    const double C40372 = C1678 * C38612;
    const double C27675 = C2215 * C89783;
    const double C57533 = C2215 * C38609;
    const double C57529 = C2215 * C38610;
    const double C5074 = C5072 * C89926;
    const double C41359 = C5072 * C38612;
    const double C44518 = C5072 * C38611;
    const double C121 =
        (2 * (2 * ae * C88224 + C88212 * C88241) + C88247 + C88247 +
         C88212 * (C88241 + C88244 + C88244 +
                   C88212 * (2 * ae * C88237 +
                             C88212 *
                                 (C88230 * C88231 +
                                  C88216 * bs[5] * std::pow(C88218, 5)) *
                                 C88219))) /
        C88090;
    const double C945 =
        (C88247 + C88327 * (C88337 + ae * C88340 + C88212 * C88348)) / C88090;
    const double C1165 =
        (C88247 + C88327 * (C88418 + ae * C88340 + C88212 * C88423)) / C88090;
    const double C1992 =
        (C88247 + C88370 * (C88380 + ae * C88383 + C88212 * C88391)) / C88090;
    const double C2392 =
        (C88247 + C88370 * (C88476 + ae * C88383 + C88212 * C88481)) / C88090;
    const double C136 = C101 * C115;
    const double C132 = C103 * C115;
    const double C128 = C105 * C115;
    const double C208 = C186 * C115;
    const double C295 = C273 * C115;
    const double C13351 = C13338 * C115;
    const double C38633 = C38614 * C115;
    const double C38627 = C38616 * C115;
    const double C38722 = C38699 * C115;
    const double C55451 = C55428 * C115;
    const double C859 = C103 * C835;
    const double C852 = C105 * C835;
    const double C954 = C186 * C835;
    const double C1068 = C273 * C835;
    const double C2701 = C101 * C835;
    const double C13347 = C13338 * C835;
    const double C15686 = C89783 * C835;
    const double C38628 = C38614 * C835;
    const double C38622 = C38616 * C835;
    const double C38710 = C38700 * C835;
    const double C39777 = C38610 * C835;
    const double C41580 = C38699 * C835;
    const double C41789 = C38609 * C835;
    const double C58301 = C55428 * C835;
    const double C1792 = C103 * C1768;
    const double C1785 = C105 * C1768;
    const double C1887 = C186 * C1768;
    const double C2001 = C273 * C1768;
    const double C3422 = C101 * C1768;
    const double C16156 = C13338 * C1768;
    const double C29023 = C89783 * C1768;
    const double C40483 = C38616 * C1768;
    const double C42421 = C38614 * C1768;
    const double C42524 = C38699 * C1768;
    const double C55439 = C55429 * C1768;
    const double C57400 = C38610 * C1768;
    const double C59233 = C55428 * C1768;
    const double C59340 = C38609 * C1768;
    const double C975 = C964 + C965;
    const double C39538 = C39522 + C39523;
    const double C14193 = C14178 + C14179;
    const double C39794 = C39766 + C39767;
    const double C4411 = C4404 + C4405;
    const double C56251 = C56235 + C56236;
    const double C17565 = C17558 + C17559;
    const double C44248 = C44240 + C44241;
    const double C29635 = C4293 * C89783;
    const double C60136 = C4293 * C38609;
    const double C60134 = C4293 * C38610;
    const double C17557 = C17232 * C273;
    const double C29855 = C17232 * C186;
    const double C73075 = C17232 * C55429;
    const double C73723 = C17232 * C38700;
    const double C76591 = C17232 * C38699;
    const double C77005 = C17232 * C55428;
    const double C2022 = C2011 + C2012;
    const double C57275 = C57259 + C57260;
    const double C27863 = C27855 + C27856;
    const double C57761 = C57747 + C57748;
    const double C17233 = C17222 + C17223;
    const double C43822 = C43806 + C43807;
    const double C6030 =
        (2 * (2 * ae * C88333 + C88327 * C88440) + C88862 + C88862 +
         C88327 * (C88440 + C88859 + C88859 +
                   C88327 * (2 * C88341 + C88327 * C88445))) /
        C88090;
    const double C9149 =
        (C88862 + C88370 * (C88497 + ae * C88917 +
                            C88327 * (C88384 + C88327 * C88500))) /
        C88090;
    const double C6034 = C186 * C5865;
    const double C14168 = C13338 * C5865;
    const double C14276 = C13402 * C5865;
    const double C14272 = C13403 * C5865;
    const double C14364 = C273 * C5865;
    const double C18737 = C13401 * C5865;
    const double C39913 = C38700 * C5865;
    const double C45686 = C38614 * C5865;
    const double C45763 = C38699 * C5865;
    const double C78579 = C55428 * C5865;
    const double C8919 = C186 * C8678;
    const double C15054 = C13403 * C8678;
    const double C17212 = C13338 * C8678;
    const double C17337 = C13402 * C8678;
    const double C17442 = C273 * C8678;
    const double C21658 = C13401 * C8678;
    const double C33936 = C89926 * C8678;
    const double C43961 = C38700 * C8678;
    const double C49418 = C38614 * C8678;
    const double C49527 = C38699 * C8678;
    const double C72959 = C55429 * C8678;
    const double C76306 = C38612 * C8678;
    const double C82002 = C38611 * C8678;
    const double C82433 = C55428 * C8678;
    const double C11062 =
        (2 * (2 * ae * C88376 + C88370 * C88514) + C89013 + C89013 +
         C88370 * (C88514 + C89010 + C89010 +
                   C88370 * (2 * C88384 + C88370 * C88519))) /
        C88090;
    const double C11066 = C273 * C10738;
    const double C27851 = C13338 * C10738;
    const double C27945 = C186 * C10738;
    const double C28033 = C26160 * C10738;
    const double C28029 = C26161 * C10738;
    const double C36329 = C26159 * C10738;
    const double C57980 = C55429 * C10738;
    const double C68664 = C38614 * C10738;
    const double C68805 = C55428 * C10738;
    const double C85075 = C38699 * C10738;
    const double C19703 = C19701 + C6963;
    const double C19211 = C19207 * C13338;
    const double C46340 = C19207 * C38614;
    const double C19544 = C19542 * C89937;
    const double C77001 = C19542 * C55293;
    const double C79534 = C19542 * C55292;
    const double C29979 = C29976 + C29965;
    const double C29980 = C29977 + C29967;
    const double C31843 = C29854 + C29853;
    const double C31683 = C29649 + C29648;
    const double C4281 = (C88370 * (C88276 + C88327 * C88366)) / C88090;
    const double C88277 = C88253 + C88275;
    const double C88542 = ae * C88540;
    const double C4165 = (C88370 * C88540) / C88087;
    const double C88644 = ae * C88642;
    const double C862 = C103 * C840;
    const double C857 = C105 * C840;
    const double C968 = C186 * C840;
    const double C1082 = C273 * C840;
    const double C13348 = C13338 * C840;
    const double C15690 = C89783 * C840;
    const double C39396 = C38616 * C840;
    const double C39785 = C38610 * C840;
    const double C41471 = C38614 * C840;
    const double C41582 = C38700 * C840;
    const double C1795 = C103 * C1773;
    const double C1790 = C105 * C1773;
    const double C1901 = C186 * C1773;
    const double C2015 = C273 * C1773;
    const double C26057 = C13338 * C1773;
    const double C29027 = C89783 * C1773;
    const double C40488 = C38616 * C1773;
    const double C57408 = C38610 * C1773;
    const double C59022 = C38614 * C1773;
    const double C59235 = C55429 * C1773;
    const double C15449 = C89783 * C848;
    const double C39397 = C38610 * C848;
    const double C39537 = C38612 * C5867;
    const double C14183 = C89783 * C5976;
    const double C45689 = C38610 * C5976;
    const double C17099 = C89937 * C8760;
    const double C56250 = C55293 * C8760;
    const double C17562 = C89783 * C9071;
    const double C49727 = C38610 * C9071;
    const double C14073 = C14064 + C14065;
    const double C14194 = C14180 + C14181;
    const double C45691 = C45684 + C45685;
    const double C17234 = C17224 + C17225;
    const double C49423 = C49416 + C49417;
    const double C43537 = C43532 + C43533;
    const double C56136 = C56133 + C56134;
    const double C43381 = C38610 * C4169;
    const double C74351 = C89783 * C4169;
    const double C40713 = C89937 * C6493;
    const double C60276 = C55293 * C6493;
    const double C30184 = C89783 * C6804;
    const double C46755 = C38610 * C6804;
    const double C17227 = C89783 * C8837;
    const double C49421 = C38610 * C8837;
    const double C29651 = C29645 * C89783;
    const double C62771 = C29645 * C38610;
    const double C29863 = C29861 * C186;
    const double C73727 = C29861 * C38700;
    const double C77007 = C29861 * C55429;
    const double C28788 = C89783 * C1781;
    const double C57020 = C38610 * C1781;
    const double C29860 = C89783 * C6570;
    const double C46449 = C38610 * C6570;
    const double C57274 = C55293 * C10740;
    const double C27858 = C89783 * C10955;
    const double C68667 = C38610 * C10955;
    const double C27376 = C27367 + C27368;
    const double C27575 = C27561 + C27562;
    const double C68461 = C68454 + C68455;
    const double C88596 = ae * C88595;
    const double C944 = (2 * C88340 + C88212 * C88349 + C88327 * C88595 +
                         C88327 * C88306 * ae) /
                        C88087;
    const double C4278 = (C88370 * C88595) / C88087;
    const double C88730 = ae * C88729;
    const double C1991 = (2 * C88383 + C88212 * C88392 + C88370 * C88729 +
                          C88370 * C88306 * ae) /
                         C88087;
    const double C88840 = C88839 + C88836;
    const double C8913 =
        (C88370 * C88452 + C88937 + C88937 +
         C88327 * (2 * ae * C88370 * C88363 +
                   C88327 * C88370 *
                       (C88450 + (C88284 * C88285 +
                                  C88435 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88216))) /
        C88090;
    const double C88992 = C88991 + C88988;
    const double C6957 =
        (C88327 * C88526 + C88910 + C88910 +
         C88370 * (2 * ae * C88907 +
                   C88370 * C88327 *
                       (C88524 + (C88284 * C88285 +
                                  C88509 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88216))) /
        C88090;
    const double C8993 =
        (ae * C88349 + C88370 * C88468 + C88910 +
         C88327 * (ae * (C88370 * C88406 + C88302) +
                   C88327 * (ae * C88363 +
                             C88370 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C6961 = C273 * C6489;
    const double C28708 = C26161 * C6489;
    const double C61083 = C55429 * C6489;
    const double C89072 = ae * C89070;
    const double C89071 = C88327 * C89070;
    const double C89148 = C88370 * C89070;
    const double C15052 =
        (C88843 + C89055 * C88509 + C89115 + C89115 +
         C88327 *
             (2 * ae * (C88351 + C89057 * C88509) +
              C88327 * (C89055 + C88212 *
                                     (C88284 * C88285 +
                                      C88435 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88509))) /
        C88090;
    const double C30283 =
        (2 * (C88849 + C88370 * C89096) + C89115 +
         C88370 * (C89096 + C89151 +
                   C88370 * (C89068 +
                             C88370 * (ae * C89083 + C88327 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88494)))) /
        C88090;
    const double C29972 = C186 * C29623;
    const double C52024 = C38700 * C29623;
    const double C89415 = ae * C89413;
    const double C89414 = C88370 * C89413;
    const double C15368 =
        (C88876 + C89099 * C88435 + C89129 + C89129 +
         C88370 *
             (2 * ae * C89087 +
              C88370 * (C89099 + C88212 *
                                     (C88284 * C88285 +
                                      C88509 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88435))) /
        C88090;
    const double C17440 =
        (2 * (C89000 + C88327 * C89157) + C89129 +
         C88327 * (C89157 + ae * (C88370 * C88327 * C89083 + C89062) +
                   C88327 * (ae * (C88370 * C89083 + C88298) +
                             C88327 * (ae * C89057 + C88370 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88457)))) /
        C88090;
    const double C15371 = C273 * C14898;
    const double C27155 = C26161 * C14898;
    const double C66404 = C55429 * C14898;
    const double C89439 = C89438 + C89434;
    const double C6412 =
        (C88276 + C88327 * C88366 +
         (C88317 +
          C88327 * (C88356 + ae * C88212 * C88358 +
                    C88212 * (ae * C88358 +
                              C88212 * std::pow(C88218, 7) * bs[7] * C88331))) *
             C88509) /
        C88090;
    const double C88318 = C88287 + C88316;
    const double C88549 = C88274 + C88546;
    const double C88651 = C88274 + C88648;
    const double C88740 = ae * C88735;
    const double C88780 = C88370 * C88735;
    const double C6326 = (C88540 + C88735 * C88509) / C88087;
    const double C88761 = ae * C88756;
    const double C88820 = ae * C88819;
    const double C13846 = (3 * C88536 + C88327 * C88819) / C88087;
    const double C16852 = (C88370 * C88819) / C88087;
    const double C8596 =
        (C88370 * C88548 + C88923 + C88923 +
         C88212 * (2 * ae * C88370 * (C88261 + C88297 * C88435) +
                   C88212 * C88370 *
                       (C88304 + (C88284 * C88285 +
                                  C88216 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88435))) /
        C88090;
    const double C14900 =
        (C88391 + C88405 * C88435 + C88923 +
         C88370 * (C88552 + C88370 * (C88405 + (ae * C88401 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374) *
                                                   C88435))) /
        C88090;
    const double C15216 =
        (C88481 + C88487 * C88435 + C88923 +
         C88370 * (C88552 + C88370 * (C88487 + (ae * C88401 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473) *
                                                   C88435))) /
        C88090;
    const double C17210 =
        (2 * (C88645 + C88327 * C89139) + C88923 +
         C88327 * (C89139 + C88783 +
                   C88327 * (C88762 +
                             C88327 * C88370 *
                                 (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415)))) /
        C88090;
    const double C88960 = ae * C88959;
    const double C27234 = (3 * C88638 + C88370 * C88959) / C88087;
    const double C6329 =
        (C88539 + C88733 * C88509 + C88881 + C88881 +
         C88212 *
             (2 * ae * (C88732 + C88327 * C88297 * C88509) +
              C88212 * (C88733 + C88327 *
                                     (C88284 * C88285 +
                                      C88216 * bs[7] * std::pow(C88218, 7)) *
                                     C88219 * C88509))) /
        C88090;
    const double C14976 =
        (C88423 + C88429 * C88509 + C88881 +
         C88327 * (C88654 + C88327 * (C88429 + (ae * C88358 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415) *
                                                   C88509))) /
        C88090;
    const double C29750 =
        (2 * (C88543 + C88370 * C89422) + C88881 +
         C88370 * (C89422 + C88783 +
                   C88370 * (C88741 +
                             C88370 * C88327 *
                                 (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374)))) /
        C88090;
    const double C30181 =
        (2 * (C88543 + C88370 * C89427) + C88881 +
         C88370 * (C89427 + C88783 +
                   C88370 * (C88741 +
                             C88370 * C88327 *
                                 (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473)))) /
        C88090;
    const double C29522 = C13338 * C29517;
    const double C51756 = C38616 * C29517;
    const double C89212 = C89190 + C89210;
    const double C89255 = C89047 + C89252;
    const double C89288 = ae * C89284;
    const double C89313 = ae * C89312;
    const double C31676 = (3 * C89110 + C88370 * C89312) / C88087;
    const double C89546 = C89526 + C89544;
    const double C89272 = ae * C89271;
    const double C19196 = (2 * C88917 + C88327 * C89080 + C88370 * C89271 +
                           C88370 * C89207 * ae) /
                          C88087;
    const double C89330 = C89329 + C89326;
    const double C89484 = ae * C89482;
    const double C89483 = C88370 * C89482;
    const double C1269 = C89926 * C1252;
    const double C41901 = C38612 * C1252;
    const double C4953 = C89926 * C4945;
    const double C43139 = C38612 * C4945;
    const double C976 = C966 + C967;
    const double C1275 = C1267 + C1268;
    const double C1381 = C1376 + C1377;
    const double C41585 = C41578 + C41579;
    const double C4294 = C4288 + C4289;
    const double C4627 = C4622 + C4623;
    const double C42529 = C42522 + C42523;
    const double C449 = C445 + C436;
    const double C3021 = C3020 + C3017;
    const double C2216 = C2212 + C2202;
    const double C3742 = C3741 + C3738;
    const double C29033 = C29028 + C29029;
    const double C57428 = C57411 + C57412;
    const double C59350 = C59345 + C59346;
    const double C88852 = ae * C88851;
    const double C5864 =
        (2 * C88586 + C88327 * C88851 + (C88235 + C88258 * C88435) * ae) /
        C88087;
    const double C8677 = (C88370 * C88851) / C88087;
    const double C14820 = (C88851 + C89070 * C88509) / C88087;
    const double C43967 = C38612 * C8914;
    const double C56456 = C89926 * C8914;
    const double C29978 = C29975 + C6651;
    const double C29650 = C29644 * C13338;
    const double C60943 = C29644 * C55429;
    const double C62770 = C29644 * C38616;
    const double C41052 = C41051 * C38612;
    const double C15291 =
        (C88497 + ae * C88917 + C88327 * C89092 + ae * C88370 * C89047 +
         C88370 * (C89049 + C88370 * (C88500 + ae * C88327 * C88388 +
                                      C88327 * (C88395 + C88327 * C88503)))) /
        C88090;
    const double C89050 = C89035 + C89048;
    const double C89144 = ae * C89142;
    const double C15059 = C13403 * C14819;
    const double C19296 = C13338 * C14819;
    const double C19378 = C13402 * C14819;
    const double C19457 = C273 * C14819;
    const double C26848 = C186 * C14819;
    const double C33940 = C89926 * C14819;
    const double C46554 = C38700 * C14819;
    const double C79000 = C38612 * C14819;
    const double C82328 = C38699 * C14819;
    const double C82435 = C55429 * C14819;
    const double C34180 = C89926 * C15051;
    const double C79322 = C38612 * C15051;
    const double C32159 = C89926 * C23734;
    const double C85078 = C38612 * C23734;
    const double C31926 = C31923 + C29968;
    const double C31684 = C31679 + C31680;
    const double C31845 = C31841 + C31842;
    const double C84660 = C84653 + C84654;
    const double C79434 = C79431 + C79432;
    const double C36115 = C36114 + C36111;
    const double C27377 = C27364 + C27363;
    const double C2598 = C89937 * C2581;
    const double C59862 = C55293 * C2581;
    const double C4739 = C89937 * C4731;
    const double C58606 = C55293 * C4731;
    const double C2023 = C2013 + C2014;
    const double C2498 = C2493 + C2494;
    const double C2604 = C2596 + C2597;
    const double C59238 = C59231 + C59232;
    const double C744 = C740 + C731;
    const double C1679 = C1675 + C1665;
    const double C3339 = C3338 + C3335;
    const double C4060 = C4059 + C4056;
    const double C5073 = C5071 + C5066;
    const double C15929 = C15926 + C15927;
    const double C40163 = C40154 + C40155;
    const double C42115 = C42112 + C42113;
    const double C41363 = C89937 * C6958;
    const double C61082 = C55293 * C6958;
    const double C17447 = C89937 * C8994;
    const double C56565 = C55293 * C8994;
    const double C41364 = C41362 + C6962;
    const double C30293 = C30289 + C30290;
    const double C40714 = C40710 + C40711;
    const double C41260 = C41255 + C41256;
    const double C60278 = C60271 + C60272;
    const double C89003 = ae * C89002;
    const double C10737 =
        (2 * C88720 + C88370 * C89002 + (C88235 + C88258 * C88509) * ae) /
        C88087;
    const double C19699 = C89937 * C15367;
    const double C82746 = C55293 * C15367;
    const double C21735 = C89937 * C17439;
    const double C78582 = C55293 * C17439;
    const double C19702 = C19698 + C15370;
    const double C19209 = C19203 + C19204;
    const double C19543 = C19540 + C19541;
    const double C82120 = C82113 + C82114;
    const double C18956 = C18955 + C18952;
    const double C21973 = C21972 + C21969;
    const double C89342 = ae * C89341;
    const double C23469 =
        (2 * C88919 + C88370 * C89341 + (C88855 + C89037 * C88509) * ae) /
        C88087;
    const double C89395 = C89383 + C89393;
    const double C14074 = C14061 + C14060;
    const double C27590 = C27586 + C27585;
    const double C27694 = C27690 * C89783;
    const double C68531 = C27690 * C38610;
    const double C14479 = C14476 + C14460;
    const double C40375 = C14653 * C38612;
    const double C44519 = C17787 * C38612;
    const double C102 =
        (-(((-4 * C88094) / C88087 - C88107 / C88087) * be) / C88087) / C88091 -
        ((2 * ((-C88095 / C88087) / C88091 - (0 * be) / C88087) -
          C88107 / (2 * C88090)) *
         be) /
            C88087;
    const double C38613 =
        -(((-4 * C88094) / C88087 - C88107 / C88087) * be) / C88087;
    const double C13862 = C13337 * C5802;
    const double C13860 = C13337 * C831;
    const double C13858 = C13337 * C828;
    const double C13854 = C13337 * C5803;
    const double C13852 = C13337 * C830;
    const double C13850 = C13337 * C829;
    const double C15448 = C13337 * C832;
    const double C15446 = C13337 * C827;
    const double C16863 = C13337 * C8591;
    const double C16861 = C13337 * C4160;
    const double C16858 = C13337 * C4159;
    const double C16856 = C13337 * C8592;
    const double C18507 = C13337 * C13843;
    const double C19036 = C13337 * C14727;
    const double C19034 = C13337 * C6325;
    const double C21332 = C13337 * C16849;
    const double C27249 = C13337 * C10619;
    const double C27247 = C13337 * C1764;
    const double C27245 = C13337 * C1761;
    const double C27242 = C13337 * C10620;
    const double C27240 = C13337 * C1763;
    const double C27238 = C13337 * C1762;
    const double C28787 = C13337 * C1765;
    const double C28785 = C13337 * C1760;
    const double C29520 = C13337 * C6324;
    const double C31597 = C13337 * C23356;
    const double C35880 = C13337 * C27231;
    const double C74350 = C13337 * C4161;
    const double C39395 = C38615 * C832;
    const double C39390 = C38615 * C827;
    const double C39380 = C38615 * C831;
    const double C39378 = C38615 * C828;
    const double C41468 = C38615 * C833;
    const double C43380 = C38615 * C4161;
    const double C43372 = C38615 * C4160;
    const double C45470 = C38615 * C5802;
    const double C46134 = C38615 * C6324;
    const double C49106 = C38615 * C8591;
    const double C57019 = C38615 * C1765;
    const double C57015 = C38615 * C1760;
    const double C57009 = C38615 * C1764;
    const double C57007 = C38615 * C1761;
    const double C59019 = C38615 * C1766;
    const double C68240 = C38615 * C10619;
    const double C39804 = C39786 + C39787;
    const double C39802 = C39782 + C39783;
    const double C39800 = C39778 + C39779;
    const double C39798 = C39774 + C39775;
    const double C39797 = C39772 + C39773;
    const double C39795 = C39768 + C39769;
    const double C39792 = C39762 + C39763;
    const double C39790 = C39758 + C39759;
    const double C40162 = C40152 + C40153;
    const double C40160 = C40148 + C40149;
    const double C40159 = C40146 + C40147;
    const double C40156 = C40140 + C40141;
    const double C42114 = C42110 + C42111;
    const double C43828 = C43818 + C43819;
    const double C43826 = C43814 + C43815;
    const double C43825 = C43812 + C43813;
    const double C43823 = C43808 + C43809;
    const double C44250 = C44244 + C44245;
    const double C44249 = C44242 + C44243;
    const double C45690 = C45682 + C45683;
    const double C45900 = C45896 + C45897;
    const double C46452 = C46446 + C46447;
    const double C46450 = C46442 + C46443;
    const double C46756 = C46752 + C46753;
    const double C49422 = C49414 + C49415;
    const double C49728 = C49724 + C49725;
    const double C57427 = C57409 + C57410;
    const double C57425 = C57405 + C57406;
    const double C57423 = C57401 + C57402;
    const double C57421 = C57397 + C57398;
    const double C57420 = C57395 + C57396;
    const double C57418 = C57391 + C57392;
    const double C57415 = C57385 + C57386;
    const double C57413 = C57381 + C57382;
    const double C57765 = C57755 + C57756;
    const double C57763 = C57751 + C57752;
    const double C57762 = C57749 + C57750;
    const double C57759 = C57743 + C57744;
    const double C59349 = C59343 + C59344;
    const double C68462 = C68456 + C68457;
    const double C68460 = C68452 + C68453;
    const double C13555 =
        (-(((-4 * C88137) / C88087 - C88152 / C88087) * be) / C88087) / C88091 -
        ((2 * ((-C88138 / C88087) / C88091 - (0 * be) / C88087) -
          C88152 / (2 * C88090)) *
         be) /
            C88087;
    const double C38935 =
        -(((-4 * C88137) / C88087 - C88152 / C88087) * be) / C88087;
    const double C38955 = C38936 * C833;
    const double C38946 = C38936 * C827;
    const double C38943 = C38936 * C828;
    const double C39917 = C38936 * C5802;
    const double C39904 = C38936 * C831;
    const double C40925 = C38936 * C6324;
    const double C40912 = C38936 * C4160;
    const double C41900 = C38936 * C832;
    const double C42828 = C38936 * C4161;
    const double C43965 = C38936 * C8591;
    const double C73831 = C38936 * C6325;
    const double C73829 = C38936 * C4159;
    const double C76727 = C38936 * C8592;
    const double C79321 = C38936 * C14727;
    const double C82325 = C38936 * C16849;
    const double C84867 = C38936 * C23356;
    const double C38734 = C38718 + C38719;
    const double C38733 = C38716 + C38717;
    const double C38731 = C38712 + C38713;
    const double C38728 = C38706 + C38707;
    const double C38726 = C38702 + C38703;
    const double C39204 = C39196 + C39197;
    const double C39203 = C39194 + C39195;
    const double C39200 = C39188 + C39189;
    const double C39544 = C39534 + C39535;
    const double C39542 = C39530 + C39531;
    const double C39541 = C39528 + C39529;
    const double C39539 = C39524 + C39525;
    const double C40272 = C40266 + C40267;
    const double C40271 = C40264 + C40265;
    const double C40610 = C40600 + C40601;
    const double C40608 = C40596 + C40597;
    const double C40607 = C40594 + C40595;
    const double C40605 = C40590 + C40591;
    const double C41259 = C41253 + C41254;
    const double C41258 = C41251 + C41252;
    const double C41584 = C41576 + C41577;
    const double C42218 = C42214 + C42215;
    const double C42528 = C42520 + C42521;
    const double C43140 = C43136 + C43137;
    const double C43536 = C43530 + C43531;
    const double C43534 = C43526 + C43527;
    const double C44386 = C44382 + C44383;
    const double C73516 = C73507 + C73508;
    const double C73514 = C73503 + C73504;
    const double C73511 = C73497 + C73498;
    const double C73509 = C73493 + C73494;
    const double C74152 = C74147 + C74148;
    const double C74149 = C74141 + C74142;
    const double C76313 = C76307 + C76308;
    const double C76311 = C76303 + C76304;
    const double C77143 = C77139 + C77140;
    const double C79007 = C79001 + C79002;
    const double C79005 = C78997 + C78998;
    const double C79639 = C79635 + C79636;
    const double C82011 = C82005 + C82006;
    const double C84661 = C84655 + C84656;
    const double C84659 = C84651 + C84652;
    const double C26463 =
        (-(((-4 * C88163) / C88087 - C88178 / C88087) * be) / C88087) / C88091 -
        ((2 * ((-C88164 / C88087) / C88091 - (0 * be) / C88087) -
          C88178 / (2 * C88090)) *
         be) /
            C88087;
    const double C55892 =
        -(((-4 * C88163) / C88087 - C88178 / C88087) * be) / C88087;
    const double C55912 = C55893 * C1766;
    const double C55903 = C55893 * C1760;
    const double C55900 = C55893 * C1761;
    const double C56888 = C55893 * C8591;
    const double C56875 = C55893 * C4160;
    const double C57984 = C55893 * C10619;
    const double C57971 = C55893 * C1764;
    const double C58909 = C55893 * C4161;
    const double C59861 = C55893 * C1765;
    const double C61080 = C55893 * C6324;
    const double C73281 = C55893 * C8592;
    const double C73279 = C55893 * C4159;
    const double C77275 = C55893 * C6325;
    const double C78789 = C55893 * C16849;
    const double C79741 = C55893 * C23356;
    const double C82745 = C55893 * C14727;
    const double C55463 = C55447 + C55448;
    const double C55462 = C55445 + C55446;
    const double C55460 = C55441 + C55442;
    const double C55457 = C55435 + C55436;
    const double C55455 = C55431 + C55432;
    const double C55681 = C55673 + C55674;
    const double C55680 = C55671 + C55672;
    const double C55677 = C55665 + C55666;
    const double C56257 = C56247 + C56248;
    const double C56255 = C56243 + C56244;
    const double C56254 = C56241 + C56242;
    const double C56252 = C56237 + C56238;
    const double C56568 = C56562 + C56563;
    const double C56567 = C56560 + C56561;
    const double C57281 = C57271 + C57272;
    const double C57279 = C57267 + C57268;
    const double C57278 = C57265 + C57266;
    const double C57276 = C57261 + C57262;
    const double C57643 = C57637 + C57638;
    const double C57642 = C57635 + C57636;
    const double C58305 = C58297 + C58298;
    const double C58607 = C58603 + C58604;
    const double C59237 = C59229 + C59230;
    const double C59553 = C59549 + C59550;
    const double C60279 = C60273 + C60274;
    const double C60277 = C60269 + C60270;
    const double C60679 = C60675 + C60676;
    const double C72660 = C72651 + C72652;
    const double C72658 = C72647 + C72648;
    const double C72655 = C72641 + C72642;
    const double C72653 = C72637 + C72638;
    const double C72966 = C72961 + C72962;
    const double C72963 = C72955 + C72956;
    const double C76456 = C76451 + C76452;
    const double C76454 = C76447 + C76448;
    const double C76870 = C76867 + C76868;
    const double C78377 = C78371 + C78372;
    const double C78375 = C78367 + C78368;
    const double C79117 = C79111 + C79112;
    const double C79115 = C79107 + C79108;
    const double C79433 = C79429 + C79430;
    const double C82121 = C82115 + C82116;
    const double C82119 = C82111 + C82112;
    const double C4956 = C4954 * C89937;
    const double C56766 = C4954 * C55293;
    const double C60942 = C4954 * C55292;
    const double C1282 = C1278 + C1266;
    const double C4630 = C4628 + C4621;
    const double C4742 = C4740 * C89926;
    const double C41042 = C4740 * C38612;
    const double C44107 = C4740 * C38611;
    const double C2611 = C2607 + C2595;
    const double C955 = C89926 * C945;
    const double C38711 = C38612 * C945;
    const double C41581 = C38611 * C945;
    const double C15688 = C89783 * C1165;
    const double C39781 = C38610 * C1165;
    const double C41793 = C38609 * C1165;
    const double C2002 = C89937 * C1992;
    const double C55440 = C55293 * C1992;
    const double C59234 = C55292 * C1992;
    const double C29263 = C89783 * C2392;
    const double C57754 = C38610 * C2392;
    const double C59654 = C38609 * C2392;
    const double C220 = C208 + C209;
    const double C307 = C295 + C296;
    const double C38736 = C38722 + C38723;
    const double C55465 = C55451 + C55452;
    const double C1084 = C1068 + C1069;
    const double C15693 = C15685 + C15686;
    const double C39799 = C39776 + C39777;
    const double C41796 = C41788 + C41789;
    const double C58307 = C58301 + C58302;
    const double C1903 = C1887 + C1888;
    const double C29030 = C29022 + C29023;
    const double C42530 = C42524 + C42525;
    const double C57422 = C57399 + C57400;
    const double C59347 = C59339 + C59340;
    const double C17095 = C4411 * C89783;
    const double C43673 = C4411 * C38609;
    const double C43668 = C4411 * C38610;
    const double C17569 = C17565 * C89937;
    const double C73076 = C17565 * C55293;
    const double C77006 = C17565 * C55292;
    const double C29856 = C17233 * C89926;
    const double C73724 = C17233 * C38612;
    const double C76592 = C17233 * C38611;
    const double C34413 = C89926 * C9149;
    const double C77142 = C38612 * C9149;
    const double C82640 = C38611 * C9149;
    const double C14188 = C14168 + C14169;
    const double C14370 = C14364 + C14365;
    const double C45692 = C45686 + C45687;
    const double C78583 = C78579 + C78580;
    const double C34182 = C34177 + C8919;
    const double C17228 = C17212 + C17213;
    const double C17448 = C17442 + C17443;
    const double C33943 = C33935 + C33936;
    const double C49424 = C49418 + C49419;
    const double C72965 = C72959 + C72960;
    const double C76312 = C76305 + C76306;
    const double C82009 = C82001 + C82002;
    const double C82437 = C82433 + C82434;
    const double C27861 = C27851 + C27852;
    const double C27951 = C27945 + C27946;
    const double C68668 = C68664 + C68665;
    const double C85079 = C85075 + C85076;
    const double C19705 = C19703 + C19697;
    const double C29982 = C29979 * C89783;
    const double C60541 = C29979 * C38609;
    const double C29983 = C29980 * C89783;
    const double C63066 = C29980 * C38609;
    const double C4291 = C89926 * C4281;
    const double C42527 = C38612 * C4281;
    const double C88278 = C88277 + C88266;
    const double C849 =
        (2 * (2 * ae * C88327 * C88237 + C88212 * C88539) + C88542 + C88542 +
         C88212 *
             (C88539 + C88543 + C88543 +
              C88212 * (2 * ae * C88327 * C88261 + C88212 * C88327 * C88304))) /
        C88090;
    const double C950 = (C88337 + ae * C88340 + C88212 * C88348 + C88542 +
                         C88327 * (C88276 + C88327 * C88366)) /
                        C88090;
    const double C1170 = (C88418 + ae * C88340 + C88212 * C88423 + C88542 +
                          C88327 * (C88276 + C88327 * C88431)) /
                         C88090;
    const double C4399 = (C88542 + C88370 * C88327 * C88409) / C88090;
    const double C4843 = (C88542 + C88370 * C88327 * C88489) / C88090;
    const double C4176 = C103 * C4165;
    const double C4174 = C105 * C4165;
    const double C4290 = C186 * C4165;
    const double C4408 = C273 * C4165;
    const double C16155 = C13338 * C4165;
    const double C40485 = C38616 * C4165;
    const double C42419 = C38614 * C4165;
    const double C42526 = C38700 * C4165;
    const double C43817 = C38610 * C4165;
    const double C58303 = C55429 * C4165;
    const double C74651 = C89783 * C4165;
    const double C1782 =
        (2 * (2 * ae * C88370 * C88237 + C88212 * C88641) + C88644 + C88644 +
         C88212 *
             (C88641 + C88645 + C88645 +
              C88212 * (2 * ae * C88370 * C88261 + C88212 * C88370 * C88304))) /
        C88090;
    const double C1997 = (C88380 + ae * C88383 + C88212 * C88391 + C88644 +
                          C88370 * (C88276 + C88370 * C88409)) /
                         C88090;
    const double C2397 = (C88476 + ae * C88383 + C88212 * C88481 + C88644 +
                          C88370 * (C88276 + C88370 * C88489)) /
                         C88090;
    const double C4513 = (C88644 + C88327 * C88370 * C88431) / C88090;
    const double C1091 = C1082 + C1083;
    const double C15695 = C15689 + C15690;
    const double C39803 = C39784 + C39785;
    const double C1910 = C1901 + C1902;
    const double C29032 = C29026 + C29027;
    const double C57426 = C57407 + C57408;
    const double C39545 = C39536 + C39537;
    const double C17105 = C17098 + C17099;
    const double C56258 = C56249 + C56250;
    const double C17566 = C17561 + C17562;
    const double C49729 = C49726 + C49727;
    const double C14082 = C14073 * C89783;
    const double C45615 = C14073 * C38610;
    const double C14463 = C14194 * C273;
    const double C17560 = C17234 * C273;
    const double C73079 = C17234 * C55429;
    const double C76593 = C17234 * C38700;
    const double C65715 = C56136 * C38610;
    const double C40715 = C40712 + C40713;
    const double C60280 = C60275 + C60276;
    const double C30185 = C30183 + C30184;
    const double C46757 = C46754 + C46755;
    const double C29862 = C29859 + C29860;
    const double C46453 = C46448 + C46449;
    const double C57282 = C57273 + C57274;
    const double C27385 = C27376 * C89783;
    const double C68319 = C27376 * C38610;
    const double C27587 = C27575 * C186;
    const double C1254 =
        (2 * C88212 * C88445 + C88212 * C88452 + C88596 + C88596 +
         C88327 * (2 * ae * C88367 +
                   C88327 * (2 * C88212 * C88450 +
                             C88212 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C4946 =
        (C88596 +
         C88370 * (ae * C88410 +
                   C88327 * (2 * C88212 * C88503 +
                             C88212 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C1271 = C186 * C944;
    const double C13567 = C13403 * C944;
    const double C41902 = C38700 * C944;
    const double C4625 = C186 * C4278;
    const double C42830 = C38700 * C4278;
    const double C2583 =
        (2 * C88212 * C88519 + C88212 * C88526 + C88730 + C88730 +
         C88370 * (2 * ae * C88410 +
                   C88370 * (2 * C88212 * C88524 +
                             C88212 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C4732 =
        (C88730 +
         C88327 * (ae * C88367 +
                   C88370 * (2 * C88212 * C88466 +
                             C88212 * (C88466 + std::pow(C88218, 7) * bs[7] *
                                                    C88457 * C88216)))) /
        C88090;
    const double C2600 = C273 * C1991;
    const double C26475 = C26161 * C1991;
    const double C59863 = C55429 * C1991;
    const double C88841 = ae * C88840;
    const double C5863 =
        (2 * C88590 + C88327 * C88840 + (C88263 + C88299 * C88435) * ae) /
        C88087;
    const double C8676 = (C88370 * C88840) / C88087;
    const double C88993 = ae * C88992;
    const double C10736 =
        (2 * C88724 + C88370 * C88992 + (C88263 + C88299 * C88509) * ae) /
        C88087;
    const double C15292 =
        (C88872 + ae * C88912 + C88327 * C89096 + ae * C88370 * C89070 +
         C88370 * (C89072 +
                   C88370 * (C89094 + ae * C88327 * C89083 +
                             C88327 * (ae * C89083 + C88327 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88494)))) /
        C88090;
    const double C89073 = C89056 + C89071;
    const double C89150 = ae * C89148;
    const double C89416 = C89401 + C89414;
    const double C89440 = ae * C89439;
    const double C29749 =
        (2 * C88914 + C88370 * C89439 + (C88845 + C89058 * C88509) * ae) /
        C88087;
    const double C88319 = C88318 + C88302;
    const double C88551 = ae * C88549;
    const double C5804 = (2 * C88540 + C88327 * C88549) / C88087;
    const double C8593 = (C88370 * C88549) / C88087;
    const double C88653 = ae * C88651;
    const double C10621 = (2 * C88642 + C88370 * C88651) / C88087;
    const double C8679 =
        (C88370 *
         (C88366 + C88740 +
          C88327 * (C88317 + C88327 * (C88356 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C88782 = ae * C88780;
    const double C6333 = C105 * C6326;
    const double C28115 = C13338 * C6326;
    const double C40486 = C38616 * C6326;
    const double C5807 =
        (2 * C88539 + C88327 * C88548 + C88820 + C88820 +
         C88212 * (2 * ae * (2 * C88732 + C88327 * (C88261 + C88297 * C88435)) +
                   C88212 * (2 * C88733 +
                             C88327 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C13966 =
        (3 * (C88348 + C88543 + C88327 * C89023) + C88820 +
         C88327 * (2 * C89023 + C88552 +
                   C88327 * (C88362 + C88741 +
                             C88327 * (C88310 +
                                       C88327 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C14158 =
        (3 * (C88423 + C88543 + C88327 * C89031) + C88820 +
         C88327 * (2 * C89031 + C88552 +
                   C88327 * (C88429 + C88741 +
                             C88327 * (C88310 +
                                       C88327 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88415))))) /
        C88090;
    const double C17084 =
        (C88820 + C88370 * (2 * C88327 * C88405 +
                            C88327 * (C88405 + (ae * C88401 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374) *
                                                   C88435))) /
        C88090;
    const double C17549 =
        (C88820 + C88370 * (2 * C88327 * C88487 +
                            C88327 * (C88487 + (ae * C88401 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473) *
                                                   C88435))) /
        C88090;
    const double C13865 = C13338 * C13846;
    const double C45472 = C38616 * C13846;
    const double C16865 = C13338 * C16852;
    const double C49108 = C38616 * C16852;
    const double C10624 =
        (2 * C88641 + C88370 * C88650 + C88960 + C88960 +
         C88212 * (2 * ae * (2 * C88753 + C88370 * (C88261 + C88297 * C88509)) +
                   C88212 * (2 * C88754 +
                             C88370 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C27463 =
        (3 * (C88391 + C88645 + C88370 * C89355) + C88960 +
         C88370 * (2 * C89355 + C88654 +
                   C88370 * (C88405 + C88762 +
                             C88370 * (C88310 +
                                       C88370 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88374))))) /
        C88090;
    const double C27845 =
        (3 * (C88481 + C88645 + C88370 * C89373) + C88960 +
         C88370 * (2 * C89373 + C88654 +
                   C88370 * (C88487 + C88762 +
                             C88370 * (C88310 +
                                       C88370 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88473))))) /
        C88090;
    const double C29849 =
        (C88960 + C88327 * (2 * C89139 +
                            C88370 * (C88429 + (ae * C88358 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415) *
                                                   C88509))) /
        C88090;
    const double C27252 = C13338 * C27234;
    const double C68242 = C38616 * C27234;
    const double C89213 = C89212 + C89202;
    const double C89257 = ae * C89255;
    const double C23414 = (2 * C89142 + C88370 * C89255) / C88087;
    const double C23574 =
        (2 * C89141 + C88370 * C89254 + C89313 + C89313 +
         C88327 * (2 * ae * (2 * C89260 + C88370 * (C88345 + C88358 * C88509)) +
                   C88327 * (2 * C89282 +
                             C88370 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C32156 =
        (3 * (C89092 + C89145 + C88370 * C89464) + C89313 +
         C88370 * (2 * C89464 + C89258 +
                   C88370 * (C89238 + C89289 +
                             C88370 * (C89204 +
                                       C88370 * (ae * C88401 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88494))))) /
        C88090;
    const double C31925 = C186 * C31676;
    const double C84869 = C38700 * C31676;
    const double C89547 = C89546 + C89529;
    const double C19694 =
        (2 * C88327 * C88519 + C88327 * C89243 + C89272 + C89272 +
         C88370 * (2 * ae * C89231 +
                   C88370 * (2 * C88327 * C88524 +
                             C88327 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C21732 =
        (3 * (C89154 + ae * (C88370 * C89220 + C89041) + C88327 * C89296) +
         C89272 +
         C88327 * (2 * C89296 + ae * (C88370 * C89226 + C89202) +
                   C88327 * (C89263 + ae * (C88370 * C88327 * C88401 + C89198) +
                             C88327 * (ae * (C88370 * C88401 + C88293) +
                                       C88327 * (ae * C88358 +
                                                 C88370 * std::pow(C88218, 7) *
                                                     bs[7] * C88457))))) /
        C88090;
    const double C19700 = C273 * C19196;
    const double C31517 = C26161 * C19196;
    const double C82747 = C55429 * C19196;
    const double C89331 = ae * C89330;
    const double C23468 =
        (2 * C89124 + C88370 * C89330 + (C89042 + C89199 * C88509) * ae) /
        C88087;
    const double C89485 = C89468 + C89483;
    const double C4955 = C4952 + C4953;
    const double C43141 = C43138 + C43139;
    const double C1559 = C976 * C273;
    const double C1279 = C1275 + C1268;
    const double C1385 = C1381 * C89926;
    const double C42011 = C1381 * C38612;
    const double C4951 = C4294 * C273;
    const double C58807 = C4294 * C55429;
    const double C60137 = C4294 * C38616;
    const double C4629 = C4627 + C4623;
    const double C29113 = C2216 * C89783;
    const double C57534 = C2216 * C38610;
    const double C59450 = C3742 * C38610;
    const double C29037 = C29033 * C89926;
    const double C6029 =
        (2 * (2 * ae * C88340 + C88327 * C88843) + C88852 + C88852 +
         C88327 * (C88843 + C88849 + C88849 +
                   C88327 * (2 * C88355 + C88327 * C88212 * C88450))) /
        C88090;
    const double C9148 =
        (C88852 + C88370 * (C88872 + ae * C88912 +
                            C88327 * (C88398 + C88327 * C88212 * C88503))) /
        C88090;
    const double C6033 = C186 * C5864;
    const double C14182 = C13338 * C5864;
    const double C14282 = C13402 * C5864;
    const double C14280 = C13403 * C5864;
    const double C14366 = C273 * C5864;
    const double C39533 = C38612 * C5864;
    const double C39918 = C38700 * C5864;
    const double C45688 = C38616 * C5864;
    const double C45761 = C38699 * C5864;
    const double C8918 = C186 * C8677;
    const double C15062 = C13403 * C8677;
    const double C17226 = C13338 * C8677;
    const double C17340 = C13402 * C8677;
    const double C17446 = C273 * C8677;
    const double C43529 = C38612 * C8677;
    const double C43966 = C38700 * C8677;
    const double C49420 = C38616 * C8677;
    const double C49525 = C38699 * C8677;
    const double C56132 = C89926 * C8677;
    const double C56564 = C55429 * C8677;
    const double C15063 = C13403 * C14820;
    const double C26849 = C186 * C14820;
    const double C46552 = C38700 * C14820;
    const double C29981 = C29978 + C29971;
    const double C34415 = C89926 * C15291;
    const double C79638 = C38612 * C15291;
    const double C89051 = C89050 + C89044;
    const double C17333 =
        (2 * (2 * ae * C88370 * C88338 + C88327 * C89141) + C89144 + C89144 +
         C88327 *
             (C89141 + C89145 + C89145 +
              C88327 * (2 * ae * C88370 * C88345 + C88327 * C88370 * C88450))) /
        C88090;
    const double C19301 = C19296 + C19297;
    const double C19460 = C19457 + C19458;
    const double C34183 = C34179 + C26848;
    const double C33945 = C33939 + C33940;
    const double C79006 = C78999 + C79000;
    const double C82438 = C82435 + C82436;
    const double C31927 = C31926 + C29968;
    const double C31686 = C31684 * C13338;
    const double C31847 = C31845 * C89926;
    const double C84798 = C31845 * C38612;
    const double C36116 = C36115 * C89783;
    const double C4741 = C4738 + C4739;
    const double C58608 = C58605 + C58606;
    const double C2308 = C2023 * C186;
    const double C2502 = C2498 * C89937;
    const double C59760 = C2498 * C55293;
    const double C2608 = C2604 + C2597;
    const double C748 = C744 * C89926;
    const double C1683 = C1679 * C89926;
    const double C42319 = C1679 * C38612;
    const double C3340 = C3339 * C89926;
    const double C39277 = C3339 * C38612;
    const double C4061 = C4060 * C89926;
    const double C5075 = C5073 * C89926;
    const double C43241 = C5073 * C38612;
    const double C15931 = C15929 * C89937;
    const double C41365 = C41364 + C6962;
    const double C60944 = C30293 * C55293;
    const double C41048 = C40714 * C38700;
    const double C46342 = C40714 * C38616;
    const double C11061 =
        (2 * (2 * ae * C88383 + C88370 * C88876) + C89003 + C89003 +
         C88370 * (C88876 + C89000 + C89000 +
                   C88370 * (2 * C88398 + C88370 * C88212 * C88524))) /
        C88090;
    const double C11065 = C273 * C10737;
    const double C27857 = C13338 * C10737;
    const double C27947 = C186 * C10737;
    const double C28039 = C26160 * C10737;
    const double C28037 = C26161 * C10737;
    const double C57270 = C55293 * C10737;
    const double C57985 = C55429 * C10737;
    const double C68666 = C38616 * C10737;
    const double C68803 = C55428 * C10737;
    const double C19704 = C19702 + C15370;
    const double C19213 = C19209 * C13338;
    const double C19545 = C19543 * C89937;
    const double C82540 = C19543 * C55293;
    const double C23786 =
        (2 * (2 * ae * C88917 + C88370 * C89333) + C89342 + C89342 +
         C88370 * (C89333 + C89339 + C89339 +
                   C88370 * (2 * C89223 + C88370 * C88327 * C88524))) /
        C88090;
    const double C23789 = C273 * C23469;
    const double C30395 = C26161 * C23469;
    const double C32080 = C13338 * C23469;
    const double C32158 = C186 * C23469;
    const double C32237 = C26160 * C23469;
    const double C63462 = C55429 * C23469;
    const double C79110 = C55293 * C23469;
    const double C85077 = C38700 * C23469;
    const double C85148 = C55428 * C23469;
    const double C89396 = C89395 + C89392;
    const double C39392 = C38613 * C831;
    const double C39388 = C38613 * C828;
    const double C39383 = C38613 * C830;
    const double C39376 = C38613 * C829;
    const double C41466 = C38613 * C827;
    const double C43378 = C38613 * C4160;
    const double C43374 = C38613 * C4159;
    const double C45468 = C38613 * C5803;
    const double C46132 = C38613 * C6325;
    const double C49104 = C38613 * C8592;
    const double C57017 = C38613 * C1764;
    const double C57013 = C38613 * C1761;
    const double C57011 = C38613 * C1763;
    const double C57005 = C38613 * C1762;
    const double C59017 = C38613 * C1760;
    const double C68238 = C38613 * C10620;
    const double C13871 = C13862 + C13863;
    const double C13870 = C13860 + C13343;
    const double C13869 = C13858 + C13344;
    const double C13868 = C13854 + C13855;
    const double C13867 = C13852 + C13342;
    const double C13866 = C13850 + C13341;
    const double C15452 = C15448 + C13348;
    const double C15451 = C15446 + C13347;
    const double C16869 = C16863 + C14742;
    const double C16868 = C16861 + C14741;
    const double C16867 = C16858 + C14735;
    const double C16866 = C16856 + C14734;
    const double C18510 = C18507 + C13857;
    const double C19040 = C19036 + C14739;
    const double C19039 = C19034 + C14738;
    const double C21335 = C21332 + C16860;
    const double C27258 = C27249 + C27250;
    const double C27257 = C27247 + C14745;
    const double C27256 = C27245 + C14740;
    const double C27255 = C27242 + C23364;
    const double C27254 = C27240 + C14737;
    const double C27253 = C27238 + C14736;
    const double C28791 = C28787 + C26057;
    const double C28790 = C28785 + C16156;
    const double C29523 = C29520 + C14744;
    const double C31600 = C31597 + C23363;
    const double C35883 = C35880 + C27244;
    const double C39407 = C39395 + C39396;
    const double C39405 = C39390 + C38622;
    const double C39402 = C39380 + C39381;
    const double C39401 = C39378 + C38621;
    const double C43384 = C43372 + C40474;
    const double C45475 = C45470 + C39387;
    const double C46139 = C46134 + C40481;
    const double C49111 = C49106 + C43377;
    const double C57030 = C57019 + C40488;
    const double C57028 = C57015 + C40483;
    const double C57025 = C57009 + C40479;
    const double C57024 = C57007 + C40476;
    const double C68245 = C68240 + C51758;
    const double C38952 = C38935 * C109;
    const double C38949 = C38935 * C108;
    const double C38940 = C38935 * C107;
    const double C39914 = C38935 * C831;
    const double C39907 = C38935 * C828;
    const double C40922 = C38935 * C1764;
    const double C40915 = C38935 * C1761;
    const double C41898 = C38935 * C827;
    const double C42826 = C38935 * C1760;
    const double C43962 = C38935 * C4160;
    const double C73833 = C38935 * C1763;
    const double C73827 = C38935 * C1762;
    const double C76725 = C38935 * C4159;
    const double C79319 = C38935 * C6325;
    const double C82323 = C38935 * C8592;
    const double C84865 = C38935 * C10620;
    const double C38965 = C38955 + C38956;
    const double C38962 = C38946 + C38947;
    const double C38961 = C38943 + C38944;
    const double C39924 = C39904 + C39905;
    const double C40935 = C40925 + C40926;
    const double C40932 = C40912 + C40913;
    const double C41905 = C41900 + C39921;
    const double C42833 = C42828 + C40929;
    const double C73837 = C73831 + C40921;
    const double C73836 = C73829 + C40918;
    const double C76730 = C76727 + C43961;
    const double C79326 = C79321 + C46554;
    const double C84872 = C84867 + C52026;
    const double C55909 = C55892 * C109;
    const double C55906 = C55892 * C108;
    const double C55897 = C55892 * C107;
    const double C56885 = C55892 * C831;
    const double C56878 = C55892 * C828;
    const double C57981 = C55892 * C1764;
    const double C57974 = C55892 * C1761;
    const double C58907 = C55892 * C827;
    const double C59859 = C55892 * C1760;
    const double C61077 = C55892 * C4160;
    const double C73283 = C55892 * C830;
    const double C73277 = C55892 * C829;
    const double C77277 = C55892 * C4159;
    const double C78787 = C55892 * C5803;
    const double C79739 = C55892 * C6325;
    const double C82743 = C55892 * C8592;
    const double C55922 = C55912 + C55913;
    const double C55919 = C55903 + C55904;
    const double C55918 = C55900 + C55901;
    const double C56898 = C56888 + C56889;
    const double C56895 = C56875 + C56876;
    const double C57991 = C57971 + C57972;
    const double C58914 = C58909 + C56892;
    const double C59866 = C59861 + C57988;
    const double C61086 = C61080 + C61081;
    const double C73287 = C73281 + C56884;
    const double C73286 = C73279 + C56881;
    const double C77279 = C77275 + C61076;
    const double C78794 = C78789 + C62570;
    const double C82750 = C82745 + C66406;
    const double C29969 = C4630 * C89783;
    const double C60543 = C4630 * C38609;
    const double C60542 = C4630 * C38610;
    const double C2615 = C2611 * C89926;
    const double C41361 = C2611 * C38611;
    const double C970 = C954 + C955;
    const double C38730 = C38710 + C38711;
    const double C41586 = C41580 + C41581;
    const double C15694 = C15687 + C15688;
    const double C39801 = C39780 + C39781;
    const double C41798 = C41792 + C41793;
    const double C2017 = C2001 + C2002;
    const double C55459 = C55439 + C55440;
    const double C59239 = C59233 + C59234;
    const double C29266 = C29262 + C29263;
    const double C57764 = C57753 + C57754;
    const double C59657 = C59653 + C59654;
    const double C15608 = C1084 * C89783;
    const double C39655 = C1084 * C38610;
    const double C41687 = C1084 * C38609;
    const double C15922 = C15693 * C273;
    const double C74950 = C15693 * C55428;
    const double C28871 = C1903 * C89783;
    const double C57156 = C1903 * C38610;
    const double C59128 = C1903 * C38609;
    const double C29034 = C29030 * C186;
    const double C75545 = C29030 * C38699;
    const double C34416 = C34412 + C34413;
    const double C77144 = C77141 + C77142;
    const double C82643 = C82639 + C82640;
    const double C34184 = C34182 + C8919;
    const double C34100 = C17228 * C89926;
    const double C76590 = C17228 * C38612;
    const double C82222 = C17228 * C38611;
    const double C33947 = C33943 * C13338;
    const double C65712 = C33943 * C38614;
    const double C88279 = ae * C88278;
    const double C116 =
        (3 * C88246 + C88212 * C88278 + (2 * C88235 + C88212 * C88263) * ae) /
        C88087;
    const double C841 = (C88327 * C88278) / C88087;
    const double C1774 = (C88370 * C88278) / C88087;
    const double C41469 = C38610 * C849;
    const double C969 = C89926 * C950;
    const double C41583 = C38612 * C950;
    const double C15692 = C89783 * C1170;
    const double C39789 = C38610 * C1170;
    const double C4409 = C89937 * C4399;
    const double C58304 = C55293 * C4399;
    const double C44247 = C38610 * C4843;
    const double C74954 = C89783 * C4843;
    const double C4295 = C4290 + C4291;
    const double C74352 = C74350 + C16155;
    const double C43387 = C43380 + C40485;
    const double C42531 = C42526 + C42527;
    const double C43827 = C43816 + C43817;
    const double C74654 = C74650 + C74651;
    const double C59020 = C38610 * C1782;
    const double C2016 = C89937 * C1997;
    const double C59236 = C55293 * C1997;
    const double C29265 = C89783 * C2397;
    const double C57758 = C38610 * C2397;
    const double C43821 = C38610 * C4513;
    const double C74653 = C89783 * C4513;
    const double C15610 = C1091 * C89783;
    const double C39659 = C1091 * C38610;
    const double C15925 = C15695 * C273;
    const double C28873 = C1910 * C89783;
    const double C57160 = C1910 * C38610;
    const double C29036 = C29032 * C186;
    const double C17111 = C17105 * C89783;
    const double C49315 = C17105 * C38610;
    const double C17570 = C17566 * C89937;
    const double C73080 = C17566 * C55293;
    const double C46343 = C40715 * C38610;
    const double C77008 = C30185 * C55293;
    const double C29864 = C29862 * C89926;
    const double C73728 = C29862 * C38612;
    const double C6028 =
        (2 * (2 * ae * C88349 + C88327 * C88452) + C88841 + C88841 +
         C88327 * (C88452 + C88838 + C88838 +
                   C88327 * (2 * ae * C88363 +
                             C88327 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C9147 =
        (C88841 +
         C88370 * (C88505 + ae * C88907 +
                   C88327 * (ae * C88406 +
                             C88327 * (C88503 + std::pow(C88218, 7) * bs[7] *
                                                    C88494 * C88216)))) /
        C88090;
    const double C6032 = C186 * C5863;
    const double C15771 = C13403 * C5863;
    const double C39922 = C38700 * C5863;
    const double C8917 = C186 * C8676;
    const double C16453 = C13403 * C8676;
    const double C43968 = C38700 * C8676;
    const double C11060 =
        (2 * (2 * ae * C88392 + C88370 * C88526) + C88993 + C88993 +
         C88370 * (C88526 + C88990 + C88990 +
                   C88370 * (2 * ae * C88406 +
                             C88370 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88216)))) /
        C88090;
    const double C11064 = C273 * C10736;
    const double C29416 = C26161 * C10736;
    const double C57989 = C55429 * C10736;
    const double C89074 = C89073 + C89066;
    const double C17334 =
        (2 * (2 * ae * C88370 * C88351 + C88327 * C89147) + C89150 + C89150 +
         C88327 * (C89147 + C89151 + C89151 +
                   C88327 * (2 * ae * C88370 * C89057 +
                             C88327 * C88370 * C88212 *
                                 (C88284 * C88285 +
                                  C88435 * bs[7] * std::pow(C88218, 7)) *
                                 C88219))) /
        C88090;
    const double C89417 = C89416 + C89410;
    const double C30391 =
        (2 * (2 * ae * C88912 + C88370 * C89430) + C89440 + C89440 +
         C88370 * (C89430 + C89437 + C89437 +
                   C88370 * (2 * ae * C89431 +
                             C88370 * C88327 * C88212 *
                                 (C88284 * C88285 +
                                  C88509 * bs[7] * std::pow(C88218, 7)) *
                                 C88219))) /
        C88090;
    const double C30396 = C26161 * C29749;
    const double C52292 = C273 * C29749;
    const double C63460 = C55429 * C29749;
    const double C88321 = ae * C88319;
    const double C88320 = C88212 * C88319;
    const double C88734 = C88327 * C88319;
    const double C88755 = C88370 * C88319;
    const double C842 = (C88278 + C88319 * C88435) / C88087;
    const double C1775 = (C88278 + C88319 * C88509) / C88087;
    const double C850 =
        (2 * (2 * ae * (C88237 + C88261 * C88435) + C88212 * C88548) + C88551 +
         C88551 +
         C88212 * (C88548 + C88552 + C88552 +
                   C88212 * (2 * ae * (C88261 + C88297 * C88435) +
                             C88212 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C5866 =
        (2 * (C88276 + C88327 * C88366) + C88551 +
         C88327 * (C88366 + C88740 +
                   C88327 * (C88317 +
                             C88327 * (C88356 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C5975 =
        (2 * (C88276 + C88327 * C88431) + C88551 +
         C88327 * (C88431 + C88740 +
                   C88327 * (C88317 +
                             C88327 * (C88427 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88415))))) /
        C88090;
    const double C8759 =
        (C88551 + C88370 * (C88409 + (C88399 + ae * C88212 * C88401 +
                                      C88212 * (ae * C88401 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374)) *
                                         C88435)) /
        C88090;
    const double C9070 =
        (C88551 + C88370 * (C88489 + (C88485 + ae * C88212 * C88401 +
                                      C88212 * (ae * C88401 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473)) *
                                         C88435)) /
        C88090;
    const double C5811 = C105 * C5804;
    const double C15450 = C13338 * C5804;
    const double C39398 = C38616 * C5804;
    const double C8600 = C105 * C8593;
    const double C16154 = C13338 * C8593;
    const double C43382 = C38616 * C8593;
    const double C1783 =
        (2 * (2 * ae * (C88237 + C88261 * C88509) + C88212 * C88650) + C88653 +
         C88653 +
         C88212 * (C88650 + C88654 + C88654 +
                   C88212 * (2 * ae * (C88261 + C88297 * C88509) +
                             C88212 * (C88304 +
                                       (C88284 * C88285 +
                                        C88216 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C6569 =
        (C88653 + C88327 * (C88431 + (C88427 + ae * C88212 * C88358 +
                                      C88212 * (ae * C88358 +
                                                C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415)) *
                                         C88509)) /
        C88090;
    const double C10739 =
        (2 * (C88276 + C88370 * C88409) + C88653 +
         C88370 * (C88409 + C88761 +
                   C88370 * (C88317 +
                             C88370 * (C88399 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88374))))) /
        C88090;
    const double C10954 =
        (2 * (C88276 + C88370 * C88489) + C88653 +
         C88370 * (C88489 + C88761 +
                   C88370 * (C88317 +
                             C88370 * (C88485 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88473))))) /
        C88090;
    const double C10628 = C105 * C10621;
    const double C28789 = C13338 * C10621;
    const double C57021 = C38616 * C10621;
    const double C4170 =
        (2 * (2 * ae * C88370 * C88732 + C88212 * C88779) + C88782 + C88782 +
         C88212 * (C88779 + C88783 + C88783 +
                   C88212 * (2 * ae * C88370 * C88327 * C88297 +
                             C88212 * C88370 * C88327 *
                                 (C88284 * C88285 +
                                  C88216 * bs[7] * std::pow(C88218, 7)) *
                                 C88219))) /
        C88090;
    const double C6492 =
        (C88327 * C88409 + C88782 +
         C88370 * (C88740 +
                   C88370 * C88327 *
                       (C88399 + ae * C88212 * C88401 +
                        C88212 * (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374)))) /
        C88090;
    const double C6803 =
        (C88327 * C88489 + C88782 +
         C88370 * (C88740 +
                   C88370 * C88327 *
                       (C88485 + ae * C88212 * C88401 +
                        C88212 * (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473)))) /
        C88090;
    const double C8836 =
        (C88370 * C88431 + C88782 +
         C88327 * (C88761 +
                   C88327 * C88370 *
                       (C88427 + ae * C88212 * C88358 +
                        C88212 * (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415)))) /
        C88090;
    const double C89215 = ae * C89213;
    const double C89214 = C88327 * C89213;
    const double C89283 = C88370 * C89213;
    const double C19375 =
        (2 * (2 * ae * (C88338 + C88345 * C88509) + C88327 * C89254) + C89257 +
         C89257 +
         C88327 * (C89254 + C89258 + C89258 +
                   C88327 * (2 * ae * (C88345 + C88358 * C88509) +
                             C88327 * (C88450 +
                                       (C88284 * C88285 +
                                        C88435 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88509)))) /
        C88090;
    const double C23733 =
        (2 * (C89049 + C88370 * C89240) + C89257 +
         C88370 * (C89240 + C89288 +
                   C88370 * (C89211 +
                             C88370 * (C88503 + ae * C88327 * C88401 +
                                       C88327 * (ae * C88401 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88494))))) /
        C88090;
    const double C23577 = C13403 * C23414;
    const double C34181 = C186 * C23414;
    const double C79323 = C38700 * C23414;
    const double C89549 = ae * C89547;
    const double C89548 = C88370 * C89547;
    const double C23785 =
        (2 * (2 * ae * C89080 + C88370 * C89243) + C89331 + C89331 +
         C88370 * (C89243 + C89328 + C89328 +
                   C88370 * (2 * ae * C89226 +
                             C88370 * (C88524 +
                                       (C88284 * C88285 +
                                        C88509 * bs[7] * std::pow(C88218, 7)) *
                                           C88219 * C88435)))) /
        C88090;
    const double C23788 = C273 * C23468;
    const double C34492 = C26161 * C23468;
    const double C79743 = C55429 * C23468;
    const double C89486 = C89485 + C89478;
    const double C4957 = C4955 * C89937;
    const double C58808 = C4955 * C55293;
    const double C1283 = C1279 + C1269;
    const double C4631 = C4629 + C4624;
    const double C39919 = C38612 * C6029;
    const double C44385 = C38612 * C9148;
    const double C56774 = C89926 * C9148;
    const double C14195 = C14182 + C14183;
    const double C14371 = C14366 + C14367;
    const double C39543 = C39532 + C39533;
    const double C39927 = C39917 + C39918;
    const double C45693 = C45688 + C45689;
    const double C56457 = C56455 + C8918;
    const double C17235 = C17226 + C17227;
    const double C17450 = C17446 + C17447;
    const double C43535 = C43528 + C43529;
    const double C43971 = C43965 + C43966;
    const double C49425 = C49420 + C49421;
    const double C56135 = C56131 + C56132;
    const double C56569 = C56564 + C56565;
    const double C29984 = C29981 * C89783;
    const double C63067 = C29981 * C38610;
    const double C34417 = C34414 + C34415;
    const double C79640 = C79637 + C79638;
    const double C89052 = ae * C89051;
    const double C13963 =
        (3 * C88861 + C88327 * C89051 + (2 * C88855 + C88327 * C89042) * ae) /
        C88087;
    const double C16979 = (C88370 * C89051) / C88087;
    const double C19120 = (C89051 + C89213 * C88509) / C88087;
    const double C82326 = C38612 * C17333;
    const double C34102 = C19301 * C89926;
    const double C79220 = C19301 * C38612;
    const double C34185 = C34183 + C26848;
    const double C33949 = C33945 * C13338;
    const double C31928 = C31927 + C31924;
    const double C4743 = C4741 * C89926;
    const double C42939 = C4741 * C38612;
    const double C2612 = C2608 + C2598;
    const double C41366 = C41365 + C41363;
    const double C57986 = C55293 * C11061;
    const double C27864 = C27857 + C27858;
    const double C27952 = C27947 + C27948;
    const double C57280 = C57269 + C57270;
    const double C57994 = C57984 + C57985;
    const double C68669 = C68666 + C68667;
    const double C19706 = C19704 + C19699;
    const double C79742 = C55293 * C23786;
    const double C32082 = C32080 + C32081;
    const double C32160 = C32158 + C32159;
    const double C79746 = C79741 + C63462;
    const double C79116 = C79109 + C79110;
    const double C85080 = C85077 + C85078;
    const double C89397 = ae * C89396;
    const double C27460 =
        (3 * C89012 + C88370 * C89396 + (2 * C89006 + C88370 * C89390) * ae) /
        C88087;
    const double C39406 = C39392 + C39393;
    const double C39404 = C39388 + C38623;
    const double C39403 = C39383 + C39384;
    const double C39400 = C39376 + C38620;
    const double C41472 = C41466 + C38628;
    const double C43386 = C43378 + C40484;
    const double C43385 = C43374 + C40475;
    const double C45474 = C45468 + C39386;
    const double C46138 = C46132 + C40480;
    const double C49110 = C49104 + C43376;
    const double C57029 = C57017 + C40489;
    const double C57027 = C57013 + C40482;
    const double C57026 = C57011 + C40478;
    const double C57023 = C57005 + C40477;
    const double C59023 = C59017 + C42421;
    const double C68244 = C68238 + C51759;
    const double C13877 = C13871 + C13863;
    const double C13876 = C13870 + C13343;
    const double C13875 = C13869 + C13344;
    const double C13874 = C13868 + C13855;
    const double C13873 = C13867 + C13342;
    const double C13872 = C13866 + C13341;
    const double C15454 = C15452 + C13348;
    const double C15453 = C15451 + C13347;
    const double C16873 = C16869 + C14742;
    const double C16872 = C16868 + C14741;
    const double C16871 = C16867 + C14735;
    const double C16870 = C16866 + C14734;
    const double C18511 = C18510 + C13857;
    const double C19042 = C19040 + C14739;
    const double C19041 = C19039 + C14738;
    const double C21336 = C21335 + C16860;
    const double C27264 = C27258 + C27250;
    const double C27263 = C27257 + C14745;
    const double C27262 = C27256 + C14740;
    const double C27261 = C27255 + C23364;
    const double C27260 = C27254 + C14737;
    const double C27259 = C27253 + C14736;
    const double C28793 = C28791 + C26057;
    const double C28792 = C28790 + C16156;
    const double C29524 = C29523 + C14744;
    const double C31601 = C31600 + C23363;
    const double C35884 = C35883 + C27244;
    const double C39415 = C39407 + C39396;
    const double C39413 = C39405 + C38622;
    const double C39410 = C39402 + C39381;
    const double C39409 = C39401 + C38621;
    const double C43388 = C43384 + C40474;
    const double C45477 = C45475 + C39387;
    const double C46141 = C46139 + C40481;
    const double C49113 = C49111 + C43377;
    const double C57038 = C57030 + C40488;
    const double C57036 = C57028 + C40483;
    const double C57033 = C57025 + C40479;
    const double C57032 = C57024 + C40476;
    const double C68247 = C68245 + C51758;
    const double C38964 = C38952 + C38953;
    const double C38963 = C38949 + C38950;
    const double C38960 = C38940 + C38941;
    const double C39926 = C39914 + C39915;
    const double C39925 = C39907 + C39908;
    const double C40934 = C40922 + C40923;
    const double C40933 = C40915 + C40916;
    const double C41904 = C41898 + C39920;
    const double C42832 = C42826 + C40928;
    const double C43970 = C43962 + C43963;
    const double C73838 = C73833 + C40920;
    const double C73835 = C73827 + C40919;
    const double C76729 = C76725 + C43960;
    const double C79325 = C79319 + C46555;
    const double C82329 = C82323 + C49527;
    const double C84871 = C84865 + C52027;
    const double C38971 = C38965 + C38956;
    const double C38968 = C38962 + C38947;
    const double C38967 = C38961 + C38944;
    const double C39928 = C39924 + C39905;
    const double C40939 = C40935 + C40926;
    const double C40936 = C40932 + C40913;
    const double C41907 = C41905 + C39921;
    const double C42835 = C42833 + C40929;
    const double C73841 = C73837 + C40921;
    const double C73840 = C73836 + C40918;
    const double C76732 = C76730 + C43961;
    const double C79328 = C79326 + C46554;
    const double C84874 = C84872 + C52026;
    const double C55921 = C55909 + C55910;
    const double C55920 = C55906 + C55907;
    const double C55917 = C55897 + C55898;
    const double C56897 = C56885 + C56886;
    const double C56896 = C56878 + C56879;
    const double C57993 = C57981 + C57982;
    const double C57992 = C57974 + C57975;
    const double C58913 = C58907 + C56891;
    const double C59865 = C59859 + C57987;
    const double C61085 = C61077 + C61078;
    const double C73288 = C73283 + C56883;
    const double C73285 = C73277 + C56882;
    const double C77280 = C77277 + C61075;
    const double C78793 = C78787 + C62571;
    const double C79745 = C79739 + C63463;
    const double C82749 = C82743 + C66407;
    const double C55928 = C55922 + C55913;
    const double C55925 = C55919 + C55904;
    const double C55924 = C55918 + C55901;
    const double C56902 = C56898 + C56889;
    const double C56899 = C56895 + C56876;
    const double C57995 = C57991 + C57972;
    const double C58916 = C58914 + C56892;
    const double C59868 = C59866 + C57988;
    const double C61088 = C61086 + C61081;
    const double C73291 = C73287 + C56884;
    const double C73290 = C73286 + C56881;
    const double C77281 = C77279 + C61076;
    const double C78796 = C78794 + C62570;
    const double C82752 = C82750 + C66406;
    const double C34186 = C34184 + C34178;
    const double C122 =
        (3 * (C88241 + C88244 + C88244 + C88212 * C88272) + C88279 + C88279 +
         C88212 *
             (2 * C88272 + C88276 + C88276 +
              C88212 * (C88267 + C88271 + C88271 +
                        C88212 * (2 * ae * C88261 +
                                  C88212 *
                                      (C88251 * C88252 +
                                       C88216 * bs[6] * std::pow(C88210, 6)) *
                                      C88219)))) /
        C88090;
    const double C951 =
        (C88279 + C88327 * (2 * C88348 + ae * C88349 + C88212 * C88366)) /
        C88090;
    const double C1171 =
        (C88279 + C88327 * (2 * C88423 + ae * C88349 + C88212 * C88431)) /
        C88090;
    const double C1998 =
        (C88279 + C88370 * (2 * C88391 + ae * C88392 + C88212 * C88409)) /
        C88090;
    const double C2398 =
        (C88279 + C88370 * (2 * C88481 + ae * C88392 + C88212 * C88489)) /
        C88090;
    const double C135 = C103 * C116;
    const double C133 = C105 * C116;
    const double C214 = C186 * C116;
    const double C301 = C273 * C116;
    const double C38632 = C38616 * C116;
    const double C860 = C105 * C841;
    const double C2700 = C103 * C841;
    const double C2780 = C186 * C841;
    const double C2862 = C273 * C841;
    const double C13350 = C13338 * C841;
    const double C38631 = C38614 * C841;
    const double C38629 = C38616 * C841;
    const double C38724 = C38700 * C841;
    const double C41791 = C38610 * C841;
    const double C1793 = C105 * C1774;
    const double C3421 = C103 * C1774;
    const double C3501 = C186 * C1774;
    const double C3583 = C273 * C1774;
    const double C26059 = C13338 * C1774;
    const double C42420 = C38616 * C1774;
    const double C55296 = C38614 * C1774;
    const double C55453 = C55429 * C1774;
    const double C59342 = C38610 * C1774;
    const double C977 = C968 + C969;
    const double C41587 = C41582 + C41583;
    const double C15696 = C15691 + C15692;
    const double C39805 = C39788 + C39789;
    const double C4413 = C4408 + C4409;
    const double C58308 = C58303 + C58304;
    const double C44251 = C44246 + C44247;
    const double C74955 = C74953 + C74954;
    const double C60138 = C4295 * C38610;
    const double C74353 = C74352 + C16155;
    const double C43391 = C43387 + C40485;
    const double C74952 = C74654 * C55429;
    const double C75547 = C74654 * C38700;
    const double C2024 = C2015 + C2016;
    const double C59240 = C59235 + C59236;
    const double C29267 = C29264 + C29265;
    const double C57766 = C57757 + C57758;
    const double C43829 = C43820 + C43821;
    const double C74655 = C74652 + C74653;
    const double C89075 = ae * C89074;
    const double C13964 =
        (3 * C88851 + C88327 * C89074 + (2 * C88845 + C88327 * C89063) * ae) /
        C88087;
    const double C16980 = (C88370 * C89074) / C88087;
    const double C89418 = ae * C89417;
    const double C27461 =
        (3 * C89002 + C88370 * C89417 + (2 * C88996 + C88370 * C89408) * ae) /
        C88087;
    const double C952 =
        (2 * C88348 + ae * C88349 + C88212 * C88366 + ae * C88327 * C88319 +
         C88327 * (C88321 +
                   C88327 * (2 * C88362 + ae * C88363 +
                             C88212 * (C88356 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C1172 =
        (2 * C88423 + ae * C88349 + C88212 * C88431 + ae * C88327 * C88319 +
         C88327 * (C88321 +
                   C88327 * (2 * C88429 + ae * C88363 +
                             C88212 * (C88427 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88415))))) /
        C88090;
    const double C1999 =
        (2 * C88391 + ae * C88392 + C88212 * C88409 + ae * C88370 * C88319 +
         C88370 * (C88321 +
                   C88370 * (2 * C88405 + ae * C88406 +
                             C88212 * (C88399 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88374))))) /
        C88090;
    const double C2399 =
        (2 * C88481 + ae * C88392 + C88212 * C88489 + ae * C88370 * C88319 +
         C88370 * (C88321 +
                   C88370 * (2 * C88487 + ae * C88406 +
                             C88212 * (C88485 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88473))))) /
        C88090;
    const double C4282 =
        (C88370 *
         (C88321 + C88327 * (2 * C88362 + ae * C88363 +
                             C88212 * (C88356 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C88322 = C88286 + C88320;
    const double C88739 = ae * C88734;
    const double C4166 = (C88370 * C88734) / C88087;
    const double C88760 = ae * C88755;
    const double C861 = C105 * C842;
    const double C13349 = C13338 * C842;
    const double C41470 = C38616 * C842;
    const double C1794 = C105 * C1775;
    const double C26058 = C13338 * C1775;
    const double C59021 = C38616 * C1775;
    const double C19619 =
        (2 * C89092 + ae * C89080 + C88327 * C89240 + ae * C88370 * C89213 +
         C88370 * (C89215 +
                   C88370 * (2 * C89238 + ae * C89226 +
                             C88327 * (C88503 + ae * C88327 * C88401 +
                                       C88327 * (ae * C88401 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88494))))) /
        C88090;
    const double C89216 = C89189 + C89214;
    const double C89287 = ae * C89283;
    const double C89550 = C89525 + C89548;
    const double C89487 = ae * C89486;
    const double C31761 =
        (3 * C89341 + C88370 * C89486 + (2 * C89335 + C88370 * C89475) * ae) /
        C88087;
    const double C60544 = C4631 * C38610;
    const double C44387 = C44384 + C44385;
    const double C56775 = C56773 + C56774;
    const double C40041 = C14371 * C38612;
    const double C39931 = C39927 + C39918;
    const double C56458 = C56457 + C8918;
    const double C76594 = C17235 * C38612;
    const double C44109 = C17450 * C38612;
    const double C43973 = C43971 + C43966;
    const double C56772 = C56135 * C55429;
    const double C65714 = C56135 * C38616;
    const double C14269 =
        (3 * (C88440 + C88859 + C88859 + C88327 * C89039) + C89052 + C89052 +
         C88327 * (2 * C89039 + C89049 + C89049 +
                   C88327 * (C88445 + C89045 + C89045 +
                             C88327 * (2 * C88352 + C88327 * C88450)))) /
        C88090;
    const double C17668 =
        (C89052 + C88370 * (2 * C89092 + ae * C89080 +
                            C88327 * (C88500 + ae * C88327 * C88388 +
                                      C88327 * (C88395 + C88327 * C88503)))) /
        C88090;
    const double C14277 = C13403 * C13963;
    const double C18680 = C13338 * C13963;
    const double C18736 = C13402 * C13963;
    const double C18789 = C273 * C13963;
    const double C45762 = C38700 * C13963;
    const double C17338 = C13403 * C16979;
    const double C21577 = C13338 * C16979;
    const double C21657 = C13402 * C16979;
    const double C21734 = C273 * C16979;
    const double C31316 = C186 * C16979;
    const double C49526 = C38700 * C16979;
    const double C78512 = C38699 * C16979;
    const double C78581 = C55429 * C16979;
    const double C82004 = C38612 * C16979;
    const double C19377 = C13403 * C19120;
    const double C31315 = C186 * C19120;
    const double C82327 = C38700 * C19120;
    const double C34187 = C34185 + C34180;
    const double C31929 = C31928 * C89783;
    const double C2616 = C2612 * C89926;
    const double C41367 = C41366 * C38612;
    const double C57872 = C27952 * C55293;
    const double C57998 = C57994 + C57985;
    const double C79536 = C32082 * C55293;
    const double C79748 = C79746 + C63462;
    const double C28026 =
        (3 * (C88514 + C89010 + C89010 + C88370 * C89387) + C89397 + C89397 +
         C88370 * (2 * C89387 + C89394 + C89394 +
                   C88370 * (C88519 + C89295 + C89295 +
                             C88370 * (2 * C88395 + C88370 * C88524)))) /
        C88090;
    const double C28034 = C26161 * C27460;
    const double C36219 = C13338 * C27460;
    const double C36273 = C186 * C27460;
    const double C36328 = C26160 * C27460;
    const double C68804 = C55429 * C27460;
    const double C39414 = C39406 + C39393;
    const double C39412 = C39404 + C38623;
    const double C39411 = C39403 + C39384;
    const double C39408 = C39400 + C38620;
    const double C41474 = C41472 + C38628;
    const double C43390 = C43386 + C40484;
    const double C43389 = C43385 + C40475;
    const double C45476 = C45474 + C39386;
    const double C46140 = C46138 + C40480;
    const double C49112 = C49110 + C43376;
    const double C57037 = C57029 + C40489;
    const double C57035 = C57027 + C40482;
    const double C57034 = C57026 + C40478;
    const double C57031 = C57023 + C40477;
    const double C59025 = C59023 + C42421;
    const double C68246 = C68244 + C51759;
    const double C13883 = C13877 + C13864;
    const double C13882 = C13876 + C13861;
    const double C13881 = C13875 + C13859;
    const double C13880 = C13874 + C13856;
    const double C13879 = C13873 + C13853;
    const double C13878 = C13872 + C13851;
    const double C15456 = C15454 + C15449;
    const double C15455 = C15453 + C15447;
    const double C16877 = C16873 + C16864;
    const double C16876 = C16872 + C16862;
    const double C16875 = C16871 + C16859;
    const double C16874 = C16870 + C16857;
    const double C18512 = C18511 + C18508;
    const double C19044 = C19042 + C19037;
    const double C19043 = C19041 + C19035;
    const double C21337 = C21336 + C21333;
    const double C27270 = C27264 + C27251;
    const double C27269 = C27263 + C27248;
    const double C27268 = C27262 + C27246;
    const double C27267 = C27261 + C27243;
    const double C27266 = C27260 + C27241;
    const double C27265 = C27259 + C27239;
    const double C28795 = C28793 + C28788;
    const double C28794 = C28792 + C28786;
    const double C29525 = C29524 + C29521;
    const double C31602 = C31601 + C31598;
    const double C35885 = C35884 + C35881;
    const double C39423 = C39415 + C39397;
    const double C39421 = C39413 + C39391;
    const double C39418 = C39410 + C39382;
    const double C39417 = C39409 + C39379;
    const double C43392 = C43388 + C43373;
    const double C45479 = C45477 + C45471;
    const double C46143 = C46141 + C46135;
    const double C49115 = C49113 + C49107;
    const double C57046 = C57038 + C57020;
    const double C57044 = C57036 + C57016;
    const double C57041 = C57033 + C57010;
    const double C57040 = C57032 + C57008;
    const double C68249 = C68247 + C68241;
    const double C38970 = C38964 + C38953;
    const double C38969 = C38963 + C38950;
    const double C38966 = C38960 + C38941;
    const double C39930 = C39926 + C39915;
    const double C39929 = C39925 + C39908;
    const double C40938 = C40934 + C40923;
    const double C40937 = C40933 + C40916;
    const double C41906 = C41904 + C39920;
    const double C42834 = C42832 + C40928;
    const double C43972 = C43970 + C43963;
    const double C73842 = C73838 + C40920;
    const double C73839 = C73835 + C40919;
    const double C76731 = C76729 + C43960;
    const double C79327 = C79325 + C46555;
    const double C82331 = C82329 + C49527;
    const double C84873 = C84871 + C52027;
    const double C38977 = C38971 + C38957;
    const double C38974 = C38968 + C38948;
    const double C38973 = C38967 + C38945;
    const double C39932 = C39928 + C39906;
    const double C40943 = C40939 + C40927;
    const double C40940 = C40936 + C40914;
    const double C41909 = C41907 + C41901;
    const double C42837 = C42835 + C42829;
    const double C73845 = C73841 + C73832;
    const double C73844 = C73840 + C73830;
    const double C76734 = C76732 + C76728;
    const double C79330 = C79328 + C79322;
    const double C84876 = C84874 + C84868;
    const double C55927 = C55921 + C55910;
    const double C55926 = C55920 + C55907;
    const double C55923 = C55917 + C55898;
    const double C56901 = C56897 + C56886;
    const double C56900 = C56896 + C56879;
    const double C57997 = C57993 + C57982;
    const double C57996 = C57992 + C57975;
    const double C58915 = C58913 + C56891;
    const double C59867 = C59865 + C57987;
    const double C61087 = C61085 + C61078;
    const double C73292 = C73288 + C56883;
    const double C73289 = C73285 + C56882;
    const double C77282 = C77280 + C61075;
    const double C78795 = C78793 + C62571;
    const double C79747 = C79745 + C63463;
    const double C82751 = C82749 + C66407;
    const double C55934 = C55928 + C55914;
    const double C55931 = C55925 + C55905;
    const double C55930 = C55924 + C55902;
    const double C56906 = C56902 + C56890;
    const double C56903 = C56899 + C56877;
    const double C57999 = C57995 + C57973;
    const double C58918 = C58916 + C58910;
    const double C59870 = C59868 + C59862;
    const double C61090 = C61088 + C61082;
    const double C73295 = C73291 + C73282;
    const double C73294 = C73290 + C73280;
    const double C77283 = C77281 + C77276;
    const double C78798 = C78796 + C78790;
    const double C82754 = C82752 + C82746;
    const double C34188 = C34186 * C89783;
    const double C66010 = C34186 * C38609;
    const double C2781 = C89926 * C951;
    const double C38725 = C38612 * C951;
    const double C41795 = C38610 * C1171;
    const double C3584 = C89937 * C1998;
    const double C55454 = C55293 * C1998;
    const double C59656 = C38610 * C2398;
    const double C223 = C214 + C215;
    const double C310 = C301 + C302;
    const double C2865 = C2862 + C2863;
    const double C41473 = C41468 + C38629;
    const double C41797 = C41790 + C41791;
    const double C3504 = C3501 + C3502;
    const double C59024 = C59019 + C42420;
    const double C59348 = C59341 + C59342;
    const double C43675 = C4413 * C38610;
    const double C74956 = C74955 * C55293;
    const double C74354 = C74353 + C74351;
    const double C43395 = C43391 + C43381;
    const double C75548 = C74655 * C38612;
    const double C14270 =
        (3 * (C88843 + C88849 + C88849 + C88327 * C89064) + C89075 + C89075 +
         C88327 *
             (2 * C89064 + C89072 + C89072 +
              C88327 * (C89055 + C89068 + C89068 +
                        C88327 * (2 * ae * C89057 +
                                  C88327 * C88212 *
                                      (C88284 * C88285 +
                                       C88435 * bs[7] * std::pow(C88218, 7)) *
                                      C88219)))) /
        C88090;
    const double C17669 =
        (C89075 +
         C88370 * (2 * C89096 + ae * C89087 +
                   C88327 * (C89094 + ae * C88327 * C89083 +
                             C88327 * (ae * C89083 + C88327 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88494)))) /
        C88090;
    const double C14281 = C13403 * C13964;
    const double C45760 = C38700 * C13964;
    const double C17339 = C13403 * C16980;
    const double C49524 = C38700 * C16980;
    const double C62303 = C186 * C16980;
    const double C28027 =
        (3 * (C88876 + C89000 + C89000 + C88370 * C89405) + C89418 + C89418 +
         C88370 *
             (2 * C89405 + C89415 + C89415 +
              C88370 * (C89099 + C89411 + C89411 +
                        C88370 * (2 * ae * C89083 +
                                  C88370 * C88212 *
                                      (C88284 * C88285 +
                                       C88509 * bs[7] * std::pow(C88218, 7)) *
                                      C88219)))) /
        C88090;
    const double C30082 =
        (C89418 +
         C88327 * (2 * C89157 + ae * C89367 +
                   C88370 * (C89082 + ae * C88370 * C89057 +
                             C88370 * (ae * C89057 + C88370 * C88212 *
                                                         std::pow(C88218, 7) *
                                                         bs[7] * C88457)))) /
        C88090;
    const double C28038 = C26161 * C27461;
    const double C68802 = C55429 * C27461;
    const double C88323 = C88322 + C88309;
    const double C2697 =
        (3 * (C88539 + C88543 + C88543 + C88212 * C88743) + C88739 + C88739 +
         C88212 *
             (2 * C88743 + C88740 + C88740 +
              C88212 * (C88733 + C88741 + C88741 +
                        C88212 * (2 * ae * C88327 * C88297 +
                                  C88212 * C88327 *
                                      (C88284 * C88285 +
                                       C88216 * bs[7] * std::pow(C88218, 7)) *
                                      C88219)))) /
        C88090;
    const double C4400 =
        (C88739 +
         C88370 * C88327 *
             (2 * C88405 + ae * C88406 +
              C88212 * (C88399 + ae * C88212 * C88401 +
                        C88212 * (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88374)))) /
        C88090;
    const double C4844 =
        (C88739 +
         C88370 * C88327 *
             (2 * C88487 + ae * C88406 +
              C88212 * (C88485 + ae * C88212 * C88401 +
                        C88212 * (ae * C88401 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88473)))) /
        C88090;
    const double C4175 = C105 * C4166;
    const double C42418 = C38616 * C4166;
    const double C71806 = C13338 * C4166;
    const double C3418 =
        (3 * (C88641 + C88645 + C88645 + C88212 * C88764) + C88760 + C88760 +
         C88212 *
             (2 * C88764 + C88761 + C88761 +
              C88212 * (C88754 + C88762 + C88762 +
                        C88212 * (2 * ae * C88370 * C88297 +
                                  C88212 * C88370 *
                                      (C88284 * C88285 +
                                       C88216 * bs[7] * std::pow(C88218, 7)) *
                                      C88219)))) /
        C88090;
    const double C4514 =
        (C88760 +
         C88327 * C88370 *
             (2 * C88429 + ae * C88363 +
              C88212 * (C88427 + ae * C88212 * C88358 +
                        C88212 * (ae * C88358 + C88212 * std::pow(C88218, 7) *
                                                    bs[7] * C88415)))) /
        C88090;
    const double C89217 = C89216 + C89209;
    const double C21654 =
        (3 * (C89141 + C89145 + C89145 + C88327 * C89290) + C89287 + C89287 +
         C88327 *
             (2 * C89290 + C89288 + C89288 +
              C88327 * (C89282 + C89289 + C89289 +
                        C88327 * (2 * ae * C88370 * C88358 +
                                  C88327 * C88370 *
                                      (C88284 * C88285 +
                                       C88435 * bs[7] * std::pow(C88218, 7)) *
                                      C88219)))) /
        C88090;
    const double C89551 = C89550 + C89539;
    const double C32234 =
        (3 * (C89333 + C89339 + C89339 + C88370 * C89476) + C89487 + C89487 +
         C88370 *
             (2 * C89476 + C89484 + C89484 +
              C88370 * (C89467 + C89480 + C89480 +
                        C88370 * (2 * ae * C89469 +
                                  C88370 * C88327 *
                                      (C88284 * C88285 +
                                       C88509 * bs[7] * std::pow(C88218, 7)) *
                                      C88219)))) /
        C88090;
    const double C32236 = C26161 * C31761;
    const double C85147 = C55429 * C31761;
    const double C56776 = C56775 * C55293;
    const double C39935 = C39931 + C39919;
    const double C56459 = C56458 + C56456;
    const double C43975 = C43973 + C43967;
    const double C82642 = C38612 * C17668;
    const double C18683 = C18680 + C18681;
    const double C18791 = C18789 + C18790;
    const double C21580 = C21577 + C21578;
    const double C21736 = C21734 + C21735;
    const double C82330 = C82325 + C49526;
    const double C78584 = C78581 + C78582;
    const double C82010 = C82003 + C82004;
    const double C34189 = C34187 * C89783;
    const double C58002 = C57998 + C57986;
    const double C79750 = C79748 + C79742;
    const double C36221 = C36219 + C36220;
    const double C36275 = C36273 + C36274;
    const double C39422 = C39414 + C39394;
    const double C39420 = C39412 + C39389;
    const double C39419 = C39411 + C39385;
    const double C39416 = C39408 + C39377;
    const double C41476 = C41474 + C41467;
    const double C43394 = C43390 + C43379;
    const double C43393 = C43389 + C43375;
    const double C45478 = C45476 + C45469;
    const double C46142 = C46140 + C46133;
    const double C49114 = C49112 + C49105;
    const double C57045 = C57037 + C57018;
    const double C57043 = C57035 + C57014;
    const double C57042 = C57034 + C57012;
    const double C57039 = C57031 + C57006;
    const double C59027 = C59025 + C59018;
    const double C68248 = C68246 + C68239;
    const double C13889 = C13883 * C89937;
    const double C13888 = C13882 * C89937;
    const double C72439 = C13882 * C55292;
    const double C13887 = C13881 * C89937;
    const double C72437 = C13881 * C55292;
    const double C13886 = C13880 * C89937;
    const double C78233 = C13880 * C55292;
    const double C13885 = C13879 * C89937;
    const double C72436 = C13879 * C55292;
    const double C13884 = C13878 * C89937;
    const double C72433 = C13878 * C55292;
    const double C15458 = C15456 * C89937;
    const double C15457 = C15455 * C89937;
    const double C74349 = C15455 * C55292;
    const double C16881 = C16877 * C89937;
    const double C72440 = C16877 * C55293;
    const double C16880 = C16876 * C89937;
    const double C72438 = C16876 * C55293;
    const double C76171 = C16876 * C55292;
    const double C16879 = C16875 * C89937;
    const double C72434 = C16875 * C55293;
    const double C76170 = C16875 * C55292;
    const double C16878 = C16874 * C89937;
    const double C72435 = C16874 * C55293;
    const double C81901 = C16874 * C55292;
    const double C18513 = C18512 * C89937;
    const double C19046 = C19044 * C89937;
    const double C81902 = C19044 * C55293;
    const double C19045 = C19043 * C89937;
    const double C76169 = C19043 * C55293;
    const double C78897 = C19043 * C55292;
    const double C21338 = C21337 * C89937;
    const double C78234 = C21337 * C55293;
    const double C76172 = C29525 * C55293;
    const double C78898 = C31602 * C55293;
    const double C38976 = C38970 + C38954;
    const double C38975 = C38969 + C38951;
    const double C38972 = C38966 + C38942;
    const double C39934 = C39930 + C39916;
    const double C39933 = C39929 + C39909;
    const double C40942 = C40938 + C40924;
    const double C40941 = C40937 + C40917;
    const double C41908 = C41906 + C41899;
    const double C42836 = C42834 + C42827;
    const double C43974 = C43972 + C43964;
    const double C73846 = C73842 + C73834;
    const double C73843 = C73839 + C73828;
    const double C76733 = C76731 + C76726;
    const double C79329 = C79327 + C79320;
    const double C82333 = C82331 + C82324;
    const double C84875 = C84873 + C84866;
    const double C55933 = C55927 + C55911;
    const double C55932 = C55926 + C55908;
    const double C55929 = C55923 + C55899;
    const double C56905 = C56901 + C56887;
    const double C56904 = C56900 + C56880;
    const double C58001 = C57997 + C57983;
    const double C58000 = C57996 + C57976;
    const double C58917 = C58915 + C58908;
    const double C59869 = C59867 + C59860;
    const double C61089 = C61087 + C61079;
    const double C73296 = C73292 + C73284;
    const double C73293 = C73289 + C73278;
    const double C77284 = C77282 + C77278;
    const double C78797 = C78795 + C78788;
    const double C79749 = C79747 + C79740;
    const double C82753 = C82751 + C82744;
    const double C2783 = C2780 + C2781;
    const double C38737 = C38724 + C38725;
    const double C41799 = C41794 + C41795;
    const double C3586 = C3583 + C3584;
    const double C55466 = C55453 + C55454;
    const double C59658 = C59655 + C59656;
    const double C41689 = C2865 * C38610;
    const double C41475 = C41473 + C38629;
    const double C59130 = C3504 * C38610;
    const double C59026 = C59024 + C42420;
    const double C74355 = C74354 * C55293;
    const double C88324 = ae * C88323;
    const double C117 =
        (4 * C88278 + C88212 * C88323 + (3 * C88263 + C88212 * C88306) * ae) /
        C88087;
    const double C2696 = (C88327 * C88323) / C88087;
    const double C3417 = (C88370 * C88323) / C88087;
    const double C89218 = ae * C89217;
    const double C18563 =
        (4 * C89051 + C88327 * C89217 + (3 * C89042 + C88327 * C89207) * ae) /
        C88087;
    const double C21412 = (C88370 * C89217) / C88087;
    const double C89552 = ae * C89551;
    const double C35996 =
        (4 * C89396 + C88370 * C89551 + (3 * C89390 + C88370 * C89536) * ae) /
        C88087;
    const double C66011 = C56459 * C38610;
    const double C82644 = C82641 + C82642;
    const double C82224 = C21580 * C38612;
    const double C82332 = C82330 + C49526;
    const double C41477 = C41475 + C41469;
    const double C59028 = C59026 + C59020;
    const double C123 =
        (4 * (2 * C88272 + C88276 + C88276 + C88212 * C88315) + C88324 +
         C88324 +
         C88212 * (3 * C88315 + C88321 + C88321 +
                   C88212 * (2 * C88311 + C88317 + C88317 +
                             C88212 * (C88304 + C88310 + C88310 +
                                       C88212 * (2 * ae * C88297 +
                                                 C88212 *
                                                     (C88284 * C88285 +
                                                      C88216 * bs[7] *
                                                          std::pow(C88218, 7)) *
                                                     C88219))))) /
        C88090;
    const double C2776 =
        (C88324 +
         C88327 * (3 * C88366 + ae * C88367 +
                   C88212 * (2 * C88362 + ae * C88363 +
                             C88212 * (C88356 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88331))))) /
        C88090;
    const double C2939 =
        (C88324 +
         C88327 * (3 * C88431 + ae * C88367 +
                   C88212 * (2 * C88429 + ae * C88363 +
                             C88212 * (C88427 + ae * C88212 * C88358 +
                                       C88212 * (ae * C88358 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88415))))) /
        C88090;
    const double C3579 =
        (C88324 +
         C88370 * (3 * C88409 + ae * C88410 +
                   C88212 * (2 * C88405 + ae * C88406 +
                             C88212 * (C88399 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88374))))) /
        C88090;
    const double C3897 =
        (C88324 +
         C88370 * (3 * C88489 + ae * C88410 +
                   C88212 * (2 * C88487 + ae * C88406 +
                             C88212 * (C88485 + ae * C88212 * C88401 +
                                       C88212 * (ae * C88401 +
                                                 C88212 * std::pow(C88218, 7) *
                                                     bs[7] * C88473))))) /
        C88090;
    const double C134 = C105 * C117;
    const double C2699 = C105 * C2696;
    const double C38630 = C38616 * C2696;
    const double C3420 = C105 * C3417;
    const double C55295 = C38616 * C3417;
    const double C18733 =
        (4 * (2 * C89039 + C89049 + C89049 + C88327 * C89205) + C89218 +
         C89218 +
         C88327 * (3 * C89205 + C89215 + C89215 +
                   C88327 * (2 * C89196 + C89211 + C89211 +
                             C88327 * (C88450 + C89204 + C89204 +
                                       C88327 * (2 * ae * C88358 +
                                                 C88327 *
                                                     (C88284 * C88285 +
                                                      C88435 * bs[7] *
                                                          std::pow(C88218, 7)) *
                                                     C88219))))) /
        C88090;
    const double C21891 =
        (C89218 +
         C88370 * (3 * C89240 + ae * C89231 +
                   C88327 * (2 * C89238 + ae * C89226 +
                             C88327 * (C88503 + ae * C88327 * C88401 +
                                       C88327 * (ae * C88401 +
                                                 C88327 * std::pow(C88218, 7) *
                                                     bs[7] * C88494))))) /
        C88090;
    const double C18735 = C13403 * C18563;
    const double C21656 = C13403 * C21412;
    const double C78511 = C38700 * C21412;
    const double C36325 =
        (4 * (2 * C89387 + C89394 + C89394 + C88370 * C89541) + C89552 +
         C89552 +
         C88370 * (3 * C89541 + C89549 + C89549 +
                   C88370 * (2 * C89533 + C89545 + C89545 +
                             C88370 * (C88524 + C89540 + C89540 +
                                       C88370 * (2 * ae * C88401 +
                                                 C88370 *
                                                     (C88284 * C88285 +
                                                      C88509 * bs[7] *
                                                          std::pow(C88218, 7)) *
                                                     C88219))))) /
        C88090;
    const double C36327 = C26161 * C35996;
    const double C82334 = C82332 + C82326;
    d2eexx[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89843 * C89998 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C89843 * C89879) *
                       C90022 +
                   (((C39420 + C39421) * C89937 * C38611 +
                     (C39422 + C39423) * C89937 * C38612) *
                        C89843 * C89879 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C89843 * C89998) *
                       C90023 +
                   (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                      C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                         C89937 * C38611 +
                     (C41476 + C41477) * C89937 * C38612) *
                        C89843 * C89998 -
                    ((C38615 * C834 + C41470 + C41470 + C38610 * C850 +
                      C38613 * C832 + C41471 + C41471 + C38609 * C848) *
                         C89937 * C38612 +
                     (C41477 + C41476) * C89937 * C38611) *
                        C89843 * C89879) *
                       C2694)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89843 * C89998 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C89843 * C89879) *
              C90022 +
          (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
            (C41584 + C41585) * C38616 + (C41586 + C41587) * C38610) *
               C89937 * C89843 * C89879 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C89843 * C89998) *
              C90023 +
          (((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
            (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
               C89937 * C89843 * C89998 -
           ((C38700 * C842 + C38612 * C952 + C38699 * C841 + C38611 * C951) *
                C38610 +
            (C38700 * C834 + C38612 * C944 + C38699 * C833 + C38611 * C943) *
                C38616 +
            (C41587 + C41586) * C38609 + (C41585 + C41584) * C38614) *
               C89937 * C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C89843 * C89998 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C89843 * C89879) *
              C90022 +
          (((C39652 + C39653 + C39654 + C39655) * C38611 +
            (C39656 + C39657 + C39658 + C39659) * C38612) *
               C89843 * C89879 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C89843 * C89998) *
              C90023 +
          (((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
                C38611 +
            (C41686 + C41687 + C41688 + C41689) * C38612) *
               C89843 * C89998 -
           (((C273 * C842 + C89937 * C1066) * C38610 +
             (C273 * C834 + C89937 * C1058) * C38616 + C1091 * C38609 +
             C1090 * C38614) *
                C38612 +
            (C41689 + C41688 + C41687 + C41686) * C38611) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89843 * C89998 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C89843 * C89879) *
              C90022 +
          (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
            (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
               C89937 * C89843 * C89879 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C89843 * C89998) *
              C90023 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C38699 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C38611 +
            (C41796 + C41797) * C38700 + (C41798 + C41799) * C38612) *
               C89937 * C89843 * C89998 -
           ((C38616 * C944 + C38610 * C1172 + C38614 * C942 + C38609 * C1170) *
                C38612 +
            (C38616 * C834 + C38610 * C842 + C38614 * C832 + C38609 * C840) *
                C38700 +
            (C41799 + C41798) * C38611 + (C41797 + C41796) * C38699) *
               C89937 * C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89843 * C89998 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C89843 * C89879) *
                       C90022 +
                   (((C39933 + C39932) * C38609 + (C41908 + C41909) * C38610) *
                        C89937 * C89843 * C89879 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C89843 * C89998) *
                       C90023 +
                   (((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                        C89937 * C89843 * C89998 -
                    ((C38936 * C834 + C41902 + C41902 + C38612 * C1254 +
                      C38935 * C833 + C41903 + C41903 + C38611 * C1253) *
                         C38610 +
                     (C41909 + C41908) * C38609) *
                        C89937 * C89843 * C89879) *
                       C2694)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89843 * C89998 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C89843 * C89879) *
                       C90022 +
                   (((C40037 + C40036 + C40035 + C40034) * C38609 +
                     (C42008 + C42009 + C42010 + C42011) * C38610) *
                        C89843 * C89879 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C89843 * C89998) *
                       C90023 +
                   (((C39051 + C39050 + C39049 + C39048) * C38609 +
                     (C39052 + C39053 + C39054 + C39055) * C38610) *
                        C89843 * C89998 -
                    (((C273 * C944 + C89937 * C1364) * C38612 +
                      (C273 * C834 + C89937 * C1058) * C38700 + C3101 * C38611 +
                      C2864 * C38699) *
                         C38610 +
                     (C42011 + C42010 + C42009 + C42008) * C38609) *
                        C89843 * C89879) *
                       C2694)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89843 * C89998 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C89843 * C89879) *
              C90022 +
          ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
            ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
               C89843 * C89879 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C89843 * C89998) *
              C90023 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C273 +
             (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                 C89937) *
                C38611 +
            ((C41796 + C41797) * C273 + (C42114 + C42115) * C89937) * C38612) *
               C89843 * C89998 -
           (((C38616 * C1058 + C38610 * C1466 + C38614 * C1056 +
              C38609 * C1464) *
                 C89937 +
             (C38616 * C834 + C38610 * C842 + C38614 * C832 + C38609 * C840) *
                 C273) *
                C38612 +
            ((C42115 + C42114) * C89937 + (C41797 + C41796) * C273) * C38611) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89843 * C89998 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C89843 * C89879) *
              C90022 +
          ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
            ((C41584 + C41585) * C273 + (C42218 + C42219) * C89937) * C38610) *
               C89843 * C89879 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C89843 * C89998) *
              C90023 +
          ((((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
            ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
               C89843 * C89998 -
           (((C38700 * C1058 + C38612 * C1548 + C38699 * C1057 +
              C38611 * C1547) *
                 C89937 +
             (C38700 * C834 + C38612 * C944 + C38699 * C833 + C38611 * C943) *
                 C273) *
                C38610 +
            ((C42219 + C42218) * C89937 + (C41585 + C41584) * C273) * C38609) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezz[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
                      C14650 * C38612) *
                         C38609 +
                     (C39272 + C39273) * C38610) *
                        C89843 * C89998 -
                    ((C40372 + C40373) * C38610 +
                     (C14651 * C38612 + C14650 * C38611) * C38609) *
                        C89843 * C89879) *
                       C90022 +
                   (((C40373 + C40372) * C38609 + (C42318 + C42319) * C38610) *
                        C89843 * C89879 -
                    ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) *
                        C89843 * C89998) *
                       C90023 +
                   (((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) *
                        C89843 * C89998 -
                    (((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C38612 +
                      C3339 * C38611) *
                         C38610 +
                     (C42319 + C42318) * C38609) *
                        C89843 * C89879) *
                       C2694)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C89999 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C89907) *
                        C89998 +
                    (((C43393 + C43392) * C89937 * C38611 +
                      (C38613 * C8592 + C43376 + C43376 + C38609 * C8598 +
                       C38615 * C8591 + C43377 + C43377 + C38610 * C8597) *
                          C89937 * C38612) *
                         C89907 -
                     ((C39418 + C39419) * C89937 * C38612 +
                      (C39417 + C39416) * C89937 * C38611) *
                         C89999) *
                        C89879) *
                       C825 +
                   ((((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                       C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                          C89937 * C38611 +
                      (C43394 + C43395) * C89937 * C38612) *
                         C89907 -
                     ((C39421 + C39420) * C89937 * C38612 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C89937 * C38611) *
                         C89999) *
                        C89998 +
                    (((C39420 + C39421) * C89937 * C38611 +
                      (C39422 + C39423) * C89937 * C38612) *
                         C89999 -
                     ((C38615 * C8590 + C43382 + C43382 + C38610 * C8596 +
                       C38613 * C8591 + C43383 + C43383 + C38609 * C8597) *
                          C89937 * C38612 +
                      (C43395 + C43394) * C89937 * C38611) *
                         C89907) *
                        C89879) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C38614 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C38609 +
             (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
                C89937 * C89999 -
            ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
             (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
              C38611 * C1880) *
                 C38609 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C38614) *
                C89937 * C89907) *
               C89998 +
           (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C38614 +
             (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
              C38612 * C8681) *
                 C38609 +
             (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
                C89937 * C89907 -
            ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
             (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C38609 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C38614) *
                C89937 * C89999) *
               C89879) *
              C825 +
          ((((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
             (C42528 + C42529) * C38616 + (C42530 + C42531) * C38610) *
                C89937 * C89907 -
            ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
             (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
                C89937 * C89999) *
               C89998 +
           (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
             (C41584 + C41585) * C38616 + (C41586 + C41587) * C38610) *
                C89937 * C89999 -
            ((C38700 * C8593 + C38612 * C8679 + C38699 * C4165 +
              C38611 * C4281) *
                 C38610 +
             (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
              C38611 * C4277) *
                 C38616 +
             (C43537 + C43536) * C38609 + (C43535 + C43534) * C38614) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C38614 +
              (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
              C304 * C38610) *
                 C38611 +
             (C39644 + C39645 + C39646 + C39647) * C38612) *
                C89999 -
            ((C43668 + C43669 + C43670 + C43671) * C38612 +
             (C2019 * C38610 + C2020 * C38616 +
              (C273 * C1770 + C89937 * C1994) * C38609 +
              (C273 * C1762 + C89937 * C1986) * C38614) *
                 C38611) *
                C89907) *
               C89998 +
           (((C43671 + C43670 + C43669 + C43668) * C38611 +
             (C17101 * C38614 + C17100 * C38609 + C17104 * C38616 +
              C17105 * C38610) *
                 C38612) *
                C89907 -
            ((C39648 + C39649 + C39650 + C39651) * C38612 +
             (C39647 + C39646 + C39645 + C39644) * C38611) *
                C89999) *
               C89879) *
              C825 +
          ((((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
              C2017 * C38610) *
                 C38611 +
             (C43672 + C43673 + C43674 + C43675) * C38612) *
                C89907 -
            ((C39655 + C39654 + C39653 + C39652) * C38612 +
             (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                 C38611) *
                C89999) *
               C89998 +
           (((C39652 + C39653 + C39654 + C39655) * C38611 +
             (C39656 + C39657 + C39658 + C39659) * C38612) *
                C89999 -
            (((C273 * C8593 + C89937 * C8759) * C38610 +
              (C273 * C8590 + C89937 * C8756) * C38616 + C17105 * C38609 +
              C17104 * C38614) *
                 C38612 +
             (C43675 + C43674 + C43673 + C43672) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C38699 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C38611 +
             (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
                C89937 * C89999 -
            ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
             (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
              C38609 * C2100) *
                 C38611 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C38699) *
                C89937 * C89907) *
               C89998 +
           (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
             (C38614 * C8592 + C38609 * C8595 + C38616 * C8591 +
              C38610 * C8594) *
                 C38700 +
             (C38614 * C8678 + C38609 * C8838 + C38616 * C8677 +
              C38610 * C8837) *
                 C38612) *
                C89937 * C89907 -
            ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
             (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
                C89937 * C89999) *
               C89879) *
              C825 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C38699 +
             (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
              C38610 * C2098) *
                 C38611 +
             (C43826 + C43827) * C38700 + (C43828 + C43829) * C38612) *
                C89937 * C89907 -
            ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
             (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C38611 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C38699) *
                C89937 * C89999) *
               C89998 +
           (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
             (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
                C89937 * C89999 -
            ((C38616 * C8676 + C38610 * C8836 + C38614 * C8677 +
              C38609 * C8837) *
                 C38612 +
             (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
              C38609 * C8594) *
                 C38700 +
             (C43829 + C43828) * C38611 + (C43827 + C43826) * C38699) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C89999 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C89907) *
                        C89998 +
                    (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
                       C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                          C38609 +
                      (C43974 + C43975) * C38610) *
                         C89937 * C89907 -
                     ((C39932 + C39933) * C38610 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C38609) *
                         C89937 * C89999) *
                        C89879) *
                       C825 +
                   ((((C40941 + C40940) * C38609 + (C42836 + C42837) * C38610) *
                         C89937 * C89907 -
                     ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                         C89937 * C89999) *
                        C89998 +
                    (((C39933 + C39932) * C38609 + (C41908 + C41909) * C38610) *
                         C89937 * C89999 -
                     ((C38936 * C8590 + C43968 + C43968 + C38612 * C8913 +
                       C38935 * C4161 + C43969 + C43969 + C38611 * C4615) *
                          C38610 +
                      (C43975 + C43974) * C38609) *
                         C89937 * C89907) *
                        C89879) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C89999 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C89907) *
                        C89998 +
                    (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                       C17448 * C38612) *
                          C38609 +
                      (C44106 + C44107 + C44108 + C44109) * C38610) *
                         C89907 -
                     ((C40034 + C40035 + C40036 + C40037) * C38610 +
                      (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                       C14066 * C38699) *
                          C38609) *
                         C89999) *
                        C89879) *
                       C825 +
                   ((((C41045 + C41044 + C41043 + C41042) * C38609 +
                      (C42936 + C42937 + C42938 + C42939) * C38610) *
                         C89907 -
                     ((C39048 + C39049 + C39050 + C39051) * C38610 +
                      (C39047 + C39046 + C39045 + C39044) * C38609) *
                         C89999) *
                        C89998 +
                    (((C40037 + C40036 + C40035 + C40034) * C38609 +
                      (C42008 + C42009 + C42010 + C42011) * C38610) *
                         C89999 -
                     (((C273 * C8676 + C89937 * C8993) * C38612 +
                       (C273 * C8590 + C89937 * C8756) * C38700 +
                       C4741 * C38611 + C4412 * C38699) *
                          C38610 +
                      (C44109 + C44108 + C44107 + C44106) * C38609) *
                         C89907) *
                        C89879) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                  C273 +
              (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                  C89937) *
                 C38611 +
             ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
                C89999 -
            (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
             ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
               C38609 * C2394) *
                  C89937 +
              (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
               C38609 * C1770) *
                  C273) *
                 C38611) *
                C89907) *
               C89998 +
           ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
             ((C38614 * C8592 + C38609 * C8595 + C38616 * C8591 +
               C38610 * C8594) *
                  C273 +
              (C38614 * C8758 + C38609 * C9072 + C38616 * C8757 +
               C38610 * C9071) *
                  C89937) *
                 C38612) *
                C89907 -
            (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
             ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
                C89999) *
               C89879) *
              C825 +
          (((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
               C38610 * C1768) *
                  C273 +
              (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
               C38610 * C2392) *
                  C89937) *
                 C38611 +
             ((C43826 + C43827) * C273 + (C44250 + C44251) * C89937) * C38612) *
                C89907 -
            (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
             ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                  C89937 +
              (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                  C273) *
                 C38611) *
                C89999) *
               C89998 +
           ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
             ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
                C89999 -
            (((C38616 * C8756 + C38610 * C9070 + C38614 * C8757 +
               C38609 * C9071) *
                  C89937 +
              (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
               C38609 * C8594) *
                  C273) *
                 C38612 +
             ((C44251 + C44250) * C89937 + (C43827 + C43826) * C273) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                  C273 +
              (C38699 * C274 + C38611 * C633 + C38700 * C1053 +
               C38612 * C1543) *
                  C89937) *
                 C38609 +
             ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
                C89999 -
            (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
             ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
               C38611 * C2476) *
                  C89937 +
              (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
               C38611 * C1872) *
                  C273) *
                 C38609) *
                C89907) *
               C89998 +
           ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
               C38612 * C8678) *
                  C273 +
              (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
               C38612 * C9149) *
                  C89937) *
                 C38609 +
             ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
                C89907 -
            (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
             ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
               C38611 * C1543) *
                  C89937 +
              (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                  C273) *
                 C38609) *
                C89999) *
               C89879) *
              C825 +
          (((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
             ((C42528 + C42529) * C273 + (C43140 + C43141) * C89937) * C38610) *
                C89907 -
            (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
             ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
                C89999) *
               C89998 +
           ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
             ((C41584 + C41585) * C273 + (C42218 + C42219) * C89937) * C38610) *
                C89999 -
            (((C38700 * C8756 + C38612 * C9147 + C38699 * C4395 +
               C38611 * C4945) *
                  C89937 +
              (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
               C38611 * C4277) *
                  C273) *
                 C38610 +
             ((C44387 + C44386) * C89937 + (C43535 + C43534) * C273) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
              C14650 * C38612) *
                 C38609 +
             (C39272 + C39273) * C38610) *
                C89999 -
            ((C41359 + C41360) * C38610 +
             (C17786 * C38612 +
              (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                 C38609) *
                C89907) *
               C89998 +
           (((C17786 * C38611 + C17785 * C38612) * C38609 +
             (C44518 + C44519) * C38610) *
                C89907 -
            ((C40372 + C40373) * C38610 +
             (C14651 * C38612 + C14650 * C38611) * C38609) *
                C89999) *
               C89879) *
              C825 +
          ((((C41360 + C41359) * C38609 + (C43240 + C43241) * C38610) * C89907 -
            ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) *
                C89999) *
               C89998 +
           (((C40373 + C40372) * C38609 + (C42318 + C42319) * C38610) * C89999 -
            (((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C38612 +
              C5073 * C38611) *
                 C38610 +
             (C44519 + C44518) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexx[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89843 * C822 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C89843 * C823 +
                    ((C39419 + C39418) * C89937 * C38611 +
                     (C38613 * C5803 + C39386 + C39386 + C38609 * C5809 +
                      C38615 * C5802 + C39387 + C39387 + C38610 * C5808) *
                         C89937 * C38612) *
                        C89843 * C824) *
                       C825 +
                   (((C39420 + C39421) * C89937 * C38611 +
                     (C39422 + C39423) * C89937 * C38612) *
                        C89843 * C823 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C89843 * C822 -
                    ((C38615 * C5801 + C39398 + C39398 + C38610 * C5807 +
                      C38613 * C5802 + C39399 + C39399 + C38609 * C5808) *
                         C89937 * C38612 +
                     (C39423 + C39422) * C89937 * C38611) *
                        C89843 * C824) *
                       C89814)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                     C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                        C89937 * C38611 +
                    (C38613 * C829 + C38620 + C38620 + C38609 * C845 +
                     C38615 * C828 + C38621 + C38621 + C38610 * C844) *
                        C89937 * C38612) *
                       C89843 * C89827 * C96 -
                   ((C38615 * C827 + C38622 + C38622 + C38610 * C843 +
                     C38613 * C828 + C38623 + C38623 + C38609 * C844) *
                        C89937 * C38612 +
                    (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                     C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                        C89937 * C38611) *
                       C89843 * C89827 * C97 +
                   ((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                     C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                        C89937 * C38611 +
                    (C38613 * C827 + C38628 + C38628 + C38609 * C843 +
                     C38615 * C833 + C38629 + C38629 + C38610 * C849) *
                        C89937 * C38612) *
                       C89843 * C89827 * C98 -
                   ((C38615 * C2695 + C38630 + C38630 + C38610 * C2697 +
                     C38613 * C833 + C38631 + C38631 + C38609 * C849) *
                        C89937 * C38612 +
                    (C38615 * C110 + C38632 + C38632 + C38610 * C122 +
                     C38613 * C109 + C38633 + C38633 + C38609 * C121) *
                        C89937 * C38611) *
                       C89843 * C89827 * C99)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C1757 -
                    ((C38615 * C4160 + C40474 + C40474 + C38610 * C4168 +
                      C38613 * C4159 + C40475 + C40475 + C38609 * C4167) *
                         C89937 * C38612 +
                     (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                      C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                         C89937 * C38611) *
                        C1758 +
                    ((C38613 * C1763 + C40478 + C40478 + C38609 * C1779 +
                      C38615 * C1764 + C40479 + C40479 + C38610 * C1780) *
                         C89937 * C38611 +
                     (C38613 * C6325 + C40480 + C40480 + C38609 * C6331 +
                      C38615 * C6324 + C40481 + C40481 + C38610 * C6330) *
                         C89937 * C38612) *
                        C1759) *
                       C89827 * C825 +
                   (((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                      C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                         C89937 * C38611 +
                     (C38613 * C4160 + C40484 + C40484 + C38609 * C4168 +
                      C38615 * C4161 + C40485 + C40485 + C38610 * C4169) *
                         C89937 * C38612) *
                        C1758 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C1757 -
                    ((C38615 * C6323 + C40486 + C40486 + C38610 * C6329 +
                      C38613 * C6324 + C40487 + C40487 + C38609 * C6330) *
                         C89937 * C38612 +
                     (C38615 * C1765 + C40488 + C40488 + C38610 * C1781 +
                      C38613 * C1764 + C40489 + C40489 + C38609 * C1780) *
                         C89937 * C38611) *
                        C1759) *
                       C89827 * C89814)) /
                     (p * q * std::sqrt(p + q));
    d2eexy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89843 * C822 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C89843 * C823 +
           ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C38614 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C38609 +
            (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
               C89937 * C89843 * C824) *
              C825 +
          (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
            (C38699 * C827 + C38611 * C937 + C38700 * C832 + C38612 * C942) *
                C38616 +
            (C38699 * C835 + C38611 * C945 + C38700 * C840 + C38612 * C950) *
                C38610) *
               C89937 * C89843 * C823 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C89843 * C822 -
           ((C38700 * C5804 + C38612 * C5866 + C38699 * C840 + C38611 * C950) *
                C38610 +
            (C38700 * C5801 + C38612 * C5863 + C38699 * C832 + C38611 * C942) *
                C38616 +
            (C39545 + C39544) * C38609 + (C39543 + C39542) * C38614) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C38614 +
           (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
               C38609 +
           (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
              C89937 * C89843 * C89827 * C96 -
          ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
           (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
              C89937 * C89843 * C89827 * C97 +
          ((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
           (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
              C89937 * C89843 * C89827 * C98 -
          ((C38700 * C2696 + C38612 * C2776 + C38699 * C116 + C38611 * C197) *
               C38610 +
           (C38700 * C2695 + C38612 * C2775 + C38699 * C110 + C38611 * C191) *
               C38616 +
           (C38737 + C38736) * C38609 + (C38735 + C38734) * C38614) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C1757 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C1758 +
           ((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
             C38612 * C6411) *
                C38614 +
            (C38699 * C1771 + C38611 * C1881 + C38700 * C6328 +
             C38612 * C6414) *
                C38609 +
            (C40608 + C40609) * C38616 + (C40610 + C40611) * C38610) *
               C89937 * C1759) *
              C89827 * C825 +
          (((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
            (C38699 * C1760 + C38611 * C1870 + C38700 * C4161 +
             C38612 * C4277) *
                C38616 +
            (C38699 * C1768 + C38611 * C1878 + C38700 * C4165 +
             C38612 * C4281) *
                C38610) *
               C89937 * C1758 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C1757 -
           ((C38700 * C6326 + C38612 * C6412 + C38699 * C1773 +
             C38611 * C1883) *
                C38610 +
            (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
             C38611 * C1875) *
                C38616 +
            (C40611 + C40610) * C38609 + (C40609 + C40608) * C38614) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C89843 * C822 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C89843 * C823 +
           ((C39651 + C39650 + C39649 + C39648) * C38611 +
            (C14071 * C38614 + C14070 * C38609 + C14072 * C38616 +
             C14073 * C38610) *
                C38612) *
               C89843 * C824) *
              C825 +
          (((C39652 + C39653 + C39654 + C39655) * C38611 +
            (C39656 + C39657 + C39658 + C39659) * C38612) *
               C89843 * C823 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C89843 * C822 -
           (((C273 * C5804 + C89937 * C5922) * C38610 +
             (C273 * C5801 + C89937 * C5919) * C38616 + C14073 * C38609 +
             C14072 * C38614) *
                C38612 +
            (C39659 + C39658 + C39657 + C39656) * C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C38614 +
            (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
            C304 * C38610) *
               C38611 +
           (C14066 * C38614 + C14067 * C38609 + C1087 * C38616 +
            C1086 * C38610) *
               C38612) *
              C89843 * C89827 * C96 -
          ((C1084 * C38610 + C1085 * C38616 + C1086 * C38609 + C1087 * C38614) *
               C38612 +
           (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
               C38611) *
              C89843 * C89827 * C97 +
          ((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
               C38611 +
           (C1085 * C38614 + C1084 * C38609 + C2864 * C38616 + C2865 * C38610) *
               C38612) *
              C89843 * C89827 * C98 -
          (((C273 * C2696 + C89937 * C2858) * C38610 +
            (C273 * C2695 + C89937 * C2857) * C38616 + C2865 * C38609 +
            C2864 * C38614) *
               C38612 +
           (C310 * C38610 + C309 * C38616 + C307 * C38609 + C308 * C38614) *
               C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C1757 -
           ((C4411 * C38610 + C4410 * C38616 + C17102 * C38609 +
             C17103 * C38614) *
                C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C1758 +
           (((C273 * C1763 + C89937 * C1987) * C38614 +
             (C273 * C1771 + C89937 * C1995) * C38609 + C2021 * C38616 +
             C2022 * C38610) *
                C38611 +
            (C19207 * C38614 + C19208 * C38609 + C40714 * C38616 +
             C40715 * C38610) *
                C38612) *
               C1759) *
              C89827 * C825 +
          (((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
             C2017 * C38610) *
                C38611 +
            (C4410 * C38614 + C4411 * C38609 + C4412 * C38616 +
             C4413 * C38610) *
                C38612) *
               C1758 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C1757 -
           (((C273 * C6326 + C89937 * C6492) * C38610 +
             (C273 * C6323 + C89937 * C6489) * C38616 + C40715 * C38609 +
             C40714 * C38614) *
                C38612 +
            (C2024 * C38610 + C2023 * C38616 + C2022 * C38609 +
             C2021 * C38614) *
                C38611) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89843 * C822 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C89843 * C823 +
           ((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
            (C38614 * C5803 + C38609 * C5806 + C38616 * C5802 +
             C38610 * C5805) *
                C38700 +
            (C38614 * C5865 + C38609 * C5977 + C38616 * C5864 +
             C38610 * C5976) *
                C38612) *
               C89937 * C89843 * C824) *
              C825 +
          (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
            (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
               C89937 * C89843 * C823 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C89843 * C822 -
           ((C38616 * C5863 + C38610 * C5975 + C38614 * C5864 +
             C38609 * C5976) *
                C38612 +
            (C38616 * C5801 + C38610 * C5804 + C38614 * C5802 +
             C38609 * C5805) *
                C38700 +
            (C39805 + C39804) * C38611 + (C39803 + C39802) * C38699) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C38699 +
           (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
               C38611 +
           (C38614 * C829 + C38609 * C837 + C38616 * C828 + C38610 * C836) *
               C38700 +
           (C38614 * C939 + C38609 * C1167 + C38616 * C938 + C38610 * C1166) *
               C38612) *
              C89937 * C89843 * C89827 * C96 -
          ((C38616 * C937 + C38610 * C1165 + C38614 * C938 + C38609 * C1166) *
               C38612 +
           (C38616 * C827 + C38610 * C835 + C38614 * C828 + C38609 * C836) *
               C38700 +
           (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
               C38611 +
           (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
               C38699) *
              C89937 * C89843 * C89827 * C97 +
          ((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
               C38699 +
           (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
               C38611 +
           (C38614 * C827 + C38609 * C835 + C38616 * C833 + C38610 * C841) *
               C38700 +
           (C38614 * C937 + C38609 * C1165 + C38616 * C943 + C38610 * C1171) *
               C38612) *
              C89937 * C89843 * C89827 * C98 -
          ((C38616 * C2775 + C38610 * C2939 + C38614 * C943 + C38609 * C1171) *
               C38612 +
           (C38616 * C2695 + C38610 * C2696 + C38614 * C833 + C38609 * C841) *
               C38700 +
           (C38616 * C191 + C38610 * C364 + C38614 * C190 + C38609 * C363) *
               C38611 +
           (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
               C38699) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C1757 -
           ((C38616 * C4276 + C38610 * C4512 + C38614 * C4275 +
             C38609 * C4511) *
                C38612 +
            (C38616 * C4160 + C38610 * C4164 + C38614 * C4159 +
             C38609 * C4163) *
                C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C1758 +
           ((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
             C38610 * C1772) *
                C38699 +
            (C38614 * C1873 + C38609 * C2101 + C38616 * C1874 +
             C38610 * C2102) *
                C38611 +
            (C38614 * C6325 + C38609 * C6328 + C38616 * C6324 +
             C38610 * C6327) *
                C38700 +
            (C38614 * C6411 + C38609 * C6571 + C38616 * C6410 +
             C38610 * C6570) *
                C38612) *
               C89937 * C1759) *
              C89827 * C825 +
          (((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
             C38610 * C1768) *
                C38699 +
            (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
             C38610 * C2098) *
                C38611 +
            (C38614 * C4160 + C38609 * C4164 + C38616 * C4161 +
             C38610 * C4165) *
                C38700 +
            (C38614 * C4276 + C38609 * C4512 + C38616 * C4277 +
             C38610 * C4513) *
                C38612) *
               C89937 * C1758 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C1757 -
           ((C38616 * C6409 + C38610 * C6569 + C38614 * C6410 +
             C38609 * C6570) *
                C38612 +
            (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
             C38609 * C6327) *
                C38700 +
            (C38616 * C1875 + C38610 * C2103 + C38614 * C1874 +
             C38609 * C2102) *
                C38611 +
            (C38616 * C1765 + C38610 * C1773 + C38614 * C1764 +
             C38609 * C1772) *
                C38699) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89843 * C822 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C89843 * C823 +
                    ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                      C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                         C38609 +
                     (C39934 + C39935) * C38610) *
                        C89937 * C89843 * C824) *
                       C825 +
                   (((C39933 + C39932) * C38609 +
                     (C38935 * C827 + C39920 + C39920 + C38611 * C1247 +
                      C38936 * C832 + C39921 + C39921 + C38612 * C1252) *
                         C38610) *
                        C89937 * C89843 * C823 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C89843 * C822 -
                    ((C38936 * C5801 + C39922 + C39922 + C38612 * C6028 +
                      C38935 * C832 + C39923 + C39923 + C38611 * C1252) *
                         C38610 +
                     (C39935 + C39934) * C38609) *
                        C89937 * C89843 * C824) *
                       C89814)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                     C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                        C38609 +
                    (C38972 + C38973) * C38610) *
                       C89937 * C89843 * C89827 * C96 -
                   ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                       C89937 * C89843 * C89827 * C97 +
                   ((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                       C89937 * C89843 * C89827 * C98 -
                   ((C38936 * C2695 + C38958 + C38958 + C38612 * C3014 +
                     C38935 * C110 + C38959 + C38959 + C38611 * C421) *
                        C38610 +
                    (C38977 + C38976) * C38609) *
                       C89937 * C89843 * C89827 * C99)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C1757 -
                    ((C40940 + C40941) * C38610 +
                     (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                      C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                         C38609) *
                        C89937 * C1758 +
                    ((C38935 * C1763 + C40920 + C40920 + C38611 * C2183 +
                      C38936 * C6325 + C40921 + C40921 + C38612 * C6648) *
                         C38609 +
                     (C40942 + C40943) * C38610) *
                        C89937 * C1759) *
                       C89827 * C825 +
                   (((C40941 + C40940) * C38609 +
                     (C38935 * C1760 + C40928 + C40928 + C38611 * C2180 +
                      C38936 * C4161 + C40929 + C40929 + C38612 * C4615) *
                         C38610) *
                        C89937 * C1758 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C1757 -
                    ((C38936 * C6323 + C40930 + C40930 + C38612 * C6646 +
                      C38935 * C1765 + C40931 + C40931 + C38611 * C2185) *
                         C38610 +
                     (C40943 + C40942) * C38609) *
                        C89937 * C1759) *
                       C89827 * C89814)) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89843 * C822 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C89843 * C823 +
                    ((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                      C14370 * C38612) *
                         C38609 +
                     (C40038 + C40039 + C40040 + C40041) * C38610) *
                        C89843 * C824) *
                       C825 +
                   (((C40037 + C40036 + C40035 + C40034) * C38609 +
                     (C1085 * C38699 + C1378 * C38611 + C1090 * C38700 +
                      C1381 * C38612) *
                         C38610) *
                        C89843 * C823 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C89843 * C822 -
                    (((C273 * C5863 + C89937 * C6084) * C38612 +
                      (C273 * C5801 + C89937 * C5919) * C38700 +
                      C1381 * C38611 + C1090 * C38699) *
                         C38610 +
                     (C40041 + C40040 + C40039 + C40038) * C38609) *
                        C89843 * C824) *
                       C89814)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C273 * C106 + C89937 * C274) * C38699 +
                     (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                     C14368 * C38612) *
                        C38609 +
                    (C39044 + C39045 + C39046 + C39047) * C38610) *
                       C89843 * C89827 * C96 -
                   ((C39048 + C39049 + C39050 + C39051) * C38610 +
                    (C39047 + C39046 + C39045 + C39044) * C38609) *
                       C89843 * C89827 * C97 +
                   ((C39051 + C39050 + C39049 + C39048) * C38609 +
                    (C39052 + C39053 + C39054 + C39055) * C38610) *
                       C89843 * C89827 * C98 -
                   (((C273 * C2775 + C89937 * C3095) * C38612 +
                     (C273 * C2695 + C89937 * C2857) * C38700 + C521 * C38611 +
                     C309 * C38699) *
                        C38610 +
                    (C39055 + C39054 + C39053 + C39052) * C38609) *
                       C89843 * C89827 * C99)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C1757 -
                    ((C41042 + C41043 + C41044 + C41045) * C38610 +
                     (C17449 * C38612 + C17103 * C38700 +
                      (C273 * C1872 + C89937 * C2292) * C38611 +
                      (C273 * C1762 + C89937 * C1986) * C38699) *
                         C38609) *
                        C1758 +
                    (((C273 * C1763 + C89937 * C1987) * C38699 +
                      (C273 * C1873 + C89937 * C2293) * C38611 +
                      C19207 * C38700 + C19459 * C38612) *
                         C38609 +
                     (C41046 + C41047 + C41048 + C41052) * C38610) *
                        C1759) *
                       C89827 * C825 +
                   (((C41045 + C41044 + C41043 + C41042) * C38609 +
                     (C2018 * C38699 + C2311 * C38611 + C4412 * C38700 +
                      C4741 * C38612) *
                         C38610) *
                        C1758 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C1757 -
                    (((C273 * C6409 + C89937 * C6726) * C38612 +
                      (C273 * C6323 + C89937 * C6489) * C38700 +
                      C2314 * C38611 + C2023 * C38699) *
                         C38610 +
                     (C41052 + C41048 + C41047 + C41046) * C38609) *
                        C1759) *
                       C89827 * C89814)) /
                     (p * q * std::sqrt(p + q));
    d2eezx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89843 * C822 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C89843 * C823 +
           (((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
            ((C38614 * C5803 + C38609 * C5806 + C38616 * C5802 +
              C38610 * C5805) *
                 C273 +
             (C38614 * C5921 + C38609 * C6139 + C38616 * C5920 +
              C38610 * C6138) *
                 C89937) *
                C38612) *
               C89843 * C824) *
              C825 +
          ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
            ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
               C89843 * C823 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C89843 * C822 -
           (((C38616 * C5919 + C38610 * C6137 + C38614 * C5920 +
              C38609 * C6138) *
                 C89937 +
             (C38616 * C5801 + C38610 * C5804 + C38614 * C5802 +
              C38609 * C5805) *
                 C273) *
                C38612 +
            ((C40163 + C40162) * C89937 + (C39803 + C39802) * C273) * C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C273 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C89937) *
               C38611 +
           ((C38614 * C829 + C38609 * C837 + C38616 * C828 + C38610 * C836) *
                C273 +
            (C38614 * C1053 + C38609 * C1461 + C38616 * C1052 +
             C38610 * C1460) *
                C89937) *
               C38612) *
              C89843 * C89827 * C96 -
          (((C38616 * C1051 + C38610 * C1459 + C38614 * C1052 +
             C38609 * C1460) *
                C89937 +
            (C38616 * C827 + C38610 * C835 + C38614 * C828 + C38609 * C836) *
                C273) *
               C38612 +
           ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C89937 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C273) *
               C38611) *
              C89843 * C89827 * C97 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C273 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C89937) *
               C38611 +
           ((C38614 * C827 + C38609 * C835 + C38616 * C833 + C38610 * C841) *
                C273 +
            (C38614 * C1051 + C38609 * C1459 + C38616 * C1057 +
             C38610 * C1465) *
                C89937) *
               C38612) *
              C89843 * C89827 * C98 -
          (((C38616 * C2857 + C38610 * C3176 + C38614 * C1057 +
             C38609 * C1465) *
                C89937 +
            (C38616 * C2695 + C38610 * C2696 + C38614 * C833 + C38609 * C841) *
                C273) *
               C38612 +
           ((C38616 * C278 + C38610 * C581 + C38614 * C277 + C38609 * C580) *
                C89937 +
            (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
                C273) *
               C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C1757 -
           (((C38616 * C4394 + C38610 * C4842 + C38614 * C4393 +
              C38609 * C4841) *
                 C89937 +
             (C38616 * C4160 + C38610 * C4164 + C38614 * C4159 +
              C38609 * C4163) *
                 C273) *
                C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C1758 +
           (((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
              C38610 * C1772) *
                 C273 +
             (C38614 * C1987 + C38609 * C2395 + C38616 * C1988 +
              C38610 * C2396) *
                 C89937) *
                C38611 +
            ((C38614 * C6325 + C38609 * C6328 + C38616 * C6324 +
              C38610 * C6327) *
                 C273 +
             (C38614 * C6491 + C38609 * C6805 + C38616 * C6490 +
              C38610 * C6804) *
                 C89937) *
                C38612) *
               C1759) *
              C89827 * C825 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C273 +
             (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
              C38610 * C2392) *
                 C89937) *
                C38611 +
            ((C38614 * C4160 + C38609 * C4164 + C38616 * C4161 +
              C38610 * C4165) *
                 C273 +
             (C38614 * C4394 + C38609 * C4842 + C38616 * C4395 +
              C38610 * C4843) *
                 C89937) *
                C38612) *
               C1758 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C1757 -
           (((C38616 * C6489 + C38610 * C6803 + C38614 * C6490 +
              C38609 * C6804) *
                 C89937 +
             (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
              C38609 * C6327) *
                 C273) *
                C38612 +
            ((C38616 * C1989 + C38610 * C2397 + C38614 * C1988 +
              C38609 * C2396) *
                 C89937 +
             (C38616 * C1765 + C38610 * C1773 + C38614 * C1764 +
              C38609 * C1772) *
                 C273) *
                C38611) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89843 * C822 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C89843 * C823 +
           (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C273 +
             (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
              C38612 * C6192) *
                 C89937) *
                C38609 +
            ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
               C89843 * C824) *
              C825 +
          ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
            ((C38699 * C827 + C38611 * C937 + C38700 * C832 + C38612 * C942) *
                 C273 +
             (C38699 * C1051 + C38611 * C1541 + C38700 * C1056 +
              C38612 * C1546) *
                 C89937) *
                C38610) *
               C89843 * C823 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C89843 * C822 -
           (((C38700 * C5919 + C38612 * C6190 + C38699 * C1056 +
              C38611 * C1546) *
                 C89937 +
             (C38700 * C5801 + C38612 * C5863 + C38699 * C832 + C38611 * C942) *
                 C273) *
                C38610 +
            ((C40273 + C40272) * C89937 + (C39543 + C39542) * C273) * C38609) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C273 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C89937) *
               C38609 +
           ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
              C89843 * C89827 * C96 -
          (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
           ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
              C89843 * C89827 * C97 +
          (((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
           ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
              C89843 * C89827 * C98 -
          (((C38700 * C2857 + C38612 * C3251 + C38699 * C278 + C38611 * C637) *
                C89937 +
            (C38700 * C2695 + C38612 * C2775 + C38699 * C110 + C38611 * C191) *
                C273) *
               C38610 +
           ((C39205 + C39204) * C89937 + (C38735 + C38734) * C273) * C38609) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C1757 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C1758 +
           (((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
              C38612 * C6411) *
                 C273 +
             (C38699 * C1987 + C38611 * C2477 + C38700 * C6491 +
              C38612 * C6882) *
                 C89937) *
                C38609 +
            ((C40608 + C40609) * C273 + (C41259 + C41260) * C89937) * C38610) *
               C1759) *
              C89827 * C825 +
          ((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
            ((C38699 * C1760 + C38611 * C1870 + C38700 * C4161 +
              C38612 * C4277) *
                 C273 +
             (C38699 * C1984 + C38611 * C2474 + C38700 * C4395 +
              C38612 * C4945) *
                 C89937) *
                C38610) *
               C1758 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C1757 -
           (((C38700 * C6489 + C38612 * C6880 + C38699 * C1989 +
              C38611 * C2479) *
                 C89937 +
             (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
              C38611 * C1875) *
                 C273) *
                C38610 +
            ((C41260 + C41259) * C89937 + (C40609 + C40608) * C273) * C38609) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C89843 * C822 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C89843 * C823 +
           ((C14651 * C38611 + C14652 * C38612) * C38609 +
            (C40374 + C40375) * C38610) *
               C89843 * C824) *
              C825 +
          (((C40373 + C40372) * C38609 +
            (C1676 * C38611 + C1679 * C38612) * C38610) *
               C89843 * C823 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C89843 *
               C822 -
           (((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C38612 +
             C1679 * C38611) *
                C38610 +
            (C40375 + C40374) * C38609) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
            C14650 * C38612) *
               C38609 +
           (C39272 + C39273) * C38610) *
              C89843 * C89827 * C96 -
          ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C89843 *
              C89827 * C97 +
          ((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) * C89843 *
              C89827 * C98 -
          (((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C38612 +
            C744 * C38611) *
               C38610 +
           (C39277 + C39276) * C38609) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C1757 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C1758 +
           (((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C38611 +
             C19705 * C38612) *
                C38609 +
            (C41361 + C41367) * C38610) *
               C1759) *
              C89827 * C825 +
          (((C41360 + C41359) * C38609 +
            (C2609 * C38611 + C5073 * C38612) * C38610) *
               C1758 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C1757 -
           (((C711 * C6323 + C6961 + C6961 + C89937 * C6957) * C38612 +
             C2612 * C38611) *
                C38610 +
            (C41367 + C41361) * C38609) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89999 -
                    ((C38615 * C4160 + C40474 + C40474 + C38610 * C4168 +
                      C38613 * C4159 + C40475 + C40475 + C38609 * C4167) *
                         C89937 * C38612 +
                     (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                      C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                         C89937 * C38611) *
                        C89907) *
                       C89827 * C90022 +
                   (((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                      C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                         C89937 * C38611 +
                     (C38613 * C4160 + C40484 + C40484 + C38609 * C4168 +
                      C38615 * C4161 + C40485 + C40485 + C38610 * C4169) *
                         C89937 * C38612) *
                        C89907 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C89999) *
                       C89827 * C90023 +
                   (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                      C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                         C89937 * C38611 +
                     (C41476 + C41477) * C89937 * C38612) *
                        C89999 -
                    ((C38615 * C4162 + C42418 + C42418 + C38610 * C4170 +
                      C38613 * C4161 + C42419 + C42419 + C38609 * C4169) *
                         C89937 * C38612 +
                     (C38615 * C1766 + C42420 + C42420 + C38610 * C1782 +
                      C38613 * C1760 + C42421 + C42421 + C38609 * C1776) *
                         C89937 * C38611) *
                        C89907) *
                       C89827 * C2694)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89999 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C89907) *
              C89827 * C90022 +
          (((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
            (C42528 + C42529) * C38616 + (C42530 + C42531) * C38610) *
               C89937 * C89907 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C89999) *
              C89827 * C90023 +
          (((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
            (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
               C89937 * C89999 -
           ((C38700 * C4166 + C38612 * C4282 + C38699 * C1774 +
             C38611 * C1884) *
                C38610 +
            (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
             C38611 * C1876) *
                C38616 +
            (C42531 + C42530) * C38609 + (C42529 + C42528) * C38614) *
               C89937 * C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C89999 -
           ((C4411 * C38610 + C4410 * C38616 + C17102 * C38609 +
             C17103 * C38614) *
                C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C89907) *
              C89827 * C90022 +
          (((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
             C2017 * C38610) *
                C38611 +
            (C4410 * C38614 + C4411 * C38609 + C4412 * C38616 +
             C4413 * C38610) *
                C38612) *
               C89907 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C89999) *
              C89827 * C90023 +
          (((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
                C38611 +
            (C41686 + C41687 + C41688 + C41689) * C38612) *
               C89999 -
           (((C273 * C4166 + C89937 * C4400) * C38610 +
             (C273 * C4162 + C89937 * C4396) * C38616 + C4413 * C38609 +
             C4412 * C38614) *
                C38612 +
            (C3586 * C38610 + C3585 * C38616 + C2017 * C38609 +
             C2018 * C38614) *
                C38611) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89999 -
           ((C38616 * C4276 + C38610 * C4512 + C38614 * C4275 +
             C38609 * C4511) *
                C38612 +
            (C38616 * C4160 + C38610 * C4164 + C38614 * C4159 +
             C38609 * C4163) *
                C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C89907) *
              C89827 * C90022 +
          (((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
             C38610 * C1768) *
                C38699 +
            (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
             C38610 * C2098) *
                C38611 +
            (C38614 * C4160 + C38609 * C4164 + C38616 * C4161 +
             C38610 * C4165) *
                C38700 +
            (C38614 * C4276 + C38609 * C4512 + C38616 * C4277 +
             C38610 * C4513) *
                C38612) *
               C89937 * C89907 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C89999) *
              C89827 * C90023 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C38699 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C38611 +
            (C41796 + C41797) * C38700 + (C41798 + C41799) * C38612) *
               C89937 * C89999 -
           ((C38616 * C4278 + C38610 * C4514 + C38614 * C4277 +
             C38609 * C4513) *
                C38612 +
            (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
             C38609 * C4165) *
                C38700 +
            (C38616 * C1876 + C38610 * C2104 + C38614 * C1870 +
             C38609 * C2098) *
                C38611 +
            (C38616 * C1766 + C38610 * C1774 + C38614 * C1760 +
             C38609 * C1768) *
                C38699) *
               C89937 * C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89999 -
                    ((C40940 + C40941) * C38610 +
                     (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                      C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                         C38609) *
                        C89937 * C89907) *
                       C89827 * C90022 +
                   (((C40941 + C40940) * C38609 + (C42836 + C42837) * C38610) *
                        C89937 * C89907 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C89999) *
                       C89827 * C90023 +
                   (((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                        C89937 * C89999 -
                    ((C38936 * C4162 + C42830 + C42830 + C38612 * C4616 +
                      C38935 * C1766 + C42831 + C42831 + C38611 * C2186) *
                         C38610 +
                     (C42837 + C42836) * C38609) *
                        C89937 * C89907) *
                       C89827 * C2694)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89999 -
                    ((C41042 + C41043 + C41044 + C41045) * C38610 +
                     (C17449 * C38612 + C17103 * C38700 +
                      (C273 * C1872 + C89937 * C2292) * C38611 +
                      (C273 * C1762 + C89937 * C1986) * C38699) *
                         C38609) *
                        C89907) *
                       C89827 * C90022 +
                   (((C41045 + C41044 + C41043 + C41042) * C38609 +
                     (C42936 + C42937 + C42938 + C42939) * C38610) *
                        C89907 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C89999) *
                       C89827 * C90023 +
                   (((C39051 + C39050 + C39049 + C39048) * C38609 +
                     (C39052 + C39053 + C39054 + C39055) * C38610) *
                        C89999 -
                    (((C273 * C4278 + C89937 * C4732) * C38612 +
                      (C273 * C4162 + C89937 * C4396) * C38700 +
                      C3822 * C38611 + C3585 * C38699) *
                         C38610 +
                     (C42939 + C42938 + C42937 + C42936) * C38609) *
                        C89907) *
                       C89827 * C2694)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89999 -
           (((C38616 * C4394 + C38610 * C4842 + C38614 * C4393 +
              C38609 * C4841) *
                 C89937 +
             (C38616 * C4160 + C38610 * C4164 + C38614 * C4159 +
              C38609 * C4163) *
                 C273) *
                C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C89907) *
              C89827 * C90022 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C273 +
             (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
              C38610 * C2392) *
                 C89937) *
                C38611 +
            ((C38614 * C4160 + C38609 * C4164 + C38616 * C4161 +
              C38610 * C4165) *
                 C273 +
             (C38614 * C4394 + C38609 * C4842 + C38616 * C4395 +
              C38610 * C4843) *
                 C89937) *
                C38612) *
               C89907 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C89999) *
              C89827 * C90023 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C273 +
             (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                 C89937) *
                C38611 +
            ((C41796 + C41797) * C273 + (C42114 + C42115) * C89937) * C38612) *
               C89999 -
           (((C38616 * C4396 + C38610 * C4844 + C38614 * C4395 +
              C38609 * C4843) *
                 C89937 +
             (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
              C38609 * C4165) *
                 C273) *
                C38612 +
            ((C38616 * C1990 + C38610 * C2398 + C38614 * C1984 +
              C38609 * C2392) *
                 C89937 +
             (C38616 * C1766 + C38610 * C1774 + C38614 * C1760 +
              C38609 * C1768) *
                 C273) *
                C38611) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89999 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C89907) *
              C89827 * C90022 +
          ((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
            ((C42528 + C42529) * C273 + (C43140 + C43141) * C89937) * C38610) *
               C89907 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C89999) *
              C89827 * C90023 +
          ((((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
            ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
               C89999 -
           (((C38700 * C4396 + C38612 * C4946 + C38699 * C1990 +
              C38611 * C2480) *
                 C89937 +
             (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
              C38611 * C1876) *
                 C273) *
                C38610 +
            ((C43141 + C43140) * C89937 + (C42529 + C42528) * C273) * C38609) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C89999 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C89907) *
              C89827 * C90022 +
          (((C41360 + C41359) * C38609 + (C43240 + C43241) * C38610) * C89907 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C89999) *
              C89827 * C90023 +
          (((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) * C89999 -
           (((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C38612 +
             C4060 * C38611) *
                C38610 +
            (C43241 + C43240) * C38609) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexx[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                     C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                        C89937 * C38611 +
                    (C38613 * C829 + C38620 + C38620 + C38609 * C845 +
                     C38615 * C828 + C38621 + C38621 + C38610 * C844) *
                        C89937 * C38612) *
                       C89843 * C89827 * C96 -
                   ((C38615 * C827 + C38622 + C38622 + C38610 * C843 +
                     C38613 * C828 + C38623 + C38623 + C38609 * C844) *
                        C89937 * C38612 +
                    (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                     C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                        C89937 * C38611) *
                       C89843 * C89827 * C97 +
                   ((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                     C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                        C89937 * C38611 +
                    (C38613 * C827 + C38628 + C38628 + C38609 * C843 +
                     C38615 * C833 + C38629 + C38629 + C38610 * C849) *
                        C89937 * C38612) *
                       C89843 * C89827 * C98 -
                   ((C38615 * C2695 + C38630 + C38630 + C38610 * C2697 +
                     C38613 * C833 + C38631 + C38631 + C38609 * C849) *
                        C89937 * C38612 +
                    (C38615 * C110 + C38632 + C38632 + C38610 * C122 +
                     C38613 * C109 + C38633 + C38633 + C38609 * C121) *
                        C89937 * C38611) *
                       C89843 * C89827 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89843 * C822 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C89843 * C823 +
                    ((C39419 + C39418) * C89937 * C38611 +
                     (C38613 * C5803 + C39386 + C39386 + C38609 * C5809 +
                      C38615 * C5802 + C39387 + C39387 + C38610 * C5808) *
                         C89937 * C38612) *
                        C89843 * C824) *
                       C825 +
                   (((C39420 + C39421) * C89937 * C38611 +
                     (C39422 + C39423) * C89937 * C38612) *
                        C89843 * C823 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C89843 * C822 -
                    ((C38615 * C5801 + C39398 + C39398 + C38610 * C5807 +
                      C38613 * C5802 + C39399 + C39399 + C38609 * C5808) *
                         C89937 * C38612 +
                     (C39423 + C39422) * C89937 * C38611) *
                        C89843 * C824) *
                       C89814)) /
                     (p * q * std::sqrt(p + q));
    d2eexy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C38614 +
           (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
               C38609 +
           (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
              C89937 * C89843 * C89827 * C96 -
          ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
           (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
              C89937 * C89843 * C89827 * C97 +
          ((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
           (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
              C89937 * C89843 * C89827 * C98 -
          ((C38700 * C2696 + C38612 * C2776 + C38699 * C116 + C38611 * C197) *
               C38610 +
           (C38700 * C2695 + C38612 * C2775 + C38699 * C110 + C38611 * C191) *
               C38616 +
           (C38737 + C38736) * C38609 + (C38735 + C38734) * C38614) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89843 * C822 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C89843 * C823 +
           ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C38614 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C38609 +
            (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
               C89937 * C89843 * C824) *
              C825 +
          (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
            (C38699 * C827 + C38611 * C937 + C38700 * C832 + C38612 * C942) *
                C38616 +
            (C38699 * C835 + C38611 * C945 + C38700 * C840 + C38612 * C950) *
                C38610) *
               C89937 * C89843 * C823 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C89843 * C822 -
           ((C38700 * C5804 + C38612 * C5866 + C38699 * C840 + C38611 * C950) *
                C38610 +
            (C38700 * C5801 + C38612 * C5863 + C38699 * C832 + C38611 * C942) *
                C38616 +
            (C39545 + C39544) * C38609 + (C39543 + C39542) * C38614) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C38614 +
            (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
            C304 * C38610) *
               C38611 +
           (C14066 * C38614 + C14067 * C38609 + C1087 * C38616 +
            C1086 * C38610) *
               C38612) *
              C89843 * C89827 * C96 -
          ((C1084 * C38610 + C1085 * C38616 + C1086 * C38609 + C1087 * C38614) *
               C38612 +
           (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
               C38611) *
              C89843 * C89827 * C97 +
          ((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
               C38611 +
           (C1085 * C38614 + C1084 * C38609 + C2864 * C38616 + C2865 * C38610) *
               C38612) *
              C89843 * C89827 * C98 -
          (((C273 * C2696 + C89937 * C2858) * C38610 +
            (C273 * C2695 + C89937 * C2857) * C38616 + C2865 * C38609 +
            C2864 * C38614) *
               C38612 +
           (C310 * C38610 + C309 * C38616 + C307 * C38609 + C308 * C38614) *
               C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C89843 * C822 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C89843 * C823 +
           ((C39651 + C39650 + C39649 + C39648) * C38611 +
            (C14071 * C38614 + C14070 * C38609 + C14072 * C38616 +
             C14073 * C38610) *
                C38612) *
               C89843 * C824) *
              C825 +
          (((C39652 + C39653 + C39654 + C39655) * C38611 +
            (C39656 + C39657 + C39658 + C39659) * C38612) *
               C89843 * C823 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C89843 * C822 -
           (((C273 * C5804 + C89937 * C5922) * C38610 +
             (C273 * C5801 + C89937 * C5919) * C38616 + C14073 * C38609 +
             C14072 * C38614) *
                C38612 +
            (C39659 + C39658 + C39657 + C39656) * C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C38699 +
           (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
               C38611 +
           (C38614 * C829 + C38609 * C837 + C38616 * C828 + C38610 * C836) *
               C38700 +
           (C38614 * C939 + C38609 * C1167 + C38616 * C938 + C38610 * C1166) *
               C38612) *
              C89937 * C89843 * C89827 * C96 -
          ((C38616 * C937 + C38610 * C1165 + C38614 * C938 + C38609 * C1166) *
               C38612 +
           (C38616 * C827 + C38610 * C835 + C38614 * C828 + C38609 * C836) *
               C38700 +
           (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
               C38611 +
           (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
               C38699) *
              C89937 * C89843 * C89827 * C97 +
          ((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
               C38699 +
           (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
               C38611 +
           (C38614 * C827 + C38609 * C835 + C38616 * C833 + C38610 * C841) *
               C38700 +
           (C38614 * C937 + C38609 * C1165 + C38616 * C943 + C38610 * C1171) *
               C38612) *
              C89937 * C89843 * C89827 * C98 -
          ((C38616 * C2775 + C38610 * C2939 + C38614 * C943 + C38609 * C1171) *
               C38612 +
           (C38616 * C2695 + C38610 * C2696 + C38614 * C833 + C38609 * C841) *
               C38700 +
           (C38616 * C191 + C38610 * C364 + C38614 * C190 + C38609 * C363) *
               C38611 +
           (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
               C38699) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89843 * C822 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C89843 * C823 +
           ((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
            (C38614 * C5803 + C38609 * C5806 + C38616 * C5802 +
             C38610 * C5805) *
                C38700 +
            (C38614 * C5865 + C38609 * C5977 + C38616 * C5864 +
             C38610 * C5976) *
                C38612) *
               C89937 * C89843 * C824) *
              C825 +
          (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
            (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
               C89937 * C89843 * C823 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C89843 * C822 -
           ((C38616 * C5863 + C38610 * C5975 + C38614 * C5864 +
             C38609 * C5976) *
                C38612 +
            (C38616 * C5801 + C38610 * C5804 + C38614 * C5802 +
             C38609 * C5805) *
                C38700 +
            (C39805 + C39804) * C38611 + (C39803 + C39802) * C38699) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                     C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                        C38609 +
                    (C38972 + C38973) * C38610) *
                       C89937 * C89843 * C89827 * C96 -
                   ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                       C89937 * C89843 * C89827 * C97 +
                   ((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                       C89937 * C89843 * C89827 * C98 -
                   ((C38936 * C2695 + C38958 + C38958 + C38612 * C3014 +
                     C38935 * C110 + C38959 + C38959 + C38611 * C421) *
                        C38610 +
                    (C38977 + C38976) * C38609) *
                       C89937 * C89843 * C89827 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89843 * C822 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C89843 * C823 +
                    ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                      C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                         C38609 +
                     (C39934 + C39935) * C38610) *
                        C89937 * C89843 * C824) *
                       C825 +
                   (((C39933 + C39932) * C38609 +
                     (C38935 * C827 + C39920 + C39920 + C38611 * C1247 +
                      C38936 * C832 + C39921 + C39921 + C38612 * C1252) *
                         C38610) *
                        C89937 * C89843 * C823 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C89843 * C822 -
                    ((C38936 * C5801 + C39922 + C39922 + C38612 * C6028 +
                      C38935 * C832 + C39923 + C39923 + C38611 * C1252) *
                         C38610 +
                     (C39935 + C39934) * C38609) *
                        C89937 * C89843 * C824) *
                       C89814)) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C273 * C106 + C89937 * C274) * C38699 +
                     (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                     C14368 * C38612) *
                        C38609 +
                    (C39044 + C39045 + C39046 + C39047) * C38610) *
                       C89843 * C89827 * C96 -
                   ((C39048 + C39049 + C39050 + C39051) * C38610 +
                    (C39047 + C39046 + C39045 + C39044) * C38609) *
                       C89843 * C89827 * C97 +
                   ((C39051 + C39050 + C39049 + C39048) * C38609 +
                    (C39052 + C39053 + C39054 + C39055) * C38610) *
                       C89843 * C89827 * C98 -
                   (((C273 * C2775 + C89937 * C3095) * C38612 +
                     (C273 * C2695 + C89937 * C2857) * C38700 + C521 * C38611 +
                     C309 * C38699) *
                        C38610 +
                    (C39055 + C39054 + C39053 + C39052) * C38609) *
                       C89843 * C89827 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89843 * C822 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C89843 * C823 +
                    ((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                      C14370 * C38612) *
                         C38609 +
                     (C40038 + C40039 + C40040 + C40041) * C38610) *
                        C89843 * C824) *
                       C825 +
                   (((C40037 + C40036 + C40035 + C40034) * C38609 +
                     (C1085 * C38699 + C1378 * C38611 + C1090 * C38700 +
                      C1381 * C38612) *
                         C38610) *
                        C89843 * C823 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C89843 * C822 -
                    (((C273 * C5863 + C89937 * C6084) * C38612 +
                      (C273 * C5801 + C89937 * C5919) * C38700 +
                      C1381 * C38611 + C1090 * C38699) *
                         C38610 +
                     (C40041 + C40040 + C40039 + C40038) * C38609) *
                        C89843 * C824) *
                       C89814)) /
                     (p * q * std::sqrt(p + q));
    d2eezx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C273 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C89937) *
               C38611 +
           ((C38614 * C829 + C38609 * C837 + C38616 * C828 + C38610 * C836) *
                C273 +
            (C38614 * C1053 + C38609 * C1461 + C38616 * C1052 +
             C38610 * C1460) *
                C89937) *
               C38612) *
              C89843 * C89827 * C96 -
          (((C38616 * C1051 + C38610 * C1459 + C38614 * C1052 +
             C38609 * C1460) *
                C89937 +
            (C38616 * C827 + C38610 * C835 + C38614 * C828 + C38609 * C836) *
                C273) *
               C38612 +
           ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C89937 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C273) *
               C38611) *
              C89843 * C89827 * C97 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C273 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C89937) *
               C38611 +
           ((C38614 * C827 + C38609 * C835 + C38616 * C833 + C38610 * C841) *
                C273 +
            (C38614 * C1051 + C38609 * C1459 + C38616 * C1057 +
             C38610 * C1465) *
                C89937) *
               C38612) *
              C89843 * C89827 * C98 -
          (((C38616 * C2857 + C38610 * C3176 + C38614 * C1057 +
             C38609 * C1465) *
                C89937 +
            (C38616 * C2695 + C38610 * C2696 + C38614 * C833 + C38609 * C841) *
                C273) *
               C38612 +
           ((C38616 * C278 + C38610 * C581 + C38614 * C277 + C38609 * C580) *
                C89937 +
            (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
                C273) *
               C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89843 * C822 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C89843 * C823 +
           (((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
            ((C38614 * C5803 + C38609 * C5806 + C38616 * C5802 +
              C38610 * C5805) *
                 C273 +
             (C38614 * C5921 + C38609 * C6139 + C38616 * C5920 +
              C38610 * C6138) *
                 C89937) *
                C38612) *
               C89843 * C824) *
              C825 +
          ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
            ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
               C89843 * C823 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C89843 * C822 -
           (((C38616 * C5919 + C38610 * C6137 + C38614 * C5920 +
              C38609 * C6138) *
                 C89937 +
             (C38616 * C5801 + C38610 * C5804 + C38614 * C5802 +
              C38609 * C5805) *
                 C273) *
                C38612 +
            ((C40163 + C40162) * C89937 + (C39803 + C39802) * C273) * C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C273 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C89937) *
               C38609 +
           ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
              C89843 * C89827 * C96 -
          (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
           ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
              C89843 * C89827 * C97 +
          (((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
           ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
              C89843 * C89827 * C98 -
          (((C38700 * C2857 + C38612 * C3251 + C38699 * C278 + C38611 * C637) *
                C89937 +
            (C38700 * C2695 + C38612 * C2775 + C38699 * C110 + C38611 * C191) *
                C273) *
               C38610 +
           ((C39205 + C39204) * C89937 + (C38735 + C38734) * C273) * C38609) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89843 * C822 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C89843 * C823 +
           (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C273 +
             (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
              C38612 * C6192) *
                 C89937) *
                C38609 +
            ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
               C89843 * C824) *
              C825 +
          ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
            ((C38699 * C827 + C38611 * C937 + C38700 * C832 + C38612 * C942) *
                 C273 +
             (C38699 * C1051 + C38611 * C1541 + C38700 * C1056 +
              C38612 * C1546) *
                 C89937) *
                C38610) *
               C89843 * C823 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C89843 * C822 -
           (((C38700 * C5919 + C38612 * C6190 + C38699 * C1056 +
              C38611 * C1546) *
                 C89937 +
             (C38700 * C5801 + C38612 * C5863 + C38699 * C832 + C38611 * C942) *
                 C273) *
                C38610 +
            ((C40273 + C40272) * C89937 + (C39543 + C39542) * C273) * C38609) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
                     C14650 * C38612) *
                        C38609 +
                    (C39272 + C39273) * C38610) *
                       C89843 * C89827 * C96 -
                   ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) *
                       C89843 * C89827 * C97 +
                   ((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) *
                       C89843 * C89827 * C98 -
                   (((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C38612 +
                     C744 * C38611) *
                        C38610 +
                    (C39277 + C39276) * C38609) *
                       C89843 * C89827 * C99)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
                      C14650 * C38612) *
                         C38609 +
                     (C39272 + C39273) * C38610) *
                        C89843 * C822 -
                    ((C40372 + C40373) * C38610 +
                     (C14651 * C38612 + C14650 * C38611) * C38609) *
                        C89843 * C823 +
                    ((C14651 * C38611 + C14652 * C38612) * C38609 +
                     (C40374 + C40375) * C38610) *
                        C89843 * C824) *
                       C825 +
                   (((C40373 + C40372) * C38609 +
                     (C1676 * C38611 + C1679 * C38612) * C38610) *
                        C89843 * C823 -
                    ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) *
                        C89843 * C822 -
                    (((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C38612 +
                      C1679 * C38611) *
                         C38610 +
                     (C40375 + C40374) * C38609) *
                        C89843 * C824) *
                       C89814)) /
                     (p * q * std::sqrt(p + q));
    d2eexx[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89843 * C90024 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C89843 * C90025 +
                    ((C39419 + C39418) * C89937 * C38611 +
                     (C45478 + C45479) * C89937 * C38612) *
                        C89843 * C7039) *
                       C89990 +
                   (((C39420 + C39421) * C89937 * C38611 +
                     (C39422 + C39423) * C89937 * C38612) *
                        C89843 * C90025 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C89843 * C90024 -
                    ((C38615 * C5801 + C39398 + C39398 + C38610 * C5807 +
                      C38613 * C5802 + C39399 + C39399 + C38609 * C5808) *
                         C89937 * C38612 +
                     (C39423 + C39422) * C89937 * C38611) *
                        C89843 * C7039) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89843 * C90024 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C89843 * C90025 +
           ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C38614 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C38609 +
            (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
               C89937 * C89843 * C7039) *
              C89990 +
          (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
            (C41584 + C41585) * C38616 + (C41586 + C41587) * C38610) *
               C89937 * C89843 * C90025 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C89843 * C90024 -
           ((C38700 * C5804 + C38612 * C5866 + C38699 * C840 + C38611 * C950) *
                C38610 +
            (C38700 * C5801 + C38612 * C5863 + C38699 * C832 + C38611 * C942) *
                C38616 +
            (C39545 + C39544) * C38609 + (C39543 + C39542) * C38614) *
               C89937 * C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C89843 * C90024 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C89843 * C90025 +
           ((C39651 + C39650 + C39649 + C39648) * C38611 +
            (C45612 + C45613 + C45614 + C45615) * C38612) *
               C89843 * C7039) *
              C89990 +
          (((C39652 + C39653 + C39654 + C39655) * C38611 +
            (C39656 + C39657 + C39658 + C39659) * C38612) *
               C89843 * C90025 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C89843 * C90024 -
           (((C273 * C5804 + C89937 * C5922) * C38610 +
             (C273 * C5801 + C89937 * C5919) * C38616 + C14073 * C38609 +
             C14072 * C38614) *
                C38612 +
            (C39659 + C39658 + C39657 + C39656) * C38611) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89843 * C90024 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C89843 * C90025 +
           ((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
            (C45690 + C45691) * C38700 + (C45692 + C45693) * C38612) *
               C89937 * C89843 * C7039) *
              C89990 +
          (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
            (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
               C89937 * C89843 * C90025 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C89843 * C90024 -
           ((C38616 * C5863 + C38610 * C5975 + C38614 * C5864 +
             C38609 * C5976) *
                C38612 +
            (C38616 * C5801 + C38610 * C5804 + C38614 * C5802 +
             C38609 * C5805) *
                C38700 +
            (C39805 + C39804) * C38611 + (C39803 + C39802) * C38699) *
               C89937 * C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89843 * C90024 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C89843 * C90025 +
                    ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                      C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                         C38609 +
                     (C39934 + C39935) * C38610) *
                        C89937 * C89843 * C7039) *
                       C89990 +
                   (((C39933 + C39932) * C38609 + (C41908 + C41909) * C38610) *
                        C89937 * C89843 * C90025 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C89843 * C90024 -
                    ((C38936 * C5801 + C39922 + C39922 + C38612 * C6028 +
                      C38935 * C832 + C39923 + C39923 + C38611 * C1252) *
                         C38610 +
                     (C39935 + C39934) * C38609) *
                        C89937 * C89843 * C7039) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89843 * C90024 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C89843 * C90025 +
                    ((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                      C14370 * C38612) *
                         C38609 +
                     (C40038 + C40039 + C40040 + C40041) * C38610) *
                        C89843 * C7039) *
                       C89990 +
                   (((C40037 + C40036 + C40035 + C40034) * C38609 +
                     (C42008 + C42009 + C42010 + C42011) * C38610) *
                        C89843 * C90025 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C89843 * C90024 -
                    (((C273 * C5863 + C89937 * C6084) * C38612 +
                      (C273 * C5801 + C89937 * C5919) * C38700 +
                      C1381 * C38611 + C1090 * C38699) *
                         C38610 +
                     (C40041 + C40040 + C40039 + C40038) * C38609) *
                        C89843 * C7039) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89843 * C90024 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C89843 * C90025 +
           (((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
            ((C45690 + C45691) * C273 + (C45900 + C45901) * C89937) * C38612) *
               C89843 * C7039) *
              C89990 +
          ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
            ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
               C89843 * C90025 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C89843 * C90024 -
           (((C38616 * C5919 + C38610 * C6137 + C38614 * C5920 +
              C38609 * C6138) *
                 C89937 +
             (C38616 * C5801 + C38610 * C5804 + C38614 * C5802 +
              C38609 * C5805) *
                 C273) *
                C38612 +
            ((C40163 + C40162) * C89937 + (C39803 + C39802) * C273) * C38611) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89843 * C90024 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C89843 * C90025 +
           (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C273 +
             (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
              C38612 * C6192) *
                 C89937) *
                C38609 +
            ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
               C89843 * C7039) *
              C89990 +
          ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
            ((C41584 + C41585) * C273 + (C42218 + C42219) * C89937) * C38610) *
               C89843 * C90025 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C89843 * C90024 -
           (((C38700 * C5919 + C38612 * C6190 + C38699 * C1056 +
              C38611 * C1546) *
                 C89937 +
             (C38700 * C5801 + C38612 * C5863 + C38699 * C832 + C38611 * C942) *
                 C273) *
                C38610 +
            ((C40273 + C40272) * C89937 + (C39543 + C39542) * C273) * C38609) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
                      C14650 * C38612) *
                         C38609 +
                     (C39272 + C39273) * C38610) *
                        C89843 * C90024 -
                    ((C40372 + C40373) * C38610 +
                     (C14651 * C38612 + C14650 * C38611) * C38609) *
                        C89843 * C90025 +
                    ((C14651 * C38611 + C14652 * C38612) * C38609 +
                     (C40374 + C40375) * C38610) *
                        C89843 * C7039) *
                       C89990 +
                   (((C40373 + C40372) * C38609 + (C42318 + C42319) * C38610) *
                        C89843 * C90025 -
                    ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) *
                        C89843 * C90024 -
                    (((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C38612 +
                      C1679 * C38611) *
                         C38610 +
                     (C40375 + C40374) * C38609) *
                        C89843 * C7039) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89999 -
                    ((C43392 + C43393) * C89937 * C38612 +
                     (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                      C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                         C89937 * C38611) *
                        C89907) *
                       C90024 +
                   (((C43393 + C43392) * C89937 * C38611 +
                     (C49114 + C49115) * C89937 * C38612) *
                        C89907 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C89999) *
                       C90025 +
                   (((C39419 + C39418) * C89937 * C38611 +
                     (C45478 + C45479) * C89937 * C38612) *
                        C89999 -
                    ((C38615 * C16850 + C49108 + C49108 + C38610 * C16854 +
                      C38613 * C16849 + C49109 + C49109 + C38609 * C16853) *
                         C89937 * C38612 +
                     (C49115 + C49114) * C89937 * C38611) *
                        C89907) *
                       C7039) *
                  C89808) /
                 (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89999 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C89907) *
              C90024 +
          (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
             C38612 * C8678) *
                C38614 +
            (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
             C38612 * C8681) *
                C38609 +
            (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
               C89937 * C89907 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C89999) *
              C90025 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C38614 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C38609 +
            (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
               C89937 * C89999 -
           ((C38700 * C16852 + C38612 * C16982 + C38699 * C8594 +
             C38611 * C8680) *
                C38610 +
            (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
             C38611 * C8677) *
                C38616 +
            (C38700 * C16851 + C38612 * C16981 + C38699 * C8595 +
             C38611 * C8681) *
                C38609 +
            (C38700 * C16849 + C38612 * C16979 + C38699 * C8592 +
             C38611 * C8678) *
                C38614) *
               C89937 * C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38614 +
                      (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
                      C304 * C38610) *
                         C38611 +
                     (C39644 + C39645 + C39646 + C39647) * C38612) *
                        C89999 -
                    ((C43668 + C43669 + C43670 + C43671) * C38612 +
                     (C2019 * C38610 + C2020 * C38616 +
                      (C273 * C1770 + C89937 * C1994) * C38609 +
                      (C273 * C1762 + C89937 * C1986) * C38614) *
                         C38611) *
                        C89907) *
                       C90024 +
                   (((C43671 + C43670 + C43669 + C43668) * C38611 +
                     (C49312 + C49313 + C49314 + C49315) * C38612) *
                        C89907 -
                    ((C39648 + C39649 + C39650 + C39651) * C38612 +
                     (C39647 + C39646 + C39645 + C39644) * C38611) *
                        C89999) *
                       C90025 +
                   (((C39651 + C39650 + C39649 + C39648) * C38611 +
                     (C45612 + C45613 + C45614 + C45615) * C38612) *
                        C89999 -
                    (((C273 * C16852 + C89937 * C17084) * C38610 +
                      (C273 * C16850 + C89937 * C17082) * C38616 +
                      C21497 * C38609 + C21496 * C38614) *
                         C38612 +
                     (C49315 + C49314 + C49313 + C49312) * C38611) *
                        C89907) *
                       C7039) *
                  C89808) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89999 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C89907) *
              C90024 +
          (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
            (C49422 + C49423) * C38700 + (C49424 + C49425) * C38612) *
               C89937 * C89907 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C89999) *
              C90025 +
          (((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
            (C45690 + C45691) * C38700 + (C45692 + C45693) * C38612) *
               C89937 * C89999 -
           ((C38616 * C16980 + C38610 * C17210 + C38614 * C16979 +
             C38609 * C17209) *
                C38612 +
            (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
             C38609 * C16851) *
                C38700 +
            (C49425 + C49424) * C38611 + (C49423 + C49422) * C38699) *
               C89937 * C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyy[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89999 -
                    ((C40940 + C40941) * C38610 +
                     (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                      C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                         C38609) *
                        C89937 * C89907) *
                       C90024 +
                   (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
                      C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                         C38609 +
                     (C43974 + C43975) * C38610) *
                        C89937 * C89907 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C89999) *
                       C90025 +
                   (((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                      C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                         C38609 +
                     (C39934 + C39935) * C38610) *
                        C89937 * C89999 -
                    ((C38936 * C16850 + C49524 + C49524 + C38612 * C17334 +
                      C38935 * C8591 + C49525 + C49525 + C38611 * C8914) *
                         C38610 +
                     (C38936 * C16849 + C49526 + C49526 + C38612 * C17333 +
                      C38935 * C8592 + C49527 + C49527 + C38611 * C8915) *
                         C38609) *
                        C89937 * C89907) *
                       C7039) *
                  C89808) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89999 -
                    ((C41042 + C41043 + C41044 + C41045) * C38610 +
                     (C17449 * C38612 + C17103 * C38700 +
                      (C273 * C1872 + C89937 * C2292) * C38611 +
                      (C273 * C1762 + C89937 * C1986) * C38699) *
                         C38609) *
                        C89907) *
                       C90024 +
                   (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                      C17448 * C38612) *
                         C38609 +
                     (C44106 + C44107 + C44108 + C44109) * C38610) *
                        C89907 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C89999) *
                       C90025 +
                   (((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                      C14370 * C38612) *
                         C38609 +
                     (C40038 + C40039 + C40040 + C40041) * C38610) *
                        C89999 -
                    (((C273 * C16980 + C89937 * C17440) * C38612 +
                      (C273 * C16850 + C89937 * C17082) * C38700 +
                      C17450 * C38611 + C17104 * C38699) *
                         C38610 +
                     (C21736 * C38612 + C21496 * C38700 + C17448 * C38611 +
                      C17101 * C38699) *
                         C38609) *
                        C89907) *
                       C7039) *
                  C89808) /
                 (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89999 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C89907) *
              C90024 +
          ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
            ((C49422 + C49423) * C273 + (C49728 + C49729) * C89937) * C38612) *
               C89907 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C89999) *
              C90025 +
          ((((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
            ((C45690 + C45691) * C273 + (C45900 + C45901) * C89937) * C38612) *
               C89999 -
           (((C38616 * C17082 + C38610 * C17549 + C38614 * C17081 +
              C38609 * C17548) *
                 C89937 +
             (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
              C38609 * C16851) *
                 C273) *
                C38612 +
            ((C49729 + C49728) * C89937 + (C49423 + C49422) * C273) * C38611) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89999 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C89907) *
              C90024 +
          ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C273 +
             (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
              C38612 * C9149) *
                 C89937) *
                C38609 +
            ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
               C89907 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C89999) *
              C90025 +
          ((((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C273 +
             (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
              C38612 * C6192) *
                 C89937) *
                C38609 +
            ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
               C89999 -
           (((C38700 * C17082 + C38612 * C17669 + C38699 * C8757 +
              C38611 * C9148) *
                 C89937 +
             (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
              C38611 * C8677) *
                 C273) *
                C38610 +
            ((C38700 * C17081 + C38612 * C17668 + C38699 * C8758 +
              C38611 * C9149) *
                 C89937 +
             (C38700 * C16849 + C38612 * C16979 + C38699 * C8592 +
              C38611 * C8678) *
                 C273) *
                C38609) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C89999 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C89907) *
              C90024 +
          (((C17786 * C38611 + C17785 * C38612) * C38609 +
            (C44518 + C44519) * C38610) *
               C89907 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C89999) *
              C90025 +
          (((C14651 * C38611 + C14652 * C38612) * C38609 +
            (C40374 + C40375) * C38610) *
               C89999 -
           (((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C38612 +
             C17787 * C38611) *
                C38610 +
            (C21973 * C38612 + C17785 * C38611) * C38609) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexx[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                     C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                        C89937 * C38611 +
                    (C39416 + C39417) * C89937 * C38612) *
                       C89843 * C5796 -
                   ((C39418 + C39419) * C89937 * C38612 +
                    (C39417 + C39416) * C89937 * C38611) *
                       C89843 * C5797 +
                   ((C39419 + C39418) * C89937 * C38611 +
                    (C45478 + C45479) * C89937 * C38612) *
                       C89843 * C5798 -
                   ((C38615 * C13844 + C45472 + C45472 + C38610 * C13848 +
                     C38613 * C13843 + C45473 + C45473 + C38609 * C13847) *
                        C89937 * C38612 +
                    (C45479 + C45478) * C89937 * C38611) *
                       C89843 * C5799) *
                  C89808) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89843 * C5149 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C89843 * C89879) *
                       C5151 +
                   (((C39420 + C39421) * C89937 * C38611 +
                     (C39422 + C39423) * C89937 * C38612) *
                        C89843 * C89879 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C89843 * C5149) *
                       C5152 +
                   (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                      C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                         C89937 * C38611 +
                     (C41476 + C41477) * C89937 * C38612) *
                        C89843 * C5149 -
                    ((C38615 * C834 + C41470 + C41470 + C38610 * C850 +
                      C38613 * C832 + C41471 + C41471 + C38609 * C848) *
                         C89937 * C38612 +
                     (C41477 + C41476) * C89937 * C38611) *
                        C89843 * C89879) *
                       C5153)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C1757 -
                    ((C43392 + C43393) * C89937 * C38612 +
                     (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                      C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                         C89937 * C38611) *
                        C1758 +
                    ((C38613 * C1763 + C40478 + C40478 + C38609 * C1779 +
                      C38615 * C1764 + C40479 + C40479 + C38610 * C1780) *
                         C89937 * C38611 +
                     (C46142 + C46143) * C89937 * C38612) *
                        C1759) *
                       C5149 +
                   (((C43393 + C43392) * C89937 * C38611 +
                     (C38613 * C8592 + C43376 + C43376 + C38609 * C8598 +
                      C38615 * C8591 + C43377 + C43377 + C38610 * C8597) *
                         C89937 * C38612) *
                        C1758 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C1757 -
                    ((C38615 * C14728 + C46136 + C46136 + C38610 * C14732 +
                      C38613 * C14727 + C46137 + C46137 + C38609 * C14731) *
                         C89937 * C38612 +
                     (C46143 + C46142) * C89937 * C38611) *
                        C1759) *
                       C89879) *
                  C89808) /
                     (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C38614 +
           (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
               C38609 +
           (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
              C89937 * C89843 * C5796 -
          ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
           (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
               C38609 +
           (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
               C38614) *
              C89937 * C89843 * C5797 +
          ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
               C38614 +
           (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
               C38609 +
           (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
              C89937 * C89843 * C5798 -
          ((C38700 * C13846 + C38612 * C13966 + C38699 * C5805 +
            C38611 * C5867) *
               C38610 +
           (C38700 * C13844 + C38612 * C13964 + C38699 * C5802 +
            C38611 * C5864) *
               C38616 +
           (C38700 * C13845 + C38612 * C13965 + C38699 * C5806 +
            C38611 * C5868) *
               C38609 +
           (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
            C38611 * C5865) *
               C38614) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89843 * C5149 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C89843 * C89879) *
              C5151 +
          (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
            (C41584 + C41585) * C38616 + (C41586 + C41587) * C38610) *
               C89937 * C89843 * C89879 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
            (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
               C89937 * C89843 * C5149 -
           ((C38700 * C842 + C38612 * C952 + C38699 * C841 + C38611 * C951) *
                C38610 +
            (C38700 * C834 + C38612 * C944 + C38699 * C833 + C38611 * C943) *
                C38616 +
            (C41587 + C41586) * C38609 + (C41585 + C41584) * C38614) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C1757 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C1758 +
           ((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
             C38612 * C6411) *
                C38614 +
            (C38699 * C1771 + C38611 * C1881 + C38700 * C6328 +
             C38612 * C6414) *
                C38609 +
            (C40608 + C40609) * C38616 + (C40610 + C40611) * C38610) *
               C89937 * C1759) *
              C5149 +
          (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
             C38612 * C8678) *
                C38614 +
            (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
             C38612 * C8681) *
                C38609 +
            (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
               C89937 * C1758 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C1757 -
           ((C38700 * C14730 + C38612 * C14822 + C38699 * C6327 +
             C38611 * C6413) *
                C38610 +
            (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
             C38611 * C6410) *
                C38616 +
            (C38700 * C14729 + C38612 * C14821 + C38699 * C6328 +
             C38611 * C6414) *
                C38609 +
            (C38700 * C14727 + C38612 * C14819 + C38699 * C6325 +
             C38611 * C6411) *
                C38614) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C38614 +
            (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
            C304 * C38610) *
               C38611 +
           (C39644 + C39645 + C39646 + C39647) * C38612) *
              C89843 * C5796 -
          ((C39648 + C39649 + C39650 + C39651) * C38612 +
           (C39647 + C39646 + C39645 + C39644) * C38611) *
              C89843 * C5797 +
          ((C39651 + C39650 + C39649 + C39648) * C38611 +
           (C45612 + C45613 + C45614 + C45615) * C38612) *
              C89843 * C5798 -
          (((C273 * C13846 + C89937 * C14044) * C38610 +
            (C273 * C13844 + C89937 * C14042) * C38616 + C18624 * C38609 +
            C18623 * C38614) *
               C38612 +
           (C45615 + C45614 + C45613 + C45612) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C89843 * C5149 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C89843 * C89879) *
              C5151 +
          (((C39652 + C39653 + C39654 + C39655) * C38611 +
            (C39656 + C39657 + C39658 + C39659) * C38612) *
               C89843 * C89879 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          (((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
                C38611 +
            (C41686 + C41687 + C41688 + C41689) * C38612) *
               C89843 * C5149 -
           (((C273 * C842 + C89937 * C1066) * C38610 +
             (C273 * C834 + C89937 * C1058) * C38616 + C1091 * C38609 +
             C1090 * C38614) *
                C38612 +
            (C41689 + C41688 + C41687 + C41686) * C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C1757 -
           ((C43668 + C43669 + C43670 + C43671) * C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C1758 +
           (((C273 * C1763 + C89937 * C1987) * C38614 +
             (C273 * C1771 + C89937 * C1995) * C38609 + C2021 * C38616 +
             C2022 * C38610) *
                C38611 +
            (C46340 + C46341 + C46342 + C46343) * C38612) *
               C1759) *
              C5149 +
          (((C43671 + C43670 + C43669 + C43668) * C38611 +
            (C17101 * C38614 + C17100 * C38609 + C17104 * C38616 +
             C17105 * C38610) *
                C38612) *
               C1758 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C1757 -
           (((C273 * C14730 + C89937 * C14900) * C38610 +
             (C273 * C14728 + C89937 * C14898) * C38616 + C19210 * C38609 +
             C19209 * C38614) *
                C38612 +
            (C46343 + C46342 + C46341 + C46340) * C38611) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C38699 +
           (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
               C38611 +
           (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
              C89937 * C89843 * C5796 -
          ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
           (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
              C89937 * C89843 * C5797 +
          ((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
           (C45690 + C45691) * C38700 + (C45692 + C45693) * C38612) *
              C89937 * C89843 * C5798 -
          ((C38616 * C13964 + C38610 * C14158 + C38614 * C13963 +
            C38609 * C14157) *
               C38612 +
           (C38616 * C13844 + C38610 * C13846 + C38614 * C13843 +
            C38609 * C13845) *
               C38700 +
           (C45693 + C45692) * C38611 + (C45691 + C45690) * C38699) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89843 * C5149 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C89843 * C89879) *
              C5151 +
          (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
            (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
               C89937 * C89843 * C89879 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C38699 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C38611 +
            (C41796 + C41797) * C38700 + (C41798 + C41799) * C38612) *
               C89937 * C89843 * C5149 -
           ((C38616 * C944 + C38610 * C1172 + C38614 * C942 + C38609 * C1170) *
                C38612 +
            (C38616 * C834 + C38610 * C842 + C38614 * C832 + C38609 * C840) *
                C38700 +
            (C41799 + C41798) * C38611 + (C41797 + C41796) * C38699) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C1757 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C1758 +
           ((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
             C38610 * C1772) *
                C38699 +
            (C38614 * C1873 + C38609 * C2101 + C38616 * C1874 +
             C38610 * C2102) *
                C38611 +
            (C46450 + C46451) * C38700 + (C46452 + C46453) * C38612) *
               C89937 * C1759) *
              C5149 +
          (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
            (C38614 * C8592 + C38609 * C8595 + C38616 * C8591 +
             C38610 * C8594) *
                C38700 +
            (C38614 * C8678 + C38609 * C8838 + C38616 * C8677 +
             C38610 * C8837) *
                C38612) *
               C89937 * C1758 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C1757 -
           ((C38616 * C14820 + C38610 * C14976 + C38614 * C14819 +
             C38609 * C14975) *
                C38612 +
            (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
             C38609 * C14729) *
                C38700 +
            (C46453 + C46452) * C38611 + (C46451 + C46450) * C38699) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                     C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                        C38609 +
                    (C38972 + C38973) * C38610) *
                       C89937 * C89843 * C5796 -
                   ((C39932 + C39933) * C38610 +
                    (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                     C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                        C38609) *
                       C89937 * C89843 * C5797 +
                   ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                     C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                        C38609 +
                    (C39934 + C39935) * C38610) *
                       C89937 * C89843 * C5798 -
                   ((C38936 * C13844 + C45760 + C45760 + C38612 * C14270 +
                     C38935 * C5802 + C45761 + C45761 + C38611 * C6029) *
                        C38610 +
                    (C38936 * C13843 + C45762 + C45762 + C38612 * C14269 +
                     C38935 * C5803 + C45763 + C45763 + C38611 * C6030) *
                        C38609) *
                       C89937 * C89843 * C5799) *
                  C89808) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89843 * C5149 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C89843 * C89879) *
                       C5151 +
                   (((C39933 + C39932) * C38609 + (C41908 + C41909) * C38610) *
                        C89937 * C89843 * C89879 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C89843 * C5149) *
                       C5152 +
                   (((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                        C89937 * C89843 * C5149 -
                    ((C38936 * C834 + C41902 + C41902 + C38612 * C1254 +
                      C38935 * C833 + C41903 + C41903 + C38611 * C1253) *
                         C38610 +
                     (C41909 + C41908) * C38609) *
                        C89937 * C89843 * C89879) *
                       C5153)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C1757 -
                    ((C40940 + C40941) * C38610 +
                     (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                      C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                         C38609) *
                        C89937 * C1758 +
                    ((C38935 * C1763 + C40920 + C40920 + C38611 * C2183 +
                      C38936 * C6325 + C40921 + C40921 + C38612 * C6648) *
                         C38609 +
                     (C40942 + C40943) * C38610) *
                        C89937 * C1759) *
                       C5149 +
                   (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
                      C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                         C38609 +
                     (C43974 + C43975) * C38610) *
                        C89937 * C1758 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C1757 -
                    ((C38936 * C14728 + C46552 + C46552 + C38612 * C15052 +
                      C38935 * C6324 + C46553 + C46553 + C38611 * C6647) *
                         C38610 +
                     (C38936 * C14727 + C46554 + C46554 + C38612 * C15051 +
                      C38935 * C6325 + C46555 + C46555 + C38611 * C6648) *
                         C38609) *
                        C89937 * C1759) *
                       C89879) *
                  C89808) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C273 * C106 + C89937 * C274) * C38699 +
                     (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                     C14368 * C38612) *
                        C38609 +
                    (C39044 + C39045 + C39046 + C39047) * C38610) *
                       C89843 * C5796 -
                   ((C40034 + C40035 + C40036 + C40037) * C38610 +
                    (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                     C14066 * C38699) *
                        C38609) *
                       C89843 * C5797 +
                   ((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                     C14370 * C38612) *
                        C38609 +
                    (C40038 + C40039 + C40040 + C40041) * C38610) *
                       C89843 * C5798 -
                   (((C273 * C13964 + C89937 * C14358) * C38612 +
                     (C273 * C13844 + C89937 * C14042) * C38700 +
                     C14371 * C38611 + C14072 * C38699) *
                        C38610 +
                    (C18791 * C38612 + C18623 * C38700 + C14370 * C38611 +
                     C14071 * C38699) *
                        C38609) *
                       C89843 * C5799) *
                  C89808) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89843 * C5149 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C89843 * C89879) *
                       C5151 +
                   (((C40037 + C40036 + C40035 + C40034) * C38609 +
                     (C42008 + C42009 + C42010 + C42011) * C38610) *
                        C89843 * C89879 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C89843 * C5149) *
                       C5152 +
                   (((C39051 + C39050 + C39049 + C39048) * C38609 +
                     (C39052 + C39053 + C39054 + C39055) * C38610) *
                        C89843 * C5149 -
                    (((C273 * C944 + C89937 * C1364) * C38612 +
                      (C273 * C834 + C89937 * C1058) * C38700 + C3101 * C38611 +
                      C2864 * C38699) *
                         C38610 +
                     (C42011 + C42010 + C42009 + C42008) * C38609) *
                        C89843 * C89879) *
                       C5153)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C1757 -
                    ((C41042 + C41043 + C41044 + C41045) * C38610 +
                     (C17449 * C38612 + C17103 * C38700 +
                      (C273 * C1872 + C89937 * C2292) * C38611 +
                      (C273 * C1762 + C89937 * C1986) * C38699) *
                         C38609) *
                        C1758 +
                    (((C273 * C1763 + C89937 * C1987) * C38699 +
                      (C273 * C1873 + C89937 * C2293) * C38611 +
                      C19207 * C38700 + C19459 * C38612) *
                         C38609 +
                     (C41046 + C41047 + C41048 + C41052) * C38610) *
                        C1759) *
                       C5149 +
                   (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                      C17448 * C38612) *
                         C38609 +
                     (C44106 + C44107 + C44108 + C44109) * C38610) *
                        C1758 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C1757 -
                    (((C273 * C14820 + C89937 * C15140) * C38612 +
                      (C273 * C14728 + C89937 * C14898) * C38700 +
                      C41051 * C38611 + C40714 * C38699) *
                         C38610 +
                     (C19460 * C38612 + C19209 * C38700 + C19459 * C38611 +
                      C19207 * C38699) *
                         C38609) *
                        C1759) *
                       C89879) *
                  C89808) /
                     (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C273 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C89937) *
               C38611 +
           ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
              C89843 * C5796 -
          (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
           ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
              C89843 * C5797 +
          (((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
           ((C45690 + C45691) * C273 + (C45900 + C45901) * C89937) * C38612) *
              C89843 * C5798 -
          (((C38616 * C14042 + C38610 * C14446 + C38614 * C14041 +
             C38609 * C14445) *
                C89937 +
            (C38616 * C13844 + C38610 * C13846 + C38614 * C13843 +
             C38609 * C13845) *
                C273) *
               C38612 +
           ((C45901 + C45900) * C89937 + (C45691 + C45690) * C273) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89843 * C5149 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C89843 * C89879) *
              C5151 +
          ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
            ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
               C89843 * C89879 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C273 +
             (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                 C89937) *
                C38611 +
            ((C41796 + C41797) * C273 + (C42114 + C42115) * C89937) * C38612) *
               C89843 * C5149 -
           (((C38616 * C1058 + C38610 * C1466 + C38614 * C1056 +
              C38609 * C1464) *
                 C89937 +
             (C38616 * C834 + C38610 * C842 + C38614 * C832 + C38609 * C840) *
                 C273) *
                C38612 +
            ((C42115 + C42114) * C89937 + (C41797 + C41796) * C273) * C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C1757 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C1758 +
           (((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
              C38610 * C1772) *
                 C273 +
             (C38614 * C1987 + C38609 * C2395 + C38616 * C1988 +
              C38610 * C2396) *
                 C89937) *
                C38611 +
            ((C46450 + C46451) * C273 + (C46756 + C46757) * C89937) * C38612) *
               C1759) *
              C5149 +
          ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
            ((C38614 * C8592 + C38609 * C8595 + C38616 * C8591 +
              C38610 * C8594) *
                 C273 +
             (C38614 * C8758 + C38609 * C9072 + C38616 * C8757 +
              C38610 * C9071) *
                 C89937) *
                C38612) *
               C1758 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C1757 -
           (((C38616 * C14898 + C38610 * C15216 + C38614 * C14897 +
              C38609 * C15215) *
                 C89937 +
             (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
              C38609 * C14729) *
                 C273) *
                C38612 +
            ((C46757 + C46756) * C89937 + (C46451 + C46450) * C273) * C38611) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C273 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C89937) *
               C38609 +
           ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
              C89843 * C5796 -
          (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
           ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C89937 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C273) *
               C38609) *
              C89843 * C5797 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C273 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C89937) *
               C38609 +
           ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
              C89843 * C5798 -
          (((C38700 * C14042 + C38612 * C14554 + C38699 * C5920 +
             C38611 * C6191) *
                C89937 +
            (C38700 * C13844 + C38612 * C13964 + C38699 * C5802 +
             C38611 * C5864) *
                C273) *
               C38610 +
           ((C38700 * C14041 + C38612 * C14553 + C38699 * C5921 +
             C38611 * C6192) *
                C89937 +
            (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
             C38611 * C5865) *
                C273) *
               C38609) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89843 * C5149 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C89843 * C89879) *
              C5151 +
          ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
            ((C41584 + C41585) * C273 + (C42218 + C42219) * C89937) * C38610) *
               C89843 * C89879 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C89843 * C5149) *
              C5152 +
          ((((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
            ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
               C89843 * C5149 -
           (((C38700 * C1058 + C38612 * C1548 + C38699 * C1057 +
              C38611 * C1547) *
                 C89937 +
             (C38700 * C834 + C38612 * C944 + C38699 * C833 + C38611 * C943) *
                 C273) *
                C38610 +
            ((C42219 + C42218) * C89937 + (C41585 + C41584) * C273) * C38609) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C1757 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C1758 +
           (((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
              C38612 * C6411) *
                 C273 +
             (C38699 * C1987 + C38611 * C2477 + C38700 * C6491 +
              C38612 * C6882) *
                 C89937) *
                C38609 +
            ((C40608 + C40609) * C273 + (C41259 + C41260) * C89937) * C38610) *
               C1759) *
              C5149 +
          ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C273 +
             (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
              C38612 * C9149) *
                 C89937) *
                C38609 +
            ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
               C1758 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C1757 -
           (((C38700 * C14898 + C38612 * C15292 + C38699 * C6490 +
              C38611 * C6881) *
                 C89937 +
             (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
              C38611 * C6410) *
                 C273) *
                C38610 +
            ((C38700 * C14897 + C38612 * C15291 + C38699 * C6491 +
              C38611 * C6882) *
                 C89937 +
             (C38700 * C14727 + C38612 * C14819 + C38699 * C6325 +
              C38611 * C6411) *
                 C273) *
                C38609) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
            C14650 * C38612) *
               C38609 +
           (C39272 + C39273) * C38610) *
              C89843 * C5796 -
          ((C40372 + C40373) * C38610 +
           (C14651 * C38612 + C14650 * C38611) * C38609) *
              C89843 * C5797 +
          ((C14651 * C38611 + C14652 * C38612) * C38609 +
           (C40374 + C40375) * C38610) *
              C89843 * C5798 -
          (((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C38612 +
            C14653 * C38611) *
               C38610 +
           (C18956 * C38612 + C14652 * C38611) * C38609) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C89843 * C5149 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C89843 * C89879) *
              C5151 +
          (((C40373 + C40372) * C38609 + (C42318 + C42319) * C38610) * C89843 *
               C89879 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C89843 *
               C5149) *
              C5152 +
          (((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) * C89843 *
               C5149 -
           (((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C38612 +
             C3339 * C38611) *
                C38610 +
            (C42319 + C42318) * C38609) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C1757 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C1758 +
           (((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C38611 +
             C19705 * C38612) *
                C38609 +
            (C41361 + C41367) * C38610) *
               C1759) *
              C5149 +
          (((C17786 * C38611 + C17785 * C38612) * C38609 +
            (C44518 + C44519) * C38610) *
               C1758 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C1757 -
           (((C711 * C14728 + C15371 + C15371 + C89937 * C15368) * C38612 +
             C41366 * C38611) *
                C38610 +
            (C19706 * C38612 + C19705 * C38611) * C38609) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C89999 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C89907) *
                        C5149 +
                    (((C43393 + C43392) * C89937 * C38611 +
                      (C38613 * C8592 + C43376 + C43376 + C38609 * C8598 +
                       C38615 * C8591 + C43377 + C43377 + C38610 * C8597) *
                          C89937 * C38612) *
                         C89907 -
                     ((C39418 + C39419) * C89937 * C38612 +
                      (C39417 + C39416) * C89937 * C38611) *
                         C89999) *
                        C89879) *
                       C89990 +
                   ((((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                       C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                          C89937 * C38611 +
                      (C43394 + C43395) * C89937 * C38612) *
                         C89907 -
                     ((C39421 + C39420) * C89937 * C38612 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C89937 * C38611) *
                         C89999) *
                        C5149 +
                    (((C39420 + C39421) * C89937 * C38611 +
                      (C39422 + C39423) * C89937 * C38612) *
                         C89999 -
                     ((C38615 * C8590 + C43382 + C43382 + C38610 * C8596 +
                       C38613 * C8591 + C43383 + C43383 + C38609 * C8597) *
                          C89937 * C38612 +
                      (C43395 + C43394) * C89937 * C38611) *
                         C89907) *
                        C89879) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C38614 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C38609 +
             (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
                C89937 * C89999 -
            ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
             (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
              C38611 * C1880) *
                 C38609 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C38614) *
                C89937 * C89907) *
               C5149 +
           (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C38614 +
             (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
              C38612 * C8681) *
                 C38609 +
             (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
                C89937 * C89907 -
            ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
             (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C38609 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C38614) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          ((((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
             (C42528 + C42529) * C38616 + (C42530 + C42531) * C38610) *
                C89937 * C89907 -
            ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
             (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
                C89937 * C89999) *
               C5149 +
           (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
             (C41584 + C41585) * C38616 + (C41586 + C41587) * C38610) *
                C89937 * C89999 -
            ((C38700 * C8593 + C38612 * C8679 + C38699 * C4165 +
              C38611 * C4281) *
                 C38610 +
             (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
              C38611 * C4277) *
                 C38616 +
             (C43537 + C43536) * C38609 + (C43535 + C43534) * C38614) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C38614 +
              (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
              C304 * C38610) *
                 C38611 +
             (C39644 + C39645 + C39646 + C39647) * C38612) *
                C89999 -
            ((C43668 + C43669 + C43670 + C43671) * C38612 +
             (C2019 * C38610 + C2020 * C38616 +
              (C273 * C1770 + C89937 * C1994) * C38609 +
              (C273 * C1762 + C89937 * C1986) * C38614) *
                 C38611) *
                C89907) *
               C5149 +
           (((C43671 + C43670 + C43669 + C43668) * C38611 +
             (C17101 * C38614 + C17100 * C38609 + C17104 * C38616 +
              C17105 * C38610) *
                 C38612) *
                C89907 -
            ((C39648 + C39649 + C39650 + C39651) * C38612 +
             (C39647 + C39646 + C39645 + C39644) * C38611) *
                C89999) *
               C89879) *
              C89990 +
          ((((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
              C2017 * C38610) *
                 C38611 +
             (C43672 + C43673 + C43674 + C43675) * C38612) *
                C89907 -
            ((C39655 + C39654 + C39653 + C39652) * C38612 +
             (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                 C38611) *
                C89999) *
               C5149 +
           (((C39652 + C39653 + C39654 + C39655) * C38611 +
             (C39656 + C39657 + C39658 + C39659) * C38612) *
                C89999 -
            (((C273 * C8593 + C89937 * C8759) * C38610 +
              (C273 * C8590 + C89937 * C8756) * C38616 + C17105 * C38609 +
              C17104 * C38614) *
                 C38612 +
             (C43675 + C43674 + C43673 + C43672) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C38699 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C38611 +
             (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
                C89937 * C89999 -
            ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
             (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
              C38609 * C2100) *
                 C38611 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C38699) *
                C89937 * C89907) *
               C5149 +
           (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
             (C38614 * C8592 + C38609 * C8595 + C38616 * C8591 +
              C38610 * C8594) *
                 C38700 +
             (C38614 * C8678 + C38609 * C8838 + C38616 * C8677 +
              C38610 * C8837) *
                 C38612) *
                C89937 * C89907 -
            ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
             (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C38699 +
             (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
              C38610 * C2098) *
                 C38611 +
             (C43826 + C43827) * C38700 + (C43828 + C43829) * C38612) *
                C89937 * C89907 -
            ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
             (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C38611 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C38699) *
                C89937 * C89999) *
               C5149 +
           (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
             (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
                C89937 * C89999 -
            ((C38616 * C8676 + C38610 * C8836 + C38614 * C8677 +
              C38609 * C8837) *
                 C38612 +
             (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
              C38609 * C8594) *
                 C38700 +
             (C43829 + C43828) * C38611 + (C43827 + C43826) * C38699) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C89999 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C89907) *
                        C5149 +
                    (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
                       C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                          C38609 +
                      (C43974 + C43975) * C38610) *
                         C89937 * C89907 -
                     ((C39932 + C39933) * C38610 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C38609) *
                         C89937 * C89999) *
                        C89879) *
                       C89990 +
                   ((((C40941 + C40940) * C38609 + (C42836 + C42837) * C38610) *
                         C89937 * C89907 -
                     ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                         C89937 * C89999) *
                        C5149 +
                    (((C39933 + C39932) * C38609 + (C41908 + C41909) * C38610) *
                         C89937 * C89999 -
                     ((C38936 * C8590 + C43968 + C43968 + C38612 * C8913 +
                       C38935 * C4161 + C43969 + C43969 + C38611 * C4615) *
                          C38610 +
                      (C43975 + C43974) * C38609) *
                         C89937 * C89907) *
                        C89879) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C89999 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C89907) *
                        C5149 +
                    (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                       C17448 * C38612) *
                          C38609 +
                      (C44106 + C44107 + C44108 + C44109) * C38610) *
                         C89907 -
                     ((C40034 + C40035 + C40036 + C40037) * C38610 +
                      (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                       C14066 * C38699) *
                          C38609) *
                         C89999) *
                        C89879) *
                       C89990 +
                   ((((C41045 + C41044 + C41043 + C41042) * C38609 +
                      (C42936 + C42937 + C42938 + C42939) * C38610) *
                         C89907 -
                     ((C39048 + C39049 + C39050 + C39051) * C38610 +
                      (C39047 + C39046 + C39045 + C39044) * C38609) *
                         C89999) *
                        C5149 +
                    (((C40037 + C40036 + C40035 + C40034) * C38609 +
                      (C42008 + C42009 + C42010 + C42011) * C38610) *
                         C89999 -
                     (((C273 * C8676 + C89937 * C8993) * C38612 +
                       (C273 * C8590 + C89937 * C8756) * C38700 +
                       C4741 * C38611 + C4412 * C38699) *
                          C38610 +
                      (C44109 + C44108 + C44107 + C44106) * C38609) *
                         C89907) *
                        C89879) *
                       C89814)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                  C273 +
              (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                  C89937) *
                 C38611 +
             ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
                C89999 -
            (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
             ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
               C38609 * C2394) *
                  C89937 +
              (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
               C38609 * C1770) *
                  C273) *
                 C38611) *
                C89907) *
               C5149 +
           ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
             ((C38614 * C8592 + C38609 * C8595 + C38616 * C8591 +
               C38610 * C8594) *
                  C273 +
              (C38614 * C8758 + C38609 * C9072 + C38616 * C8757 +
               C38610 * C9071) *
                  C89937) *
                 C38612) *
                C89907 -
            (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
             ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
                C89999) *
               C89879) *
              C89990 +
          (((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
               C38610 * C1768) *
                  C273 +
              (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
               C38610 * C2392) *
                  C89937) *
                 C38611 +
             ((C43826 + C43827) * C273 + (C44250 + C44251) * C89937) * C38612) *
                C89907 -
            (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
             ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                  C89937 +
              (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                  C273) *
                 C38611) *
                C89999) *
               C5149 +
           ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
             ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
                C89999 -
            (((C38616 * C8756 + C38610 * C9070 + C38614 * C8757 +
               C38609 * C9071) *
                  C89937 +
              (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
               C38609 * C8594) *
                  C273) *
                 C38612 +
             ((C44251 + C44250) * C89937 + (C43827 + C43826) * C273) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                  C273 +
              (C38699 * C274 + C38611 * C633 + C38700 * C1053 +
               C38612 * C1543) *
                  C89937) *
                 C38609 +
             ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
                C89999 -
            (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
             ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
               C38611 * C2476) *
                  C89937 +
              (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
               C38611 * C1872) *
                  C273) *
                 C38609) *
                C89907) *
               C5149 +
           ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
               C38612 * C8678) *
                  C273 +
              (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
               C38612 * C9149) *
                  C89937) *
                 C38609 +
             ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
                C89907 -
            (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
             ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
               C38611 * C1543) *
                  C89937 +
              (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                  C273) *
                 C38609) *
                C89999) *
               C89879) *
              C89990 +
          (((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
             ((C42528 + C42529) * C273 + (C43140 + C43141) * C89937) * C38610) *
                C89907 -
            (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
             ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
                C89999) *
               C5149 +
           ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
             ((C41584 + C41585) * C273 + (C42218 + C42219) * C89937) * C38610) *
                C89999 -
            (((C38700 * C8756 + C38612 * C9147 + C38699 * C4395 +
               C38611 * C4945) *
                  C89937 +
              (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
               C38611 * C4277) *
                  C273) *
                 C38610 +
             ((C44387 + C44386) * C89937 + (C43535 + C43534) * C273) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
              C14650 * C38612) *
                 C38609 +
             (C39272 + C39273) * C38610) *
                C89999 -
            ((C41359 + C41360) * C38610 +
             (C17786 * C38612 +
              (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                 C38609) *
                C89907) *
               C5149 +
           (((C17786 * C38611 + C17785 * C38612) * C38609 +
             (C44518 + C44519) * C38610) *
                C89907 -
            ((C40372 + C40373) * C38610 +
             (C14651 * C38612 + C14650 * C38611) * C38609) *
                C89999) *
               C89879) *
              C89990 +
          ((((C41360 + C41359) * C38609 + (C43240 + C43241) * C38610) * C89907 -
            ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) *
                C89999) *
               C5149 +
           (((C40373 + C40372) * C38609 + (C42318 + C42319) * C38610) * C89999 -
            (((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C38612 +
              C5073 * C38611) *
                 C38610 +
             (C44519 + C44518) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexx[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C89843 * C5149 -
                    ((C39418 + C39419) * C89937 * C38612 +
                     (C39417 + C39416) * C89937 * C38611) *
                        C89843 * C89879) *
                       C5151 +
                   (((C39420 + C39421) * C89937 * C38611 +
                     (C39422 + C39423) * C89937 * C38612) *
                        C89843 * C89879 -
                    ((C39421 + C39420) * C89937 * C38612 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C89937 * C38611) *
                        C89843 * C5149) *
                       C5152 +
                   (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                      C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                         C89937 * C38611 +
                     (C41476 + C41477) * C89937 * C38612) *
                        C89843 * C5149 -
                    ((C38615 * C834 + C41470 + C41470 + C38610 * C850 +
                      C38613 * C832 + C41471 + C41471 + C38609 * C848) *
                         C89937 * C38612 +
                     (C41477 + C41476) * C89937 * C38611) *
                        C89843 * C89879) *
                       C5153)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                     C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                        C89937 * C38611 +
                    (C39416 + C39417) * C89937 * C38612) *
                       C89843 * C5796 -
                   ((C39418 + C39419) * C89937 * C38612 +
                    (C39417 + C39416) * C89937 * C38611) *
                       C89843 * C5797 +
                   ((C39419 + C39418) * C89937 * C38611 +
                    (C45478 + C45479) * C89937 * C38612) *
                       C89843 * C5798 -
                   ((C38615 * C13844 + C45472 + C45472 + C38610 * C13848 +
                     C38613 * C13843 + C45473 + C45473 + C38609 * C13847) *
                        C89937 * C38612 +
                    (C45479 + C45478) * C89937 * C38611) *
                       C89843 * C5799) *
                  C89808) /
                     (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C89843 * C5149 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C89843 * C89879) *
              C5151 +
          (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
            (C41584 + C41585) * C38616 + (C41586 + C41587) * C38610) *
               C89937 * C89843 * C89879 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
            (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
               C89937 * C89843 * C5149 -
           ((C38700 * C842 + C38612 * C952 + C38699 * C841 + C38611 * C951) *
                C38610 +
            (C38700 * C834 + C38612 * C944 + C38699 * C833 + C38611 * C943) *
                C38616 +
            (C41587 + C41586) * C38609 + (C41585 + C41584) * C38614) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C38614 +
           (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
               C38609 +
           (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
              C89937 * C89843 * C5796 -
          ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
           (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
               C38609 +
           (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
               C38614) *
              C89937 * C89843 * C5797 +
          ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
               C38614 +
           (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
               C38609 +
           (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
              C89937 * C89843 * C5798 -
          ((C38700 * C13846 + C38612 * C13966 + C38699 * C5805 +
            C38611 * C5867) *
               C38610 +
           (C38700 * C13844 + C38612 * C13964 + C38699 * C5802 +
            C38611 * C5864) *
               C38616 +
           (C38700 * C13845 + C38612 * C13965 + C38699 * C5806 +
            C38611 * C5868) *
               C38609 +
           (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
            C38611 * C5865) *
               C38614) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C89843 * C5149 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C89843 * C89879) *
              C5151 +
          (((C39652 + C39653 + C39654 + C39655) * C38611 +
            (C39656 + C39657 + C39658 + C39659) * C38612) *
               C89843 * C89879 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          (((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
                C38611 +
            (C41686 + C41687 + C41688 + C41689) * C38612) *
               C89843 * C5149 -
           (((C273 * C842 + C89937 * C1066) * C38610 +
             (C273 * C834 + C89937 * C1058) * C38616 + C1091 * C38609 +
             C1090 * C38614) *
                C38612 +
            (C41689 + C41688 + C41687 + C41686) * C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C38614 +
            (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
            C304 * C38610) *
               C38611 +
           (C39644 + C39645 + C39646 + C39647) * C38612) *
              C89843 * C5796 -
          ((C39648 + C39649 + C39650 + C39651) * C38612 +
           (C39647 + C39646 + C39645 + C39644) * C38611) *
              C89843 * C5797 +
          ((C39651 + C39650 + C39649 + C39648) * C38611 +
           (C45612 + C45613 + C45614 + C45615) * C38612) *
              C89843 * C5798 -
          (((C273 * C13846 + C89937 * C14044) * C38610 +
            (C273 * C13844 + C89937 * C14042) * C38616 + C18624 * C38609 +
            C18623 * C38614) *
               C38612 +
           (C45615 + C45614 + C45613 + C45612) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C89843 * C5149 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C89843 * C89879) *
              C5151 +
          (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
            (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
               C89937 * C89843 * C89879 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C38699 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C38611 +
            (C41796 + C41797) * C38700 + (C41798 + C41799) * C38612) *
               C89937 * C89843 * C5149 -
           ((C38616 * C944 + C38610 * C1172 + C38614 * C942 + C38609 * C1170) *
                C38612 +
            (C38616 * C834 + C38610 * C842 + C38614 * C832 + C38609 * C840) *
                C38700 +
            (C41799 + C41798) * C38611 + (C41797 + C41796) * C38699) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C38699 +
           (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
               C38611 +
           (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
              C89937 * C89843 * C5796 -
          ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
           (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
              C89937 * C89843 * C5797 +
          ((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
           (C45690 + C45691) * C38700 + (C45692 + C45693) * C38612) *
              C89937 * C89843 * C5798 -
          ((C38616 * C13964 + C38610 * C14158 + C38614 * C13963 +
            C38609 * C14157) *
               C38612 +
           (C38616 * C13844 + C38610 * C13846 + C38614 * C13843 +
            C38609 * C13845) *
               C38700 +
           (C45693 + C45692) * C38611 + (C45691 + C45690) * C38699) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C89843 * C5149 -
                    ((C39932 + C39933) * C38610 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C38609) *
                        C89937 * C89843 * C89879) *
                       C5151 +
                   (((C39933 + C39932) * C38609 + (C41908 + C41909) * C38610) *
                        C89937 * C89843 * C89879 -
                    ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                        C89937 * C89843 * C5149) *
                       C5152 +
                   (((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                        C89937 * C89843 * C5149 -
                    ((C38936 * C834 + C41902 + C41902 + C38612 * C1254 +
                      C38935 * C833 + C41903 + C41903 + C38611 * C1253) *
                         C38610 +
                     (C41909 + C41908) * C38609) *
                        C89937 * C89843 * C89879) *
                       C5153)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                     C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                        C38609 +
                    (C38972 + C38973) * C38610) *
                       C89937 * C89843 * C5796 -
                   ((C39932 + C39933) * C38610 +
                    (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                     C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                        C38609) *
                       C89937 * C89843 * C5797 +
                   ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                     C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                        C38609 +
                    (C39934 + C39935) * C38610) *
                       C89937 * C89843 * C5798 -
                   ((C38936 * C13844 + C45760 + C45760 + C38612 * C14270 +
                     C38935 * C5802 + C45761 + C45761 + C38611 * C6029) *
                        C38610 +
                    (C38936 * C13843 + C45762 + C45762 + C38612 * C14269 +
                     C38935 * C5803 + C45763 + C45763 + C38611 * C6030) *
                        C38609) *
                       C89937 * C89843 * C5799) *
                  C89808) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C89843 * C5149 -
                    ((C40034 + C40035 + C40036 + C40037) * C38610 +
                     (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                      C14066 * C38699) *
                         C38609) *
                        C89843 * C89879) *
                       C5151 +
                   (((C40037 + C40036 + C40035 + C40034) * C38609 +
                     (C42008 + C42009 + C42010 + C42011) * C38610) *
                        C89843 * C89879 -
                    ((C39048 + C39049 + C39050 + C39051) * C38610 +
                     (C39047 + C39046 + C39045 + C39044) * C38609) *
                        C89843 * C5149) *
                       C5152 +
                   (((C39051 + C39050 + C39049 + C39048) * C38609 +
                     (C39052 + C39053 + C39054 + C39055) * C38610) *
                        C89843 * C5149 -
                    (((C273 * C944 + C89937 * C1364) * C38612 +
                      (C273 * C834 + C89937 * C1058) * C38700 + C3101 * C38611 +
                      C2864 * C38699) *
                         C38610 +
                     (C42011 + C42010 + C42009 + C42008) * C38609) *
                        C89843 * C89879) *
                       C5153)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C273 * C106 + C89937 * C274) * C38699 +
                     (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                     C14368 * C38612) *
                        C38609 +
                    (C39044 + C39045 + C39046 + C39047) * C38610) *
                       C89843 * C5796 -
                   ((C40034 + C40035 + C40036 + C40037) * C38610 +
                    (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                     C14066 * C38699) *
                        C38609) *
                       C89843 * C5797 +
                   ((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                     C14370 * C38612) *
                        C38609 +
                    (C40038 + C40039 + C40040 + C40041) * C38610) *
                       C89843 * C5798 -
                   (((C273 * C13964 + C89937 * C14358) * C38612 +
                     (C273 * C13844 + C89937 * C14042) * C38700 +
                     C14371 * C38611 + C14072 * C38699) *
                        C38610 +
                    (C18791 * C38612 + C18623 * C38700 + C14370 * C38611 +
                     C14071 * C38699) *
                        C38609) *
                       C89843 * C5799) *
                  C89808) /
                     (p * q * std::sqrt(p + q));
    d2eezx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C89843 * C5149 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C89843 * C89879) *
              C5151 +
          ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
            ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
               C89843 * C89879 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C273 +
             (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                 C89937) *
                C38611 +
            ((C41796 + C41797) * C273 + (C42114 + C42115) * C89937) * C38612) *
               C89843 * C5149 -
           (((C38616 * C1058 + C38610 * C1466 + C38614 * C1056 +
              C38609 * C1464) *
                 C89937 +
             (C38616 * C834 + C38610 * C842 + C38614 * C832 + C38609 * C840) *
                 C273) *
                C38612 +
            ((C42115 + C42114) * C89937 + (C41797 + C41796) * C273) * C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C273 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C89937) *
               C38611 +
           ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
              C89843 * C5796 -
          (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
           ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
              C89843 * C5797 +
          (((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
           ((C45690 + C45691) * C273 + (C45900 + C45901) * C89937) * C38612) *
              C89843 * C5798 -
          (((C38616 * C14042 + C38610 * C14446 + C38614 * C14041 +
             C38609 * C14445) *
                C89937 +
            (C38616 * C13844 + C38610 * C13846 + C38614 * C13843 +
             C38609 * C13845) *
                C273) *
               C38612 +
           ((C45901 + C45900) * C89937 + (C45691 + C45690) * C273) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C89843 * C5149 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C89843 * C89879) *
              C5151 +
          ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
            ((C41584 + C41585) * C273 + (C42218 + C42219) * C89937) * C38610) *
               C89843 * C89879 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C89843 * C5149) *
              C5152 +
          ((((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
            ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
               C89843 * C5149 -
           (((C38700 * C1058 + C38612 * C1548 + C38699 * C1057 +
              C38611 * C1547) *
                 C89937 +
             (C38700 * C834 + C38612 * C944 + C38699 * C833 + C38611 * C943) *
                 C273) *
                C38610 +
            ((C42219 + C42218) * C89937 + (C41585 + C41584) * C273) * C38609) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C273 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C89937) *
               C38609 +
           ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
              C89843 * C5796 -
          (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
           ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C89937 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C273) *
               C38609) *
              C89843 * C5797 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C273 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C89937) *
               C38609 +
           ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
              C89843 * C5798 -
          (((C38700 * C14042 + C38612 * C14554 + C38699 * C5920 +
             C38611 * C6191) *
                C89937 +
            (C38700 * C13844 + C38612 * C13964 + C38699 * C5802 +
             C38611 * C5864) *
                C273) *
               C38610 +
           ((C38700 * C14041 + C38612 * C14553 + C38699 * C5921 +
             C38611 * C6192) *
                C89937 +
            (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
             C38611 * C5865) *
                C273) *
               C38609) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C89843 * C5149 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C89843 * C89879) *
              C5151 +
          (((C40373 + C40372) * C38609 + (C42318 + C42319) * C38610) * C89843 *
               C89879 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C89843 *
               C5149) *
              C5152 +
          (((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) * C89843 *
               C5149 -
           (((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C38612 +
             C3339 * C38611) *
                C38610 +
            (C42319 + C42318) * C38609) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
            C14650 * C38612) *
               C38609 +
           (C39272 + C39273) * C38610) *
              C89843 * C5796 -
          ((C40372 + C40373) * C38610 +
           (C14651 * C38612 + C14650 * C38611) * C38609) *
              C89843 * C5797 +
          ((C14651 * C38611 + C14652 * C38612) * C38609 +
           (C40374 + C40375) * C38610) *
              C89843 * C5798 -
          (((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C38612 +
            C14653 * C38611) *
               C38610 +
           (C18956 * C38612 + C14652 * C38611) * C38609) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                        C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                           C89937 * C38611 +
                       (C39416 + C39417) * C89937 * C38612) *
                          C9304 -
                      ((C43392 + C43393) * C89937 * C38612 +
                       (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                        C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                           C89937 * C38611) *
                          C89907) *
                         C89998 +
                     (((C43393 + C43392) * C89937 * C38611 +
                       (C49114 + C49115) * C89937 * C38612) *
                          C89907 -
                      ((C39418 + C39419) * C89937 * C38612 +
                       (C39417 + C39416) * C89937 * C38611) *
                          C9304) *
                         C89879) *
                        C89990 +
                    ((((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                        C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                           C89937 * C38611 +
                       (C43394 + C43395) * C89937 * C38612) *
                          C89907 -
                      ((C39421 + C39420) * C89937 * C38612 +
                       (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                        C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                           C89937 * C38611) *
                          C9304) *
                         C89998 +
                     (((C39420 + C39421) * C89937 * C38611 +
                       (C39422 + C39423) * C89937 * C38612) *
                          C9304 -
                      ((C38615 * C8590 + C43382 + C43382 + C38610 * C8596 +
                        C38613 * C8591 + C43383 + C43383 + C38609 * C8597) *
                           C89937 * C38612 +
                       (C43395 + C43394) * C89937 * C38611) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C38614 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C38609 +
             (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
                C89937 * C9304 -
            ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
             (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
              C38611 * C1880) *
                 C38609 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C38614) *
                C89937 * C89907) *
               C89998 +
           (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C38614 +
             (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
              C38612 * C8681) *
                 C38609 +
             (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
                C89937 * C89907 -
            ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
             (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C38609 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C38614) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
             (C42528 + C42529) * C38616 + (C42530 + C42531) * C38610) *
                C89937 * C89907 -
            ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
             (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
                C89937 * C9304) *
               C89998 +
           (((C39541 + C39540) * C38614 + (C39539 + C39538) * C38609 +
             (C41584 + C41585) * C38616 + (C41586 + C41587) * C38610) *
                C89937 * C9304 -
            ((C38700 * C8593 + C38612 * C8679 + C38699 * C4165 +
              C38611 * C4281) *
                 C38610 +
             (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
              C38611 * C4277) *
                 C38616 +
             (C43537 + C43536) * C38609 + (C43535 + C43534) * C38614) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C38614 +
              (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
              C304 * C38610) *
                 C38611 +
             (C39644 + C39645 + C39646 + C39647) * C38612) *
                C9304 -
            ((C43668 + C43669 + C43670 + C43671) * C38612 +
             (C2019 * C38610 + C2020 * C38616 +
              (C273 * C1770 + C89937 * C1994) * C38609 +
              (C273 * C1762 + C89937 * C1986) * C38614) *
                 C38611) *
                C89907) *
               C89998 +
           (((C43671 + C43670 + C43669 + C43668) * C38611 +
             (C49312 + C49313 + C49314 + C49315) * C38612) *
                C89907 -
            ((C39648 + C39649 + C39650 + C39651) * C38612 +
             (C39647 + C39646 + C39645 + C39644) * C38611) *
                C9304) *
               C89879) *
              C89990 +
          ((((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
              C2017 * C38610) *
                 C38611 +
             (C43672 + C43673 + C43674 + C43675) * C38612) *
                C89907 -
            ((C39655 + C39654 + C39653 + C39652) * C38612 +
             (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                 C38611) *
                C9304) *
               C89998 +
           (((C39652 + C39653 + C39654 + C39655) * C38611 +
             (C39656 + C39657 + C39658 + C39659) * C38612) *
                C9304 -
            (((C273 * C8593 + C89937 * C8759) * C38610 +
              (C273 * C8590 + C89937 * C8756) * C38616 + C17105 * C38609 +
              C17104 * C38614) *
                 C38612 +
             (C43675 + C43674 + C43673 + C43672) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C38699 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C38611 +
             (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
                C89937 * C9304 -
            ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
             (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
              C38609 * C2100) *
                 C38611 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C38699) *
                C89937 * C89907) *
               C89998 +
           (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
             (C49422 + C49423) * C38700 + (C49424 + C49425) * C38612) *
                C89937 * C89907 -
            ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
             (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C38699 +
             (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
              C38610 * C2098) *
                 C38611 +
             (C43826 + C43827) * C38700 + (C43828 + C43829) * C38612) *
                C89937 * C89907 -
            ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
             (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C38611 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C38699) *
                C89937 * C9304) *
               C89998 +
           (((C39798 + C39799) * C38699 + (C39800 + C39801) * C38611 +
             (C39802 + C39803) * C38700 + (C39804 + C39805) * C38612) *
                C89937 * C9304 -
            ((C38616 * C8676 + C38610 * C8836 + C38614 * C8677 +
              C38609 * C8837) *
                 C38612 +
             (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
              C38609 * C8594) *
                 C38700 +
             (C43829 + C43828) * C38611 + (C43827 + C43826) * C38699) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38935 * C106 + C38938 + C38938 + C38611 * C417 + C38936 * C829 +
              C38939 + C38939 + C38612 * C1249) *
                 C38609 +
             (C38972 + C38973) * C38610) *
                C89937 * C9304 -
            ((C40940 + C40941) * C38610 +
             (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
              C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                 C38609) *
                C89937 * C89907) *
               C89998 +
           (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
              C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                 C38609 +
             (C43974 + C43975) * C38610) *
                C89937 * C89907 -
            ((C39932 + C39933) * C38610 +
             (C38936 * C830 + C39910 + C39910 + C38612 * C1250 + C38935 * C829 +
              C39911 + C39911 + C38611 * C1249) *
                 C38609) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C40941 + C40940) * C38609 + (C42836 + C42837) * C38610) * C89937 *
                C89907 -
            ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) * C89937 *
                C9304) *
               C89998 +
           (((C39933 + C39932) * C38609 + (C41908 + C41909) * C38610) * C89937 *
                C9304 -
            ((C38936 * C8590 + C43968 + C43968 + C38612 * C8913 +
              C38935 * C4161 + C43969 + C43969 + C38611 * C4615) *
                 C38610 +
             (C43975 + C43974) * C38609) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C273 * C106 + C89937 * C274) * C38699 +
                        (C273 * C187 + C89937 * C499) * C38611 +
                        C14066 * C38700 + C14368 * C38612) *
                           C38609 +
                       (C39044 + C39045 + C39046 + C39047) * C38610) *
                          C9304 -
                      ((C41042 + C41043 + C41044 + C41045) * C38610 +
                       (C17449 * C38612 + C17103 * C38700 +
                        (C273 * C1872 + C89937 * C2292) * C38611 +
                        (C273 * C1762 + C89937 * C1986) * C38699) *
                           C38609) *
                          C89907) *
                         C89998 +
                     (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                        C17448 * C38612) *
                           C38609 +
                       (C44106 + C44107 + C44108 + C44109) * C38610) *
                          C89907 -
                      ((C40034 + C40035 + C40036 + C40037) * C38610 +
                       (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                        C14066 * C38699) *
                           C38609) *
                          C9304) *
                         C89879) *
                        C89990 +
                    ((((C41045 + C41044 + C41043 + C41042) * C38609 +
                       (C42936 + C42937 + C42938 + C42939) * C38610) *
                          C89907 -
                      ((C39048 + C39049 + C39050 + C39051) * C38610 +
                       (C39047 + C39046 + C39045 + C39044) * C38609) *
                          C9304) *
                         C89998 +
                     (((C40037 + C40036 + C40035 + C40034) * C38609 +
                       (C42008 + C42009 + C42010 + C42011) * C38610) *
                          C9304 -
                      (((C273 * C8676 + C89937 * C8993) * C38612 +
                        (C273 * C8590 + C89937 * C8756) * C38700 +
                        C4741 * C38611 + C4412 * C38699) *
                           C38610 +
                       (C44109 + C44108 + C44107 + C44106) * C38609) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                  C273 +
              (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                  C89937) *
                 C38611 +
             ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
                C9304 -
            (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
             ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
               C38609 * C2394) *
                  C89937 +
              (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
               C38609 * C1770) *
                  C273) *
                 C38611) *
                C89907) *
               C89998 +
           ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
             ((C49422 + C49423) * C273 + (C49728 + C49729) * C89937) * C38612) *
                C89907 -
            (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
             ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
                C9304) *
               C89879) *
              C89990 +
          (((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
               C38610 * C1768) *
                  C273 +
              (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
               C38610 * C2392) *
                  C89937) *
                 C38611 +
             ((C43826 + C43827) * C273 + (C44250 + C44251) * C89937) * C38612) *
                C89907 -
            (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
             ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                  C89937 +
              (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                  C273) *
                 C38611) *
                C9304) *
               C89998 +
           ((((C39798 + C39799) * C273 + (C40160 + C40161) * C89937) * C38611 +
             ((C39802 + C39803) * C273 + (C40162 + C40163) * C89937) * C38612) *
                C9304 -
            (((C38616 * C8756 + C38610 * C9070 + C38614 * C8757 +
               C38609 * C9071) *
                  C89937 +
              (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
               C38609 * C8594) *
                  C273) *
                 C38612 +
             ((C44251 + C44250) * C89937 + (C43827 + C43826) * C273) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                  C273 +
              (C38699 * C274 + C38611 * C633 + C38700 * C1053 +
               C38612 * C1543) *
                  C89937) *
                 C38609 +
             ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
                C9304 -
            (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
             ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
               C38611 * C2476) *
                  C89937 +
              (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
               C38611 * C1872) *
                  C273) *
                 C38609) *
                C89907) *
               C89998 +
           ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
               C38612 * C8678) *
                  C273 +
              (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
               C38612 * C9149) *
                  C89937) *
                 C38609 +
             ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
                C89907 -
            (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
             ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
               C38611 * C1543) *
                  C89937 +
              (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                  C273) *
                 C38609) *
                C9304) *
               C89879) *
              C89990 +
          (((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
             ((C42528 + C42529) * C273 + (C43140 + C43141) * C89937) * C38610) *
                C89907 -
            (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
             ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
                C9304) *
               C89998 +
           ((((C39541 + C39540) * C273 + (C40271 + C40270) * C89937) * C38609 +
             ((C41584 + C41585) * C273 + (C42218 + C42219) * C89937) * C38610) *
                C9304 -
            (((C38700 * C8756 + C38612 * C9147 + C38699 * C4395 +
               C38611 * C4945) *
                  C89937 +
              (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
               C38611 * C4277) *
                  C273) *
                 C38610 +
             ((C44387 + C44386) * C89937 + (C43535 + C43534) * C273) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
              C14650 * C38612) *
                 C38609 +
             (C39272 + C39273) * C38610) *
                C9304 -
            ((C41359 + C41360) * C38610 +
             (C17786 * C38612 +
              (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                 C38609) *
                C89907) *
               C89998 +
           (((C17786 * C38611 + C17785 * C38612) * C38609 +
             (C44518 + C44519) * C38610) *
                C89907 -
            ((C40372 + C40373) * C38610 +
             (C14651 * C38612 + C14650 * C38611) * C38609) *
                C9304) *
               C89879) *
              C89990 +
          ((((C41360 + C41359) * C38609 + (C43240 + C43241) * C38610) * C89907 -
            ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C9304) *
               C89998 +
           (((C40373 + C40372) * C38609 + (C42318 + C42319) * C38610) * C9304 -
            (((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C38612 +
              C5073 * C38611) *
                 C38610 +
             (C44519 + C44518) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexx[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C90026 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C90027 +
                     ((C38613 * C1763 + C40478 + C40478 + C38609 * C1779 +
                       C38615 * C1764 + C40479 + C40479 + C38610 * C1780) *
                          C89937 * C38611 +
                      (C46142 + C46143) * C89937 * C38612) *
                         C12024) *
                        C89998 +
                    (((C43393 + C43392) * C89937 * C38611 +
                      (C49114 + C49115) * C89937 * C38612) *
                         C90027 -
                     ((C39418 + C39419) * C89937 * C38612 +
                      (C39417 + C39416) * C89937 * C38611) *
                         C90026 -
                     ((C38615 * C14728 + C46136 + C46136 + C38610 * C14732 +
                       C38613 * C14727 + C46137 + C46137 + C38609 * C14731) *
                          C89937 * C38612 +
                      (C46143 + C46142) * C89937 * C38611) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C90026 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C90027 +
           ((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
             C38612 * C6411) *
                C38614 +
            (C38699 * C1771 + C38611 * C1881 + C38700 * C6328 +
             C38612 * C6414) *
                C38609 +
            (C40608 + C40609) * C38616 + (C40610 + C40611) * C38610) *
               C89937 * C12024) *
              C89998 +
          (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
             C38612 * C8678) *
                C38614 +
            (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
             C38612 * C8681) *
                C38609 +
            (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
               C89937 * C90027 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C90026 -
           ((C38700 * C14730 + C38612 * C14822 + C38699 * C6327 +
             C38611 * C6413) *
                C38610 +
            (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
             C38611 * C6410) *
                C38616 +
            (C38700 * C14729 + C38612 * C14821 + C38699 * C6328 +
             C38611 * C6414) *
                C38609 +
            (C38700 * C14727 + C38612 * C14819 + C38699 * C6325 +
             C38611 * C6411) *
                C38614) *
               C89937 * C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexz[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C38614 +
                       (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
                       C304 * C38610) *
                          C38611 +
                      (C39644 + C39645 + C39646 + C39647) * C38612) *
                         C90026 -
                     ((C43668 + C43669 + C43670 + C43671) * C38612 +
                      (C2019 * C38610 + C2020 * C38616 +
                       (C273 * C1770 + C89937 * C1994) * C38609 +
                       (C273 * C1762 + C89937 * C1986) * C38614) *
                          C38611) *
                         C90027 +
                     (((C273 * C1763 + C89937 * C1987) * C38614 +
                       (C273 * C1771 + C89937 * C1995) * C38609 +
                       C2021 * C38616 + C2022 * C38610) *
                          C38611 +
                      (C46340 + C46341 + C46342 + C46343) * C38612) *
                         C12024) *
                        C89998 +
                    (((C43671 + C43670 + C43669 + C43668) * C38611 +
                      (C49312 + C49313 + C49314 + C49315) * C38612) *
                         C90027 -
                     ((C39648 + C39649 + C39650 + C39651) * C38612 +
                      (C39647 + C39646 + C39645 + C39644) * C38611) *
                         C90026 -
                     (((C273 * C14730 + C89937 * C14900) * C38610 +
                       (C273 * C14728 + C89937 * C14898) * C38616 +
                       C19210 * C38609 + C19209 * C38614) *
                          C38612 +
                      (C46343 + C46342 + C46341 + C46340) * C38611) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C90026 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C90027 +
           ((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
             C38610 * C1772) *
                C38699 +
            (C38614 * C1873 + C38609 * C2101 + C38616 * C1874 +
             C38610 * C2102) *
                C38611 +
            (C46450 + C46451) * C38700 + (C46452 + C46453) * C38612) *
               C89937 * C12024) *
              C89998 +
          (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
            (C49422 + C49423) * C38700 + (C49424 + C49425) * C38612) *
               C89937 * C90027 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C90026 -
           ((C38616 * C14820 + C38610 * C14976 + C38614 * C14819 +
             C38609 * C14975) *
                C38612 +
            (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
             C38609 * C14729) *
                C38700 +
            (C46453 + C46452) * C38611 + (C46451 + C46450) * C38699) *
               C89937 * C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyy[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C90026 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C90027 +
                     ((C38935 * C1763 + C40920 + C40920 + C38611 * C2183 +
                       C38936 * C6325 + C40921 + C40921 + C38612 * C6648) *
                          C38609 +
                      (C40942 + C40943) * C38610) *
                         C89937 * C12024) *
                        C89998 +
                    (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
                       C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                          C38609 +
                      (C43974 + C43975) * C38610) *
                         C89937 * C90027 -
                     ((C39932 + C39933) * C38610 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C38609) *
                         C89937 * C90026 -
                     ((C38936 * C14728 + C46552 + C46552 + C38612 * C15052 +
                       C38935 * C6324 + C46553 + C46553 + C38611 * C6647) *
                          C38610 +
                      (C38936 * C14727 + C46554 + C46554 + C38612 * C15051 +
                       C38935 * C6325 + C46555 + C46555 + C38611 * C6648) *
                          C38609) *
                         C89937 * C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C90026 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C90027 +
                     (((C273 * C1763 + C89937 * C1987) * C38699 +
                       (C273 * C1873 + C89937 * C2293) * C38611 +
                       C19207 * C38700 + C19459 * C38612) *
                          C38609 +
                      (C41046 + C41047 + C41048 + C41052) * C38610) *
                         C12024) *
                        C89998 +
                    (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                       C17448 * C38612) *
                          C38609 +
                      (C44106 + C44107 + C44108 + C44109) * C38610) *
                         C90027 -
                     ((C40034 + C40035 + C40036 + C40037) * C38610 +
                      (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                       C14066 * C38699) *
                          C38609) *
                         C90026 -
                     (((C273 * C14820 + C89937 * C15140) * C38612 +
                       (C273 * C14728 + C89937 * C14898) * C38700 +
                       C41051 * C38611 + C40714 * C38699) *
                          C38610 +
                      (C19460 * C38612 + C19209 * C38700 + C19459 * C38611 +
                       C19207 * C38699) *
                          C38609) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C90026 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C90027 +
           (((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
              C38610 * C1772) *
                 C273 +
             (C38614 * C1987 + C38609 * C2395 + C38616 * C1988 +
              C38610 * C2396) *
                 C89937) *
                C38611 +
            ((C46450 + C46451) * C273 + (C46756 + C46757) * C89937) * C38612) *
               C12024) *
              C89998 +
          ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
            ((C49422 + C49423) * C273 + (C49728 + C49729) * C89937) * C38612) *
               C90027 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C90026 -
           (((C38616 * C14898 + C38610 * C15216 + C38614 * C14897 +
              C38609 * C15215) *
                 C89937 +
             (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
              C38609 * C14729) *
                 C273) *
                C38612 +
            ((C46757 + C46756) * C89937 + (C46451 + C46450) * C273) * C38611) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezy[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C90026 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C90027 +
           (((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
              C38612 * C6411) *
                 C273 +
             (C38699 * C1987 + C38611 * C2477 + C38700 * C6491 +
              C38612 * C6882) *
                 C89937) *
                C38609 +
            ((C40608 + C40609) * C273 + (C41259 + C41260) * C89937) * C38610) *
               C12024) *
              C89998 +
          ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C273 +
             (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
              C38612 * C9149) *
                 C89937) *
                C38609 +
            ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
               C90027 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C90026 -
           (((C38700 * C14898 + C38612 * C15292 + C38699 * C6490 +
              C38611 * C6881) *
                 C89937 +
             (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
              C38611 * C6410) *
                 C273) *
                C38610 +
            ((C38700 * C14897 + C38612 * C15291 + C38699 * C6491 +
              C38611 * C6882) *
                 C89937 +
             (C38700 * C14727 + C38612 * C14819 + C38699 * C6325 +
              C38611 * C6411) *
                 C273) *
                C38609) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezz[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C90026 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C90027 +
           (((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C38611 +
             C19705 * C38612) *
                C38609 +
            (C41361 + C41367) * C38610) *
               C12024) *
              C89998 +
          (((C17786 * C38611 + C17785 * C38612) * C38609 +
            (C44518 + C44519) * C38610) *
               C90027 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C90026 -
           (((C711 * C14728 + C15371 + C15371 + C89937 * C15368) * C38612 +
             C41366 * C38611) *
                C38610 +
            (C19706 * C38612 + C19705 * C38611) * C38609) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexx[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C9304 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C89907) *
                        C822 +
                    (((C43393 + C43392) * C89937 * C38611 +
                      (C49114 + C49115) * C89937 * C38612) *
                         C89907 -
                     ((C39418 + C39419) * C89937 * C38612 +
                      (C39417 + C39416) * C89937 * C38611) *
                         C9304) *
                        C823 +
                    (((C39419 + C39418) * C89937 * C38611 +
                      (C45478 + C45479) * C89937 * C38612) *
                         C9304 -
                     ((C38615 * C16850 + C49108 + C49108 + C38610 * C16854 +
                       C38613 * C16849 + C49109 + C49109 + C38609 * C16853) *
                          C89937 * C38612 +
                      (C49115 + C49114) * C89937 * C38611) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C9304 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C89907) *
                        C89827 * C5151 +
                    (((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                       C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                          C89937 * C38611 +
                      (C43394 + C43395) * C89937 * C38612) *
                         C89907 -
                     ((C39421 + C39420) * C89937 * C38612 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C89937 * C38611) *
                         C9304) *
                        C89827 * C5152 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C89937 * C38611 +
                      (C41476 + C41477) * C89937 * C38612) *
                         C9304 -
                     ((C38615 * C4162 + C42418 + C42418 + C38610 * C4170 +
                       C38613 * C4161 + C42419 + C42419 + C38609 * C4169) *
                          C89937 * C38612 +
                      (C38615 * C1766 + C42420 + C42420 + C38610 * C1782 +
                       C38613 * C1760 + C42421 + C42421 + C38609 * C1776) *
                          C89937 * C38611) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C89937 * C38611 +
                     (C39416 + C39417) * C89937 * C38612) *
                        C10614 -
                    ((C43392 + C43393) * C89937 * C38612 +
                     (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                      C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                         C89937 * C38611) *
                        C10615 +
                    ((C38613 * C1763 + C40478 + C40478 + C38609 * C1779 +
                      C38615 * C1764 + C40479 + C40479 + C38610 * C1780) *
                         C89937 * C38611 +
                     (C46142 + C46143) * C89937 * C38612) *
                        C10616 -
                    ((C38615 * C29516 + C51756 + C51756 + C38610 * C29518 +
                      C38613 * C23356 + C51757 + C51757 + C38609 * C23360) *
                         C89937 * C38612 +
                     (C38615 * C10619 + C51758 + C51758 + C38610 * C10625 +
                      C38613 * C10620 + C51759 + C51759 + C38609 * C10626) *
                         C89937 * C38611) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C9304 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C89907) *
              C822 +
          (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
             C38612 * C8678) *
                C38614 +
            (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
             C38612 * C8681) *
                C38609 +
            (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
               C89937 * C89907 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C9304) *
              C823 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C38614 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C38609 +
            (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
               C89937 * C9304 -
           ((C38700 * C16852 + C38612 * C16982 + C38699 * C8594 +
             C38611 * C8680) *
                C38610 +
            (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
             C38611 * C8677) *
                C38616 +
            (C38700 * C16851 + C38612 * C16981 + C38699 * C8595 +
             C38611 * C8681) *
                C38609 +
            (C38700 * C16849 + C38612 * C16979 + C38699 * C8592 +
             C38611 * C8678) *
                C38614) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C9304 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
            (C42528 + C42529) * C38616 + (C42530 + C42531) * C38610) *
               C89937 * C89907 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
            (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
               C89937 * C9304 -
           ((C38700 * C4166 + C38612 * C4282 + C38699 * C1774 +
             C38611 * C1884) *
                C38610 +
            (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
             C38611 * C1876) *
                C38616 +
            (C42531 + C42530) * C38609 + (C42529 + C42528) * C38614) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C38614 +
           (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
               C38609 +
           (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
              C89937 * C10614 -
          ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
           (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 + C38611 * C1880) *
               C38609 +
           (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 + C38611 * C1872) *
               C38614) *
              C89937 * C10615 +
          ((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 + C38612 * C6411) *
               C38614 +
           (C38699 * C1771 + C38611 * C1881 + C38700 * C6328 + C38612 * C6414) *
               C38609 +
           (C40608 + C40609) * C38616 + (C40610 + C40611) * C38610) *
              C89937 * C10616 -
          ((C38700 * C29517 + C38612 * C29624 + C38699 * C10622 +
            C38611 * C10684) *
               C38610 +
           (C38700 * C29516 + C38612 * C29623 + C38699 * C10619 +
            C38611 * C10681) *
               C38616 +
           (C38700 * C23358 + C38612 * C23417 + C38699 * C10623 +
            C38611 * C10685) *
               C38609 +
           (C38700 * C23356 + C38612 * C23415 + C38699 * C10620 +
            C38611 * C10682) *
               C38614) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C9304 -
           ((C43668 + C43669 + C43670 + C43671) * C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C89907) *
              C822 +
          (((C43671 + C43670 + C43669 + C43668) * C38611 +
            (C49312 + C49313 + C49314 + C49315) * C38612) *
               C89907 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C9304) *
              C823 +
          (((C39651 + C39650 + C39649 + C39648) * C38611 +
            (C45612 + C45613 + C45614 + C45615) * C38612) *
               C9304 -
           (((C273 * C16852 + C89937 * C17084) * C38610 +
             (C273 * C16850 + C89937 * C17082) * C38616 + C21497 * C38609 +
             C21496 * C38614) *
                C38612 +
            (C49315 + C49314 + C49313 + C49312) * C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C9304 -
           ((C43668 + C43669 + C43670 + C43671) * C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C89907) *
              C89827 * C5151 +
          (((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
             C2017 * C38610) *
                C38611 +
            (C43672 + C43673 + C43674 + C43675) * C38612) *
               C89907 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          (((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
                C38611 +
            (C41686 + C41687 + C41688 + C41689) * C38612) *
               C9304 -
           (((C273 * C4166 + C89937 * C4400) * C38610 +
             (C273 * C4162 + C89937 * C4396) * C38616 + C4413 * C38609 +
             C4412 * C38614) *
                C38612 +
            (C3586 * C38610 + C3585 * C38616 + C2017 * C38609 +
             C2018 * C38614) *
                C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C38614 +
            (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
            C304 * C38610) *
               C38611 +
           (C39644 + C39645 + C39646 + C39647) * C38612) *
              C10614 -
          ((C43668 + C43669 + C43670 + C43671) * C38612 +
           (C2019 * C38610 + C2020 * C38616 +
            (C273 * C1770 + C89937 * C1994) * C38609 +
            (C273 * C1762 + C89937 * C1986) * C38614) *
               C38611) *
              C10615 +
          (((C273 * C1763 + C89937 * C1987) * C38614 +
            (C273 * C1771 + C89937 * C1995) * C38609 + C2021 * C38616 +
            C2022 * C38610) *
               C38611 +
           (C46340 + C46341 + C46342 + C46343) * C38612) *
              C10616 -
          (((C273 * C29517 + C89937 * C29750) * C38610 +
            (C273 * C29516 + C89937 * C29749) * C38616 +
            (C273 * C23358 + C89937 * C23471) * C38609 +
            (C273 * C23356 + C89937 * C23469) * C38614) *
               C38612 +
           ((C273 * C10622 + C89937 * C10740) * C38610 +
            (C273 * C10619 + C89937 * C10737) * C38616 +
            (C273 * C10623 + C89937 * C10741) * C38609 +
            (C273 * C10620 + C89937 * C10738) * C38614) *
               C38611) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C9304 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C89907) *
              C822 +
          (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
            (C49422 + C49423) * C38700 + (C49424 + C49425) * C38612) *
               C89937 * C89907 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C9304) *
              C823 +
          (((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
            (C45690 + C45691) * C38700 + (C45692 + C45693) * C38612) *
               C89937 * C9304 -
           ((C38616 * C16980 + C38610 * C17210 + C38614 * C16979 +
             C38609 * C17209) *
                C38612 +
            (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
             C38609 * C16851) *
                C38700 +
            (C49425 + C49424) * C38611 + (C49423 + C49422) * C38699) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C9304 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
             C38610 * C1768) *
                C38699 +
            (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
             C38610 * C2098) *
                C38611 +
            (C43826 + C43827) * C38700 + (C43828 + C43829) * C38612) *
               C89937 * C89907 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C38699 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C38611 +
            (C41796 + C41797) * C38700 + (C41798 + C41799) * C38612) *
               C89937 * C9304 -
           ((C38616 * C4278 + C38610 * C4514 + C38614 * C4277 +
             C38609 * C4513) *
                C38612 +
            (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
             C38609 * C4165) *
                C38700 +
            (C38616 * C1876 + C38610 * C2104 + C38614 * C1870 +
             C38609 * C2098) *
                C38611 +
            (C38616 * C1766 + C38610 * C1774 + C38614 * C1760 +
             C38609 * C1768) *
                C38699) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C38699 +
           (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
               C38611 +
           (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
              C89937 * C10614 -
          ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
           (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 + C38609 * C2100) *
               C38611 +
           (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 + C38609 * C1770) *
               C38699) *
              C89937 * C10615 +
          ((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 + C38610 * C1772) *
               C38699 +
           (C38614 * C1873 + C38609 * C2101 + C38616 * C1874 + C38610 * C2102) *
               C38611 +
           (C46450 + C46451) * C38700 + (C46452 + C46453) * C38612) *
              C89937 * C10616 -
          ((C38616 * C29623 + C38610 * C29849 + C38614 * C23415 +
            C38609 * C23523) *
               C38612 +
           (C38616 * C29516 + C38610 * C29517 + C38614 * C23356 +
            C38609 * C23358) *
               C38700 +
           (C38616 * C10681 + C38610 * C10793 + C38614 * C10682 +
            C38609 * C10794) *
               C38611 +
           (C38616 * C10619 + C38610 * C10622 + C38614 * C10620 +
            C38609 * C10623) *
               C38699) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C9304 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C89907) *
                        C822 +
                    (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
                       C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                          C38609 +
                      (C43974 + C43975) * C38610) *
                         C89937 * C89907 -
                     ((C39932 + C39933) * C38610 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C38609) *
                         C89937 * C9304) *
                        C823 +
                    (((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C38609 +
                      (C39934 + C39935) * C38610) *
                         C89937 * C9304 -
                     ((C38936 * C16850 + C49524 + C49524 + C38612 * C17334 +
                       C38935 * C8591 + C49525 + C49525 + C38611 * C8914) *
                          C38610 +
                      (C38936 * C16849 + C49526 + C49526 + C38612 * C17333 +
                       C38935 * C8592 + C49527 + C49527 + C38611 * C8915) *
                          C38609) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C9304 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    (((C40941 + C40940) * C38609 + (C42836 + C42837) * C38610) *
                         C89937 * C89907 -
                     ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    (((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                         C89937 * C9304 -
                     ((C38936 * C4162 + C42830 + C42830 + C38612 * C4616 +
                       C38935 * C1766 + C42831 + C42831 + C38611 * C2186) *
                          C38610 +
                      (C42837 + C42836) * C38609) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C38609 +
                     (C38972 + C38973) * C38610) *
                        C89937 * C10614 -
                    ((C40940 + C40941) * C38610 +
                     (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                      C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                         C38609) *
                        C89937 * C10615 +
                    ((C38935 * C1763 + C40920 + C40920 + C38611 * C2183 +
                      C38936 * C6325 + C40921 + C40921 + C38612 * C6648) *
                         C38609 +
                     (C40942 + C40943) * C38610) *
                        C89937 * C10616 -
                    ((C38936 * C29516 + C52024 + C52024 + C38612 * C29962 +
                      C38935 * C10619 + C52025 + C52025 + C38611 * C10846) *
                         C38610 +
                     (C38936 * C23356 + C52026 + C52026 + C38612 * C23575 +
                      C38935 * C10620 + C52027 + C52027 + C38611 * C10847) *
                         C38609) *
                        C89937 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C9304 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C89907) *
                        C822 +
                    (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                       C17448 * C38612) *
                          C38609 +
                      (C44106 + C44107 + C44108 + C44109) * C38610) *
                         C89907 -
                     ((C40034 + C40035 + C40036 + C40037) * C38610 +
                      (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                       C14066 * C38699) *
                          C38609) *
                         C9304) *
                        C823 +
                    (((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                       C14370 * C38612) *
                          C38609 +
                      (C40038 + C40039 + C40040 + C40041) * C38610) *
                         C9304 -
                     (((C273 * C16980 + C89937 * C17440) * C38612 +
                       (C273 * C16850 + C89937 * C17082) * C38700 +
                       C17450 * C38611 + C17104 * C38699) *
                          C38610 +
                      (C21736 * C38612 + C21496 * C38700 + C17448 * C38611 +
                       C17101 * C38699) *
                          C38609) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C9304 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C89907) *
                        C89827 * C5151 +
                    (((C41045 + C41044 + C41043 + C41042) * C38609 +
                      (C42936 + C42937 + C42938 + C42939) * C38610) *
                         C89907 -
                     ((C39048 + C39049 + C39050 + C39051) * C38610 +
                      (C39047 + C39046 + C39045 + C39044) * C38609) *
                         C9304) *
                        C89827 * C5152 +
                    (((C39051 + C39050 + C39049 + C39048) * C38609 +
                      (C39052 + C39053 + C39054 + C39055) * C38610) *
                         C9304 -
                     (((C273 * C4278 + C89937 * C4732) * C38612 +
                       (C273 * C4162 + C89937 * C4396) * C38700 +
                       C3822 * C38611 + C3585 * C38699) *
                          C38610 +
                      (C42939 + C42938 + C42937 + C42936) * C38609) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C38699 +
                      (C273 * C187 + C89937 * C499) * C38611 + C14066 * C38700 +
                      C14368 * C38612) *
                         C38609 +
                     (C39044 + C39045 + C39046 + C39047) * C38610) *
                        C10614 -
                    ((C41042 + C41043 + C41044 + C41045) * C38610 +
                     (C17449 * C38612 + C17103 * C38700 +
                      (C273 * C1872 + C89937 * C2292) * C38611 +
                      (C273 * C1762 + C89937 * C1986) * C38699) *
                         C38609) *
                        C10615 +
                    (((C273 * C1763 + C89937 * C1987) * C38699 +
                      (C273 * C1873 + C89937 * C2293) * C38611 +
                      C19207 * C38700 + C19459 * C38612) *
                         C38609 +
                     (C41046 + C41047 + C41048 + C41052) * C38610) *
                        C10616 -
                    (((C273 * C29623 + C89937 * C30082) * C38612 +
                      (C273 * C29516 + C89937 * C29749) * C38700 +
                      (C273 * C10681 + C89937 * C10902) * C38611 +
                      (C273 * C10619 + C89937 * C10737) * C38699) *
                         C38610 +
                     ((C273 * C23415 + C89937 * C23630) * C38612 +
                      (C273 * C23356 + C89937 * C23469) * C38700 +
                      (C273 * C10682 + C89937 * C10903) * C38611 +
                      (C273 * C10620 + C89937 * C10738) * C38699) *
                         C38609) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C9304 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C89907) *
              C822 +
          ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
            ((C49422 + C49423) * C273 + (C49728 + C49729) * C89937) * C38612) *
               C89907 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C9304) *
              C823 +
          ((((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
            ((C45690 + C45691) * C273 + (C45900 + C45901) * C89937) * C38612) *
               C9304 -
           (((C38616 * C17082 + C38610 * C17549 + C38614 * C17081 +
              C38609 * C17548) *
                 C89937 +
             (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
              C38609 * C16851) *
                 C273) *
                C38612 +
            ((C49729 + C49728) * C89937 + (C49423 + C49422) * C273) * C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C9304 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C89907) *
              C89827 * C5151 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C273 +
             (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
              C38610 * C2392) *
                 C89937) *
                C38611 +
            ((C43826 + C43827) * C273 + (C44250 + C44251) * C89937) * C38612) *
               C89907 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C273 +
             (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                 C89937) *
                C38611 +
            ((C41796 + C41797) * C273 + (C42114 + C42115) * C89937) * C38612) *
               C9304 -
           (((C38616 * C4396 + C38610 * C4844 + C38614 * C4395 +
              C38609 * C4843) *
                 C89937 +
             (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
              C38609 * C4165) *
                 C273) *
                C38612 +
            ((C38616 * C1990 + C38610 * C2398 + C38614 * C1984 +
              C38609 * C2392) *
                 C89937 +
             (C38616 * C1766 + C38610 * C1774 + C38614 * C1760 +
              C38609 * C1768) *
                 C273) *
                C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C273 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C89937) *
               C38611 +
           ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
              C10614 -
          (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
           ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
             C38609 * C2394) *
                C89937 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C273) *
               C38611) *
              C10615 +
          (((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
             C38610 * C1772) *
                C273 +
            (C38614 * C1987 + C38609 * C2395 + C38616 * C1988 +
             C38610 * C2396) *
                C89937) *
               C38611 +
           ((C46450 + C46451) * C273 + (C46756 + C46757) * C89937) * C38612) *
              C10616 -
          (((C38616 * C29749 + C38610 * C30181 + C38614 * C23469 +
             C38609 * C23682) *
                C89937 +
            (C38616 * C29516 + C38610 * C29517 + C38614 * C23356 +
             C38609 * C23358) *
                C273) *
               C38612 +
           ((C38616 * C10737 + C38610 * C10955 + C38614 * C10738 +
             C38609 * C10956) *
                C89937 +
            (C38616 * C10619 + C38610 * C10622 + C38614 * C10620 +
             C38609 * C10623) *
                C273) *
               C38611) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C9304 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C89907) *
              C822 +
          ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C273 +
             (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
              C38612 * C9149) *
                 C89937) *
                C38609 +
            ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
               C89907 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C9304) *
              C823 +
          ((((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C273 +
             (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
              C38612 * C6192) *
                 C89937) *
                C38609 +
            ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
               C9304 -
           (((C38700 * C17082 + C38612 * C17669 + C38699 * C8757 +
              C38611 * C9148) *
                 C89937 +
             (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
              C38611 * C8677) *
                 C273) *
                C38610 +
            ((C38700 * C17081 + C38612 * C17668 + C38699 * C8758 +
              C38611 * C9149) *
                 C89937 +
             (C38700 * C16849 + C38612 * C16979 + C38699 * C8592 +
              C38611 * C8678) *
                 C273) *
                C38609) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C9304 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C89907) *
              C89827 * C5151 +
          ((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
            ((C42528 + C42529) * C273 + (C43140 + C43141) * C89937) * C38610) *
               C89907 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C9304) *
              C89827 * C5152 +
          ((((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
            ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
               C9304 -
           (((C38700 * C4396 + C38612 * C4946 + C38699 * C1990 +
              C38611 * C2480) *
                 C89937 +
             (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
              C38611 * C1876) *
                 C273) *
                C38610 +
            ((C43141 + C43140) * C89937 + (C42529 + C42528) * C273) * C38609) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C273 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C89937) *
               C38609 +
           ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
              C10614 -
          (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
           ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
             C38611 * C2476) *
                C89937 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C273) *
               C38609) *
              C10615 +
          (((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
             C38612 * C6411) *
                C273 +
            (C38699 * C1987 + C38611 * C2477 + C38700 * C6491 +
             C38612 * C6882) *
                C89937) *
               C38609 +
           ((C40608 + C40609) * C273 + (C41259 + C41260) * C89937) * C38610) *
              C10616 -
          (((C38700 * C29749 + C38612 * C30283 + C38699 * C10737 +
             C38611 * C11008) *
                C89937 +
            (C38700 * C29516 + C38612 * C29623 + C38699 * C10619 +
             C38611 * C10681) *
                C273) *
               C38610 +
           ((C38700 * C23469 + C38612 * C23734 + C38699 * C10738 +
             C38611 * C11009) *
                C89937 +
            (C38700 * C23356 + C38612 * C23415 + C38699 * C10620 +
             C38611 * C10682) *
                C273) *
               C38609) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C9304 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C89907) *
              C822 +
          (((C17786 * C38611 + C17785 * C38612) * C38609 +
            (C44518 + C44519) * C38610) *
               C89907 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C9304) *
              C823 +
          (((C14651 * C38611 + C14652 * C38612) * C38609 +
            (C40374 + C40375) * C38610) *
               C9304 -
           (((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C38612 +
             C17787 * C38611) *
                C38610 +
            (C21973 * C38612 + C17785 * C38611) * C38609) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C9304 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C89907) *
              C89827 * C5151 +
          (((C41360 + C41359) * C38609 + (C43240 + C43241) * C38610) * C89907 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C9304) *
              C89827 * C5152 +
          (((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) * C9304 -
           (((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C38612 +
             C4060 * C38611) *
                C38610 +
            (C43241 + C43240) * C38609) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
            C14650 * C38612) *
               C38609 +
           (C39272 + C39273) * C38610) *
              C10614 -
          ((C41359 + C41360) * C38610 +
           (C17786 * C38612 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
               C38609) *
              C10615 +
          (((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C38611 +
            C19705 * C38612) *
               C38609 +
           (C41361 + C41367) * C38610) *
              C10616 -
          (((C711 * C29516 + C52292 + C52292 + C89937 * C30391) * C38612 +
            (C711 * C10619 + C11065 + C11065 + C89937 * C11061) * C38611) *
               C38610 +
           ((C711 * C23356 + C23789 + C23789 + C89937 * C23786) * C38612 +
            (C711 * C10620 + C11066 + C11066 + C89937 * C11062) * C38611) *
               C38609) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C90026 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C90027 +
                     ((C38613 * C1763 + C40478 + C40478 + C38609 * C1779 +
                       C38615 * C1764 + C40479 + C40479 + C38610 * C1780) *
                          C89937 * C38611 +
                      (C46142 + C46143) * C89937 * C38612) *
                         C12024) *
                        C89827 * C89990 +
                    (((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                       C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                          C89937 * C38611 +
                      (C43394 + C43395) * C89937 * C38612) *
                         C90027 -
                     ((C39421 + C39420) * C89937 * C38612 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C89937 * C38611) *
                         C90026 -
                     ((C38615 * C6323 + C40486 + C40486 + C38610 * C6329 +
                       C38613 * C6324 + C40487 + C40487 + C38609 * C6330) *
                          C89937 * C38612 +
                      (C38615 * C1765 + C40488 + C40488 + C38610 * C1781 +
                       C38613 * C1764 + C40489 + C40489 + C38609 * C1780) *
                          C89937 * C38611) *
                         C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C90026 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C90027 +
           ((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
             C38612 * C6411) *
                C38614 +
            (C38699 * C1771 + C38611 * C1881 + C38700 * C6328 +
             C38612 * C6414) *
                C38609 +
            (C40608 + C40609) * C38616 + (C40610 + C40611) * C38610) *
               C89937 * C12024) *
              C89827 * C89990 +
          (((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
            (C42528 + C42529) * C38616 + (C42530 + C42531) * C38610) *
               C89937 * C90027 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C90026 -
           ((C38700 * C6326 + C38612 * C6412 + C38699 * C1773 +
             C38611 * C1883) *
                C38610 +
            (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
             C38611 * C1875) *
                C38616 +
            (C40611 + C40610) * C38609 + (C40609 + C40608) * C38614) *
               C89937 * C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C90026 -
           ((C43668 + C43669 + C43670 + C43671) * C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C90027 +
           (((C273 * C1763 + C89937 * C1987) * C38614 +
             (C273 * C1771 + C89937 * C1995) * C38609 + C2021 * C38616 +
             C2022 * C38610) *
                C38611 +
            (C46340 + C46341 + C46342 + C46343) * C38612) *
               C12024) *
              C89827 * C89990 +
          (((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
             C2017 * C38610) *
                C38611 +
            (C43672 + C43673 + C43674 + C43675) * C38612) *
               C90027 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C90026 -
           (((C273 * C6326 + C89937 * C6492) * C38610 +
             (C273 * C6323 + C89937 * C6489) * C38616 + C40715 * C38609 +
             C40714 * C38614) *
                C38612 +
            (C2024 * C38610 + C2023 * C38616 + C2022 * C38609 +
             C2021 * C38614) *
                C38611) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C90026 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C90027 +
           ((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
             C38610 * C1772) *
                C38699 +
            (C38614 * C1873 + C38609 * C2101 + C38616 * C1874 +
             C38610 * C2102) *
                C38611 +
            (C46450 + C46451) * C38700 + (C46452 + C46453) * C38612) *
               C89937 * C12024) *
              C89827 * C89990 +
          (((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
             C38610 * C1768) *
                C38699 +
            (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
             C38610 * C2098) *
                C38611 +
            (C43826 + C43827) * C38700 + (C43828 + C43829) * C38612) *
               C89937 * C90027 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C90026 -
           ((C38616 * C6409 + C38610 * C6569 + C38614 * C6410 +
             C38609 * C6570) *
                C38612 +
            (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
             C38609 * C6327) *
                C38700 +
            (C38616 * C1875 + C38610 * C2103 + C38614 * C1874 +
             C38609 * C2102) *
                C38611 +
            (C38616 * C1765 + C38610 * C1773 + C38614 * C1764 +
             C38609 * C1772) *
                C38699) *
               C89937 * C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C90026 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C90027 +
                     ((C38935 * C1763 + C40920 + C40920 + C38611 * C2183 +
                       C38936 * C6325 + C40921 + C40921 + C38612 * C6648) *
                          C38609 +
                      (C40942 + C40943) * C38610) *
                         C89937 * C12024) *
                        C89827 * C89990 +
                    (((C40941 + C40940) * C38609 + (C42836 + C42837) * C38610) *
                         C89937 * C90027 -
                     ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                         C89937 * C90026 -
                     ((C38936 * C6323 + C40930 + C40930 + C38612 * C6646 +
                       C38935 * C1765 + C40931 + C40931 + C38611 * C2185) *
                          C38610 +
                      (C40943 + C40942) * C38609) *
                         C89937 * C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C90026 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C90027 +
                     (((C273 * C1763 + C89937 * C1987) * C38699 +
                       (C273 * C1873 + C89937 * C2293) * C38611 +
                       C19207 * C38700 + C19459 * C38612) *
                          C38609 +
                      (C41046 + C41047 + C41048 + C41052) * C38610) *
                         C12024) *
                        C89827 * C89990 +
                    (((C41045 + C41044 + C41043 + C41042) * C38609 +
                      (C42936 + C42937 + C42938 + C42939) * C38610) *
                         C90027 -
                     ((C39048 + C39049 + C39050 + C39051) * C38610 +
                      (C39047 + C39046 + C39045 + C39044) * C38609) *
                         C90026 -
                     (((C273 * C6409 + C89937 * C6726) * C38612 +
                       (C273 * C6323 + C89937 * C6489) * C38700 +
                       C2314 * C38611 + C2023 * C38699) *
                          C38610 +
                      (C41052 + C41048 + C41047 + C41046) * C38609) *
                         C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C90026 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C90027 +
           (((C38614 * C1763 + C38609 * C1771 + C38616 * C1764 +
              C38610 * C1772) *
                 C273 +
             (C38614 * C1987 + C38609 * C2395 + C38616 * C1988 +
              C38610 * C2396) *
                 C89937) *
                C38611 +
            ((C46450 + C46451) * C273 + (C46756 + C46757) * C89937) * C38612) *
               C12024) *
              C89827 * C89990 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C273 +
             (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
              C38610 * C2392) *
                 C89937) *
                C38611 +
            ((C43826 + C43827) * C273 + (C44250 + C44251) * C89937) * C38612) *
               C90027 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C90026 -
           (((C38616 * C6489 + C38610 * C6803 + C38614 * C6490 +
              C38609 * C6804) *
                 C89937 +
             (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
              C38609 * C6327) *
                 C273) *
                C38612 +
            ((C38616 * C1989 + C38610 * C2397 + C38614 * C1988 +
              C38609 * C2396) *
                 C89937 +
             (C38616 * C1765 + C38610 * C1773 + C38614 * C1764 +
              C38609 * C1772) *
                 C273) *
                C38611) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C90026 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C90027 +
           (((C38699 * C1763 + C38611 * C1873 + C38700 * C6325 +
              C38612 * C6411) *
                 C273 +
             (C38699 * C1987 + C38611 * C2477 + C38700 * C6491 +
              C38612 * C6882) *
                 C89937) *
                C38609 +
            ((C40608 + C40609) * C273 + (C41259 + C41260) * C89937) * C38610) *
               C12024) *
              C89827 * C89990 +
          ((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
            ((C42528 + C42529) * C273 + (C43140 + C43141) * C89937) * C38610) *
               C90027 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C90026 -
           (((C38700 * C6489 + C38612 * C6880 + C38699 * C1989 +
              C38611 * C2479) *
                 C89937 +
             (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
              C38611 * C1875) *
                 C273) *
                C38610 +
            ((C41260 + C41259) * C89937 + (C40609 + C40608) * C273) * C38609) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C90026 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C90027 +
           (((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C38611 +
             C19705 * C38612) *
                C38609 +
            (C41361 + C41367) * C38610) *
               C12024) *
              C89827 * C89990 +
          (((C41360 + C41359) * C38609 + (C43240 + C43241) * C38610) * C90027 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C90026 -
           (((C711 * C6323 + C6961 + C6961 + C89937 * C6957) * C38612 +
             C2612 * C38611) *
                C38610 +
            (C41367 + C41361) * C38609) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexx[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C9304 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C89907) *
                        C89827 * C5151 +
                    (((C38613 * C1761 + C40482 + C40482 + C38609 * C1777 +
                       C38615 * C1760 + C40483 + C40483 + C38610 * C1776) *
                          C89937 * C38611 +
                      (C43394 + C43395) * C89937 * C38612) *
                         C89907 -
                     ((C39421 + C39420) * C89937 * C38612 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C89937 * C38611) *
                         C9304) *
                        C89827 * C5152 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C89937 * C38611 +
                      (C41476 + C41477) * C89937 * C38612) *
                         C9304 -
                     ((C38615 * C4162 + C42418 + C42418 + C38610 * C4170 +
                       C38613 * C4161 + C42419 + C42419 + C38609 * C4169) *
                          C89937 * C38612 +
                      (C38615 * C1766 + C42420 + C42420 + C38610 * C1782 +
                       C38613 * C1760 + C42421 + C42421 + C38609 * C1776) *
                          C89937 * C38611) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C89937 * C38611 +
                      (C39416 + C39417) * C89937 * C38612) *
                         C9304 -
                     ((C43392 + C43393) * C89937 * C38612 +
                      (C38615 * C1761 + C40476 + C40476 + C38610 * C1777 +
                       C38613 * C1762 + C40477 + C40477 + C38609 * C1778) *
                          C89937 * C38611) *
                         C89907) *
                        C822 +
                    (((C43393 + C43392) * C89937 * C38611 +
                      (C49114 + C49115) * C89937 * C38612) *
                         C89907 -
                     ((C39418 + C39419) * C89937 * C38612 +
                      (C39417 + C39416) * C89937 * C38611) *
                         C9304) *
                        C823 +
                    (((C39419 + C39418) * C89937 * C38611 +
                      (C45478 + C45479) * C89937 * C38612) *
                         C9304 -
                     ((C38615 * C16850 + C49108 + C49108 + C38610 * C16854 +
                       C38613 * C16849 + C49109 + C49109 + C38609 * C16853) *
                          C89937 * C38612 +
                      (C49115 + C49114) * C89937 * C38611) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C9304 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C40607 + C40606) * C38614 + (C40605 + C40604) * C38609 +
            (C42528 + C42529) * C38616 + (C42530 + C42531) * C38610) *
               C89937 * C89907 -
           ((C38730 + C38731) * C38610 + (C38732 + C38733) * C38616 +
            (C38729 + C38728) * C38609 + (C38727 + C38726) * C38614) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C38733 + C38732) * C38614 + (C38731 + C38730) * C38609 +
            (C38734 + C38735) * C38616 + (C38736 + C38737) * C38610) *
               C89937 * C9304 -
           ((C38700 * C4166 + C38612 * C4282 + C38699 * C1774 +
             C38611 * C1884) *
                C38610 +
            (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
             C38611 * C1876) *
                C38616 +
            (C42531 + C42530) * C38609 + (C42529 + C42528) * C38614) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C38614 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C38609 +
            (C38726 + C38727) * C38616 + (C38728 + C38729) * C38610) *
               C89937 * C9304 -
           ((C40604 + C40605) * C38610 + (C40606 + C40607) * C38616 +
            (C38700 * C4163 + C38612 * C4279 + C38699 * C1770 +
             C38611 * C1880) *
                C38609 +
            (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
             C38611 * C1872) *
                C38614) *
               C89937 * C89907) *
              C822 +
          (((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
             C38612 * C8678) *
                C38614 +
            (C38699 * C4163 + C38611 * C4279 + C38700 * C8595 +
             C38612 * C8681) *
                C38609 +
            (C43534 + C43535) * C38616 + (C43536 + C43537) * C38610) *
               C89937 * C89907 -
           ((C39538 + C39539) * C38610 + (C39540 + C39541) * C38616 +
            (C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C38609 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C38614) *
               C89937 * C9304) *
              C823 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C38614 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C38609 +
            (C39542 + C39543) * C38616 + (C39544 + C39545) * C38610) *
               C89937 * C9304 -
           ((C38700 * C16852 + C38612 * C16982 + C38699 * C8594 +
             C38611 * C8680) *
                C38610 +
            (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
             C38611 * C8677) *
                C38616 +
            (C38700 * C16851 + C38612 * C16981 + C38699 * C8595 +
             C38611 * C8681) *
                C38609 +
            (C38700 * C16849 + C38612 * C16979 + C38699 * C8592 +
             C38611 * C8678) *
                C38614) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C9304 -
           ((C43668 + C43669 + C43670 + C43671) * C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C89907) *
              C89827 * C5151 +
          (((C2020 * C38614 + C2019 * C38609 + C2018 * C38616 +
             C2017 * C38610) *
                C38611 +
            (C43672 + C43673 + C43674 + C43675) * C38612) *
               C89907 -
           ((C39655 + C39654 + C39653 + C39652) * C38612 +
            (C306 * C38610 + C305 * C38616 + C304 * C38609 + C303 * C38614) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          (((C305 * C38614 + C306 * C38609 + C308 * C38616 + C307 * C38610) *
                C38611 +
            (C41686 + C41687 + C41688 + C41689) * C38612) *
               C9304 -
           (((C273 * C4166 + C89937 * C4400) * C38610 +
             (C273 * C4162 + C89937 * C4396) * C38616 + C4413 * C38609 +
             C4412 * C38614) *
                C38612 +
            (C3586 * C38610 + C3585 * C38616 + C2017 * C38609 +
             C2018 * C38614) *
                C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C38614 +
             (C273 * C112 + C89937 * C280) * C38609 + C303 * C38616 +
             C304 * C38610) *
                C38611 +
            (C39644 + C39645 + C39646 + C39647) * C38612) *
               C9304 -
           ((C43668 + C43669 + C43670 + C43671) * C38612 +
            (C2019 * C38610 + C2020 * C38616 +
             (C273 * C1770 + C89937 * C1994) * C38609 +
             (C273 * C1762 + C89937 * C1986) * C38614) *
                C38611) *
               C89907) *
              C822 +
          (((C43671 + C43670 + C43669 + C43668) * C38611 +
            (C49312 + C49313 + C49314 + C49315) * C38612) *
               C89907 -
           ((C39648 + C39649 + C39650 + C39651) * C38612 +
            (C39647 + C39646 + C39645 + C39644) * C38611) *
               C9304) *
              C823 +
          (((C39651 + C39650 + C39649 + C39648) * C38611 +
            (C45612 + C45613 + C45614 + C45615) * C38612) *
               C9304 -
           (((C273 * C16852 + C89937 * C17084) * C38610 +
             (C273 * C16850 + C89937 * C17082) * C38616 + C21497 * C38609 +
             C21496 * C38614) *
                C38612 +
            (C49315 + C49314 + C49313 + C49312) * C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C9304 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
             C38610 * C1768) *
                C38699 +
            (C38614 * C1871 + C38609 * C2099 + C38616 * C1870 +
             C38610 * C2098) *
                C38611 +
            (C43826 + C43827) * C38700 + (C43828 + C43829) * C38612) *
               C89937 * C89907 -
           ((C39801 + C39800) * C38612 + (C39799 + C39798) * C38700 +
            (C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C38611 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C38699) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C38699 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C38611 +
            (C41796 + C41797) * C38700 + (C41798 + C41799) * C38612) *
               C89937 * C9304 -
           ((C38616 * C4278 + C38610 * C4514 + C38614 * C4277 +
             C38609 * C4513) *
                C38612 +
            (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
             C38609 * C4165) *
                C38700 +
            (C38616 * C1876 + C38610 * C2104 + C38614 * C1870 +
             C38609 * C2098) *
                C38611 +
            (C38616 * C1766 + C38610 * C1774 + C38614 * C1760 +
             C38609 * C1768) *
                C38699) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C38699 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C38611 +
            (C39790 + C39791) * C38700 + (C39792 + C39793) * C38612) *
               C89937 * C9304 -
           ((C43822 + C43823) * C38612 + (C43824 + C43825) * C38700 +
            (C38616 * C1871 + C38610 * C2099 + C38614 * C1872 +
             C38609 * C2100) *
                C38611 +
            (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
             C38609 * C1770) *
                C38699) *
               C89937 * C89907) *
              C822 +
          (((C43825 + C43824) * C38699 + (C43823 + C43822) * C38611 +
            (C49422 + C49423) * C38700 + (C49424 + C49425) * C38612) *
               C89937 * C89907 -
           ((C39794 + C39795) * C38612 + (C39796 + C39797) * C38700 +
            (C39793 + C39792) * C38611 + (C39791 + C39790) * C38699) *
               C89937 * C9304) *
              C823 +
          (((C39797 + C39796) * C38699 + (C39795 + C39794) * C38611 +
            (C45690 + C45691) * C38700 + (C45692 + C45693) * C38612) *
               C89937 * C9304 -
           ((C38616 * C16980 + C38610 * C17210 + C38614 * C16979 +
             C38609 * C17209) *
                C38612 +
            (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
             C38609 * C16851) *
                C38700 +
            (C49425 + C49424) * C38611 + (C49423 + C49422) * C38699) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C9304 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    (((C40941 + C40940) * C38609 + (C42836 + C42837) * C38610) *
                         C89937 * C89907 -
                     ((C38974 + C38975) * C38610 + (C38973 + C38972) * C38609) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    (((C38975 + C38974) * C38609 + (C38976 + C38977) * C38610) *
                         C89937 * C9304 -
                     ((C38936 * C4162 + C42830 + C42830 + C38612 * C4616 +
                       C38935 * C1766 + C42831 + C42831 + C38611 * C2186) *
                          C38610 +
                      (C42837 + C42836) * C38609) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C38609 +
                      (C38972 + C38973) * C38610) *
                         C89937 * C9304 -
                     ((C40940 + C40941) * C38610 +
                      (C38936 * C4159 + C40918 + C40918 + C38612 * C4613 +
                       C38935 * C1762 + C40919 + C40919 + C38611 * C2182) *
                          C38609) *
                         C89937 * C89907) *
                        C822 +
                    (((C38935 * C4159 + C43960 + C43960 + C38611 * C4613 +
                       C38936 * C8592 + C43961 + C43961 + C38612 * C8915) *
                          C38609 +
                      (C43974 + C43975) * C38610) *
                         C89937 * C89907 -
                     ((C39932 + C39933) * C38610 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C38609) *
                         C89937 * C9304) *
                        C823 +
                    (((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C38609 +
                      (C39934 + C39935) * C38610) *
                         C89937 * C9304 -
                     ((C38936 * C16850 + C49524 + C49524 + C38612 * C17334 +
                       C38935 * C8591 + C49525 + C49525 + C38611 * C8914) *
                          C38610 +
                      (C38936 * C16849 + C49526 + C49526 + C38612 * C17333 +
                       C38935 * C8592 + C49527 + C49527 + C38611 * C8915) *
                          C38609) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C9304 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C89907) *
                        C89827 * C5151 +
                    (((C41045 + C41044 + C41043 + C41042) * C38609 +
                      (C42936 + C42937 + C42938 + C42939) * C38610) *
                         C89907 -
                     ((C39048 + C39049 + C39050 + C39051) * C38610 +
                      (C39047 + C39046 + C39045 + C39044) * C38609) *
                         C9304) *
                        C89827 * C5152 +
                    (((C39051 + C39050 + C39049 + C39048) * C38609 +
                      (C39052 + C39053 + C39054 + C39055) * C38610) *
                         C9304 -
                     (((C273 * C4278 + C89937 * C4732) * C38612 +
                       (C273 * C4162 + C89937 * C4396) * C38700 +
                       C3822 * C38611 + C3585 * C38699) *
                          C38610 +
                      (C42939 + C42938 + C42937 + C42936) * C38609) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C38699 +
                       (C273 * C187 + C89937 * C499) * C38611 +
                       C14066 * C38700 + C14368 * C38612) *
                          C38609 +
                      (C39044 + C39045 + C39046 + C39047) * C38610) *
                         C9304 -
                     ((C41042 + C41043 + C41044 + C41045) * C38610 +
                      (C17449 * C38612 + C17103 * C38700 +
                       (C273 * C1872 + C89937 * C2292) * C38611 +
                       (C273 * C1762 + C89937 * C1986) * C38699) *
                          C38609) *
                         C89907) *
                        C822 +
                    (((C17103 * C38699 + C17449 * C38611 + C17101 * C38700 +
                       C17448 * C38612) *
                          C38609 +
                      (C44106 + C44107 + C44108 + C44109) * C38610) *
                         C89907 -
                     ((C40034 + C40035 + C40036 + C40037) * C38610 +
                      (C14369 * C38612 + C14068 * C38700 + C14368 * C38611 +
                       C14066 * C38699) *
                          C38609) *
                         C9304) *
                        C823 +
                    (((C14068 * C38699 + C14369 * C38611 + C14071 * C38700 +
                       C14370 * C38612) *
                          C38609 +
                      (C40038 + C40039 + C40040 + C40041) * C38610) *
                         C9304 -
                     (((C273 * C16980 + C89937 * C17440) * C38612 +
                       (C273 * C16850 + C89937 * C17082) * C38700 +
                       C17450 * C38611 + C17104 * C38699) *
                          C38610 +
                      (C21736 * C38612 + C21496 * C38700 + C17448 * C38611 +
                       C17101 * C38699) *
                          C38609) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezx[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C9304 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C89907) *
              C89827 * C5151 +
          ((((C38614 * C1761 + C38609 * C1769 + C38616 * C1760 +
              C38610 * C1768) *
                 C273 +
             (C38614 * C1985 + C38609 * C2393 + C38616 * C1984 +
              C38610 * C2392) *
                 C89937) *
                C38611 +
            ((C43826 + C43827) * C273 + (C44250 + C44251) * C89937) * C38612) *
               C89907 -
           (((C40161 + C40160) * C89937 + (C39799 + C39798) * C273) * C38612 +
            ((C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C89937 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C273) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C273 +
             (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                 C89937) *
                C38611 +
            ((C41796 + C41797) * C273 + (C42114 + C42115) * C89937) * C38612) *
               C9304 -
           (((C38616 * C4396 + C38610 * C4844 + C38614 * C4395 +
              C38609 * C4843) *
                 C89937 +
             (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
              C38609 * C4165) *
                 C273) *
                C38612 +
            ((C38616 * C1990 + C38610 * C2398 + C38614 * C1984 +
              C38609 * C2392) *
                 C89937 +
             (C38616 * C1766 + C38610 * C1774 + C38614 * C1760 +
              C38609 * C1768) *
                 C273) *
                C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C273 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C89937) *
                C38611 +
            ((C39790 + C39791) * C273 + (C40156 + C40157) * C89937) * C38612) *
               C9304 -
           (((C44248 + C44249) * C89937 + (C43824 + C43825) * C273) * C38612 +
            ((C38616 * C1985 + C38610 * C2393 + C38614 * C1986 +
              C38609 * C2394) *
                 C89937 +
             (C38616 * C1761 + C38610 * C1769 + C38614 * C1762 +
              C38609 * C1770) *
                 C273) *
                C38611) *
               C89907) *
              C822 +
          ((((C43825 + C43824) * C273 + (C44249 + C44248) * C89937) * C38611 +
            ((C49422 + C49423) * C273 + (C49728 + C49729) * C89937) * C38612) *
               C89907 -
           (((C40158 + C40159) * C89937 + (C39796 + C39797) * C273) * C38612 +
            ((C40157 + C40156) * C89937 + (C39791 + C39790) * C273) * C38611) *
               C9304) *
              C823 +
          ((((C39797 + C39796) * C273 + (C40159 + C40158) * C89937) * C38611 +
            ((C45690 + C45691) * C273 + (C45900 + C45901) * C89937) * C38612) *
               C9304 -
           (((C38616 * C17082 + C38610 * C17549 + C38614 * C17081 +
              C38609 * C17548) *
                 C89937 +
             (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
              C38609 * C16851) *
                 C273) *
                C38612 +
            ((C49729 + C49728) * C89937 + (C49423 + C49422) * C273) * C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C9304 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C89907) *
              C89827 * C5151 +
          ((((C40607 + C40606) * C273 + (C41258 + C41257) * C89937) * C38609 +
            ((C42528 + C42529) * C273 + (C43140 + C43141) * C89937) * C38610) *
               C89907 -
           (((C39202 + C39203) * C89937 + (C38732 + C38733) * C273) * C38610 +
            ((C39201 + C39200) * C89937 + (C38727 + C38726) * C273) * C38609) *
               C9304) *
              C89827 * C5152 +
          ((((C38733 + C38732) * C273 + (C39203 + C39202) * C89937) * C38609 +
            ((C38734 + C38735) * C273 + (C39204 + C39205) * C89937) * C38610) *
               C9304 -
           (((C38700 * C4396 + C38612 * C4946 + C38699 * C1990 +
              C38611 * C2480) *
                 C89937 +
             (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
              C38611 * C1876) *
                 C273) *
                C38610 +
            ((C43141 + C43140) * C89937 + (C42529 + C42528) * C273) * C38609) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C273 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C89937) *
                C38609 +
            ((C38726 + C38727) * C273 + (C39200 + C39201) * C89937) * C38610) *
               C9304 -
           (((C41257 + C41258) * C89937 + (C40606 + C40607) * C273) * C38610 +
            ((C38700 * C4393 + C38612 * C4943 + C38699 * C1986 +
              C38611 * C2476) *
                 C89937 +
             (C38700 * C4159 + C38612 * C4275 + C38699 * C1762 +
              C38611 * C1872) *
                 C273) *
                C38609) *
               C89907) *
              C822 +
          ((((C38699 * C4159 + C38611 * C4275 + C38700 * C8592 +
              C38612 * C8678) *
                 C273 +
             (C38699 * C4393 + C38611 * C4943 + C38700 * C8758 +
              C38612 * C9149) *
                 C89937) *
                C38609 +
            ((C43534 + C43535) * C273 + (C44386 + C44387) * C89937) * C38610) *
               C89907 -
           (((C40270 + C40271) * C89937 + (C39540 + C39541) * C273) * C38610 +
            ((C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C89937 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C273) *
                C38609) *
               C9304) *
              C823 +
          ((((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C273 +
             (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
              C38612 * C6192) *
                 C89937) *
                C38609 +
            ((C39542 + C39543) * C273 + (C40272 + C40273) * C89937) * C38610) *
               C9304 -
           (((C38700 * C17082 + C38612 * C17669 + C38699 * C8757 +
              C38611 * C9148) *
                 C89937 +
             (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
              C38611 * C8677) *
                 C273) *
                C38610 +
            ((C38700 * C17081 + C38612 * C17668 + C38699 * C8758 +
              C38611 * C9149) *
                 C89937 +
             (C38700 * C16849 + C38612 * C16979 + C38699 * C8592 +
              C38611 * C8678) *
                 C273) *
                C38609) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C9304 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C89907) *
              C89827 * C5151 +
          (((C41360 + C41359) * C38609 + (C43240 + C43241) * C38610) * C89907 -
           ((C39274 + C39275) * C38610 + (C39273 + C39272) * C38609) * C9304) *
              C89827 * C5152 +
          (((C39275 + C39274) * C38609 + (C39276 + C39277) * C38610) * C9304 -
           (((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C38612 +
             C4060 * C38611) *
                C38610 +
            (C43241 + C43240) * C38609) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C38611 +
             C14650 * C38612) *
                C38609 +
            (C39272 + C39273) * C38610) *
               C9304 -
           ((C41359 + C41360) * C38610 +
            (C17786 * C38612 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C38611) *
                C38609) *
               C89907) *
              C822 +
          (((C17786 * C38611 + C17785 * C38612) * C38609 +
            (C44518 + C44519) * C38610) *
               C89907 -
           ((C40372 + C40373) * C38610 +
            (C14651 * C38612 + C14650 * C38611) * C38609) *
               C9304) *
              C823 +
          (((C14651 * C38611 + C14652 * C38612) * C38609 +
            (C40374 + C40375) * C38610) *
               C9304 -
           (((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C38612 +
             C17787 * C38611) *
                C38610 +
            (C21973 * C38612 + C17785 * C38611) * C38609) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89843 * C89998 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
               C89879) *
              C90022 +
          (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89843 *
               C89879 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C89843 * C89998) *
              C90023 +
          ((((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
             C28794 * C55293) *
                C38611 +
            (C74349 + C74355) * C38612) *
               C89843 * C89998 -
           (((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C55293 +
             C15456 * C55292) *
                C38612 +
            (C74355 + C74349) * C38611) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C89843 * C89998 -
           (((C38700 * C8595 + C38612 * C8681 + C38699 * C4163 +
              C38611 * C4279) *
                 C89783 +
             (C38700 * C8592 + C38612 * C8678 + C38699 * C4159 +
              C38611 * C4275) *
                 C13338) *
                C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C89843 * C89879) *
              C90022 +
          ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) * C55292 +
            ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                C55293) *
               C89843 * C89879 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C89843 * C89998) *
              C90023 +
          ((((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
            ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) *
                C55293) *
               C89843 * C89998 -
           (((C38700 * C8593 + C38612 * C8679 + C38699 * C4165 +
              C38611 * C4281) *
                 C89783 +
             (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
              C38611 * C4277) *
                 C13338) *
                C55293 +
            ((C41587 + C41586) * C89783 + (C41585 + C41584) * C13338) *
                C55292) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89843 * C89998 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C89843 * C89879) *
              C90022 +
          ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) * C38611 +
            ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                C38612) *
               C89843 * C89879 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C89843 * C89998) *
              C90023 +
          ((((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
            ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) *
                C38612) *
               C89843 * C89998 -
           (((C55429 * C8593 + C55293 * C8759 + C55428 * C840 +
              C55292 * C1064) *
                 C89783 +
             (C55429 * C8590 + C55293 * C8756 + C55428 * C832 +
              C55292 * C1056) *
                 C13338) *
                C38612 +
            ((C58308 + C58307) * C89783 + (C58306 + C58305) * C13338) *
                C38611) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C89843 * C89998 -
                     ((C17228 * C38612 + C17229 * C38700 + C17230 * C38611 +
                       C17231 * C38699) *
                          C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C89843 * C89879) *
                        C90022 +
                    (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                       C14193 * C38612) *
                          C55292 +
                      (C17232 * C38699 + C17233 * C38611 + C17234 * C38700 +
                       C17235 * C38612) *
                          C55293) *
                         C89843 * C89879 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C89843 * C89998) *
                        C90023 +
                    ((((C13338 * C108 + C89783 * C114) * C38699 +
                       (C13338 * C189 + C89783 * C362) * C38611 +
                       C15693 * C38700 + C15694 * C38612) *
                          C55292 +
                      (C29030 * C38699 + C29031 * C38611 + C74654 * C38700 +
                       C74655 * C38612) *
                          C55293) *
                         C89843 * C89998 -
                     (((C13338 * C8676 + C89783 * C8836) * C38612 +
                       (C13338 * C8590 + C89783 * C8593) * C38700 +
                       C74655 * C38611 + C74654 * C38699) *
                          C55293 +
                      (C15696 * C38612 + C15695 * C38700 + C15694 * C38611 +
                       C15693 * C38699) *
                          C55292) *
                         C89843 * C89879) *
                        C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C89843 * C89998 -
                     ((C38936 * C8592 + C43961 + C43961 + C38612 * C8915 +
                       C38935 * C4159 + C43960 + C43960 + C38611 * C4613) *
                          C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C89843 * C89879) *
                        C90022 +
                    (((C39933 + C39932) * C89783 * C55292 +
                      (C43974 + C43975) * C89783 * C55293) *
                         C89843 * C89879 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C89843 * C89998) *
                        C90023 +
                    (((C38975 + C38974) * C89783 * C55292 +
                      (C42836 + C42837) * C89783 * C55293) *
                         C89843 * C89998 -
                     ((C38936 * C8590 + C43968 + C43968 + C38612 * C8913 +
                       C38935 * C4161 + C43969 + C43969 + C38611 * C4615) *
                          C89783 * C55293 +
                      (C41909 + C41908) * C89783 * C55292) *
                         C89843 * C89879) *
                        C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89843 * C89998 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C89843 * C89879) *
              C90022 +
          (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
            (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
               C89783 * C89843 * C89879 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C89843 * C89998) *
              C90023 +
          (((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
            (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
               C89783 * C89843 * C89998 -
           ((C55429 * C8676 + C55293 * C8993 + C55428 * C942 + C55292 * C1362) *
                C38612 +
            (C55429 * C8590 + C55293 * C8756 + C55428 * C832 + C55292 * C1056) *
                C38700 +
            (C58608 + C58607) * C38611 + (C58306 + C58305) * C38699) *
               C89783 * C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89843 * C89998 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C89843 * C89879) *
                        C90022 +
                    (((C73073 + C73074 + C73075 + C73076) * C38611 +
                      (C73077 + C73078 + C73079 + C73080) * C38612) *
                         C89843 * C89879 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C89843 * C89998) *
                        C90023 +
                    ((((C13338 * C108 + C89783 * C114) * C55428 +
                       (C13338 * C276 + C89783 * C579) * C55292 +
                       C29030 * C55429 + C29266 * C55293) *
                          C38611 +
                      (C74950 + C74951 + C74952 + C74956) * C38612) *
                         C89843 * C89998 -
                     (((C13338 * C8756 + C89783 * C9070) * C55293 +
                       (C13338 * C8590 + C89783 * C8593) * C55429 +
                       C15929 * C55292 + C15695 * C55428) *
                          C38612 +
                      (C74956 + C74952 + C74951 + C74950) * C38611) *
                         C89843 * C89879) *
                        C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C89843 * C89998 -
           ((C38700 * C8758 + C38612 * C9149 + C38699 * C4393 +
             C38611 * C4943) *
                C55293 +
            (C38700 * C8592 + C38612 * C8678 + C38699 * C4159 +
             C38611 * C4275) *
                C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C89843 * C89879) *
              C90022 +
          (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
            (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
               C89783 * C89843 * C89879 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C89843 * C89998) *
              C90023 +
          (((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
            (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
               C89783 * C89843 * C89998 -
           ((C38700 * C8756 + C38612 * C9147 + C38699 * C4395 +
             C38611 * C4945) *
                C55293 +
            (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
             C38611 * C4277) *
                C55429 +
            (C42219 + C42218) * C55292 + (C41585 + C41584) * C55428) *
               C89783 * C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89843 * C89998 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C89843 * C89879) *
                        C90022 +
                    (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) *
                         C89783 * C89843 * C89879 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C89843 * C89998) *
                        C90023 +
                    (((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                         C89783 * C89843 * C89998 -
                     ((C55893 * C8590 + C56893 + C56893 + C55293 * C9224 +
                       C55892 * C832 + C56894 + C56894 + C55292 * C1648) *
                          C38612 +
                      (C58918 + C58917) * C38611) *
                         C89783 * C89843 * C89879) *
                        C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
              C27265 * C55293) *
                 C38611 +
             (C72433 + C72434) * C38612) *
                C89999 -
            ((C76169 + C76170) * C38612 +
             (C27266 * C55293 + C27265 * C55292) * C38611) *
                C89907) *
               C89998 +
           (((C76170 + C76169) * C38611 +
             (C16874 * C55292 + C19044 * C55293) * C38612) *
                C89907 -
            ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) *
                C89999) *
               C89879) *
              C825 +
          ((((C27268 * C55292 + C27269 * C55293) * C38611 +
             (C76171 + C76172) * C38612) *
                C89907 -
            ((C72438 + C72437) * C38612 +
             (C27268 * C55293 +
              (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                 C38611) *
                C89999) *
               C89998 +
           (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89999 -
            (((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C55293 +
              C16877 * C55292) *
                 C38612 +
             (C76172 + C76171) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                  C13338 +
              (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                  C89783) *
                 C55292 +
             ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                 C55293) *
                C89999 -
            (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) *
                 C55293 +
             ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                 C55292) *
                C89907) *
               C89998 +
           ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) *
                 C55292 +
             ((C38699 * C6325 + C38611 * C6411 + C38700 * C14727 +
               C38612 * C14819) *
                  C13338 +
              (C38699 * C6328 + C38611 * C6414 + C38700 * C14729 +
               C38612 * C14821) *
                  C89783) *
                 C55293) *
                C89907 -
            (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) *
                 C55293 +
             ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                  C89783 +
              (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                  C13338) *
                 C55292) *
                C89999) *
               C89879) *
              C825 +
          (((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) *
                 C55292 +
             ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                 C55293) *
                C89907 -
            (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) *
                 C55293 +
             ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                 C55292) *
                C89999) *
               C89998 +
           ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) *
                 C55292 +
             ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                 C55293) *
                C89999 -
            (((C38700 * C14730 + C38612 * C14822 + C38699 * C6327 +
               C38611 * C6413) *
                  C89783 +
              (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
               C38611 * C6410) *
                  C13338) *
                 C55293 +
             ((C43537 + C43536) * C89783 + (C43535 + C43534) * C13338) *
                 C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C55428 * C106 + C55292 * C274 + C55429 * C1762 +
               C55293 * C1986) *
                  C13338 +
              (C55428 * C112 + C55292 * C280 + C55429 * C1770 +
               C55293 * C1994) *
                  C89783) *
                 C38611 +
             ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                 C38612) *
                C89999 -
            (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) *
                 C38612 +
             ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
               C55292 * C1994) *
                  C89783 +
              (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
               C55292 * C1986) *
                  C13338) *
                 C38611) *
                C89907) *
               C89998 +
           ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) *
                 C38611 +
             ((C55428 * C8592 + C55292 * C8758 + C55429 * C14727 +
               C55293 * C14897) *
                  C13338 +
              (C55428 * C8595 + C55292 * C8761 + C55429 * C14729 +
               C55293 * C14899) *
                  C89783) *
                 C38612) *
                C89907 -
            (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) *
                 C38612 +
             ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                 C38611) *
                C89999) *
               C89879) *
              C825 +
          (((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) *
                 C38611 +
             ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                 C38612) *
                C89907 -
            (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) *
                 C38612 +
             ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                 C38611) *
                C89999) *
               C89998 +
           ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) *
                 C38611 +
             ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                 C38612) *
                C89999 -
            (((C55429 * C14730 + C55293 * C14900 + C55428 * C8594 +
               C55292 * C8760) *
                  C89783 +
              (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
               C55292 * C8757) *
                  C13338) *
                 C38612 +
             ((C60280 + C60279) * C89783 + (C60278 + C60277) * C13338) *
                 C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C13338 * C106 + C89783 * C112) * C38699 +
                        (C13338 * C187 + C89783 * C360) * C38611 +
                        C14184 * C38700 + C14185 * C38612) *
                           C55292 +
                       (C73713 + C73714 + C73715 + C73716) * C55293) *
                          C89999 -
                      ((C73717 + C73718 + C73719 + C73720) * C55293 +
                       (C73716 + C73715 + C73714 + C73713) * C55292) *
                          C89907) *
                         C89998 +
                     (((C76587 + C76588 + C76589 + C76590) * C55292 +
                       (C19298 * C38699 + C19299 * C38611 + C19300 * C38700 +
                        C19301 * C38612) *
                           C55293) *
                          C89907 -
                      ((C76590 + C76589 + C76588 + C76587) * C55293 +
                       (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                        C14184 * C38699) *
                           C55292) *
                          C89999) *
                         C89879) *
                        C825 +
                    ((((C73721 + C73722 + C73723 + C73724) * C55292 +
                       (C73725 + C73726 + C73727 + C73728) * C55293) *
                          C89907 -
                      ((C73724 + C73723 + C73722 + C73721) * C55293 +
                       (C14191 * C38612 + C14190 * C38700 +
                        (C13338 * C188 + C89783 * C361) * C38611 +
                        (C13338 * C107 + C89783 * C113) * C38699) *
                           C55292) *
                          C89999) *
                         C89998 +
                     (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                        C14193 * C38612) *
                           C55292 +
                       (C76591 + C76592 + C76593 + C76594) * C55293) *
                          C89999 -
                      (((C13338 * C14820 + C89783 * C14976) * C38612 +
                        (C13338 * C14728 + C89783 * C14730) * C38700 +
                        C29862 * C38611 + C29861 * C38699) *
                           C55293 +
                       (C76594 + C76593 + C76592 + C76591) * C55292) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                        C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                           C89783 * C55292 +
                       (C73843 + C73844) * C89783 * C55293) *
                          C89999 -
                      ((C73845 + C73846) * C89783 * C55293 +
                       (C73844 + C73843) * C89783 * C55292) *
                          C89907) *
                         C89998 +
                     (((C76733 + C76734) * C89783 * C55292 +
                       (C38935 * C6325 + C46555 + C46555 + C38611 * C6648 +
                        C38936 * C14727 + C46554 + C46554 + C38612 * C15051) *
                           C89783 * C55293) *
                          C89907 -
                      ((C76734 + C76733) * C89783 * C55293 +
                       (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                        C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                           C89783 * C55292) *
                          C89999) *
                         C89879) *
                        C825 +
                    ((((C40941 + C40940) * C89783 * C55292 +
                       (C40942 + C40943) * C89783 * C55293) *
                          C89907 -
                      ((C40940 + C40941) * C89783 * C55293 +
                       (C38973 + C38972) * C89783 * C55292) *
                          C89999) *
                         C89998 +
                     (((C39933 + C39932) * C89783 * C55292 +
                       (C43974 + C43975) * C89783 * C55293) *
                          C89999 -
                      ((C38936 * C14728 + C46552 + C46552 + C38612 * C15052 +
                        C38935 * C6324 + C46553 + C46553 + C38611 * C6647) *
                           C89783 * C55293 +
                       (C43975 + C43974) * C89783 * C55292) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C38699 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C38611 +
             (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
                C89783 * C89999 -
            ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
             (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C38611 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C38699) *
                C89783 * C89907) *
               C89998 +
           (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
             (C55428 * C8592 + C55292 * C8758 + C55429 * C14727 +
              C55293 * C14897) *
                 C38700 +
             (C55428 * C8678 + C55292 * C8995 + C55429 * C14819 +
              C55293 * C15139) *
                 C38612) *
                C89783 * C89907 -
            ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
             (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
                C89783 * C89999) *
               C89879) *
              C825 +
          ((((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
             (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
                C89783 * C89907 -
            ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
             (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
                C89783 * C89999) *
               C89998 +
           (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
             (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
                C89783 * C89999 -
            ((C55429 * C14820 + C55293 * C15140 + C55428 * C8677 +
              C55292 * C8994) *
                 C38612 +
             (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
              C55292 * C8757) *
                 C38700 +
             (C60680 + C60679) * C38611 + (C60278 + C60277) * C38699) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C13338 * C106 + C89783 * C112) * C55428 +
                        (C13338 * C274 + C89783 * C577) * C55292 +
                        C27565 * C55429 + C27859 * C55293) *
                           C38611 +
                       (C73065 + C73066 + C73067 + C73068) * C38612) *
                          C89999 -
                      ((C77001 + C77002 + C77003 + C77004) * C38612 +
                       (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                        C27565 * C55428) *
                           C38611) *
                          C89907) *
                         C89998 +
                     (((C77004 + C77003 + C77002 + C77001) * C38611 +
                       (C17229 * C55428 + C17563 * C55292 + C19300 * C55429 +
                        C19543 * C55293) *
                           C38612) *
                          C89907 -
                      ((C73069 + C73070 + C73071 + C73072) * C38612 +
                       (C73068 + C73067 + C73066 + C73065) * C38611) *
                          C89999) *
                         C89879) *
                        C825 +
                    ((((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                        C27863 * C55293) *
                           C38611 +
                       (C77005 + C77006 + C77007 + C77008) * C38612) *
                          C89907 -
                      ((C73076 + C73075 + C73074 + C73073) * C38612 +
                       (C27862 * C55293 + C27571 * C55429 +
                        (C13338 * C275 + C89783 * C578) * C55292 +
                        (C13338 * C107 + C89783 * C113) * C55428) *
                           C38611) *
                          C89999) *
                         C89998 +
                     (((C73073 + C73074 + C73075 + C73076) * C38611 +
                       (C73077 + C73078 + C73079 + C73080) * C38612) *
                          C89999 -
                      (((C13338 * C14898 + C89783 * C15216) * C55293 +
                        (C13338 * C14728 + C89783 * C14730) * C55429 +
                        C17566 * C55292 + C17234 * C55428) *
                           C38612 +
                       (C77008 + C77007 + C77006 + C77005) * C38611) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C55428 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C55292 +
             (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
                C89783 * C89999 -
            ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
             (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
                C89783 * C89907) *
               C89998 +
           (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
             (C38699 * C6325 + C38611 * C6411 + C38700 * C14727 +
              C38612 * C14819) *
                 C55429 +
             (C38699 * C6491 + C38611 * C6882 + C38700 * C14897 +
              C38612 * C15291) *
                 C55293) *
                C89783 * C89907 -
            ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
             (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C55292 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C55428) *
                C89783 * C89999) *
               C89879) *
              C825 +
          ((((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
             (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
                C89783 * C89907 -
            ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
             (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
                C89783 * C89999) *
               C89998 +
           (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
             (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
                C89783 * C89999 -
            ((C38700 * C14898 + C38612 * C15292 + C38699 * C6490 +
              C38611 * C6881) *
                 C55293 +
             (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
              C38611 * C6410) *
                 C55429 +
             (C44387 + C44386) * C55292 + (C43535 + C43534) * C55428) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55892 * C106 + C55895 + C55895 + C55292 * C712 + C55893 * C1762 +
              C55896 + C55896 + C55293 * C2578) *
                 C38611 +
             (C73293 + C73294) * C38612) *
                C89783 * C89999 -
            ((C77283 + C77284) * C38612 +
             (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
              C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                 C38611) *
                C89783 * C89907) *
               C89998 +
           (((C77284 + C77283) * C38611 +
             (C55892 * C8592 + C66407 + C66407 + C55292 * C9226 +
              C55893 * C14727 + C66406 + C66406 + C55293 * C15367) *
                 C38612) *
                C89783 * C89907 -
            ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) * C89783 *
                C89999) *
               C89879) *
              C825 +
          ((((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) * C89783 *
                C89907 -
            ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) * C89783 *
                C89999) *
               C89998 +
           (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) * C89783 *
                C89999 -
            ((C55893 * C14728 + C66404 + C66404 + C55293 * C15368 +
              C55892 * C8591 + C66405 + C66405 + C55292 * C9225) *
                 C38612 +
             (C61090 + C61089) * C38611) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89843 * C822 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
               C823 +
           ((C72436 + C72435) * C38611 +
            (C13880 * C55292 + C21337 * C55293) * C38612) *
               C89843 * C824) *
              C825 +
          (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89843 *
               C823 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C89843 * C822 -
           (((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C55293 +
             C13883 * C55292) *
                C38612 +
            (C72440 + C72439) * C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
            C27265 * C55293) *
               C38611 +
           (C13878 * C55292 + C16875 * C55293) * C38612) *
              C89843 * C89827 * C96 -
          ((C16876 * C55293 + C13881 * C55292) * C38612 +
           (C27268 * C55293 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
               C38611) *
              C89843 * C89827 * C97 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
            C28794 * C55293) *
               C38611 +
           (C15455 * C55292 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C55293) *
               C38612) *
              C89843 * C89827 * C98 -
          (((C13337 * C4162 + C71806 + C71806 + C89783 * C4170) * C55293 +
            (C13337 * C833 + C13350 + C13350 + C89783 * C849) * C55292) *
               C38612 +
           ((C13337 * C1766 + C26059 + C26059 + C89783 * C1782) * C55293 +
            (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C55292) *
               C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C1757 -
           ((C19043 * C55293 + C16875 * C55292) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C1758 +
           ((C27266 * C55292 + C27267 * C55293) * C38611 +
            (C19043 * C55292 + C31602 * C55293) * C38612) *
               C1759) *
              C89827 * C825 +
          (((C27268 * C55292 + C27269 * C55293) * C38611 +
            (C16876 * C55292 + C29525 * C55293) * C38612) *
               C1758 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C1757 -
           (((C13337 * C29516 + C29522 + C29522 + C89783 * C29518) * C55293 +
             C29525 * C55292) *
                C38612 +
            (C27270 * C55293 + C27269 * C55292) * C38611) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C38699 * C1762 + C38611 * C1872 + C38700 * C4159 +
              C38612 * C4275) *
                 C13338 +
             (C38699 * C1770 + C38611 * C1880 + C38700 * C4163 +
              C38612 * C4279) *
                 C89783) *
                C55293) *
               C89843 * C822 -
           (((C38700 * C8595 + C38612 * C8681 + C38699 * C4163 +
              C38611 * C4279) *
                 C89783 +
             (C38700 * C8592 + C38612 * C8678 + C38699 * C4159 +
              C38611 * C4275) *
                 C13338) *
                C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C89843 * C823 +
           (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C13338 +
             (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                 C89783) *
                C55292 +
            ((C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
              C38612 * C16979) *
                 C13338 +
             (C38699 * C8595 + C38611 * C8681 + C38700 * C16851 +
              C38612 * C16981) *
                 C89783) *
                C55293) *
               C89843 * C824) *
              C825 +
          ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) * C55292 +
            ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                C55293) *
               C89843 * C823 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C89843 * C822 -
           (((C38700 * C16852 + C38612 * C16982 + C38699 * C8594 +
              C38611 * C8680) *
                 C89783 +
             (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
              C38611 * C8677) *
                 C13338) *
                C55293 +
            ((C39545 + C39544) * C89783 + (C39543 + C39542) * C13338) *
                C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C13338 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C89783) *
               C55292 +
           ((C38699 * C1762 + C38611 * C1872 + C38700 * C4159 +
             C38612 * C4275) *
                C13338 +
            (C38699 * C1770 + C38611 * C1880 + C38700 * C4163 +
             C38612 * C4279) *
                C89783) *
               C55293) *
              C89843 * C89827 * C96 -
          (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
           ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) * C55292) *
              C89843 * C89827 * C97 +
          (((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
           ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) * C55293) *
              C89843 * C89827 * C98 -
          (((C38700 * C4166 + C38612 * C4282 + C38699 * C1774 +
             C38611 * C1884) *
                C89783 +
            (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
             C38611 * C1876) *
                C13338) *
               C55293 +
           ((C38737 + C38736) * C89783 + (C38735 + C38734) * C13338) * C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C1757 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C1758 +
           (((C73516 + C73515) * C13338 + (C73514 + C73513) * C89783) * C55292 +
            ((C38699 * C10620 + C38611 * C10682 + C38700 * C23356 +
              C38612 * C23415) *
                 C13338 +
             (C38699 * C10623 + C38611 * C10685 + C38700 * C23358 +
              C38612 * C23417) *
                 C89783) *
                C55293) *
               C1759) *
              C89827 * C825 +
          ((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) * C55292 +
            ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                C55293) *
               C1758 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C1757 -
           (((C38700 * C29517 + C38612 * C29624 + C38699 * C10622 +
              C38611 * C10684) *
                 C89783 +
             (C38700 * C29516 + C38612 * C29623 + C38699 * C10619 +
              C38611 * C10681) *
                 C13338) *
                C55293 +
            ((C40611 + C40610) * C89783 + (C40609 + C40608) * C13338) *
                C55292) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89843 * C822 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C89843 * C823 +
           (((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
            ((C55428 * C5803 + C55292 * C5921 + C55429 * C16849 +
              C55293 * C17081) *
                 C13338 +
             (C55428 * C5806 + C55292 * C5924 + C55429 * C16851 +
              C55293 * C17083) *
                 C89783) *
                C38612) *
               C89843 * C824) *
              C825 +
          ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) * C38611 +
            ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                C38612) *
               C89843 * C823 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C89843 * C822 -
           (((C55429 * C16852 + C55293 * C17084 + C55428 * C5805 +
              C55292 * C5923) *
                 C89783 +
             (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
              C55292 * C5920) *
                 C13338) *
                C38612 +
            ((C56258 + C56257) * C89783 + (C56256 + C56255) * C13338) *
                C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C13338 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C89783) *
               C38611 +
           ((C55428 * C829 + C55292 * C1053 + C55429 * C4159 + C55293 * C4393) *
                C13338 +
            (C55428 * C837 + C55292 * C1061 + C55429 * C4163 + C55293 * C4397) *
                C89783) *
               C38612) *
              C89843 * C89827 * C96 -
          (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
           ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) * C38611) *
              C89843 * C89827 * C97 +
          (((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
           ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) * C38612) *
              C89843 * C89827 * C98 -
          (((C55429 * C4166 + C55293 * C4400 + C55428 * C841 + C55292 * C1065) *
                C89783 +
            (C55429 * C4162 + C55293 * C4396 + C55428 * C833 + C55292 * C1057) *
                C13338) *
               C38612 +
           ((C55466 + C55465) * C89783 + (C55464 + C55463) * C13338) * C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C1757 -
           (((C55429 * C6328 + C55293 * C6494 + C55428 * C4163 +
              C55292 * C4397) *
                 C89783 +
             (C55429 * C6325 + C55293 * C6491 + C55428 * C4159 +
              C55292 * C4393) *
                 C13338) *
                C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C1758 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C13338 +
             (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
              C55293 * C10741) *
                 C89783) *
                C38611 +
            ((C55428 * C6325 + C55292 * C6491 + C55429 * C23356 +
              C55293 * C23469) *
                 C13338 +
             (C55428 * C6328 + C55292 * C6494 + C55429 * C23358 +
              C55293 * C23471) *
                 C89783) *
                C38612) *
               C1759) *
              C89827 * C825 +
          ((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) * C38611 +
            ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                C38612) *
               C1758 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C1757 -
           (((C55429 * C29517 + C55293 * C29750 + C55428 * C6327 +
              C55292 * C6493) *
                 C89783 +
             (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
              C55292 * C6490) *
                 C13338) *
                C38612 +
            ((C57282 + C57281) * C89783 + (C57280 + C57279) * C13338) *
                C38611) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C27565 * C38699 + C27566 * C38611 + C17231 * C38700 +
                       C17230 * C38612) *
                          C55293) *
                         C89843 * C822 -
                     ((C17228 * C38612 + C17229 * C38700 + C17230 * C38611 +
                       C17231 * C38699) *
                          C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C89843 * C823 +
                     ((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                       C14188 * C38612) *
                          C55292 +
                      (C17229 * C38699 + C17228 * C38611 + C21579 * C38700 +
                       C21580 * C38612) *
                          C55293) *
                         C89843 * C824) *
                        C825 +
                    (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                       C14193 * C38612) *
                          C55292 +
                      (C17232 * C38699 + C17233 * C38611 + C17234 * C38700 +
                       C17235 * C38612) *
                          C55293) *
                         C89843 * C823 -
                     ((C17233 * C38612 + C17232 * C38700 + C27572 * C38611 +
                       C27571 * C38699) *
                          C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C89843 * C822 -
                     (((C13338 * C16980 + C89783 * C17210) * C38612 +
                       (C13338 * C16850 + C89783 * C16852) * C38700 +
                       C17235 * C38611 + C17234 * C38699) *
                          C55293 +
                      (C14195 * C38612 + C14194 * C38700 + C14193 * C38611 +
                       C14192 * C38699) *
                          C55292) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C38699 +
                      (C13338 * C187 + C89783 * C360) * C38611 +
                      C14184 * C38700 + C14185 * C38612) *
                         C55292 +
                     (C27565 * C38699 + C27566 * C38611 + C17231 * C38700 +
                      C17230 * C38612) *
                         C55293) *
                        C89843 * C89827 * C96 -
                    ((C17233 * C38612 + C17232 * C38700 + C27572 * C38611 +
                      C27571 * C38699) *
                         C55293 +
                     (C14191 * C38612 + C14190 * C38700 +
                      (C13338 * C188 + C89783 * C361) * C38611 +
                      (C13338 * C107 + C89783 * C113) * C38699) *
                         C55292) *
                        C89843 * C89827 * C97 +
                    (((C13338 * C108 + C89783 * C114) * C38699 +
                      (C13338 * C189 + C89783 * C362) * C38611 +
                      C15693 * C38700 + C15694 * C38612) *
                         C55292 +
                     (C29030 * C38699 + C29031 * C38611 +
                      (C13338 * C4161 + C89783 * C4165) * C38700 +
                      (C13338 * C4277 + C89783 * C4513) * C38612) *
                         C55293) *
                        C89843 * C89827 * C98 -
                    (((C13338 * C4278 + C89783 * C4514) * C38612 +
                      (C13338 * C4162 + C89783 * C4166) * C38700 +
                      (C13338 * C1876 + C89783 * C2104) * C38611 +
                      (C13338 * C1766 + C89783 * C1774) * C38699) *
                         C55293 +
                     ((C13338 * C943 + C89783 * C1171) * C38612 +
                      (C13338 * C833 + C89783 * C841) * C38700 +
                      (C13338 * C190 + C89783 * C363) * C38611 +
                      (C13338 * C109 + C89783 * C115) * C38699) *
                         C55292) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C1757 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C1758 +
                     ((C73720 + C73719 + C73718 + C73717) * C55292 +
                      (C27570 * C38699 + C27569 * C38611 + C31844 * C38700 +
                       C31845 * C38612) *
                          C55293) *
                         C1759) *
                        C89827 * C825 +
                    (((C73721 + C73722 + C73723 + C73724) * C55292 +
                      (C73725 + C73726 + C73727 + C73728) * C55293) *
                         C1758 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C1757 -
                     (((C13338 * C29623 + C89783 * C29849) * C38612 +
                       (C13338 * C29516 + C89783 * C29517) * C38700 +
                       C27576 * C38611 + C27575 * C38699) *
                          C55293 +
                      (C73728 + C73727 + C73726 + C73725) * C55292) *
                         C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C38935 * C1762 + C40919 + C40919 + C38611 * C2182 +
                       C38936 * C4159 + C40918 + C40918 + C38612 * C4613) *
                          C89783 * C55293) *
                         C89843 * C822 -
                     ((C38936 * C8592 + C43961 + C43961 + C38612 * C8915 +
                       C38935 * C4159 + C43960 + C43960 + C38611 * C4613) *
                          C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C89843 * C823 +
                     ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C89783 * C55292 +
                      (C38935 * C8592 + C49527 + C49527 + C38611 * C8915 +
                       C38936 * C16849 + C49526 + C49526 + C38612 * C17333) *
                          C89783 * C55293) *
                         C89843 * C824) *
                        C825 +
                    (((C39933 + C39932) * C89783 * C55292 +
                      (C43974 + C43975) * C89783 * C55293) *
                         C89843 * C823 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C89843 * C822 -
                     ((C38936 * C16850 + C49524 + C49524 + C38612 * C17334 +
                       C38935 * C8591 + C49525 + C49525 + C38611 * C8914) *
                          C89783 * C55293 +
                      (C39935 + C39934) * C89783 * C55292) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C89783 * C55292 +
                     (C38935 * C1762 + C40919 + C40919 + C38611 * C2182 +
                      C38936 * C4159 + C40918 + C40918 + C38612 * C4613) *
                         C89783 * C55293) *
                        C89843 * C89827 * C96 -
                    ((C40940 + C40941) * C89783 * C55293 +
                     (C38973 + C38972) * C89783 * C55292) *
                        C89843 * C89827 * C97 +
                    ((C38975 + C38974) * C89783 * C55292 +
                     (C42836 + C42837) * C89783 * C55293) *
                        C89843 * C89827 * C98 -
                    ((C38936 * C4162 + C42830 + C42830 + C38612 * C4616 +
                      C38935 * C1766 + C42831 + C42831 + C38611 * C2186) *
                         C89783 * C55293 +
                     (C38977 + C38976) * C89783 * C55292) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C1757 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C1758 +
                     ((C73846 + C73845) * C89783 * C55292 +
                      (C38935 * C10620 + C52027 + C52027 + C38611 * C10847 +
                       C38936 * C23356 + C52026 + C52026 + C38612 * C23575) *
                          C89783 * C55293) *
                         C1759) *
                        C89827 * C825 +
                    (((C40941 + C40940) * C89783 * C55292 +
                      (C40942 + C40943) * C89783 * C55293) *
                         C1758 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C1757 -
                     ((C38936 * C29516 + C52024 + C52024 + C38612 * C29962 +
                       C38935 * C10619 + C52025 + C52025 + C38611 * C10846) *
                          C89783 * C55293 +
                      (C40943 + C40942) * C89783 * C55292) *
                         C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89843 * C822 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C89843 * C823 +
           ((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
            (C55428 * C5803 + C55292 * C5921 + C55429 * C16849 +
             C55293 * C17081) *
                C38700 +
            (C55428 * C5865 + C55292 * C6086 + C55429 * C16979 +
             C55293 * C17439) *
                C38612) *
               C89783 * C89843 * C824) *
              C825 +
          (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
            (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
               C89783 * C89843 * C823 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C89843 * C822 -
           ((C55429 * C16980 + C55293 * C17440 + C55428 * C5864 +
             C55292 * C6085) *
                C38612 +
            (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
             C55292 * C5920) *
                C38700 +
            (C56569 + C56568) * C38611 + (C56256 + C56255) * C38699) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38699 +
           (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
               C38611 +
           (C55428 * C829 + C55292 * C1053 + C55429 * C4159 + C55293 * C4393) *
               C38700 +
           (C55428 * C939 + C55292 * C1359 + C55429 * C4275 + C55293 * C4729) *
               C38612) *
              C89783 * C89843 * C89827 * C96 -
          ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
           (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
              C89783 * C89843 * C89827 * C97 +
          ((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
           (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
              C89783 * C89843 * C89827 * C98 -
          ((C55429 * C4278 + C55293 * C4732 + C55428 * C943 + C55292 * C1363) *
               C38612 +
           (C55429 * C4162 + C55293 * C4396 + C55428 * C833 + C55292 * C1057) *
               C38700 +
           (C55682 + C55681) * C38611 + (C55464 + C55463) * C38699) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C1757 -
           ((C55429 * C6411 + C55293 * C6728 + C55428 * C4275 +
             C55292 * C4729) *
                C38612 +
            (C55429 * C6325 + C55293 * C6491 + C55428 * C4159 +
             C55292 * C4393) *
                C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C1758 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38699 +
            (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
             C55293 * C10903) *
                C38611 +
            (C55428 * C6325 + C55292 * C6491 + C55429 * C23356 +
             C55293 * C23469) *
                C38700 +
            (C55428 * C6411 + C55292 * C6728 + C55429 * C23415 +
             C55293 * C23630) *
                C38612) *
               C89783 * C1759) *
              C89827 * C825 +
          (((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
            (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
               C89783 * C1758 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C1757 -
           ((C55429 * C29623 + C55293 * C30082 + C55428 * C6410 +
             C55292 * C6727) *
                C38612 +
            (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
             C55292 * C6490) *
                C38700 +
            (C57644 + C57643) * C38611 + (C57280 + C57279) * C38699) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89843 * C822 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C89843 * C823 +
                     ((C73072 + C73071 + C73070 + C73069) * C38611 +
                      (C14189 * C55428 + C14468 * C55292 + C21579 * C55429 +
                       C21816 * C55293) *
                          C38612) *
                         C89843 * C824) *
                        C825 +
                    (((C73073 + C73074 + C73075 + C73076) * C38611 +
                      (C73077 + C73078 + C73079 + C73080) * C38612) *
                         C89843 * C823 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C89843 * C822 -
                     (((C13338 * C17082 + C89783 * C17549) * C55293 +
                       (C13338 * C16850 + C89783 * C16852) * C55429 +
                       C14471 * C55292 + C14194 * C55428) *
                          C38612 +
                      (C73080 + C73079 + C73078 + C73077) * C38611) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C55428 +
                      (C13338 * C274 + C89783 * C577) * C55292 +
                      C27565 * C55429 + C27859 * C55293) *
                         C38611 +
                     (C14184 * C55428 + C14466 * C55292 + C17231 * C55429 +
                      C17564 * C55293) *
                         C38612) *
                        C89843 * C89827 * C96 -
                    ((C17565 * C55293 + C17232 * C55429 + C14469 * C55292 +
                      C14190 * C55428) *
                         C38612 +
                     (C27862 * C55293 + C27571 * C55429 +
                      (C13338 * C275 + C89783 * C578) * C55292 +
                      (C13338 * C107 + C89783 * C113) * C55428) *
                         C38611) *
                        C89843 * C89827 * C97 +
                    (((C13338 * C108 + C89783 * C114) * C55428 +
                      (C13338 * C276 + C89783 * C579) * C55292 +
                      C29030 * C55429 + C29266 * C55293) *
                         C38611 +
                     (C15693 * C55428 + C15928 * C55292 +
                      (C13338 * C4161 + C89783 * C4165) * C55429 +
                      (C13338 * C4395 + C89783 * C4843) * C55293) *
                         C38612) *
                        C89843 * C89827 * C98 -
                    (((C13338 * C4396 + C89783 * C4844) * C55293 +
                      (C13338 * C4162 + C89783 * C4166) * C55429 +
                      (C13338 * C1057 + C89783 * C1465) * C55292 +
                      (C13338 * C833 + C89783 * C841) * C55428) *
                         C38612 +
                     ((C13338 * C1990 + C89783 * C2398) * C55293 +
                      (C13338 * C1766 + C89783 * C1774) * C55429 +
                      (C13338 * C277 + C89783 * C580) * C55292 +
                      (C13338 * C109 + C89783 * C115) * C55428) *
                         C38611) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C1757 -
                     ((C19542 * C55293 + C19298 * C55429 + C17564 * C55292 +
                       C17231 * C55428) *
                          C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C1758 +
                     ((C27567 * C55428 + C27860 * C55292 + C27570 * C55429 +
                       C27861 * C55293) *
                          C38611 +
                      (C19298 * C55428 + C19542 * C55292 + C31844 * C55429 +
                       C32082 * C55293) *
                          C38612) *
                         C1759) *
                        C89827 * C825 +
                    (((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                       C27863 * C55293) *
                          C38611 +
                      (C17232 * C55428 + C17565 * C55292 + C29861 * C55429 +
                       C30185 * C55293) *
                          C38612) *
                         C1758 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C1757 -
                     (((C13338 * C29749 + C89783 * C30181) * C55293 +
                       (C13338 * C29516 + C89783 * C29517) * C55429 +
                       C30185 * C55292 + C29861 * C55428) *
                          C38612 +
                      (C27864 * C55293 + C27575 * C55429 + C27863 * C55292 +
                       C27573 * C55428) *
                          C38611) *
                         C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C38699 * C1762 + C38611 * C1872 + C38700 * C4159 +
             C38612 * C4275) *
                C55429 +
            (C38699 * C1986 + C38611 * C2476 + C38700 * C4393 +
             C38612 * C4943) *
                C55293) *
               C89783 * C89843 * C822 -
           ((C38700 * C8758 + C38612 * C9149 + C38699 * C4393 +
             C38611 * C4943) *
                C55293 +
            (C38700 * C8592 + C38612 * C8678 + C38699 * C4159 +
             C38611 * C4275) *
                C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C89843 * C823 +
           ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C55428 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C55292 +
            (C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
             C38612 * C16979) *
                C55429 +
            (C38699 * C8758 + C38611 * C9149 + C38700 * C17081 +
             C38612 * C17668) *
                C55293) *
               C89783 * C89843 * C824) *
              C825 +
          (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
            (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
               C89783 * C89843 * C823 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C89843 * C822 -
           ((C38700 * C17082 + C38612 * C17669 + C38699 * C8757 +
             C38611 * C9148) *
                C55293 +
            (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
             C38611 * C8677) *
                C55429 +
            (C40273 + C40272) * C55292 + (C39543 + C39542) * C55428) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C55428 +
           (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
               C55292 +
           (C38699 * C1762 + C38611 * C1872 + C38700 * C4159 + C38612 * C4275) *
               C55429 +
           (C38699 * C1986 + C38611 * C2476 + C38700 * C4393 + C38612 * C4943) *
               C55293) *
              C89783 * C89843 * C89827 * C96 -
          ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
           (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
              C89783 * C89843 * C89827 * C97 +
          ((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
           (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
              C89783 * C89843 * C89827 * C98 -
          ((C38700 * C4396 + C38612 * C4946 + C38699 * C1990 + C38611 * C2480) *
               C55293 +
           (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 + C38611 * C1876) *
               C55429 +
           (C39205 + C39204) * C55292 + (C38735 + C38734) * C55428) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C1757 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C1758 +
           ((C73516 + C73515) * C55428 + (C74152 + C74151) * C55292 +
            (C38699 * C10620 + C38611 * C10682 + C38700 * C23356 +
             C38612 * C23415) *
                C55429 +
            (C38699 * C10738 + C38611 * C11009 + C38700 * C23469 +
             C38612 * C23734) *
                C55293) *
               C89783 * C1759) *
              C89827 * C825 +
          (((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
            (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
               C89783 * C1758 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C1757 -
           ((C38700 * C29749 + C38612 * C30283 + C38699 * C10737 +
             C38611 * C11008) *
                C55293 +
            (C38700 * C29516 + C38612 * C29623 + C38699 * C10619 +
             C38611 * C10681) *
                C55429 +
            (C41260 + C41259) * C55292 + (C40609 + C40608) * C55428) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89843 * C822 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C89843 * C823 +
                     ((C73296 + C73295) * C38611 +
                      (C55892 * C5803 + C62571 + C62571 + C55292 * C6245 +
                       C55893 * C16849 + C62570 + C62570 + C55293 * C17768) *
                          C38612) *
                         C89783 * C89843 * C824) *
                        C825 +
                    (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) *
                         C89783 * C89843 * C823 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C89843 * C822 -
                     ((C55893 * C16850 + C62568 + C62568 + C55293 * C17769 +
                       C55892 * C5802 + C62569 + C62569 + C55292 * C6244) *
                          C38612 +
                      (C56906 + C56905) * C38611) *
                         C89783 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C38611 +
                     (C55892 * C829 + C56882 + C56882 + C55292 * C1645 +
                      C55893 * C4159 + C56881 + C56881 + C55293 * C5055) *
                         C38612) *
                        C89783 * C89843 * C89827 * C96 -
                    ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                        C89783 * C89843 * C89827 * C97 +
                    ((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                        C89783 * C89843 * C89827 * C98 -
                    ((C55893 * C4162 + C58911 + C58911 + C55293 * C5058 +
                      C55892 * C833 + C58912 + C58912 + C55292 * C1649) *
                         C38612 +
                     (C55934 + C55933) * C38611) *
                        C89783 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C1757 -
                     ((C55893 * C6325 + C61076 + C61076 + C55293 * C6959 +
                       C55892 * C4159 + C61075 + C61075 + C55292 * C5055) *
                          C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C1758 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C38611 +
                      (C55892 * C6325 + C63463 + C63463 + C55292 * C6959 +
                       C55893 * C23356 + C63462 + C63462 + C55293 * C23786) *
                          C38612) *
                         C89783 * C1759) *
                        C89827 * C825 +
                    (((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) *
                         C89783 * C1758 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C1757 -
                     ((C55893 * C29516 + C63460 + C63460 + C55293 * C30391 +
                       C55892 * C6324 + C63461 + C63461 + C55292 * C6958) *
                          C38612 +
                      (C58002 + C58001) * C38611) *
                         C89783 * C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89999 -
           ((C19043 * C55293 + C16875 * C55292) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C89907) *
              C89827 * C90022 +
          (((C27268 * C55292 + C27269 * C55293) * C38611 +
            (C16876 * C55292 + C29525 * C55293) * C38612) *
               C89907 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C89999) *
              C89827 * C90023 +
          ((((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
             C28794 * C55293) *
                C38611 +
            (C74349 + C74355) * C38612) *
               C89999 -
           (((C13337 * C6323 + C28115 + C28115 + C89783 * C6329) * C55293 +
             C74354 * C55292) *
                C38612 +
            (C28795 * C55293 + C28794 * C55292) * C38611) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C89999 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C89907) *
              C89827 * C90022 +
          ((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) * C55292 +
            ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                C55293) *
               C89907 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C89999) *
              C89827 * C90023 +
          ((((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
            ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) *
                C55293) *
               C89999 -
           (((C38700 * C6326 + C38612 * C6412 + C38699 * C1773 +
              C38611 * C1883) *
                 C89783 +
             (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
              C38611 * C1875) *
                 C13338) *
                C55293 +
            ((C42531 + C42530) * C89783 + (C42529 + C42528) * C13338) *
                C55292) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89999 -
           (((C55429 * C6328 + C55293 * C6494 + C55428 * C4163 +
              C55292 * C4397) *
                 C89783 +
             (C55429 * C6325 + C55293 * C6491 + C55428 * C4159 +
              C55292 * C4393) *
                 C13338) *
                C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C89907) *
              C89827 * C90022 +
          ((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) * C38611 +
            ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                C38612) *
               C89907 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C89999) *
              C89827 * C90023 +
          ((((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
            ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) *
                C38612) *
               C89999 -
           (((C55429 * C6326 + C55293 * C6492 + C55428 * C4165 +
              C55292 * C4399) *
                 C89783 +
             (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
              C55292 * C4395) *
                 C13338) *
                C38612 +
            ((C59240 + C59239) * C89783 + (C59238 + C59237) * C13338) *
                C38611) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C89999 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C89907) *
                        C89827 * C90022 +
                    (((C73721 + C73722 + C73723 + C73724) * C55292 +
                      (C73725 + C73726 + C73727 + C73728) * C55293) *
                         C89907 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C89999) *
                        C89827 * C90023 +
                    ((((C13338 * C108 + C89783 * C114) * C38699 +
                       (C13338 * C189 + C89783 * C362) * C38611 +
                       C15693 * C38700 + C15694 * C38612) *
                          C55292 +
                      (C75545 + C75546 + C75547 + C75548) * C55293) *
                         C89999 -
                     (((C13338 * C6409 + C89783 * C6569) * C38612 +
                       (C13338 * C6323 + C89783 * C6326) * C38700 +
                       C29033 * C38611 + C29032 * C38699) *
                          C55293 +
                      (C75548 + C75547 + C75546 + C75545) * C55292) *
                         C89907) *
                        C89827 * C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C89999 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C89907) *
                        C89827 * C90022 +
                    (((C40941 + C40940) * C89783 * C55292 +
                      (C40942 + C40943) * C89783 * C55293) *
                         C89907 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C89999) *
                        C89827 * C90023 +
                    (((C38975 + C38974) * C89783 * C55292 +
                      (C42836 + C42837) * C89783 * C55293) *
                         C89999 -
                     ((C38936 * C6323 + C40930 + C40930 + C38612 * C6646 +
                       C38935 * C1765 + C40931 + C40931 + C38611 * C2185) *
                          C89783 * C55293 +
                      (C42837 + C42836) * C89783 * C55292) *
                         C89907) *
                        C89827 * C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89999 -
           ((C55429 * C6411 + C55293 * C6728 + C55428 * C4275 +
             C55292 * C4729) *
                C38612 +
            (C55429 * C6325 + C55293 * C6491 + C55428 * C4159 +
             C55292 * C4393) *
                C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C89907) *
              C89827 * C90022 +
          (((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
            (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
               C89783 * C89907 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C89999) *
              C89827 * C90023 +
          (((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
            (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
               C89783 * C89999 -
           ((C55429 * C6409 + C55293 * C6726 + C55428 * C4277 +
             C55292 * C4731) *
                C38612 +
            (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
             C55292 * C4395) *
                C38700 +
            (C59554 + C59553) * C38611 + (C59238 + C59237) * C38699) *
               C89783 * C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezx[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89999 -
                     ((C19542 * C55293 + C19298 * C55429 + C17564 * C55292 +
                       C17231 * C55428) *
                          C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C89907) *
                        C89827 * C90022 +
                    (((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                       C27863 * C55293) *
                          C38611 +
                      (C17232 * C55428 + C17565 * C55292 + C29861 * C55429 +
                       C30185 * C55293) *
                          C38612) *
                         C89907 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C89999) *
                        C89827 * C90023 +
                    ((((C13338 * C108 + C89783 * C114) * C55428 +
                       (C13338 * C276 + C89783 * C579) * C55292 +
                       C29030 * C55429 + C29266 * C55293) *
                          C38611 +
                      (C74950 + C74951 + C74952 + C74956) * C38612) *
                         C89999 -
                     (((C13338 * C6489 + C89783 * C6803) * C55293 +
                       (C13338 * C6323 + C89783 * C6326) * C55429 +
                       C74955 * C55292 + C74654 * C55428) *
                          C38612 +
                      (C29267 * C55293 + C29032 * C55429 + C29266 * C55292 +
                       C29030 * C55428) *
                          C38611) *
                         C89907) *
                        C89827 * C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C89999 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C89907) *
              C89827 * C90022 +
          (((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
            (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
               C89783 * C89907 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C89999) *
              C89827 * C90023 +
          (((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
            (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
               C89783 * C89999 -
           ((C38700 * C6489 + C38612 * C6880 + C38699 * C1989 +
             C38611 * C2479) *
                C55293 +
            (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
             C38611 * C1875) *
                C55429 +
            (C43141 + C43140) * C55292 + (C42529 + C42528) * C55428) *
               C89783 * C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89999 -
                     ((C55893 * C6325 + C61076 + C61076 + C55293 * C6959 +
                       C55892 * C4159 + C61075 + C61075 + C55292 * C5055) *
                          C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C89907) *
                        C89827 * C90022 +
                    (((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) *
                         C89783 * C89907 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C89999) *
                        C89827 * C90023 +
                    (((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                         C89783 * C89999 -
                     ((C55893 * C6323 + C61083 + C61083 + C55293 * C6957 +
                       C55892 * C4161 + C61084 + C61084 + C55292 * C5057) *
                          C38612 +
                      (C59870 + C59869) * C38611) *
                         C89783 * C89907) *
                        C89827 * C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
            C27265 * C55293) *
               C38611 +
           (C13878 * C55292 + C16875 * C55293) * C38612) *
              C89843 * C89827 * C96 -
          ((C16876 * C55293 + C13881 * C55292) * C38612 +
           (C27268 * C55293 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
               C38611) *
              C89843 * C89827 * C97 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
            C28794 * C55293) *
               C38611 +
           (C15455 * C55292 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C55293) *
               C38612) *
              C89843 * C89827 * C98 -
          (((C13337 * C4162 + C71806 + C71806 + C89783 * C4170) * C55293 +
            (C13337 * C833 + C13350 + C13350 + C89783 * C849) * C55292) *
               C38612 +
           ((C13337 * C1766 + C26059 + C26059 + C89783 * C1782) * C55293 +
            (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C55292) *
               C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89843 * C822 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
               C823 +
           ((C72436 + C72435) * C38611 +
            (C13880 * C55292 + C21337 * C55293) * C38612) *
               C89843 * C824) *
              C825 +
          (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89843 *
               C823 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C89843 * C822 -
           (((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C55293 +
             C13883 * C55292) *
                C38612 +
            (C72440 + C72439) * C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C13338 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C89783) *
               C55292 +
           ((C38699 * C1762 + C38611 * C1872 + C38700 * C4159 +
             C38612 * C4275) *
                C13338 +
            (C38699 * C1770 + C38611 * C1880 + C38700 * C4163 +
             C38612 * C4279) *
                C89783) *
               C55293) *
              C89843 * C89827 * C96 -
          (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
           ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) * C55292) *
              C89843 * C89827 * C97 +
          (((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
           ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) * C55293) *
              C89843 * C89827 * C98 -
          (((C38700 * C4166 + C38612 * C4282 + C38699 * C1774 +
             C38611 * C1884) *
                C89783 +
            (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 +
             C38611 * C1876) *
                C13338) *
               C55293 +
           ((C38737 + C38736) * C89783 + (C38735 + C38734) * C13338) * C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C38699 * C1762 + C38611 * C1872 + C38700 * C4159 +
              C38612 * C4275) *
                 C13338 +
             (C38699 * C1770 + C38611 * C1880 + C38700 * C4163 +
              C38612 * C4279) *
                 C89783) *
                C55293) *
               C89843 * C822 -
           (((C38700 * C8595 + C38612 * C8681 + C38699 * C4163 +
              C38611 * C4279) *
                 C89783 +
             (C38700 * C8592 + C38612 * C8678 + C38699 * C4159 +
              C38611 * C4275) *
                 C13338) *
                C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C89843 * C823 +
           (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C13338 +
             (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                 C89783) *
                C55292 +
            ((C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
              C38612 * C16979) *
                 C13338 +
             (C38699 * C8595 + C38611 * C8681 + C38700 * C16851 +
              C38612 * C16981) *
                 C89783) *
                C55293) *
               C89843 * C824) *
              C825 +
          ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) * C55292 +
            ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                C55293) *
               C89843 * C823 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C89843 * C822 -
           (((C38700 * C16852 + C38612 * C16982 + C38699 * C8594 +
              C38611 * C8680) *
                 C89783 +
             (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
              C38611 * C8677) *
                 C13338) *
                C55293 +
            ((C39545 + C39544) * C89783 + (C39543 + C39542) * C13338) *
                C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C13338 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C89783) *
               C38611 +
           ((C55428 * C829 + C55292 * C1053 + C55429 * C4159 + C55293 * C4393) *
                C13338 +
            (C55428 * C837 + C55292 * C1061 + C55429 * C4163 + C55293 * C4397) *
                C89783) *
               C38612) *
              C89843 * C89827 * C96 -
          (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
           ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) * C38611) *
              C89843 * C89827 * C97 +
          (((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
           ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) * C38612) *
              C89843 * C89827 * C98 -
          (((C55429 * C4166 + C55293 * C4400 + C55428 * C841 + C55292 * C1065) *
                C89783 +
            (C55429 * C4162 + C55293 * C4396 + C55428 * C833 + C55292 * C1057) *
                C13338) *
               C38612 +
           ((C55466 + C55465) * C89783 + (C55464 + C55463) * C13338) * C38611) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89843 * C822 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C89843 * C823 +
           (((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
            ((C55428 * C5803 + C55292 * C5921 + C55429 * C16849 +
              C55293 * C17081) *
                 C13338 +
             (C55428 * C5806 + C55292 * C5924 + C55429 * C16851 +
              C55293 * C17083) *
                 C89783) *
                C38612) *
               C89843 * C824) *
              C825 +
          ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) * C38611 +
            ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                C38612) *
               C89843 * C823 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C89843 * C822 -
           (((C55429 * C16852 + C55293 * C17084 + C55428 * C5805 +
              C55292 * C5923) *
                 C89783 +
             (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
              C55292 * C5920) *
                 C13338) *
                C38612 +
            ((C56258 + C56257) * C89783 + (C56256 + C56255) * C13338) *
                C38611) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C38699 +
                      (C13338 * C187 + C89783 * C360) * C38611 +
                      C14184 * C38700 + C14185 * C38612) *
                         C55292 +
                     (C27565 * C38699 + C27566 * C38611 + C17231 * C38700 +
                      C17230 * C38612) *
                         C55293) *
                        C89843 * C89827 * C96 -
                    ((C17233 * C38612 + C17232 * C38700 + C27572 * C38611 +
                      C27571 * C38699) *
                         C55293 +
                     (C14191 * C38612 + C14190 * C38700 +
                      (C13338 * C188 + C89783 * C361) * C38611 +
                      (C13338 * C107 + C89783 * C113) * C38699) *
                         C55292) *
                        C89843 * C89827 * C97 +
                    (((C13338 * C108 + C89783 * C114) * C38699 +
                      (C13338 * C189 + C89783 * C362) * C38611 +
                      C15693 * C38700 + C15694 * C38612) *
                         C55292 +
                     (C29030 * C38699 + C29031 * C38611 +
                      (C13338 * C4161 + C89783 * C4165) * C38700 +
                      (C13338 * C4277 + C89783 * C4513) * C38612) *
                         C55293) *
                        C89843 * C89827 * C98 -
                    (((C13338 * C4278 + C89783 * C4514) * C38612 +
                      (C13338 * C4162 + C89783 * C4166) * C38700 +
                      (C13338 * C1876 + C89783 * C2104) * C38611 +
                      (C13338 * C1766 + C89783 * C1774) * C38699) *
                         C55293 +
                     ((C13338 * C943 + C89783 * C1171) * C38612 +
                      (C13338 * C833 + C89783 * C841) * C38700 +
                      (C13338 * C190 + C89783 * C363) * C38611 +
                      (C13338 * C109 + C89783 * C115) * C38699) *
                         C55292) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C27565 * C38699 + C27566 * C38611 + C17231 * C38700 +
                       C17230 * C38612) *
                          C55293) *
                         C89843 * C822 -
                     ((C17228 * C38612 + C17229 * C38700 + C17230 * C38611 +
                       C17231 * C38699) *
                          C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C89843 * C823 +
                     ((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                       C14188 * C38612) *
                          C55292 +
                      (C17229 * C38699 + C17228 * C38611 + C21579 * C38700 +
                       C21580 * C38612) *
                          C55293) *
                         C89843 * C824) *
                        C825 +
                    (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                       C14193 * C38612) *
                          C55292 +
                      (C17232 * C38699 + C17233 * C38611 + C17234 * C38700 +
                       C17235 * C38612) *
                          C55293) *
                         C89843 * C823 -
                     ((C17233 * C38612 + C17232 * C38700 + C27572 * C38611 +
                       C27571 * C38699) *
                          C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C89843 * C822 -
                     (((C13338 * C16980 + C89783 * C17210) * C38612 +
                       (C13338 * C16850 + C89783 * C16852) * C38700 +
                       C17235 * C38611 + C17234 * C38699) *
                          C55293 +
                      (C14195 * C38612 + C14194 * C38700 + C14193 * C38611 +
                       C14192 * C38699) *
                          C55292) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C89783 * C55292 +
                     (C38935 * C1762 + C40919 + C40919 + C38611 * C2182 +
                      C38936 * C4159 + C40918 + C40918 + C38612 * C4613) *
                         C89783 * C55293) *
                        C89843 * C89827 * C96 -
                    ((C40940 + C40941) * C89783 * C55293 +
                     (C38973 + C38972) * C89783 * C55292) *
                        C89843 * C89827 * C97 +
                    ((C38975 + C38974) * C89783 * C55292 +
                     (C42836 + C42837) * C89783 * C55293) *
                        C89843 * C89827 * C98 -
                    ((C38936 * C4162 + C42830 + C42830 + C38612 * C4616 +
                      C38935 * C1766 + C42831 + C42831 + C38611 * C2186) *
                         C89783 * C55293 +
                     (C38977 + C38976) * C89783 * C55292) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C38935 * C1762 + C40919 + C40919 + C38611 * C2182 +
                       C38936 * C4159 + C40918 + C40918 + C38612 * C4613) *
                          C89783 * C55293) *
                         C89843 * C822 -
                     ((C38936 * C8592 + C43961 + C43961 + C38612 * C8915 +
                       C38935 * C4159 + C43960 + C43960 + C38611 * C4613) *
                          C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C89843 * C823 +
                     ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C89783 * C55292 +
                      (C38935 * C8592 + C49527 + C49527 + C38611 * C8915 +
                       C38936 * C16849 + C49526 + C49526 + C38612 * C17333) *
                          C89783 * C55293) *
                         C89843 * C824) *
                        C825 +
                    (((C39933 + C39932) * C89783 * C55292 +
                      (C43974 + C43975) * C89783 * C55293) *
                         C89843 * C823 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C89843 * C822 -
                     ((C38936 * C16850 + C49524 + C49524 + C38612 * C17334 +
                       C38935 * C8591 + C49525 + C49525 + C38611 * C8914) *
                          C89783 * C55293 +
                      (C39935 + C39934) * C89783 * C55292) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38699 +
           (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
               C38611 +
           (C55428 * C829 + C55292 * C1053 + C55429 * C4159 + C55293 * C4393) *
               C38700 +
           (C55428 * C939 + C55292 * C1359 + C55429 * C4275 + C55293 * C4729) *
               C38612) *
              C89783 * C89843 * C89827 * C96 -
          ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
           (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
              C89783 * C89843 * C89827 * C97 +
          ((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
           (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
              C89783 * C89843 * C89827 * C98 -
          ((C55429 * C4278 + C55293 * C4732 + C55428 * C943 + C55292 * C1363) *
               C38612 +
           (C55429 * C4162 + C55293 * C4396 + C55428 * C833 + C55292 * C1057) *
               C38700 +
           (C55682 + C55681) * C38611 + (C55464 + C55463) * C38699) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89843 * C822 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C89843 * C823 +
           ((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
            (C55428 * C5803 + C55292 * C5921 + C55429 * C16849 +
             C55293 * C17081) *
                C38700 +
            (C55428 * C5865 + C55292 * C6086 + C55429 * C16979 +
             C55293 * C17439) *
                C38612) *
               C89783 * C89843 * C824) *
              C825 +
          (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
            (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
               C89783 * C89843 * C823 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C89843 * C822 -
           ((C55429 * C16980 + C55293 * C17440 + C55428 * C5864 +
             C55292 * C6085) *
                C38612 +
            (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
             C55292 * C5920) *
                C38700 +
            (C56569 + C56568) * C38611 + (C56256 + C56255) * C38699) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C55428 +
                      (C13338 * C274 + C89783 * C577) * C55292 +
                      C27565 * C55429 + C27859 * C55293) *
                         C38611 +
                     (C14184 * C55428 + C14466 * C55292 + C17231 * C55429 +
                      C17564 * C55293) *
                         C38612) *
                        C89843 * C89827 * C96 -
                    ((C17565 * C55293 + C17232 * C55429 + C14469 * C55292 +
                      C14190 * C55428) *
                         C38612 +
                     (C27862 * C55293 + C27571 * C55429 +
                      (C13338 * C275 + C89783 * C578) * C55292 +
                      (C13338 * C107 + C89783 * C113) * C55428) *
                         C38611) *
                        C89843 * C89827 * C97 +
                    (((C13338 * C108 + C89783 * C114) * C55428 +
                      (C13338 * C276 + C89783 * C579) * C55292 +
                      C29030 * C55429 + C29266 * C55293) *
                         C38611 +
                     (C15693 * C55428 + C15928 * C55292 +
                      (C13338 * C4161 + C89783 * C4165) * C55429 +
                      (C13338 * C4395 + C89783 * C4843) * C55293) *
                         C38612) *
                        C89843 * C89827 * C98 -
                    (((C13338 * C4396 + C89783 * C4844) * C55293 +
                      (C13338 * C4162 + C89783 * C4166) * C55429 +
                      (C13338 * C1057 + C89783 * C1465) * C55292 +
                      (C13338 * C833 + C89783 * C841) * C55428) *
                         C38612 +
                     ((C13338 * C1990 + C89783 * C2398) * C55293 +
                      (C13338 * C1766 + C89783 * C1774) * C55429 +
                      (C13338 * C277 + C89783 * C580) * C55292 +
                      (C13338 * C109 + C89783 * C115) * C55428) *
                         C38611) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89843 * C822 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C89843 * C823 +
                     ((C73072 + C73071 + C73070 + C73069) * C38611 +
                      (C14189 * C55428 + C14468 * C55292 + C21579 * C55429 +
                       C21816 * C55293) *
                          C38612) *
                         C89843 * C824) *
                        C825 +
                    (((C73073 + C73074 + C73075 + C73076) * C38611 +
                      (C73077 + C73078 + C73079 + C73080) * C38612) *
                         C89843 * C823 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C89843 * C822 -
                     (((C13338 * C17082 + C89783 * C17549) * C55293 +
                       (C13338 * C16850 + C89783 * C16852) * C55429 +
                       C14471 * C55292 + C14194 * C55428) *
                          C38612 +
                      (C73080 + C73079 + C73078 + C73077) * C38611) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C55428 +
           (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
               C55292 +
           (C38699 * C1762 + C38611 * C1872 + C38700 * C4159 + C38612 * C4275) *
               C55429 +
           (C38699 * C1986 + C38611 * C2476 + C38700 * C4393 + C38612 * C4943) *
               C55293) *
              C89783 * C89843 * C89827 * C96 -
          ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
           (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
              C89783 * C89843 * C89827 * C97 +
          ((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
           (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
              C89783 * C89843 * C89827 * C98 -
          ((C38700 * C4396 + C38612 * C4946 + C38699 * C1990 + C38611 * C2480) *
               C55293 +
           (C38700 * C4162 + C38612 * C4278 + C38699 * C1766 + C38611 * C1876) *
               C55429 +
           (C39205 + C39204) * C55292 + (C38735 + C38734) * C55428) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C38699 * C1762 + C38611 * C1872 + C38700 * C4159 +
             C38612 * C4275) *
                C55429 +
            (C38699 * C1986 + C38611 * C2476 + C38700 * C4393 +
             C38612 * C4943) *
                C55293) *
               C89783 * C89843 * C822 -
           ((C38700 * C8758 + C38612 * C9149 + C38699 * C4393 +
             C38611 * C4943) *
                C55293 +
            (C38700 * C8592 + C38612 * C8678 + C38699 * C4159 +
             C38611 * C4275) *
                C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C89843 * C823 +
           ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C55428 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C55292 +
            (C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
             C38612 * C16979) *
                C55429 +
            (C38699 * C8758 + C38611 * C9149 + C38700 * C17081 +
             C38612 * C17668) *
                C55293) *
               C89783 * C89843 * C824) *
              C825 +
          (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
            (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
               C89783 * C89843 * C823 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C89843 * C822 -
           ((C38700 * C17082 + C38612 * C17669 + C38699 * C8757 +
             C38611 * C9148) *
                C55293 +
            (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
             C38611 * C8677) *
                C55429 +
            (C40273 + C40272) * C55292 + (C39543 + C39542) * C55428) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C38611 +
                     (C55892 * C829 + C56882 + C56882 + C55292 * C1645 +
                      C55893 * C4159 + C56881 + C56881 + C55293 * C5055) *
                         C38612) *
                        C89783 * C89843 * C89827 * C96 -
                    ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                        C89783 * C89843 * C89827 * C97 +
                    ((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                        C89783 * C89843 * C89827 * C98 -
                    ((C55893 * C4162 + C58911 + C58911 + C55293 * C5058 +
                      C55892 * C833 + C58912 + C58912 + C55292 * C1649) *
                         C38612 +
                     (C55934 + C55933) * C38611) *
                        C89783 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89843 * C822 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C89843 * C823 +
                     ((C73296 + C73295) * C38611 +
                      (C55892 * C5803 + C62571 + C62571 + C55292 * C6245 +
                       C55893 * C16849 + C62570 + C62570 + C55293 * C17768) *
                          C38612) *
                         C89783 * C89843 * C824) *
                        C825 +
                    (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) *
                         C89783 * C89843 * C823 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C89843 * C822 -
                     ((C55893 * C16850 + C62568 + C62568 + C55293 * C17769 +
                       C55892 * C5802 + C62569 + C62569 + C55292 * C6244) *
                          C38612 +
                      (C56906 + C56905) * C38611) *
                         C89783 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89843 * C90024 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
               C90025 +
           ((C72436 + C72435) * C38611 + (C78233 + C78234) * C38612) * C89843 *
               C7039) *
              C89990 +
          (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89843 *
               C90025 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C89843 * C90024 -
           (((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C55293 +
             C13883 * C55292) *
                C38612 +
            (C72440 + C72439) * C38611) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C89843 * C90024 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C89843 * C90025 +
           (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C13338 +
             (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                 C89783) *
                C55292 +
            ((C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
              C38612 * C16979) *
                 C13338 +
             (C38699 * C8595 + C38611 * C8681 + C38700 * C16851 +
              C38612 * C16981) *
                 C89783) *
                C55293) *
               C89843 * C7039) *
              C89990 +
          ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) * C55292 +
            ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                C55293) *
               C89843 * C90025 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C89843 * C90024 -
           (((C38700 * C16852 + C38612 * C16982 + C38699 * C8594 +
              C38611 * C8680) *
                 C89783 +
             (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
              C38611 * C8677) *
                 C13338) *
                C55293 +
            ((C39545 + C39544) * C89783 + (C39543 + C39542) * C13338) *
                C55292) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89843 * C90024 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C89843 * C90025 +
           (((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
            ((C78375 + C78376) * C13338 + (C78377 + C78378) * C89783) *
                C38612) *
               C89843 * C7039) *
              C89990 +
          ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) * C38611 +
            ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                C38612) *
               C89843 * C90025 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C89843 * C90024 -
           (((C55429 * C16852 + C55293 * C17084 + C55428 * C5805 +
              C55292 * C5923) *
                 C89783 +
             (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
              C55292 * C5920) *
                 C13338) *
                C38612 +
            ((C56258 + C56257) * C89783 + (C56256 + C56255) * C13338) *
                C38611) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C89843 * C90024 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C89843 * C90025 +
                     ((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                       C14188 * C38612) *
                          C55292 +
                      (C17229 * C38699 + C17228 * C38611 + C21579 * C38700 +
                       C21580 * C38612) *
                          C55293) *
                         C89843 * C7039) *
                        C89990 +
                    (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                       C14193 * C38612) *
                          C55292 +
                      (C76591 + C76592 + C76593 + C76594) * C55293) *
                         C89843 * C90025 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C89843 * C90024 -
                     (((C13338 * C16980 + C89783 * C17210) * C38612 +
                       (C13338 * C16850 + C89783 * C16852) * C38700 +
                       C17235 * C38611 + C17234 * C38699) *
                          C55293 +
                      (C14195 * C38612 + C14194 * C38700 + C14193 * C38611 +
                       C14192 * C38699) *
                          C55292) *
                         C89843 * C7039) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C89843 * C90024 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C89843 * C90025 +
                     ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C89783 * C55292 +
                      (C38935 * C8592 + C49527 + C49527 + C38611 * C8915 +
                       C38936 * C16849 + C49526 + C49526 + C38612 * C17333) *
                          C89783 * C55293) *
                         C89843 * C7039) *
                        C89990 +
                    (((C39933 + C39932) * C89783 * C55292 +
                      (C43974 + C43975) * C89783 * C55293) *
                         C89843 * C90025 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C89843 * C90024 -
                     ((C38936 * C16850 + C49524 + C49524 + C38612 * C17334 +
                       C38935 * C8591 + C49525 + C49525 + C38611 * C8914) *
                          C89783 * C55293 +
                      (C39935 + C39934) * C89783 * C55292) *
                         C89843 * C7039) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89843 * C90024 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C89843 * C90025 +
           ((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
            (C78375 + C78376) * C38700 + (C78583 + C78584) * C38612) *
               C89783 * C89843 * C7039) *
              C89990 +
          (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
            (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
               C89783 * C89843 * C90025 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C89843 * C90024 -
           ((C55429 * C16980 + C55293 * C17440 + C55428 * C5864 +
             C55292 * C6085) *
                C38612 +
            (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
             C55292 * C5920) *
                C38700 +
            (C56569 + C56568) * C38611 + (C56256 + C56255) * C38699) *
               C89783 * C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89843 * C90024 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C89843 * C90025 +
                     ((C73072 + C73071 + C73070 + C73069) * C38611 +
                      (C78651 + C78652 + C78653 + C78654) * C38612) *
                         C89843 * C7039) *
                        C89990 +
                    (((C73073 + C73074 + C73075 + C73076) * C38611 +
                      (C73077 + C73078 + C73079 + C73080) * C38612) *
                         C89843 * C90025 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C89843 * C90024 -
                     (((C13338 * C17082 + C89783 * C17549) * C55293 +
                       (C13338 * C16850 + C89783 * C16852) * C55429 +
                       C14471 * C55292 + C14194 * C55428) *
                          C38612 +
                      (C73080 + C73079 + C73078 + C73077) * C38611) *
                         C89843 * C7039) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C89843 * C90024 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C89843 * C90025 +
           ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C55428 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C55292 +
            (C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
             C38612 * C16979) *
                C55429 +
            (C38699 * C8758 + C38611 * C9149 + C38700 * C17081 +
             C38612 * C17668) *
                C55293) *
               C89783 * C89843 * C7039) *
              C89990 +
          (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
            (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
               C89783 * C89843 * C90025 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C89843 * C90024 -
           ((C38700 * C17082 + C38612 * C17669 + C38699 * C8757 +
             C38611 * C9148) *
                C55293 +
            (C38700 * C16850 + C38612 * C16980 + C38699 * C8591 +
             C38611 * C8677) *
                C55429 +
            (C40273 + C40272) * C55292 + (C39543 + C39542) * C55428) *
               C89783 * C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89843 * C90024 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C89843 * C90025 +
                     ((C73296 + C73295) * C38611 + (C78797 + C78798) * C38612) *
                         C89783 * C89843 * C7039) *
                        C89990 +
                    (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) *
                         C89783 * C89843 * C90025 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C89843 * C90024 -
                     ((C55893 * C16850 + C62568 + C62568 + C55293 * C17769 +
                       C55892 * C5802 + C62569 + C62569 + C55292 * C6244) *
                          C38612 +
                      (C56906 + C56905) * C38611) *
                         C89783 * C89843 * C7039) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89999 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C89907) *
              C90024 +
          (((C76170 + C76169) * C38611 + (C81901 + C81902) * C38612) * C89907 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89999) *
              C90025 +
          (((C72436 + C72435) * C38611 + (C78233 + C78234) * C38612) * C89999 -
           (((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C55293 +
             C21337 * C55292) *
                C38612 +
            (C81902 + C81901) * C38611) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexy[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C89999 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C89907) *
              C90024 +
          ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) * C55292 +
            ((C79005 + C79006) * C13338 + (C79007 + C79008) * C89783) *
                C55293) *
               C89907 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C89999) *
              C90025 +
          ((((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C13338 +
             (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                 C89783) *
                C55292 +
            ((C82009 + C82010) * C13338 + (C82011 + C82012) * C89783) *
                C55293) *
               C89999 -
           (((C38700 * C19031 + C38612 * C19121 + C38699 * C14729 +
              C38611 * C14821) *
                 C89783 +
             (C38700 * C19030 + C38612 * C19120 + C38699 * C14727 +
              C38611 * C14819) *
                 C13338) *
                C55293 +
            ((C82012 + C82011) * C89783 + (C82010 + C82009) * C13338) *
                C55292) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexz[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89999 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C89907) *
              C90024 +
          ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) * C38611 +
            ((C82119 + C82120) * C13338 + (C82121 + C82122) * C89783) *
                C38612) *
               C89907 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C89999) *
              C90025 +
          ((((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
            ((C78375 + C78376) * C13338 + (C78377 + C78378) * C89783) *
                C38612) *
               C89999 -
           (((C55429 * C19031 + C55293 * C19197 + C55428 * C16851 +
              C55292 * C17083) *
                 C89783 +
             (C55429 * C19030 + C55293 * C19196 + C55428 * C16849 +
              C55292 * C17081) *
                 C13338) *
                C38612 +
            ((C82122 + C82121) * C89783 + (C82120 + C82119) * C13338) *
                C38611) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyx[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C89999 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C89907) *
                        C90024 +
                    (((C76587 + C76588 + C76589 + C76590) * C55292 +
                      (C79217 + C79218 + C79219 + C79220) * C55293) *
                         C89907 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C89999) *
                        C90025 +
                    (((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                       C14188 * C38612) *
                          C55292 +
                      (C82221 + C82222 + C82223 + C82224) * C55293) *
                         C89999 -
                     (((C13338 * C19120 + C89783 * C19288) * C38612 +
                       (C13338 * C19030 + C89783 * C19031) * C38700 +
                       C19301 * C38611 + C19300 * C38699) *
                          C55293 +
                      (C82224 + C82223 + C82222 + C82221) * C55292) *
                         C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C89999 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C89907) *
                        C90024 +
                    (((C76733 + C76734) * C89783 * C55292 +
                      (C79329 + C79330) * C89783 * C55293) *
                         C89907 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C89999) *
                        C90025 +
                    (((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C89783 * C55292 +
                      (C82333 + C82334) * C89783 * C55293) *
                         C89999 -
                     ((C38936 * C19030 + C82327 + C82327 + C38612 * C19375 +
                       C38935 * C14727 + C82328 + C82328 + C38611 * C15051) *
                          C89783 * C55293 +
                      (C82334 + C82333) * C89783 * C55292) *
                         C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89999 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C89907) *
              C90024 +
          (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
            (C82119 + C82120) * C38700 + (C82437 + C82438) * C38612) *
               C89783 * C89907 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C89999) *
              C90025 +
          (((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
            (C78375 + C78376) * C38700 + (C78583 + C78584) * C38612) *
               C89783 * C89999 -
           ((C55429 * C19120 + C55293 * C19453 + C55428 * C16979 +
             C55292 * C17439) *
                C38612 +
            (C55429 * C19030 + C55293 * C19196 + C55428 * C16849 +
             C55292 * C17081) *
                C38700 +
            (C82438 + C82437) * C38611 + (C82120 + C82119) * C38699) *
               C89783 * C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezx[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89999 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C89907) *
                        C90024 +
                    (((C77004 + C77003 + C77002 + C77001) * C38611 +
                      (C82537 + C82538 + C82539 + C82540) * C38612) *
                         C89907 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C89999) *
                        C90025 +
                    (((C73072 + C73071 + C73070 + C73069) * C38611 +
                      (C78651 + C78652 + C78653 + C78654) * C38612) *
                         C89999 -
                     (((C13338 * C19196 + C89783 * C19534) * C55293 +
                       (C13338 * C19030 + C89783 * C19031) * C55429 +
                       C21816 * C55292 + C21579 * C55428) *
                          C38612 +
                      (C82540 + C82539 + C82538 + C82537) * C38611) *
                         C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eezy[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C89999 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C89907) *
              C90024 +
          (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
            (C79005 + C79006) * C55429 + (C79639 + C79640) * C55293) *
               C89783 * C89907 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C89999) *
              C90025 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C55428 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C55292 +
            (C82009 + C82010) * C55429 + (C82643 + C82644) * C55293) *
               C89783 * C89999 -
           ((C38700 * C19196 + C38612 * C19619 + C38699 * C14897 +
             C38611 * C15291) *
                C55293 +
            (C38700 * C19030 + C38612 * C19120 + C38699 * C14727 +
             C38611 * C14819) *
                C55429 +
            (C82644 + C82643) * C55292 + (C82010 + C82009) * C55428) *
               C89783 * C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezz[21] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89999 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C89907) *
                        C90024 +
                    (((C77284 + C77283) * C38611 + (C82753 + C82754) * C38612) *
                         C89783 * C89907 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C89999) *
                        C90025 +
                    (((C73296 + C73295) * C38611 + (C78797 + C78798) * C38612) *
                         C89783 * C89999 -
                     ((C55893 * C19030 + C82747 + C82747 + C55293 * C19694 +
                       C55892 * C16849 + C82748 + C82748 + C55292 * C17768) *
                          C38612 +
                      (C82754 + C82753) * C38611) *
                         C89783 * C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexx[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
            C27265 * C55293) *
               C38611 +
           (C72433 + C72434) * C38612) *
              C89843 * C5796 -
          ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
              C5797 +
          ((C72436 + C72435) * C38611 + (C78233 + C78234) * C38612) * C89843 *
              C5798 -
          (((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C55293 +
            C18512 * C55292) *
               C38612 +
           (C78234 + C78233) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89843 * C5149 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
               C89879) *
              C5151 +
          (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89843 *
               C89879 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          ((((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
             C28794 * C55293) *
                C38611 +
            (C74349 + C74355) * C38612) *
               C89843 * C5149 -
           (((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C55293 +
             C15456 * C55292) *
                C38612 +
            (C74355 + C74349) * C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C1757 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C1758 +
           ((C27266 * C55292 + C27267 * C55293) * C38611 +
            (C78897 + C78898) * C38612) *
               C1759) *
              C5149 +
          (((C76170 + C76169) * C38611 +
            (C16874 * C55292 + C19044 * C55293) * C38612) *
               C1758 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C1757 -
           (((C13337 * C23355 + C23362 + C23362 + C89783 * C23359) * C55293 +
             C19044 * C55292) *
                C38612 +
            (C78898 + C78897) * C38611) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C13338 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C89783) *
               C55292 +
           ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) * C55293) *
              C89843 * C5796 -
          (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
           ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C89783 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C13338) *
               C55292) *
              C89843 * C5797 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C13338 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C89783) *
               C55292 +
           ((C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
             C38612 * C16979) *
                C13338 +
            (C38699 * C8595 + C38611 * C8681 + C38700 * C16851 +
             C38612 * C16981) *
                C89783) *
               C55293) *
              C89843 * C5798 -
          (((C38700 * C21329 + C38612 * C21413 + C38699 * C16851 +
             C38611 * C16981) *
                C89783 +
            (C38700 * C21328 + C38612 * C21412 + C38699 * C16849 +
             C38611 * C16979) *
                C13338) *
               C55293 +
           ((C38700 * C13845 + C38612 * C13965 + C38699 * C5806 +
             C38611 * C5868) *
                C89783 +
            (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
             C38611 * C5865) *
                C13338) *
               C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C89843 * C5149 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C89843 * C89879) *
              C5151 +
          ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) * C55292 +
            ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                C55293) *
               C89843 * C89879 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C89843 * C5149) *
              C5152 +
          ((((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
            ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) *
                C55293) *
               C89843 * C5149 -
           (((C38700 * C8593 + C38612 * C8679 + C38699 * C4165 +
              C38611 * C4281) *
                 C89783 +
             (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
              C38611 * C4277) *
                 C13338) *
                C55293 +
            ((C41587 + C41586) * C89783 + (C41585 + C41584) * C13338) *
                C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C1757 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C1758 +
           (((C73516 + C73515) * C13338 + (C73514 + C73513) * C89783) * C55292 +
            ((C38699 * C10620 + C38611 * C10682 + C38700 * C23356 +
              C38612 * C23415) *
                 C13338 +
             (C38699 * C10623 + C38611 * C10685 + C38700 * C23358 +
              C38612 * C23417) *
                 C89783) *
                C55293) *
               C1759) *
              C5149 +
          ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) * C55292 +
            ((C79005 + C79006) * C13338 + (C79007 + C79008) * C89783) *
                C55293) *
               C1758 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C1757 -
           (((C38700 * C23357 + C38612 * C23416 + C38699 * C23358 +
              C38611 * C23417) *
                 C89783 +
             (C38700 * C23355 + C38612 * C23414 + C38699 * C23356 +
              C38611 * C23415) *
                 C13338) *
                C55293 +
            ((C79008 + C79007) * C89783 + (C79006 + C79005) * C13338) *
                C55292) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C13338 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C89783) *
               C38611 +
           ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) * C38612) *
              C89843 * C5796 -
          (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
           ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) * C38611) *
              C89843 * C5797 +
          (((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
           ((C78375 + C78376) * C13338 + (C78377 + C78378) * C89783) * C38612) *
              C89843 * C5798 -
          (((C55429 * C21329 + C55293 * C21489 + C55428 * C13845 +
             C55292 * C14043) *
                C89783 +
            (C55429 * C21328 + C55293 * C21488 + C55428 * C13843 +
             C55292 * C14041) *
                C13338) *
               C38612 +
           ((C78378 + C78377) * C89783 + (C78376 + C78375) * C13338) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89843 * C5149 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C89843 * C89879) *
              C5151 +
          ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) * C38611 +
            ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                C38612) *
               C89843 * C89879 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          ((((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
            ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) *
                C38612) *
               C89843 * C5149 -
           (((C55429 * C8593 + C55293 * C8759 + C55428 * C840 +
              C55292 * C1064) *
                 C89783 +
             (C55429 * C8590 + C55293 * C8756 + C55428 * C832 +
              C55292 * C1056) *
                 C13338) *
                C38612 +
            ((C58308 + C58307) * C89783 + (C58306 + C58305) * C13338) *
                C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C1757 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C1758 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C13338 +
             (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
              C55293 * C10741) *
                 C89783) *
                C38611 +
            ((C79115 + C79116) * C13338 + (C79117 + C79118) * C89783) *
                C38612) *
               C1759) *
              C5149 +
          ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) * C38611 +
            ((C55428 * C8592 + C55292 * C8758 + C55429 * C14727 +
              C55293 * C14897) *
                 C13338 +
             (C55428 * C8595 + C55292 * C8761 + C55429 * C14729 +
              C55293 * C14899) *
                 C89783) *
                C38612) *
               C1758 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C1757 -
           (((C55429 * C23357 + C55293 * C23470 + C55428 * C14729 +
              C55292 * C14899) *
                 C89783 +
             (C55429 * C23355 + C55293 * C23468 + C55428 * C14727 +
              C55292 * C14897) *
                 C13338) *
                C38612 +
            ((C79118 + C79117) * C89783 + (C79116 + C79115) * C13338) *
                C38611) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C38699 +
                      (C13338 * C187 + C89783 * C360) * C38611 +
                      C14184 * C38700 + C14185 * C38612) *
                         C55292 +
                     (C73713 + C73714 + C73715 + C73716) * C55293) *
                        C89843 * C5796 -
                    ((C76590 + C76589 + C76588 + C76587) * C55293 +
                     (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                      C14184 * C38699) *
                         C55292) *
                        C89843 * C5797 +
                    ((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                      C14188 * C38612) *
                         C55292 +
                     (C17229 * C38699 + C17228 * C38611 + C21579 * C38700 +
                      C21580 * C38612) *
                         C55293) *
                        C89843 * C5798 -
                    (((C13338 * C21412 + C89783 * C21573) * C38612 +
                      (C13338 * C21328 + C89783 * C21329) * C38700 +
                      C21580 * C38611 + C21579 * C38699) *
                         C55293 +
                     (C18683 * C38612 + C18682 * C38700 + C14188 * C38611 +
                      C14189 * C38699) *
                         C55292) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C89843 * C5149 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                       C14193 * C38612) *
                          C55292 +
                      (C76591 + C76592 + C76593 + C76594) * C55293) *
                         C89843 * C89879 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C89843 * C5149) *
                        C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C38699 +
                       (C13338 * C189 + C89783 * C362) * C38611 +
                       C15693 * C38700 + C15694 * C38612) *
                          C55292 +
                      (C75545 + C75546 + C75547 + C75548) * C55293) *
                         C89843 * C5149 -
                     (((C13338 * C8676 + C89783 * C8836) * C38612 +
                       (C13338 * C8590 + C89783 * C8593) * C38700 +
                       C74655 * C38611 + C74654 * C38699) *
                          C55293 +
                      (C15696 * C38612 + C15695 * C38700 + C15694 * C38611 +
                       C15693 * C38699) *
                          C55292) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C1757 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C1758 +
                     ((C73720 + C73719 + C73718 + C73717) * C55292 +
                      (C27570 * C38699 + C27569 * C38611 + C31844 * C38700 +
                       C31845 * C38612) *
                          C55293) *
                         C1759) *
                        C5149 +
                    (((C76587 + C76588 + C76589 + C76590) * C55292 +
                      (C79217 + C79218 + C79219 + C79220) * C55293) *
                         C1758 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C1757 -
                     (((C13338 * C23414 + C89783 * C23522) * C38612 +
                       (C13338 * C23355 + C89783 * C23357) * C38700 +
                       C31845 * C38611 + C31844 * C38699) *
                          C55293 +
                      (C79220 + C79219 + C79218 + C79217) * C55292) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C89783 * C55292 +
                     (C73843 + C73844) * C89783 * C55293) *
                        C89843 * C5796 -
                    ((C76734 + C76733) * C89783 * C55293 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C89783 * C55292) *
                        C89843 * C5797 +
                    ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                      C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                         C89783 * C55292 +
                     (C38935 * C8592 + C49527 + C49527 + C38611 * C8915 +
                      C38936 * C16849 + C49526 + C49526 + C38612 * C17333) *
                         C89783 * C55293) *
                        C89843 * C5798 -
                    ((C38936 * C21328 + C78511 + C78511 + C38612 * C21654 +
                      C38935 * C16849 + C78512 + C78512 + C38611 * C17333) *
                         C89783 * C55293 +
                     (C38936 * C13843 + C45762 + C45762 + C38612 * C14269 +
                      C38935 * C5803 + C45763 + C45763 + C38611 * C6030) *
                         C89783 * C55292) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C89843 * C5149 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C89843 * C89879) *
                        C5151 +
                    (((C39933 + C39932) * C89783 * C55292 +
                      (C43974 + C43975) * C89783 * C55293) *
                         C89843 * C89879 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C89843 * C5149) *
                        C5152 +
                    (((C38975 + C38974) * C89783 * C55292 +
                      (C42836 + C42837) * C89783 * C55293) *
                         C89843 * C5149 -
                     ((C38936 * C8590 + C43968 + C43968 + C38612 * C8913 +
                       C38935 * C4161 + C43969 + C43969 + C38611 * C4615) *
                          C89783 * C55293 +
                      (C41909 + C41908) * C89783 * C55292) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C1757 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C1758 +
                     ((C73846 + C73845) * C89783 * C55292 +
                      (C38935 * C10620 + C52027 + C52027 + C38611 * C10847 +
                       C38936 * C23356 + C52026 + C52026 + C38612 * C23575) *
                          C89783 * C55293) *
                         C1759) *
                        C5149 +
                    (((C76733 + C76734) * C89783 * C55292 +
                      (C79329 + C79330) * C89783 * C55293) *
                         C1758 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C1757 -
                     ((C38936 * C23355 + C79323 + C79323 + C38612 * C23574 +
                       C38935 * C23356 + C79324 + C79324 + C38611 * C23575) *
                          C89783 * C55293 +
                      (C79330 + C79329) * C89783 * C55292) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38699 +
           (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
               C38611 +
           (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
              C89783 * C89843 * C5796 -
          ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
           (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
              C89783 * C89843 * C5797 +
          ((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
           (C78375 + C78376) * C38700 + (C78583 + C78584) * C38612) *
              C89783 * C89843 * C5798 -
          ((C55429 * C21412 + C55293 * C21732 + C55428 * C13963 +
            C55292 * C14357) *
               C38612 +
           (C55429 * C21328 + C55293 * C21488 + C55428 * C13843 +
            C55292 * C14041) *
               C38700 +
           (C78584 + C78583) * C38611 + (C78376 + C78375) * C38699) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89843 * C5149 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
            (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
               C89783 * C89843 * C89879 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
            (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
               C89783 * C89843 * C5149 -
           ((C55429 * C8676 + C55293 * C8993 + C55428 * C942 + C55292 * C1362) *
                C38612 +
            (C55429 * C8590 + C55293 * C8756 + C55428 * C832 + C55292 * C1056) *
                C38700 +
            (C58608 + C58607) * C38611 + (C58306 + C58305) * C38699) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C1757 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C1758 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38699 +
            (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
             C55293 * C10903) *
                C38611 +
            (C79115 + C79116) * C38700 + (C79433 + C79434) * C38612) *
               C89783 * C1759) *
              C5149 +
          (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
            (C55428 * C8592 + C55292 * C8758 + C55429 * C14727 +
             C55293 * C14897) *
                C38700 +
            (C55428 * C8678 + C55292 * C8995 + C55429 * C14819 +
             C55293 * C15139) *
                C38612) *
               C89783 * C1758 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C1757 -
           ((C55429 * C23414 + C55293 * C23629 + C55428 * C14819 +
             C55292 * C15139) *
                C38612 +
            (C55429 * C23355 + C55293 * C23468 + C55428 * C14727 +
             C55292 * C14897) *
                C38700 +
            (C79434 + C79433) * C38611 + (C79116 + C79115) * C38699) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C55428 +
                      (C13338 * C274 + C89783 * C577) * C55292 +
                      C27565 * C55429 + C27859 * C55293) *
                         C38611 +
                     (C73065 + C73066 + C73067 + C73068) * C38612) *
                        C89843 * C5796 -
                    ((C73069 + C73070 + C73071 + C73072) * C38612 +
                     (C73068 + C73067 + C73066 + C73065) * C38611) *
                        C89843 * C5797 +
                    ((C73072 + C73071 + C73070 + C73069) * C38611 +
                     (C78651 + C78652 + C78653 + C78654) * C38612) *
                        C89843 * C5798 -
                    (((C13338 * C21488 + C89783 * C21810) * C55293 +
                      (C13338 * C21328 + C89783 * C21329) * C55429 +
                      C18847 * C55292 + C18682 * C55428) *
                         C38612 +
                     (C78654 + C78653 + C78652 + C78651) * C38611) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89843 * C5149 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C89843 * C89879) *
                        C5151 +
                    (((C73073 + C73074 + C73075 + C73076) * C38611 +
                      (C73077 + C73078 + C73079 + C73080) * C38612) *
                         C89843 * C89879 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C89843 * C5149) *
                        C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C55428 +
                       (C13338 * C276 + C89783 * C579) * C55292 +
                       C29030 * C55429 + C29266 * C55293) *
                          C38611 +
                      (C74950 + C74951 + C74952 + C74956) * C38612) *
                         C89843 * C5149 -
                     (((C13338 * C8756 + C89783 * C9070) * C55293 +
                       (C13338 * C8590 + C89783 * C8593) * C55429 +
                       C15929 * C55292 + C15695 * C55428) *
                          C38612 +
                      (C74956 + C74952 + C74951 + C74950) * C38611) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C1757 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C1758 +
                     ((C27567 * C55428 + C27860 * C55292 + C27570 * C55429 +
                       C27861 * C55293) *
                          C38611 +
                      (C79533 + C79534 + C79535 + C79536) * C38612) *
                         C1759) *
                        C5149 +
                    (((C77004 + C77003 + C77002 + C77001) * C38611 +
                      (C17229 * C55428 + C17563 * C55292 + C19300 * C55429 +
                       C19543 * C55293) *
                          C38612) *
                         C1758 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C1757 -
                     (((C13338 * C23468 + C89783 * C23681) * C55293 +
                       (C13338 * C23355 + C89783 * C23357) * C55429 +
                       C19543 * C55292 + C19300 * C55428) *
                          C38612 +
                      (C79536 + C79535 + C79534 + C79533) * C38611) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C55428 +
           (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
               C55292 +
           (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
              C89783 * C89843 * C5796 -
          ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
           (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 + C38611 * C1543) *
               C55292 +
           (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
               C55428) *
              C89783 * C89843 * C5797 +
          ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
               C55428 +
           (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 + C38612 * C6192) *
               C55292 +
           (C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
            C38612 * C16979) *
               C55429 +
           (C38699 * C8758 + C38611 * C9149 + C38700 * C17081 +
            C38612 * C17668) *
               C55293) *
              C89783 * C89843 * C5798 -
          ((C38700 * C21488 + C38612 * C21891 + C38699 * C17081 +
            C38611 * C17668) *
               C55293 +
           (C38700 * C21328 + C38612 * C21412 + C38699 * C16849 +
            C38611 * C16979) *
               C55429 +
           (C38700 * C14041 + C38612 * C14553 + C38699 * C5921 +
            C38611 * C6192) *
               C55292 +
           (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
            C38611 * C5865) *
               C55428) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C89843 * C5149 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
            (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
               C89783 * C89843 * C89879 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
            (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
               C89783 * C89843 * C5149 -
           ((C38700 * C8756 + C38612 * C9147 + C38699 * C4395 +
             C38611 * C4945) *
                C55293 +
            (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
             C38611 * C4277) *
                C55429 +
            (C42219 + C42218) * C55292 + (C41585 + C41584) * C55428) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C1757 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C1758 +
           ((C73516 + C73515) * C55428 + (C74152 + C74151) * C55292 +
            (C38699 * C10620 + C38611 * C10682 + C38700 * C23356 +
             C38612 * C23415) *
                C55429 +
            (C38699 * C10738 + C38611 * C11009 + C38700 * C23469 +
             C38612 * C23734) *
                C55293) *
               C89783 * C1759) *
              C5149 +
          (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
            (C79005 + C79006) * C55429 + (C79639 + C79640) * C55293) *
               C89783 * C1758 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C1757 -
           ((C38700 * C23468 + C38612 * C23733 + C38699 * C23469 +
             C38611 * C23734) *
                C55293 +
            (C38700 * C23355 + C38612 * C23414 + C38699 * C23356 +
             C38611 * C23415) *
                C55429 +
            (C79640 + C79639) * C55292 + (C79006 + C79005) * C55428) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C38611 +
                     (C73293 + C73294) * C38612) *
                        C89783 * C89843 * C5796 -
                    ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                        C89783 * C89843 * C5797 +
                    ((C73296 + C73295) * C38611 + (C78797 + C78798) * C38612) *
                        C89783 * C89843 * C5798 -
                    ((C55893 * C21328 + C78791 + C78791 + C55293 * C21966 +
                      C55892 * C13843 + C78792 + C78792 + C55292 * C14629) *
                         C38612 +
                     (C78798 + C78797) * C38611) *
                        C89783 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89843 * C5149 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C89843 * C89879) *
                        C5151 +
                    (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) *
                         C89783 * C89843 * C89879 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C89843 * C5149) *
                        C5152 +
                    (((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                         C89783 * C89843 * C5149 -
                     ((C55893 * C8590 + C56893 + C56893 + C55293 * C9224 +
                       C55892 * C832 + C56894 + C56894 + C55292 * C1648) *
                          C38612 +
                      (C58918 + C58917) * C38611) *
                         C89783 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C1757 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C1758 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C38611 +
                      (C79749 + C79750) * C38612) *
                         C89783 * C1759) *
                        C5149 +
                    (((C77284 + C77283) * C38611 +
                      (C55892 * C8592 + C66407 + C66407 + C55292 * C9226 +
                       C55893 * C14727 + C66406 + C66406 + C55293 * C15367) *
                          C38612) *
                         C89783 * C1758 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C1757 -
                     ((C55893 * C23355 + C79743 + C79743 + C55293 * C23785 +
                       C55892 * C14727 + C79744 + C79744 + C55292 * C15367) *
                          C38612 +
                      (C79750 + C79749) * C38611) *
                         C89783 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
              C27265 * C55293) *
                 C38611 +
             (C72433 + C72434) * C38612) *
                C89999 -
            ((C76169 + C76170) * C38612 +
             (C27266 * C55293 + C27265 * C55292) * C38611) *
                C89907) *
               C5149 +
           (((C76170 + C76169) * C38611 +
             (C16874 * C55292 + C19044 * C55293) * C38612) *
                C89907 -
            ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) *
                C89999) *
               C89879) *
              C89990 +
          ((((C27268 * C55292 + C27269 * C55293) * C38611 +
             (C76171 + C76172) * C38612) *
                C89907 -
            ((C72438 + C72437) * C38612 +
             (C27268 * C55293 +
              (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                 C38611) *
                C89999) *
               C5149 +
           (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89999 -
            (((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C55293 +
              C16877 * C55292) *
                 C38612 +
             (C76172 + C76171) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                  C13338 +
              (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                  C89783) *
                 C55292 +
             ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                 C55293) *
                C89999 -
            (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) *
                 C55293 +
             ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                 C55292) *
                C89907) *
               C5149 +
           ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) *
                 C55292 +
             ((C79005 + C79006) * C13338 + (C79007 + C79008) * C89783) *
                 C55293) *
                C89907 -
            (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) *
                 C55293 +
             ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                  C89783 +
              (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                  C13338) *
                 C55292) *
                C89999) *
               C89879) *
              C89990 +
          (((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) *
                 C55292 +
             ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                 C55293) *
                C89907 -
            (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) *
                 C55293 +
             ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                 C55292) *
                C89999) *
               C5149 +
           ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) *
                 C55292 +
             ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                 C55293) *
                C89999 -
            (((C38700 * C14730 + C38612 * C14822 + C38699 * C6327 +
               C38611 * C6413) *
                  C89783 +
              (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
               C38611 * C6410) *
                  C13338) *
                 C55293 +
             ((C43537 + C43536) * C89783 + (C43535 + C43534) * C13338) *
                 C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C55428 * C106 + C55292 * C274 + C55429 * C1762 +
               C55293 * C1986) *
                  C13338 +
              (C55428 * C112 + C55292 * C280 + C55429 * C1770 +
               C55293 * C1994) *
                  C89783) *
                 C38611 +
             ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                 C38612) *
                C89999 -
            (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) *
                 C38612 +
             ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
               C55292 * C1994) *
                  C89783 +
              (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
               C55292 * C1986) *
                  C13338) *
                 C38611) *
                C89907) *
               C5149 +
           ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) *
                 C38611 +
             ((C55428 * C8592 + C55292 * C8758 + C55429 * C14727 +
               C55293 * C14897) *
                  C13338 +
              (C55428 * C8595 + C55292 * C8761 + C55429 * C14729 +
               C55293 * C14899) *
                  C89783) *
                 C38612) *
                C89907 -
            (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) *
                 C38612 +
             ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                 C38611) *
                C89999) *
               C89879) *
              C89990 +
          (((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) *
                 C38611 +
             ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                 C38612) *
                C89907 -
            (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) *
                 C38612 +
             ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                 C38611) *
                C89999) *
               C5149 +
           ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) *
                 C38611 +
             ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                 C38612) *
                C89999 -
            (((C55429 * C14730 + C55293 * C14900 + C55428 * C8594 +
               C55292 * C8760) *
                  C89783 +
              (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
               C55292 * C8757) *
                  C13338) *
                 C38612 +
             ((C60280 + C60279) * C89783 + (C60278 + C60277) * C13338) *
                 C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C13338 * C106 + C89783 * C112) * C38699 +
                        (C13338 * C187 + C89783 * C360) * C38611 +
                        C14184 * C38700 + C14185 * C38612) *
                           C55292 +
                       (C73713 + C73714 + C73715 + C73716) * C55293) *
                          C89999 -
                      ((C73717 + C73718 + C73719 + C73720) * C55293 +
                       (C73716 + C73715 + C73714 + C73713) * C55292) *
                          C89907) *
                         C5149 +
                     (((C76587 + C76588 + C76589 + C76590) * C55292 +
                       (C79217 + C79218 + C79219 + C79220) * C55293) *
                          C89907 -
                      ((C76590 + C76589 + C76588 + C76587) * C55293 +
                       (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                        C14184 * C38699) *
                           C55292) *
                          C89999) *
                         C89879) *
                        C89990 +
                    ((((C73721 + C73722 + C73723 + C73724) * C55292 +
                       (C73725 + C73726 + C73727 + C73728) * C55293) *
                          C89907 -
                      ((C73724 + C73723 + C73722 + C73721) * C55293 +
                       (C14191 * C38612 + C14190 * C38700 +
                        (C13338 * C188 + C89783 * C361) * C38611 +
                        (C13338 * C107 + C89783 * C113) * C38699) *
                           C55292) *
                          C89999) *
                         C5149 +
                     (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                        C14193 * C38612) *
                           C55292 +
                       (C76591 + C76592 + C76593 + C76594) * C55293) *
                          C89999 -
                      (((C13338 * C14820 + C89783 * C14976) * C38612 +
                        (C13338 * C14728 + C89783 * C14730) * C38700 +
                        C29862 * C38611 + C29861 * C38699) *
                           C55293 +
                       (C76594 + C76593 + C76592 + C76591) * C55292) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                        C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                           C89783 * C55292 +
                       (C73843 + C73844) * C89783 * C55293) *
                          C89999 -
                      ((C73845 + C73846) * C89783 * C55293 +
                       (C73844 + C73843) * C89783 * C55292) *
                          C89907) *
                         C5149 +
                     (((C76733 + C76734) * C89783 * C55292 +
                       (C79329 + C79330) * C89783 * C55293) *
                          C89907 -
                      ((C76734 + C76733) * C89783 * C55293 +
                       (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                        C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                           C89783 * C55292) *
                          C89999) *
                         C89879) *
                        C89990 +
                    ((((C40941 + C40940) * C89783 * C55292 +
                       (C40942 + C40943) * C89783 * C55293) *
                          C89907 -
                      ((C40940 + C40941) * C89783 * C55293 +
                       (C38973 + C38972) * C89783 * C55292) *
                          C89999) *
                         C5149 +
                     (((C39933 + C39932) * C89783 * C55292 +
                       (C43974 + C43975) * C89783 * C55293) *
                          C89999 -
                      ((C38936 * C14728 + C46552 + C46552 + C38612 * C15052 +
                        C38935 * C6324 + C46553 + C46553 + C38611 * C6647) *
                           C89783 * C55293 +
                       (C43975 + C43974) * C89783 * C55292) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C38699 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C38611 +
             (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
                C89783 * C89999 -
            ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
             (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C38611 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C38699) *
                C89783 * C89907) *
               C5149 +
           (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
             (C55428 * C8592 + C55292 * C8758 + C55429 * C14727 +
              C55293 * C14897) *
                 C38700 +
             (C55428 * C8678 + C55292 * C8995 + C55429 * C14819 +
              C55293 * C15139) *
                 C38612) *
                C89783 * C89907 -
            ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
             (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          ((((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
             (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
                C89783 * C89907 -
            ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
             (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
                C89783 * C89999) *
               C5149 +
           (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
             (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
                C89783 * C89999 -
            ((C55429 * C14820 + C55293 * C15140 + C55428 * C8677 +
              C55292 * C8994) *
                 C38612 +
             (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
              C55292 * C8757) *
                 C38700 +
             (C60680 + C60679) * C38611 + (C60278 + C60277) * C38699) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C13338 * C106 + C89783 * C112) * C55428 +
                        (C13338 * C274 + C89783 * C577) * C55292 +
                        C27565 * C55429 + C27859 * C55293) *
                           C38611 +
                       (C73065 + C73066 + C73067 + C73068) * C38612) *
                          C89999 -
                      ((C77001 + C77002 + C77003 + C77004) * C38612 +
                       (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                        C27565 * C55428) *
                           C38611) *
                          C89907) *
                         C5149 +
                     (((C77004 + C77003 + C77002 + C77001) * C38611 +
                       (C17229 * C55428 + C17563 * C55292 + C19300 * C55429 +
                        C19543 * C55293) *
                           C38612) *
                          C89907 -
                      ((C73069 + C73070 + C73071 + C73072) * C38612 +
                       (C73068 + C73067 + C73066 + C73065) * C38611) *
                          C89999) *
                         C89879) *
                        C89990 +
                    ((((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                        C27863 * C55293) *
                           C38611 +
                       (C77005 + C77006 + C77007 + C77008) * C38612) *
                          C89907 -
                      ((C73076 + C73075 + C73074 + C73073) * C38612 +
                       (C27862 * C55293 + C27571 * C55429 +
                        (C13338 * C275 + C89783 * C578) * C55292 +
                        (C13338 * C107 + C89783 * C113) * C55428) *
                           C38611) *
                          C89999) *
                         C5149 +
                     (((C73073 + C73074 + C73075 + C73076) * C38611 +
                       (C73077 + C73078 + C73079 + C73080) * C38612) *
                          C89999 -
                      (((C13338 * C14898 + C89783 * C15216) * C55293 +
                        (C13338 * C14728 + C89783 * C14730) * C55429 +
                        C17566 * C55292 + C17234 * C55428) *
                           C38612 +
                       (C77008 + C77007 + C77006 + C77005) * C38611) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C55428 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C55292 +
             (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
                C89783 * C89999 -
            ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
             (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
                C89783 * C89907) *
               C5149 +
           (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
             (C79005 + C79006) * C55429 + (C79639 + C79640) * C55293) *
                C89783 * C89907 -
            ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
             (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C55292 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C55428) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          ((((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
             (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
                C89783 * C89907 -
            ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
             (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
                C89783 * C89999) *
               C5149 +
           (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
             (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
                C89783 * C89999 -
            ((C38700 * C14898 + C38612 * C15292 + C38699 * C6490 +
              C38611 * C6881) *
                 C55293 +
             (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
              C38611 * C6410) *
                 C55429 +
             (C44387 + C44386) * C55292 + (C43535 + C43534) * C55428) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55892 * C106 + C55895 + C55895 + C55292 * C712 + C55893 * C1762 +
              C55896 + C55896 + C55293 * C2578) *
                 C38611 +
             (C73293 + C73294) * C38612) *
                C89783 * C89999 -
            ((C77283 + C77284) * C38612 +
             (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
              C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                 C38611) *
                C89783 * C89907) *
               C5149 +
           (((C77284 + C77283) * C38611 +
             (C55892 * C8592 + C66407 + C66407 + C55292 * C9226 +
              C55893 * C14727 + C66406 + C66406 + C55293 * C15367) *
                 C38612) *
                C89783 * C89907 -
            ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) * C89783 *
                C89999) *
               C89879) *
              C89990 +
          ((((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) * C89783 *
                C89907 -
            ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) * C89783 *
                C89999) *
               C5149 +
           (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) * C89783 *
                C89999 -
            ((C55893 * C14728 + C66404 + C66404 + C55293 * C15368 +
              C55892 * C8591 + C66405 + C66405 + C55292 * C9225) *
                 C38612 +
             (C61090 + C61089) * C38611) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexx[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C89843 * C5149 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
               C89879) *
              C5151 +
          (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C89843 *
               C89879 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          ((((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
             C28794 * C55293) *
                C38611 +
            (C74349 + C74355) * C38612) *
               C89843 * C5149 -
           (((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C55293 +
             C15456 * C55292) *
                C38612 +
            (C74355 + C74349) * C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
            C27265 * C55293) *
               C38611 +
           (C72433 + C72434) * C38612) *
              C89843 * C5796 -
          ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C89843 *
              C5797 +
          ((C72436 + C72435) * C38611 + (C78233 + C78234) * C38612) * C89843 *
              C5798 -
          (((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C55293 +
            C18512 * C55292) *
               C38612 +
           (C78234 + C78233) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C89843 * C5149 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C89843 * C89879) *
              C5151 +
          ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) * C55292 +
            ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                C55293) *
               C89843 * C89879 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C89843 * C5149) *
              C5152 +
          ((((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
            ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) *
                C55293) *
               C89843 * C5149 -
           (((C38700 * C8593 + C38612 * C8679 + C38699 * C4165 +
              C38611 * C4281) *
                 C89783 +
             (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
              C38611 * C4277) *
                 C13338) *
                C55293 +
            ((C41587 + C41586) * C89783 + (C41585 + C41584) * C13338) *
                C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C13338 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C89783) *
               C55292 +
           ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) * C55293) *
              C89843 * C5796 -
          (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
           ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                C89783 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C13338) *
               C55292) *
              C89843 * C5797 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C13338 +
            (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                C89783) *
               C55292 +
           ((C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
             C38612 * C16979) *
                C13338 +
            (C38699 * C8595 + C38611 * C8681 + C38700 * C16851 +
             C38612 * C16981) *
                C89783) *
               C55293) *
              C89843 * C5798 -
          (((C38700 * C21329 + C38612 * C21413 + C38699 * C16851 +
             C38611 * C16981) *
                C89783 +
            (C38700 * C21328 + C38612 * C21412 + C38699 * C16849 +
             C38611 * C16979) *
                C13338) *
               C55293 +
           ((C38700 * C13845 + C38612 * C13965 + C38699 * C5806 +
             C38611 * C5868) *
                C89783 +
            (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
             C38611 * C5865) *
                C13338) *
               C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C89843 * C5149 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C89843 * C89879) *
              C5151 +
          ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) * C38611 +
            ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                C38612) *
               C89843 * C89879 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C89843 * C5149) *
              C5152 +
          ((((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
            ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) *
                C38612) *
               C89843 * C5149 -
           (((C55429 * C8593 + C55293 * C8759 + C55428 * C840 +
              C55292 * C1064) *
                 C89783 +
             (C55429 * C8590 + C55293 * C8756 + C55428 * C832 +
              C55292 * C1056) *
                 C13338) *
                C38612 +
            ((C58308 + C58307) * C89783 + (C58306 + C58305) * C13338) *
                C38611) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C13338 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C89783) *
               C38611 +
           ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) * C38612) *
              C89843 * C5796 -
          (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
           ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) * C38611) *
              C89843 * C5797 +
          (((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
           ((C78375 + C78376) * C13338 + (C78377 + C78378) * C89783) * C38612) *
              C89843 * C5798 -
          (((C55429 * C21329 + C55293 * C21489 + C55428 * C13845 +
             C55292 * C14043) *
                C89783 +
            (C55429 * C21328 + C55293 * C21488 + C55428 * C13843 +
             C55292 * C14041) *
                C13338) *
               C38612 +
           ((C78378 + C78377) * C89783 + (C78376 + C78375) * C13338) * C38611) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C89843 * C5149 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                       C14193 * C38612) *
                          C55292 +
                      (C76591 + C76592 + C76593 + C76594) * C55293) *
                         C89843 * C89879 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C89843 * C5149) *
                        C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C38699 +
                       (C13338 * C189 + C89783 * C362) * C38611 +
                       C15693 * C38700 + C15694 * C38612) *
                          C55292 +
                      (C75545 + C75546 + C75547 + C75548) * C55293) *
                         C89843 * C5149 -
                     (((C13338 * C8676 + C89783 * C8836) * C38612 +
                       (C13338 * C8590 + C89783 * C8593) * C38700 +
                       C74655 * C38611 + C74654 * C38699) *
                          C55293 +
                      (C15696 * C38612 + C15695 * C38700 + C15694 * C38611 +
                       C15693 * C38699) *
                          C55292) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C38699 +
                      (C13338 * C187 + C89783 * C360) * C38611 +
                      C14184 * C38700 + C14185 * C38612) *
                         C55292 +
                     (C73713 + C73714 + C73715 + C73716) * C55293) *
                        C89843 * C5796 -
                    ((C76590 + C76589 + C76588 + C76587) * C55293 +
                     (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                      C14184 * C38699) *
                         C55292) *
                        C89843 * C5797 +
                    ((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                      C14188 * C38612) *
                         C55292 +
                     (C17229 * C38699 + C17228 * C38611 + C21579 * C38700 +
                      C21580 * C38612) *
                         C55293) *
                        C89843 * C5798 -
                    (((C13338 * C21412 + C89783 * C21573) * C38612 +
                      (C13338 * C21328 + C89783 * C21329) * C38700 +
                      C21580 * C38611 + C21579 * C38699) *
                         C55293 +
                     (C18683 * C38612 + C18682 * C38700 + C14188 * C38611 +
                      C14189 * C38699) *
                         C55292) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C89843 * C5149 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C89843 * C89879) *
                        C5151 +
                    (((C39933 + C39932) * C89783 * C55292 +
                      (C43974 + C43975) * C89783 * C55293) *
                         C89843 * C89879 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C89843 * C5149) *
                        C5152 +
                    (((C38975 + C38974) * C89783 * C55292 +
                      (C42836 + C42837) * C89783 * C55293) *
                         C89843 * C5149 -
                     ((C38936 * C8590 + C43968 + C43968 + C38612 * C8913 +
                       C38935 * C4161 + C43969 + C43969 + C38611 * C4615) *
                          C89783 * C55293 +
                      (C41909 + C41908) * C89783 * C55292) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C89783 * C55292 +
                     (C73843 + C73844) * C89783 * C55293) *
                        C89843 * C5796 -
                    ((C76734 + C76733) * C89783 * C55293 +
                     (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                      C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                         C89783 * C55292) *
                        C89843 * C5797 +
                    ((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                      C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                         C89783 * C55292 +
                     (C38935 * C8592 + C49527 + C49527 + C38611 * C8915 +
                      C38936 * C16849 + C49526 + C49526 + C38612 * C17333) *
                         C89783 * C55293) *
                        C89843 * C5798 -
                    ((C38936 * C21328 + C78511 + C78511 + C38612 * C21654 +
                      C38935 * C16849 + C78512 + C78512 + C38611 * C17333) *
                         C89783 * C55293 +
                     (C38936 * C13843 + C45762 + C45762 + C38612 * C14269 +
                      C38935 * C5803 + C45763 + C45763 + C38611 * C6030) *
                         C89783 * C55292) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C89843 * C5149 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
            (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
               C89783 * C89843 * C89879 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
            (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
               C89783 * C89843 * C5149 -
           ((C55429 * C8676 + C55293 * C8993 + C55428 * C942 + C55292 * C1362) *
                C38612 +
            (C55429 * C8590 + C55293 * C8756 + C55428 * C832 + C55292 * C1056) *
                C38700 +
            (C58608 + C58607) * C38611 + (C58306 + C58305) * C38699) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38699 +
           (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
               C38611 +
           (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
              C89783 * C89843 * C5796 -
          ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
           (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
              C89783 * C89843 * C5797 +
          ((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
           (C78375 + C78376) * C38700 + (C78583 + C78584) * C38612) *
              C89783 * C89843 * C5798 -
          ((C55429 * C21412 + C55293 * C21732 + C55428 * C13963 +
            C55292 * C14357) *
               C38612 +
           (C55429 * C21328 + C55293 * C21488 + C55428 * C13843 +
            C55292 * C14041) *
               C38700 +
           (C78584 + C78583) * C38611 + (C78376 + C78375) * C38699) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C89843 * C5149 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C89843 * C89879) *
                        C5151 +
                    (((C73073 + C73074 + C73075 + C73076) * C38611 +
                      (C73077 + C73078 + C73079 + C73080) * C38612) *
                         C89843 * C89879 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C89843 * C5149) *
                        C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C55428 +
                       (C13338 * C276 + C89783 * C579) * C55292 +
                       C29030 * C55429 + C29266 * C55293) *
                          C38611 +
                      (C74950 + C74951 + C74952 + C74956) * C38612) *
                         C89843 * C5149 -
                     (((C13338 * C8756 + C89783 * C9070) * C55293 +
                       (C13338 * C8590 + C89783 * C8593) * C55429 +
                       C15929 * C55292 + C15695 * C55428) *
                          C38612 +
                      (C74956 + C74952 + C74951 + C74950) * C38611) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C55428 +
                      (C13338 * C274 + C89783 * C577) * C55292 +
                      C27565 * C55429 + C27859 * C55293) *
                         C38611 +
                     (C73065 + C73066 + C73067 + C73068) * C38612) *
                        C89843 * C5796 -
                    ((C73069 + C73070 + C73071 + C73072) * C38612 +
                     (C73068 + C73067 + C73066 + C73065) * C38611) *
                        C89843 * C5797 +
                    ((C73072 + C73071 + C73070 + C73069) * C38611 +
                     (C78651 + C78652 + C78653 + C78654) * C38612) *
                        C89843 * C5798 -
                    (((C13338 * C21488 + C89783 * C21810) * C55293 +
                      (C13338 * C21328 + C89783 * C21329) * C55429 +
                      C18847 * C55292 + C18682 * C55428) *
                         C38612 +
                     (C78654 + C78653 + C78652 + C78651) * C38611) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C89843 * C5149 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
            (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
               C89783 * C89843 * C89879 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
            (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
               C89783 * C89843 * C5149 -
           ((C38700 * C8756 + C38612 * C9147 + C38699 * C4395 +
             C38611 * C4945) *
                C55293 +
            (C38700 * C8590 + C38612 * C8676 + C38699 * C4161 +
             C38611 * C4277) *
                C55429 +
            (C42219 + C42218) * C55292 + (C41585 + C41584) * C55428) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C55428 +
           (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
               C55292 +
           (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
              C89783 * C89843 * C5796 -
          ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
           (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 + C38611 * C1543) *
               C55292 +
           (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
               C55428) *
              C89783 * C89843 * C5797 +
          ((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
               C55428 +
           (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 + C38612 * C6192) *
               C55292 +
           (C38699 * C8592 + C38611 * C8678 + C38700 * C16849 +
            C38612 * C16979) *
               C55429 +
           (C38699 * C8758 + C38611 * C9149 + C38700 * C17081 +
            C38612 * C17668) *
               C55293) *
              C89783 * C89843 * C5798 -
          ((C38700 * C21488 + C38612 * C21891 + C38699 * C17081 +
            C38611 * C17668) *
               C55293 +
           (C38700 * C21328 + C38612 * C21412 + C38699 * C16849 +
            C38611 * C16979) *
               C55429 +
           (C38700 * C14041 + C38612 * C14553 + C38699 * C5921 +
            C38611 * C6192) *
               C55292 +
           (C38700 * C13843 + C38612 * C13963 + C38699 * C5803 +
            C38611 * C5865) *
               C55428) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[24] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C89843 * C5149 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C89843 * C89879) *
                        C5151 +
                    (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) *
                         C89783 * C89843 * C89879 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C89843 * C5149) *
                        C5152 +
                    (((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                         C89783 * C89843 * C5149 -
                     ((C55893 * C8590 + C56893 + C56893 + C55293 * C9224 +
                       C55892 * C832 + C56894 + C56894 + C55292 * C1648) *
                          C38612 +
                      (C58918 + C58917) * C38611) *
                         C89783 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C38611 +
                     (C73293 + C73294) * C38612) *
                        C89783 * C89843 * C5796 -
                    ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                        C89783 * C89843 * C5797 +
                    ((C73296 + C73295) * C38611 + (C78797 + C78798) * C38612) *
                        C89783 * C89843 * C5798 -
                    ((C55893 * C21328 + C78791 + C78791 + C55293 * C21966 +
                      C55892 * C13843 + C78792 + C78792 + C55292 * C14629) *
                         C38612 +
                     (C78798 + C78797) * C38611) *
                        C89783 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
              C27265 * C55293) *
                 C38611 +
             (C72433 + C72434) * C38612) *
                C9304 -
            ((C76169 + C76170) * C38612 +
             (C27266 * C55293 + C27265 * C55292) * C38611) *
                C89907) *
               C89998 +
           (((C76170 + C76169) * C38611 + (C81901 + C81902) * C38612) * C89907 -
            ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C9304) *
               C89879) *
              C89990 +
          ((((C27268 * C55292 + C27269 * C55293) * C38611 +
             (C76171 + C76172) * C38612) *
                C89907 -
            ((C72438 + C72437) * C38612 +
             (C27268 * C55293 +
              (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                 C38611) *
                C9304) *
               C89998 +
           (((C72437 + C72438) * C38611 + (C72439 + C72440) * C38612) * C9304 -
            (((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C55293 +
              C16877 * C55292) *
                 C38612 +
             (C76172 + C76171) * C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                  C13338 +
              (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                  C89783) *
                 C55292 +
             ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                 C55293) *
                C9304 -
            (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) *
                 C55293 +
             ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                 C55292) *
                C89907) *
               C89998 +
           ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) *
                 C55292 +
             ((C79005 + C79006) * C13338 + (C79007 + C79008) * C89783) *
                 C55293) *
                C89907 -
            (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) *
                 C55293 +
             ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                  C89783 +
              (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                  C13338) *
                 C55292) *
                C9304) *
               C89879) *
              C89990 +
          (((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) *
                 C55292 +
             ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                 C55293) *
                C89907 -
            (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) *
                 C55293 +
             ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                 C55292) *
                C9304) *
               C89998 +
           ((((C39541 + C39540) * C13338 + (C39539 + C39538) * C89783) *
                 C55292 +
             ((C43534 + C43535) * C13338 + (C43536 + C43537) * C89783) *
                 C55293) *
                C9304 -
            (((C38700 * C14730 + C38612 * C14822 + C38699 * C6327 +
               C38611 * C6413) *
                  C89783 +
              (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
               C38611 * C6410) *
                  C13338) *
                 C55293 +
             ((C43537 + C43536) * C89783 + (C43535 + C43534) * C13338) *
                 C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C55428 * C106 + C55292 * C274 + C55429 * C1762 +
               C55293 * C1986) *
                  C13338 +
              (C55428 * C112 + C55292 * C280 + C55429 * C1770 +
               C55293 * C1994) *
                  C89783) *
                 C38611 +
             ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                 C38612) *
                C9304 -
            (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) *
                 C38612 +
             ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
               C55292 * C1994) *
                  C89783 +
              (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
               C55292 * C1986) *
                  C13338) *
                 C38611) *
                C89907) *
               C89998 +
           ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) *
                 C38611 +
             ((C82119 + C82120) * C13338 + (C82121 + C82122) * C89783) *
                 C38612) *
                C89907 -
            (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) *
                 C38612 +
             ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                 C38611) *
                C9304) *
               C89879) *
              C89990 +
          (((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) *
                 C38611 +
             ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                 C38612) *
                C89907 -
            (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) *
                 C38612 +
             ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                 C38611) *
                C9304) *
               C89998 +
           ((((C56254 + C56253) * C13338 + (C56252 + C56251) * C89783) *
                 C38611 +
             ((C56255 + C56256) * C13338 + (C56257 + C56258) * C89783) *
                 C38612) *
                C9304 -
            (((C55429 * C14730 + C55293 * C14900 + C55428 * C8594 +
               C55292 * C8760) *
                  C89783 +
              (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
               C55292 * C8757) *
                  C13338) *
                 C38612 +
             ((C60280 + C60279) * C89783 + (C60278 + C60277) * C13338) *
                 C38611) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C13338 * C106 + C89783 * C112) * C38699 +
                        (C13338 * C187 + C89783 * C360) * C38611 +
                        C14184 * C38700 + C14185 * C38612) *
                           C55292 +
                       (C73713 + C73714 + C73715 + C73716) * C55293) *
                          C9304 -
                      ((C73717 + C73718 + C73719 + C73720) * C55293 +
                       (C73716 + C73715 + C73714 + C73713) * C55292) *
                          C89907) *
                         C89998 +
                     (((C76587 + C76588 + C76589 + C76590) * C55292 +
                       (C79217 + C79218 + C79219 + C79220) * C55293) *
                          C89907 -
                      ((C76590 + C76589 + C76588 + C76587) * C55293 +
                       (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                        C14184 * C38699) *
                           C55292) *
                          C9304) *
                         C89879) *
                        C89990 +
                    ((((C73721 + C73722 + C73723 + C73724) * C55292 +
                       (C73725 + C73726 + C73727 + C73728) * C55293) *
                          C89907 -
                      ((C73724 + C73723 + C73722 + C73721) * C55293 +
                       (C14191 * C38612 + C14190 * C38700 +
                        (C13338 * C188 + C89783 * C361) * C38611 +
                        (C13338 * C107 + C89783 * C113) * C38699) *
                           C55292) *
                          C9304) *
                         C89998 +
                     (((C14190 * C38699 + C14191 * C38611 + C14192 * C38700 +
                        C14193 * C38612) *
                           C55292 +
                       (C76591 + C76592 + C76593 + C76594) * C55293) *
                          C9304 -
                      (((C13338 * C14820 + C89783 * C14976) * C38612 +
                        (C13338 * C14728 + C89783 * C14730) * C38700 +
                        C29862 * C38611 + C29861 * C38699) *
                           C55293 +
                       (C76594 + C76593 + C76592 + C76591) * C55292) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                        C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                           C89783 * C55292 +
                       (C73843 + C73844) * C89783 * C55293) *
                          C9304 -
                      ((C73845 + C73846) * C89783 * C55293 +
                       (C73844 + C73843) * C89783 * C55292) *
                          C89907) *
                         C89998 +
                     (((C76733 + C76734) * C89783 * C55292 +
                       (C79329 + C79330) * C89783 * C55293) *
                          C89907 -
                      ((C76734 + C76733) * C89783 * C55293 +
                       (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                        C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                           C89783 * C55292) *
                          C9304) *
                         C89879) *
                        C89990 +
                    ((((C40941 + C40940) * C89783 * C55292 +
                       (C40942 + C40943) * C89783 * C55293) *
                          C89907 -
                      ((C40940 + C40941) * C89783 * C55293 +
                       (C38973 + C38972) * C89783 * C55292) *
                          C9304) *
                         C89998 +
                     (((C39933 + C39932) * C89783 * C55292 +
                       (C43974 + C43975) * C89783 * C55293) *
                          C9304 -
                      ((C38936 * C14728 + C46552 + C46552 + C38612 * C15052 +
                        C38935 * C6324 + C46553 + C46553 + C38611 * C6647) *
                           C89783 * C55293 +
                       (C43975 + C43974) * C89783 * C55292) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C38699 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C38611 +
             (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
                C89783 * C9304 -
            ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
             (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C38611 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C38699) *
                C89783 * C89907) *
               C89998 +
           (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
             (C82119 + C82120) * C38700 + (C82437 + C82438) * C38612) *
                C89783 * C89907 -
            ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
             (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          ((((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
             (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
                C89783 * C89907 -
            ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
             (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
                C89783 * C9304) *
               C89998 +
           (((C56254 + C56253) * C38699 + (C56567 + C56566) * C38611 +
             (C56255 + C56256) * C38700 + (C56568 + C56569) * C38612) *
                C89783 * C9304 -
            ((C55429 * C14820 + C55293 * C15140 + C55428 * C8677 +
              C55292 * C8994) *
                 C38612 +
             (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
              C55292 * C8757) *
                 C38700 +
             (C60680 + C60679) * C38611 + (C60278 + C60277) * C38699) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C13338 * C106 + C89783 * C112) * C55428 +
                        (C13338 * C274 + C89783 * C577) * C55292 +
                        C27565 * C55429 + C27859 * C55293) *
                           C38611 +
                       (C73065 + C73066 + C73067 + C73068) * C38612) *
                          C9304 -
                      ((C77001 + C77002 + C77003 + C77004) * C38612 +
                       (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                        C27565 * C55428) *
                           C38611) *
                          C89907) *
                         C89998 +
                     (((C77004 + C77003 + C77002 + C77001) * C38611 +
                       (C82537 + C82538 + C82539 + C82540) * C38612) *
                          C89907 -
                      ((C73069 + C73070 + C73071 + C73072) * C38612 +
                       (C73068 + C73067 + C73066 + C73065) * C38611) *
                          C9304) *
                         C89879) *
                        C89990 +
                    ((((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                        C27863 * C55293) *
                           C38611 +
                       (C77005 + C77006 + C77007 + C77008) * C38612) *
                          C89907 -
                      ((C73076 + C73075 + C73074 + C73073) * C38612 +
                       (C27862 * C55293 + C27571 * C55429 +
                        (C13338 * C275 + C89783 * C578) * C55292 +
                        (C13338 * C107 + C89783 * C113) * C55428) *
                           C38611) *
                          C9304) *
                         C89998 +
                     (((C73073 + C73074 + C73075 + C73076) * C38611 +
                       (C73077 + C73078 + C73079 + C73080) * C38612) *
                          C9304 -
                      (((C13338 * C14898 + C89783 * C15216) * C55293 +
                        (C13338 * C14728 + C89783 * C14730) * C55429 +
                        C17566 * C55292 + C17234 * C55428) *
                           C38612 +
                       (C77008 + C77007 + C77006 + C77005) * C38611) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C55428 +
             (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                 C55292 +
             (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
                C89783 * C9304 -
            ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
             (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
                C89783 * C89907) *
               C89998 +
           (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
             (C79005 + C79006) * C55429 + (C79639 + C79640) * C55293) *
                C89783 * C89907 -
            ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
             (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
              C38611 * C1543) *
                 C55292 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C55428) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          ((((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
             (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
                C89783 * C89907 -
            ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
             (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
                C89783 * C9304) *
               C89998 +
           (((C39541 + C39540) * C55428 + (C40271 + C40270) * C55292 +
             (C43534 + C43535) * C55429 + (C44386 + C44387) * C55293) *
                C89783 * C9304 -
            ((C38700 * C14898 + C38612 * C15292 + C38699 * C6490 +
              C38611 * C6881) *
                 C55293 +
             (C38700 * C14728 + C38612 * C14820 + C38699 * C6324 +
              C38611 * C6410) *
                 C55429 +
             (C44387 + C44386) * C55292 + (C43535 + C43534) * C55428) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55892 * C106 + C55895 + C55895 + C55292 * C712 + C55893 * C1762 +
              C55896 + C55896 + C55293 * C2578) *
                 C38611 +
             (C73293 + C73294) * C38612) *
                C89783 * C9304 -
            ((C77283 + C77284) * C38612 +
             (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
              C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                 C38611) *
                C89783 * C89907) *
               C89998 +
           (((C77284 + C77283) * C38611 + (C82753 + C82754) * C38612) * C89783 *
                C89907 -
            ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) * C89783 *
                C9304) *
               C89879) *
              C89990 +
          ((((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) * C89783 *
                C89907 -
            ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) * C89783 *
                C9304) *
               C89998 +
           (((C56904 + C56903) * C38611 + (C56905 + C56906) * C38612) * C89783 *
                C9304 -
            ((C55893 * C14728 + C66404 + C66404 + C55293 * C15368 +
              C55892 * C8591 + C66405 + C66405 + C55292 * C9225) *
                 C38612 +
             (C61090 + C61089) * C38611) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C90026 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C90027 +
           ((C27266 * C55292 + C27267 * C55293) * C38611 +
            (C78897 + C78898) * C38612) *
               C12024) *
              C89998 +
          (((C76170 + C76169) * C38611 + (C81901 + C81902) * C38612) * C90027 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C90026 -
           (((C13337 * C23355 + C23362 + C23362 + C89783 * C23359) * C55293 +
             C19044 * C55292) *
                C38612 +
            (C78898 + C78897) * C38611) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexy[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C90026 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C90027 +
           (((C73516 + C73515) * C13338 + (C73514 + C73513) * C89783) * C55292 +
            ((C84659 + C84660) * C13338 + (C84661 + C84662) * C89783) *
                C55293) *
               C12024) *
              C89998 +
          ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) * C55292 +
            ((C79005 + C79006) * C13338 + (C79007 + C79008) * C89783) *
                C55293) *
               C90027 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C90026 -
           (((C38700 * C23357 + C38612 * C23416 + C38699 * C23358 +
              C38611 * C23417) *
                 C89783 +
             (C38700 * C23355 + C38612 * C23414 + C38699 * C23356 +
              C38611 * C23415) *
                 C13338) *
                C55293 +
            ((C79008 + C79007) * C89783 + (C79006 + C79005) * C13338) *
                C55292) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eexz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C90026 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C90027 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C13338 +
             (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
              C55293 * C10741) *
                 C89783) *
                C38611 +
            ((C79115 + C79116) * C13338 + (C79117 + C79118) * C89783) *
                C38612) *
               C12024) *
              C89998 +
          ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) * C38611 +
            ((C82119 + C82120) * C13338 + (C82121 + C82122) * C89783) *
                C38612) *
               C90027 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C90026 -
           (((C55429 * C23357 + C55293 * C23470 + C55428 * C14729 +
              C55292 * C14899) *
                 C89783 +
             (C55429 * C23355 + C55293 * C23468 + C55428 * C14727 +
              C55292 * C14897) *
                 C13338) *
                C38612 +
            ((C79118 + C79117) * C89783 + (C79116 + C79115) * C13338) *
                C38611) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyx[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C90026 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C90027 +
                     ((C73720 + C73719 + C73718 + C73717) * C55292 +
                      (C84795 + C84796 + C84797 + C84798) * C55293) *
                         C12024) *
                        C89998 +
                    (((C76587 + C76588 + C76589 + C76590) * C55292 +
                      (C79217 + C79218 + C79219 + C79220) * C55293) *
                         C90027 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C90026 -
                     (((C13338 * C23414 + C89783 * C23522) * C38612 +
                       (C13338 * C23355 + C89783 * C23357) * C38700 +
                       C31845 * C38611 + C31844 * C38699) *
                          C55293 +
                      (C79220 + C79219 + C79218 + C79217) * C55292) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C90026 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C90027 +
                     ((C73846 + C73845) * C89783 * C55292 +
                      (C84875 + C84876) * C89783 * C55293) *
                         C12024) *
                        C89998 +
                    (((C76733 + C76734) * C89783 * C55292 +
                      (C79329 + C79330) * C89783 * C55293) *
                         C90027 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C90026 -
                     ((C38936 * C23355 + C79323 + C79323 + C38612 * C23574 +
                       C38935 * C23356 + C79324 + C79324 + C38611 * C23575) *
                          C89783 * C55293 +
                      (C79330 + C79329) * C89783 * C55292) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C90026 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C90027 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38699 +
            (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
             C55293 * C10903) *
                C38611 +
            (C79115 + C79116) * C38700 + (C79433 + C79434) * C38612) *
               C89783 * C12024) *
              C89998 +
          (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
            (C82119 + C82120) * C38700 + (C82437 + C82438) * C38612) *
               C89783 * C90027 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C90026 -
           ((C55429 * C23414 + C55293 * C23629 + C55428 * C14819 +
             C55292 * C15139) *
                C38612 +
            (C55429 * C23355 + C55293 * C23468 + C55428 * C14727 +
             C55292 * C14897) *
                C38700 +
            (C79434 + C79433) * C38611 + (C79116 + C79115) * C38699) *
               C89783 * C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C90026 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C90027 +
                     ((C27567 * C55428 + C27860 * C55292 + C27570 * C55429 +
                       C27861 * C55293) *
                          C38611 +
                      (C79533 + C79534 + C79535 + C79536) * C38612) *
                         C12024) *
                        C89998 +
                    (((C77004 + C77003 + C77002 + C77001) * C38611 +
                      (C82537 + C82538 + C82539 + C82540) * C38612) *
                         C90027 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C90026 -
                     (((C13338 * C23468 + C89783 * C23681) * C55293 +
                       (C13338 * C23355 + C89783 * C23357) * C55429 +
                       C19543 * C55292 + C19300 * C55428) *
                          C38612 +
                      (C79536 + C79535 + C79534 + C79533) * C38611) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eezy[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C90026 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C90027 +
           ((C73516 + C73515) * C55428 + (C74152 + C74151) * C55292 +
            (C84659 + C84660) * C55429 + (C85079 + C85080) * C55293) *
               C89783 * C12024) *
              C89998 +
          (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
            (C79005 + C79006) * C55429 + (C79639 + C79640) * C55293) *
               C89783 * C90027 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C90026 -
           ((C38700 * C23468 + C38612 * C23733 + C38699 * C23469 +
             C38611 * C23734) *
                C55293 +
            (C38700 * C23355 + C38612 * C23414 + C38699 * C23356 +
             C38611 * C23415) *
                C55429 +
            (C79640 + C79639) * C55292 + (C79006 + C79005) * C55428) *
               C89783 * C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezz[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C90026 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C90027 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C38611 +
                      (C79749 + C79750) * C38612) *
                         C89783 * C12024) *
                        C89998 +
                    (((C77284 + C77283) * C38611 + (C82753 + C82754) * C38612) *
                         C89783 * C90027 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C90026 -
                     ((C55893 * C23355 + C79743 + C79743 + C55293 * C23785 +
                       C55892 * C14727 + C79744 + C79744 + C55292 * C15367) *
                          C38612 +
                      (C79750 + C79749) * C38611) *
                         C89783 * C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C9304 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C89907) *
              C822 +
          (((C76170 + C76169) * C38611 + (C81901 + C81902) * C38612) * C89907 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C9304) *
              C823 +
          (((C72436 + C72435) * C38611 + (C78233 + C78234) * C38612) * C9304 -
           (((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C55293 +
             C21337 * C55292) *
                C38612 +
            (C81902 + C81901) * C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C9304 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C89907) *
              C89827 * C5151 +
          (((C27268 * C55292 + C27269 * C55293) * C38611 +
            (C76171 + C76172) * C38612) *
               C89907 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          ((((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
             C28794 * C55293) *
                C38611 +
            (C74349 + C74355) * C38612) *
               C9304 -
           (((C13337 * C6323 + C28115 + C28115 + C89783 * C6329) * C55293 +
             C74354 * C55292) *
                C38612 +
            (C28795 * C55293 + C28794 * C55292) * C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
            C27265 * C55293) *
               C38611 +
           (C72433 + C72434) * C38612) *
              C10614 -
          ((C76169 + C76170) * C38612 +
           (C27266 * C55293 + C27265 * C55292) * C38611) *
              C10615 +
          ((C27266 * C55292 + C27267 * C55293) * C38611 +
           (C78897 + C78898) * C38612) *
              C10616 -
          (((C13337 * C31593 + C31599 + C31599 + C89783 * C31595) * C55293 +
            C31602 * C55292) *
               C38612 +
           (C35885 * C55293 + C27267 * C55292) * C38611) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C9304 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C89907) *
              C822 +
          ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) * C55292 +
            ((C79005 + C79006) * C13338 + (C79007 + C79008) * C89783) *
                C55293) *
               C89907 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C9304) *
              C823 +
          ((((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C13338 +
             (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                 C89783) *
                C55292 +
            ((C82009 + C82010) * C13338 + (C82011 + C82012) * C89783) *
                C55293) *
               C9304 -
           (((C38700 * C19031 + C38612 * C19121 + C38699 * C14729 +
              C38611 * C14821) *
                 C89783 +
             (C38700 * C19030 + C38612 * C19120 + C38699 * C14727 +
              C38611 * C14819) *
                 C13338) *
                C55293 +
            ((C82012 + C82011) * C89783 + (C82010 + C82009) * C13338) *
                C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C9304 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C89907) *
              C89827 * C5151 +
          ((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) * C55292 +
            ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                C55293) *
               C89907 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C9304) *
              C89827 * C5152 +
          ((((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
            ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) *
                C55293) *
               C9304 -
           (((C38700 * C6326 + C38612 * C6412 + C38699 * C1773 +
              C38611 * C1883) *
                 C89783 +
             (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
              C38611 * C1875) *
                 C13338) *
                C55293 +
            ((C42531 + C42530) * C89783 + (C42529 + C42528) * C13338) *
                C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C13338 +
            (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                C89783) *
               C55292 +
           ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) * C55293) *
              C10614 -
          (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
           ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) * C55292) *
              C10615 +
          (((C73516 + C73515) * C13338 + (C73514 + C73513) * C89783) * C55292 +
           ((C84659 + C84660) * C13338 + (C84661 + C84662) * C89783) * C55293) *
              C10616 -
          (((C38700 * C31594 + C38612 * C31677 + C38699 * C27233 +
             C38611 * C27346) *
                C89783 +
            (C38700 * C31593 + C38612 * C31676 + C38699 * C27231 +
             C38611 * C27344) *
                C13338) *
               C55293 +
           ((C84662 + C84661) * C89783 + (C84660 + C84659) * C13338) * C55292) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C9304 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C89907) *
              C822 +
          ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) * C38611 +
            ((C82119 + C82120) * C13338 + (C82121 + C82122) * C89783) *
                C38612) *
               C89907 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C9304) *
              C823 +
          ((((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
            ((C78375 + C78376) * C13338 + (C78377 + C78378) * C89783) *
                C38612) *
               C9304 -
           (((C55429 * C19031 + C55293 * C19197 + C55428 * C16851 +
              C55292 * C17083) *
                 C89783 +
             (C55429 * C19030 + C55293 * C19196 + C55428 * C16849 +
              C55292 * C17081) *
                 C13338) *
                C38612 +
            ((C82122 + C82121) * C89783 + (C82120 + C82119) * C13338) *
                C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C9304 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C89907) *
              C89827 * C5151 +
          ((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) * C38611 +
            ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                C38612) *
               C89907 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          ((((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
            ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) *
                C38612) *
               C9304 -
           (((C55429 * C6326 + C55293 * C6492 + C55428 * C4165 +
              C55292 * C4399) *
                 C89783 +
             (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
              C55292 * C4395) *
                 C13338) *
                C38612 +
            ((C59240 + C59239) * C89783 + (C59238 + C59237) * C13338) *
                C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C13338 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C89783) *
               C38611 +
           ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) * C38612) *
              C10614 -
          (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
           ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C89783 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C13338) *
               C38611) *
              C10615 +
          (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C13338 +
            (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
             C55293 * C10741) *
                C89783) *
               C38611 +
           ((C79115 + C79116) * C13338 + (C79117 + C79118) * C89783) * C38612) *
              C10616 -
          (((C55429 * C31594 + C55293 * C31762 + C55428 * C23358 +
             C55292 * C23471) *
                C89783 +
            (C55429 * C31593 + C55293 * C31761 + C55428 * C23356 +
             C55292 * C23469) *
                C13338) *
               C38612 +
           ((C55429 * C27233 + C55293 * C27462 + C55428 * C10623 +
             C55292 * C10741) *
                C89783 +
            (C55429 * C27231 + C55293 * C27460 + C55428 * C10620 +
             C55292 * C10738) *
                C13338) *
               C38611) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C9304 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C89907) *
                        C822 +
                    (((C76587 + C76588 + C76589 + C76590) * C55292 +
                      (C79217 + C79218 + C79219 + C79220) * C55293) *
                         C89907 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C9304) *
                        C823 +
                    (((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                       C14188 * C38612) *
                          C55292 +
                      (C82221 + C82222 + C82223 + C82224) * C55293) *
                         C9304 -
                     (((C13338 * C19120 + C89783 * C19288) * C38612 +
                       (C13338 * C19030 + C89783 * C19031) * C38700 +
                       C19301 * C38611 + C19300 * C38699) *
                          C55293 +
                      (C82224 + C82223 + C82222 + C82221) * C55292) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C9304 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C89907) *
                        C89827 * C5151 +
                    (((C73721 + C73722 + C73723 + C73724) * C55292 +
                      (C73725 + C73726 + C73727 + C73728) * C55293) *
                         C89907 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C9304) *
                        C89827 * C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C38699 +
                       (C13338 * C189 + C89783 * C362) * C38611 +
                       C15693 * C38700 + C15694 * C38612) *
                          C55292 +
                      (C75545 + C75546 + C75547 + C75548) * C55293) *
                         C9304 -
                     (((C13338 * C6409 + C89783 * C6569) * C38612 +
                       (C13338 * C6323 + C89783 * C6326) * C38700 +
                       C29033 * C38611 + C29032 * C38699) *
                          C55293 +
                      (C75548 + C75547 + C75546 + C75545) * C55292) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C38699 +
                      (C13338 * C187 + C89783 * C360) * C38611 +
                      C14184 * C38700 + C14185 * C38612) *
                         C55292 +
                     (C73713 + C73714 + C73715 + C73716) * C55293) *
                        C10614 -
                    ((C73717 + C73718 + C73719 + C73720) * C55293 +
                     (C73716 + C73715 + C73714 + C73713) * C55292) *
                        C10615 +
                    ((C73720 + C73719 + C73718 + C73717) * C55292 +
                     (C84795 + C84796 + C84797 + C84798) * C55293) *
                        C10616 -
                    (((C13338 * C31676 + C89783 * C31837) * C38612 +
                      (C13338 * C31593 + C89783 * C31594) * C38700 +
                      C36056 * C38611 + C36055 * C38699) *
                         C55293 +
                     (C84798 + C84797 + C84796 + C84795) * C55292) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C9304 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C89907) *
                        C822 +
                    (((C76733 + C76734) * C89783 * C55292 +
                      (C79329 + C79330) * C89783 * C55293) *
                         C89907 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C9304) *
                        C823 +
                    (((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C89783 * C55292 +
                      (C82333 + C82334) * C89783 * C55293) *
                         C9304 -
                     ((C38936 * C19030 + C82327 + C82327 + C38612 * C19375 +
                       C38935 * C14727 + C82328 + C82328 + C38611 * C15051) *
                          C89783 * C55293 +
                      (C82334 + C82333) * C89783 * C55292) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C9304 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C89907) *
                        C89827 * C5151 +
                    (((C40941 + C40940) * C89783 * C55292 +
                      (C40942 + C40943) * C89783 * C55293) *
                         C89907 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C9304) *
                        C89827 * C5152 +
                    (((C38975 + C38974) * C89783 * C55292 +
                      (C42836 + C42837) * C89783 * C55293) *
                         C9304 -
                     ((C38936 * C6323 + C40930 + C40930 + C38612 * C6646 +
                       C38935 * C1765 + C40931 + C40931 + C38611 * C2185) *
                          C89783 * C55293 +
                      (C42837 + C42836) * C89783 * C55292) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                      C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                         C89783 * C55292 +
                     (C73843 + C73844) * C89783 * C55293) *
                        C10614 -
                    ((C73845 + C73846) * C89783 * C55293 +
                     (C73844 + C73843) * C89783 * C55292) *
                        C10615 +
                    ((C73846 + C73845) * C89783 * C55292 +
                     (C84875 + C84876) * C89783 * C55293) *
                        C10616 -
                    ((C38936 * C31593 + C84869 + C84869 + C38612 * C31921 +
                      C38935 * C27231 + C84870 + C84870 + C38611 * C27664) *
                         C89783 * C55293 +
                     (C84876 + C84875) * C89783 * C55292) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C9304 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C89907) *
              C822 +
          (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
            (C82119 + C82120) * C38700 + (C82437 + C82438) * C38612) *
               C89783 * C89907 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C9304) *
              C823 +
          (((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
            (C78375 + C78376) * C38700 + (C78583 + C78584) * C38612) *
               C89783 * C9304 -
           ((C55429 * C19120 + C55293 * C19453 + C55428 * C16979 +
             C55292 * C17439) *
                C38612 +
            (C55429 * C19030 + C55293 * C19196 + C55428 * C16849 +
             C55292 * C17081) *
                C38700 +
            (C82438 + C82437) * C38611 + (C82120 + C82119) * C38699) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C9304 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
            (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
               C89783 * C89907 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
            (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
               C89783 * C9304 -
           ((C55429 * C6409 + C55293 * C6726 + C55428 * C4277 +
             C55292 * C4731) *
                C38612 +
            (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
             C55292 * C4395) *
                C38700 +
            (C59554 + C59553) * C38611 + (C59238 + C59237) * C38699) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38699 +
           (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
               C38611 +
           (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
              C89783 * C10614 -
          ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
           (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 + C55292 * C2292) *
               C38611 +
           (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 + C55292 * C1986) *
               C38699) *
              C89783 * C10615 +
          ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
            C55293 * C10738) *
               C38699 +
           (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
            C55293 * C10903) *
               C38611 +
           (C79115 + C79116) * C38700 + (C79433 + C79434) * C38612) *
              C89783 * C10616 -
          ((C55429 * C31676 + C55293 * C32003 + C55428 * C23415 +
            C55292 * C23630) *
               C38612 +
           (C55429 * C31593 + C55293 * C31761 + C55428 * C23356 +
            C55292 * C23469) *
               C38700 +
           (C55429 * C27344 + C55293 * C27768 + C55428 * C10682 +
            C55292 * C10903) *
               C38611 +
           (C55429 * C27231 + C55293 * C27460 + C55428 * C10620 +
            C55292 * C10738) *
               C38699) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C9304 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C89907) *
                        C822 +
                    (((C77004 + C77003 + C77002 + C77001) * C38611 +
                      (C82537 + C82538 + C82539 + C82540) * C38612) *
                         C89907 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C9304) *
                        C823 +
                    (((C73072 + C73071 + C73070 + C73069) * C38611 +
                      (C78651 + C78652 + C78653 + C78654) * C38612) *
                         C9304 -
                     (((C13338 * C19196 + C89783 * C19534) * C55293 +
                       (C13338 * C19030 + C89783 * C19031) * C55429 +
                       C21816 * C55292 + C21579 * C55428) *
                          C38612 +
                      (C82540 + C82539 + C82538 + C82537) * C38611) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C9304 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C89907) *
                        C89827 * C5151 +
                    (((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                       C27863 * C55293) *
                          C38611 +
                      (C77005 + C77006 + C77007 + C77008) * C38612) *
                         C89907 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C9304) *
                        C89827 * C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C55428 +
                       (C13338 * C276 + C89783 * C579) * C55292 +
                       C29030 * C55429 + C29266 * C55293) *
                          C38611 +
                      (C74950 + C74951 + C74952 + C74956) * C38612) *
                         C9304 -
                     (((C13338 * C6489 + C89783 * C6803) * C55293 +
                       (C13338 * C6323 + C89783 * C6326) * C55429 +
                       C74955 * C55292 + C74654 * C55428) *
                          C38612 +
                      (C29267 * C55293 + C29032 * C55429 + C29266 * C55292 +
                       C29030 * C55428) *
                          C38611) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C55428 +
                      (C13338 * C274 + C89783 * C577) * C55292 +
                      C27565 * C55429 + C27859 * C55293) *
                         C38611 +
                     (C73065 + C73066 + C73067 + C73068) * C38612) *
                        C10614 -
                    ((C77001 + C77002 + C77003 + C77004) * C38612 +
                     (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                      C27565 * C55428) *
                         C38611) *
                        C10615 +
                    ((C27567 * C55428 + C27860 * C55292 + C27570 * C55429 +
                      C27861 * C55293) *
                         C38611 +
                     (C79533 + C79534 + C79535 + C79536) * C38612) *
                        C10616 -
                    (((C13338 * C31761 + C89783 * C32078) * C55293 +
                      (C13338 * C31593 + C89783 * C31594) * C55429 +
                      C32082 * C55292 + C31844 * C55428) *
                         C38612 +
                     (C36221 * C55293 + C36055 * C55429 + C27861 * C55292 +
                      C27570 * C55428) *
                         C38611) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C9304 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C89907) *
              C822 +
          (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
            (C79005 + C79006) * C55429 + (C79639 + C79640) * C55293) *
               C89783 * C89907 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C9304) *
              C823 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C55428 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C55292 +
            (C82009 + C82010) * C55429 + (C82643 + C82644) * C55293) *
               C89783 * C9304 -
           ((C38700 * C19196 + C38612 * C19619 + C38699 * C14897 +
             C38611 * C15291) *
                C55293 +
            (C38700 * C19030 + C38612 * C19120 + C38699 * C14727 +
             C38611 * C14819) *
                C55429 +
            (C82644 + C82643) * C55292 + (C82010 + C82009) * C55428) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C9304 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
            (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
               C89783 * C89907 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
            (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
               C89783 * C9304 -
           ((C38700 * C6489 + C38612 * C6880 + C38699 * C1989 +
             C38611 * C2479) *
                C55293 +
            (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
             C38611 * C1875) *
                C55429 +
            (C43141 + C43140) * C55292 + (C42529 + C42528) * C55428) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
               C55428 +
           (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
               C55292 +
           (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
              C89783 * C10614 -
          ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
           (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
              C89783 * C10615 +
          ((C73516 + C73515) * C55428 + (C74152 + C74151) * C55292 +
           (C84659 + C84660) * C55429 + (C85079 + C85080) * C55293) *
              C89783 * C10616 -
          ((C38700 * C31761 + C38612 * C32156 + C38699 * C27460 +
            C38611 * C27938) *
               C55293 +
           (C38700 * C31593 + C38612 * C31676 + C38699 * C27231 +
            C38611 * C27344) *
               C55429 +
           (C85080 + C85079) * C55292 + (C84660 + C84659) * C55428) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C9304 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C89907) *
                        C822 +
                    (((C77284 + C77283) * C38611 + (C82753 + C82754) * C38612) *
                         C89783 * C89907 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C9304) *
                        C823 +
                    (((C73296 + C73295) * C38611 + (C78797 + C78798) * C38612) *
                         C89783 * C9304 -
                     ((C55893 * C19030 + C82747 + C82747 + C55293 * C19694 +
                       C55892 * C16849 + C82748 + C82748 + C55292 * C17768) *
                          C38612 +
                      (C82754 + C82753) * C38611) *
                         C89783 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C9304 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C89907) *
                        C89827 * C5151 +
                    (((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) *
                         C89783 * C89907 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C9304) *
                        C89827 * C5152 +
                    (((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                         C89783 * C9304 -
                     ((C55893 * C6323 + C61083 + C61083 + C55293 * C6957 +
                       C55892 * C4161 + C61084 + C61084 + C55292 * C5057) *
                          C38612 +
                      (C59870 + C59869) * C38611) *
                         C89783 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C38611 +
                     (C73293 + C73294) * C38612) *
                        C89783 * C10614 -
                    ((C77283 + C77284) * C38612 +
                     (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                      C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                         C38611) *
                        C89783 * C10615 +
                    ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                      C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                         C38611 +
                     (C79749 + C79750) * C38612) *
                        C89783 * C10616 -
                    ((C55893 * C31593 + C85147 + C85147 + C55293 * C32234 +
                      C55892 * C23356 + C85148 + C85148 + C55292 * C23786) *
                         C38612 +
                     (C55893 * C27231 + C68804 + C68804 + C55293 * C28026 +
                      C55892 * C10620 + C68805 + C68805 + C55292 * C11062) *
                         C38611) *
                        C89783 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C90026 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C90027 +
           ((C27266 * C55292 + C27267 * C55293) * C38611 +
            (C78897 + C78898) * C38612) *
               C12024) *
              C89827 * C89990 +
          (((C27268 * C55292 + C27269 * C55293) * C38611 +
            (C76171 + C76172) * C38612) *
               C90027 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C90026 -
           (((C13337 * C29516 + C29522 + C29522 + C89783 * C29518) * C55293 +
             C29525 * C55292) *
                C38612 +
            (C27270 * C55293 + C27269 * C55292) * C38611) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C90026 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C90027 +
           (((C73516 + C73515) * C13338 + (C73514 + C73513) * C89783) * C55292 +
            ((C84659 + C84660) * C13338 + (C84661 + C84662) * C89783) *
                C55293) *
               C12024) *
              C89827 * C89990 +
          ((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) * C55292 +
            ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                C55293) *
               C90027 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C90026 -
           (((C38700 * C29517 + C38612 * C29624 + C38699 * C10622 +
              C38611 * C10684) *
                 C89783 +
             (C38700 * C29516 + C38612 * C29623 + C38699 * C10619 +
              C38611 * C10681) *
                 C13338) *
                C55293 +
            ((C40611 + C40610) * C89783 + (C40609 + C40608) * C13338) *
                C55292) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C90026 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C90027 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C13338 +
             (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
              C55293 * C10741) *
                 C89783) *
                C38611 +
            ((C79115 + C79116) * C13338 + (C79117 + C79118) * C89783) *
                C38612) *
               C12024) *
              C89827 * C89990 +
          ((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) * C38611 +
            ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                C38612) *
               C90027 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C90026 -
           (((C55429 * C29517 + C55293 * C29750 + C55428 * C6327 +
              C55292 * C6493) *
                 C89783 +
             (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
              C55292 * C6490) *
                 C13338) *
                C38612 +
            ((C57282 + C57281) * C89783 + (C57280 + C57279) * C13338) *
                C38611) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C90026 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C90027 +
                     ((C73720 + C73719 + C73718 + C73717) * C55292 +
                      (C84795 + C84796 + C84797 + C84798) * C55293) *
                         C12024) *
                        C89827 * C89990 +
                    (((C73721 + C73722 + C73723 + C73724) * C55292 +
                      (C73725 + C73726 + C73727 + C73728) * C55293) *
                         C90027 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C90026 -
                     (((C13338 * C29623 + C89783 * C29849) * C38612 +
                       (C13338 * C29516 + C89783 * C29517) * C38700 +
                       C27576 * C38611 + C27575 * C38699) *
                          C55293 +
                      (C73728 + C73727 + C73726 + C73725) * C55292) *
                         C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C90026 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C90027 +
                     ((C73846 + C73845) * C89783 * C55292 +
                      (C84875 + C84876) * C89783 * C55293) *
                         C12024) *
                        C89827 * C89990 +
                    (((C40941 + C40940) * C89783 * C55292 +
                      (C40942 + C40943) * C89783 * C55293) *
                         C90027 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C90026 -
                     ((C38936 * C29516 + C52024 + C52024 + C38612 * C29962 +
                       C38935 * C10619 + C52025 + C52025 + C38611 * C10846) *
                          C89783 * C55293 +
                      (C40943 + C40942) * C89783 * C55292) *
                         C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C90026 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C90027 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38699 +
            (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
             C55293 * C10903) *
                C38611 +
            (C79115 + C79116) * C38700 + (C79433 + C79434) * C38612) *
               C89783 * C12024) *
              C89827 * C89990 +
          (((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
            (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
               C89783 * C90027 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C90026 -
           ((C55429 * C29623 + C55293 * C30082 + C55428 * C6410 +
             C55292 * C6727) *
                C38612 +
            (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
             C55292 * C6490) *
                C38700 +
            (C57644 + C57643) * C38611 + (C57280 + C57279) * C38699) *
               C89783 * C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C90026 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C90027 +
                     ((C27567 * C55428 + C27860 * C55292 + C27570 * C55429 +
                       C27861 * C55293) *
                          C38611 +
                      (C79533 + C79534 + C79535 + C79536) * C38612) *
                         C12024) *
                        C89827 * C89990 +
                    (((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                       C27863 * C55293) *
                          C38611 +
                      (C77005 + C77006 + C77007 + C77008) * C38612) *
                         C90027 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C90026 -
                     (((C13338 * C29749 + C89783 * C30181) * C55293 +
                       (C13338 * C29516 + C89783 * C29517) * C55429 +
                       C30185 * C55292 + C29861 * C55428) *
                          C38612 +
                      (C27864 * C55293 + C27575 * C55429 + C27863 * C55292 +
                       C27573 * C55428) *
                          C38611) *
                         C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C90026 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C90027 +
           ((C73516 + C73515) * C55428 + (C74152 + C74151) * C55292 +
            (C84659 + C84660) * C55429 + (C85079 + C85080) * C55293) *
               C89783 * C12024) *
              C89827 * C89990 +
          (((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
            (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
               C89783 * C90027 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C90026 -
           ((C38700 * C29749 + C38612 * C30283 + C38699 * C10737 +
             C38611 * C11008) *
                C55293 +
            (C38700 * C29516 + C38612 * C29623 + C38699 * C10619 +
             C38611 * C10681) *
                C55429 +
            (C41260 + C41259) * C55292 + (C40609 + C40608) * C55428) *
               C89783 * C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezz[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C90026 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C90027 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C38611 +
                      (C79749 + C79750) * C38612) *
                         C89783 * C12024) *
                        C89827 * C89990 +
                    (((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) *
                         C89783 * C90027 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C90026 -
                     ((C55893 * C29516 + C63460 + C63460 + C55293 * C30391 +
                       C55892 * C6324 + C63461 + C63461 + C55292 * C6958) *
                          C38612 +
                      (C58002 + C58001) * C38611) *
                         C89783 * C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C9304 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C89907) *
              C89827 * C5151 +
          (((C27268 * C55292 + C27269 * C55293) * C38611 +
            (C76171 + C76172) * C38612) *
               C89907 -
           ((C72438 + C72437) * C38612 +
            (C27268 * C55293 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C55292) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          ((((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C55292 +
             C28794 * C55293) *
                C38611 +
            (C74349 + C74355) * C38612) *
               C9304 -
           (((C13337 * C6323 + C28115 + C28115 + C89783 * C6329) * C55293 +
             C74354 * C55292) *
                C38612 +
            (C28795 * C55293 + C28794 * C55292) * C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C55292 +
             C27265 * C55293) *
                C38611 +
            (C72433 + C72434) * C38612) *
               C9304 -
           ((C76169 + C76170) * C38612 +
            (C27266 * C55293 + C27265 * C55292) * C38611) *
               C89907) *
              C822 +
          (((C76170 + C76169) * C38611 + (C81901 + C81902) * C38612) * C89907 -
           ((C72435 + C72436) * C38612 + (C72434 + C72433) * C38611) * C9304) *
              C823 +
          (((C72436 + C72435) * C38611 + (C78233 + C78234) * C38612) * C9304 -
           (((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C55293 +
             C21337 * C55292) *
                C38612 +
            (C81902 + C81901) * C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C9304 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C89907) *
              C89827 * C5151 +
          ((((C40607 + C40606) * C13338 + (C40605 + C40604) * C89783) * C55292 +
            ((C40608 + C40609) * C13338 + (C40610 + C40611) * C89783) *
                C55293) *
               C89907 -
           (((C40604 + C40605) * C89783 + (C40606 + C40607) * C13338) * C55293 +
            ((C38729 + C38728) * C89783 + (C38727 + C38726) * C13338) *
                C55292) *
               C9304) *
              C89827 * C5152 +
          ((((C38733 + C38732) * C13338 + (C38731 + C38730) * C89783) * C55292 +
            ((C42528 + C42529) * C13338 + (C42530 + C42531) * C89783) *
                C55293) *
               C9304 -
           (((C38700 * C6326 + C38612 * C6412 + C38699 * C1773 +
              C38611 * C1883) *
                 C89783 +
             (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
              C38611 * C1875) *
                 C13338) *
                C55293 +
            ((C42531 + C42530) * C89783 + (C42529 + C42528) * C13338) *
                C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                 C13338 +
             (C38699 * C112 + C38611 * C193 + C38700 * C837 + C38612 * C947) *
                 C89783) *
                C55292 +
            ((C73509 + C73510) * C13338 + (C73511 + C73512) * C89783) *
                C55293) *
               C9304 -
           (((C73513 + C73514) * C89783 + (C73515 + C73516) * C13338) * C55293 +
            ((C73512 + C73511) * C89783 + (C73510 + C73509) * C13338) *
                C55292) *
               C89907) *
              C822 +
          ((((C76311 + C76312) * C13338 + (C76313 + C76314) * C89783) * C55292 +
            ((C79005 + C79006) * C13338 + (C79007 + C79008) * C89783) *
                C55293) *
               C89907 -
           (((C76314 + C76313) * C89783 + (C76312 + C76311) * C13338) * C55293 +
            ((C38700 * C838 + C38612 * C948 + C38699 * C837 + C38611 * C947) *
                 C89783 +
             (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                 C13338) *
                C55292) *
               C9304) *
              C823 +
          ((((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                 C13338 +
             (C38699 * C838 + C38611 * C948 + C38700 * C5806 + C38612 * C5868) *
                 C89783) *
                C55292 +
            ((C82009 + C82010) * C13338 + (C82011 + C82012) * C89783) *
                C55293) *
               C9304 -
           (((C38700 * C19031 + C38612 * C19121 + C38699 * C14729 +
              C38611 * C14821) *
                 C89783 +
             (C38700 * C19030 + C38612 * C19120 + C38699 * C14727 +
              C38611 * C14819) *
                 C13338) *
                C55293 +
            ((C82012 + C82011) * C89783 + (C82010 + C82009) * C13338) *
                C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C9304 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C89907) *
              C89827 * C5151 +
          ((((C57278 + C57277) * C13338 + (C57276 + C57275) * C89783) * C38611 +
            ((C60277 + C60278) * C13338 + (C60279 + C60280) * C89783) *
                C38612) *
               C89907 -
           (((C56251 + C56252) * C89783 + (C56253 + C56254) * C13338) * C38612 +
            ((C55458 + C55457) * C89783 + (C55456 + C55455) * C13338) *
                C38611) *
               C9304) *
              C89827 * C5152 +
          ((((C55462 + C55461) * C13338 + (C55460 + C55459) * C89783) * C38611 +
            ((C58305 + C58306) * C13338 + (C58307 + C58308) * C89783) *
                C38612) *
               C9304 -
           (((C55429 * C6326 + C55293 * C6492 + C55428 * C4165 +
              C55292 * C4399) *
                 C89783 +
             (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
              C55292 * C4395) *
                 C13338) *
                C38612 +
            ((C59240 + C59239) * C89783 + (C59238 + C59237) * C13338) *
                C38611) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C13338 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C89783) *
                C38611 +
            ((C72653 + C72654) * C13338 + (C72655 + C72656) * C89783) *
                C38612) *
               C9304 -
           (((C76453 + C76454) * C89783 + (C76455 + C76456) * C13338) * C38612 +
            ((C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C89783 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C13338) *
                C38611) *
               C89907) *
              C822 +
          ((((C76456 + C76455) * C13338 + (C76454 + C76453) * C89783) * C38611 +
            ((C82119 + C82120) * C13338 + (C82121 + C82122) * C89783) *
                C38612) *
               C89907 -
           (((C72657 + C72658) * C89783 + (C72659 + C72660) * C13338) * C38612 +
            ((C72656 + C72655) * C89783 + (C72654 + C72653) * C13338) *
                C38611) *
               C9304) *
              C823 +
          ((((C72660 + C72659) * C13338 + (C72658 + C72657) * C89783) * C38611 +
            ((C78375 + C78376) * C13338 + (C78377 + C78378) * C89783) *
                C38612) *
               C9304 -
           (((C55429 * C19031 + C55293 * C19197 + C55428 * C16851 +
              C55292 * C17083) *
                 C89783 +
             (C55429 * C19030 + C55293 * C19196 + C55428 * C16849 +
              C55292 * C17081) *
                 C13338) *
                C38612 +
            ((C82122 + C82121) * C89783 + (C82120 + C82119) * C13338) *
                C38611) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C9304 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C89907) *
                        C89827 * C5151 +
                    (((C73721 + C73722 + C73723 + C73724) * C55292 +
                      (C73725 + C73726 + C73727 + C73728) * C55293) *
                         C89907 -
                     ((C73724 + C73723 + C73722 + C73721) * C55293 +
                      (C14191 * C38612 + C14190 * C38700 +
                       (C13338 * C188 + C89783 * C361) * C38611 +
                       (C13338 * C107 + C89783 * C113) * C38699) *
                          C55292) *
                         C9304) *
                        C89827 * C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C38699 +
                       (C13338 * C189 + C89783 * C362) * C38611 +
                       C15693 * C38700 + C15694 * C38612) *
                          C55292 +
                      (C75545 + C75546 + C75547 + C75548) * C55293) *
                         C9304 -
                     (((C13338 * C6409 + C89783 * C6569) * C38612 +
                       (C13338 * C6323 + C89783 * C6326) * C38700 +
                       C29033 * C38611 + C29032 * C38699) *
                          C55293 +
                      (C75548 + C75547 + C75546 + C75545) * C55292) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C38699 +
                       (C13338 * C187 + C89783 * C360) * C38611 +
                       C14184 * C38700 + C14185 * C38612) *
                          C55292 +
                      (C73713 + C73714 + C73715 + C73716) * C55293) *
                         C9304 -
                     ((C73717 + C73718 + C73719 + C73720) * C55293 +
                      (C73716 + C73715 + C73714 + C73713) * C55292) *
                         C89907) *
                        C822 +
                    (((C76587 + C76588 + C76589 + C76590) * C55292 +
                      (C79217 + C79218 + C79219 + C79220) * C55293) *
                         C89907 -
                     ((C76590 + C76589 + C76588 + C76587) * C55293 +
                      (C14187 * C38612 + C14186 * C38700 + C14185 * C38611 +
                       C14184 * C38699) *
                          C55292) *
                         C9304) *
                        C823 +
                    (((C14186 * C38699 + C14187 * C38611 + C14189 * C38700 +
                       C14188 * C38612) *
                          C55292 +
                      (C82221 + C82222 + C82223 + C82224) * C55293) *
                         C9304 -
                     (((C13338 * C19120 + C89783 * C19288) * C38612 +
                       (C13338 * C19030 + C89783 * C19031) * C38700 +
                       C19301 * C38611 + C19300 * C38699) *
                          C55293 +
                      (C82224 + C82223 + C82222 + C82221) * C55292) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C9304 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C89907) *
                        C89827 * C5151 +
                    (((C40941 + C40940) * C89783 * C55292 +
                      (C40942 + C40943) * C89783 * C55293) *
                         C89907 -
                     ((C40940 + C40941) * C89783 * C55293 +
                      (C38973 + C38972) * C89783 * C55292) *
                         C9304) *
                        C89827 * C5152 +
                    (((C38975 + C38974) * C89783 * C55292 +
                      (C42836 + C42837) * C89783 * C55293) *
                         C9304 -
                     ((C38936 * C6323 + C40930 + C40930 + C38612 * C6646 +
                       C38935 * C1765 + C40931 + C40931 + C38611 * C2185) *
                          C89783 * C55293 +
                      (C42837 + C42836) * C89783 * C55292) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38935 * C106 + C38938 + C38938 + C38611 * C417 +
                       C38936 * C829 + C38939 + C38939 + C38612 * C1249) *
                          C89783 * C55292 +
                      (C73843 + C73844) * C89783 * C55293) *
                         C9304 -
                     ((C73845 + C73846) * C89783 * C55293 +
                      (C73844 + C73843) * C89783 * C55292) *
                         C89907) *
                        C822 +
                    (((C76733 + C76734) * C89783 * C55292 +
                      (C79329 + C79330) * C89783 * C55293) *
                         C89907 -
                     ((C76734 + C76733) * C89783 * C55293 +
                      (C38936 * C830 + C39910 + C39910 + C38612 * C1250 +
                       C38935 * C829 + C39911 + C39911 + C38611 * C1249) *
                          C89783 * C55292) *
                         C9304) *
                        C823 +
                    (((C38935 * C830 + C39912 + C39912 + C38611 * C1250 +
                       C38936 * C5803 + C39913 + C39913 + C38612 * C6030) *
                          C89783 * C55292 +
                      (C82333 + C82334) * C89783 * C55293) *
                         C9304 -
                     ((C38936 * C19030 + C82327 + C82327 + C38612 * C19375 +
                       C38935 * C14727 + C82328 + C82328 + C38611 * C15051) *
                          C89783 * C55293 +
                      (C82334 + C82333) * C89783 * C55292) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C9304 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C57278 + C57277) * C38699 + (C57642 + C57641) * C38611 +
            (C60277 + C60278) * C38700 + (C60679 + C60680) * C38612) *
               C89783 * C89907 -
           ((C56566 + C56567) * C38612 + (C56253 + C56254) * C38700 +
            (C55678 + C55677) * C38611 + (C55456 + C55455) * C38699) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C55462 + C55461) * C38699 + (C55680 + C55679) * C38611 +
            (C58305 + C58306) * C38700 + (C58607 + C58608) * C38612) *
               C89783 * C9304 -
           ((C55429 * C6409 + C55293 * C6726 + C55428 * C4277 +
             C55292 * C4731) *
                C38612 +
            (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
             C55292 * C4395) *
                C38700 +
            (C59554 + C59553) * C38611 + (C59238 + C59237) * C38699) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38699 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C38611 +
            (C72653 + C72654) * C38700 + (C72963 + C72964) * C38612) *
               C89783 * C9304 -
           ((C76869 + C76870) * C38612 + (C76455 + C76456) * C38700 +
            (C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C38611 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38699) *
               C89783 * C89907) *
              C822 +
          (((C76456 + C76455) * C38699 + (C76870 + C76869) * C38611 +
            (C82119 + C82120) * C38700 + (C82437 + C82438) * C38612) *
               C89783 * C89907 -
           ((C72965 + C72966) * C38612 + (C72659 + C72660) * C38700 +
            (C72964 + C72963) * C38611 + (C72654 + C72653) * C38699) *
               C89783 * C9304) *
              C823 +
          (((C72660 + C72659) * C38699 + (C72966 + C72965) * C38611 +
            (C78375 + C78376) * C38700 + (C78583 + C78584) * C38612) *
               C89783 * C9304 -
           ((C55429 * C19120 + C55293 * C19453 + C55428 * C16979 +
             C55292 * C17439) *
                C38612 +
            (C55429 * C19030 + C55293 * C19196 + C55428 * C16849 +
             C55292 * C17081) *
                C38700 +
            (C82438 + C82437) * C38611 + (C82120 + C82119) * C38699) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C9304 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C89907) *
                        C89827 * C5151 +
                    (((C27571 * C55428 + C27862 * C55292 + C27573 * C55429 +
                       C27863 * C55293) *
                          C38611 +
                      (C77005 + C77006 + C77007 + C77008) * C38612) *
                         C89907 -
                     ((C73076 + C73075 + C73074 + C73073) * C38612 +
                      (C27862 * C55293 + C27571 * C55429 +
                       (C13338 * C275 + C89783 * C578) * C55292 +
                       (C13338 * C107 + C89783 * C113) * C55428) *
                          C38611) *
                         C9304) *
                        C89827 * C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C55428 +
                       (C13338 * C276 + C89783 * C579) * C55292 +
                       C29030 * C55429 + C29266 * C55293) *
                          C38611 +
                      (C74950 + C74951 + C74952 + C74956) * C38612) *
                         C9304 -
                     (((C13338 * C6489 + C89783 * C6803) * C55293 +
                       (C13338 * C6323 + C89783 * C6326) * C55429 +
                       C74955 * C55292 + C74654 * C55428) *
                          C38612 +
                      (C29267 * C55293 + C29032 * C55429 + C29266 * C55292 +
                       C29030 * C55428) *
                          C38611) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C55428 +
                       (C13338 * C274 + C89783 * C577) * C55292 +
                       C27565 * C55429 + C27859 * C55293) *
                          C38611 +
                      (C73065 + C73066 + C73067 + C73068) * C38612) *
                         C9304 -
                     ((C77001 + C77002 + C77003 + C77004) * C38612 +
                      (C27860 * C55293 + C27567 * C55429 + C27859 * C55292 +
                       C27565 * C55428) *
                          C38611) *
                         C89907) *
                        C822 +
                    (((C77004 + C77003 + C77002 + C77001) * C38611 +
                      (C82537 + C82538 + C82539 + C82540) * C38612) *
                         C89907 -
                     ((C73069 + C73070 + C73071 + C73072) * C38612 +
                      (C73068 + C73067 + C73066 + C73065) * C38611) *
                         C9304) *
                        C823 +
                    (((C73072 + C73071 + C73070 + C73069) * C38611 +
                      (C78651 + C78652 + C78653 + C78654) * C38612) *
                         C9304 -
                     (((C13338 * C19196 + C89783 * C19534) * C55293 +
                       (C13338 * C19030 + C89783 * C19031) * C55429 +
                       C21816 * C55292 + C21579 * C55428) *
                          C38612 +
                      (C82540 + C82539 + C82538 + C82537) * C38611) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C9304 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C40607 + C40606) * C55428 + (C41258 + C41257) * C55292 +
            (C40608 + C40609) * C55429 + (C41259 + C41260) * C55293) *
               C89783 * C89907 -
           ((C41257 + C41258) * C55293 + (C40606 + C40607) * C55429 +
            (C39201 + C39200) * C55292 + (C38727 + C38726) * C55428) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C38733 + C38732) * C55428 + (C39203 + C39202) * C55292 +
            (C42528 + C42529) * C55429 + (C43140 + C43141) * C55293) *
               C89783 * C9304 -
           ((C38700 * C6489 + C38612 * C6880 + C38699 * C1989 +
             C38611 * C2479) *
                C55293 +
            (C38700 * C6323 + C38612 * C6409 + C38699 * C1765 +
             C38611 * C1875) *
                C55429 +
            (C43141 + C43140) * C55292 + (C42529 + C42528) * C55428) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38699 * C106 + C38611 * C187 + C38700 * C829 + C38612 * C939) *
                C55428 +
            (C38699 * C274 + C38611 * C633 + C38700 * C1053 + C38612 * C1543) *
                C55292 +
            (C73509 + C73510) * C55429 + (C74149 + C74150) * C55293) *
               C89783 * C9304 -
           ((C74151 + C74152) * C55293 + (C73515 + C73516) * C55429 +
            (C74150 + C74149) * C55292 + (C73510 + C73509) * C55428) *
               C89783 * C89907) *
              C822 +
          (((C76311 + C76312) * C55428 + (C77143 + C77144) * C55292 +
            (C79005 + C79006) * C55429 + (C79639 + C79640) * C55293) *
               C89783 * C89907 -
           ((C77144 + C77143) * C55293 + (C76312 + C76311) * C55429 +
            (C38700 * C1054 + C38612 * C1544 + C38699 * C1053 +
             C38611 * C1543) *
                C55292 +
            (C38700 * C830 + C38612 * C940 + C38699 * C829 + C38611 * C939) *
                C55428) *
               C89783 * C9304) *
              C823 +
          (((C38699 * C830 + C38611 * C940 + C38700 * C5803 + C38612 * C5865) *
                C55428 +
            (C38699 * C1054 + C38611 * C1544 + C38700 * C5921 +
             C38612 * C6192) *
                C55292 +
            (C82009 + C82010) * C55429 + (C82643 + C82644) * C55293) *
               C89783 * C9304 -
           ((C38700 * C19196 + C38612 * C19619 + C38699 * C14897 +
             C38611 * C15291) *
                C55293 +
            (C38700 * C19030 + C38612 * C19120 + C38699 * C14727 +
             C38611 * C14819) *
                C55429 +
            (C82644 + C82643) * C55292 + (C82010 + C82009) * C55428) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C9304 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C89907) *
                        C89827 * C5151 +
                    (((C58000 + C57999) * C38611 + (C61089 + C61090) * C38612) *
                         C89783 * C89907 -
                     ((C56903 + C56904) * C38612 + (C55930 + C55929) * C38611) *
                         C89783 * C9304) *
                        C89827 * C5152 +
                    (((C55932 + C55931) * C38611 + (C58917 + C58918) * C38612) *
                         C89783 * C9304 -
                     ((C55893 * C6323 + C61083 + C61083 + C55293 * C6957 +
                       C55892 * C4161 + C61084 + C61084 + C55292 * C5057) *
                          C38612 +
                      (C59870 + C59869) * C38611) *
                         C89783 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C38611 +
                      (C73293 + C73294) * C38612) *
                         C89783 * C9304 -
                     ((C77283 + C77284) * C38612 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C38611) *
                         C89783 * C89907) *
                        C822 +
                    (((C77284 + C77283) * C38611 + (C82753 + C82754) * C38612) *
                         C89783 * C89907 -
                     ((C73295 + C73296) * C38612 + (C73294 + C73293) * C38611) *
                         C89783 * C9304) *
                        C823 +
                    (((C73296 + C73295) * C38611 + (C78797 + C78798) * C38612) *
                         C89783 * C9304 -
                     ((C55893 * C19030 + C82747 + C82747 + C55293 * C19694 +
                       C55892 * C16849 + C82748 + C82748 + C55292 * C17768) *
                          C38612 +
                      (C82754 + C82753) * C38611) *
                         C89783 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C89998 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C89879) *
              C90022 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C89879 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C89998) *
              C90023 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89843 * C89998 -
           ((C13337 * C5801 + C15450 + C15450 + C89783 * C5807) * C89937 *
                C13336 +
            C15458 * C13335 + C15457 * C13334) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C89998 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C89879) *
              C90022 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C89879 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C89998) *
              C90023 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C89843 * C89998 -
           (C104 * C2695 + C2699 + C2699 + C91 * C2697 + C102 * C833 + C2700 +
            C2700 + C90 * C849 + C100 * C827 + C2701 + C2701 + C89 * C843) *
               C89937 * C89926 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C89843 * C89998 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C89843 * C89879) *
              C90022 +
          ((C13881 * C26053 + C16876 * C26054 +
            (C13337 * C6324 + C14744 + C14744 + C89783 * C6330) * C26055) *
               C89926 * C89843 * C89879 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C89843 * C89998) *
              C90023 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
            (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C26054 +
            (C13337 * C1765 + C26057 + C26057 + C89783 * C1781) * C26055) *
               C89926 * C89843 * C89998 -
           ((C13337 * C6323 + C28115 + C28115 + C89783 * C6329) * C26055 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C26054 +
            C15455 * C26053) *
               C89926 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexy[30] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C89998 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C90022 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C89879 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C89998) *
                        C90023 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89843 * C89998 -
                     ((C13403 * C5804 + C13336 * C5866 + C13402 * C840 +
                       C13335 * C950 + C13401 * C835 + C13334 * C945) *
                          C89783 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C89998 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C89879) *
                        C90022 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      C2782 * C105 + C2783 * C91) *
                         C89937 * C89843 * C89879 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C89998) *
                        C90023 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C89843 * C89998 -
                     ((C186 * C2696 + C89926 * C2776) * C91 +
                      (C186 * C2695 + C89926 * C2775) * C105 + C2783 * C90 +
                      C2782 * C103 + C970 * C89 + C971 * C101) *
                         C89937 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C89843 * C89998 -
                     (((C186 * C6328 + C89926 * C6414) * C89783 +
                       (C186 * C6325 + C89926 * C6411) * C13338) *
                          C26055 +
                      ((C186 * C4163 + C89926 * C4279) * C89783 +
                       (C186 * C4159 + C89926 * C4275) * C13338) *
                          C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C89843 * C89879) *
                        C90022 +
                    (((C973 * C13338 + C972 * C89783) * C26053 +
                      (C4292 * C13338 + C4293 * C89783) * C26054 +
                      ((C186 * C6324 + C89926 * C6410) * C13338 +
                       (C186 * C6327 + C89926 * C6413) * C89783) *
                          C26055) *
                         C89843 * C89879 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C89843 * C89998) *
                        C90023 +
                    (((C218 * C13338 + C219 * C89783) * C26053 +
                      (C1904 * C13338 + C1903 * C89783) * C26054 +
                      (C1909 * C13338 + C1910 * C89783) * C26055) *
                         C89843 * C89998 -
                     (((C186 * C6326 + C89926 * C6412) * C89783 +
                       (C186 * C6323 + C89926 * C6409) * C13338) *
                          C26055 +
                      (C4295 * C89783 + C4294 * C13338) * C26054 +
                      (C970 * C89783 + C971 * C13338) * C26053) *
                         C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[30] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C89998 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C89879) *
                        C90022 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C89879 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C89998) *
                        C90023 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89843 * C89998 -
                     (((C273 * C5804 + C89937 * C5922) * C89783 +
                       (C273 * C5801 + C89937 * C5919) * C13338) *
                          C13336 +
                      (C15610 + C15609) * C13335 + (C15608 + C15607) * C13334) *
                         C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C89998 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C89879) *
                        C90022 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      C2864 * C105 + C2865 * C91) *
                         C89926 * C89843 * C89879 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C89998) *
                        C90023 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C89843 * C89998 -
                     ((C273 * C2696 + C89937 * C2858) * C91 +
                      (C273 * C2695 + C89937 * C2857) * C105 + C2865 * C90 +
                      C2864 * C103 + C1084 * C89 + C1085 * C101) *
                         C89926 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C89843 * C89998 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C89843 * C89879) *
                        C90022 +
                    (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 +
                       C26054 * C4394 + C26161 * C6324 + C26055 * C6490) *
                          C13338 +
                      (C26159 * C836 + C26053 * C1060 + C26160 * C4164 +
                       C26054 * C4398 + C26161 * C6327 + C26055 * C6493) *
                          C89783) *
                         C89926 * C89843 * C89879 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C89843 * C89998) *
                        C90023 +
                    (((C26159 * C108 + C26053 * C276 + C26160 * C1760 +
                       C26054 * C1984 + C26161 * C1765 + C26055 * C1989) *
                          C13338 +
                      (C26159 * C114 + C26053 * C282 + C26160 * C1768 +
                       C26054 * C1992 + C26161 * C1773 + C26055 * C1997) *
                          C89783) *
                         C89926 * C89843 * C89998 -
                     ((C26161 * C6326 + C26055 * C6492 + C26160 * C4165 +
                       C26054 * C4399 + C26159 * C835 + C26053 * C1059) *
                          C89783 +
                      (C26161 * C6323 + C26055 * C6489 + C26160 * C4161 +
                       C26054 * C4395 + C26159 * C827 + C26053 * C1051) *
                          C13338) *
                         C89926 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C89998 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C89879) *
              C90022 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C89879 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C89998) *
              C90023 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89843 * C89998 -
           ((C13338 * C5863 + C89783 * C5975) * C13336 +
            (C13338 * C5801 + C89783 * C5804) * C13403 + C15696 * C13335 +
            C15695 * C13402 + C15694 * C13334 + C15693 * C13401) *
               C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C89998 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C89879) *
              C90022 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C89879 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C89998) *
              C90023 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C89843 * C89998 -
           ((C105 * C2775 + C91 * C2939 + C103 * C943 + C90 * C1171 +
             C101 * C937 + C89 * C1165) *
                C89926 +
            (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
             C101 * C827 + C89 * C835) *
                C186) *
               C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C89843 * C89998 -
           ((C19299 * C89926 + C19298 * C186) * C26055 +
            (C17230 * C89926 + C17231 * C186) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C89843 * C89879) *
              C90022 +
          (((C14190 * C186 + C14191 * C89926) * C26053 +
            (C17232 * C186 + C17233 * C89926) * C26054 +
            ((C13338 * C6324 + C89783 * C6327) * C186 +
             (C13338 * C6410 + C89783 * C6570) * C89926) *
                C26055) *
               C89843 * C89879 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C89843 * C89998) *
              C90023 +
          ((((C13338 * C108 + C89783 * C114) * C186 +
             (C13338 * C189 + C89783 * C362) * C89926) *
                C26053 +
            ((C13338 * C1760 + C89783 * C1768) * C186 +
             (C13338 * C1870 + C89783 * C2098) * C89926) *
                C26054 +
            ((C13338 * C1765 + C89783 * C1773) * C186 +
             (C13338 * C1875 + C89783 * C2103) * C89926) *
                C26055) *
               C89843 * C89998 -
           (((C13338 * C6409 + C89783 * C6569) * C89926 +
             (C13338 * C6323 + C89783 * C6326) * C186) *
                C26055 +
            ((C13338 * C4277 + C89783 * C4513) * C89926 +
             (C13338 * C4161 + C89783 * C4165) * C186) *
                C26054 +
            (C15694 * C89926 + C15693 * C186) * C26053) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C89998 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C89879) *
              C90022 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C89879 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C89998) *
              C90023 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89843 * C89998 -
           (C13556 * C5801 + C15771 + C15771 + C13336 * C6028 + C13555 * C832 +
            C15772 + C15772 + C13335 * C1252 + C13554 * C827 + C15773 + C15773 +
            C13334 * C1247) *
               C89783 * C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C89998 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C89879) *
              C90022 +
          ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
               C89879 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C89998) *
              C90023 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C89998 -
           ((C416 * C2695 + C3018 + C3018 + C89926 * C3014) * C91 +
            C3021 * C90 + C1280 * C89) *
               C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C89843 * C89998 -
           ((C416 * C6325 + C6652 + C6652 + C89926 * C6648) * C89783 * C26055 +
            (C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89783 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C89843 * C89879) *
              C90022 +
          ((C1281 * C89783 * C26053 + C4630 * C89783 * C26054 +
            (C416 * C6324 + C6651 + C6651 + C89926 * C6647) * C89783 * C26055) *
               C89843 * C89879 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C89843 * C89998) *
              C90023 +
          ((C447 * C89783 * C26053 + C2213 * C89783 * C26054 +
            C2216 * C89783 * C26055) *
               C89843 * C89998 -
           ((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C89783 * C26055 +
            C4631 * C89783 * C26054 + C1280 * C89783 * C26053) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C89998 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C89879) *
              C90022 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C89879 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C89998) *
              C90023 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89843 * C89998 -
           ((C273 * C5863 + C89937 * C6084) * C13336 +
            (C273 * C5801 + C89937 * C5919) * C13403 + C1381 * C13335 +
            C1090 * C13402 + C1378 * C13334 + C1085 * C13401) *
               C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C89998 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C89879) *
              C90022 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            (C3098 + C3102) * C91) *
               C89843 * C89879 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C89998) *
              C90023 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
               C89998 -
           (((C273 * C2775 + C89937 * C3095) * C89926 +
             (C273 * C2695 + C89937 * C2857) * C186) *
                C91 +
            (C3102 + C3098) * C90 + C3097 * C89) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89843 * C89998 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C89843 * C89879) *
              C90022 +
          (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
             C26161 * C6324 + C26055 * C6490) *
                C186 +
            (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
             C26161 * C6410 + C26055 * C6727) *
                C89926) *
               C89783 * C89843 * C89879 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C89843 * C89998) *
              C90023 +
          (((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
             C26161 * C1765 + C26055 * C1989) *
                C186 +
            (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
             C26161 * C1875 + C26055 * C2295) *
                C89926) *
               C89783 * C89843 * C89998 -
           ((C26161 * C6409 + C26055 * C6726 + C26160 * C4277 + C26054 * C4731 +
             C26159 * C937 + C26053 * C1357) *
                C89926 +
            (C26161 * C6323 + C26055 * C6489 + C26160 * C4161 + C26054 * C4395 +
             C26159 * C827 + C26053 * C1051) *
                C186) *
               C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89843 * C89998 -
           ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C89843 * C89879) *
              C90022 +
          (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
            (C14463 + C14477) * C13336) *
               C89843 * C89879 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C89843 * C89998) *
              C90023 +
          ((((C13338 * C108 + C89783 * C114) * C273 +
             (C13338 * C276 + C89783 * C579) * C89937) *
                C13334 +
            (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
               C89843 * C89998 -
           (((C13338 * C5919 + C89783 * C6137) * C89937 +
             (C13338 * C5801 + C89783 * C5804) * C273) *
                C13336 +
            (C15931 + C15925) * C13335 + (C15930 + C15922) * C13334) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C89843 * C89998 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C89843 * C89879) *
              C90022 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C273 +
            (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
             C105 * C1057 + C91 * C1465) *
                C89937) *
               C89926 * C89843 * C89879 -
           ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
             C89 * C578) *
                C89937 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C273) *
               C89926 * C89843 * C89998) *
              C90023 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C273 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581) *
                C89937) *
               C89926 * C89843 * C89998 -
           ((C105 * C2857 + C91 * C3176 + C103 * C1057 + C90 * C1465 +
             C101 * C1051 + C89 * C1459) *
                C89937 +
            (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
             C101 * C827 + C89 * C835) *
                C273) *
               C89926 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C89843 * C89998 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C89843 * C89879) *
              C90022 +
          ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
            C17565 * C26054 + (C13338 * C6324 + C89783 * C6327) * C26161 +
            (C13338 * C6490 + C89783 * C6804) * C26055) *
               C89926 * C89843 * C89879 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C89843 * C89998) *
              C90023 +
          (((C13338 * C108 + C89783 * C114) * C26159 +
            (C13338 * C276 + C89783 * C579) * C26053 +
            (C13338 * C1760 + C89783 * C1768) * C26160 +
            (C13338 * C1984 + C89783 * C2392) * C26054 +
            (C13338 * C1765 + C89783 * C1773) * C26161 +
            (C13338 * C1989 + C89783 * C2397) * C26055) *
               C89926 * C89843 * C89998 -
           ((C13338 * C6489 + C89783 * C6803) * C26055 +
            (C13338 * C6323 + C89783 * C6326) * C26161 +
            (C13338 * C4395 + C89783 * C4843) * C26054 +
            (C13338 * C4161 + C89783 * C4165) * C26160 + C15928 * C26053 +
            C15693 * C26159) *
               C89926 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezy[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89843 * C89998 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89843 * C89879) *
              C90022 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C273 +
            (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 + C13335 * C1545 +
             C13403 * C5920 + C13336 * C6191) *
                C89937) *
               C89783 * C89843 * C89879 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89843 * C89998) *
              C90023 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C89843 * C89998 -
           ((C13403 * C5919 + C13336 * C6190 + C13402 * C1056 + C13335 * C1546 +
             C13401 * C1051 + C13334 * C1541) *
                C89937 +
            (C13403 * C5801 + C13336 * C5863 + C13402 * C832 + C13335 * C942 +
             C13401 * C827 + C13334 * C937) *
                C273) *
               C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89843 * C89998 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C89843 * C89879) *
              C90022 +
          (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
            (C3254 + C3258) * C91) *
               C89843 * C89879 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89843 *
               C89998) *
              C90023 +
          ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C89843 *
               C89998 -
           (((C186 * C2857 + C89926 * C3251) * C89937 +
             (C186 * C2695 + C89926 * C2775) * C273) *
                C91 +
            (C3258 + C3254) * C90 + C3253 * C89) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C89843 * C89998 -
           ((C186 * C6491 + C89926 * C6882) * C26055 +
            (C186 * C6325 + C89926 * C6411) * C26161 +
            (C186 * C4393 + C89926 * C4943) * C26054 +
            (C186 * C4159 + C89926 * C4275) * C26160 +
            (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C89843 * C89879) *
              C90022 +
          ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
            (C186 * C6324 + C89926 * C6410) * C26161 +
            (C186 * C6490 + C89926 * C6881) * C26055) *
               C89783 * C89843 * C89879 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C89843 * C89998) *
              C90023 +
          ((C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
            C1909 * C26161 + C2498 * C26055) *
               C89783 * C89843 * C89998 -
           ((C186 * C6489 + C89926 * C6880) * C26055 +
            (C186 * C6323 + C89926 * C6409) * C26161 + C4955 * C26054 +
            C4294 * C26160 + C1562 * C26053 + C971 * C26159) *
               C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C89998 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C89879) *
              C90022 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C89879 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C89998) *
              C90023 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
               C89998 -
           ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C13336 +
            C1679 * C13335 + C1676 * C13334) *
               C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C89998 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C89879) *
              C90022 +
          ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C89879 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C89998) *
              C90023 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C89998 -
           ((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C89926 * C91 +
            C3340 * C90 + C1680 * C89) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89843 * C89998 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C89843 * C89879) *
              C90022 +
          ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
            C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
            C27154 + C26055 * C6958) *
               C89926 * C89783 * C89843 * C89879 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C89843 * C89998) *
              C90023 +
          ((C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
            C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 +
            C26474 + C26055 * C2581) *
               C89926 * C89783 * C89843 * C89998 -
           (C26464 * C6323 + C28708 + C28708 + C26055 * C6957 + C26463 * C4161 +
            C28709 + C28709 + C26054 * C5057 + C26462 * C827 + C28710 + C28710 +
            C26053 * C1643) *
               C89926 * C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexx[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                 C13334 +
             C13884 * C13335 + C13885 * C13336) *
                C89999 -
            (C16878 * C13336 + C16879 * C13335 +
             (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                 C13334) *
                C89907) *
               C89998 +
           ((C16879 * C13334 + C16878 * C13335 +
             (C13337 * C16849 + C16860 + C16860 + C89783 * C16853) * C89937 *
                 C13336) *
                C89907 -
            (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89999) *
               C89879) *
              C825 +
          ((((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                 C13334 +
             C16880 * C13335 + C16881 * C13336) *
                C89907 -
            (C13888 * C13336 + C13887 * C13335 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                 C13334) *
                C89999) *
               C89998 +
           ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89999 -
            ((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C89937 *
                 C13336 +
             C16881 * C13335 + C16880 * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
             C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                C89937 * C89926 * C89999 -
            (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
             C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
                C89937 * C89926 * C89907) *
               C89998 +
           ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
             C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
                C89937 * C89926 * C89907 -
            (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
             C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                C89937 * C89926 * C89999) *
               C89879) *
              C825 +
          (((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
             C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
                C89937 * C89926 * C89907 -
            (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
             C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                C89937 * C89926 * C89999) *
               C89998 +
           ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
             C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                C89937 * C89926 * C89999 -
            (C104 * C4162 + C4175 + C4175 + C91 * C4170 + C102 * C4161 + C4176 +
             C4176 + C90 * C4169 + C100 * C4160 + C4177 + C4177 + C89 * C4168) *
                C89937 * C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
             C27265 * C26054 + C27266 * C26055) *
                C89926 * C89999 -
            (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
                C89907) *
               C89998 +
           ((C16875 * C26053 + C19043 * C26054 +
             (C13337 * C23356 + C23363 + C23363 + C89783 * C23360) * C26055) *
                C89926 * C89907 -
            (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
                C89999) *
               C89879) *
              C825 +
          (((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
                C89907 -
            (C27269 * C26055 + C27268 * C26054 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
                C89926 * C89999) *
               C89998 +
           ((C13881 * C26053 + C16876 * C26054 + C29525 * C26055) * C89926 *
                C89999 -
            ((C13337 * C29516 + C29522 + C29522 + C89783 * C29518) * C26055 +
             C29525 * C26054 + C16876 * C26053) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C13338 +
             (C13401 * C112 + C13334 * C193 + C13402 * C837 + C13335 * C947 +
              C13403 * C838 + C13336 * C948) *
                 C89783) *
                C89937 * C89999 -
            ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
              C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                 C89783 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C13338) *
                C89937 * C89907) *
               C89998 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C13338 +
             (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
              C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                 C89783) *
                C89937 * C89907 -
            ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 + C13335 * C948 +
              C13401 * C837 + C13334 * C947) *
                 C89783 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C13338) *
                C89937 * C89999) *
               C89879) *
              C825 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C13338 +
             (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
              C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                 C89783) *
                C89937 * C89907 -
            ((C13403 * C839 + C13336 * C949 + C13402 * C836 + C13335 * C946 +
              C13401 * C113 + C13334 * C194) *
                 C89783 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C13338) *
                C89937 * C89999) *
               C89998 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C13338 +
             (C13401 * C836 + C13334 * C946 + C13402 * C839 + C13335 * C949 +
              C13403 * C5805 + C13336 * C5867) *
                 C89783) *
                C89937 * C89999 -
            ((C13403 * C16852 + C13336 * C16982 + C13402 * C8594 +
              C13335 * C8680 + C13401 * C4164 + C13334 * C4280) *
                 C89783 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C13338) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C101 +
             (C186 * C112 + C89926 * C193) * C89 + C216 * C103 + C217 * C90 +
             C218 * C105 + C219 * C91) *
                C89937 * C89999 -
            (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
             (C186 * C1770 + C89926 * C1880) * C89 +
             (C186 * C1762 + C89926 * C1872) * C101) *
                C89937 * C89907) *
               C89998 +
           (((C186 * C4159 + C89926 * C4275) * C101 +
             (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
             C4293 * C90 + C4294 * C105 + C4295 * C91) *
                C89937 * C89907 -
            (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
             (C186 * C837 + C89926 * C947) * C89 +
             (C186 * C829 + C89926 * C939) * C101) *
                C89937 * C89999) *
               C89879) *
              C825 +
          (((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
             C3503 * C105 + C3504 * C91) *
                C89937 * C89907 -
            (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 + C217 * C89 +
             C216 * C101) *
                C89937 * C89999) *
               C89998 +
           ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
             C2782 * C105 + C2783 * C91) *
                C89937 * C89999 -
            ((C186 * C4166 + C89926 * C4282) * C91 +
             (C186 * C4162 + C89926 * C4278) * C105 + C4295 * C90 +
             C4294 * C103 + C4293 * C89 + C4292 * C101) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C13338 +
              (C186 * C112 + C89926 * C193) * C89783) *
                 C26053 +
             (C27378 + C27379) * C26054 + C27386 * C26055) *
                C89999 -
            ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
             (C27379 + C27378) * C26053) *
                C89907) *
               C89998 +
           (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
             ((C186 * C23356 + C89926 * C23415) * C13338 +
              (C186 * C23358 + C89926 * C23417) * C89783) *
                 C26055) *
                C89907 -
            ((C29649 + C29648) * C26055 + (C29647 + C29646) * C26054 +
             ((C186 * C837 + C89926 * C947) * C89783 +
              (C186 * C829 + C89926 * C939) * C13338) *
                 C26053) *
                C89999) *
               C89879) *
              C825 +
          ((((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
             (C27384 + C27385) * C26055) *
                C89907 -
            (C27377 * C26055 + (C27362 + C27361) * C26054 +
             (C217 * C89783 + C216 * C13338) * C26053) *
                C89999) *
               C89998 +
           (((C973 * C13338 + C972 * C89783) * C26053 +
             (C29634 + C29635) * C26054 + (C29650 + C29651) * C26055) *
                C89999 -
            (((C186 * C29517 + C89926 * C29624) * C89783 +
              (C186 * C29516 + C89926 * C29623) * C13338) *
                 C26055 +
             (C29651 + C29650) * C26054 + (C29635 + C29634) * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C13338 +
              (C273 * C112 + C89937 * C280) * C89783) *
                 C13334 +
             (C14075 + C14076) * C13335 + C14083 * C13336) *
                C89999 -
            ((C17106 + C17107) * C13336 + (C17108 + C17109) * C13335 +
             ((C273 * C1770 + C89937 * C1994) * C89783 +
              (C273 * C1762 + C89937 * C1986) * C13338) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
             ((C273 * C16849 + C89937 * C17081) * C13338 +
              (C273 * C16851 + C89937 * C17083) * C89783) *
                 C13336) *
                C89907 -
            ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
             (C14076 + C14075) * C13334) *
                C89999) *
               C89879) *
              C825 +
          ((((C2020 * C13338 + C2019 * C89783) * C13334 +
             (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                C89907 -
            (C14074 * C13336 + (C14059 + C14058) * C13335 +
             (C304 * C89783 + C303 * C13338) * C13334) *
                C89999) *
               C89998 +
           (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
             (C14081 + C14082) * C13336) *
                C89999 -
            (((C273 * C16852 + C89937 * C17084) * C89783 +
              (C273 * C16850 + C89937 * C17082) * C13338) *
                 C13336 +
             (C17111 + C17110) * C13335 + (C17095 + C17094) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C101 +
             (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
             C305 * C105 + C306 * C91) *
                C89926 * C89999 -
            (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
             (C273 * C1770 + C89937 * C1994) * C89 +
             (C273 * C1762 + C89937 * C1986) * C101) *
                C89926 * C89907) *
               C89998 +
           (((C273 * C4159 + C89937 * C4393) * C101 +
             (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
             C4411 * C90 + C4412 * C105 + C4413 * C91) *
                C89926 * C89907 -
            (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
             (C273 * C837 + C89937 * C1061) * C89 +
             (C273 * C829 + C89937 * C1053) * C101) *
                C89926 * C89999) *
               C89879) *
              C825 +
          (((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
             C3585 * C105 + C3586 * C91) *
                C89926 * C89907 -
            (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 + C304 * C89 +
             C303 * C101) *
                C89926 * C89999) *
               C89998 +
           ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
             C2864 * C105 + C2865 * C91) *
                C89926 * C89999 -
            ((C273 * C4166 + C89937 * C4400) * C91 +
             (C273 * C4162 + C89937 * C4396) * C105 + C4413 * C90 +
             C4412 * C103 + C4411 * C89 + C4410 * C101) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
              C26161 * C1763 + C26055 * C1987) *
                 C13338 +
             (C26159 * C112 + C26053 * C280 + C26160 * C1770 + C26054 * C1994 +
              C26161 * C1771 + C26055 * C1995) *
                 C89783) *
                C89926 * C89999 -
            ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
              C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                 C89783 +
             (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
              C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                 C13338) *
                C89926 * C89907) *
               C89998 +
           (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
              C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                 C13338 +
             (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
              C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                 C89783) *
                C89926 * C89907 -
            ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
              C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                 C89783 +
             (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
              C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                 C13338) *
                C89926 * C89999) *
               C89879) *
              C825 +
          ((((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
              C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                 C13338 +
             (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 +
              C26054 * C1996 + C26161 * C10622 + C26055 * C10740) *
                 C89783) *
                C89926 * C89907 -
            ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
              C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                 C89783 +
             (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
              C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                 C13338) *
                C89926 * C89999) *
               C89998 +
           (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
              C26161 * C6324 + C26055 * C6490) *
                 C13338 +
             (C26159 * C836 + C26053 * C1060 + C26160 * C4164 + C26054 * C4398 +
              C26161 * C6327 + C26055 * C6493) *
                 C89783) *
                C89926 * C89999 -
            ((C26161 * C29517 + C26055 * C29750 + C26160 * C6327 +
              C26054 * C6493 + C26159 * C4164 + C26053 * C4398) *
                 C89783 +
             (C26161 * C29516 + C26055 * C29749 + C26160 * C6324 +
              C26054 * C6490 + C26159 * C4160 + C26053 * C4394) *
                 C13338) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C13401 +
             (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
             C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
                C89937 * C89999 -
            (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
             C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
             (C13338 * C1762 + C89783 * C1770) * C13401) *
                C89937 * C89907) *
               C89998 +
           ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
             C17228 * C13335 + (C13338 * C16849 + C89783 * C16851) * C13403 +
             (C13338 * C16979 + C89783 * C17209) * C13336) *
                C89937 * C89907 -
            (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
             C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
                C89937 * C89999) *
               C89879) *
              C825 +
          ((((C13338 * C1761 + C89783 * C1769) * C13401 +
             (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
             C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
                C89937 * C89907 -
            (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
             C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
             (C13338 * C107 + C89783 * C113) * C13401) *
                C89937 * C89999) *
               C89998 +
           ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
             C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
                C89937 * C89999 -
            ((C13338 * C16980 + C89783 * C17210) * C13336 +
             (C13338 * C16850 + C89783 * C16852) * C13403 + C17235 * C13335 +
             C17234 * C13402 + C17233 * C13334 + C17232 * C13401) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C186 +
             (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
              C105 * C189 + C91 * C362) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
              C101 * C1872 + C89 * C2100) *
                 C89926 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C186) *
                C89937 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C186 +
             (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
              C105 * C4277 + C91 * C4513) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
              C101 * C939 + C89 * C1167) *
                 C89926 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C186) *
                C89937 * C89999) *
               C89879) *
              C825 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C186 +
             (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
              C105 * C1876 + C91 * C2104) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
              C101 * C188 + C89 * C361) *
                 C89926 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C186) *
                C89937 * C89999) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C186 +
             (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
              C105 * C943 + C91 * C1171) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C4278 + C91 * C4514 + C103 * C4277 + C90 * C4513 +
              C101 * C4276 + C89 * C4512) *
                 C89926 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C186) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C186 +
              (C13338 * C187 + C89783 * C360) * C89926) *
                 C26053 +
             (C27577 + C27578) * C26054 + C27589 * C26055) *
                C89999 -
            ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
             (C27578 + C27577) * C26053) *
                C89907) *
               C89998 +
           (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
             ((C13338 * C23356 + C89783 * C23358) * C186 +
              (C13338 * C23415 + C89783 * C23523) * C89926) *
                 C26055) *
                C89907 -
            ((C29854 + C29853) * C26055 + (C29852 + C29851) * C26054 +
             (C14185 * C89926 + C14184 * C186) * C26053) *
                C89999) *
               C89879) *
              C825 +
          ((((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
             (C27587 + C27588) * C26055) *
                C89907 -
            (C27590 * C26055 + (C27584 + C27583) * C26054 +
             ((C13338 * C188 + C89783 * C361) * C89926 +
              (C13338 * C107 + C89783 * C113) * C186) *
                 C26053) *
                C89999) *
               C89998 +
           (((C14190 * C186 + C14191 * C89926) * C26053 +
             (C29855 + C29856) * C26054 + (C29863 + C29864) * C26055) *
                C89999 -
            (((C13338 * C29623 + C89783 * C29849) * C89926 +
              (C13338 * C29516 + C89783 * C29517) * C186) *
                 C26055 +
             (C29864 + C29863) * C26054 + (C29856 + C29855) * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
             C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 +
             C13560 + C13336 * C1250) *
                C89783 * C89937 * C89999 -
            (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
             C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
             C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                C89783 * C89937 * C89907) *
               C89998 +
           ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
             C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
             C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                C89783 * C89937 * C89907 -
            (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
             C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 +
             C14274 + C13334 * C1249) *
                C89783 * C89937 * C89999) *
               C89879) *
              C825 +
          (((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 +
             C13555 * C4160 + C15061 + C15061 + C13335 * C4614 +
             C13556 * C8591 + C15062 + C15062 + C13336 * C8914) *
                C89783 * C89937 * C89907 -
            (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
             C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 +
             C13563 + C13334 * C418) *
                C89783 * C89937 * C89999) *
               C89998 +
           ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
             C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
             C14280 + C13336 * C6029) *
                C89783 * C89937 * C89999 -
            (C13556 * C16850 + C17339 + C17339 + C13336 * C17334 +
             C13555 * C8591 + C17340 + C17340 + C13335 * C8914 +
             C13554 * C4160 + C17341 + C17341 + C13334 * C4614) *
                C89783 * C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
             C447 * C91) *
                C89937 * C89999 -
            (C2213 * C91 + C2214 * C90 +
             (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                C89937 * C89907) *
               C89998 +
           (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
             C4630 * C90 + C4631 * C91) *
                C89937 * C89907 -
            (C1280 * C91 + C1281 * C90 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                C89937 * C89999) *
               C89879) *
              C825 +
          (((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
            (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89999) *
               C89998 +
           ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89999 -
            ((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C91 +
             C4631 * C90 + C4630 * C89) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
             C27691 * C26054 + C27692 * C26055) *
                C89999 -
            (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
               C89998 +
           ((C29982 * C26053 + C29983 * C26054 +
             (C416 * C23356 + C29968 + C29968 + C89926 * C23575) * C89783 *
                 C26055) *
                C89907 -
            (C29983 * C26055 + C29982 * C26054 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
                C89999) *
               C89879) *
              C825 +
          (((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C89907 -
            (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
                C89999) *
               C89998 +
           ((C1281 * C89783 * C26053 + C29969 * C26054 + C29984 * C26055) *
                C89999 -
            ((C416 * C29516 + C29972 + C29972 + C89926 * C29962) * C89783 *
                 C26055 +
             C29984 * C26054 + C29969 * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C13401 +
             (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
             C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
                C89783 * C89999 -
            (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
             C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
             (C273 * C1762 + C89937 * C1986) * C13401) *
                C89783 * C89907) *
               C89998 +
           ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
             C17448 * C13335 + (C273 * C16849 + C89937 * C17081) * C13403 +
             (C273 * C16979 + C89937 * C17439) * C13336) *
                C89783 * C89907 -
            (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
             C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
                C89783 * C89999) *
               C89879) *
              C825 +
          (((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
             C17104 * C13403 + C17450 * C13336) *
                C89783 * C89907 -
            (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
             C518 * C13334 + C303 * C13401) *
                C89783 * C89999) *
               C89998 +
           ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
             C14072 * C13403 + C14371 * C13336) *
                C89783 * C89999 -
            ((C273 * C16980 + C89937 * C17440) * C13336 +
             (C273 * C16850 + C89937 * C17082) * C13403 + C17450 * C13335 +
             C17104 * C13402 + C4740 * C13334 + C4410 * C13401) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C186 +
              (C273 * C187 + C89937 * C499) * C89926) *
                 C89 +
             (C506 + C522) * C90 + C526 * C91) *
                C89999 -
            (C3818 * C91 + (C2316 + C2304) * C90 +
             ((C273 * C1872 + C89937 * C2292) * C89926 +
              (C273 * C1762 + C89937 * C1986) * C186) *
                 C89) *
                C89907) *
               C89998 +
           ((((C273 * C4159 + C89937 * C4393) * C186 +
              (C273 * C4275 + C89937 * C4729) * C89926) *
                 C89 +
             (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
                C89907 -
            (C3097 * C91 + (C1383 + C1371) * C90 +
             ((C273 * C939 + C89937 * C1359) * C89926 +
              (C273 * C829 + C89937 * C1053) * C186) *
                 C89) *
                C89999) *
               C89879) *
              C825 +
          ((((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
             (C3819 + C3823) * C91) *
                C89907 -
            (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89999) *
               C89998 +
           (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
             (C3098 + C3102) * C91) *
                C89999 -
            (((C273 * C4278 + C89937 * C4732) * C89926 +
              (C273 * C4162 + C89937 * C4396) * C186) *
                 C91 +
             (C4743 + C4737) * C90 + (C4742 + C4734) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
              C26161 * C1763 + C26055 * C1987) *
                 C186 +
             (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
              C26161 * C1873 + C26055 * C2293) *
                 C89926) *
                C89783 * C89999 -
            ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
              C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                 C89926 +
             (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
              C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                 C186) *
                C89783 * C89907) *
               C89998 +
           (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
              C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                 C186 +
             (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 +
              C26054 * C6728 + C26161 * C23415 + C26055 * C23630) *
                 C89926) *
                C89783 * C89907 -
            ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 +
              C26054 * C4729 + C26159 * C939 + C26053 * C1359) *
                 C89926 +
             (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
              C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                 C186) *
                C89783 * C89999) *
               C89879) *
              C825 +
          ((((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
              C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                 C186 +
             (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 +
              C26054 * C2294 + C26161 * C10681 + C26055 * C10902) *
                 C89926) *
                C89783 * C89907 -
            ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 +
              C26054 * C2291 + C26159 * C188 + C26053 * C500) *
                 C89926 +
             (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
              C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                 C186) *
                C89783 * C89999) *
               C89998 +
           (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
              C26161 * C6324 + C26055 * C6490) *
                 C186 +
             (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
              C26161 * C6410 + C26055 * C6727) *
                 C89926) *
                C89783 * C89999 -
            ((C26161 * C29623 + C26055 * C30082 + C26160 * C6410 +
              C26054 * C6727 + C26159 * C4276 + C26053 * C4730) *
                 C89926 +
             (C26161 * C29516 + C26055 * C29749 + C26160 * C6324 +
              C26054 * C6490 + C26159 * C4160 + C26053 * C4394) *
                 C186) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C273 +
              (C13338 * C274 + C89783 * C577) * C89937) *
                 C13334 +
             (C14448 + C14472) * C13335 + C14478 * C13336) *
                C89999 -
            ((C17567 + C17553) * C13336 + (C17568 + C17556) * C13335 +
             ((C13338 * C1986 + C89783 * C2394) * C89937 +
              (C13338 * C1762 + C89783 * C1770) * C273) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
             ((C13338 * C16849 + C89783 * C16851) * C273 +
              (C13338 * C17081 + C89783 * C17548) * C89937) *
                 C13336) *
                C89907 -
            ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
             (C14472 + C14448) * C13334) *
                C89999) *
               C89879) *
              C825 +
          (((((C13338 * C1761 + C89783 * C1769) * C273 +
              (C13338 * C1985 + C89783 * C2393) * C89937) *
                 C13334 +
             (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                C89907 -
            (C14479 * C13336 + (C14475 + C14457) * C13335 +
             ((C13338 * C275 + C89783 * C578) * C89937 +
              (C13338 * C107 + C89783 * C113) * C273) *
                 C13334) *
                C89999) *
               C89998 +
           (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
             (C14463 + C14477) * C13336) *
                C89999 -
            (((C13338 * C17082 + C89783 * C17549) * C89937 +
              (C13338 * C16850 + C89783 * C16852) * C273) *
                 C13336 +
             (C17570 + C17560) * C13335 + (C17569 + C17557) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C273 +
             (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
              C105 * C276 + C91 * C579) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
              C101 * C1986 + C89 * C2394) *
                 C89937 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C273) *
                C89926 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C273 +
             (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
              C105 * C4395 + C91 * C4843) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
              C101 * C1053 + C89 * C1461) *
                 C89937 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C273) *
                C89926 * C89999) *
               C89879) *
              C825 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C273 +
             (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
              C105 * C1990 + C91 * C2398) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
              C101 * C275 + C89 * C578) *
                 C89937 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C273) *
                C89926 * C89999) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C273 +
             (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
              C105 * C1057 + C91 * C1465) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C4396 + C91 * C4844 + C103 * C4395 + C90 * C4843 +
              C101 * C4394 + C89 * C4842) *
                 C89937 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C273) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C26159 +
             (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
             C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
                C89926 * C89999 -
            (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
             C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
                C89926 * C89907) *
               C89998 +
           ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
             C19542 * C26054 + (C13338 * C23356 + C89783 * C23358) * C26161 +
             (C13338 * C23469 + C89783 * C23682) * C26055) *
                C89926 * C89907 -
            (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
             C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
                C89926 * C89999) *
               C89879) *
              C825 +
          (((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
             C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
                C89926 * C89907 -
            (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
             C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
             (C13338 * C107 + C89783 * C113) * C26159) *
                C89926 * C89999) *
               C89998 +
           ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
             C17565 * C26054 + C29861 * C26161 + C30185 * C26055) *
                C89926 * C89999 -
            ((C13338 * C29749 + C89783 * C30181) * C26055 +
             (C13338 * C29516 + C89783 * C29517) * C26161 + C30185 * C26054 +
             C29861 * C26160 + C17565 * C26053 + C17232 * C26159) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C273 +
             (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
              C13403 * C1054 + C13336 * C1544) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
              C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                 C89937 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C273) *
                C89783 * C89907) *
               C89998 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C273 +
             (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
              C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
              C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                 C89937 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C273) *
                C89783 * C89999) *
               C89879) *
              C825 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C273 +
             (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 +
              C13335 * C4944 + C13403 * C8757 + C13336 * C9148) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
              C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                 C89937 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C273) *
                C89783 * C89999) *
               C89998 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C273 +
             (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
              C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C17082 + C13336 * C17669 + C13402 * C8757 +
              C13335 * C9148 + C13401 * C4394 + C13334 * C4944) *
                 C89937 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C273) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C273 +
              (C186 * C274 + C89926 * C633) * C89937) *
                 C89 +
             (C640 + C656) * C90 + C660 * C91) *
                C89999 -
            (C3974 * C91 + (C2500 + C2488) * C90 +
             ((C186 * C1986 + C89926 * C2476) * C89937 +
              (C186 * C1762 + C89926 * C1872) * C273) *
                 C89) *
                C89907) *
               C89998 +
           ((((C186 * C4159 + C89926 * C4275) * C273 +
              (C186 * C4393 + C89926 * C4943) * C89937) *
                 C89 +
             (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                C89907 -
            (C3253 * C91 + (C1567 + C1555) * C90 +
             ((C186 * C1053 + C89926 * C1543) * C89937 +
              (C186 * C829 + C89926 * C939) * C273) *
                 C89) *
                C89999) *
               C89879) *
              C825 +
          ((((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
             (C3975 + C3979) * C91) *
                C89907 -
            (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89999) *
               C89998 +
           (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
             (C3254 + C3258) * C91) *
                C89999 -
            (((C186 * C4396 + C89926 * C4946) * C89937 +
              (C186 * C4162 + C89926 * C4278) * C273) *
                 C91 +
             (C4957 + C4951) * C90 + (C4956 + C4948) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C26159 +
             (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
             C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
                C89783 * C89999 -
            (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
             C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
                C89783 * C89907) *
               C89998 +
           ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
             C30292 * C26054 + (C186 * C23356 + C89926 * C23415) * C26161 +
             (C186 * C23469 + C89926 * C23734) * C26055) *
                C89783 * C89907 -
            (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
             C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
             (C186 * C829 + C89926 * C939) * C26159) *
                C89783 * C89999) *
               C89879) *
              C825 +
          (((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
             C27375 * C26161 + C27952 * C26055) *
                C89783 * C89907 -
            (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
             C652 * C26053 + C216 * C26159) *
                C89783 * C89999) *
               C89998 +
           ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
             C29644 * C26161 + C30293 * C26055) *
                C89783 * C89999 -
            ((C186 * C29749 + C89926 * C30283) * C26055 +
             (C186 * C29516 + C89926 * C29623) * C26161 + C30293 * C26054 +
             C29644 * C26160 + C4954 * C26053 + C4292 * C26159) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
             C14650 * C13335 + C14651 * C13336) *
                C89783 * C89999 -
            (C17785 * C13336 + C17786 * C13335 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
                C89783 * C89907) *
               C89998 +
           ((C17786 * C13334 + C17785 * C13335 +
             (C711 * C16849 + C17775 + C17775 + C89937 * C17768) * C13336) *
                C89783 * C89907 -
            (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
                C89999) *
               C89879) *
              C825 +
          (((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
                C89907 -
            (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
                C89999) *
               C89998 +
           ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
                C89999 -
            ((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C13336 +
             C17787 * C13335 + C5072 * C13334) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
             C745 * C90 + C746 * C91) *
                C89999 -
            (C2613 * C91 + C2614 * C90 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
                C89907) *
               C89998 +
           (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
             C5074 * C90 + C5075 * C91) *
                C89907 -
            (C1680 * C91 + C1681 * C90 +
             (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                C89999) *
               C89879) *
              C825 +
          (((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
            (C747 * C91 + C746 * C90 + C745 * C89) * C89999) *
               C89998 +
           ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89999 -
            ((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C89926 * C91 +
             C5075 * C90 + C5074 * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
             C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
             C26468 + C26055 * C2579) *
                C89926 * C89783 * C89999 -
            (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
             C26463 * C1763 + C28030 + C28030 + C26054 * C2579 +
             C26462 * C1762 + C28031 + C28031 + C26053 * C2578) *
                C89926 * C89783 * C89907) *
               C89998 +
           ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 +
             C26463 * C6325 + C30394 + C30394 + C26054 * C6959 +
             C26464 * C23356 + C30395 + C30395 + C26055 * C23786) *
                C89926 * C89783 * C89907 -
            (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 +
             C26463 * C4159 + C27147 + C27147 + C26054 * C5055 + C26462 * C829 +
             C27148 + C27148 + C26053 * C1645) *
                C89926 * C89783 * C89999) *
               C89879) *
              C825 +
          (((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 +
             C26463 * C1764 + C28036 + C28036 + C26054 * C2580 +
             C26464 * C10619 + C28037 + C28037 + C26055 * C11061) *
                C89926 * C89783 * C89907 -
            (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 +
             C26463 * C1761 + C26470 + C26470 + C26054 * C2577 + C26462 * C107 +
             C26471 + C26471 + C26053 * C713) *
                C89926 * C89783 * C89999) *
               C89998 +
           ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
             C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
             C27154 + C26055 * C6958) *
                C89926 * C89783 * C89999 -
            (C26464 * C29516 + C30396 + C30396 + C26055 * C30391 +
             C26463 * C6324 + C30397 + C30397 + C26054 * C6958 +
             C26462 * C4160 + C30398 + C30398 + C26053 * C5056) *
                C89926 * C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
               C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                  C89937 * C89926 * C89843 * C89827 * C96 -
              (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
               C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                  C89937 * C89926 * C89843 * C89827 * C97 +
              (C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 +
               C132 + C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
                  C89937 * C89926 * C89843 * C89827 * C98 -
              (C104 * C111 + C134 + C134 + C91 * C123 + C102 * C110 + C135 +
               C135 + C90 * C122 + C100 * C109 + C136 + C136 + C89 * C121) *
                  C89937 * C89926 * C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
                C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                   C89937 * C89926 * C89843 * C822 -
               (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
                C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                   C89937 * C89926 * C89843 * C823 +
               (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 +
                C856 + C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
                   C89937 * C89926 * C89843 * C824) *
                  C825 +
              ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
                C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                   C89937 * C89926 * C89843 * C823 -
               (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
                C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                   C89937 * C89926 * C89843 * C822 -
               (C104 * C834 + C861 + C861 + C91 * C850 + C102 * C832 + C862 +
                C862 + C90 * C848 + C100 * C831 + C863 + C863 + C89 * C847) *
                   C89937 * C89926 * C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C1757 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C1758 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C1759) *
              C89827 * C825 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C1758 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C1757 -
           (C104 * C1767 + C1794 + C1794 + C91 * C1783 + C102 * C1765 + C1795 +
            C1795 + C90 * C1781 + C100 * C1764 + C1796 + C1796 + C89 * C1780) *
               C89937 * C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           (C13337 * C829 + C13341 + C13341 + C89783 * C845) * C89937 * C13335 +
           (C13337 * C830 + C13342 + C13342 + C89783 * C846) * C89937 *
               C13336) *
              C89843 * C89827 * C96 -
          ((C13337 * C831 + C13343 + C13343 + C89783 * C847) * C89937 * C13336 +
           (C13337 * C828 + C13344 + C13344 + C89783 * C844) * C89937 * C13335 +
           (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
               C13334) *
              C89843 * C89827 * C97 +
          ((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 * C13334 +
           (C13337 * C827 + C13347 + C13347 + C89783 * C843) * C89937 * C13335 +
           (C13337 * C832 + C13348 + C13348 + C89783 * C848) * C89937 *
               C13336) *
              C89843 * C89827 * C98 -
          ((C13337 * C834 + C13349 + C13349 + C89783 * C850) * C89937 * C13336 +
           (C13337 * C833 + C13350 + C13350 + C89783 * C849) * C89937 * C13335 +
           (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C89937 *
               C13334) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C822 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C823 +
           (C13885 * C13334 + C13886 * C13335 +
            (C13337 * C13843 + C13857 + C13857 + C89783 * C13847) * C89937 *
                C13336) *
               C89843 * C824) *
              C825 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C823 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C822 -
           ((C13337 * C13844 + C13865 + C13865 + C89783 * C13848) * C89937 *
                C13336 +
            C13889 * C13335 + C13888 * C13334) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C1757 -
           ((C13337 * C8592 + C14734 + C14734 + C89783 * C8598) * C89937 *
                C13336 +
            (C13337 * C4159 + C14735 + C14735 + C89783 * C4167) * C89937 *
                C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C1758 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            (C13337 * C6325 + C14738 + C14738 + C89783 * C6331) * C89937 *
                C13335 +
            (C13337 * C14727 + C14739 + C14739 + C89783 * C14731) * C89937 *
                C13336) *
               C1759) *
              C89827 * C825 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            (C13337 * C4160 + C14741 + C14741 + C89783 * C4168) * C89937 *
                C13335 +
            (C13337 * C8591 + C14742 + C14742 + C89783 * C8597) * C89937 *
                C13336) *
               C1758 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C1757 -
           ((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C89937 *
                C13336 +
            (C13337 * C6324 + C14744 + C14744 + C89783 * C6330) * C89937 *
                C13335 +
            (C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C89937 *
                C13334) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
           (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C26054 +
           (C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C26055) *
              C89926 * C89843 * C89827 * C96 -
          ((C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C26055 +
           (C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C26054 +
           (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
              C89926 * C89843 * C89827 * C97 +
          ((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
           (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C26054 +
           (C13337 * C1765 + C26057 + C26057 + C89783 * C1781) * C26055) *
              C89926 * C89843 * C89827 * C98 -
          ((C13337 * C1767 + C26058 + C26058 + C89783 * C1783) * C26055 +
           (C13337 * C1766 + C26059 + C26059 + C89783 * C1782) * C26054 +
           (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C26053) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C26054 +
            (C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C26055) *
               C89926 * C89843 * C822 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C89843 * C823 +
           (C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
               C89843 * C824) *
              C825 +
          ((C13881 * C26053 + C16876 * C26054 +
            (C13337 * C6324 + C14744 + C14744 + C89783 * C6330) * C26055) *
               C89926 * C89843 * C823 -
           ((C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C26055 +
            (C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C89843 * C822 -
           ((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C26055 +
            C16877 * C26054 + C13882 * C26053) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C1757 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C1758 +
           (C27266 * C26053 + C27267 * C26054 +
            (C13337 * C27231 + C27244 + C27244 + C89783 * C27235) * C26055) *
               C89926 * C1759) *
              C89827 * C825 +
          ((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
               C1758 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C1757 -
           ((C13337 * C27232 + C27252 + C27252 + C89783 * C27236) * C26055 +
            C27270 * C26054 + C27269 * C26053) *
               C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C186 * C106 + C89926 * C187) * C101 +
               (C186 * C112 + C89926 * C193) * C89 + C216 * C103 + C217 * C90 +
               C218 * C105 + C219 * C91) *
                  C89937 * C89843 * C89827 * C96 -
              (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
               C217 * C89 + C216 * C101) *
                  C89937 * C89843 * C89827 * C97 +
              (C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
               C222 * C105 + C223 * C91) *
                  C89937 * C89843 * C89827 * C98 -
              ((C186 * C117 + C89926 * C198) * C91 +
               (C186 * C111 + C89926 * C192) * C105 + C223 * C90 + C222 * C103 +
               C220 * C89 + C221 * C101) *
                  C89937 * C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C186 * C106 + C89926 * C187) * C101 +
                (C186 * C112 + C89926 * C193) * C89 + C216 * C103 + C217 * C90 +
                C218 * C105 + C219 * C91) *
                   C89937 * C89843 * C822 -
               (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                (C186 * C837 + C89926 * C947) * C89 +
                (C186 * C829 + C89926 * C939) * C101) *
                   C89937 * C89843 * C823 +
               ((C186 * C830 + C89926 * C940) * C101 +
                (C186 * C838 + C89926 * C948) * C89 + C974 * C103 + C975 * C90 +
                C976 * C105 + C977 * C91) *
                   C89937 * C89843 * C824) *
                  C825 +
              ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                (C186 * C833 + C89926 * C943) * C105 +
                (C186 * C841 + C89926 * C951) * C91) *
                   C89937 * C89843 * C823 -
               (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                C217 * C89 + C216 * C101) *
                   C89937 * C89843 * C822 -
               ((C186 * C842 + C89926 * C952) * C91 +
                (C186 * C834 + C89926 * C944) * C105 + C977 * C90 +
                C976 * C103 + C975 * C89 + C974 * C101) *
                   C89937 * C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C101 +
            (C186 * C112 + C89926 * C193) * C89 + C216 * C103 + C217 * C90 +
            C218 * C105 + C219 * C91) *
               C89937 * C1757 -
           (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
            (C186 * C1770 + C89926 * C1880) * C89 +
            (C186 * C1762 + C89926 * C1872) * C101) *
               C89937 * C1758 +
           ((C186 * C1763 + C89926 * C1873) * C101 +
            (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 + C1908 * C90 +
            C1909 * C105 + C1910 * C91) *
               C89937 * C1759) *
              C89827 * C825 +
          ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
            (C186 * C1766 + C89926 * C1876) * C105 +
            (C186 * C1774 + C89926 * C1884) * C91) *
               C89937 * C1758 -
           (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 + C217 * C89 +
            C216 * C101) *
               C89937 * C1757 -
           ((C186 * C1775 + C89926 * C1885) * C91 +
            (C186 * C1767 + C89926 * C1877) * C105 + C1910 * C90 +
            C1909 * C103 + C1908 * C89 + C1907 * C101) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C13338 +
           (C13401 * C112 + C13334 * C193 + C13402 * C837 + C13335 * C947 +
            C13403 * C838 + C13336 * C948) *
               C89783) *
              C89937 * C89843 * C89827 * C96 -
          ((C13403 * C839 + C13336 * C949 + C13402 * C836 + C13335 * C946 +
            C13401 * C113 + C13334 * C194) *
               C89783 +
           (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
            C13401 * C107 + C13334 * C188) *
               C13338) *
              C89937 * C89843 * C89827 * C97 +
          ((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
            C13403 * C832 + C13336 * C942) *
               C13338 +
           (C13401 * C114 + C13334 * C195 + C13402 * C835 + C13335 * C945 +
            C13403 * C840 + C13336 * C950) *
               C89783) *
              C89937 * C89843 * C89827 * C98 -
          ((C13403 * C842 + C13336 * C952 + C13402 * C841 + C13335 * C951 +
            C13401 * C115 + C13334 * C196) *
               C89783 +
           (C13403 * C834 + C13336 * C944 + C13402 * C833 + C13335 * C943 +
            C13401 * C109 + C13334 * C190) *
               C13338) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C13338 +
            (C13401 * C112 + C13334 * C193 + C13402 * C837 + C13335 * C947 +
             C13403 * C838 + C13336 * C948) *
                C89783) *
               C89937 * C89843 * C822 -
           ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 + C13335 * C948 +
             C13401 * C837 + C13334 * C947) *
                C89783 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C13338) *
               C89937 * C89843 * C823 +
           ((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C13338 +
            (C13401 * C838 + C13334 * C948 + C13402 * C5806 + C13335 * C5868 +
             C13403 * C13845 + C13336 * C13965) *
                C89783) *
               C89937 * C89843 * C824) *
              C825 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C13338 +
            (C13401 * C836 + C13334 * C946 + C13402 * C839 + C13335 * C949 +
             C13403 * C5805 + C13336 * C5867) *
                C89783) *
               C89937 * C89843 * C823 -
           ((C13403 * C839 + C13336 * C949 + C13402 * C836 + C13335 * C946 +
             C13401 * C113 + C13334 * C194) *
                C89783 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C13338) *
               C89937 * C89843 * C822 -
           ((C13403 * C13846 + C13336 * C13966 + C13402 * C5805 +
             C13335 * C5867 + C13401 * C839 + C13334 * C949) *
                C89783 +
            (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
             C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                C13338) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C13338 +
            (C13401 * C112 + C13334 * C193 + C13402 * C837 + C13335 * C947 +
             C13403 * C838 + C13336 * C948) *
                C89783) *
               C89937 * C1757 -
           ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 + C13335 * C4279 +
             C13401 * C1770 + C13334 * C1880) *
                C89783 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C13338) *
               C89937 * C1758 +
           ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
             C13403 * C14727 + C13336 * C14819) *
                C13338 +
            (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 + C13335 * C6414 +
             C13403 * C14729 + C13336 * C14821) *
                C89783) *
               C89937 * C1759) *
              C89827 * C825 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C13338 +
            (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 + C13335 * C4280 +
             C13403 * C8594 + C13336 * C8680) *
                C89783) *
               C89937 * C1758 -
           ((C13403 * C839 + C13336 * C949 + C13402 * C836 + C13335 * C946 +
             C13401 * C113 + C13334 * C194) *
                C89783 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C13338) *
               C89937 * C1757 -
           ((C13403 * C14730 + C13336 * C14822 + C13402 * C6327 +
             C13335 * C6413 + C13401 * C1772 + C13334 * C1882) *
                C89783 +
            (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
             C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                C13338) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C186 * C106 + C89926 * C187) * C13338 +
                                (C186 * C112 + C89926 * C193) * C89783) *
                                   C26053 +
                               ((C186 * C1762 + C89926 * C1872) * C13338 +
                                (C186 * C1770 + C89926 * C1880) * C89783) *
                                   C26054 +
                               ((C186 * C1763 + C89926 * C1873) * C13338 +
                                (C186 * C1771 + C89926 * C1881) * C89783) *
                                   C26055) *
                                  C89843 * C89827 * C96 -
                              ((C1908 * C89783 + C1907 * C13338) * C26055 +
                               (C1905 * C89783 + C1906 * C13338) * C26054 +
                               (C217 * C89783 + C216 * C13338) * C26053) *
                                  C89843 * C89827 * C97 +
                              ((C218 * C13338 + C219 * C89783) * C26053 +
                               (C1904 * C13338 + C1903 * C89783) * C26054 +
                               (C1909 * C13338 + C1910 * C89783) * C26055) *
                                  C89843 * C89827 * C98 -
                              (((C186 * C1775 + C89926 * C1885) * C89783 +
                                (C186 * C1767 + C89926 * C1877) * C13338) *
                                   C26055 +
                               (C3504 * C89783 + C3503 * C13338) * C26054 +
                               (C220 * C89783 + C221 * C13338) * C26053) *
                                  C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C186 * C106 + C89926 * C187) * C13338 +
                                 (C186 * C112 + C89926 * C193) * C89783) *
                                    C26053 +
                                ((C186 * C1762 + C89926 * C1872) * C13338 +
                                 (C186 * C1770 + C89926 * C1880) * C89783) *
                                    C26054 +
                                ((C186 * C1763 + C89926 * C1873) * C13338 +
                                 (C186 * C1771 + C89926 * C1881) * C89783) *
                                    C26055) *
                                   C89843 * C822 -
                               (((C186 * C6328 + C89926 * C6414) * C89783 +
                                 (C186 * C6325 + C89926 * C6411) * C13338) *
                                    C26055 +
                                ((C186 * C4163 + C89926 * C4279) * C89783 +
                                 (C186 * C4159 + C89926 * C4275) * C13338) *
                                    C26054 +
                                ((C186 * C837 + C89926 * C947) * C89783 +
                                 (C186 * C829 + C89926 * C939) * C13338) *
                                    C26053) *
                                   C89843 * C823 +
                               (((C186 * C830 + C89926 * C940) * C13338 +
                                 (C186 * C838 + C89926 * C948) * C89783) *
                                    C26053 +
                                ((C186 * C8592 + C89926 * C8678) * C13338 +
                                 (C186 * C8595 + C89926 * C8681) * C89783) *
                                    C26054 +
                                ((C186 * C14727 + C89926 * C14819) * C13338 +
                                 (C186 * C14729 + C89926 * C14821) * C89783) *
                                    C26055) *
                                   C89843 * C824) *
                                  C825 +
                              (((C973 * C13338 + C972 * C89783) * C26053 +
                                (C4292 * C13338 + C4293 * C89783) * C26054 +
                                ((C186 * C6324 + C89926 * C6410) * C13338 +
                                 (C186 * C6327 + C89926 * C6413) * C89783) *
                                    C26055) *
                                   C89843 * C823 -
                               ((C1908 * C89783 + C1907 * C13338) * C26055 +
                                (C1905 * C89783 + C1906 * C13338) * C26054 +
                                (C217 * C89783 + C216 * C13338) * C26053) *
                                   C89843 * C822 -
                               (((C186 * C14730 + C89926 * C14822) * C89783 +
                                 (C186 * C14728 + C89926 * C14820) * C13338) *
                                    C26055 +
                                ((C186 * C8594 + C89926 * C8680) * C89783 +
                                 (C186 * C8591 + C89926 * C8677) * C13338) *
                                    C26054 +
                                (C975 * C89783 + C974 * C13338) * C26053) *
                                   C89843 * C824) *
                                  C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C13338 +
             (C186 * C112 + C89926 * C193) * C89783) *
                C26053 +
            (C27378 + C27379) * C26054 + C27386 * C26055) *
               C1757 -
           ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
            (C27379 + C27378) * C26053) *
               C1758 +
           (C27386 * C26053 + (C27383 + C27382) * C26054 +
            ((C186 * C27231 + C89926 * C27344) * C13338 +
             (C186 * C27233 + C89926 * C27346) * C89783) *
                C26055) *
               C1759) *
              C89827 * C825 +
          (((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
            (C27384 + C27385) * C26055) *
               C1758 -
           (C27377 * C26055 + (C27362 + C27361) * C26054 +
            (C217 * C89783 + C216 * C13338) * C26053) *
               C1757 -
           (((C186 * C27234 + C89926 * C27347) * C89783 +
             (C186 * C27232 + C89926 * C27345) * C13338) *
                C26055 +
            (C27385 + C27384) * C26054 + C27377 * C26053) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C273 * C106 + C89937 * C274) * C101 +
               (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
               C305 * C105 + C306 * C91) *
                  C89926 * C89843 * C89827 * C96 -
              (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
               C304 * C89 + C303 * C101) *
                  C89926 * C89843 * C89827 * C97 +
              (C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
               C309 * C105 + C310 * C91) *
                  C89926 * C89843 * C89827 * C98 -
              ((C273 * C117 + C89937 * C285) * C91 +
               (C273 * C111 + C89937 * C279) * C105 + C310 * C90 + C309 * C103 +
               C307 * C89 + C308 * C101) *
                  C89926 * C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C273 * C106 + C89937 * C274) * C101 +
                (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
                C305 * C105 + C306 * C91) *
                   C89926 * C89843 * C822 -
               (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                (C273 * C837 + C89937 * C1061) * C89 +
                (C273 * C829 + C89937 * C1053) * C101) *
                   C89926 * C89843 * C823 +
               ((C273 * C830 + C89937 * C1054) * C101 +
                (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                C1089 * C90 + C1090 * C105 + C1091 * C91) *
                   C89926 * C89843 * C824) *
                  C825 +
              ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                (C273 * C833 + C89937 * C1057) * C105 +
                (C273 * C841 + C89937 * C1065) * C91) *
                   C89926 * C89843 * C823 -
               (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                C304 * C89 + C303 * C101) *
                   C89926 * C89843 * C822 -
               ((C273 * C842 + C89937 * C1066) * C91 +
                (C273 * C834 + C89937 * C1058) * C105 + C1091 * C90 +
                C1090 * C103 + C1089 * C89 + C1088 * C101) *
                   C89926 * C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C101 +
            (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
            C305 * C105 + C306 * C91) *
               C89926 * C1757 -
           (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
            (C273 * C1770 + C89937 * C1994) * C89 +
            (C273 * C1762 + C89937 * C1986) * C101) *
               C89926 * C1758 +
           ((C273 * C1763 + C89937 * C1987) * C101 +
            (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 + C2022 * C90 +
            C2023 * C105 + C2024 * C91) *
               C89926 * C1759) *
              C89827 * C825 +
          ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
            (C273 * C1766 + C89937 * C1990) * C105 +
            (C273 * C1774 + C89937 * C1998) * C91) *
               C89926 * C1758 -
           (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 + C304 * C89 +
            C303 * C101) *
               C89926 * C1757 -
           ((C273 * C1775 + C89937 * C1999) * C91 +
            (C273 * C1767 + C89937 * C1991) * C105 + C2024 * C90 +
            C2023 * C103 + C2022 * C89 + C2021 * C101) *
               C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13338 +
            (C273 * C112 + C89937 * C280) * C89783) *
               C13334 +
           ((C273 * C829 + C89937 * C1053) * C13338 +
            (C273 * C837 + C89937 * C1061) * C89783) *
               C13335 +
           ((C273 * C830 + C89937 * C1054) * C13338 +
            (C273 * C838 + C89937 * C1062) * C89783) *
               C13336) *
              C89843 * C89827 * C96 -
          ((C1089 * C89783 + C1088 * C13338) * C13336 +
           (C1086 * C89783 + C1087 * C13338) * C13335 +
           (C304 * C89783 + C303 * C13338) * C13334) *
              C89843 * C89827 * C97 +
          ((C305 * C13338 + C306 * C89783) * C13334 +
           (C1085 * C13338 + C1084 * C89783) * C13335 +
           (C1090 * C13338 + C1091 * C89783) * C13336) *
              C89843 * C89827 * C98 -
          (((C273 * C842 + C89937 * C1066) * C89783 +
            (C273 * C834 + C89937 * C1058) * C13338) *
               C13336 +
           (C2865 * C89783 + C2864 * C13338) * C13335 +
           (C307 * C89783 + C308 * C13338) * C13334) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C13338 +
             (C273 * C112 + C89937 * C280) * C89783) *
                C13334 +
            (C14075 + C14076) * C13335 + C14083 * C13336) *
               C89843 * C822 -
           ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
            (C14076 + C14075) * C13334) *
               C89843 * C823 +
           (C14083 * C13334 + (C14080 + C14079) * C13335 +
            ((C273 * C13843 + C89937 * C14041) * C13338 +
             (C273 * C13845 + C89937 * C14043) * C89783) *
                C13336) *
               C89843 * C824) *
              C825 +
          (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
            (C14081 + C14082) * C13336) *
               C89843 * C823 -
           (C14074 * C13336 + (C14059 + C14058) * C13335 +
            (C304 * C89783 + C303 * C13338) * C13334) *
               C89843 * C822 -
           (((C273 * C13846 + C89937 * C14044) * C89783 +
             (C273 * C13844 + C89937 * C14042) * C13338) *
                C13336 +
            (C14082 + C14081) * C13335 + C14074 * C13334) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C273 * C106 + C89937 * C274) * C13338 +
                                 (C273 * C112 + C89937 * C280) * C89783) *
                                    C13334 +
                                (C14075 + C14076) * C13335 + C14083 * C13336) *
                                   C1757 -
                               (((C273 * C8595 + C89937 * C8761) * C89783 +
                                 (C273 * C8592 + C89937 * C8758) * C13338) *
                                    C13336 +
                                ((C273 * C4163 + C89937 * C4397) * C89783 +
                                 (C273 * C4159 + C89937 * C4393) * C13338) *
                                    C13335 +
                                ((C273 * C1770 + C89937 * C1994) * C89783 +
                                 (C273 * C1762 + C89937 * C1986) * C13338) *
                                    C13334) *
                                   C1758 +
                               (((C273 * C1763 + C89937 * C1987) * C13338 +
                                 (C273 * C1771 + C89937 * C1995) * C89783) *
                                    C13334 +
                                ((C273 * C6325 + C89937 * C6491) * C13338 +
                                 (C273 * C6328 + C89937 * C6494) * C89783) *
                                    C13335 +
                                ((C273 * C14727 + C89937 * C14897) * C13338 +
                                 (C273 * C14729 + C89937 * C14899) * C89783) *
                                    C13336) *
                                   C1759) *
                                  C89827 * C825 +
                              (((C2020 * C13338 + C2019 * C89783) * C13334 +
                                (C4410 * C13338 + C4411 * C89783) * C13335 +
                                ((C273 * C8591 + C89937 * C8757) * C13338 +
                                 (C273 * C8594 + C89937 * C8760) * C89783) *
                                    C13336) *
                                   C1758 -
                               (C14074 * C13336 + (C14059 + C14058) * C13335 +
                                (C304 * C89783 + C303 * C13338) * C13334) *
                                   C1757 -
                               (((C273 * C14730 + C89937 * C14900) * C89783 +
                                 (C273 * C14728 + C89937 * C14898) * C13338) *
                                    C13336 +
                                ((C273 * C6327 + C89937 * C6493) * C89783 +
                                 (C273 * C6324 + C89937 * C6490) * C13338) *
                                    C13335 +
                                (C2022 * C89783 + C2021 * C13338) * C13334) *
                                   C1759) *
                                  C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
            C26161 * C1763 + C26055 * C1987) *
               C13338 +
           (C26159 * C112 + C26053 * C280 + C26160 * C1770 + C26054 * C1994 +
            C26161 * C1771 + C26055 * C1995) *
               C89783) *
              C89926 * C89843 * C89827 * C96 -
          ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 + C26054 * C1993 +
            C26159 * C113 + C26053 * C281) *
               C89783 +
           (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
            C26159 * C107 + C26053 * C275) *
               C13338) *
              C89926 * C89843 * C89827 * C97 +
          ((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
            C26161 * C1765 + C26055 * C1989) *
               C13338 +
           (C26159 * C114 + C26053 * C282 + C26160 * C1768 + C26054 * C1992 +
            C26161 * C1773 + C26055 * C1997) *
               C89783) *
              C89926 * C89843 * C89827 * C98 -
          ((C26161 * C1775 + C26055 * C1999 + C26160 * C1774 + C26054 * C1998 +
            C26159 * C115 + C26053 * C283) *
               C89783 +
           (C26161 * C1767 + C26055 * C1991 + C26160 * C1766 + C26054 * C1990 +
            C26159 * C109 + C26053 * C277) *
               C13338) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C13338 +
            (C26159 * C112 + C26053 * C280 + C26160 * C1770 + C26054 * C1994 +
             C26161 * C1771 + C26055 * C1995) *
                C89783) *
               C89926 * C89843 * C822 -
           ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 + C26054 * C4397 +
             C26159 * C837 + C26053 * C1061) *
                C89783 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C13338) *
               C89926 * C89843 * C823 +
           ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
             C26161 * C14727 + C26055 * C14897) *
                C13338 +
            (C26159 * C838 + C26053 * C1062 + C26160 * C8595 + C26054 * C8761 +
             C26161 * C14729 + C26055 * C14899) *
                C89783) *
               C89926 * C89843 * C824) *
              C825 +
          (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
             C26161 * C6324 + C26055 * C6490) *
                C13338 +
            (C26159 * C836 + C26053 * C1060 + C26160 * C4164 + C26054 * C4398 +
             C26161 * C6327 + C26055 * C6493) *
                C89783) *
               C89926 * C89843 * C823 -
           ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 + C26054 * C1993 +
             C26159 * C113 + C26053 * C281) *
                C89783 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C13338) *
               C89926 * C89843 * C822 -
           ((C26161 * C14730 + C26055 * C14900 + C26160 * C8594 +
             C26054 * C8760 + C26159 * C839 + C26053 * C1063) *
                C89783 +
            (C26161 * C14728 + C26055 * C14898 + C26160 * C8591 +
             C26054 * C8757 + C26159 * C831 + C26053 * C1055) *
                C13338) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C13338 +
            (C26159 * C112 + C26053 * C280 + C26160 * C1770 + C26054 * C1994 +
             C26161 * C1771 + C26055 * C1995) *
                C89783) *
               C89926 * C1757 -
           ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
             C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                C89783 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C13338) *
               C89926 * C1758 +
           ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
             C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                C13338 +
            (C26159 * C1771 + C26053 * C1995 + C26160 * C10623 +
             C26054 * C10741 + C26161 * C27233 + C26055 * C27462) *
                C89783) *
               C89926 * C1759) *
              C89827 * C825 +
          (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 + C26054 * C1988 +
             C26161 * C10619 + C26055 * C10737) *
                C13338 +
            (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 + C26054 * C1996 +
             C26161 * C10622 + C26055 * C10740) *
                C89783) *
               C89926 * C1758 -
           ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 + C26054 * C1993 +
             C26159 * C113 + C26053 * C281) *
                C89783 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C13338) *
               C89926 * C1757 -
           ((C26161 * C27234 + C26055 * C27463 + C26160 * C10622 +
             C26054 * C10740 + C26159 * C1772 + C26053 * C1996) *
                C89783 +
            (C26161 * C27232 + C26055 * C27461 + C26160 * C10619 +
             C26054 * C10737 + C26159 * C1764 + C26053 * C1988) *
                C13338) *
               C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                C105 * C108 + C91 * C114) *
                   C186 +
               (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
                C105 * C189 + C91 * C362) *
                   C89926) *
                  C89937 * C89843 * C89827 * C96 -
              ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
                C101 * C188 + C89 * C361) *
                   C89926 +
               (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                C101 * C107 + C89 * C113) *
                   C186) *
                  C89937 * C89843 * C89827 * C97 +
              ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                C105 * C110 + C91 * C116) *
                   C186 +
               (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 +
                C105 * C191 + C91 * C364) *
                   C89926) *
                  C89937 * C89843 * C89827 * C98 -
              ((C105 * C192 + C91 * C365 + C103 * C191 + C90 * C364 +
                C101 * C190 + C89 * C363) *
                   C89926 +
               (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 +
                C101 * C109 + C89 * C115) *
                   C186) *
                  C89937 * C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C186 +
                (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
                 C105 * C189 + C91 * C362) *
                    C89926) *
                   C89937 * C89843 * C822 -
               ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
                 C101 * C939 + C89 * C1167) *
                    C89926 +
                (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                 C101 * C829 + C89 * C837) *
                    C186) *
                   C89937 * C89843 * C823 +
               ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                 C105 * C832 + C91 * C840) *
                    C186 +
                (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
                 C105 * C942 + C91 * C1170) *
                    C89926) *
                   C89937 * C89843 * C824) *
                  C825 +
              (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                 C105 * C833 + C91 * C841) *
                    C186 +
                (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
                 C105 * C943 + C91 * C1171) *
                    C89926) *
                   C89937 * C89843 * C823 -
               ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
                 C101 * C188 + C89 * C361) *
                    C89926 +
                (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                 C101 * C107 + C89 * C113) *
                    C186) *
                   C89937 * C89843 * C822 -
               ((C105 * C944 + C91 * C1172 + C103 * C942 + C90 * C1170 +
                 C101 * C941 + C89 * C1169) *
                    C89926 +
                (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 +
                 C101 * C831 + C89 * C839) *
                    C186) *
                   C89937 * C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C101 * C106 + C89 * C112 + C103 * C107 +
                                 C90 * C113 + C105 * C108 + C91 * C114) *
                                    C186 +
                                (C101 * C187 + C89 * C360 + C103 * C188 +
                                 C90 * C361 + C105 * C189 + C91 * C362) *
                                    C89926) *
                                   C89937 * C1757 -
                               ((C105 * C1870 + C91 * C2098 + C103 * C1871 +
                                 C90 * C2099 + C101 * C1872 + C89 * C2100) *
                                    C89926 +
                                (C105 * C1760 + C91 * C1768 + C103 * C1761 +
                                 C90 * C1769 + C101 * C1762 + C89 * C1770) *
                                    C186) *
                                   C89937 * C1758 +
                               ((C101 * C1763 + C89 * C1771 + C103 * C1764 +
                                 C90 * C1772 + C105 * C1765 + C91 * C1773) *
                                    C186 +
                                (C101 * C1873 + C89 * C2101 + C103 * C1874 +
                                 C90 * C2102 + C105 * C1875 + C91 * C2103) *
                                    C89926) *
                                   C89937 * C1759) *
                                  C89827 * C825 +
                              (((C101 * C1761 + C89 * C1769 + C103 * C1760 +
                                 C90 * C1768 + C105 * C1766 + C91 * C1774) *
                                    C186 +
                                (C101 * C1871 + C89 * C2099 + C103 * C1870 +
                                 C90 * C2098 + C105 * C1876 + C91 * C2104) *
                                    C89926) *
                                   C89937 * C1758 -
                               ((C105 * C190 + C91 * C363 + C103 * C189 +
                                 C90 * C362 + C101 * C188 + C89 * C361) *
                                    C89926 +
                                (C105 * C109 + C91 * C115 + C103 * C108 +
                                 C90 * C114 + C101 * C107 + C89 * C113) *
                                    C186) *
                                   C89937 * C1757 -
                               ((C105 * C1877 + C91 * C2105 + C103 * C1875 +
                                 C90 * C2103 + C101 * C1874 + C89 * C2102) *
                                    C89926 +
                                (C105 * C1767 + C91 * C1775 + C103 * C1765 +
                                 C90 * C1773 + C101 * C1764 + C89 * C1772) *
                                    C186) *
                                   C89937 * C1759) *
                                  C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 +
           (C13338 * C829 + C89783 * C837) * C13402 +
           (C13338 * C939 + C89783 * C1167) * C13335 +
           (C13338 * C830 + C89783 * C838) * C13403 +
           (C13338 * C940 + C89783 * C1168) * C13336) *
              C89937 * C89843 * C89827 * C96 -
          ((C13338 * C941 + C89783 * C1169) * C13336 +
           (C13338 * C831 + C89783 * C839) * C13403 +
           (C13338 * C938 + C89783 * C1166) * C13335 +
           (C13338 * C828 + C89783 * C836) * C13402 +
           (C13338 * C188 + C89783 * C361) * C13334 +
           (C13338 * C107 + C89783 * C113) * C13401) *
              C89937 * C89843 * C89827 * C97 +
          ((C13338 * C108 + C89783 * C114) * C13401 +
           (C13338 * C189 + C89783 * C362) * C13334 +
           (C13338 * C827 + C89783 * C835) * C13402 +
           (C13338 * C937 + C89783 * C1165) * C13335 +
           (C13338 * C832 + C89783 * C840) * C13403 +
           (C13338 * C942 + C89783 * C1170) * C13336) *
              C89937 * C89843 * C89827 * C98 -
          ((C13338 * C944 + C89783 * C1172) * C13336 +
           (C13338 * C834 + C89783 * C842) * C13403 +
           (C13338 * C943 + C89783 * C1171) * C13335 +
           (C13338 * C833 + C89783 * C841) * C13402 +
           (C13338 * C190 + C89783 * C363) * C13334 +
           (C13338 * C109 + C89783 * C115) * C13401) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C822 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C823 +
           (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + (C13338 * C13843 + C89783 * C13845) * C13403 +
            (C13338 * C13963 + C89783 * C14157) * C13336) *
               C89937 * C89843 * C824) *
              C825 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C823 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C822 -
           ((C13338 * C13964 + C89783 * C14158) * C13336 +
            (C13338 * C13844 + C89783 * C13846) * C13403 + C14195 * C13335 +
            C14194 * C13402 + C14193 * C13334 + C14192 * C13401) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C1757 -
           ((C13338 * C8678 + C89783 * C8838) * C13336 +
            (C13338 * C8592 + C89783 * C8595) * C13403 +
            (C13338 * C4275 + C89783 * C4511) * C13335 +
            (C13338 * C4159 + C89783 * C4163) * C13402 +
            (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C1758 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 +
            (C13338 * C6325 + C89783 * C6328) * C13402 +
            (C13338 * C6411 + C89783 * C6571) * C13335 +
            (C13338 * C14727 + C89783 * C14729) * C13403 +
            (C13338 * C14819 + C89783 * C14975) * C13336) *
               C89937 * C1759) *
              C89827 * C825 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 +
            (C13338 * C4160 + C89783 * C4164) * C13402 +
            (C13338 * C4276 + C89783 * C4512) * C13335 +
            (C13338 * C8591 + C89783 * C8594) * C13403 +
            (C13338 * C8677 + C89783 * C8837) * C13336) *
               C89937 * C1758 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C1757 -
           ((C13338 * C14820 + C89783 * C14976) * C13336 +
            (C13338 * C14728 + C89783 * C14730) * C13403 +
            (C13338 * C6410 + C89783 * C6570) * C13335 +
            (C13338 * C6324 + C89783 * C6327) * C13402 +
            (C13338 * C1874 + C89783 * C2102) * C13334 +
            (C13338 * C1764 + C89783 * C1772) * C13401) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C13338 * C106 + C89783 * C112) * C186 +
                                (C13338 * C187 + C89783 * C360) * C89926) *
                                   C26053 +
                               ((C13338 * C1762 + C89783 * C1770) * C186 +
                                (C13338 * C1872 + C89783 * C2100) * C89926) *
                                   C26054 +
                               ((C13338 * C1763 + C89783 * C1771) * C186 +
                                (C13338 * C1873 + C89783 * C2101) * C89926) *
                                   C26055) *
                                  C89843 * C89827 * C96 -
                              (((C13338 * C1874 + C89783 * C2102) * C89926 +
                                (C13338 * C1764 + C89783 * C1772) * C186) *
                                   C26055 +
                               ((C13338 * C1871 + C89783 * C2099) * C89926 +
                                (C13338 * C1761 + C89783 * C1769) * C186) *
                                   C26054 +
                               ((C13338 * C188 + C89783 * C361) * C89926 +
                                (C13338 * C107 + C89783 * C113) * C186) *
                                   C26053) *
                                  C89843 * C89827 * C97 +
                              (((C13338 * C108 + C89783 * C114) * C186 +
                                (C13338 * C189 + C89783 * C362) * C89926) *
                                   C26053 +
                               ((C13338 * C1760 + C89783 * C1768) * C186 +
                                (C13338 * C1870 + C89783 * C2098) * C89926) *
                                   C26054 +
                               ((C13338 * C1765 + C89783 * C1773) * C186 +
                                (C13338 * C1875 + C89783 * C2103) * C89926) *
                                   C26055) *
                                  C89843 * C89827 * C98 -
                              (((C13338 * C1877 + C89783 * C2105) * C89926 +
                                (C13338 * C1767 + C89783 * C1775) * C186) *
                                   C26055 +
                               ((C13338 * C1876 + C89783 * C2104) * C89926 +
                                (C13338 * C1766 + C89783 * C1774) * C186) *
                                   C26054 +
                               ((C13338 * C190 + C89783 * C363) * C89926 +
                                (C13338 * C109 + C89783 * C115) * C186) *
                                   C26053) *
                                  C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C13338 * C106 + C89783 * C112) * C186 +
                                 (C13338 * C187 + C89783 * C360) * C89926) *
                                    C26053 +
                                ((C13338 * C1762 + C89783 * C1770) * C186 +
                                 (C13338 * C1872 + C89783 * C2100) * C89926) *
                                    C26054 +
                                ((C13338 * C1763 + C89783 * C1771) * C186 +
                                 (C13338 * C1873 + C89783 * C2101) * C89926) *
                                    C26055) *
                                   C89843 * C822 -
                               ((C19299 * C89926 + C19298 * C186) * C26055 +
                                (C17230 * C89926 + C17231 * C186) * C26054 +
                                (C14185 * C89926 + C14184 * C186) * C26053) *
                                   C89843 * C823 +
                               ((C14186 * C186 + C14187 * C89926) * C26053 +
                                (C17229 * C186 + C17228 * C89926) * C26054 +
                                (C19300 * C186 + C19301 * C89926) * C26055) *
                                   C89843 * C824) *
                                  C825 +
                              (((C14190 * C186 + C14191 * C89926) * C26053 +
                                (C17232 * C186 + C17233 * C89926) * C26054 +
                                ((C13338 * C6324 + C89783 * C6327) * C186 +
                                 (C13338 * C6410 + C89783 * C6570) * C89926) *
                                    C26055) *
                                   C89843 * C823 -
                               (((C13338 * C1874 + C89783 * C2102) * C89926 +
                                 (C13338 * C1764 + C89783 * C1772) * C186) *
                                    C26055 +
                                ((C13338 * C1871 + C89783 * C2099) * C89926 +
                                 (C13338 * C1761 + C89783 * C1769) * C186) *
                                    C26054 +
                                ((C13338 * C188 + C89783 * C361) * C89926 +
                                 (C13338 * C107 + C89783 * C113) * C186) *
                                    C26053) *
                                   C89843 * C822 -
                               (((C13338 * C14820 + C89783 * C14976) * C89926 +
                                 (C13338 * C14728 + C89783 * C14730) * C186) *
                                    C26055 +
                                (C17235 * C89926 + C17234 * C186) * C26054 +
                                (C14193 * C89926 + C14192 * C186) * C26053) *
                                   C89843 * C824) *
                                  C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C1757 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C1758 +
           (C27589 * C26053 + (C27582 + C27581) * C26054 +
            ((C13338 * C27231 + C89783 * C27233) * C186 +
             (C13338 * C27344 + C89783 * C27538) * C89926) *
                C26055) *
               C1759) *
              C89827 * C825 +
          (((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
            (C27587 + C27588) * C26055) *
               C1758 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C1757 -
           (((C13338 * C27345 + C89783 * C27539) * C89926 +
             (C13338 * C27232 + C89783 * C27234) * C186) *
                C26055 +
            (C27588 + C27587) * C26054 + C27590 * C26053) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
               C447 * C91) *
                  C89937 * C89843 * C89827 * C96 -
              (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 *
                  C89827 * C97 +
              (C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 *
                  C89827 * C98 -
              ((C416 * C111 + C437 + C437 + C89926 * C422) * C91 + C449 * C90 +
               C448 * C89) *
                  C89937 * C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
                C447 * C91) *
                   C89937 * C89843 * C822 -
               (C1280 * C91 + C1281 * C90 +
                (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                   C89937 * C89843 * C823 +
               ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 +
                C1282 * C90 + C1283 * C91) *
                   C89937 * C89843 * C824) *
                  C825 +
              ((C1281 * C89 + C1280 * C90 +
                (C416 * C833 + C1270 + C1270 + C89926 * C1253) * C91) *
                   C89937 * C89843 * C823 -
               (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C822 -
               ((C416 * C834 + C1271 + C1271 + C89926 * C1254) * C91 +
                C1283 * C90 + C1282 * C89) *
                   C89937 * C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C1757 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C1758 +
           ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
            C2215 * C90 + C2216 * C91) *
               C89937 * C1759) *
              C89827 * C825 +
          ((C2214 * C89 + C2213 * C90 +
            (C416 * C1766 + C2203 + C2203 + C89926 * C2186) * C91) *
               C89937 * C1758 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C1757 -
           ((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C91 +
            C2216 * C90 + C2215 * C89) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C89827 * C96 -
          (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
           C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
           C13334 * C418) *
              C89783 * C89937 * C89843 * C89827 * C97 +
          (C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
           C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
           C13336 * C1252) *
              C89783 * C89937 * C89843 * C89827 * C98 -
          (C13556 * C834 + C13567 + C13567 + C13336 * C1254 + C13555 * C833 +
           C13568 + C13568 + C13335 * C1253 + C13554 * C109 + C13569 + C13569 +
           C13334 * C420) *
              C89783 * C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C823 +
           (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C89843 * C824) *
              C825 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C823 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C13844 + C14281 + C14281 + C13336 * C14270 +
            C13555 * C5802 + C14282 + C14282 + C13335 * C6029 + C13554 * C831 +
            C14283 + C14283 + C13334 * C1251) *
               C89783 * C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C1757 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C1758 +
           (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
            C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
            C15059 + C13336 * C15051) *
               C89783 * C89937 * C1759) *
              C89827 * C825 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C1758 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C1757 -
           (C13556 * C14728 + C15063 + C15063 + C13336 * C15052 +
            C13555 * C6324 + C15064 + C15064 + C13335 * C6647 + C13554 * C1764 +
            C15065 + C15065 + C13334 * C2184) *
               C89783 * C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
           (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89783 * C26054 +
           (C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89783 * C26055) *
              C89843 * C89827 * C96 -
          (C2215 * C89783 * C26055 + C2214 * C89783 * C26054 +
           C446 * C89783 * C26053) *
              C89843 * C89827 * C97 +
          (C447 * C89783 * C26053 + C2213 * C89783 * C26054 +
           C2216 * C89783 * C26055) *
              C89843 * C89827 * C98 -
          ((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C89783 * C26055 +
           C3742 * C89783 * C26054 + C448 * C89783 * C26053) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89783 * C26054 +
            (C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89783 * C26055) *
               C89843 * C822 -
           ((C416 * C6325 + C6652 + C6652 + C89926 * C6648) * C89783 * C26055 +
            (C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89783 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C89843 * C823 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
            (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89783 * C26054 +
            (C416 * C14727 + C26848 + C26848 + C89926 * C15051) * C89783 *
                C26055) *
               C89843 * C824) *
              C825 +
          ((C1281 * C89783 * C26053 + C4630 * C89783 * C26054 +
            (C416 * C6324 + C6651 + C6651 + C89926 * C6647) * C89783 * C26055) *
               C89843 * C823 -
           (C2215 * C89783 * C26055 + C2214 * C89783 * C26054 +
            C446 * C89783 * C26053) *
               C89843 * C822 -
           ((C416 * C14728 + C26849 + C26849 + C89926 * C15052) * C89783 *
                C26055 +
            (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C89783 * C26054 +
            C1282 * C89783 * C26053) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C1757 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C1758 +
           (C27692 * C26053 + C27693 * C26054 +
            (C416 * C27231 + C27673 + C27673 + C89926 * C27664) * C89783 *
                C26055) *
               C1759) *
              C89827 * C825 +
          ((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C1758 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C1757 -
           ((C416 * C27232 + C27678 + C27678 + C89926 * C27665) * C89783 *
                C26055 +
            C27694 * C26054 + C27675 * C26053) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C273 * C106 + C89937 * C274) * C186 +
                (C273 * C187 + C89937 * C499) * C89926) *
                   C89 +
               (C506 + C522) * C90 + C526 * C91) *
                  C89843 * C89827 * C96 -
              (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) *
                  C89843 * C89827 * C97 +
              (C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) *
                  C89843 * C89827 * C98 -
              (((C273 * C192 + C89937 * C504) * C89926 +
                (C273 * C111 + C89937 * C279) * C186) *
                   C91 +
               (C525 + C515) * C90 + C527 * C89) *
                  C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C273 * C106 + C89937 * C274) * C186 +
                 (C273 * C187 + C89937 * C499) * C89926) *
                    C89 +
                (C506 + C522) * C90 + C526 * C91) *
                   C89843 * C822 -
               ((C1382 + C1368) * C91 + (C1383 + C1371) * C90 +
                ((C273 * C939 + C89937 * C1359) * C89926 +
                 (C273 * C829 + C89937 * C1053) * C186) *
                    C89) *
                   C89843 * C823 +
               (((C273 * C830 + C89937 * C1054) * C186 +
                 (C273 * C940 + C89937 * C1360) * C89926) *
                    C89 +
                (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
                   C89843 * C824) *
                  C825 +
              (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
                ((C273 * C833 + C89937 * C1057) * C186 +
                 (C273 * C943 + C89937 * C1363) * C89926) *
                    C91) *
                   C89843 * C823 -
               (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) *
                   C89843 * C822 -
               (((C273 * C944 + C89937 * C1364) * C89926 +
                 (C273 * C834 + C89937 * C1058) * C186) *
                    C91 +
                (C1385 + C1375) * C90 + (C1384 + C1372) * C89) *
                   C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C1757 -
           ((C2315 + C2301) * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C1758 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C1759) *
              C89827 * C825 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            ((C273 * C1766 + C89937 * C1990) * C186 +
             (C273 * C1876 + C89937 * C2296) * C89926) *
                C91) *
               C1758 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C1757 -
           (((C273 * C1877 + C89937 * C2297) * C89926 +
             (C273 * C1767 + C89937 * C1991) * C186) *
                C91 +
            (C2318 + C2308) * C90 + (C2317 + C2305) * C89) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 +
           (C273 * C829 + C89937 * C1053) * C13402 +
           (C273 * C939 + C89937 * C1359) * C13335 +
           (C273 * C830 + C89937 * C1054) * C13403 +
           (C273 * C940 + C89937 * C1360) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
           C518 * C13334 + C303 * C13401) *
              C89783 * C89843 * C89827 * C97 +
          (C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
           C1090 * C13403 + C1381 * C13336) *
              C89783 * C89843 * C89827 * C98 -
          ((C273 * C944 + C89937 * C1364) * C13336 +
           (C273 * C834 + C89937 * C1058) * C13403 + C3101 * C13335 +
           C2864 * C13402 + C520 * C13334 + C308 * C13401) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C822 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C823 +
           (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + (C273 * C13843 + C89937 * C14041) * C13403 +
            (C273 * C13963 + C89937 * C14357) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C823 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C822 -
           ((C273 * C13964 + C89937 * C14358) * C13336 +
            (C273 * C13844 + C89937 * C14042) * C13403 + C14371 * C13335 +
            C14072 * C13402 + C1380 * C13334 + C1088 * C13401) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C1757 -
           ((C273 * C8678 + C89937 * C8995) * C13336 +
            (C273 * C8592 + C89937 * C8758) * C13403 +
            (C273 * C4275 + C89937 * C4729) * C13335 +
            (C273 * C4159 + C89937 * C4393) * C13402 +
            (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C1758 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 +
            (C273 * C6325 + C89937 * C6491) * C13402 +
            (C273 * C6411 + C89937 * C6728) * C13335 +
            (C273 * C14727 + C89937 * C14897) * C13403 +
            (C273 * C14819 + C89937 * C15139) * C13336) *
               C89783 * C1759) *
              C89827 * C825 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            (C273 * C8591 + C89937 * C8757) * C13403 +
            (C273 * C8677 + C89937 * C8994) * C13336) *
               C89783 * C1758 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C1757 -
           ((C273 * C14820 + C89937 * C15140) * C13336 +
            (C273 * C14728 + C89937 * C14898) * C13403 +
            (C273 * C6410 + C89937 * C6727) * C13335 +
            (C273 * C6324 + C89937 * C6490) * C13402 + C2313 * C13334 +
            C2021 * C13401) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
            C26161 * C1763 + C26055 * C1987) *
               C186 +
           (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
            C26161 * C1873 + C26055 * C2293) *
               C89926) *
              C89783 * C89843 * C89827 * C96 -
          ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
            C26159 * C188 + C26053 * C500) *
               C89926 +
           (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
            C26159 * C107 + C26053 * C275) *
               C186) *
              C89783 * C89843 * C89827 * C97 +
          ((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
            C26161 * C1765 + C26055 * C1989) *
               C186 +
           (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
            C26161 * C1875 + C26055 * C2295) *
               C89926) *
              C89783 * C89843 * C89827 * C98 -
          ((C26161 * C1877 + C26055 * C2297 + C26160 * C1876 + C26054 * C2296 +
            C26159 * C190 + C26053 * C502) *
               C89926 +
           (C26161 * C1767 + C26055 * C1991 + C26160 * C1766 + C26054 * C1990 +
            C26159 * C109 + C26053 * C277) *
               C186) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89843 * C822 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C89843 * C823 +
           ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
             C26161 * C14727 + C26055 * C14897) *
                C186 +
            (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
             C26161 * C14819 + C26055 * C15139) *
                C89926) *
               C89783 * C89843 * C824) *
              C825 +
          (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
             C26161 * C6324 + C26055 * C6490) *
                C186 +
            (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
             C26161 * C6410 + C26055 * C6727) *
                C89926) *
               C89783 * C89843 * C823 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C89843 * C822 -
           ((C26161 * C14820 + C26055 * C15140 + C26160 * C8677 +
             C26054 * C8994 + C26159 * C941 + C26053 * C1361) *
                C89926 +
            (C26161 * C14728 + C26055 * C14898 + C26160 * C8591 +
             C26054 * C8757 + C26159 * C831 + C26053 * C1055) *
                C186) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C1757 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C1758 +
           ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
             C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                C186 +
            (C26159 * C1873 + C26053 * C2293 + C26160 * C10682 +
             C26054 * C10903 + C26161 * C27344 + C26055 * C27768) *
                C89926) *
               C89783 * C1759) *
              C89827 * C825 +
          (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 + C26054 * C1988 +
             C26161 * C10619 + C26055 * C10737) *
                C186 +
            (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 + C26054 * C2294 +
             C26161 * C10681 + C26055 * C10902) *
                C89926) *
               C89783 * C1758 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C1757 -
           ((C26161 * C27345 + C26055 * C27769 + C26160 * C10681 +
             C26054 * C10902 + C26159 * C1874 + C26053 * C2294) *
                C89926 +
            (C26161 * C27232 + C26055 * C27461 + C26160 * C10619 +
             C26054 * C10737 + C26159 * C1764 + C26053 * C1988) *
                C186) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                C105 * C108 + C91 * C114) *
                   C273 +
               (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                C105 * C276 + C91 * C579) *
                   C89937) *
                  C89926 * C89843 * C89827 * C96 -
              ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                C101 * C275 + C89 * C578) *
                   C89937 +
               (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                C101 * C107 + C89 * C113) *
                   C273) *
                  C89926 * C89843 * C89827 * C97 +
              ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                C105 * C110 + C91 * C116) *
                   C273 +
               (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                C105 * C278 + C91 * C581) *
                   C89937) *
                  C89926 * C89843 * C89827 * C98 -
              ((C105 * C279 + C91 * C582 + C103 * C278 + C90 * C581 +
                C101 * C277 + C89 * C580) *
                   C89937 +
               (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 +
                C101 * C109 + C89 * C115) *
                   C273) *
                  C89926 * C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C273 +
                (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                 C105 * C276 + C91 * C579) *
                    C89937) *
                   C89926 * C89843 * C822 -
               ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                 C101 * C1053 + C89 * C1461) *
                    C89937 +
                (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                 C101 * C829 + C89 * C837) *
                    C273) *
                   C89926 * C89843 * C823 +
               ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                 C105 * C832 + C91 * C840) *
                    C273 +
                (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                 C105 * C1056 + C91 * C1464) *
                    C89937) *
                   C89926 * C89843 * C824) *
                  C825 +
              (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                 C105 * C833 + C91 * C841) *
                    C273 +
                (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                 C105 * C1057 + C91 * C1465) *
                    C89937) *
                   C89926 * C89843 * C823 -
               ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                 C101 * C275 + C89 * C578) *
                    C89937 +
                (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                 C101 * C107 + C89 * C113) *
                    C273) *
                   C89926 * C89843 * C822 -
               ((C105 * C1058 + C91 * C1466 + C103 * C1056 + C90 * C1464 +
                 C101 * C1055 + C89 * C1463) *
                    C89937 +
                (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 +
                 C101 * C831 + C89 * C839) *
                    C273) *
                   C89926 * C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C101 * C106 + C89 * C112 + C103 * C107 +
                                 C90 * C113 + C105 * C108 + C91 * C114) *
                                    C273 +
                                (C101 * C274 + C89 * C577 + C103 * C275 +
                                 C90 * C578 + C105 * C276 + C91 * C579) *
                                    C89937) *
                                   C89926 * C1757 -
                               ((C105 * C1984 + C91 * C2392 + C103 * C1985 +
                                 C90 * C2393 + C101 * C1986 + C89 * C2394) *
                                    C89937 +
                                (C105 * C1760 + C91 * C1768 + C103 * C1761 +
                                 C90 * C1769 + C101 * C1762 + C89 * C1770) *
                                    C273) *
                                   C89926 * C1758 +
                               ((C101 * C1763 + C89 * C1771 + C103 * C1764 +
                                 C90 * C1772 + C105 * C1765 + C91 * C1773) *
                                    C273 +
                                (C101 * C1987 + C89 * C2395 + C103 * C1988 +
                                 C90 * C2396 + C105 * C1989 + C91 * C2397) *
                                    C89937) *
                                   C89926 * C1759) *
                                  C89827 * C825 +
                              (((C101 * C1761 + C89 * C1769 + C103 * C1760 +
                                 C90 * C1768 + C105 * C1766 + C91 * C1774) *
                                    C273 +
                                (C101 * C1985 + C89 * C2393 + C103 * C1984 +
                                 C90 * C2392 + C105 * C1990 + C91 * C2398) *
                                    C89937) *
                                   C89926 * C1758 -
                               ((C105 * C277 + C91 * C580 + C103 * C276 +
                                 C90 * C579 + C101 * C275 + C89 * C578) *
                                    C89937 +
                                (C105 * C109 + C91 * C115 + C103 * C108 +
                                 C90 * C114 + C101 * C107 + C89 * C113) *
                                    C273) *
                                   C89926 * C1757 -
                               ((C105 * C1991 + C91 * C2399 + C103 * C1989 +
                                 C90 * C2397 + C101 * C1988 + C89 * C2396) *
                                    C89937 +
                                (C105 * C1767 + C91 * C1775 + C103 * C1765 +
                                 C90 * C1773 + C101 * C1764 + C89 * C1772) *
                                    C273) *
                                   C89926 * C1759) *
                                  C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C273 +
            (C13338 * C274 + C89783 * C577) * C89937) *
               C13334 +
           ((C13338 * C829 + C89783 * C837) * C273 +
            (C13338 * C1053 + C89783 * C1461) * C89937) *
               C13335 +
           ((C13338 * C830 + C89783 * C838) * C273 +
            (C13338 * C1054 + C89783 * C1462) * C89937) *
               C13336) *
              C89843 * C89827 * C96 -
          (((C13338 * C1055 + C89783 * C1463) * C89937 +
            (C13338 * C831 + C89783 * C839) * C273) *
               C13336 +
           ((C13338 * C1052 + C89783 * C1460) * C89937 +
            (C13338 * C828 + C89783 * C836) * C273) *
               C13335 +
           ((C13338 * C275 + C89783 * C578) * C89937 +
            (C13338 * C107 + C89783 * C113) * C273) *
               C13334) *
              C89843 * C89827 * C97 +
          (((C13338 * C108 + C89783 * C114) * C273 +
            (C13338 * C276 + C89783 * C579) * C89937) *
               C13334 +
           ((C13338 * C827 + C89783 * C835) * C273 +
            (C13338 * C1051 + C89783 * C1459) * C89937) *
               C13335 +
           ((C13338 * C832 + C89783 * C840) * C273 +
            (C13338 * C1056 + C89783 * C1464) * C89937) *
               C13336) *
              C89843 * C89827 * C98 -
          (((C13338 * C1058 + C89783 * C1466) * C89937 +
            (C13338 * C834 + C89783 * C842) * C273) *
               C13336 +
           ((C13338 * C1057 + C89783 * C1465) * C89937 +
            (C13338 * C833 + C89783 * C841) * C273) *
               C13335 +
           ((C13338 * C277 + C89783 * C580) * C89937 +
            (C13338 * C109 + C89783 * C115) * C273) *
               C13334) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89843 * C822 -
           ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C89843 * C823 +
           (C14478 * C13334 + (C14456 + C14474) * C13335 +
            ((C13338 * C13843 + C89783 * C13845) * C273 +
             (C13338 * C14041 + C89783 * C14445) * C89937) *
                C13336) *
               C89843 * C824) *
              C825 +
          (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
            (C14463 + C14477) * C13336) *
               C89843 * C823 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C89843 * C822 -
           (((C13338 * C14042 + C89783 * C14446) * C89937 +
             (C13338 * C13844 + C89783 * C13846) * C273) *
                C13336 +
            (C14477 + C14463) * C13335 + C14479 * C13334) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C13338 * C106 + C89783 * C112) * C273 +
                                 (C13338 * C274 + C89783 * C577) * C89937) *
                                    C13334 +
                                (C14448 + C14472) * C13335 + C14478 * C13336) *
                                   C1757 -
                               (((C13338 * C8758 + C89783 * C9072) * C89937 +
                                 (C13338 * C8592 + C89783 * C8595) * C273) *
                                    C13336 +
                                ((C13338 * C4393 + C89783 * C4841) * C89937 +
                                 (C13338 * C4159 + C89783 * C4163) * C273) *
                                    C13335 +
                                ((C13338 * C1986 + C89783 * C2394) * C89937 +
                                 (C13338 * C1762 + C89783 * C1770) * C273) *
                                    C13334) *
                                   C1758 +
                               (((C13338 * C1763 + C89783 * C1771) * C273 +
                                 (C13338 * C1987 + C89783 * C2395) * C89937) *
                                    C13334 +
                                ((C13338 * C6325 + C89783 * C6328) * C273 +
                                 (C13338 * C6491 + C89783 * C6805) * C89937) *
                                    C13335 +
                                ((C13338 * C14727 + C89783 * C14729) * C273 +
                                 (C13338 * C14897 + C89783 * C15215) * C89937) *
                                    C13336) *
                                   C1759) *
                                  C89827 * C825 +
                              ((((C13338 * C1761 + C89783 * C1769) * C273 +
                                 (C13338 * C1985 + C89783 * C2393) * C89937) *
                                    C13334 +
                                ((C13338 * C4160 + C89783 * C4164) * C273 +
                                 (C13338 * C4394 + C89783 * C4842) * C89937) *
                                    C13335 +
                                ((C13338 * C8591 + C89783 * C8594) * C273 +
                                 (C13338 * C8757 + C89783 * C9071) * C89937) *
                                    C13336) *
                                   C1758 -
                               (C14479 * C13336 + (C14475 + C14457) * C13335 +
                                ((C13338 * C275 + C89783 * C578) * C89937 +
                                 (C13338 * C107 + C89783 * C113) * C273) *
                                    C13334) *
                                   C1757 -
                               (((C13338 * C14898 + C89783 * C15216) * C89937 +
                                 (C13338 * C14728 + C89783 * C14730) * C273) *
                                    C13336 +
                                ((C13338 * C6490 + C89783 * C6804) * C89937 +
                                 (C13338 * C6324 + C89783 * C6327) * C273) *
                                    C13335 +
                                ((C13338 * C1988 + C89783 * C2396) * C89937 +
                                 (C13338 * C1764 + C89783 * C1772) * C273) *
                                    C13334) *
                                   C1759) *
                                  C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C13338 * C106 + C89783 * C112) * C26159 +
                               (C13338 * C274 + C89783 * C577) * C26053 +
                               (C13338 * C1762 + C89783 * C1770) * C26160 +
                               (C13338 * C1986 + C89783 * C2394) * C26054 +
                               (C13338 * C1763 + C89783 * C1771) * C26161 +
                               (C13338 * C1987 + C89783 * C2395) * C26055) *
                                  C89926 * C89843 * C89827 * C96 -
                              ((C13338 * C1988 + C89783 * C2396) * C26055 +
                               (C13338 * C1764 + C89783 * C1772) * C26161 +
                               (C13338 * C1985 + C89783 * C2393) * C26054 +
                               (C13338 * C1761 + C89783 * C1769) * C26160 +
                               (C13338 * C275 + C89783 * C578) * C26053 +
                               (C13338 * C107 + C89783 * C113) * C26159) *
                                  C89926 * C89843 * C89827 * C97 +
                              ((C13338 * C108 + C89783 * C114) * C26159 +
                               (C13338 * C276 + C89783 * C579) * C26053 +
                               (C13338 * C1760 + C89783 * C1768) * C26160 +
                               (C13338 * C1984 + C89783 * C2392) * C26054 +
                               (C13338 * C1765 + C89783 * C1773) * C26161 +
                               (C13338 * C1989 + C89783 * C2397) * C26055) *
                                  C89926 * C89843 * C89827 * C98 -
                              ((C13338 * C1991 + C89783 * C2399) * C26055 +
                               (C13338 * C1767 + C89783 * C1775) * C26161 +
                               (C13338 * C1990 + C89783 * C2398) * C26054 +
                               (C13338 * C1766 + C89783 * C1774) * C26160 +
                               (C13338 * C277 + C89783 * C580) * C26053 +
                               (C13338 * C109 + C89783 * C115) * C26159) *
                                  C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 +
            (C13338 * C1762 + C89783 * C1770) * C26160 +
            (C13338 * C1986 + C89783 * C2394) * C26054 +
            (C13338 * C1763 + C89783 * C1771) * C26161 +
            (C13338 * C1987 + C89783 * C2395) * C26055) *
               C89926 * C89843 * C822 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C89843 * C823 +
           (C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
            C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
               C89926 * C89843 * C824) *
              C825 +
          ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
            C17565 * C26054 + (C13338 * C6324 + C89783 * C6327) * C26161 +
            (C13338 * C6490 + C89783 * C6804) * C26055) *
               C89926 * C89843 * C823 -
           ((C13338 * C1988 + C89783 * C2396) * C26055 +
            (C13338 * C1764 + C89783 * C1772) * C26161 +
            (C13338 * C1985 + C89783 * C2393) * C26054 +
            (C13338 * C1761 + C89783 * C1769) * C26160 +
            (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C89843 * C822 -
           ((C13338 * C14898 + C89783 * C15216) * C26055 +
            (C13338 * C14728 + C89783 * C14730) * C26161 + C17566 * C26054 +
            C17234 * C26160 + C14470 * C26053 + C14192 * C26159) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C1757 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C1758 +
           (C27567 * C26159 + C27860 * C26053 + C27570 * C26160 +
            C27861 * C26054 + (C13338 * C27231 + C89783 * C27233) * C26161 +
            (C13338 * C27460 + C89783 * C27844) * C26055) *
               C89926 * C1759) *
              C89827 * C825 +
          ((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
            C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
               C89926 * C1758 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C1757 -
           ((C13338 * C27461 + C89783 * C27845) * C26055 +
            (C13338 * C27232 + C89783 * C27234) * C26161 + C27864 * C26054 +
            C27575 * C26160 + C27863 * C26053 + C27573 * C26159) *
               C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C186 * C106 + C89926 * C187) * C273 +
                (C186 * C274 + C89926 * C633) * C89937) *
                   C89 +
               (C640 + C656) * C90 + C660 * C91) *
                  C89843 * C89827 * C96 -
              (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                  C89843 * C89827 * C97 +
              (C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) *
                  C89843 * C89827 * C98 -
              (((C186 * C279 + C89926 * C638) * C89937 +
                (C186 * C111 + C89926 * C192) * C273) *
                   C91 +
               (C659 + C649) * C90 + C661 * C89) *
                  C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C186 * C106 + C89926 * C187) * C273 +
                 (C186 * C274 + C89926 * C633) * C89937) *
                    C89 +
                (C640 + C656) * C90 + C660 * C91) *
                   C89843 * C822 -
               ((C1566 + C1552) * C91 + (C1567 + C1555) * C90 +
                ((C186 * C1053 + C89926 * C1543) * C89937 +
                 (C186 * C829 + C89926 * C939) * C273) *
                    C89) *
                   C89843 * C823 +
               (((C186 * C830 + C89926 * C940) * C273 +
                 (C186 * C1054 + C89926 * C1544) * C89937) *
                    C89 +
                (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                   C89843 * C824) *
                  C825 +
              (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
                ((C186 * C833 + C89926 * C943) * C273 +
                 (C186 * C1057 + C89926 * C1547) * C89937) *
                    C91) *
                   C89843 * C823 -
               (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                   C89843 * C822 -
               (((C186 * C1058 + C89926 * C1548) * C89937 +
                 (C186 * C834 + C89926 * C944) * C273) *
                    C91 +
                (C1569 + C1559) * C90 + (C1568 + C1556) * C89) *
                   C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C1757 -
           ((C2499 + C2485) * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C1758 +
           (((C186 * C1763 + C89926 * C1873) * C273 +
             (C186 * C1987 + C89926 * C2477) * C89937) *
                C89 +
            (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
               C1759) *
              C89827 * C825 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            ((C186 * C1766 + C89926 * C1876) * C273 +
             (C186 * C1990 + C89926 * C2480) * C89937) *
                C91) *
               C1758 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C1757 -
           (((C186 * C1991 + C89926 * C2481) * C89937 +
             (C186 * C1767 + C89926 * C1877) * C273) *
                C91 +
            (C2502 + C2492) * C90 + (C2501 + C2489) * C89) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C273 +
           (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
            C13403 * C1054 + C13336 * C1544) *
               C89937) *
              C89783 * C89843 * C89827 * C96 -
          ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
            C13401 * C275 + C13334 * C634) *
               C89937 +
           (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
            C13401 * C107 + C13334 * C188) *
               C273) *
              C89783 * C89843 * C89827 * C97 +
          ((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
            C13403 * C832 + C13336 * C942) *
               C273 +
           (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
            C13403 * C1056 + C13336 * C1546) *
               C89937) *
              C89783 * C89843 * C89827 * C98 -
          ((C13403 * C1058 + C13336 * C1548 + C13402 * C1057 + C13335 * C1547 +
            C13401 * C277 + C13334 * C636) *
               C89937 +
           (C13403 * C834 + C13336 * C944 + C13402 * C833 + C13335 * C943 +
            C13401 * C109 + C13334 * C190) *
               C273) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89843 * C822 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89843 * C823 +
           ((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C89843 * C824) *
              C825 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C273 +
            (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 + C13335 * C1545 +
             C13403 * C5920 + C13336 * C6191) *
                C89937) *
               C89783 * C89843 * C823 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89843 * C822 -
           ((C13403 * C14042 + C13336 * C14554 + C13402 * C5920 +
             C13335 * C6191 + C13401 * C1055 + C13334 * C1545) *
                C89937 +
            (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
             C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                C273) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C1757 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C1758 +
           ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
             C13403 * C14727 + C13336 * C14819) *
                C273 +
            (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
             C13403 * C14897 + C13336 * C15291) *
                C89937) *
               C89783 * C1759) *
              C89827 * C825 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C1758 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C1757 -
           ((C13403 * C14898 + C13336 * C15292 + C13402 * C6490 +
             C13335 * C6881 + C13401 * C1988 + C13334 * C2478) *
                C89937 +
            (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
             C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                C273) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C186 * C106 + C89926 * C187) * C26159 +
           (C186 * C274 + C89926 * C633) * C26053 +
           (C186 * C1762 + C89926 * C1872) * C26160 +
           (C186 * C1986 + C89926 * C2476) * C26054 +
           (C186 * C1763 + C89926 * C1873) * C26161 +
           (C186 * C1987 + C89926 * C2477) * C26055) *
              C89783 * C89843 * C89827 * C96 -
          (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
           C652 * C26053 + C216 * C26159) *
              C89783 * C89843 * C89827 * C97 +
          (C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
           C1909 * C26161 + C2498 * C26055) *
              C89783 * C89843 * C89827 * C98 -
          ((C186 * C1991 + C89926 * C2481) * C26055 +
           (C186 * C1767 + C89926 * C1877) * C26161 + C3978 * C26054 +
           C3503 * C26160 + C654 * C26053 + C221 * C26159) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 +
            (C186 * C1762 + C89926 * C1872) * C26160 +
            (C186 * C1986 + C89926 * C2476) * C26054 +
            (C186 * C1763 + C89926 * C1873) * C26161 +
            (C186 * C1987 + C89926 * C2477) * C26055) *
               C89783 * C89843 * C822 -
           ((C186 * C6491 + C89926 * C6882) * C26055 +
            (C186 * C6325 + C89926 * C6411) * C26161 +
            (C186 * C4393 + C89926 * C4943) * C26054 +
            (C186 * C4159 + C89926 * C4275) * C26160 +
            (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C89843 * C823 +
           ((C186 * C830 + C89926 * C940) * C26159 +
            (C186 * C1054 + C89926 * C1544) * C26053 +
            (C186 * C8592 + C89926 * C8678) * C26160 +
            (C186 * C8758 + C89926 * C9149) * C26054 +
            (C186 * C14727 + C89926 * C14819) * C26161 +
            (C186 * C14897 + C89926 * C15291) * C26055) *
               C89783 * C89843 * C824) *
              C825 +
          ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
            (C186 * C6324 + C89926 * C6410) * C26161 +
            (C186 * C6490 + C89926 * C6881) * C26055) *
               C89783 * C89843 * C823 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C89843 * C822 -
           ((C186 * C14898 + C89926 * C15292) * C26055 +
            (C186 * C14728 + C89926 * C14820) * C26161 +
            (C186 * C8757 + C89926 * C9148) * C26054 +
            (C186 * C8591 + C89926 * C8677) * C26160 + C1564 * C26053 +
            C974 * C26159) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C1757 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C1758 +
           (C27371 * C26159 + C27950 * C26053 + C27374 * C26160 +
            C27951 * C26054 + (C186 * C27231 + C89926 * C27344) * C26161 +
            (C186 * C27460 + C89926 * C27938) * C26055) *
               C89783 * C1759) *
              C89827 * C825 +
          ((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
            C27375 * C26161 + C27952 * C26055) *
               C89783 * C1758 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C1757 -
           ((C186 * C27461 + C89926 * C27939) * C26055 +
            (C186 * C27232 + C89926 * C27345) * C26161 + C27952 * C26054 +
            C27375 * C26160 + C2497 * C26053 + C1907 * C26159) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
               C745 * C90 + C746 * C91) *
                  C89843 * C89827 * C96 -
              (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C89827 * C97 +
              (C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C89827 * C98 -
              ((C711 * C111 + C732 + C732 + C89937 * C717) * C89926 * C91 +
               C748 * C90 + C747 * C89) *
                  C89843 * C89827 * C99) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
                C745 * C90 + C746 * C91) *
                   C89843 * C822 -
               (C1680 * C91 + C1681 * C90 +
                (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                   C89843 * C823 +
               ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
                C1682 * C90 + C1683 * C91) *
                   C89843 * C824) *
                  C825 +
              ((C1681 * C89 + C1680 * C90 +
                (C711 * C833 + C1666 + C1666 + C89937 * C1649) * C89926 * C91) *
                   C89843 * C823 -
               (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C822 -
               ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C89926 * C91 +
                C1683 * C90 + C1682 * C89) *
                   C89843 * C824) *
                  C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C1757 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C1759) *
              C89827 * C825 +
          ((C2614 * C89 + C2613 * C90 +
            (C711 * C1766 + C2599 + C2599 + C89937 * C2582) * C89926 * C91) *
               C1758 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C1757 -
           ((C711 * C1767 + C2600 + C2600 + C89937 * C2583) * C89926 * C91 +
            C2616 * C90 + C2615 * C89) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C13335 +
           (C711 * C830 + C1659 + C1659 + C89937 * C1646) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
              C89827 * C97 +
          (C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
              C89827 * C98 -
          ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C13336 +
           C3339 * C13335 + C743 * C13334) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C822 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C823 +
           (C14651 * C13334 + C14652 * C13335 +
            (C711 * C13843 + C14638 + C14638 + C89937 * C14629) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C823 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C822 -
           ((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C13336 +
            C14653 * C13335 + C1678 * C13334) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C1757 -
           ((C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C13336 +
            (C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            (C711 * C6325 + C6963 + C6963 + C89937 * C6959) * C13335 +
            (C711 * C14727 + C15370 + C15370 + C89937 * C15367) * C13336) *
               C89783 * C1759) *
              C89827 * C825 +
          ((C2610 * C13334 + C5072 * C13335 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C13336) *
               C89783 * C1758 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C1757 -
           ((C711 * C14728 + C15371 + C15371 + C89937 * C15368) * C13336 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C13335 +
            C2611 * C13334) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
           C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 + C26468 +
           C26055 * C2579) *
              C89926 * C89783 * C89843 * C89827 * C96 -
          (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
           C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
           C26053 * C713) *
              C89926 * C89783 * C89843 * C89827 * C97 +
          (C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
           C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 + C26474 +
           C26055 * C2581) *
              C89926 * C89783 * C89843 * C89827 * C98 -
          (C26464 * C1767 + C26475 + C26475 + C26055 * C2583 + C26463 * C1766 +
           C26476 + C26476 + C26054 * C2582 + C26462 * C109 + C26477 + C26477 +
           C26053 * C715) *
              C89926 * C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89843 * C822 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C89843 * C823 +
           (C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
            C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
            C27151 + C26055 * C15367) *
               C89926 * C89783 * C89843 * C824) *
              C825 +
          ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
            C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
            C27154 + C26055 * C6958) *
               C89926 * C89783 * C89843 * C823 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C89843 * C822 -
           (C26464 * C14728 + C27155 + C27155 + C26055 * C15368 +
            C26463 * C8591 + C27156 + C27156 + C26054 * C9225 + C26462 * C831 +
            C27157 + C27157 + C26053 * C1647) *
               C89926 * C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C1757 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C1758 +
           (C26462 * C1763 + C28032 + C28032 + C26053 * C2579 +
            C26463 * C10620 + C28033 + C28033 + C26054 * C11062 +
            C26464 * C27231 + C28034 + C28034 + C26055 * C28026) *
               C89926 * C89783 * C1759) *
              C89827 * C825 +
          ((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 + C26463 * C1764 +
            C28036 + C28036 + C26054 * C2580 + C26464 * C10619 + C28037 +
            C28037 + C26055 * C11061) *
               C89926 * C89783 * C1758 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C1757 -
           (C26464 * C27232 + C28038 + C28038 + C26055 * C28027 +
            C26463 * C10619 + C28039 + C28039 + C26054 * C11061 +
            C26462 * C1764 + C28040 + C28040 + C26053 * C2580) *
               C89926 * C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89999 -
           ((C13337 * C8592 + C14734 + C14734 + C89783 * C8598) * C89937 *
                C13336 +
            (C13337 * C4159 + C14735 + C14735 + C89783 * C4167) * C89937 *
                C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C89827 * C90022 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            (C13337 * C4160 + C14741 + C14741 + C89783 * C4168) * C89937 *
                C13335 +
            (C13337 * C8591 + C14742 + C14742 + C89783 * C8597) * C89937 *
                C13336) *
               C89907 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89999) *
              C89827 * C90023 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89999 -
           ((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C89937 *
                C13336 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C89937 *
                C13335 +
            (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C89937 *
                C13334) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89999 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C89827 * C90022 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C89907 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89999) *
              C89827 * C90023 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C89999 -
           (C104 * C3416 + C3420 + C3420 + C91 * C3418 + C102 * C1766 + C3421 +
            C3421 + C90 * C1782 + C100 * C1760 + C3422 + C3422 + C89 * C1776) *
               C89937 * C89926 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C89999 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C89907) *
              C89827 * C90022 +
          ((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
               C89907 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C89999) *
              C89827 * C90023 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
            C28794 * C26054 + C28795 * C26055) *
               C89926 * C89999 -
           ((C13337 * C10618 + C28789 + C28789 + C89783 * C10624) * C26055 +
            C28795 * C26054 + C28794 * C26053) *
               C89926 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexy[33] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C90022 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89999) *
                        C89827 * C90023 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C8593 + C13336 * C8679 + C13402 * C4165 +
                       C13335 * C4281 + C13401 * C1768 + C13334 * C1878) *
                          C89783 +
                      (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 +
                       C13335 * C4277 + C13401 * C1760 + C13334 * C1870) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89999 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C89827 * C90022 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      C3503 * C105 + C3504 * C91) *
                         C89937 * C89907 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89999) *
                        C89827 * C90023 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C89999 -
                     ((C186 * C3417 + C89926 * C3497) * C91 +
                      (C186 * C3416 + C89926 * C3496) * C105 + C3504 * C90 +
                      C3503 * C103 + C1903 * C89 + C1904 * C101) *
                         C89937 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C89999 -
                     ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C89907) *
                        C89827 * C90022 +
                    (((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
                      (C27384 + C27385) * C26055) *
                         C89907 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C89999) *
                        C89827 * C90023 +
                    (((C218 * C13338 + C219 * C89783) * C26053 +
                      (C28870 + C28871) * C26054 + (C28872 + C28873) * C26055) *
                         C89999 -
                     (((C186 * C10621 + C89926 * C10683) * C89783 +
                       (C186 * C10618 + C89926 * C10680) * C13338) *
                          C26055 +
                      (C28873 + C28872) * C26054 + (C28871 + C28870) * C26053) *
                         C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[33] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89999 -
                     (((C273 * C8595 + C89937 * C8761) * C89783 +
                       (C273 * C8592 + C89937 * C8758) * C13338) *
                          C13336 +
                      ((C273 * C4163 + C89937 * C4397) * C89783 +
                       (C273 * C4159 + C89937 * C4393) * C13338) *
                          C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C89827 * C90022 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C4410 * C13338 + C4411 * C89783) * C13335 +
                      ((C273 * C8591 + C89937 * C8757) * C13338 +
                       (C273 * C8594 + C89937 * C8760) * C89783) *
                          C13336) *
                         C89907 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89999) *
                        C89827 * C90023 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89999 -
                     (((C273 * C8593 + C89937 * C8759) * C89783 +
                       (C273 * C8590 + C89937 * C8756) * C13338) *
                          C13336 +
                      (C4413 * C89783 + C4412 * C13338) * C13335 +
                      (C2017 * C89783 + C2018 * C13338) * C13334) *
                         C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89999 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C89827 * C90022 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      C3585 * C105 + C3586 * C91) *
                         C89926 * C89907 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89999) *
                        C89827 * C90023 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C89999 -
                     ((C273 * C3417 + C89937 * C3579) * C91 +
                      (C273 * C3416 + C89937 * C3578) * C105 + C3586 * C90 +
                      C3585 * C103 + C2017 * C89 + C2018 * C101) *
                         C89926 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C89999 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C89907) *
                        C89827 * C90022 +
                    (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
                       C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                          C13338 +
                      (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 +
                       C26054 * C1996 + C26161 * C10622 + C26055 * C10740) *
                          C89783) *
                         C89926 * C89907 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C89999) *
                        C89827 * C90023 +
                    (((C26159 * C108 + C26053 * C276 + C26160 * C1760 +
                       C26054 * C1984 + C26161 * C1765 + C26055 * C1989) *
                          C13338 +
                      (C26159 * C114 + C26053 * C282 + C26160 * C1768 +
                       C26054 * C1992 + C26161 * C1773 + C26055 * C1997) *
                          C89783) *
                         C89926 * C89999 -
                     ((C26161 * C10621 + C26055 * C10739 + C26160 * C1773 +
                       C26054 * C1997 + C26159 * C1768 + C26053 * C1992) *
                          C89783 +
                      (C26161 * C10618 + C26055 * C10736 + C26160 * C1765 +
                       C26054 * C1989 + C26159 * C1760 + C26053 * C1984) *
                          C13338) *
                         C89926 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89999 -
           ((C13338 * C8678 + C89783 * C8838) * C13336 +
            (C13338 * C8592 + C89783 * C8595) * C13403 +
            (C13338 * C4275 + C89783 * C4511) * C13335 +
            (C13338 * C4159 + C89783 * C4163) * C13402 +
            (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C89827 * C90022 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 +
            (C13338 * C4160 + C89783 * C4164) * C13402 +
            (C13338 * C4276 + C89783 * C4512) * C13335 +
            (C13338 * C8591 + C89783 * C8594) * C13403 +
            (C13338 * C8677 + C89783 * C8837) * C13336) *
               C89937 * C89907 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89999) *
              C89827 * C90023 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89999 -
           ((C13338 * C8676 + C89783 * C8836) * C13336 +
            (C13338 * C8590 + C89783 * C8593) * C13403 +
            (C13338 * C4277 + C89783 * C4513) * C13335 +
            (C13338 * C4161 + C89783 * C4165) * C13402 +
            (C13338 * C1870 + C89783 * C2098) * C13334 +
            (C13338 * C1760 + C89783 * C1768) * C13401) *
               C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C89827 * C90022 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89999) *
              C89827 * C90023 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C3496 + C91 * C3660 + C103 * C1876 + C90 * C2104 +
             C101 * C1870 + C89 * C2098) *
                C89926 +
            (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
             C101 * C1760 + C89 * C1768) *
                C186) *
               C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C89999 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C89907) *
              C89827 * C90022 +
          (((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
            (C27587 + C27588) * C26055) *
               C89907 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C89999) *
              C89827 * C90023 +
          ((((C13338 * C108 + C89783 * C114) * C186 +
             (C13338 * C189 + C89783 * C362) * C89926) *
                C26053 +
            (C29034 + C29035) * C26054 + (C29036 + C29037) * C26055) *
               C89999 -
           (((C13338 * C10680 + C89783 * C10792) * C89926 +
             (C13338 * C10618 + C89783 * C10621) * C186) *
                C26055 +
            (C29037 + C29036) * C26054 + (C29035 + C29034) * C26053) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89999 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C89827 * C90022 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C89907 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89999) *
              C89827 * C90023 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89999 -
           (C13556 * C8590 + C16453 + C16453 + C13336 * C8913 + C13555 * C4161 +
            C16454 + C16454 + C13335 * C4615 + C13554 * C1760 + C16455 +
            C16455 + C13334 * C2180) *
               C89783 * C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89999 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C89827 * C90022 +
          ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89999) *
              C89827 * C90023 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89999 -
           ((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C91 +
            C3742 * C90 + C2213 * C89) *
               C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C89999 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
              C89827 * C90022 +
          ((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C89907 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C89999) *
              C89827 * C90023 +
          ((C447 * C89783 * C26053 + C29112 * C26054 + C29113 * C26055) *
               C89999 -
           ((C416 * C10618 + C10849 + C10849 + C89926 * C10845) * C89783 *
                C26055 +
            C29113 * C26054 + C29112 * C26053) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89999 -
           ((C273 * C8678 + C89937 * C8995) * C13336 +
            (C273 * C8592 + C89937 * C8758) * C13403 +
            (C273 * C4275 + C89937 * C4729) * C13335 +
            (C273 * C4159 + C89937 * C4393) * C13402 +
            (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C89827 * C90022 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            (C273 * C8591 + C89937 * C8757) * C13403 +
            (C273 * C8677 + C89937 * C8994) * C13336) *
               C89783 * C89907 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89999) *
              C89827 * C90023 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89999 -
           ((C273 * C8676 + C89937 * C8993) * C13336 +
            (C273 * C8590 + C89937 * C8756) * C13403 + C4741 * C13335 +
            C4412 * C13402 + C2311 * C13334 + C2018 * C13401) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89999 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C89827 * C90022 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            (C3819 + C3823) * C91) *
               C89907 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89999) *
              C89827 * C90023 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89999 -
           (((C273 * C3496 + C89937 * C3816) * C89926 +
             (C273 * C3416 + C89937 * C3578) * C186) *
                C91 +
            (C3823 + C3819) * C90 + C3818 * C89) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89999 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C89907) *
              C89827 * C90022 +
          (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 + C26054 * C1988 +
             C26161 * C10619 + C26055 * C10737) *
                C186 +
            (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 + C26054 * C2294 +
             C26161 * C10681 + C26055 * C10902) *
                C89926) *
               C89783 * C89907 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C89999) *
              C89827 * C90023 +
          (((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
             C26161 * C1765 + C26055 * C1989) *
                C186 +
            (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
             C26161 * C1875 + C26055 * C2295) *
                C89926) *
               C89783 * C89999 -
           ((C26161 * C10680 + C26055 * C10901 + C26160 * C1875 +
             C26054 * C2295 + C26159 * C1870 + C26053 * C2290) *
                C89926 +
            (C26161 * C10618 + C26055 * C10736 + C26160 * C1765 +
             C26054 * C1989 + C26159 * C1760 + C26053 * C1984) *
                C186) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89999 -
           (((C13338 * C8758 + C89783 * C9072) * C89937 +
             (C13338 * C8592 + C89783 * C8595) * C273) *
                C13336 +
            ((C13338 * C4393 + C89783 * C4841) * C89937 +
             (C13338 * C4159 + C89783 * C4163) * C273) *
                C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C89907) *
              C89827 * C90022 +
          ((((C13338 * C1761 + C89783 * C1769) * C273 +
             (C13338 * C1985 + C89783 * C2393) * C89937) *
                C13334 +
            ((C13338 * C4160 + C89783 * C4164) * C273 +
             (C13338 * C4394 + C89783 * C4842) * C89937) *
                C13335 +
            ((C13338 * C8591 + C89783 * C8594) * C273 +
             (C13338 * C8757 + C89783 * C9071) * C89937) *
                C13336) *
               C89907 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C89999) *
              C89827 * C90023 +
          ((((C13338 * C108 + C89783 * C114) * C273 +
             (C13338 * C276 + C89783 * C579) * C89937) *
                C13334 +
            (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
               C89999 -
           (((C13338 * C8756 + C89783 * C9070) * C89937 +
             (C13338 * C8590 + C89783 * C8593) * C273) *
                C13336 +
            ((C13338 * C4395 + C89783 * C4843) * C89937 +
             (C13338 * C4161 + C89783 * C4165) * C273) *
                C13335 +
            ((C13338 * C1984 + C89783 * C2392) * C89937 +
             (C13338 * C1760 + C89783 * C1768) * C273) *
                C13334) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C89999 -
           ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
             C101 * C1986 + C89 * C2394) *
                C89937 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C273) *
               C89926 * C89907) *
              C89827 * C90022 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C273 +
            (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
             C105 * C1990 + C91 * C2398) *
                C89937) *
               C89926 * C89907 -
           ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
             C89 * C578) *
                C89937 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C273) *
               C89926 * C89999) *
              C89827 * C90023 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C273 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581) *
                C89937) *
               C89926 * C89999 -
           ((C105 * C3578 + C91 * C3897 + C103 * C1990 + C90 * C2398 +
             C101 * C1984 + C89 * C2392) *
                C89937 +
            (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
             C101 * C1760 + C89 * C1768) *
                C273) *
               C89926 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C89999 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C89907) *
              C89827 * C90022 +
          ((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
            C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
               C89926 * C89907 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C89999) *
              C89827 * C90023 +
          (((C13338 * C108 + C89783 * C114) * C26159 +
            (C13338 * C276 + C89783 * C579) * C26053 + C29030 * C26160 +
            C29266 * C26054 + C29032 * C26161 + C29267 * C26055) *
               C89926 * C89999 -
           ((C13338 * C10736 + C89783 * C10954) * C26055 +
            (C13338 * C10618 + C89783 * C10621) * C26161 + C29267 * C26054 +
            C29032 * C26160 + C29266 * C26053 + C29030 * C26159) *
               C89926 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezy[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89999 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C89827 * C90022 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89999) *
              C89827 * C90023 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C89999 -
           ((C13403 * C8756 + C13336 * C9147 + C13402 * C4395 + C13335 * C4945 +
             C13401 * C1984 + C13334 * C2474) *
                C89937 +
            (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 + C13335 * C4277 +
             C13401 * C1760 + C13334 * C1870) *
                C273) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89999 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C89827 * C90022 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            (C3975 + C3979) * C91) *
               C89907 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89999) *
              C89827 * C90023 +
          ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C89999 -
           (((C186 * C3578 + C89926 * C3972) * C89937 +
             (C186 * C3416 + C89926 * C3496) * C273) *
                C91 +
            (C3979 + C3975) * C90 + C3974 * C89) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C89999 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C89907) *
              C89827 * C90022 +
          ((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
            C27375 * C26161 + C27952 * C26055) *
               C89783 * C89907 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C89999) *
              C89827 * C90023 +
          ((C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
            C1909 * C26161 + C2498 * C26055) *
               C89783 * C89999 -
           ((C186 * C10736 + C89926 * C11007) * C26055 +
            (C186 * C10618 + C89926 * C10680) * C26161 + C2498 * C26054 +
            C1909 * C26160 + C2495 * C26053 + C1904 * C26159) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezz[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89999 -
           ((C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C13336 +
            (C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C89827 * C90022 +
          ((C2610 * C13334 + C5072 * C13335 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C13336) *
               C89783 * C89907 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
               C89999) *
              C89827 * C90023 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89999 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C13336 +
            C5073 * C13335 + C2609 * C13334) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89999 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C89827 * C90022 +
          ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89999) *
              C89827 * C90023 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C89999 -
           ((C711 * C3416 + C4057 + C4057 + C89937 * C4053) * C89926 * C91 +
            C4061 * C90 + C2613 * C89) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89999 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C89907) *
              C89827 * C90022 +
          ((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 + C26463 * C1764 +
            C28036 + C28036 + C26054 * C2580 + C26464 * C10619 + C28037 +
            C28037 + C26055 * C11061) *
               C89926 * C89783 * C89907 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C89999) *
              C89827 * C90023 +
          ((C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
            C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 +
            C26474 + C26055 * C2581) *
               C89926 * C89783 * C89999 -
           (C26464 * C10618 + C29416 + C29416 + C26055 * C11060 +
            C26463 * C1765 + C29417 + C29417 + C26054 * C2581 + C26462 * C1760 +
            C29418 + C29418 + C26053 * C2576) *
               C89926 * C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexx[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C822 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C823 +
           (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C89843 * C824) *
              C825 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C823 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C822 -
           (C104 * C834 + C861 + C861 + C91 * C850 + C102 * C832 + C862 + C862 +
            C90 * C848 + C100 * C831 + C863 + C863 + C89 * C847) *
               C89937 * C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C89843 * C89827 * C96 -
          (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
           C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
              C89937 * C89926 * C89843 * C89827 * C97 +
          (C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
           C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
              C89937 * C89926 * C89843 * C89827 * C98 -
          (C104 * C111 + C134 + C134 + C91 * C123 + C102 * C110 + C135 + C135 +
           C90 * C122 + C100 * C109 + C136 + C136 + C89 * C121) *
              C89937 * C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           (C13337 * C829 + C13341 + C13341 + C89783 * C845) * C89937 * C13335 +
           (C13337 * C830 + C13342 + C13342 + C89783 * C846) * C89937 *
               C13336) *
              C89843 * C89827 * C96 -
          ((C13337 * C831 + C13343 + C13343 + C89783 * C847) * C89937 * C13336 +
           (C13337 * C828 + C13344 + C13344 + C89783 * C844) * C89937 * C13335 +
           (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
               C13334) *
              C89843 * C89827 * C97 +
          ((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 * C13334 +
           (C13337 * C827 + C13347 + C13347 + C89783 * C843) * C89937 * C13335 +
           (C13337 * C832 + C13348 + C13348 + C89783 * C848) * C89937 *
               C13336) *
              C89843 * C89827 * C98 -
          ((C13337 * C834 + C13349 + C13349 + C89783 * C850) * C89937 * C13336 +
           (C13337 * C833 + C13350 + C13350 + C89783 * C849) * C89937 * C13335 +
           (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C89937 *
               C13334) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C822 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C823 +
           (C13885 * C13334 + C13886 * C13335 +
            (C13337 * C13843 + C13857 + C13857 + C89783 * C13847) * C89937 *
                C13336) *
               C89843 * C824) *
              C825 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C823 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C822 -
           ((C13337 * C13844 + C13865 + C13865 + C89783 * C13848) * C89937 *
                C13336 +
            C13889 * C13335 + C13888 * C13334) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
           (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C26054 +
           (C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C26055) *
              C89926 * C89843 * C89827 * C96 -
          ((C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C26055 +
           (C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C26054 +
           (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
              C89926 * C89843 * C89827 * C97 +
          ((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
           (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C26054 +
           (C13337 * C1765 + C26057 + C26057 + C89783 * C1781) * C26055) *
              C89926 * C89843 * C89827 * C98 -
          ((C13337 * C1767 + C26058 + C26058 + C89783 * C1783) * C26055 +
           (C13337 * C1766 + C26059 + C26059 + C89783 * C1782) * C26054 +
           (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C26053) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C26054 +
            (C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C26055) *
               C89926 * C89843 * C822 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C89843 * C823 +
           (C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
               C89843 * C824) *
              C825 +
          ((C13881 * C26053 + C16876 * C26054 +
            (C13337 * C6324 + C14744 + C14744 + C89783 * C6330) * C26055) *
               C89926 * C89843 * C823 -
           ((C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C26055 +
            (C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C89843 * C822 -
           ((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C26055 +
            C16877 * C26054 + C13882 * C26053) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[34] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C822 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C823 +
                     ((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C89843 * C824) *
                        C825 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      (C186 * C833 + C89926 * C943) * C105 +
                      (C186 * C841 + C89926 * C951) * C91) *
                         C89937 * C89843 * C823 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C822 -
                     ((C186 * C842 + C89926 * C952) * C91 +
                      (C186 * C834 + C89926 * C944) * C105 + C977 * C90 +
                      C976 * C103 + C975 * C89 + C974 * C101) *
                         C89937 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C89843 * C89827 * C96 -
                    (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                     C217 * C89 + C216 * C101) *
                        C89937 * C89843 * C89827 * C97 +
                    (C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                     C222 * C105 + C223 * C91) *
                        C89937 * C89843 * C89827 * C98 -
                    ((C186 * C117 + C89926 * C198) * C91 +
                     (C186 * C111 + C89926 * C192) * C105 + C223 * C90 +
                     C222 * C103 + C220 * C89 + C221 * C101) *
                        C89937 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C89843 * C89827 * C96 -
                    ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                      C13335 * C946 + C13401 * C113 + C13334 * C194) *
                         C89783 +
                     (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                      C13335 * C938 + C13401 * C107 + C13334 * C188) *
                         C13338) *
                        C89937 * C89843 * C89827 * C97 +
                    ((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                      C13335 * C937 + C13403 * C832 + C13336 * C942) *
                         C13338 +
                     (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                      C13335 * C945 + C13403 * C840 + C13336 * C950) *
                         C89783) *
                        C89937 * C89843 * C89827 * C98 -
                    ((C13403 * C842 + C13336 * C952 + C13402 * C841 +
                      C13335 * C951 + C13401 * C115 + C13334 * C196) *
                         C89783 +
                     (C13403 * C834 + C13336 * C944 + C13402 * C833 +
                      C13335 * C943 + C13401 * C109 + C13334 * C190) *
                         C13338) *
                        C89937 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C822 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C823 +
                     ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C89843 * C824) *
                        C825 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C823 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C822 -
                     ((C13403 * C13846 + C13336 * C13966 + C13402 * C5805 +
                       C13335 * C5867 + C13401 * C839 + C13334 * C949) *
                          C89783 +
                      (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
                       C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                          C13338) *
                         C89937 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C13338 +
                      (C186 * C112 + C89926 * C193) * C89783) *
                         C26053 +
                     ((C186 * C1762 + C89926 * C1872) * C13338 +
                      (C186 * C1770 + C89926 * C1880) * C89783) *
                         C26054 +
                     ((C186 * C1763 + C89926 * C1873) * C13338 +
                      (C186 * C1771 + C89926 * C1881) * C89783) *
                         C26055) *
                        C89843 * C89827 * C96 -
                    ((C1908 * C89783 + C1907 * C13338) * C26055 +
                     (C1905 * C89783 + C1906 * C13338) * C26054 +
                     (C217 * C89783 + C216 * C13338) * C26053) *
                        C89843 * C89827 * C97 +
                    ((C218 * C13338 + C219 * C89783) * C26053 +
                     (C1904 * C13338 + C1903 * C89783) * C26054 +
                     (C1909 * C13338 + C1910 * C89783) * C26055) *
                        C89843 * C89827 * C98 -
                    (((C186 * C1775 + C89926 * C1885) * C89783 +
                      (C186 * C1767 + C89926 * C1877) * C13338) *
                         C26055 +
                     (C3504 * C89783 + C3503 * C13338) * C26054 +
                     (C220 * C89783 + C221 * C13338) * C26053) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      ((C186 * C1762 + C89926 * C1872) * C13338 +
                       (C186 * C1770 + C89926 * C1880) * C89783) *
                          C26054 +
                      ((C186 * C1763 + C89926 * C1873) * C13338 +
                       (C186 * C1771 + C89926 * C1881) * C89783) *
                          C26055) *
                         C89843 * C822 -
                     (((C186 * C6328 + C89926 * C6414) * C89783 +
                       (C186 * C6325 + C89926 * C6411) * C13338) *
                          C26055 +
                      ((C186 * C4163 + C89926 * C4279) * C89783 +
                       (C186 * C4159 + C89926 * C4275) * C13338) *
                          C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C89843 * C823 +
                     (((C186 * C830 + C89926 * C940) * C13338 +
                       (C186 * C838 + C89926 * C948) * C89783) *
                          C26053 +
                      ((C186 * C8592 + C89926 * C8678) * C13338 +
                       (C186 * C8595 + C89926 * C8681) * C89783) *
                          C26054 +
                      ((C186 * C14727 + C89926 * C14819) * C13338 +
                       (C186 * C14729 + C89926 * C14821) * C89783) *
                          C26055) *
                         C89843 * C824) *
                        C825 +
                    (((C973 * C13338 + C972 * C89783) * C26053 +
                      (C4292 * C13338 + C4293 * C89783) * C26054 +
                      ((C186 * C6324 + C89926 * C6410) * C13338 +
                       (C186 * C6327 + C89926 * C6413) * C89783) *
                          C26055) *
                         C89843 * C823 -
                     ((C1908 * C89783 + C1907 * C13338) * C26055 +
                      (C1905 * C89783 + C1906 * C13338) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C89843 * C822 -
                     (((C186 * C14730 + C89926 * C14822) * C89783 +
                       (C186 * C14728 + C89926 * C14820) * C13338) *
                          C26055 +
                      ((C186 * C8594 + C89926 * C8680) * C89783 +
                       (C186 * C8591 + C89926 * C8677) * C13338) *
                          C26054 +
                      (C975 * C89783 + C974 * C13338) * C26053) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[34] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C822 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C823 +
                     ((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C89843 * C824) *
                        C825 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      (C273 * C833 + C89937 * C1057) * C105 +
                      (C273 * C841 + C89937 * C1065) * C91) *
                         C89926 * C89843 * C823 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C822 -
                     ((C273 * C842 + C89937 * C1066) * C91 +
                      (C273 * C834 + C89937 * C1058) * C105 + C1091 * C90 +
                      C1090 * C103 + C1089 * C89 + C1088 * C101) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C89843 * C89827 * C96 -
                    (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                     C304 * C89 + C303 * C101) *
                        C89926 * C89843 * C89827 * C97 +
                    (C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                     C309 * C105 + C310 * C91) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C273 * C117 + C89937 * C285) * C91 +
                     (C273 * C111 + C89937 * C279) * C105 + C310 * C90 +
                     C309 * C103 + C307 * C89 + C308 * C101) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     ((C273 * C829 + C89937 * C1053) * C13338 +
                      (C273 * C837 + C89937 * C1061) * C89783) *
                         C13335 +
                     ((C273 * C830 + C89937 * C1054) * C13338 +
                      (C273 * C838 + C89937 * C1062) * C89783) *
                         C13336) *
                        C89843 * C89827 * C96 -
                    ((C1089 * C89783 + C1088 * C13338) * C13336 +
                     (C1086 * C89783 + C1087 * C13338) * C13335 +
                     (C304 * C89783 + C303 * C13338) * C13334) *
                        C89843 * C89827 * C97 +
                    ((C305 * C13338 + C306 * C89783) * C13334 +
                     (C1085 * C13338 + C1084 * C89783) * C13335 +
                     (C1090 * C13338 + C1091 * C89783) * C13336) *
                        C89843 * C89827 * C98 -
                    (((C273 * C842 + C89937 * C1066) * C89783 +
                      (C273 * C834 + C89937 * C1058) * C13338) *
                         C13336 +
                     (C2865 * C89783 + C2864 * C13338) * C13335 +
                     (C307 * C89783 + C308 * C13338) * C13334) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C822 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C823 +
                     (C14083 * C13334 + (C14080 + C14079) * C13335 +
                      ((C273 * C13843 + C89937 * C14041) * C13338 +
                       (C273 * C13845 + C89937 * C14043) * C89783) *
                          C13336) *
                         C89843 * C824) *
                        C825 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C823 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C822 -
                     (((C273 * C13846 + C89937 * C14044) * C89783 +
                       (C273 * C13844 + C89937 * C14042) * C13338) *
                          C13336 +
                      (C14082 + C14081) * C13335 + C14074 * C13334) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                      C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                         C13338 +
                     (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                      C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                         C89783) *
                        C89926 * C89843 * C89827 * C96 -
                    ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                      C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                         C89783 +
                     (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                      C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                         C13338) *
                        C89926 * C89843 * C89827 * C97 +
                    ((C26159 * C108 + C26053 * C276 + C26160 * C1760 +
                      C26054 * C1984 + C26161 * C1765 + C26055 * C1989) *
                         C13338 +
                     (C26159 * C114 + C26053 * C282 + C26160 * C1768 +
                      C26054 * C1992 + C26161 * C1773 + C26055 * C1997) *
                         C89783) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C26161 * C1775 + C26055 * C1999 + C26160 * C1774 +
                      C26054 * C1998 + C26159 * C115 + C26053 * C283) *
                         C89783 +
                     (C26161 * C1767 + C26055 * C1991 + C26160 * C1766 +
                      C26054 * C1990 + C26159 * C109 + C26053 * C277) *
                         C13338) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C89843 * C822 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C89843 * C823 +
                     ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 +
                       C26054 * C8758 + C26161 * C14727 + C26055 * C14897) *
                          C13338 +
                      (C26159 * C838 + C26053 * C1062 + C26160 * C8595 +
                       C26054 * C8761 + C26161 * C14729 + C26055 * C14899) *
                          C89783) *
                         C89926 * C89843 * C824) *
                        C825 +
                    (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 +
                       C26054 * C4394 + C26161 * C6324 + C26055 * C6490) *
                          C13338 +
                      (C26159 * C836 + C26053 * C1060 + C26160 * C4164 +
                       C26054 * C4398 + C26161 * C6327 + C26055 * C6493) *
                          C89783) *
                         C89926 * C89843 * C823 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C89843 * C822 -
                     ((C26161 * C14730 + C26055 * C14900 + C26160 * C8594 +
                       C26054 * C8760 + C26159 * C839 + C26053 * C1063) *
                          C89783 +
                      (C26161 * C14728 + C26055 * C14898 + C26160 * C8591 +
                       C26054 * C8757 + C26159 * C831 + C26053 * C1055) *
                          C13338) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C822 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C823 +
           ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C89843 * C824) *
              C825 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C823 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C822 -
           ((C105 * C944 + C91 * C1172 + C103 * C942 + C90 * C1170 +
             C101 * C941 + C89 * C1169) *
                C89926 +
            (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 + C101 * C831 +
             C89 * C839) *
                C186) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C89843 * C89827 * C96 -
          ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
            C89 * C361) *
               C89926 +
           (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
            C89 * C113) *
               C186) *
              C89937 * C89843 * C89827 * C97 +
          ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116) *
               C186 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364) *
               C89926) *
              C89937 * C89843 * C89827 * C98 -
          ((C105 * C192 + C91 * C365 + C103 * C191 + C90 * C364 + C101 * C190 +
            C89 * C363) *
               C89926 +
           (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 + C101 * C109 +
            C89 * C115) *
               C186) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 +
           (C13338 * C829 + C89783 * C837) * C13402 +
           (C13338 * C939 + C89783 * C1167) * C13335 +
           (C13338 * C830 + C89783 * C838) * C13403 +
           (C13338 * C940 + C89783 * C1168) * C13336) *
              C89937 * C89843 * C89827 * C96 -
          ((C13338 * C941 + C89783 * C1169) * C13336 +
           (C13338 * C831 + C89783 * C839) * C13403 +
           (C13338 * C938 + C89783 * C1166) * C13335 +
           (C13338 * C828 + C89783 * C836) * C13402 +
           (C13338 * C188 + C89783 * C361) * C13334 +
           (C13338 * C107 + C89783 * C113) * C13401) *
              C89937 * C89843 * C89827 * C97 +
          ((C13338 * C108 + C89783 * C114) * C13401 +
           (C13338 * C189 + C89783 * C362) * C13334 +
           (C13338 * C827 + C89783 * C835) * C13402 +
           (C13338 * C937 + C89783 * C1165) * C13335 +
           (C13338 * C832 + C89783 * C840) * C13403 +
           (C13338 * C942 + C89783 * C1170) * C13336) *
              C89937 * C89843 * C89827 * C98 -
          ((C13338 * C944 + C89783 * C1172) * C13336 +
           (C13338 * C834 + C89783 * C842) * C13403 +
           (C13338 * C943 + C89783 * C1171) * C13335 +
           (C13338 * C833 + C89783 * C841) * C13402 +
           (C13338 * C190 + C89783 * C363) * C13334 +
           (C13338 * C109 + C89783 * C115) * C13401) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C822 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C823 +
           (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + (C13338 * C13843 + C89783 * C13845) * C13403 +
            (C13338 * C13963 + C89783 * C14157) * C13336) *
               C89937 * C89843 * C824) *
              C825 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C823 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C822 -
           ((C13338 * C13964 + C89783 * C14158) * C13336 +
            (C13338 * C13844 + C89783 * C13846) * C13403 + C14195 * C13335 +
            C14194 * C13402 + C14193 * C13334 + C14192 * C13401) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C186 +
            (C13338 * C187 + C89783 * C360) * C89926) *
               C26053 +
           ((C13338 * C1762 + C89783 * C1770) * C186 +
            (C13338 * C1872 + C89783 * C2100) * C89926) *
               C26054 +
           ((C13338 * C1763 + C89783 * C1771) * C186 +
            (C13338 * C1873 + C89783 * C2101) * C89926) *
               C26055) *
              C89843 * C89827 * C96 -
          (((C13338 * C1874 + C89783 * C2102) * C89926 +
            (C13338 * C1764 + C89783 * C1772) * C186) *
               C26055 +
           ((C13338 * C1871 + C89783 * C2099) * C89926 +
            (C13338 * C1761 + C89783 * C1769) * C186) *
               C26054 +
           ((C13338 * C188 + C89783 * C361) * C89926 +
            (C13338 * C107 + C89783 * C113) * C186) *
               C26053) *
              C89843 * C89827 * C97 +
          (((C13338 * C108 + C89783 * C114) * C186 +
            (C13338 * C189 + C89783 * C362) * C89926) *
               C26053 +
           ((C13338 * C1760 + C89783 * C1768) * C186 +
            (C13338 * C1870 + C89783 * C2098) * C89926) *
               C26054 +
           ((C13338 * C1765 + C89783 * C1773) * C186 +
            (C13338 * C1875 + C89783 * C2103) * C89926) *
               C26055) *
              C89843 * C89827 * C98 -
          (((C13338 * C1877 + C89783 * C2105) * C89926 +
            (C13338 * C1767 + C89783 * C1775) * C186) *
               C26055 +
           ((C13338 * C1876 + C89783 * C2104) * C89926 +
            (C13338 * C1766 + C89783 * C1774) * C186) *
               C26054 +
           ((C13338 * C190 + C89783 * C363) * C89926 +
            (C13338 * C109 + C89783 * C115) * C186) *
               C26053) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            ((C13338 * C1762 + C89783 * C1770) * C186 +
             (C13338 * C1872 + C89783 * C2100) * C89926) *
                C26054 +
            ((C13338 * C1763 + C89783 * C1771) * C186 +
             (C13338 * C1873 + C89783 * C2101) * C89926) *
                C26055) *
               C89843 * C822 -
           ((C19299 * C89926 + C19298 * C186) * C26055 +
            (C17230 * C89926 + C17231 * C186) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C89843 * C823 +
           ((C14186 * C186 + C14187 * C89926) * C26053 +
            (C17229 * C186 + C17228 * C89926) * C26054 +
            (C19300 * C186 + C19301 * C89926) * C26055) *
               C89843 * C824) *
              C825 +
          (((C14190 * C186 + C14191 * C89926) * C26053 +
            (C17232 * C186 + C17233 * C89926) * C26054 +
            ((C13338 * C6324 + C89783 * C6327) * C186 +
             (C13338 * C6410 + C89783 * C6570) * C89926) *
                C26055) *
               C89843 * C823 -
           (((C13338 * C1874 + C89783 * C2102) * C89926 +
             (C13338 * C1764 + C89783 * C1772) * C186) *
                C26055 +
            ((C13338 * C1871 + C89783 * C2099) * C89926 +
             (C13338 * C1761 + C89783 * C1769) * C186) *
                C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C89843 * C822 -
           (((C13338 * C14820 + C89783 * C14976) * C89926 +
             (C13338 * C14728 + C89783 * C14730) * C186) *
                C26055 +
            (C17235 * C89926 + C17234 * C186) * C26054 +
            (C14193 * C89926 + C14192 * C186) * C26053) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C822 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C823 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C89843 * C824) *
              C825 +
          ((C1281 * C89 + C1280 * C90 +
            (C416 * C833 + C1270 + C1270 + C89926 * C1253) * C91) *
               C89937 * C89843 * C823 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C822 -
           ((C416 * C834 + C1271 + C1271 + C89926 * C1254) * C91 + C1283 * C90 +
            C1282 * C89) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C89843 * C89827 * C96 -
          (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C89827 *
              C97 +
          (C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C89827 *
              C98 -
          ((C416 * C111 + C437 + C437 + C89926 * C422) * C91 + C449 * C90 +
           C448 * C89) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C89827 * C96 -
          (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
           C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
           C13334 * C418) *
              C89783 * C89937 * C89843 * C89827 * C97 +
          (C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
           C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
           C13336 * C1252) *
              C89783 * C89937 * C89843 * C89827 * C98 -
          (C13556 * C834 + C13567 + C13567 + C13336 * C1254 + C13555 * C833 +
           C13568 + C13568 + C13335 * C1253 + C13554 * C109 + C13569 + C13569 +
           C13334 * C420) *
              C89783 * C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C823 +
           (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C89843 * C824) *
              C825 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C823 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C13844 + C14281 + C14281 + C13336 * C14270 +
            C13555 * C5802 + C14282 + C14282 + C13335 * C6029 + C13554 * C831 +
            C14283 + C14283 + C13334 * C1251) *
               C89783 * C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
           (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89783 * C26054 +
           (C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89783 * C26055) *
              C89843 * C89827 * C96 -
          (C2215 * C89783 * C26055 + C2214 * C89783 * C26054 +
           C446 * C89783 * C26053) *
              C89843 * C89827 * C97 +
          (C447 * C89783 * C26053 + C2213 * C89783 * C26054 +
           C2216 * C89783 * C26055) *
              C89843 * C89827 * C98 -
          ((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C89783 * C26055 +
           C3742 * C89783 * C26054 + C448 * C89783 * C26053) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89783 * C26054 +
            (C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89783 * C26055) *
               C89843 * C822 -
           ((C416 * C6325 + C6652 + C6652 + C89926 * C6648) * C89783 * C26055 +
            (C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89783 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C89843 * C823 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
            (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89783 * C26054 +
            (C416 * C14727 + C26848 + C26848 + C89926 * C15051) * C89783 *
                C26055) *
               C89843 * C824) *
              C825 +
          ((C1281 * C89783 * C26053 + C4630 * C89783 * C26054 +
            (C416 * C6324 + C6651 + C6651 + C89926 * C6647) * C89783 * C26055) *
               C89843 * C823 -
           (C2215 * C89783 * C26055 + C2214 * C89783 * C26054 +
            C446 * C89783 * C26053) *
               C89843 * C822 -
           ((C416 * C14728 + C26849 + C26849 + C89926 * C15052) * C89783 *
                C26055 +
            (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C89783 * C26054 +
            C1282 * C89783 * C26053) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C822 -
           ((C1382 + C1368) * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C823 +
           (((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C89843 * C824) *
              C825 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            ((C273 * C833 + C89937 * C1057) * C186 +
             (C273 * C943 + C89937 * C1363) * C89926) *
                C91) *
               C89843 * C823 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C822 -
           (((C273 * C944 + C89937 * C1364) * C89926 +
             (C273 * C834 + C89937 * C1058) * C186) *
                C91 +
            (C1385 + C1375) * C90 + (C1384 + C1372) * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C89843 * C89827 * C96 -
          (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
              C89827 * C97 +
          (C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
              C89827 * C98 -
          (((C273 * C192 + C89937 * C504) * C89926 +
            (C273 * C111 + C89937 * C279) * C186) *
               C91 +
           (C525 + C515) * C90 + C527 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 +
           (C273 * C829 + C89937 * C1053) * C13402 +
           (C273 * C939 + C89937 * C1359) * C13335 +
           (C273 * C830 + C89937 * C1054) * C13403 +
           (C273 * C940 + C89937 * C1360) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
           C518 * C13334 + C303 * C13401) *
              C89783 * C89843 * C89827 * C97 +
          (C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
           C1090 * C13403 + C1381 * C13336) *
              C89783 * C89843 * C89827 * C98 -
          ((C273 * C944 + C89937 * C1364) * C13336 +
           (C273 * C834 + C89937 * C1058) * C13403 + C3101 * C13335 +
           C2864 * C13402 + C520 * C13334 + C308 * C13401) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C822 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C823 +
           (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + (C273 * C13843 + C89937 * C14041) * C13403 +
            (C273 * C13963 + C89937 * C14357) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C823 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C822 -
           ((C273 * C13964 + C89937 * C14358) * C13336 +
            (C273 * C13844 + C89937 * C14042) * C13403 + C14371 * C13335 +
            C14072 * C13402 + C1380 * C13334 + C1088 * C13401) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
            C26161 * C1763 + C26055 * C1987) *
               C186 +
           (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
            C26161 * C1873 + C26055 * C2293) *
               C89926) *
              C89783 * C89843 * C89827 * C96 -
          ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
            C26159 * C188 + C26053 * C500) *
               C89926 +
           (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
            C26159 * C107 + C26053 * C275) *
               C186) *
              C89783 * C89843 * C89827 * C97 +
          ((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
            C26161 * C1765 + C26055 * C1989) *
               C186 +
           (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
            C26161 * C1875 + C26055 * C2295) *
               C89926) *
              C89783 * C89843 * C89827 * C98 -
          ((C26161 * C1877 + C26055 * C2297 + C26160 * C1876 + C26054 * C2296 +
            C26159 * C190 + C26053 * C502) *
               C89926 +
           (C26161 * C1767 + C26055 * C1991 + C26160 * C1766 + C26054 * C1990 +
            C26159 * C109 + C26053 * C277) *
               C186) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89843 * C822 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C89843 * C823 +
           ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
             C26161 * C14727 + C26055 * C14897) *
                C186 +
            (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
             C26161 * C14819 + C26055 * C15139) *
                C89926) *
               C89783 * C89843 * C824) *
              C825 +
          (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
             C26161 * C6324 + C26055 * C6490) *
                C186 +
            (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
             C26161 * C6410 + C26055 * C6727) *
                C89926) *
               C89783 * C89843 * C823 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C89843 * C822 -
           ((C26161 * C14820 + C26055 * C15140 + C26160 * C8677 +
             C26054 * C8994 + C26159 * C941 + C26053 * C1361) *
                C89926 +
            (C26161 * C14728 + C26055 * C14898 + C26160 * C8591 +
             C26054 * C8757 + C26159 * C831 + C26053 * C1055) *
                C186) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C89843 * C822 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C89843 * C823 +
           ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C273 +
            (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
             C105 * C1056 + C91 * C1464) *
                C89937) *
               C89926 * C89843 * C824) *
              C825 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C273 +
            (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
             C105 * C1057 + C91 * C1465) *
                C89937) *
               C89926 * C89843 * C823 -
           ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
             C89 * C578) *
                C89937 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C273) *
               C89926 * C89843 * C822 -
           ((C105 * C1058 + C91 * C1466 + C103 * C1056 + C90 * C1464 +
             C101 * C1055 + C89 * C1463) *
                C89937 +
            (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 + C101 * C831 +
             C89 * C839) *
                C273) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C273 +
           (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
            C91 * C579) *
               C89937) *
              C89926 * C89843 * C89827 * C96 -
          ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
            C89 * C578) *
               C89937 +
           (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
            C89 * C113) *
               C273) *
              C89926 * C89843 * C89827 * C97 +
          ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116) *
               C273 +
           (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
            C91 * C581) *
               C89937) *
              C89926 * C89843 * C89827 * C98 -
          ((C105 * C279 + C91 * C582 + C103 * C278 + C90 * C581 + C101 * C277 +
            C89 * C580) *
               C89937 +
           (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 + C101 * C109 +
            C89 * C115) *
               C273) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C273 +
            (C13338 * C274 + C89783 * C577) * C89937) *
               C13334 +
           ((C13338 * C829 + C89783 * C837) * C273 +
            (C13338 * C1053 + C89783 * C1461) * C89937) *
               C13335 +
           ((C13338 * C830 + C89783 * C838) * C273 +
            (C13338 * C1054 + C89783 * C1462) * C89937) *
               C13336) *
              C89843 * C89827 * C96 -
          (((C13338 * C1055 + C89783 * C1463) * C89937 +
            (C13338 * C831 + C89783 * C839) * C273) *
               C13336 +
           ((C13338 * C1052 + C89783 * C1460) * C89937 +
            (C13338 * C828 + C89783 * C836) * C273) *
               C13335 +
           ((C13338 * C275 + C89783 * C578) * C89937 +
            (C13338 * C107 + C89783 * C113) * C273) *
               C13334) *
              C89843 * C89827 * C97 +
          (((C13338 * C108 + C89783 * C114) * C273 +
            (C13338 * C276 + C89783 * C579) * C89937) *
               C13334 +
           ((C13338 * C827 + C89783 * C835) * C273 +
            (C13338 * C1051 + C89783 * C1459) * C89937) *
               C13335 +
           ((C13338 * C832 + C89783 * C840) * C273 +
            (C13338 * C1056 + C89783 * C1464) * C89937) *
               C13336) *
              C89843 * C89827 * C98 -
          (((C13338 * C1058 + C89783 * C1466) * C89937 +
            (C13338 * C834 + C89783 * C842) * C273) *
               C13336 +
           ((C13338 * C1057 + C89783 * C1465) * C89937 +
            (C13338 * C833 + C89783 * C841) * C273) *
               C13335 +
           ((C13338 * C277 + C89783 * C580) * C89937 +
            (C13338 * C109 + C89783 * C115) * C273) *
               C13334) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89843 * C822 -
           ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C89843 * C823 +
           (C14478 * C13334 + (C14456 + C14474) * C13335 +
            ((C13338 * C13843 + C89783 * C13845) * C273 +
             (C13338 * C14041 + C89783 * C14445) * C89937) *
                C13336) *
               C89843 * C824) *
              C825 +
          (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
            (C14463 + C14477) * C13336) *
               C89843 * C823 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C89843 * C822 -
           (((C13338 * C14042 + C89783 * C14446) * C89937 +
             (C13338 * C13844 + C89783 * C13846) * C273) *
                C13336 +
            (C14477 + C14463) * C13335 + C14479 * C13334) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C26159 +
           (C13338 * C274 + C89783 * C577) * C26053 +
           (C13338 * C1762 + C89783 * C1770) * C26160 +
           (C13338 * C1986 + C89783 * C2394) * C26054 +
           (C13338 * C1763 + C89783 * C1771) * C26161 +
           (C13338 * C1987 + C89783 * C2395) * C26055) *
              C89926 * C89843 * C89827 * C96 -
          ((C13338 * C1988 + C89783 * C2396) * C26055 +
           (C13338 * C1764 + C89783 * C1772) * C26161 +
           (C13338 * C1985 + C89783 * C2393) * C26054 +
           (C13338 * C1761 + C89783 * C1769) * C26160 +
           (C13338 * C275 + C89783 * C578) * C26053 +
           (C13338 * C107 + C89783 * C113) * C26159) *
              C89926 * C89843 * C89827 * C97 +
          ((C13338 * C108 + C89783 * C114) * C26159 +
           (C13338 * C276 + C89783 * C579) * C26053 +
           (C13338 * C1760 + C89783 * C1768) * C26160 +
           (C13338 * C1984 + C89783 * C2392) * C26054 +
           (C13338 * C1765 + C89783 * C1773) * C26161 +
           (C13338 * C1989 + C89783 * C2397) * C26055) *
              C89926 * C89843 * C89827 * C98 -
          ((C13338 * C1991 + C89783 * C2399) * C26055 +
           (C13338 * C1767 + C89783 * C1775) * C26161 +
           (C13338 * C1990 + C89783 * C2398) * C26054 +
           (C13338 * C1766 + C89783 * C1774) * C26160 +
           (C13338 * C277 + C89783 * C580) * C26053 +
           (C13338 * C109 + C89783 * C115) * C26159) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 +
            (C13338 * C1762 + C89783 * C1770) * C26160 +
            (C13338 * C1986 + C89783 * C2394) * C26054 +
            (C13338 * C1763 + C89783 * C1771) * C26161 +
            (C13338 * C1987 + C89783 * C2395) * C26055) *
               C89926 * C89843 * C822 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C89843 * C823 +
           (C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
            C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
               C89926 * C89843 * C824) *
              C825 +
          ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
            C17565 * C26054 + (C13338 * C6324 + C89783 * C6327) * C26161 +
            (C13338 * C6490 + C89783 * C6804) * C26055) *
               C89926 * C89843 * C823 -
           ((C13338 * C1988 + C89783 * C2396) * C26055 +
            (C13338 * C1764 + C89783 * C1772) * C26161 +
            (C13338 * C1985 + C89783 * C2393) * C26054 +
            (C13338 * C1761 + C89783 * C1769) * C26160 +
            (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C89843 * C822 -
           ((C13338 * C14898 + C89783 * C15216) * C26055 +
            (C13338 * C14728 + C89783 * C14730) * C26161 + C17566 * C26054 +
            C17234 * C26160 + C14470 * C26053 + C14192 * C26159) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89843 * C822 -
           ((C1566 + C1552) * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C89843 * C823 +
           (((C186 * C830 + C89926 * C940) * C273 +
             (C186 * C1054 + C89926 * C1544) * C89937) *
                C89 +
            (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
               C89843 * C824) *
              C825 +
          (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
            ((C186 * C833 + C89926 * C943) * C273 +
             (C186 * C1057 + C89926 * C1547) * C89937) *
                C91) *
               C89843 * C823 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89843 *
               C822 -
           (((C186 * C1058 + C89926 * C1548) * C89937 +
             (C186 * C834 + C89926 * C944) * C273) *
                C91 +
            (C1569 + C1559) * C90 + (C1568 + C1556) * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C273 +
            (C186 * C274 + C89926 * C633) * C89937) *
               C89 +
           (C640 + C656) * C90 + C660 * C91) *
              C89843 * C89827 * C96 -
          (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89843 *
              C89827 * C97 +
          (C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C89843 *
              C89827 * C98 -
          (((C186 * C279 + C89926 * C638) * C89937 +
            (C186 * C111 + C89926 * C192) * C273) *
               C91 +
           (C659 + C649) * C90 + C661 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C273 +
           (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
            C13403 * C1054 + C13336 * C1544) *
               C89937) *
              C89783 * C89843 * C89827 * C96 -
          ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
            C13401 * C275 + C13334 * C634) *
               C89937 +
           (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
            C13401 * C107 + C13334 * C188) *
               C273) *
              C89783 * C89843 * C89827 * C97 +
          ((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
            C13403 * C832 + C13336 * C942) *
               C273 +
           (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
            C13403 * C1056 + C13336 * C1546) *
               C89937) *
              C89783 * C89843 * C89827 * C98 -
          ((C13403 * C1058 + C13336 * C1548 + C13402 * C1057 + C13335 * C1547 +
            C13401 * C277 + C13334 * C636) *
               C89937 +
           (C13403 * C834 + C13336 * C944 + C13402 * C833 + C13335 * C943 +
            C13401 * C109 + C13334 * C190) *
               C273) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89843 * C822 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89843 * C823 +
           ((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C89843 * C824) *
              C825 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C273 +
            (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 + C13335 * C1545 +
             C13403 * C5920 + C13336 * C6191) *
                C89937) *
               C89783 * C89843 * C823 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89843 * C822 -
           ((C13403 * C14042 + C13336 * C14554 + C13402 * C5920 +
             C13335 * C6191 + C13401 * C1055 + C13334 * C1545) *
                C89937 +
            (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
             C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                C273) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C186 * C106 + C89926 * C187) * C26159 +
           (C186 * C274 + C89926 * C633) * C26053 +
           (C186 * C1762 + C89926 * C1872) * C26160 +
           (C186 * C1986 + C89926 * C2476) * C26054 +
           (C186 * C1763 + C89926 * C1873) * C26161 +
           (C186 * C1987 + C89926 * C2477) * C26055) *
              C89783 * C89843 * C89827 * C96 -
          (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
           C652 * C26053 + C216 * C26159) *
              C89783 * C89843 * C89827 * C97 +
          (C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
           C1909 * C26161 + C2498 * C26055) *
              C89783 * C89843 * C89827 * C98 -
          ((C186 * C1991 + C89926 * C2481) * C26055 +
           (C186 * C1767 + C89926 * C1877) * C26161 + C3978 * C26054 +
           C3503 * C26160 + C654 * C26053 + C221 * C26159) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 +
            (C186 * C1762 + C89926 * C1872) * C26160 +
            (C186 * C1986 + C89926 * C2476) * C26054 +
            (C186 * C1763 + C89926 * C1873) * C26161 +
            (C186 * C1987 + C89926 * C2477) * C26055) *
               C89783 * C89843 * C822 -
           ((C186 * C6491 + C89926 * C6882) * C26055 +
            (C186 * C6325 + C89926 * C6411) * C26161 +
            (C186 * C4393 + C89926 * C4943) * C26054 +
            (C186 * C4159 + C89926 * C4275) * C26160 +
            (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C89843 * C823 +
           ((C186 * C830 + C89926 * C940) * C26159 +
            (C186 * C1054 + C89926 * C1544) * C26053 +
            (C186 * C8592 + C89926 * C8678) * C26160 +
            (C186 * C8758 + C89926 * C9149) * C26054 +
            (C186 * C14727 + C89926 * C14819) * C26161 +
            (C186 * C14897 + C89926 * C15291) * C26055) *
               C89783 * C89843 * C824) *
              C825 +
          ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
            (C186 * C6324 + C89926 * C6410) * C26161 +
            (C186 * C6490 + C89926 * C6881) * C26055) *
               C89783 * C89843 * C823 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C89843 * C822 -
           ((C186 * C14898 + C89926 * C15292) * C26055 +
            (C186 * C14728 + C89926 * C14820) * C26161 +
            (C186 * C8757 + C89926 * C9148) * C26054 +
            (C186 * C8591 + C89926 * C8677) * C26160 + C1564 * C26053 +
            C974 * C26159) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C822 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C823 +
           ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C89843 * C824) *
              C825 +
          ((C1681 * C89 + C1680 * C90 +
            (C711 * C833 + C1666 + C1666 + C89937 * C1649) * C89926 * C91) *
               C89843 * C823 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C822 -
           ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C89926 * C91 +
            C1683 * C90 + C1682 * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C89843 * C89827 * C96 -
          (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C89827 * C97 +
          (C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C89827 * C98 -
          ((C711 * C111 + C732 + C732 + C89937 * C717) * C89926 * C91 +
           C748 * C90 + C747 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C13335 +
           (C711 * C830 + C1659 + C1659 + C89937 * C1646) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
              C89827 * C97 +
          (C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
              C89827 * C98 -
          ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C13336 +
           C3339 * C13335 + C743 * C13334) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C822 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C823 +
           (C14651 * C13334 + C14652 * C13335 +
            (C711 * C13843 + C14638 + C14638 + C89937 * C14629) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C823 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C822 -
           ((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C13336 +
            C14653 * C13335 + C1678 * C13334) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
           C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 + C26468 +
           C26055 * C2579) *
              C89926 * C89783 * C89843 * C89827 * C96 -
          (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
           C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
           C26053 * C713) *
              C89926 * C89783 * C89843 * C89827 * C97 +
          (C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
           C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 + C26474 +
           C26055 * C2581) *
              C89926 * C89783 * C89843 * C89827 * C98 -
          (C26464 * C1767 + C26475 + C26475 + C26055 * C2583 + C26463 * C1766 +
           C26476 + C26476 + C26054 * C2582 + C26462 * C109 + C26477 + C26477 +
           C26053 * C715) *
              C89926 * C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89843 * C822 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C89843 * C823 +
           (C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
            C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
            C27151 + C26055 * C15367) *
               C89926 * C89783 * C89843 * C824) *
              C825 +
          ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
            C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
            C27154 + C26055 * C6958) *
               C89926 * C89783 * C89843 * C823 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C89843 * C822 -
           (C26464 * C14728 + C27155 + C27155 + C26055 * C15368 +
            C26463 * C8591 + C27156 + C27156 + C26054 * C9225 + C26462 * C831 +
            C27157 + C27157 + C26053 * C1647) *
               C89926 * C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C90024 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C90025 +
           (C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89843 *
               C7039) *
              C89990 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C90025 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C90024 -
           ((C13337 * C13844 + C13865 + C13865 + C89783 * C13848) * C89937 *
                C13336 +
            C13889 * C13335 + C13888 * C13334) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C90024 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C90025 +
           (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C89843 * C7039) *
              C89990 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C90025 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C90024 -
           (C104 * C834 + C861 + C861 + C91 * C850 + C102 * C832 + C862 + C862 +
            C90 * C848 + C100 * C831 + C863 + C863 + C89 * C847) *
               C89937 * C89926 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C89843 * C90024 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C89843 * C90025 +
           (C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
               C89843 * C7039) *
              C89990 +
          ((C13881 * C26053 + C16876 * C26054 + C29525 * C26055) * C89926 *
               C89843 * C90025 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C89843 * C90024 -
           ((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C26055 +
            C16877 * C26054 + C13882 * C26053) *
               C89926 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[35] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C90024 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C90025 +
                     ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C89843 * C7039) *
                        C89990 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C90025 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C90024 -
                     ((C13403 * C13846 + C13336 * C13966 + C13402 * C5805 +
                       C13335 * C5867 + C13401 * C839 + C13334 * C949) *
                          C89783 +
                      (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
                       C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                          C13338) *
                         C89937 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C90024 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C90025 +
                     ((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C89843 * C7039) *
                        C89990 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      C2782 * C105 + C2783 * C91) *
                         C89937 * C89843 * C90025 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C90024 -
                     ((C186 * C842 + C89926 * C952) * C91 +
                      (C186 * C834 + C89926 * C944) * C105 + C977 * C90 +
                      C976 * C103 + C975 * C89 + C974 * C101) *
                         C89937 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C89843 * C90024 -
                     (C31683 * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C89843 * C90025 +
                     (((C186 * C830 + C89926 * C940) * C13338 +
                       (C186 * C838 + C89926 * C948) * C89783) *
                          C26053 +
                      ((C186 * C8592 + C89926 * C8678) * C13338 +
                       (C186 * C8595 + C89926 * C8681) * C89783) *
                          C26054 +
                      ((C186 * C14727 + C89926 * C14819) * C13338 +
                       (C186 * C14729 + C89926 * C14821) * C89783) *
                          C26055) *
                         C89843 * C7039) *
                        C89990 +
                    (((C973 * C13338 + C972 * C89783) * C26053 +
                      (C29634 + C29635) * C26054 + (C29650 + C29651) * C26055) *
                         C89843 * C90025 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C89843 * C90024 -
                     (((C186 * C14730 + C89926 * C14822) * C89783 +
                       (C186 * C14728 + C89926 * C14820) * C13338) *
                          C26055 +
                      ((C186 * C8594 + C89926 * C8680) * C89783 +
                       (C186 * C8591 + C89926 * C8677) * C13338) *
                          C26054 +
                      (C975 * C89783 + C974 * C13338) * C26053) *
                         C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[35] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C90024 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C90025 +
                     (C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C89843 * C7039) *
                        C89990 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C90025 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C90024 -
                     (((C273 * C13846 + C89937 * C14044) * C89783 +
                       (C273 * C13844 + C89937 * C14042) * C13338) *
                          C13336 +
                      (C14082 + C14081) * C13335 + C14074 * C13334) *
                         C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C90024 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C90025 +
                     ((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C89843 * C7039) *
                        C89990 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      C2864 * C105 + C2865 * C91) *
                         C89926 * C89843 * C90025 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C90024 -
                     ((C273 * C842 + C89937 * C1066) * C91 +
                      (C273 * C834 + C89937 * C1058) * C105 + C1091 * C90 +
                      C1090 * C103 + C1089 * C89 + C1088 * C101) *
                         C89926 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C89843 * C90024 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C89843 * C90025 +
                     ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 +
                       C26054 * C8758 + C26161 * C14727 + C26055 * C14897) *
                          C13338 +
                      (C26159 * C838 + C26053 * C1062 + C26160 * C8595 +
                       C26054 * C8761 + C26161 * C14729 + C26055 * C14899) *
                          C89783) *
                         C89926 * C89843 * C7039) *
                        C89990 +
                    (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 +
                       C26054 * C4394 + C26161 * C6324 + C26055 * C6490) *
                          C13338 +
                      (C26159 * C836 + C26053 * C1060 + C26160 * C4164 +
                       C26054 * C4398 + C26161 * C6327 + C26055 * C6493) *
                          C89783) *
                         C89926 * C89843 * C90025 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C89843 * C90024 -
                     ((C26161 * C14730 + C26055 * C14900 + C26160 * C8594 +
                       C26054 * C8760 + C26159 * C839 + C26053 * C1063) *
                          C89783 +
                      (C26161 * C14728 + C26055 * C14898 + C26160 * C8591 +
                       C26054 * C8757 + C26159 * C831 + C26053 * C1055) *
                          C13338) *
                         C89926 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C90024 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C90025 +
           (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C89843 * C7039) *
              C89990 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C90025 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C90024 -
           ((C13338 * C13964 + C89783 * C14158) * C13336 +
            (C13338 * C13844 + C89783 * C13846) * C13403 + C14195 * C13335 +
            C14194 * C13402 + C14193 * C13334 + C14192 * C13401) *
               C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C90024 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C90025 +
           ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C89843 * C7039) *
              C89990 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C90025 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C90024 -
           ((C105 * C944 + C91 * C1172 + C103 * C942 + C90 * C1170 +
             C101 * C941 + C89 * C1169) *
                C89926 +
            (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 + C101 * C831 +
             C89 * C839) *
                C186) *
               C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C89843 * C90024 -
           (C31843 * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C89843 * C90025 +
           ((C14186 * C186 + C14187 * C89926) * C26053 +
            (C17229 * C186 + C17228 * C89926) * C26054 +
            (C19300 * C186 + C19301 * C89926) * C26055) *
               C89843 * C7039) *
              C89990 +
          (((C14190 * C186 + C14191 * C89926) * C26053 +
            (C29855 + C29856) * C26054 + (C29863 + C29864) * C26055) *
               C89843 * C90025 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C89843 * C90024 -
           (((C13338 * C14820 + C89783 * C14976) * C89926 +
             (C13338 * C14728 + C89783 * C14730) * C186) *
                C26055 +
            (C17235 * C89926 + C17234 * C186) * C26054 +
            (C14193 * C89926 + C14192 * C186) * C26053) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C90024 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C90025 +
           (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C89843 * C7039) *
              C89990 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C90025 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C90024 -
           (C13556 * C13844 + C14281 + C14281 + C13336 * C14270 +
            C13555 * C5802 + C14282 + C14282 + C13335 * C6029 + C13554 * C831 +
            C14283 + C14283 + C13334 * C1251) *
               C89783 * C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C90024 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C90025 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C89843 * C7039) *
              C89990 +
          ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
               C90025 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C90024 -
           ((C416 * C834 + C1271 + C1271 + C89926 * C1254) * C91 + C1283 * C90 +
            C1282 * C89) *
               C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C89843 * C90024 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C89843 * C90025 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
            (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89783 * C26054 +
            (C416 * C14727 + C26848 + C26848 + C89926 * C15051) * C89783 *
                C26055) *
               C89843 * C7039) *
              C89990 +
          ((C1281 * C89783 * C26053 + C29969 * C26054 + C29984 * C26055) *
               C89843 * C90025 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C89843 * C90024 -
           ((C416 * C14728 + C26849 + C26849 + C89926 * C15052) * C89783 *
                C26055 +
            (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C89783 * C26054 +
            C1282 * C89783 * C26053) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C90024 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C90025 +
           (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C89843 * C7039) *
              C89990 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C90025 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C90024 -
           ((C273 * C13964 + C89937 * C14358) * C13336 +
            (C273 * C13844 + C89937 * C14042) * C13403 + C14371 * C13335 +
            C14072 * C13402 + C1380 * C13334 + C1088 * C13401) *
               C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C90024 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C90025 +
           (((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C89843 * C7039) *
              C89990 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            (C3098 + C3102) * C91) *
               C89843 * C90025 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C90024 -
           (((C273 * C944 + C89937 * C1364) * C89926 +
             (C273 * C834 + C89937 * C1058) * C186) *
                C91 +
            (C1385 + C1375) * C90 + (C1384 + C1372) * C89) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89843 * C90024 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C89843 * C90025 +
           ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
             C26161 * C14727 + C26055 * C14897) *
                C186 +
            (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
             C26161 * C14819 + C26055 * C15139) *
                C89926) *
               C89783 * C89843 * C7039) *
              C89990 +
          (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
             C26161 * C6324 + C26055 * C6490) *
                C186 +
            (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
             C26161 * C6410 + C26055 * C6727) *
                C89926) *
               C89783 * C89843 * C90025 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C89843 * C90024 -
           ((C26161 * C14820 + C26055 * C15140 + C26160 * C8677 +
             C26054 * C8994 + C26159 * C941 + C26053 * C1361) *
                C89926 +
            (C26161 * C14728 + C26055 * C14898 + C26160 * C8591 +
             C26054 * C8757 + C26159 * C831 + C26053 * C1055) *
                C186) *
               C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89843 * C90024 -
           (C18843 * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C89843 * C90025 +
           (C14478 * C13334 + (C14456 + C14474) * C13335 +
            (C18844 + C18848) * C13336) *
               C89843 * C7039) *
              C89990 +
          (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
            (C14463 + C14477) * C13336) *
               C89843 * C90025 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C89843 * C90024 -
           (((C13338 * C14042 + C89783 * C14446) * C89937 +
             (C13338 * C13844 + C89783 * C13846) * C273) *
                C13336 +
            (C14477 + C14463) * C13335 + C14479 * C13334) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C89843 * C90024 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C89843 * C90025 +
           ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C273 +
            (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
             C105 * C1056 + C91 * C1464) *
                C89937) *
               C89926 * C89843 * C7039) *
              C89990 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C273 +
            (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
             C105 * C1057 + C91 * C1465) *
                C89937) *
               C89926 * C89843 * C90025 -
           ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
             C89 * C578) *
                C89937 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C273) *
               C89926 * C89843 * C90024 -
           ((C105 * C1058 + C91 * C1466 + C103 * C1056 + C90 * C1464 +
             C101 * C1055 + C89 * C1463) *
                C89937 +
            (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 + C101 * C831 +
             C89 * C839) *
                C273) *
               C89926 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C89843 * C90024 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C89843 * C90025 +
           (C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
            C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
               C89926 * C89843 * C7039) *
              C89990 +
          ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
            C17565 * C26054 + C29861 * C26161 + C30185 * C26055) *
               C89926 * C89843 * C90025 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C89843 * C90024 -
           ((C13338 * C14898 + C89783 * C15216) * C26055 +
            (C13338 * C14728 + C89783 * C14730) * C26161 + C17566 * C26054 +
            C17234 * C26160 + C14470 * C26053 + C14192 * C26159) *
               C89926 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89843 * C90024 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89843 * C90025 +
           ((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C89843 * C7039) *
              C89990 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C273 +
            (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 + C13335 * C1545 +
             C13403 * C5920 + C13336 * C6191) *
                C89937) *
               C89783 * C89843 * C90025 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89843 * C90024 -
           ((C13403 * C14042 + C13336 * C14554 + C13402 * C5920 +
             C13335 * C6191 + C13401 * C1055 + C13334 * C1545) *
                C89937 +
            (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
             C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                C273) *
               C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89843 * C90024 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C89843 * C90025 +
           (((C186 * C830 + C89926 * C940) * C273 +
             (C186 * C1054 + C89926 * C1544) * C89937) *
                C89 +
            (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
               C89843 * C7039) *
              C89990 +
          (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
            (C3254 + C3258) * C91) *
               C89843 * C90025 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89843 *
               C90024 -
           (((C186 * C1058 + C89926 * C1548) * C89937 +
             (C186 * C834 + C89926 * C944) * C273) *
                C91 +
            (C1569 + C1559) * C90 + (C1568 + C1556) * C89) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C89843 * C90024 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C89843 * C90025 +
           ((C186 * C830 + C89926 * C940) * C26159 +
            (C186 * C1054 + C89926 * C1544) * C26053 +
            (C186 * C8592 + C89926 * C8678) * C26160 +
            (C186 * C8758 + C89926 * C9149) * C26054 +
            (C186 * C14727 + C89926 * C14819) * C26161 +
            (C186 * C14897 + C89926 * C15291) * C26055) *
               C89783 * C89843 * C7039) *
              C89990 +
          ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
            C29644 * C26161 + C30293 * C26055) *
               C89783 * C89843 * C90025 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C89843 * C90024 -
           ((C186 * C14898 + C89926 * C15292) * C26055 +
            (C186 * C14728 + C89926 * C14820) * C26161 +
            (C186 * C8757 + C89926 * C9148) * C26054 +
            (C186 * C8591 + C89926 * C8677) * C26160 + C1564 * C26053 +
            C974 * C26159) *
               C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C90024 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C90025 +
           (C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C89843 * C7039) *
              C89990 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C90025 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C90024 -
           ((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C13336 +
            C14653 * C13335 + C1678 * C13334) *
               C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C90024 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C90025 +
           ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C89843 * C7039) *
              C89990 +
          ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C90025 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C90024 -
           ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C89926 * C91 +
            C1683 * C90 + C1682 * C89) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89843 * C90024 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C89843 * C90025 +
           (C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
            C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
            C27151 + C26055 * C15367) *
               C89926 * C89783 * C89843 * C7039) *
              C89990 +
          ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
            C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
            C27154 + C26055 * C6958) *
               C89926 * C89783 * C89843 * C90025 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C89843 * C90024 -
           (C26464 * C14728 + C27155 + C27155 + C26055 * C15368 +
            C26463 * C8591 + C27156 + C27156 + C26054 * C9225 + C26462 * C831 +
            C27157 + C27157 + C26053 * C1647) *
               C89926 * C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89999 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C90024 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89999) *
              C90025 +
          ((C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89999 -
           ((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C89937 *
                C13336 +
            C21338 * C13335 + C16878 * C13334) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89999 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C90024 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C89907 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89999) *
              C90025 +
          ((C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C89999 -
           (C104 * C8590 + C8600 + C8600 + C91 * C8596 + C102 * C8591 + C8601 +
            C8601 + C90 * C8597 + C100 * C8592 + C8602 + C8602 + C89 * C8598) *
               C89937 * C89926 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C89999 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C89907) *
              C90024 +
          ((C16875 * C26053 + C19043 * C26054 + C31602 * C26055) * C89926 *
               C89907 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C89999) *
              C90025 +
          ((C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
               C89999 -
           ((C13337 * C23355 + C23362 + C23362 + C89783 * C23359) * C26055 +
            C19044 * C26054 + C16874 * C26053) *
               C89926 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C90024 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89999) *
                        C90025 +
                    (((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C21329 + C13336 * C21413 + C13402 * C16851 +
                       C13335 * C16981 + C13401 * C8595 + C13334 * C8681) *
                          C89783 +
                      (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
                       C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                          C13338) *
                         C89937 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89999 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C90024 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C89907 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89999) *
                        C90025 +
                    (((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C89999 -
                     ((C186 * C8593 + C89926 * C8679) * C91 +
                      (C186 * C8590 + C89926 * C8676) * C105 +
                      (C186 * C8594 + C89926 * C8680) * C90 +
                      (C186 * C8591 + C89926 * C8677) * C103 +
                      (C186 * C8595 + C89926 * C8681) * C89 +
                      (C186 * C8592 + C89926 * C8678) * C101) *
                         C89937 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C89999 -
                     ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C89907) *
                        C90024 +
                    (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
                      (C31686 + C31687) * C26055) *
                         C89907 -
                     (C31683 * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C89999) *
                        C90025 +
                    ((((C186 * C830 + C89926 * C940) * C13338 +
                       (C186 * C838 + C89926 * C948) * C89783) *
                          C26053 +
                      (C33947 + C33948) * C26054 + (C33949 + C33950) * C26055) *
                         C89999 -
                     (((C186 * C23357 + C89926 * C23416) * C89783 +
                       (C186 * C23355 + C89926 * C23414) * C13338) *
                          C26055 +
                      (C33950 + C33949) * C26054 + (C33948 + C33947) * C26053) *
                         C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89999 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C90024 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C89907 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89999) *
                        C90025 +
                    ((C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C89999 -
                     (((C273 * C21329 + C89937 * C21489) * C89783 +
                       (C273 * C21328 + C89937 * C21488) * C13338) *
                          C13336 +
                      (C21499 + C21498) * C13335 + C21491 * C13334) *
                         C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89999 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C90024 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C89907 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89999) *
                        C90025 +
                    (((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C89999 -
                     ((C273 * C8593 + C89937 * C8759) * C91 +
                      (C273 * C8590 + C89937 * C8756) * C105 +
                      (C273 * C8594 + C89937 * C8760) * C90 +
                      (C273 * C8591 + C89937 * C8757) * C103 +
                      (C273 * C8595 + C89937 * C8761) * C89 +
                      (C273 * C8592 + C89937 * C8758) * C101) *
                         C89926 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C89999 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C89907) *
                        C90024 +
                    (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
                       C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                          C13338 +
                      (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
                       C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                          C89783) *
                         C89926 * C89907 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C89999) *
                        C90025 +
                    (((C26159 * C830 + C26053 * C1054 + C26160 * C8592 +
                       C26054 * C8758 + C26161 * C14727 + C26055 * C14897) *
                          C13338 +
                      (C26159 * C838 + C26053 * C1062 + C26160 * C8595 +
                       C26054 * C8761 + C26161 * C14729 + C26055 * C14899) *
                          C89783) *
                         C89926 * C89999 -
                     ((C26161 * C23357 + C26055 * C23470 + C26160 * C14729 +
                       C26054 * C14899 + C26159 * C8595 + C26053 * C8761) *
                          C89783 +
                      (C26161 * C23355 + C26055 * C23468 + C26160 * C14727 +
                       C26054 * C14897 + C26159 * C8592 + C26053 * C8758) *
                          C13338) *
                         C89926 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89999 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C90024 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C89907 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89999) *
              C90025 +
          ((C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C89999 -
           ((C13338 * C21412 + C89783 * C21573) * C13336 +
            (C13338 * C21328 + C89783 * C21329) * C13403 + C21580 * C13335 +
            C21579 * C13402 + C17228 * C13334 + C17229 * C13401) *
               C89937 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C90024 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89999) *
              C90025 +
          (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C8676 + C91 * C8836 + C103 * C8677 + C90 * C8837 +
             C101 * C8678 + C89 * C8838) *
                C89926 +
            (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
             C101 * C8592 + C89 * C8595) *
                C186) *
               C89937 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C89999 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C89907) *
              C90024 +
          (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
            (C31846 + C31847) * C26055) *
               C89907 -
           (C31843 * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C89999) *
              C90025 +
          (((C14186 * C186 + C14187 * C89926) * C26053 +
            (C34099 + C34100) * C26054 + (C34101 + C34102) * C26055) *
               C89999 -
           (((C13338 * C23414 + C89783 * C23522) * C89926 +
             (C13338 * C23355 + C89783 * C23357) * C186) *
                C26055 +
            (C34102 + C34101) * C26054 + (C34100 + C34099) * C26053) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89999 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C90024 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C89907 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89999) *
              C90025 +
          ((C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C89999 -
           (C13556 * C21328 + C21656 + C21656 + C13336 * C21654 +
            C13555 * C16849 + C21657 + C21657 + C13335 * C17333 +
            C13554 * C8592 + C21658 + C21658 + C13334 * C8915) *
               C89783 * C89937 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89999 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C90024 +
          (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
            C4630 * C90 + C4631 * C91) *
               C89937 * C89907 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89999) *
              C90025 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C89999 -
           ((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C91 +
            (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C90 +
            (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89) *
               C89937 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C89999 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
              C90024 +
          ((C29982 * C26053 + C29983 * C26054 + C31929 * C26055) * C89907 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C89999) *
              C90025 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
            C34188 * C26054 + C34189 * C26055) *
               C89999 -
           ((C416 * C23355 + C34181 + C34181 + C89926 * C23574) * C89783 *
                C26055 +
            C34189 * C26054 + C34188 * C26053) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89999 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C90024 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C89907 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89999) *
              C90025 +
          ((C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C89999 -
           ((C273 * C21412 + C89937 * C21732) * C13336 +
            (C273 * C21328 + C89937 * C21488) * C13403 + C21736 * C13335 +
            C21496 * C13402 + C17448 * C13334 + C17101 * C13401) *
               C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89999 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C90024 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C89907 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89999) *
              C90025 +
          ((((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C89999 -
           (((C273 * C8676 + C89937 * C8993) * C89926 +
             (C273 * C8590 + C89937 * C8756) * C186) *
                C91 +
            ((C273 * C8677 + C89937 * C8994) * C89926 +
             (C273 * C8591 + C89937 * C8757) * C186) *
                C90 +
            ((C273 * C8678 + C89937 * C8995) * C89926 +
             (C273 * C8592 + C89937 * C8758) * C186) *
                C89) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89999 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C89907) *
              C90024 +
          (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 + C26054 * C6491 +
             C26161 * C23356 + C26055 * C23469) *
                C186 +
            (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 + C26054 * C6728 +
             C26161 * C23415 + C26055 * C23630) *
                C89926) *
               C89783 * C89907 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C89999) *
              C90025 +
          (((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
             C26161 * C14727 + C26055 * C14897) *
                C186 +
            (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
             C26161 * C14819 + C26055 * C15139) *
                C89926) *
               C89783 * C89999 -
           ((C26161 * C23414 + C26055 * C23629 + C26160 * C14819 +
             C26054 * C15139 + C26159 * C8678 + C26053 * C8995) *
                C89926 +
            (C26161 * C23355 + C26055 * C23468 + C26160 * C14727 +
             C26054 * C14897 + C26159 * C8592 + C26053 * C8758) *
                C186) *
               C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89999 -
           (C21812 * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C89907) *
              C90024 +
          (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
            (C21813 + C21817) * C13336) *
               C89907 -
           (C18843 * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C89999) *
              C90025 +
          ((C14478 * C13334 + (C14456 + C14474) * C13335 +
            (C18844 + C18848) * C13336) *
               C89999 -
           (((C13338 * C21488 + C89783 * C21810) * C89937 +
             (C13338 * C21328 + C89783 * C21329) * C273) *
                C13336 +
            (C21817 + C21813) * C13335 + C21812 * C13334) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C89999 -
           ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
             C101 * C1986 + C89 * C2394) *
                C89937 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C273) *
               C89926 * C89907) *
              C90024 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C273 +
            (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
             C105 * C4395 + C91 * C4843) *
                C89937) *
               C89926 * C89907 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C89999) *
              C90025 +
          (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C273 +
            (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
             C105 * C1056 + C91 * C1464) *
                C89937) *
               C89926 * C89999 -
           ((C105 * C8756 + C91 * C9070 + C103 * C8757 + C90 * C9071 +
             C101 * C8758 + C89 * C9072) *
                C89937 +
            (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
             C101 * C8592 + C89 * C8595) *
                C273) *
               C89926 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C89999 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C89907) *
              C90024 +
          ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
            C19542 * C26054 + C31844 * C26161 + C32082 * C26055) *
               C89926 * C89907 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C89999) *
              C90025 +
          ((C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
            C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
               C89926 * C89999 -
           ((C13338 * C23468 + C89783 * C23681) * C26055 +
            (C13338 * C23355 + C89783 * C23357) * C26161 + C19543 * C26054 +
            C19300 * C26160 + C17563 * C26053 + C17229 * C26159) *
               C89926 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89999 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C90024 +
          (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 + C13335 * C8678 +
             C13403 * C16849 + C13336 * C16979) *
                C273 +
            (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 + C13335 * C9149 +
             C13403 * C17081 + C13336 * C17668) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89999) *
              C90025 +
          (((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C89999 -
           ((C13403 * C21488 + C13336 * C21891 + C13402 * C17081 +
             C13335 * C17668 + C13401 * C8758 + C13334 * C9149) *
                C89937 +
            (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
             C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                C273) *
               C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89999 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C90024 +
          ((((C186 * C4159 + C89926 * C4275) * C273 +
             (C186 * C4393 + C89926 * C4943) * C89937) *
                C89 +
            (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
               C89907 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C89999) *
              C90025 +
          ((((C186 * C830 + C89926 * C940) * C273 +
             (C186 * C1054 + C89926 * C1544) * C89937) *
                C89 +
            (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
               C89999 -
           (((C186 * C8756 + C89926 * C9147) * C89937 +
             (C186 * C8590 + C89926 * C8676) * C273) *
                C91 +
            ((C186 * C8757 + C89926 * C9148) * C89937 +
             (C186 * C8591 + C89926 * C8677) * C273) *
                C90 +
            ((C186 * C8758 + C89926 * C9149) * C89937 +
             (C186 * C8592 + C89926 * C8678) * C273) *
                C89) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C89999 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C89907) *
              C90024 +
          ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
            C30292 * C26054 + C31684 * C26161 + C32160 * C26055) *
               C89783 * C89907 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C89999) *
              C90025 +
          (((C186 * C830 + C89926 * C940) * C26159 +
            (C186 * C1054 + C89926 * C1544) * C26053 + C33943 * C26160 +
            C34416 * C26054 + C33945 * C26161 + C34417 * C26055) *
               C89783 * C89999 -
           ((C186 * C23468 + C89926 * C23733) * C26055 +
            (C186 * C23355 + C89926 * C23414) * C26161 + C34417 * C26054 +
            C33945 * C26160 + C34416 * C26053 + C33943 * C26159) *
               C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89999 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C90024 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C89907 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89999) *
              C90025 +
          ((C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C89999 -
           ((C711 * C21328 + C21970 + C21970 + C89937 * C21966) * C13336 +
            C21973 * C13335 + C17785 * C13334) *
               C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89999 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C90024 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C89907 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89999) *
              C90025 +
          (((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C89999 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C89926 * C91 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C89926 * C90 +
            (C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C89926 * C89) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89999 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C89907) *
              C90024 +
          ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 + C26463 * C6325 +
            C30394 + C30394 + C26054 * C6959 + C26464 * C23356 + C30395 +
            C30395 + C26055 * C23786) *
               C89926 * C89783 * C89907 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C89999) *
              C90025 +
          ((C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
            C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
            C27151 + C26055 * C15367) *
               C89926 * C89783 * C89999 -
           (C26464 * C23355 + C34492 + C34492 + C26055 * C23785 +
            C26463 * C14727 + C34493 + C34493 + C26054 * C15367 +
            C26462 * C8592 + C34494 + C34494 + C26053 * C9226) *
               C89926 * C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
                C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                   C89937 * C89926 * C89843 * C5149 -
               (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
                C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                   C89937 * C89926 * C89843 * C89879) *
                  C5151 +
              ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
                C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                   C89937 * C89926 * C89843 * C89879 -
               (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
                C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                   C89937 * C89926 * C89843 * C5149) *
                  C5152 +
              ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 +
                C132 + C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
                   C89937 * C89926 * C89843 * C5149 -
               (C104 * C2695 + C2699 + C2699 + C91 * C2697 + C102 * C833 +
                C2700 + C2700 + C90 * C849 + C100 * C827 + C2701 + C2701 +
                C89 * C843) *
                   C89937 * C89926 * C89843 * C89879) *
                  C5153) +
         0.5 * std::pow(Pi, 2.5) *
             ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
               C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                  C89937 * C89926 * C89843 * C5796 -
              (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
               C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                  C89937 * C89926 * C89843 * C5797 +
              (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 +
               C856 + C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
                  C89937 * C89926 * C89843 * C5798 -
              (C104 * C5801 + C5811 + C5811 + C91 * C5807 + C102 * C5802 +
               C5812 + C5812 + C90 * C5808 + C100 * C5803 + C5813 + C5813 +
               C89 * C5809) *
                  C89937 * C89926 * C89843 * C5799) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C1757 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C1758 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C1759) *
              C5149 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C1758 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C1757 -
           (C104 * C6323 + C6333 + C6333 + C91 * C6329 + C102 * C6324 + C6334 +
            C6334 + C90 * C6330 + C100 * C6325 + C6335 + C6335 + C89 * C6331) *
               C89937 * C89926 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C5149 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C89879) *
              C5151 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C89879 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C5149) *
              C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89843 * C5149 -
           ((C13337 * C5801 + C15450 + C15450 + C89783 * C5807) * C89937 *
                C13336 +
            C15458 * C13335 + C15457 * C13334) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           C13884 * C13335 + C13885 * C13336) *
              C89843 * C5796 -
          (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
              C5797 +
          (C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89843 *
              C5798 -
          ((C13337 * C18503 + C18509 + C18509 + C89783 * C18505) * C89937 *
               C13336 +
           C18513 * C13335 + C13886 * C13334) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C1757 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C1758 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            C19045 * C13335 + C19046 * C13336) *
               C1759) *
              C5149 +
          ((C16879 * C13334 + C16878 * C13335 +
            (C13337 * C16849 + C16860 + C16860 + C89783 * C16853) * C89937 *
                C13336) *
               C1758 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C1757 -
           ((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C89937 *
                C13336 +
            C19046 * C13335 + C19045 * C13334) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C89843 * C5149 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C89843 * C89879) *
              C5151 +
          ((C13881 * C26053 + C16876 * C26054 + C29525 * C26055) * C89926 *
               C89843 * C89879 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
            C28794 * C26054 + C28795 * C26055) *
               C89926 * C89843 * C5149 -
           ((C13337 * C6323 + C28115 + C28115 + C89783 * C6329) * C26055 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C26054 +
            C15455 * C26053) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
           C27265 * C26054 + C27266 * C26055) *
              C89926 * C89843 * C5796 -
          (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
              C89843 * C5797 +
          (C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
              C89843 * C5798 -
          ((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C26055 +
           C21337 * C26054 + C13880 * C26053) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C1757 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C1758 +
           (C27266 * C26053 + C27267 * C26054 +
            (C13337 * C27231 + C27244 + C27244 + C89783 * C27235) * C26055) *
               C89926 * C1759) *
              C5149 +
          ((C16875 * C26053 + C19043 * C26054 + C31602 * C26055) * C89926 *
               C1758 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C1757 -
           ((C13337 * C31593 + C31599 + C31599 + C89783 * C31595) * C26055 +
            C31602 * C26054 + C19043 * C26053) *
               C89926 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] += (0.5 * std::pow(Pi, 2.5) *
                       ((((C186 * C106 + C89926 * C187) * C101 +
                          (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                          C217 * C90 + C218 * C105 + C219 * C91) *
                             C89937 * C89843 * C5149 -
                         (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                          (C186 * C837 + C89926 * C947) * C89 +
                          (C186 * C829 + C89926 * C939) * C101) *
                             C89937 * C89843 * C89879) *
                            C5151 +
                        ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                          C2782 * C105 + C2783 * C91) *
                             C89937 * C89843 * C89879 -
                         (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                          C217 * C89 + C216 * C101) *
                             C89937 * C89843 * C5149) *
                            C5152 +
                        ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                          C222 * C105 + C223 * C91) *
                             C89937 * C89843 * C5149 -
                         ((C186 * C2696 + C89926 * C2776) * C91 +
                          (C186 * C2695 + C89926 * C2775) * C105 + C2783 * C90 +
                          C2782 * C103 + C970 * C89 + C971 * C101) *
                             C89937 * C89843 * C89879) *
                            C5153) +
                   0.5 * std::pow(Pi, 2.5) *
                       (((C186 * C106 + C89926 * C187) * C101 +
                         (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                         C217 * C90 + C218 * C105 + C219 * C91) *
                            C89937 * C89843 * C5796 -
                        (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                         (C186 * C837 + C89926 * C947) * C89 +
                         (C186 * C829 + C89926 * C939) * C101) *
                            C89937 * C89843 * C5797 +
                        ((C186 * C830 + C89926 * C940) * C101 +
                         (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                         C975 * C90 + C976 * C105 + C977 * C91) *
                            C89937 * C89843 * C5798 -
                        ((C186 * C5804 + C89926 * C5866) * C91 +
                         (C186 * C5801 + C89926 * C5863) * C105 +
                         (C186 * C5805 + C89926 * C5867) * C90 +
                         (C186 * C5802 + C89926 * C5864) * C103 +
                         (C186 * C5806 + C89926 * C5868) * C89 +
                         (C186 * C5803 + C89926 * C5865) * C101) *
                            C89937 * C89843 * C5799) *
                       C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C1757 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C1758 +
                     ((C186 * C1763 + C89926 * C1873) * C101 +
                      (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                      C1908 * C90 + C1909 * C105 + C1910 * C91) *
                         C89937 * C1759) *
                        C5149 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C1758 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C1757 -
                     ((C186 * C6326 + C89926 * C6412) * C91 +
                      (C186 * C6323 + C89926 * C6409) * C105 +
                      (C186 * C6327 + C89926 * C6413) * C90 +
                      (C186 * C6324 + C89926 * C6410) * C103 +
                      (C186 * C6328 + C89926 * C6414) * C89 +
                      (C186 * C6325 + C89926 * C6411) * C101) *
                         C89937 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5151 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C89879 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C5149) *
                        C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5804 + C13336 * C5866 + C13402 * C840 +
                       C13335 * C950 + C13401 * C835 + C13334 * C945) *
                          C89783 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C89843 * C5796 -
                    ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                      C13335 * C948 + C13401 * C837 + C13334 * C947) *
                         C89783 +
                     (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                      C13335 * C940 + C13401 * C829 + C13334 * C939) *
                         C13338) *
                        C89937 * C89843 * C5797 +
                    ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                      C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                         C13338 +
                     (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                      C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                         C89783) *
                        C89937 * C89843 * C5798 -
                    ((C13403 * C18504 + C13336 * C18564 + C13402 * C13845 +
                      C13335 * C13965 + C13401 * C5806 + C13334 * C5868) *
                         C89783 +
                     (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
                      C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
                         C13338) *
                        C89937 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C1757 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C1758 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C13338 +
                      (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                       C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                          C89783) *
                         C89937 * C1759) *
                        C5149 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C1758 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C1757 -
                     ((C13403 * C19031 + C13336 * C19121 + C13402 * C14729 +
                       C13335 * C14821 + C13401 * C6328 + C13334 * C6414) *
                          C89783 +
                      (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
                       C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                          C13338) *
                         C89937 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C89843 * C5149 -
                     ((C29649 + C29648) * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C89843 * C89879) *
                        C5151 +
                    (((C973 * C13338 + C972 * C89783) * C26053 +
                      (C29634 + C29635) * C26054 + (C29650 + C29651) * C26055) *
                         C89843 * C89879 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C89843 * C5149) *
                        C5152 +
                    (((C218 * C13338 + C219 * C89783) * C26053 +
                      (C28870 + C28871) * C26054 + (C28872 + C28873) * C26055) *
                         C89843 * C5149 -
                     (((C186 * C6326 + C89926 * C6412) * C89783 +
                       (C186 * C6323 + C89926 * C6409) * C13338) *
                          C26055 +
                      (C4295 * C89783 + C4294 * C13338) * C26054 +
                      (C970 * C89783 + C971 * C13338) * C26053) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C13338 +
                      (C186 * C112 + C89926 * C193) * C89783) *
                         C26053 +
                     (C27378 + C27379) * C26054 + C27386 * C26055) *
                        C89843 * C5796 -
                    ((C29649 + C29648) * C26055 + (C29647 + C29646) * C26054 +
                     ((C186 * C837 + C89926 * C947) * C89783 +
                      (C186 * C829 + C89926 * C939) * C13338) *
                         C26053) *
                        C89843 * C5797 +
                    (((C186 * C830 + C89926 * C940) * C13338 +
                      (C186 * C838 + C89926 * C948) * C89783) *
                         C26053 +
                     ((C186 * C8592 + C89926 * C8678) * C13338 +
                      (C186 * C8595 + C89926 * C8681) * C89783) *
                         C26054 +
                     ((C186 * C14727 + C89926 * C14819) * C13338 +
                      (C186 * C14729 + C89926 * C14821) * C89783) *
                         C26055) *
                        C89843 * C5798 -
                    (((C186 * C19031 + C89926 * C19121) * C89783 +
                      (C186 * C19030 + C89926 * C19120) * C13338) *
                         C26055 +
                     ((C186 * C16851 + C89926 * C16981) * C89783 +
                      (C186 * C16849 + C89926 * C16979) * C13338) *
                         C26054 +
                     ((C186 * C5806 + C89926 * C5868) * C89783 +
                      (C186 * C5803 + C89926 * C5865) * C13338) *
                         C26053) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C1757 -
                     ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C1758 +
                     (C27386 * C26053 + (C27383 + C27382) * C26054 +
                      ((C186 * C27231 + C89926 * C27344) * C13338 +
                       (C186 * C27233 + C89926 * C27346) * C89783) *
                          C26055) *
                         C1759) *
                        C5149 +
                    (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
                      (C31686 + C31687) * C26055) *
                         C1758 -
                     (C31683 * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C1757 -
                     (((C186 * C31594 + C89926 * C31677) * C89783 +
                       (C186 * C31593 + C89926 * C31676) * C13338) *
                          C26055 +
                      (C31687 + C31686) * C26054 + C31683 * C26053) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[37] += (0.5 * std::pow(Pi, 2.5) *
                       ((((C273 * C106 + C89937 * C274) * C101 +
                          (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                          C304 * C90 + C305 * C105 + C306 * C91) *
                             C89926 * C89843 * C5149 -
                         (C1084 * C91 + C1085 * C105 + C1086 * C90 +
                          C1087 * C103 + (C273 * C837 + C89937 * C1061) * C89 +
                          (C273 * C829 + C89937 * C1053) * C101) *
                             C89926 * C89843 * C89879) *
                            C5151 +
                        ((C1087 * C101 + C1086 * C89 + C1085 * C103 +
                          C1084 * C90 + C2864 * C105 + C2865 * C91) *
                             C89926 * C89843 * C89879 -
                         (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                          C304 * C89 + C303 * C101) *
                             C89926 * C89843 * C5149) *
                            C5152 +
                        ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                          C309 * C105 + C310 * C91) *
                             C89926 * C89843 * C5149 -
                         ((C273 * C2696 + C89937 * C2858) * C91 +
                          (C273 * C2695 + C89937 * C2857) * C105 + C2865 * C90 +
                          C2864 * C103 + C1084 * C89 + C1085 * C101) *
                             C89926 * C89843 * C89879) *
                            C5153) +
                   0.5 * std::pow(Pi, 2.5) *
                       (((C273 * C106 + C89937 * C274) * C101 +
                         (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                         C304 * C90 + C305 * C105 + C306 * C91) *
                            C89926 * C89843 * C5796 -
                        (C1084 * C91 + C1085 * C105 + C1086 * C90 +
                         C1087 * C103 + (C273 * C837 + C89937 * C1061) * C89 +
                         (C273 * C829 + C89937 * C1053) * C101) *
                            C89926 * C89843 * C5797 +
                        ((C273 * C830 + C89937 * C1054) * C101 +
                         (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                         C1089 * C90 + C1090 * C105 + C1091 * C91) *
                            C89926 * C89843 * C5798 -
                        ((C273 * C5804 + C89937 * C5922) * C91 +
                         (C273 * C5801 + C89937 * C5919) * C105 +
                         (C273 * C5805 + C89937 * C5923) * C90 +
                         (C273 * C5802 + C89937 * C5920) * C103 +
                         (C273 * C5806 + C89937 * C5924) * C89 +
                         (C273 * C5803 + C89937 * C5921) * C101) *
                            C89926 * C89843 * C5799) *
                       C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C1757 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C1758 +
                     ((C273 * C1763 + C89937 * C1987) * C101 +
                      (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                      C2022 * C90 + C2023 * C105 + C2024 * C91) *
                         C89926 * C1759) *
                        C5149 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C1758 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C1757 -
                     ((C273 * C6326 + C89937 * C6492) * C91 +
                      (C273 * C6323 + C89937 * C6489) * C105 +
                      (C273 * C6327 + C89937 * C6493) * C90 +
                      (C273 * C6324 + C89937 * C6490) * C103 +
                      (C273 * C6328 + C89937 * C6494) * C89 +
                      (C273 * C6325 + C89937 * C6491) * C101) *
                         C89926 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C5149 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C89879 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C5149) *
                        C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89843 * C5149 -
                     (((C273 * C5804 + C89937 * C5922) * C89783 +
                       (C273 * C5801 + C89937 * C5919) * C13338) *
                          C13336 +
                      (C15610 + C15609) * C13335 + (C15608 + C15607) * C13334) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     (C14075 + C14076) * C13335 + C14083 * C13336) *
                        C89843 * C5796 -
                    (C18618 * C13336 + (C14078 + C14077) * C13335 +
                     (C14076 + C14075) * C13334) *
                        C89843 * C5797 +
                    (C14083 * C13334 + (C14080 + C14079) * C13335 +
                     (C18625 + C18626) * C13336) *
                        C89843 * C5798 -
                    (((C273 * C18504 + C89937 * C18616) * C89783 +
                      (C273 * C18503 + C89937 * C18615) * C13338) *
                         C13336 +
                     (C18626 + C18625) * C13335 + C18618 * C13334) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C1757 -
                     ((C17106 + C17107) * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C1758 +
                     (((C273 * C1763 + C89937 * C1987) * C13338 +
                       (C273 * C1771 + C89937 * C1995) * C89783) *
                          C13334 +
                      (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                         C1759) *
                        C5149 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      ((C273 * C16849 + C89937 * C17081) * C13338 +
                       (C273 * C16851 + C89937 * C17083) * C89783) *
                          C13336) *
                         C1758 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C1757 -
                     (((C273 * C19031 + C89937 * C19197) * C89783 +
                       (C273 * C19030 + C89937 * C19196) * C13338) *
                          C13336 +
                      (C19214 + C19213) * C13335 + (C19212 + C19211) * C13334) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C89843 * C5149 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 +
                       C26054 * C4394 + C26161 * C6324 + C26055 * C6490) *
                          C13338 +
                      (C26159 * C836 + C26053 * C1060 + C26160 * C4164 +
                       C26054 * C4398 + C26161 * C6327 + C26055 * C6493) *
                          C89783) *
                         C89926 * C89843 * C89879 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    (((C26159 * C108 + C26053 * C276 + C26160 * C1760 +
                       C26054 * C1984 + C26161 * C1765 + C26055 * C1989) *
                          C13338 +
                      (C26159 * C114 + C26053 * C282 + C26160 * C1768 +
                       C26054 * C1992 + C26161 * C1773 + C26055 * C1997) *
                          C89783) *
                         C89926 * C89843 * C5149 -
                     ((C26161 * C6326 + C26055 * C6492 + C26160 * C4165 +
                       C26054 * C4399 + C26159 * C835 + C26053 * C1059) *
                          C89783 +
                      (C26161 * C6323 + C26055 * C6489 + C26160 * C4161 +
                       C26054 * C4395 + C26159 * C827 + C26053 * C1051) *
                          C13338) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                      C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                         C13338 +
                     (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                      C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                         C89783) *
                        C89926 * C89843 * C5796 -
                    ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                      C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                         C89783 +
                     (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                      C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                         C13338) *
                        C89926 * C89843 * C5797 +
                    ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 +
                      C26054 * C8758 + C26161 * C14727 + C26055 * C14897) *
                         C13338 +
                     (C26159 * C838 + C26053 * C1062 + C26160 * C8595 +
                      C26054 * C8761 + C26161 * C14729 + C26055 * C14899) *
                         C89783) *
                        C89926 * C89843 * C5798 -
                    ((C26161 * C19031 + C26055 * C19197 + C26160 * C16851 +
                      C26054 * C17083 + C26159 * C5806 + C26053 * C5924) *
                         C89783 +
                     (C26161 * C19030 + C26055 * C19196 + C26160 * C16849 +
                      C26054 * C17081 + C26159 * C5803 + C26053 * C5921) *
                         C13338) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C1757 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C1758 +
                     ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
                       C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                          C13338 +
                      (C26159 * C1771 + C26053 * C1995 + C26160 * C10623 +
                       C26054 * C10741 + C26161 * C27233 + C26055 * C27462) *
                          C89783) *
                         C89926 * C1759) *
                        C5149 +
                    (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
                       C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                          C13338 +
                      (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
                       C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                          C89783) *
                         C89926 * C1758 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C1757 -
                     ((C26161 * C31594 + C26055 * C31762 + C26160 * C23358 +
                       C26054 * C23471 + C26159 * C6328 + C26053 * C6494) *
                          C89783 +
                      (C26161 * C31593 + C26055 * C31761 + C26160 * C23356 +
                       C26054 * C23469 + C26159 * C6325 + C26053 * C6491) *
                          C13338) *
                         C89926 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C186 +
                (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
                 C105 * C189 + C91 * C362) *
                    C89926) *
                   C89937 * C89843 * C5149 -
               ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
                 C101 * C939 + C89 * C1167) *
                    C89926 +
                (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                 C101 * C829 + C89 * C837) *
                    C186) *
                   C89937 * C89843 * C89879) *
                  C5151 +
              (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                 C105 * C833 + C91 * C841) *
                    C186 +
                (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
                 C105 * C943 + C91 * C1171) *
                    C89926) *
                   C89937 * C89843 * C89879 -
               ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
                 C101 * C188 + C89 * C361) *
                    C89926 +
                (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                 C101 * C107 + C89 * C113) *
                    C186) *
                   C89937 * C89843 * C5149) *
                  C5152 +
              (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                 C105 * C110 + C91 * C116) *
                    C186 +
                (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 +
                 C105 * C191 + C91 * C364) *
                    C89926) *
                   C89937 * C89843 * C5149 -
               ((C105 * C2775 + C91 * C2939 + C103 * C943 + C90 * C1171 +
                 C101 * C937 + C89 * C1165) *
                    C89926 +
                (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
                 C101 * C827 + C89 * C835) *
                    C186) *
                   C89937 * C89843 * C89879) *
                  C5153) +
         0.5 * std::pow(Pi, 2.5) *
             (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                C105 * C108 + C91 * C114) *
                   C186 +
               (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
                C105 * C189 + C91 * C362) *
                   C89926) *
                  C89937 * C89843 * C5796 -
              ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
                C101 * C939 + C89 * C1167) *
                   C89926 +
               (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                C101 * C829 + C89 * C837) *
                   C186) *
                  C89937 * C89843 * C5797 +
              ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                C105 * C832 + C91 * C840) *
                   C186 +
               (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
                C105 * C942 + C91 * C1170) *
                   C89926) *
                  C89937 * C89843 * C5798 -
              ((C105 * C5863 + C91 * C5975 + C103 * C5864 + C90 * C5976 +
                C101 * C5865 + C89 * C5977) *
                   C89926 +
               (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
                C101 * C5803 + C89 * C5806) *
                   C186) *
                  C89937 * C89843 * C5799) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C1757 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C1758 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C186 +
            (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
             C105 * C1875 + C91 * C2103) *
                C89926) *
               C89937 * C1759) *
              C5149 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C1758 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C1757 -
           ((C105 * C6409 + C91 * C6569 + C103 * C6410 + C90 * C6570 +
             C101 * C6411 + C89 * C6571) *
                C89926 +
            (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
             C101 * C6325 + C89 * C6328) *
                C186) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C5149 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C89879) *
              C5151 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C89879 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89843 * C5149 -
           ((C13338 * C5863 + C89783 * C5975) * C13336 +
            (C13338 * C5801 + C89783 * C5804) * C13403 + C15696 * C13335 +
            C15695 * C13402 + C15694 * C13334 + C15693 * C13401) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
           C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
              C89937 * C89843 * C5796 -
          (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
           C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
              C89937 * C89843 * C5797 +
          (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
           C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
              C89937 * C89843 * C5798 -
          ((C13338 * C18563 + C89783 * C18676) * C13336 +
           (C13338 * C18503 + C89783 * C18504) * C13403 + C18683 * C13335 +
           C18682 * C13402 + C14188 * C13334 + C14189 * C13401) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C1757 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C1758 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
            C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
               C89937 * C1759) *
              C5149 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + (C13338 * C16849 + C89783 * C16851) * C13403 +
            (C13338 * C16979 + C89783 * C17209) * C13336) *
               C89937 * C1758 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C1757 -
           ((C13338 * C19120 + C89783 * C19288) * C13336 +
            (C13338 * C19030 + C89783 * C19031) * C13403 + C19301 * C13335 +
            C19300 * C13402 + C19299 * C13334 + C19298 * C13401) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C89843 * C5149 -
           ((C29854 + C29853) * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C89843 * C89879) *
              C5151 +
          (((C14190 * C186 + C14191 * C89926) * C26053 +
            (C29855 + C29856) * C26054 + (C29863 + C29864) * C26055) *
               C89843 * C89879 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C89843 * C5149) *
              C5152 +
          ((((C13338 * C108 + C89783 * C114) * C186 +
             (C13338 * C189 + C89783 * C362) * C89926) *
                C26053 +
            (C29034 + C29035) * C26054 + (C29036 + C29037) * C26055) *
               C89843 * C5149 -
           (((C13338 * C6409 + C89783 * C6569) * C89926 +
             (C13338 * C6323 + C89783 * C6326) * C186) *
                C26055 +
            ((C13338 * C4277 + C89783 * C4513) * C89926 +
             (C13338 * C4161 + C89783 * C4165) * C186) *
                C26054 +
            (C15694 * C89926 + C15693 * C186) * C26053) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C186 +
            (C13338 * C187 + C89783 * C360) * C89926) *
               C26053 +
           (C27577 + C27578) * C26054 + C27589 * C26055) *
              C89843 * C5796 -
          ((C29854 + C29853) * C26055 + (C29852 + C29851) * C26054 +
           (C14185 * C89926 + C14184 * C186) * C26053) *
              C89843 * C5797 +
          ((C14186 * C186 + C14187 * C89926) * C26053 +
           (C17229 * C186 + C17228 * C89926) * C26054 +
           (C19300 * C186 + C19301 * C89926) * C26055) *
              C89843 * C5798 -
          (((C13338 * C19120 + C89783 * C19288) * C89926 +
            (C13338 * C19030 + C89783 * C19031) * C186) *
               C26055 +
           (C21580 * C89926 + C21579 * C186) * C26054 +
           (C14188 * C89926 + C14189 * C186) * C26053) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C1757 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C1758 +
           (C27589 * C26053 + (C27582 + C27581) * C26054 +
            ((C13338 * C27231 + C89783 * C27233) * C186 +
             (C13338 * C27344 + C89783 * C27538) * C89926) *
                C26055) *
               C1759) *
              C5149 +
          (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
            (C31846 + C31847) * C26055) *
               C1758 -
           (C31843 * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C1757 -
           (((C13338 * C31676 + C89783 * C31837) * C89926 +
             (C13338 * C31593 + C89783 * C31594) * C186) *
                C26055 +
            (C31847 + C31846) * C26054 + C31843 * C26053) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
                C447 * C91) *
                   C89937 * C89843 * C5149 -
               (C1280 * C91 + C1281 * C90 +
                (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                   C89937 * C89843 * C89879) *
                  C5151 +
              ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
                   C89879 -
               (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 *
                   C5149) *
                  C5152 +
              ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 *
                   C5149 -
               ((C416 * C2695 + C3018 + C3018 + C89926 * C3014) * C91 +
                C3021 * C90 + C1280 * C89) *
                   C89937 * C89843 * C89879) *
                  C5153) +
         0.5 * std::pow(Pi, 2.5) *
             (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
               C447 * C91) *
                  C89937 * C89843 * C5796 -
              (C1280 * C91 + C1281 * C90 +
               (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                  C89937 * C89843 * C5797 +
              ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 +
               C1282 * C90 + C1283 * C91) *
                  C89937 * C89843 * C5798 -
              ((C416 * C5801 + C6032 + C6032 + C89926 * C6028) * C91 +
               (C416 * C5802 + C6033 + C6033 + C89926 * C6029) * C90 +
               (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C89) *
                  C89937 * C89843 * C5799) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C1757 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C1758 +
           ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
            C2215 * C90 + C2216 * C91) *
               C89937 * C1759) *
              C5149 +
          (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
            C4630 * C90 + C4631 * C91) *
               C89937 * C1758 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C1757 -
           ((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C91 +
            (C416 * C6324 + C6651 + C6651 + C89926 * C6647) * C90 +
            (C416 * C6325 + C6652 + C6652 + C89926 * C6648) * C89) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C89879) *
              C5151 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C89879 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C5149) *
              C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5801 + C15771 + C15771 + C13336 * C6028 + C13555 * C832 +
            C15772 + C15772 + C13335 * C1252 + C13554 * C827 + C15773 + C15773 +
            C13334 * C1247) *
               C89783 * C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C5796 -
          (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
           C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
           C13334 * C1249) *
              C89783 * C89937 * C89843 * C5797 +
          (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
           C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
           C14277 + C13336 * C14269) *
              C89783 * C89937 * C89843 * C5798 -
          (C13556 * C18503 + C18735 + C18735 + C13336 * C18733 +
           C13555 * C13843 + C18736 + C18736 + C13335 * C14269 +
           C13554 * C5803 + C18737 + C18737 + C13334 * C6030) *
              C89783 * C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C1757 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C1758 +
           (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
            C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
            C15059 + C13336 * C15051) *
               C89783 * C89937 * C1759) *
              C5149 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C1758 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C1757 -
           (C13556 * C19030 + C19377 + C19377 + C13336 * C19375 +
            C13555 * C14727 + C19378 + C19378 + C13335 * C15051 +
            C13554 * C6325 + C19379 + C19379 + C13334 * C6648) *
               C89783 * C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C89843 * C5149 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C89843 * C89879) *
              C5151 +
          ((C1281 * C89783 * C26053 + C29969 * C26054 + C29984 * C26055) *
               C89843 * C89879 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C89843 * C5149) *
              C5152 +
          ((C447 * C89783 * C26053 + C29112 * C26054 + C29113 * C26055) *
               C89843 * C5149 -
           ((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C89783 * C26055 +
            C4631 * C89783 * C26054 + C1280 * C89783 * C26053) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
           C27691 * C26054 + C27692 * C26055) *
              C89843 * C5796 -
          (C29983 * C26055 + C29982 * C26054 +
           (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
              C89843 * C5797 +
          ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
           (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89783 * C26054 +
           (C416 * C14727 + C26848 + C26848 + C89926 * C15051) * C89783 *
               C26055) *
              C89843 * C5798 -
          ((C416 * C19030 + C31315 + C31315 + C89926 * C19375) * C89783 *
               C26055 +
           (C416 * C16849 + C31316 + C31316 + C89926 * C17333) * C89783 *
               C26054 +
           (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C89783 * C26053) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C1757 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C1758 +
           (C27692 * C26053 + C27693 * C26054 +
            (C416 * C27231 + C27673 + C27673 + C89926 * C27664) * C89783 *
                C26055) *
               C1759) *
              C5149 +
          ((C29982 * C26053 + C29983 * C26054 + C31929 * C26055) * C1758 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C1757 -
           ((C416 * C31593 + C31925 + C31925 + C89926 * C31921) * C89783 *
                C26055 +
            C31929 * C26054 + C29983 * C26053) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C273 * C106 + C89937 * C274) * C186 +
                 (C273 * C187 + C89937 * C499) * C89926) *
                    C89 +
                (C506 + C522) * C90 + C526 * C91) *
                   C89843 * C5149 -
               (C3097 * C91 + (C1383 + C1371) * C90 +
                ((C273 * C939 + C89937 * C1359) * C89926 +
                 (C273 * C829 + C89937 * C1053) * C186) *
                    C89) *
                   C89843 * C89879) *
                  C5151 +
              (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
                (C3098 + C3102) * C91) *
                   C89843 * C89879 -
               (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) *
                   C89843 * C5149) *
                  C5152 +
              ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) *
                   C89843 * C5149 -
               (((C273 * C2775 + C89937 * C3095) * C89926 +
                 (C273 * C2695 + C89937 * C2857) * C186) *
                    C91 +
                (C3102 + C3098) * C90 + C3097 * C89) *
                   C89843 * C89879) *
                  C5153) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C273 * C106 + C89937 * C274) * C186 +
                (C273 * C187 + C89937 * C499) * C89926) *
                   C89 +
               (C506 + C522) * C90 + C526 * C91) *
                  C89843 * C5796 -
              (C3097 * C91 + (C1383 + C1371) * C90 +
               ((C273 * C939 + C89937 * C1359) * C89926 +
                (C273 * C829 + C89937 * C1053) * C186) *
                   C89) *
                  C89843 * C5797 +
              (((C273 * C830 + C89937 * C1054) * C186 +
                (C273 * C940 + C89937 * C1360) * C89926) *
                   C89 +
               (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
                  C89843 * C5798 -
              (((C273 * C5863 + C89937 * C6084) * C89926 +
                (C273 * C5801 + C89937 * C5919) * C186) *
                   C91 +
               ((C273 * C5864 + C89937 * C6085) * C89926 +
                (C273 * C5802 + C89937 * C5920) * C186) *
                   C90 +
               ((C273 * C5865 + C89937 * C6086) * C89926 +
                (C273 * C5803 + C89937 * C5921) * C186) *
                   C89) *
                  C89843 * C5799) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C1757 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C1758 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C1759) *
              C5149 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C1758 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C1757 -
           (((C273 * C6409 + C89937 * C6726) * C89926 +
             (C273 * C6323 + C89937 * C6489) * C186) *
                C91 +
            ((C273 * C6410 + C89937 * C6727) * C89926 +
             (C273 * C6324 + C89937 * C6490) * C186) *
                C90 +
            ((C273 * C6411 + C89937 * C6728) * C89926 +
             (C273 * C6325 + C89937 * C6491) * C186) *
                C89) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C5149 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C89879) *
              C5151 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C89879 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C5149) *
              C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89843 * C5149 -
           ((C273 * C5863 + C89937 * C6084) * C13336 +
            (C273 * C5801 + C89937 * C5919) * C13403 + C1381 * C13335 +
            C1090 * C13402 + C1378 * C13334 + C1085 * C13401) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
           C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
              C89783 * C89843 * C5796 -
          (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
           C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
              C89783 * C89843 * C5797 +
          (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
           C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
              C89783 * C89843 * C5798 -
          ((C273 * C18563 + C89937 * C18787) * C13336 +
           (C273 * C18503 + C89937 * C18615) * C13403 + C18791 * C13335 +
           C18623 * C13402 + C14370 * C13334 + C14071 * C13401) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C1757 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C1758 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
            C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
               C89783 * C1759) *
              C5149 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + (C273 * C16849 + C89937 * C17081) * C13403 +
            (C273 * C16979 + C89937 * C17439) * C13336) *
               C89783 * C1758 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C1757 -
           ((C273 * C19120 + C89937 * C19453) * C13336 +
            (C273 * C19030 + C89937 * C19196) * C13403 + C19460 * C13335 +
            C19209 * C13402 + C19459 * C13334 + C19207 * C13401) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89843 * C5149 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
             C26161 * C6324 + C26055 * C6490) *
                C186 +
            (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
             C26161 * C6410 + C26055 * C6727) *
                C89926) *
               C89783 * C89843 * C89879 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
             C26161 * C1765 + C26055 * C1989) *
                C186 +
            (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
             C26161 * C1875 + C26055 * C2295) *
                C89926) *
               C89783 * C89843 * C5149 -
           ((C26161 * C6409 + C26055 * C6726 + C26160 * C4277 + C26054 * C4731 +
             C26159 * C937 + C26053 * C1357) *
                C89926 +
            (C26161 * C6323 + C26055 * C6489 + C26160 * C4161 + C26054 * C4395 +
             C26159 * C827 + C26053 * C1051) *
                C186) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
            C26161 * C1763 + C26055 * C1987) *
               C186 +
           (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
            C26161 * C1873 + C26055 * C2293) *
               C89926) *
              C89783 * C89843 * C5796 -
          ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
            C26159 * C939 + C26053 * C1359) *
               C89926 +
           (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
            C26159 * C829 + C26053 * C1053) *
               C186) *
              C89783 * C89843 * C5797 +
          ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
            C26161 * C14727 + C26055 * C14897) *
               C186 +
           (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
            C26161 * C14819 + C26055 * C15139) *
               C89926) *
              C89783 * C89843 * C5798 -
          ((C26161 * C19120 + C26055 * C19453 + C26160 * C16979 +
            C26054 * C17439 + C26159 * C5865 + C26053 * C6086) *
               C89926 +
           (C26161 * C19030 + C26055 * C19196 + C26160 * C16849 +
            C26054 * C17081 + C26159 * C5803 + C26053 * C5921) *
               C186) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C1757 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C1758 +
           ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
             C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                C186 +
            (C26159 * C1873 + C26053 * C2293 + C26160 * C10682 +
             C26054 * C10903 + C26161 * C27344 + C26055 * C27768) *
                C89926) *
               C89783 * C1759) *
              C5149 +
          (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 + C26054 * C6491 +
             C26161 * C23356 + C26055 * C23469) *
                C186 +
            (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 + C26054 * C6728 +
             C26161 * C23415 + C26055 * C23630) *
                C89926) *
               C89783 * C1758 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C1757 -
           ((C26161 * C31676 + C26055 * C32003 + C26160 * C23415 +
             C26054 * C23630 + C26159 * C6411 + C26053 * C6728) *
                C89926 +
            (C26161 * C31593 + C26055 * C31761 + C26160 * C23356 +
             C26054 * C23469 + C26159 * C6325 + C26053 * C6491) *
                C186) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C273 +
                (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                 C105 * C276 + C91 * C579) *
                    C89937) *
                   C89926 * C89843 * C5149 -
               ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                 C101 * C1053 + C89 * C1461) *
                    C89937 +
                (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                 C101 * C829 + C89 * C837) *
                    C273) *
                   C89926 * C89843 * C89879) *
                  C5151 +
              (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                 C105 * C833 + C91 * C841) *
                    C273 +
                (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                 C105 * C1057 + C91 * C1465) *
                    C89937) *
                   C89926 * C89843 * C89879 -
               ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                 C101 * C275 + C89 * C578) *
                    C89937 +
                (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                 C101 * C107 + C89 * C113) *
                    C273) *
                   C89926 * C89843 * C5149) *
                  C5152 +
              (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                 C105 * C110 + C91 * C116) *
                    C273 +
                (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                 C105 * C278 + C91 * C581) *
                    C89937) *
                   C89926 * C89843 * C5149 -
               ((C105 * C2857 + C91 * C3176 + C103 * C1057 + C90 * C1465 +
                 C101 * C1051 + C89 * C1459) *
                    C89937 +
                (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
                 C101 * C827 + C89 * C835) *
                    C273) *
                   C89926 * C89843 * C89879) *
                  C5153) +
         0.5 * std::pow(Pi, 2.5) *
             (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                C105 * C108 + C91 * C114) *
                   C273 +
               (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                C105 * C276 + C91 * C579) *
                   C89937) *
                  C89926 * C89843 * C5796 -
              ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                C101 * C1053 + C89 * C1461) *
                   C89937 +
               (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                C101 * C829 + C89 * C837) *
                   C273) *
                  C89926 * C89843 * C5797 +
              ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                C105 * C832 + C91 * C840) *
                   C273 +
               (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                C105 * C1056 + C91 * C1464) *
                   C89937) *
                  C89926 * C89843 * C5798 -
              ((C105 * C5919 + C91 * C6137 + C103 * C5920 + C90 * C6138 +
                C101 * C5921 + C89 * C6139) *
                   C89937 +
               (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
                C101 * C5803 + C89 * C5806) *
                   C273) *
                  C89926 * C89843 * C5799) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C1757 -
           ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
             C101 * C1986 + C89 * C2394) *
                C89937 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C273) *
               C89926 * C1758 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C273 +
            (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
             C105 * C1989 + C91 * C2397) *
                C89937) *
               C89926 * C1759) *
              C5149 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C273 +
            (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
             C105 * C4395 + C91 * C4843) *
                C89937) *
               C89926 * C1758 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C1757 -
           ((C105 * C6489 + C91 * C6803 + C103 * C6490 + C90 * C6804 +
             C101 * C6491 + C89 * C6805) *
                C89937 +
            (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
             C101 * C6325 + C89 * C6328) *
                C273) *
               C89926 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89843 * C5149 -
           ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C89843 * C89879) *
              C5151 +
          (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
            (C14463 + C14477) * C13336) *
               C89843 * C89879 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C89843 * C5149) *
              C5152 +
          ((((C13338 * C108 + C89783 * C114) * C273 +
             (C13338 * C276 + C89783 * C579) * C89937) *
                C13334 +
            (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
               C89843 * C5149 -
           (((C13338 * C5919 + C89783 * C6137) * C89937 +
             (C13338 * C5801 + C89783 * C5804) * C273) *
                C13336 +
            (C15931 + C15925) * C13335 + (C15930 + C15922) * C13334) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C273 +
            (C13338 * C274 + C89783 * C577) * C89937) *
               C13334 +
           (C14448 + C14472) * C13335 + C14478 * C13336) *
              C89843 * C5796 -
          (C18843 * C13336 + (C14473 + C14451) * C13335 +
           (C14472 + C14448) * C13334) *
              C89843 * C5797 +
          (C14478 * C13334 + (C14456 + C14474) * C13335 +
           (C18844 + C18848) * C13336) *
              C89843 * C5798 -
          (((C13338 * C18615 + C89783 * C18841) * C89937 +
            (C13338 * C18503 + C89783 * C18504) * C273) *
               C13336 +
           (C18848 + C18844) * C13335 + C18843 * C13334) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C1757 -
           ((C17567 + C17553) * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C1758 +
           (((C13338 * C1763 + C89783 * C1771) * C273 +
             (C13338 * C1987 + C89783 * C2395) * C89937) *
                C13334 +
            (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
               C1759) *
              C5149 +
          (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
            ((C13338 * C16849 + C89783 * C16851) * C273 +
             (C13338 * C17081 + C89783 * C17548) * C89937) *
                C13336) *
               C1758 -
           (C18843 * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C1757 -
           (((C13338 * C19196 + C89783 * C19534) * C89937 +
             (C13338 * C19030 + C89783 * C19031) * C273) *
                C13336 +
            (C19545 + C19539) * C13335 + (C19544 + C19536) * C13334) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C89843 * C5149 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C89843 * C89879) *
              C5151 +
          ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
            C17565 * C26054 + C29861 * C26161 + C30185 * C26055) *
               C89926 * C89843 * C89879 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C13338 * C108 + C89783 * C114) * C26159 +
            (C13338 * C276 + C89783 * C579) * C26053 + C29030 * C26160 +
            C29266 * C26054 + C29032 * C26161 + C29267 * C26055) *
               C89926 * C89843 * C5149 -
           ((C13338 * C6489 + C89783 * C6803) * C26055 +
            (C13338 * C6323 + C89783 * C6326) * C26161 +
            (C13338 * C4395 + C89783 * C4843) * C26054 +
            (C13338 * C4161 + C89783 * C4165) * C26160 + C15928 * C26053 +
            C15693 * C26159) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C26159 +
           (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
           C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
              C89926 * C89843 * C5796 -
          (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
           C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
              C89926 * C89843 * C5797 +
          (C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
           C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
              C89926 * C89843 * C5798 -
          ((C13338 * C19196 + C89783 * C19534) * C26055 +
           (C13338 * C19030 + C89783 * C19031) * C26161 + C21816 * C26054 +
           C21579 * C26160 + C14468 * C26053 + C14189 * C26159) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C1757 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C1758 +
           (C27567 * C26159 + C27860 * C26053 + C27570 * C26160 +
            C27861 * C26054 + (C13338 * C27231 + C89783 * C27233) * C26161 +
            (C13338 * C27460 + C89783 * C27844) * C26055) *
               C89926 * C1759) *
              C5149 +
          ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
            C19542 * C26054 + C31844 * C26161 + C32082 * C26055) *
               C89926 * C1758 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C1757 -
           ((C13338 * C31761 + C89783 * C32078) * C26055 +
            (C13338 * C31593 + C89783 * C31594) * C26161 + C32082 * C26054 +
            C31844 * C26160 + C19542 * C26053 + C19298 * C26159) *
               C89926 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C186 * C106 + C89926 * C187) * C273 +
                 (C186 * C274 + C89926 * C633) * C89937) *
                    C89 +
                (C640 + C656) * C90 + C660 * C91) *
                   C89843 * C5149 -
               (C3253 * C91 + (C1567 + C1555) * C90 +
                ((C186 * C1053 + C89926 * C1543) * C89937 +
                 (C186 * C829 + C89926 * C939) * C273) *
                    C89) *
                   C89843 * C89879) *
                  C5151 +
              (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
                (C3254 + C3258) * C91) *
                   C89843 * C89879 -
               (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                   C89843 * C5149) *
                  C5152 +
              ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) *
                   C89843 * C5149 -
               (((C186 * C2857 + C89926 * C3251) * C89937 +
                 (C186 * C2695 + C89926 * C2775) * C273) *
                    C91 +
                (C3258 + C3254) * C90 + C3253 * C89) *
                   C89843 * C89879) *
                  C5153) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C186 * C106 + C89926 * C187) * C273 +
                (C186 * C274 + C89926 * C633) * C89937) *
                   C89 +
               (C640 + C656) * C90 + C660 * C91) *
                  C89843 * C5796 -
              (C3253 * C91 + (C1567 + C1555) * C90 +
               ((C186 * C1053 + C89926 * C1543) * C89937 +
                (C186 * C829 + C89926 * C939) * C273) *
                   C89) *
                  C89843 * C5797 +
              (((C186 * C830 + C89926 * C940) * C273 +
                (C186 * C1054 + C89926 * C1544) * C89937) *
                   C89 +
               (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                  C89843 * C5798 -
              (((C186 * C5919 + C89926 * C6190) * C89937 +
                (C186 * C5801 + C89926 * C5863) * C273) *
                   C91 +
               ((C186 * C5920 + C89926 * C6191) * C89937 +
                (C186 * C5802 + C89926 * C5864) * C273) *
                   C90 +
               ((C186 * C5921 + C89926 * C6192) * C89937 +
                (C186 * C5803 + C89926 * C5865) * C273) *
                   C89) *
                  C89843 * C5799) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C1757 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C1758 +
           (((C186 * C1763 + C89926 * C1873) * C273 +
             (C186 * C1987 + C89926 * C2477) * C89937) *
                C89 +
            (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
               C1759) *
              C5149 +
          ((((C186 * C4159 + C89926 * C4275) * C273 +
             (C186 * C4393 + C89926 * C4943) * C89937) *
                C89 +
            (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
               C1758 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C1757 -
           (((C186 * C6489 + C89926 * C6880) * C89937 +
             (C186 * C6323 + C89926 * C6409) * C273) *
                C91 +
            ((C186 * C6490 + C89926 * C6881) * C89937 +
             (C186 * C6324 + C89926 * C6410) * C273) *
                C90 +
            ((C186 * C6491 + C89926 * C6882) * C89937 +
             (C186 * C6325 + C89926 * C6411) * C273) *
                C89) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89843 * C5149 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C273 +
            (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 + C13335 * C1545 +
             C13403 * C5920 + C13336 * C6191) *
                C89937) *
               C89783 * C89843 * C89879 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C89843 * C5149 -
           ((C13403 * C5919 + C13336 * C6190 + C13402 * C1056 + C13335 * C1546 +
             C13401 * C1051 + C13334 * C1541) *
                C89937 +
            (C13403 * C5801 + C13336 * C5863 + C13402 * C832 + C13335 * C942 +
             C13401 * C827 + C13334 * C937) *
                C273) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C273 +
           (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
            C13403 * C1054 + C13336 * C1544) *
               C89937) *
              C89783 * C89843 * C5796 -
          ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
            C13401 * C1053 + C13334 * C1543) *
               C89937 +
           (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
            C13401 * C829 + C13334 * C939) *
               C273) *
              C89783 * C89843 * C5797 +
          ((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
            C13403 * C13843 + C13336 * C13963) *
               C273 +
           (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
            C13403 * C14041 + C13336 * C14553) *
               C89937) *
              C89783 * C89843 * C5798 -
          ((C13403 * C18615 + C13336 * C18898 + C13402 * C14041 +
            C13335 * C14553 + C13401 * C5921 + C13334 * C6192) *
               C89937 +
           (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
            C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
               C273) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C1757 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C1758 +
           ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
             C13403 * C14727 + C13336 * C14819) *
                C273 +
            (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
             C13403 * C14897 + C13336 * C15291) *
                C89937) *
               C89783 * C1759) *
              C5149 +
          (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 + C13335 * C8678 +
             C13403 * C16849 + C13336 * C16979) *
                C273 +
            (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 + C13335 * C9149 +
             C13403 * C17081 + C13336 * C17668) *
                C89937) *
               C89783 * C1758 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C1757 -
           ((C13403 * C19196 + C13336 * C19619 + C13402 * C14897 +
             C13335 * C15291 + C13401 * C6491 + C13334 * C6882) *
                C89937 +
            (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
             C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                C273) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C89843 * C5149 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C89843 * C89879) *
              C5151 +
          ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
            C29644 * C26161 + C30293 * C26055) *
               C89783 * C89843 * C89879 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C89843 * C5149) *
              C5152 +
          ((C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
            C1909 * C26161 + C2498 * C26055) *
               C89783 * C89843 * C5149 -
           ((C186 * C6489 + C89926 * C6880) * C26055 +
            (C186 * C6323 + C89926 * C6409) * C26161 + C4955 * C26054 +
            C4294 * C26160 + C1562 * C26053 + C971 * C26159) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C186 * C106 + C89926 * C187) * C26159 +
           (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
           C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
              C89783 * C89843 * C5796 -
          (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
           C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
           (C186 * C829 + C89926 * C939) * C26159) *
              C89783 * C89843 * C5797 +
          ((C186 * C830 + C89926 * C940) * C26159 +
           (C186 * C1054 + C89926 * C1544) * C26053 +
           (C186 * C8592 + C89926 * C8678) * C26160 +
           (C186 * C8758 + C89926 * C9149) * C26054 +
           (C186 * C14727 + C89926 * C14819) * C26161 +
           (C186 * C14897 + C89926 * C15291) * C26055) *
              C89783 * C89843 * C5798 -
          ((C186 * C19196 + C89926 * C19619) * C26055 +
           (C186 * C19030 + C89926 * C19120) * C26161 +
           (C186 * C17081 + C89926 * C17668) * C26054 +
           (C186 * C16849 + C89926 * C16979) * C26160 +
           (C186 * C5921 + C89926 * C6192) * C26053 +
           (C186 * C5803 + C89926 * C5865) * C26159) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C1757 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C1758 +
           (C27371 * C26159 + C27950 * C26053 + C27374 * C26160 +
            C27951 * C26054 + (C186 * C27231 + C89926 * C27344) * C26161 +
            (C186 * C27460 + C89926 * C27938) * C26055) *
               C89783 * C1759) *
              C5149 +
          ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
            C30292 * C26054 + C31684 * C26161 + C32160 * C26055) *
               C89783 * C1758 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C1757 -
           ((C186 * C31761 + C89926 * C32156) * C26055 +
            (C186 * C31593 + C89926 * C31676) * C26161 + C32160 * C26054 +
            C31684 * C26160 + C30292 * C26053 + C29642 * C26159) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
                C745 * C90 + C746 * C91) *
                   C89843 * C5149 -
               (C1680 * C91 + C1681 * C90 +
                (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                   C89843 * C89879) *
                  C5151 +
              ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C89879 -
               (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C5149) *
                  C5152 +
              ((C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C5149 -
               ((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C89926 * C91 +
                C3340 * C90 + C1680 * C89) *
                   C89843 * C89879) *
                  C5153) +
         0.5 * std::pow(Pi, 2.5) *
             (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
               C745 * C90 + C746 * C91) *
                  C89843 * C5796 -
              (C1680 * C91 + C1681 * C90 +
               (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                  C89843 * C5797 +
              ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
               C1682 * C90 + C1683 * C91) *
                  C89843 * C5798 -
              ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C89926 * C91 +
               (C711 * C5802 + C6248 + C6248 + C89937 * C6244) * C89926 * C90 +
               (C711 * C5803 + C6249 + C6249 + C89937 * C6245) * C89926 * C89) *
                  C89843 * C5799) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C1757 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C1759) *
              C5149 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C1758 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C1757 -
           ((C711 * C6323 + C6961 + C6961 + C89937 * C6957) * C89926 * C91 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C89926 * C90 +
            (C711 * C6325 + C6963 + C6963 + C89937 * C6959) * C89926 * C89) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C5149 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C89879) *
              C5151 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C89879 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C5149) *
              C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
               C5149 -
           ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C13336 +
            C1679 * C13335 + C1676 * C13334) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           C14650 * C13335 + C14651 * C13336) *
              C89783 * C89843 * C5796 -
          (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
              C89843 * C5797 +
          (C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
              C89843 * C5798 -
          ((C711 * C18503 + C18953 + C18953 + C89937 * C18949) * C13336 +
           C18956 * C13335 + C14652 * C13334) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C1757 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            C19705 * C13335 + C19706 * C13336) *
               C89783 * C1759) *
              C5149 +
          ((C17786 * C13334 + C17785 * C13335 +
            (C711 * C16849 + C17775 + C17775 + C89937 * C17768) * C13336) *
               C89783 * C1758 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C1757 -
           ((C711 * C19030 + C19700 + C19700 + C89937 * C19694) * C13336 +
            C19706 * C13335 + C19705 * C13334) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89843 * C5149 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C89843 * C89879) *
              C5151 +
          ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
            C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
            C27154 + C26055 * C6958) *
               C89926 * C89783 * C89843 * C89879 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C89843 * C5149) *
              C5152 +
          ((C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
            C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 +
            C26474 + C26055 * C2581) *
               C89926 * C89783 * C89843 * C5149 -
           (C26464 * C6323 + C28708 + C28708 + C26055 * C6957 + C26463 * C4161 +
            C28709 + C28709 + C26054 * C5057 + C26462 * C827 + C28710 + C28710 +
            C26053 * C1643) *
               C89926 * C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
           C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 + C26468 +
           C26055 * C2579) *
              C89926 * C89783 * C89843 * C5796 -
          (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
           C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
           C26053 * C1645) *
              C89926 * C89783 * C89843 * C5797 +
          (C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
           C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
           C27151 + C26055 * C15367) *
              C89926 * C89783 * C89843 * C5798 -
          (C26464 * C19030 + C31517 + C31517 + C26055 * C19694 +
           C26463 * C16849 + C31518 + C31518 + C26054 * C17768 +
           C26462 * C5803 + C31519 + C31519 + C26053 * C6245) *
              C89926 * C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C1757 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C1758 +
           (C26462 * C1763 + C28032 + C28032 + C26053 * C2579 +
            C26463 * C10620 + C28033 + C28033 + C26054 * C11062 +
            C26464 * C27231 + C28034 + C28034 + C26055 * C28026) *
               C89926 * C89783 * C1759) *
              C5149 +
          ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 + C26463 * C6325 +
            C30394 + C30394 + C26054 * C6959 + C26464 * C23356 + C30395 +
            C30395 + C26055 * C23786) *
               C89926 * C89783 * C1758 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C1757 -
           (C26464 * C31593 + C32236 + C32236 + C26055 * C32234 +
            C26463 * C23356 + C32237 + C32237 + C26054 * C23786 +
            C26462 * C6325 + C32238 + C32238 + C26053 * C6959) *
               C89926 * C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                 C13334 +
             C13884 * C13335 + C13885 * C13336) *
                C89999 -
            (C16878 * C13336 + C16879 * C13335 +
             (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                 C13334) *
                C89907) *
               C5149 +
           ((C16879 * C13334 + C16878 * C13335 +
             (C13337 * C16849 + C16860 + C16860 + C89783 * C16853) * C89937 *
                 C13336) *
                C89907 -
            (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89999) *
               C89879) *
              C89990 +
          ((((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                 C13334 +
             C16880 * C13335 + C16881 * C13336) *
                C89907 -
            (C13888 * C13336 + C13887 * C13335 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                 C13334) *
                C89999) *
               C5149 +
           ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89999 -
            ((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C89937 *
                 C13336 +
             C16881 * C13335 + C16880 * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
             C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                C89937 * C89926 * C89999 -
            (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
             C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
                C89937 * C89926 * C89907) *
               C5149 +
           ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
             C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
                C89937 * C89926 * C89907 -
            (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
             C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                C89937 * C89926 * C89999) *
               C89879) *
              C89990 +
          (((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
             C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
                C89937 * C89926 * C89907 -
            (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
             C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                C89937 * C89926 * C89999) *
               C5149 +
           ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
             C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                C89937 * C89926 * C89999 -
            (C104 * C4162 + C4175 + C4175 + C91 * C4170 + C102 * C4161 + C4176 +
             C4176 + C90 * C4169 + C100 * C4160 + C4177 + C4177 + C89 * C4168) *
                C89937 * C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
             C27265 * C26054 + C27266 * C26055) *
                C89926 * C89999 -
            (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
                C89907) *
               C5149 +
           ((C16875 * C26053 + C19043 * C26054 + C31602 * C26055) * C89926 *
                C89907 -
            (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
                C89999) *
               C89879) *
              C89990 +
          (((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
                C89907 -
            (C27269 * C26055 + C27268 * C26054 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
                C89926 * C89999) *
               C5149 +
           ((C13881 * C26053 + C16876 * C26054 + C29525 * C26055) * C89926 *
                C89999 -
            ((C13337 * C29516 + C29522 + C29522 + C89783 * C29518) * C26055 +
             C29525 * C26054 + C16876 * C26053) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C13338 +
             (C13401 * C112 + C13334 * C193 + C13402 * C837 + C13335 * C947 +
              C13403 * C838 + C13336 * C948) *
                 C89783) *
                C89937 * C89999 -
            ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
              C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                 C89783 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C13338) *
                C89937 * C89907) *
               C5149 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C13338 +
             (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
              C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                 C89783) *
                C89937 * C89907 -
            ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 + C13335 * C948 +
              C13401 * C837 + C13334 * C947) *
                 C89783 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C13338) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C13338 +
             (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
              C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                 C89783) *
                C89937 * C89907 -
            ((C13403 * C839 + C13336 * C949 + C13402 * C836 + C13335 * C946 +
              C13401 * C113 + C13334 * C194) *
                 C89783 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C13338) *
                C89937 * C89999) *
               C5149 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C13338 +
             (C13401 * C836 + C13334 * C946 + C13402 * C839 + C13335 * C949 +
              C13403 * C5805 + C13336 * C5867) *
                 C89783) *
                C89937 * C89999 -
            ((C13403 * C16852 + C13336 * C16982 + C13402 * C8594 +
              C13335 * C8680 + C13401 * C4164 + C13334 * C4280) *
                 C89783 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C13338) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C101 +
             (C186 * C112 + C89926 * C193) * C89 + C216 * C103 + C217 * C90 +
             C218 * C105 + C219 * C91) *
                C89937 * C89999 -
            (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
             (C186 * C1770 + C89926 * C1880) * C89 +
             (C186 * C1762 + C89926 * C1872) * C101) *
                C89937 * C89907) *
               C5149 +
           (((C186 * C4159 + C89926 * C4275) * C101 +
             (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
             C4293 * C90 + C4294 * C105 + C4295 * C91) *
                C89937 * C89907 -
            (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
             (C186 * C837 + C89926 * C947) * C89 +
             (C186 * C829 + C89926 * C939) * C101) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          (((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
             C3503 * C105 + C3504 * C91) *
                C89937 * C89907 -
            (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 + C217 * C89 +
             C216 * C101) *
                C89937 * C89999) *
               C5149 +
           ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
             C2782 * C105 + C2783 * C91) *
                C89937 * C89999 -
            ((C186 * C4166 + C89926 * C4282) * C91 +
             (C186 * C4162 + C89926 * C4278) * C105 + C4295 * C90 +
             C4294 * C103 + C4293 * C89 + C4292 * C101) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C13338 +
              (C186 * C112 + C89926 * C193) * C89783) *
                 C26053 +
             (C27378 + C27379) * C26054 + C27386 * C26055) *
                C89999 -
            ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
             (C27379 + C27378) * C26053) *
                C89907) *
               C5149 +
           (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
             (C31686 + C31687) * C26055) *
                C89907 -
            (C31683 * C26055 + (C29647 + C29646) * C26054 +
             ((C186 * C837 + C89926 * C947) * C89783 +
              (C186 * C829 + C89926 * C939) * C13338) *
                 C26053) *
                C89999) *
               C89879) *
              C89990 +
          ((((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
             (C27384 + C27385) * C26055) *
                C89907 -
            (C27377 * C26055 + (C27362 + C27361) * C26054 +
             (C217 * C89783 + C216 * C13338) * C26053) *
                C89999) *
               C5149 +
           (((C973 * C13338 + C972 * C89783) * C26053 +
             (C29634 + C29635) * C26054 + (C29650 + C29651) * C26055) *
                C89999 -
            (((C186 * C29517 + C89926 * C29624) * C89783 +
              (C186 * C29516 + C89926 * C29623) * C13338) *
                 C26055 +
             (C29651 + C29650) * C26054 + (C29635 + C29634) * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C13338 +
              (C273 * C112 + C89937 * C280) * C89783) *
                 C13334 +
             (C14075 + C14076) * C13335 + C14083 * C13336) *
                C89999 -
            ((C17106 + C17107) * C13336 + (C17108 + C17109) * C13335 +
             ((C273 * C1770 + C89937 * C1994) * C89783 +
              (C273 * C1762 + C89937 * C1986) * C13338) *
                 C13334) *
                C89907) *
               C5149 +
           (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
             ((C273 * C16849 + C89937 * C17081) * C13338 +
              (C273 * C16851 + C89937 * C17083) * C89783) *
                 C13336) *
                C89907 -
            (C18618 * C13336 + (C14078 + C14077) * C13335 +
             (C14076 + C14075) * C13334) *
                C89999) *
               C89879) *
              C89990 +
          ((((C2020 * C13338 + C2019 * C89783) * C13334 +
             (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                C89907 -
            (C14074 * C13336 + (C14059 + C14058) * C13335 +
             (C304 * C89783 + C303 * C13338) * C13334) *
                C89999) *
               C5149 +
           (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
             (C14081 + C14082) * C13336) *
                C89999 -
            (((C273 * C16852 + C89937 * C17084) * C89783 +
              (C273 * C16850 + C89937 * C17082) * C13338) *
                 C13336 +
             (C17111 + C17110) * C13335 + (C17095 + C17094) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C101 +
             (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
             C305 * C105 + C306 * C91) *
                C89926 * C89999 -
            (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
             (C273 * C1770 + C89937 * C1994) * C89 +
             (C273 * C1762 + C89937 * C1986) * C101) *
                C89926 * C89907) *
               C5149 +
           (((C273 * C4159 + C89937 * C4393) * C101 +
             (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
             C4411 * C90 + C4412 * C105 + C4413 * C91) *
                C89926 * C89907 -
            (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
             (C273 * C837 + C89937 * C1061) * C89 +
             (C273 * C829 + C89937 * C1053) * C101) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          (((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
             C3585 * C105 + C3586 * C91) *
                C89926 * C89907 -
            (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 + C304 * C89 +
             C303 * C101) *
                C89926 * C89999) *
               C5149 +
           ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
             C2864 * C105 + C2865 * C91) *
                C89926 * C89999 -
            ((C273 * C4166 + C89937 * C4400) * C91 +
             (C273 * C4162 + C89937 * C4396) * C105 + C4413 * C90 +
             C4412 * C103 + C4411 * C89 + C4410 * C101) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
              C26161 * C1763 + C26055 * C1987) *
                 C13338 +
             (C26159 * C112 + C26053 * C280 + C26160 * C1770 + C26054 * C1994 +
              C26161 * C1771 + C26055 * C1995) *
                 C89783) *
                C89926 * C89999 -
            ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
              C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                 C89783 +
             (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
              C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                 C13338) *
                C89926 * C89907) *
               C5149 +
           (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
              C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                 C13338 +
             (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
              C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                 C89783) *
                C89926 * C89907 -
            ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
              C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                 C89783 +
             (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
              C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                 C13338) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          ((((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
              C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                 C13338 +
             (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 +
              C26054 * C1996 + C26161 * C10622 + C26055 * C10740) *
                 C89783) *
                C89926 * C89907 -
            ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
              C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                 C89783 +
             (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
              C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                 C13338) *
                C89926 * C89999) *
               C5149 +
           (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
              C26161 * C6324 + C26055 * C6490) *
                 C13338 +
             (C26159 * C836 + C26053 * C1060 + C26160 * C4164 + C26054 * C4398 +
              C26161 * C6327 + C26055 * C6493) *
                 C89783) *
                C89926 * C89999 -
            ((C26161 * C29517 + C26055 * C29750 + C26160 * C6327 +
              C26054 * C6493 + C26159 * C4164 + C26053 * C4398) *
                 C89783 +
             (C26161 * C29516 + C26055 * C29749 + C26160 * C6324 +
              C26054 * C6490 + C26159 * C4160 + C26053 * C4394) *
                 C13338) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C13401 +
             (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
             C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
                C89937 * C89999 -
            (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
             C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
             (C13338 * C1762 + C89783 * C1770) * C13401) *
                C89937 * C89907) *
               C5149 +
           ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
             C17228 * C13335 + (C13338 * C16849 + C89783 * C16851) * C13403 +
             (C13338 * C16979 + C89783 * C17209) * C13336) *
                C89937 * C89907 -
            (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
             C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          ((((C13338 * C1761 + C89783 * C1769) * C13401 +
             (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
             C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
                C89937 * C89907 -
            (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
             C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
             (C13338 * C107 + C89783 * C113) * C13401) *
                C89937 * C89999) *
               C5149 +
           ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
             C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
                C89937 * C89999 -
            ((C13338 * C16980 + C89783 * C17210) * C13336 +
             (C13338 * C16850 + C89783 * C16852) * C13403 + C17235 * C13335 +
             C17234 * C13402 + C17233 * C13334 + C17232 * C13401) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C186 +
             (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
              C105 * C189 + C91 * C362) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
              C101 * C1872 + C89 * C2100) *
                 C89926 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C186) *
                C89937 * C89907) *
               C5149 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C186 +
             (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
              C105 * C4277 + C91 * C4513) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
              C101 * C939 + C89 * C1167) *
                 C89926 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C186) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C186 +
             (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
              C105 * C1876 + C91 * C2104) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
              C101 * C188 + C89 * C361) *
                 C89926 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C186) *
                C89937 * C89999) *
               C5149 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C186 +
             (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
              C105 * C943 + C91 * C1171) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C4278 + C91 * C4514 + C103 * C4277 + C90 * C4513 +
              C101 * C4276 + C89 * C4512) *
                 C89926 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C186) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C186 +
              (C13338 * C187 + C89783 * C360) * C89926) *
                 C26053 +
             (C27577 + C27578) * C26054 + C27589 * C26055) *
                C89999 -
            ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
             (C27578 + C27577) * C26053) *
                C89907) *
               C5149 +
           (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
             (C31846 + C31847) * C26055) *
                C89907 -
            (C31843 * C26055 + (C29852 + C29851) * C26054 +
             (C14185 * C89926 + C14184 * C186) * C26053) *
                C89999) *
               C89879) *
              C89990 +
          ((((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
             (C27587 + C27588) * C26055) *
                C89907 -
            (C27590 * C26055 + (C27584 + C27583) * C26054 +
             ((C13338 * C188 + C89783 * C361) * C89926 +
              (C13338 * C107 + C89783 * C113) * C186) *
                 C26053) *
                C89999) *
               C5149 +
           (((C14190 * C186 + C14191 * C89926) * C26053 +
             (C29855 + C29856) * C26054 + (C29863 + C29864) * C26055) *
                C89999 -
            (((C13338 * C29623 + C89783 * C29849) * C89926 +
              (C13338 * C29516 + C89783 * C29517) * C186) *
                 C26055 +
             (C29864 + C29863) * C26054 + (C29856 + C29855) * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
             C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 +
             C13560 + C13336 * C1250) *
                C89783 * C89937 * C89999 -
            (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
             C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
             C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                C89783 * C89937 * C89907) *
               C5149 +
           ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
             C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
             C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                C89783 * C89937 * C89907 -
            (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
             C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 +
             C14274 + C13334 * C1249) *
                C89783 * C89937 * C89999) *
               C89879) *
              C89990 +
          (((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 +
             C13555 * C4160 + C15061 + C15061 + C13335 * C4614 +
             C13556 * C8591 + C15062 + C15062 + C13336 * C8914) *
                C89783 * C89937 * C89907 -
            (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
             C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 +
             C13563 + C13334 * C418) *
                C89783 * C89937 * C89999) *
               C5149 +
           ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
             C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
             C14280 + C13336 * C6029) *
                C89783 * C89937 * C89999 -
            (C13556 * C16850 + C17339 + C17339 + C13336 * C17334 +
             C13555 * C8591 + C17340 + C17340 + C13335 * C8914 +
             C13554 * C4160 + C17341 + C17341 + C13334 * C4614) *
                C89783 * C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
             C447 * C91) *
                C89937 * C89999 -
            (C2213 * C91 + C2214 * C90 +
             (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                C89937 * C89907) *
               C5149 +
           (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
             C4630 * C90 + C4631 * C91) *
                C89937 * C89907 -
            (C1280 * C91 + C1281 * C90 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          (((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
            (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89999) *
               C5149 +
           ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89999 -
            ((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C91 +
             C4631 * C90 + C4630 * C89) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
             C27691 * C26054 + C27692 * C26055) *
                C89999 -
            (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
               C5149 +
           ((C29982 * C26053 + C29983 * C26054 + C31929 * C26055) * C89907 -
            (C29983 * C26055 + C29982 * C26054 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
                C89999) *
               C89879) *
              C89990 +
          (((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C89907 -
            (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
                C89999) *
               C5149 +
           ((C1281 * C89783 * C26053 + C29969 * C26054 + C29984 * C26055) *
                C89999 -
            ((C416 * C29516 + C29972 + C29972 + C89926 * C29962) * C89783 *
                 C26055 +
             C29984 * C26054 + C29969 * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C13401 +
             (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
             C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
                C89783 * C89999 -
            (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
             C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
             (C273 * C1762 + C89937 * C1986) * C13401) *
                C89783 * C89907) *
               C5149 +
           ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
             C17448 * C13335 + (C273 * C16849 + C89937 * C17081) * C13403 +
             (C273 * C16979 + C89937 * C17439) * C13336) *
                C89783 * C89907 -
            (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
             C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          (((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
             C17104 * C13403 + C17450 * C13336) *
                C89783 * C89907 -
            (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
             C518 * C13334 + C303 * C13401) *
                C89783 * C89999) *
               C5149 +
           ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
             C14072 * C13403 + C14371 * C13336) *
                C89783 * C89999 -
            ((C273 * C16980 + C89937 * C17440) * C13336 +
             (C273 * C16850 + C89937 * C17082) * C13403 + C17450 * C13335 +
             C17104 * C13402 + C4740 * C13334 + C4410 * C13401) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C186 +
              (C273 * C187 + C89937 * C499) * C89926) *
                 C89 +
             (C506 + C522) * C90 + C526 * C91) *
                C89999 -
            (C3818 * C91 + (C2316 + C2304) * C90 +
             ((C273 * C1872 + C89937 * C2292) * C89926 +
              (C273 * C1762 + C89937 * C1986) * C186) *
                 C89) *
                C89907) *
               C5149 +
           ((((C273 * C4159 + C89937 * C4393) * C186 +
              (C273 * C4275 + C89937 * C4729) * C89926) *
                 C89 +
             (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
                C89907 -
            (C3097 * C91 + (C1383 + C1371) * C90 +
             ((C273 * C939 + C89937 * C1359) * C89926 +
              (C273 * C829 + C89937 * C1053) * C186) *
                 C89) *
                C89999) *
               C89879) *
              C89990 +
          ((((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
             (C3819 + C3823) * C91) *
                C89907 -
            (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89999) *
               C5149 +
           (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
             (C3098 + C3102) * C91) *
                C89999 -
            (((C273 * C4278 + C89937 * C4732) * C89926 +
              (C273 * C4162 + C89937 * C4396) * C186) *
                 C91 +
             (C4743 + C4737) * C90 + (C4742 + C4734) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
              C26161 * C1763 + C26055 * C1987) *
                 C186 +
             (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
              C26161 * C1873 + C26055 * C2293) *
                 C89926) *
                C89783 * C89999 -
            ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
              C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                 C89926 +
             (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
              C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                 C186) *
                C89783 * C89907) *
               C5149 +
           (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
              C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                 C186 +
             (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 +
              C26054 * C6728 + C26161 * C23415 + C26055 * C23630) *
                 C89926) *
                C89783 * C89907 -
            ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 +
              C26054 * C4729 + C26159 * C939 + C26053 * C1359) *
                 C89926 +
             (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
              C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                 C186) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          ((((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
              C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                 C186 +
             (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 +
              C26054 * C2294 + C26161 * C10681 + C26055 * C10902) *
                 C89926) *
                C89783 * C89907 -
            ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 +
              C26054 * C2291 + C26159 * C188 + C26053 * C500) *
                 C89926 +
             (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
              C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                 C186) *
                C89783 * C89999) *
               C5149 +
           (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
              C26161 * C6324 + C26055 * C6490) *
                 C186 +
             (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
              C26161 * C6410 + C26055 * C6727) *
                 C89926) *
                C89783 * C89999 -
            ((C26161 * C29623 + C26055 * C30082 + C26160 * C6410 +
              C26054 * C6727 + C26159 * C4276 + C26053 * C4730) *
                 C89926 +
             (C26161 * C29516 + C26055 * C29749 + C26160 * C6324 +
              C26054 * C6490 + C26159 * C4160 + C26053 * C4394) *
                 C186) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C273 +
              (C13338 * C274 + C89783 * C577) * C89937) *
                 C13334 +
             (C14448 + C14472) * C13335 + C14478 * C13336) *
                C89999 -
            ((C17567 + C17553) * C13336 + (C17568 + C17556) * C13335 +
             ((C13338 * C1986 + C89783 * C2394) * C89937 +
              (C13338 * C1762 + C89783 * C1770) * C273) *
                 C13334) *
                C89907) *
               C5149 +
           (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
             ((C13338 * C16849 + C89783 * C16851) * C273 +
              (C13338 * C17081 + C89783 * C17548) * C89937) *
                 C13336) *
                C89907 -
            (C18843 * C13336 + (C14473 + C14451) * C13335 +
             (C14472 + C14448) * C13334) *
                C89999) *
               C89879) *
              C89990 +
          (((((C13338 * C1761 + C89783 * C1769) * C273 +
              (C13338 * C1985 + C89783 * C2393) * C89937) *
                 C13334 +
             (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                C89907 -
            (C14479 * C13336 + (C14475 + C14457) * C13335 +
             ((C13338 * C275 + C89783 * C578) * C89937 +
              (C13338 * C107 + C89783 * C113) * C273) *
                 C13334) *
                C89999) *
               C5149 +
           (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
             (C14463 + C14477) * C13336) *
                C89999 -
            (((C13338 * C17082 + C89783 * C17549) * C89937 +
              (C13338 * C16850 + C89783 * C16852) * C273) *
                 C13336 +
             (C17570 + C17560) * C13335 + (C17569 + C17557) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C273 +
             (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
              C105 * C276 + C91 * C579) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
              C101 * C1986 + C89 * C2394) *
                 C89937 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C273) *
                C89926 * C89907) *
               C5149 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C273 +
             (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
              C105 * C4395 + C91 * C4843) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
              C101 * C1053 + C89 * C1461) *
                 C89937 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C273) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C273 +
             (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
              C105 * C1990 + C91 * C2398) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
              C101 * C275 + C89 * C578) *
                 C89937 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C273) *
                C89926 * C89999) *
               C5149 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C273 +
             (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
              C105 * C1057 + C91 * C1465) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C4396 + C91 * C4844 + C103 * C4395 + C90 * C4843 +
              C101 * C4394 + C89 * C4842) *
                 C89937 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C273) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C26159 +
             (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
             C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
                C89926 * C89999 -
            (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
             C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
                C89926 * C89907) *
               C5149 +
           ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
             C19542 * C26054 + C31844 * C26161 + C32082 * C26055) *
                C89926 * C89907 -
            (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
             C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          (((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
             C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
                C89926 * C89907 -
            (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
             C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
             (C13338 * C107 + C89783 * C113) * C26159) *
                C89926 * C89999) *
               C5149 +
           ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
             C17565 * C26054 + C29861 * C26161 + C30185 * C26055) *
                C89926 * C89999 -
            ((C13338 * C29749 + C89783 * C30181) * C26055 +
             (C13338 * C29516 + C89783 * C29517) * C26161 + C30185 * C26054 +
             C29861 * C26160 + C17565 * C26053 + C17232 * C26159) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C273 +
             (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
              C13403 * C1054 + C13336 * C1544) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
              C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                 C89937 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C273) *
                C89783 * C89907) *
               C5149 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C273 +
             (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
              C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
              C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                 C89937 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C273) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C273 +
             (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 +
              C13335 * C4944 + C13403 * C8757 + C13336 * C9148) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
              C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                 C89937 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C273) *
                C89783 * C89999) *
               C5149 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C273 +
             (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
              C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C17082 + C13336 * C17669 + C13402 * C8757 +
              C13335 * C9148 + C13401 * C4394 + C13334 * C4944) *
                 C89937 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C273) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C273 +
              (C186 * C274 + C89926 * C633) * C89937) *
                 C89 +
             (C640 + C656) * C90 + C660 * C91) *
                C89999 -
            (C3974 * C91 + (C2500 + C2488) * C90 +
             ((C186 * C1986 + C89926 * C2476) * C89937 +
              (C186 * C1762 + C89926 * C1872) * C273) *
                 C89) *
                C89907) *
               C5149 +
           ((((C186 * C4159 + C89926 * C4275) * C273 +
              (C186 * C4393 + C89926 * C4943) * C89937) *
                 C89 +
             (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                C89907 -
            (C3253 * C91 + (C1567 + C1555) * C90 +
             ((C186 * C1053 + C89926 * C1543) * C89937 +
              (C186 * C829 + C89926 * C939) * C273) *
                 C89) *
                C89999) *
               C89879) *
              C89990 +
          ((((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
             (C3975 + C3979) * C91) *
                C89907 -
            (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89999) *
               C5149 +
           (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
             (C3254 + C3258) * C91) *
                C89999 -
            (((C186 * C4396 + C89926 * C4946) * C89937 +
              (C186 * C4162 + C89926 * C4278) * C273) *
                 C91 +
             (C4957 + C4951) * C90 + (C4956 + C4948) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C26159 +
             (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
             C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
                C89783 * C89999 -
            (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
             C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
                C89783 * C89907) *
               C5149 +
           ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
             C30292 * C26054 + C31684 * C26161 + C32160 * C26055) *
                C89783 * C89907 -
            (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
             C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
             (C186 * C829 + C89926 * C939) * C26159) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          (((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
             C27375 * C26161 + C27952 * C26055) *
                C89783 * C89907 -
            (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
             C652 * C26053 + C216 * C26159) *
                C89783 * C89999) *
               C5149 +
           ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
             C29644 * C26161 + C30293 * C26055) *
                C89783 * C89999 -
            ((C186 * C29749 + C89926 * C30283) * C26055 +
             (C186 * C29516 + C89926 * C29623) * C26161 + C30293 * C26054 +
             C29644 * C26160 + C4954 * C26053 + C4292 * C26159) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
             C14650 * C13335 + C14651 * C13336) *
                C89783 * C89999 -
            (C17785 * C13336 + C17786 * C13335 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
                C89783 * C89907) *
               C5149 +
           ((C17786 * C13334 + C17785 * C13335 +
             (C711 * C16849 + C17775 + C17775 + C89937 * C17768) * C13336) *
                C89783 * C89907 -
            (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
                C89999) *
               C89879) *
              C89990 +
          (((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
                C89907 -
            (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
                C89999) *
               C5149 +
           ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
                C89999 -
            ((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C13336 +
             C17787 * C13335 + C5072 * C13334) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
             C745 * C90 + C746 * C91) *
                C89999 -
            (C2613 * C91 + C2614 * C90 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
                C89907) *
               C5149 +
           (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
             C5074 * C90 + C5075 * C91) *
                C89907 -
            (C1680 * C91 + C1681 * C90 +
             (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                C89999) *
               C89879) *
              C89990 +
          (((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
            (C747 * C91 + C746 * C90 + C745 * C89) * C89999) *
               C5149 +
           ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89999 -
            ((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C89926 * C91 +
             C5075 * C90 + C5074 * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
             C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
             C26468 + C26055 * C2579) *
                C89926 * C89783 * C89999 -
            (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
             C26463 * C1763 + C28030 + C28030 + C26054 * C2579 +
             C26462 * C1762 + C28031 + C28031 + C26053 * C2578) *
                C89926 * C89783 * C89907) *
               C5149 +
           ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 +
             C26463 * C6325 + C30394 + C30394 + C26054 * C6959 +
             C26464 * C23356 + C30395 + C30395 + C26055 * C23786) *
                C89926 * C89783 * C89907 -
            (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 +
             C26463 * C4159 + C27147 + C27147 + C26054 * C5055 + C26462 * C829 +
             C27148 + C27148 + C26053 * C1645) *
                C89926 * C89783 * C89999) *
               C89879) *
              C89990 +
          (((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 +
             C26463 * C1764 + C28036 + C28036 + C26054 * C2580 +
             C26464 * C10619 + C28037 + C28037 + C26055 * C11061) *
                C89926 * C89783 * C89907 -
            (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 +
             C26463 * C1761 + C26470 + C26470 + C26054 * C2577 + C26462 * C107 +
             C26471 + C26471 + C26053 * C713) *
                C89926 * C89783 * C89999) *
               C5149 +
           ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
             C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
             C27154 + C26055 * C6958) *
                C89926 * C89783 * C89999 -
            (C26464 * C29516 + C30396 + C30396 + C26055 * C30391 +
             C26463 * C6324 + C30397 + C30397 + C26054 * C6958 +
             C26462 * C4160 + C30398 + C30398 + C26053 * C5056) *
                C89926 * C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C89843 * C5796 -
          (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
           C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
              C89937 * C89926 * C89843 * C5797 +
          (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
           C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
              C89937 * C89926 * C89843 * C5798 -
          (C104 * C5801 + C5811 + C5811 + C91 * C5807 + C102 * C5802 + C5812 +
           C5812 + C90 * C5808 + C100 * C5803 + C5813 + C5813 + C89 * C5809) *
              C89937 * C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C5149 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C89879) *
              C5151 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C89879 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C5149) *
              C5152 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C89843 * C5149 -
           (C104 * C2695 + C2699 + C2699 + C91 * C2697 + C102 * C833 + C2700 +
            C2700 + C90 * C849 + C100 * C827 + C2701 + C2701 + C89 * C843) *
               C89937 * C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C5149 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C89879) *
              C5151 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C89879 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C5149) *
              C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89843 * C5149 -
           ((C13337 * C5801 + C15450 + C15450 + C89783 * C5807) * C89937 *
                C13336 +
            C15458 * C13335 + C15457 * C13334) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           C13884 * C13335 + C13885 * C13336) *
              C89843 * C5796 -
          (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
              C5797 +
          (C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89843 *
              C5798 -
          ((C13337 * C18503 + C18509 + C18509 + C89783 * C18505) * C89937 *
               C13336 +
           C18513 * C13335 + C13886 * C13334) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C89843 * C5149 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C89843 * C89879) *
              C5151 +
          ((C13881 * C26053 + C16876 * C26054 + C29525 * C26055) * C89926 *
               C89843 * C89879 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
            C28794 * C26054 + C28795 * C26055) *
               C89926 * C89843 * C5149 -
           ((C13337 * C6323 + C28115 + C28115 + C89783 * C6329) * C26055 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C26054 +
            C15455 * C26053) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
           C27265 * C26054 + C27266 * C26055) *
              C89926 * C89843 * C5796 -
          (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
              C89843 * C5797 +
          (C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
              C89843 * C5798 -
          ((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C26055 +
           C21337 * C26054 + C13880 * C26053) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C89843 * C5796 -
                    (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                     (C186 * C837 + C89926 * C947) * C89 +
                     (C186 * C829 + C89926 * C939) * C101) *
                        C89937 * C89843 * C5797 +
                    ((C186 * C830 + C89926 * C940) * C101 +
                     (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                     C975 * C90 + C976 * C105 + C977 * C91) *
                        C89937 * C89843 * C5798 -
                    ((C186 * C5804 + C89926 * C5866) * C91 +
                     (C186 * C5801 + C89926 * C5863) * C105 +
                     (C186 * C5805 + C89926 * C5867) * C90 +
                     (C186 * C5802 + C89926 * C5864) * C103 +
                     (C186 * C5806 + C89926 * C5868) * C89 +
                     (C186 * C5803 + C89926 * C5865) * C101) *
                        C89937 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C5149 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C89879) *
                        C5151 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      C2782 * C105 + C2783 * C91) *
                         C89937 * C89843 * C89879 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C5149) *
                        C5152 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C89843 * C5149 -
                     ((C186 * C2696 + C89926 * C2776) * C91 +
                      (C186 * C2695 + C89926 * C2775) * C105 + C2783 * C90 +
                      C2782 * C103 + C970 * C89 + C971 * C101) *
                         C89937 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5151 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C89879 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C5149) *
                        C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5804 + C13336 * C5866 + C13402 * C840 +
                       C13335 * C950 + C13401 * C835 + C13334 * C945) *
                          C89783 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C89843 * C5796 -
                    ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                      C13335 * C948 + C13401 * C837 + C13334 * C947) *
                         C89783 +
                     (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                      C13335 * C940 + C13401 * C829 + C13334 * C939) *
                         C13338) *
                        C89937 * C89843 * C5797 +
                    ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                      C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                         C13338 +
                     (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                      C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                         C89783) *
                        C89937 * C89843 * C5798 -
                    ((C13403 * C18504 + C13336 * C18564 + C13402 * C13845 +
                      C13335 * C13965 + C13401 * C5806 + C13334 * C5868) *
                         C89783 +
                     (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
                      C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
                         C13338) *
                        C89937 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C89843 * C5149 -
                     ((C29649 + C29648) * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C89843 * C89879) *
                        C5151 +
                    (((C973 * C13338 + C972 * C89783) * C26053 +
                      (C29634 + C29635) * C26054 + (C29650 + C29651) * C26055) *
                         C89843 * C89879 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C89843 * C5149) *
                        C5152 +
                    (((C218 * C13338 + C219 * C89783) * C26053 +
                      (C28870 + C28871) * C26054 + (C28872 + C28873) * C26055) *
                         C89843 * C5149 -
                     (((C186 * C6326 + C89926 * C6412) * C89783 +
                       (C186 * C6323 + C89926 * C6409) * C13338) *
                          C26055 +
                      (C4295 * C89783 + C4294 * C13338) * C26054 +
                      (C970 * C89783 + C971 * C13338) * C26053) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C13338 +
                      (C186 * C112 + C89926 * C193) * C89783) *
                         C26053 +
                     (C27378 + C27379) * C26054 + C27386 * C26055) *
                        C89843 * C5796 -
                    ((C29649 + C29648) * C26055 + (C29647 + C29646) * C26054 +
                     ((C186 * C837 + C89926 * C947) * C89783 +
                      (C186 * C829 + C89926 * C939) * C13338) *
                         C26053) *
                        C89843 * C5797 +
                    (((C186 * C830 + C89926 * C940) * C13338 +
                      (C186 * C838 + C89926 * C948) * C89783) *
                         C26053 +
                     ((C186 * C8592 + C89926 * C8678) * C13338 +
                      (C186 * C8595 + C89926 * C8681) * C89783) *
                         C26054 +
                     ((C186 * C14727 + C89926 * C14819) * C13338 +
                      (C186 * C14729 + C89926 * C14821) * C89783) *
                         C26055) *
                        C89843 * C5798 -
                    (((C186 * C19031 + C89926 * C19121) * C89783 +
                      (C186 * C19030 + C89926 * C19120) * C13338) *
                         C26055 +
                     ((C186 * C16851 + C89926 * C16981) * C89783 +
                      (C186 * C16849 + C89926 * C16979) * C13338) *
                         C26054 +
                     ((C186 * C5806 + C89926 * C5868) * C89783 +
                      (C186 * C5803 + C89926 * C5865) * C13338) *
                         C26053) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C89843 * C5796 -
                    (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                     (C273 * C837 + C89937 * C1061) * C89 +
                     (C273 * C829 + C89937 * C1053) * C101) *
                        C89926 * C89843 * C5797 +
                    ((C273 * C830 + C89937 * C1054) * C101 +
                     (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                     C1089 * C90 + C1090 * C105 + C1091 * C91) *
                        C89926 * C89843 * C5798 -
                    ((C273 * C5804 + C89937 * C5922) * C91 +
                     (C273 * C5801 + C89937 * C5919) * C105 +
                     (C273 * C5805 + C89937 * C5923) * C90 +
                     (C273 * C5802 + C89937 * C5920) * C103 +
                     (C273 * C5806 + C89937 * C5924) * C89 +
                     (C273 * C5803 + C89937 * C5921) * C101) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C5149 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      C2864 * C105 + C2865 * C91) *
                         C89926 * C89843 * C89879 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C89843 * C5149 -
                     ((C273 * C2696 + C89937 * C2858) * C91 +
                      (C273 * C2695 + C89937 * C2857) * C105 + C2865 * C90 +
                      C2864 * C103 + C1084 * C89 + C1085 * C101) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C5149 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C89879 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C5149) *
                        C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89843 * C5149 -
                     (((C273 * C5804 + C89937 * C5922) * C89783 +
                       (C273 * C5801 + C89937 * C5919) * C13338) *
                          C13336 +
                      (C15610 + C15609) * C13335 + (C15608 + C15607) * C13334) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     (C14075 + C14076) * C13335 + C14083 * C13336) *
                        C89843 * C5796 -
                    (C18618 * C13336 + (C14078 + C14077) * C13335 +
                     (C14076 + C14075) * C13334) *
                        C89843 * C5797 +
                    (C14083 * C13334 + (C14080 + C14079) * C13335 +
                     (C18625 + C18626) * C13336) *
                        C89843 * C5798 -
                    (((C273 * C18504 + C89937 * C18616) * C89783 +
                      (C273 * C18503 + C89937 * C18615) * C13338) *
                         C13336 +
                     (C18626 + C18625) * C13335 + C18618 * C13334) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C89843 * C5149 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 +
                       C26054 * C4394 + C26161 * C6324 + C26055 * C6490) *
                          C13338 +
                      (C26159 * C836 + C26053 * C1060 + C26160 * C4164 +
                       C26054 * C4398 + C26161 * C6327 + C26055 * C6493) *
                          C89783) *
                         C89926 * C89843 * C89879 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    (((C26159 * C108 + C26053 * C276 + C26160 * C1760 +
                       C26054 * C1984 + C26161 * C1765 + C26055 * C1989) *
                          C13338 +
                      (C26159 * C114 + C26053 * C282 + C26160 * C1768 +
                       C26054 * C1992 + C26161 * C1773 + C26055 * C1997) *
                          C89783) *
                         C89926 * C89843 * C5149 -
                     ((C26161 * C6326 + C26055 * C6492 + C26160 * C4165 +
                       C26054 * C4399 + C26159 * C835 + C26053 * C1059) *
                          C89783 +
                      (C26161 * C6323 + C26055 * C6489 + C26160 * C4161 +
                       C26054 * C4395 + C26159 * C827 + C26053 * C1051) *
                          C13338) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                      C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                         C13338 +
                     (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                      C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                         C89783) *
                        C89926 * C89843 * C5796 -
                    ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                      C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                         C89783 +
                     (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                      C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                         C13338) *
                        C89926 * C89843 * C5797 +
                    ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 +
                      C26054 * C8758 + C26161 * C14727 + C26055 * C14897) *
                         C13338 +
                     (C26159 * C838 + C26053 * C1062 + C26160 * C8595 +
                      C26054 * C8761 + C26161 * C14729 + C26055 * C14899) *
                         C89783) *
                        C89926 * C89843 * C5798 -
                    ((C26161 * C19031 + C26055 * C19197 + C26160 * C16851 +
                      C26054 * C17083 + C26159 * C5806 + C26053 * C5924) *
                         C89783 +
                     (C26161 * C19030 + C26055 * C19196 + C26160 * C16849 +
                      C26054 * C17081 + C26159 * C5803 + C26053 * C5921) *
                         C13338) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C89843 * C5796 -
          ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
            C101 * C939 + C89 * C1167) *
               C89926 +
           (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
            C89 * C837) *
               C186) *
              C89937 * C89843 * C5797 +
          ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
            C91 * C840) *
               C186 +
           (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
            C105 * C942 + C91 * C1170) *
               C89926) *
              C89937 * C89843 * C5798 -
          ((C105 * C5863 + C91 * C5975 + C103 * C5864 + C90 * C5976 +
            C101 * C5865 + C89 * C5977) *
               C89926 +
           (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
            C101 * C5803 + C89 * C5806) *
               C186) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C5149 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C89879) *
              C5151 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C89879 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C89843 * C5149 -
           ((C105 * C2775 + C91 * C2939 + C103 * C943 + C90 * C1171 +
             C101 * C937 + C89 * C1165) *
                C89926 +
            (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
             C101 * C827 + C89 * C835) *
                C186) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C5149 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C89879) *
              C5151 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C89879 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89843 * C5149 -
           ((C13338 * C5863 + C89783 * C5975) * C13336 +
            (C13338 * C5801 + C89783 * C5804) * C13403 + C15696 * C13335 +
            C15695 * C13402 + C15694 * C13334 + C15693 * C13401) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
           C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
              C89937 * C89843 * C5796 -
          (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
           C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
              C89937 * C89843 * C5797 +
          (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
           C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
              C89937 * C89843 * C5798 -
          ((C13338 * C18563 + C89783 * C18676) * C13336 +
           (C13338 * C18503 + C89783 * C18504) * C13403 + C18683 * C13335 +
           C18682 * C13402 + C14188 * C13334 + C14189 * C13401) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C89843 * C5149 -
           ((C29854 + C29853) * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C89843 * C89879) *
              C5151 +
          (((C14190 * C186 + C14191 * C89926) * C26053 +
            (C29855 + C29856) * C26054 + (C29863 + C29864) * C26055) *
               C89843 * C89879 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C89843 * C5149) *
              C5152 +
          ((((C13338 * C108 + C89783 * C114) * C186 +
             (C13338 * C189 + C89783 * C362) * C89926) *
                C26053 +
            (C29034 + C29035) * C26054 + (C29036 + C29037) * C26055) *
               C89843 * C5149 -
           (((C13338 * C6409 + C89783 * C6569) * C89926 +
             (C13338 * C6323 + C89783 * C6326) * C186) *
                C26055 +
            ((C13338 * C4277 + C89783 * C4513) * C89926 +
             (C13338 * C4161 + C89783 * C4165) * C186) *
                C26054 +
            (C15694 * C89926 + C15693 * C186) * C26053) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C186 +
            (C13338 * C187 + C89783 * C360) * C89926) *
               C26053 +
           (C27577 + C27578) * C26054 + C27589 * C26055) *
              C89843 * C5796 -
          ((C29854 + C29853) * C26055 + (C29852 + C29851) * C26054 +
           (C14185 * C89926 + C14184 * C186) * C26053) *
              C89843 * C5797 +
          ((C14186 * C186 + C14187 * C89926) * C26053 +
           (C17229 * C186 + C17228 * C89926) * C26054 +
           (C19300 * C186 + C19301 * C89926) * C26055) *
              C89843 * C5798 -
          (((C13338 * C19120 + C89783 * C19288) * C89926 +
            (C13338 * C19030 + C89783 * C19031) * C186) *
               C26055 +
           (C21580 * C89926 + C21579 * C186) * C26054 +
           (C14188 * C89926 + C14189 * C186) * C26053) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C89843 * C5796 -
          (C1280 * C91 + C1281 * C90 +
           (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
              C89937 * C89843 * C5797 +
          ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
           C1283 * C91) *
              C89937 * C89843 * C5798 -
          ((C416 * C5801 + C6032 + C6032 + C89926 * C6028) * C91 +
           (C416 * C5802 + C6033 + C6033 + C89926 * C6029) * C90 +
           (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C89) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C5149 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C89879) *
              C5151 +
          ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
               C89879 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C5149) *
              C5152 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C5149 -
           ((C416 * C2695 + C3018 + C3018 + C89926 * C3014) * C91 +
            C3021 * C90 + C1280 * C89) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C89879) *
              C5151 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C89879 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C5149) *
              C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5801 + C15771 + C15771 + C13336 * C6028 + C13555 * C832 +
            C15772 + C15772 + C13335 * C1252 + C13554 * C827 + C15773 + C15773 +
            C13334 * C1247) *
               C89783 * C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C5796 -
          (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
           C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
           C13334 * C1249) *
              C89783 * C89937 * C89843 * C5797 +
          (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
           C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
           C14277 + C13336 * C14269) *
              C89783 * C89937 * C89843 * C5798 -
          (C13556 * C18503 + C18735 + C18735 + C13336 * C18733 +
           C13555 * C13843 + C18736 + C18736 + C13335 * C14269 +
           C13554 * C5803 + C18737 + C18737 + C13334 * C6030) *
              C89783 * C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C89843 * C5149 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C89843 * C89879) *
              C5151 +
          ((C1281 * C89783 * C26053 + C29969 * C26054 + C29984 * C26055) *
               C89843 * C89879 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C89843 * C5149) *
              C5152 +
          ((C447 * C89783 * C26053 + C29112 * C26054 + C29113 * C26055) *
               C89843 * C5149 -
           ((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C89783 * C26055 +
            C4631 * C89783 * C26054 + C1280 * C89783 * C26053) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
           C27691 * C26054 + C27692 * C26055) *
              C89843 * C5796 -
          (C29983 * C26055 + C29982 * C26054 +
           (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
              C89843 * C5797 +
          ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
           (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89783 * C26054 +
           (C416 * C14727 + C26848 + C26848 + C89926 * C15051) * C89783 *
               C26055) *
              C89843 * C5798 -
          ((C416 * C19030 + C31315 + C31315 + C89926 * C19375) * C89783 *
               C26055 +
           (C416 * C16849 + C31316 + C31316 + C89926 * C17333) * C89783 *
               C26054 +
           (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C89783 * C26053) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C89843 * C5796 -
          (C3097 * C91 + (C1383 + C1371) * C90 +
           ((C273 * C939 + C89937 * C1359) * C89926 +
            (C273 * C829 + C89937 * C1053) * C186) *
               C89) *
              C89843 * C5797 +
          (((C273 * C830 + C89937 * C1054) * C186 +
            (C273 * C940 + C89937 * C1360) * C89926) *
               C89 +
           (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
              C89843 * C5798 -
          (((C273 * C5863 + C89937 * C6084) * C89926 +
            (C273 * C5801 + C89937 * C5919) * C186) *
               C91 +
           ((C273 * C5864 + C89937 * C6085) * C89926 +
            (C273 * C5802 + C89937 * C5920) * C186) *
               C90 +
           ((C273 * C5865 + C89937 * C6086) * C89926 +
            (C273 * C5803 + C89937 * C5921) * C186) *
               C89) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C5149 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C89879) *
              C5151 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            (C3098 + C3102) * C91) *
               C89843 * C89879 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C5149) *
              C5152 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
               C5149 -
           (((C273 * C2775 + C89937 * C3095) * C89926 +
             (C273 * C2695 + C89937 * C2857) * C186) *
                C91 +
            (C3102 + C3098) * C90 + C3097 * C89) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C5149 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C89879) *
              C5151 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C89879 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C5149) *
              C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89843 * C5149 -
           ((C273 * C5863 + C89937 * C6084) * C13336 +
            (C273 * C5801 + C89937 * C5919) * C13403 + C1381 * C13335 +
            C1090 * C13402 + C1378 * C13334 + C1085 * C13401) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
           C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
              C89783 * C89843 * C5796 -
          (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
           C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
              C89783 * C89843 * C5797 +
          (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
           C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
              C89783 * C89843 * C5798 -
          ((C273 * C18563 + C89937 * C18787) * C13336 +
           (C273 * C18503 + C89937 * C18615) * C13403 + C18791 * C13335 +
           C18623 * C13402 + C14370 * C13334 + C14071 * C13401) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C89843 * C5149 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
             C26161 * C6324 + C26055 * C6490) *
                C186 +
            (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
             C26161 * C6410 + C26055 * C6727) *
                C89926) *
               C89783 * C89843 * C89879 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
             C26161 * C1765 + C26055 * C1989) *
                C186 +
            (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
             C26161 * C1875 + C26055 * C2295) *
                C89926) *
               C89783 * C89843 * C5149 -
           ((C26161 * C6409 + C26055 * C6726 + C26160 * C4277 + C26054 * C4731 +
             C26159 * C937 + C26053 * C1357) *
                C89926 +
            (C26161 * C6323 + C26055 * C6489 + C26160 * C4161 + C26054 * C4395 +
             C26159 * C827 + C26053 * C1051) *
                C186) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
            C26161 * C1763 + C26055 * C1987) *
               C186 +
           (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
            C26161 * C1873 + C26055 * C2293) *
               C89926) *
              C89783 * C89843 * C5796 -
          ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
            C26159 * C939 + C26053 * C1359) *
               C89926 +
           (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
            C26159 * C829 + C26053 * C1053) *
               C186) *
              C89783 * C89843 * C5797 +
          ((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
            C26161 * C14727 + C26055 * C14897) *
               C186 +
           (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
            C26161 * C14819 + C26055 * C15139) *
               C89926) *
              C89783 * C89843 * C5798 -
          ((C26161 * C19120 + C26055 * C19453 + C26160 * C16979 +
            C26054 * C17439 + C26159 * C5865 + C26053 * C6086) *
               C89926 +
           (C26161 * C19030 + C26055 * C19196 + C26160 * C16849 +
            C26054 * C17081 + C26159 * C5803 + C26053 * C5921) *
               C186) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C273 +
           (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
            C91 * C579) *
               C89937) *
              C89926 * C89843 * C5796 -
          ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
            C101 * C1053 + C89 * C1461) *
               C89937 +
           (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
            C89 * C837) *
               C273) *
              C89926 * C89843 * C5797 +
          ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
            C91 * C840) *
               C273 +
           (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
            C105 * C1056 + C91 * C1464) *
               C89937) *
              C89926 * C89843 * C5798 -
          ((C105 * C5919 + C91 * C6137 + C103 * C5920 + C90 * C6138 +
            C101 * C5921 + C89 * C6139) *
               C89937 +
           (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
            C101 * C5803 + C89 * C5806) *
               C273) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C89843 * C5149 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C89843 * C89879) *
              C5151 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C273 +
            (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
             C105 * C1057 + C91 * C1465) *
                C89937) *
               C89926 * C89843 * C89879 -
           ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
             C89 * C578) *
                C89937 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C273) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C273 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581) *
                C89937) *
               C89926 * C89843 * C5149 -
           ((C105 * C2857 + C91 * C3176 + C103 * C1057 + C90 * C1465 +
             C101 * C1051 + C89 * C1459) *
                C89937 +
            (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
             C101 * C827 + C89 * C835) *
                C273) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C89843 * C5149 -
           ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C89843 * C89879) *
              C5151 +
          (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
            (C14463 + C14477) * C13336) *
               C89843 * C89879 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C89843 * C5149) *
              C5152 +
          ((((C13338 * C108 + C89783 * C114) * C273 +
             (C13338 * C276 + C89783 * C579) * C89937) *
                C13334 +
            (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
               C89843 * C5149 -
           (((C13338 * C5919 + C89783 * C6137) * C89937 +
             (C13338 * C5801 + C89783 * C5804) * C273) *
                C13336 +
            (C15931 + C15925) * C13335 + (C15930 + C15922) * C13334) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C273 +
            (C13338 * C274 + C89783 * C577) * C89937) *
               C13334 +
           (C14448 + C14472) * C13335 + C14478 * C13336) *
              C89843 * C5796 -
          (C18843 * C13336 + (C14473 + C14451) * C13335 +
           (C14472 + C14448) * C13334) *
              C89843 * C5797 +
          (C14478 * C13334 + (C14456 + C14474) * C13335 +
           (C18844 + C18848) * C13336) *
              C89843 * C5798 -
          (((C13338 * C18615 + C89783 * C18841) * C89937 +
            (C13338 * C18503 + C89783 * C18504) * C273) *
               C13336 +
           (C18848 + C18844) * C13335 + C18843 * C13334) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C89843 * C5149 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C89843 * C89879) *
              C5151 +
          ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
            C17565 * C26054 + C29861 * C26161 + C30185 * C26055) *
               C89926 * C89843 * C89879 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C13338 * C108 + C89783 * C114) * C26159 +
            (C13338 * C276 + C89783 * C579) * C26053 + C29030 * C26160 +
            C29266 * C26054 + C29032 * C26161 + C29267 * C26055) *
               C89926 * C89843 * C5149 -
           ((C13338 * C6489 + C89783 * C6803) * C26055 +
            (C13338 * C6323 + C89783 * C6326) * C26161 +
            (C13338 * C4395 + C89783 * C4843) * C26054 +
            (C13338 * C4161 + C89783 * C4165) * C26160 + C15928 * C26053 +
            C15693 * C26159) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C26159 +
           (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
           C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
              C89926 * C89843 * C5796 -
          (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
           C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
              C89926 * C89843 * C5797 +
          (C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
           C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
              C89926 * C89843 * C5798 -
          ((C13338 * C19196 + C89783 * C19534) * C26055 +
           (C13338 * C19030 + C89783 * C19031) * C26161 + C21816 * C26054 +
           C21579 * C26160 + C14468 * C26053 + C14189 * C26159) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C273 +
            (C186 * C274 + C89926 * C633) * C89937) *
               C89 +
           (C640 + C656) * C90 + C660 * C91) *
              C89843 * C5796 -
          (C3253 * C91 + (C1567 + C1555) * C90 +
           ((C186 * C1053 + C89926 * C1543) * C89937 +
            (C186 * C829 + C89926 * C939) * C273) *
               C89) *
              C89843 * C5797 +
          (((C186 * C830 + C89926 * C940) * C273 +
            (C186 * C1054 + C89926 * C1544) * C89937) *
               C89 +
           (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
              C89843 * C5798 -
          (((C186 * C5919 + C89926 * C6190) * C89937 +
            (C186 * C5801 + C89926 * C5863) * C273) *
               C91 +
           ((C186 * C5920 + C89926 * C6191) * C89937 +
            (C186 * C5802 + C89926 * C5864) * C273) *
               C90 +
           ((C186 * C5921 + C89926 * C6192) * C89937 +
            (C186 * C5803 + C89926 * C5865) * C273) *
               C89) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89843 * C5149 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C89843 * C89879) *
              C5151 +
          (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
            (C3254 + C3258) * C91) *
               C89843 * C89879 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89843 *
               C5149) *
              C5152 +
          ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C89843 *
               C5149 -
           (((C186 * C2857 + C89926 * C3251) * C89937 +
             (C186 * C2695 + C89926 * C2775) * C273) *
                C91 +
            (C3258 + C3254) * C90 + C3253 * C89) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89843 * C5149 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89843 * C89879) *
              C5151 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C273 +
            (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 + C13335 * C1545 +
             C13403 * C5920 + C13336 * C6191) *
                C89937) *
               C89783 * C89843 * C89879 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89843 * C5149) *
              C5152 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C89843 * C5149 -
           ((C13403 * C5919 + C13336 * C6190 + C13402 * C1056 + C13335 * C1546 +
             C13401 * C1051 + C13334 * C1541) *
                C89937 +
            (C13403 * C5801 + C13336 * C5863 + C13402 * C832 + C13335 * C942 +
             C13401 * C827 + C13334 * C937) *
                C273) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C273 +
           (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
            C13403 * C1054 + C13336 * C1544) *
               C89937) *
              C89783 * C89843 * C5796 -
          ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
            C13401 * C1053 + C13334 * C1543) *
               C89937 +
           (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
            C13401 * C829 + C13334 * C939) *
               C273) *
              C89783 * C89843 * C5797 +
          ((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
            C13403 * C13843 + C13336 * C13963) *
               C273 +
           (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
            C13403 * C14041 + C13336 * C14553) *
               C89937) *
              C89783 * C89843 * C5798 -
          ((C13403 * C18615 + C13336 * C18898 + C13402 * C14041 +
            C13335 * C14553 + C13401 * C5921 + C13334 * C6192) *
               C89937 +
           (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
            C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
               C273) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C89843 * C5149 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C89843 * C89879) *
              C5151 +
          ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
            C29644 * C26161 + C30293 * C26055) *
               C89783 * C89843 * C89879 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C89843 * C5149) *
              C5152 +
          ((C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
            C1909 * C26161 + C2498 * C26055) *
               C89783 * C89843 * C5149 -
           ((C186 * C6489 + C89926 * C6880) * C26055 +
            (C186 * C6323 + C89926 * C6409) * C26161 + C4955 * C26054 +
            C4294 * C26160 + C1562 * C26053 + C971 * C26159) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C186 * C106 + C89926 * C187) * C26159 +
           (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
           C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
              C89783 * C89843 * C5796 -
          (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
           C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
           (C186 * C829 + C89926 * C939) * C26159) *
              C89783 * C89843 * C5797 +
          ((C186 * C830 + C89926 * C940) * C26159 +
           (C186 * C1054 + C89926 * C1544) * C26053 +
           (C186 * C8592 + C89926 * C8678) * C26160 +
           (C186 * C8758 + C89926 * C9149) * C26054 +
           (C186 * C14727 + C89926 * C14819) * C26161 +
           (C186 * C14897 + C89926 * C15291) * C26055) *
              C89783 * C89843 * C5798 -
          ((C186 * C19196 + C89926 * C19619) * C26055 +
           (C186 * C19030 + C89926 * C19120) * C26161 +
           (C186 * C17081 + C89926 * C17668) * C26054 +
           (C186 * C16849 + C89926 * C16979) * C26160 +
           (C186 * C5921 + C89926 * C6192) * C26053 +
           (C186 * C5803 + C89926 * C5865) * C26159) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C89843 * C5796 -
          (C1680 * C91 + C1681 * C90 +
           (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
              C89843 * C5797 +
          ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
           C1682 * C90 + C1683 * C91) *
              C89843 * C5798 -
          ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C89926 * C91 +
           (C711 * C5802 + C6248 + C6248 + C89937 * C6244) * C89926 * C90 +
           (C711 * C5803 + C6249 + C6249 + C89937 * C6245) * C89926 * C89) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C5149 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C89879) *
              C5151 +
          ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C89879 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C5149) *
              C5152 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C5149 -
           ((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C89926 * C91 +
            C3340 * C90 + C1680 * C89) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C5149 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C89879) *
              C5151 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C89879 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C5149) *
              C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
               C5149 -
           ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C13336 +
            C1679 * C13335 + C1676 * C13334) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           C14650 * C13335 + C14651 * C13336) *
              C89783 * C89843 * C5796 -
          (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
              C89843 * C5797 +
          (C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
              C89843 * C5798 -
          ((C711 * C18503 + C18953 + C18953 + C89937 * C18949) * C13336 +
           C18956 * C13335 + C14652 * C13334) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C89843 * C5149 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C89843 * C89879) *
              C5151 +
          ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
            C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
            C27154 + C26055 * C6958) *
               C89926 * C89783 * C89843 * C89879 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C89843 * C5149) *
              C5152 +
          ((C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
            C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 +
            C26474 + C26055 * C2581) *
               C89926 * C89783 * C89843 * C5149 -
           (C26464 * C6323 + C28708 + C28708 + C26055 * C6957 + C26463 * C4161 +
            C28709 + C28709 + C26054 * C5057 + C26462 * C827 + C28710 + C28710 +
            C26053 * C1643) *
               C89926 * C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
           C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 + C26468 +
           C26055 * C2579) *
              C89926 * C89783 * C89843 * C5796 -
          (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
           C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
           C26053 * C1645) *
              C89926 * C89783 * C89843 * C5797 +
          (C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
           C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
           C27151 + C26055 * C15367) *
              C89926 * C89783 * C89843 * C5798 -
          (C26464 * C19030 + C31517 + C31517 + C26055 * C19694 +
           C26463 * C16849 + C31518 + C31518 + C26054 * C17768 +
           C26462 * C5803 + C31519 + C31519 + C26053 * C6245) *
              C89926 * C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                 C13334 +
             C13884 * C13335 + C13885 * C13336) *
                C9304 -
            (C16878 * C13336 + C16879 * C13335 +
             (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                 C13334) *
                C89907) *
               C89998 +
           ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
            (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C9304) *
               C89879) *
              C89990 +
          ((((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                 C13334 +
             C16880 * C13335 + C16881 * C13336) *
                C89907 -
            (C13888 * C13336 + C13887 * C13335 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                 C13334) *
                C9304) *
               C89998 +
           ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C9304 -
            ((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C89937 *
                 C13336 +
             C16881 * C13335 + C16880 * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
             C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                C89937 * C89926 * C9304 -
            (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
             C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
                C89937 * C89926 * C89907) *
               C89998 +
           ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
             C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
                C89937 * C89926 * C89907 -
            (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
             C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                C89937 * C89926 * C9304) *
               C89879) *
              C89990 +
          (((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
             C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
                C89937 * C89926 * C89907 -
            (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
             C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                C89937 * C89926 * C9304) *
               C89998 +
           ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
             C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                C89937 * C89926 * C9304 -
            (C104 * C4162 + C4175 + C4175 + C91 * C4170 + C102 * C4161 + C4176 +
             C4176 + C90 * C4169 + C100 * C4160 + C4177 + C4177 + C89 * C4168) *
                C89937 * C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
             C27265 * C26054 + C27266 * C26055) *
                C89926 * C9304 -
            (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
                C89907) *
               C89998 +
           ((C16875 * C26053 + C19043 * C26054 + C31602 * C26055) * C89926 *
                C89907 -
            (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
                C9304) *
               C89879) *
              C89990 +
          (((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
                C89907 -
            (C27269 * C26055 + C27268 * C26054 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
                C89926 * C9304) *
               C89998 +
           ((C13881 * C26053 + C16876 * C26054 + C29525 * C26055) * C89926 *
                C9304 -
            ((C13337 * C29516 + C29522 + C29522 + C89783 * C29518) * C26055 +
             C29525 * C26054 + C16876 * C26053) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C13338 +
             (C13401 * C112 + C13334 * C193 + C13402 * C837 + C13335 * C947 +
              C13403 * C838 + C13336 * C948) *
                 C89783) *
                C89937 * C9304 -
            ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
              C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                 C89783 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C13338) *
                C89937 * C89907) *
               C89998 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C13338 +
             (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
              C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                 C89783) *
                C89937 * C89907 -
            ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 + C13335 * C948 +
              C13401 * C837 + C13334 * C947) *
                 C89783 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C13338) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C13338 +
             (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
              C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                 C89783) *
                C89937 * C89907 -
            ((C13403 * C839 + C13336 * C949 + C13402 * C836 + C13335 * C946 +
              C13401 * C113 + C13334 * C194) *
                 C89783 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C13338) *
                C89937 * C9304) *
               C89998 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C13338 +
             (C13401 * C836 + C13334 * C946 + C13402 * C839 + C13335 * C949 +
              C13403 * C5805 + C13336 * C5867) *
                 C89783) *
                C89937 * C9304 -
            ((C13403 * C16852 + C13336 * C16982 + C13402 * C8594 +
              C13335 * C8680 + C13401 * C4164 + C13334 * C4280) *
                 C89783 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C13338) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C101 +
             (C186 * C112 + C89926 * C193) * C89 + C216 * C103 + C217 * C90 +
             C218 * C105 + C219 * C91) *
                C89937 * C9304 -
            (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
             (C186 * C1770 + C89926 * C1880) * C89 +
             (C186 * C1762 + C89926 * C1872) * C101) *
                C89937 * C89907) *
               C89998 +
           (((C186 * C4159 + C89926 * C4275) * C101 +
             (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
             C4293 * C90 + C4294 * C105 + C4295 * C91) *
                C89937 * C89907 -
            (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
             (C186 * C837 + C89926 * C947) * C89 +
             (C186 * C829 + C89926 * C939) * C101) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          (((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
             C3503 * C105 + C3504 * C91) *
                C89937 * C89907 -
            (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 + C217 * C89 +
             C216 * C101) *
                C89937 * C9304) *
               C89998 +
           ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
             C2782 * C105 + C2783 * C91) *
                C89937 * C9304 -
            ((C186 * C4166 + C89926 * C4282) * C91 +
             (C186 * C4162 + C89926 * C4278) * C105 + C4295 * C90 +
             C4294 * C103 + C4293 * C89 + C4292 * C101) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C13338 +
              (C186 * C112 + C89926 * C193) * C89783) *
                 C26053 +
             (C27378 + C27379) * C26054 + C27386 * C26055) *
                C9304 -
            (C35938 * C26055 + (C27381 + C27380) * C26054 +
             (C27379 + C27378) * C26053) *
                C89907) *
               C89998 +
           (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
             (C31686 + C31687) * C26055) *
                C89907 -
            (C31683 * C26055 + (C29647 + C29646) * C26054 +
             ((C186 * C837 + C89926 * C947) * C89783 +
              (C186 * C829 + C89926 * C939) * C13338) *
                 C26053) *
                C9304) *
               C89879) *
              C89990 +
          ((((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
             (C27384 + C27385) * C26055) *
                C89907 -
            (C27377 * C26055 + (C27362 + C27361) * C26054 +
             (C217 * C89783 + C216 * C13338) * C26053) *
                C9304) *
               C89998 +
           (((C973 * C13338 + C972 * C89783) * C26053 +
             (C29634 + C29635) * C26054 + (C29650 + C29651) * C26055) *
                C9304 -
            (((C186 * C29517 + C89926 * C29624) * C89783 +
              (C186 * C29516 + C89926 * C29623) * C13338) *
                 C26055 +
             (C29651 + C29650) * C26054 + (C29635 + C29634) * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C13338 +
              (C273 * C112 + C89937 * C280) * C89783) *
                 C13334 +
             (C14075 + C14076) * C13335 + C14083 * C13336) *
                C9304 -
            (C21491 * C13336 + (C17108 + C17109) * C13335 +
             ((C273 * C1770 + C89937 * C1994) * C89783 +
              (C273 * C1762 + C89937 * C1986) * C13338) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
             (C21498 + C21499) * C13336) *
                C89907 -
            (C18618 * C13336 + (C14078 + C14077) * C13335 +
             (C14076 + C14075) * C13334) *
                C9304) *
               C89879) *
              C89990 +
          ((((C2020 * C13338 + C2019 * C89783) * C13334 +
             (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                C89907 -
            (C14074 * C13336 + (C14059 + C14058) * C13335 +
             (C304 * C89783 + C303 * C13338) * C13334) *
                C9304) *
               C89998 +
           (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
             (C14081 + C14082) * C13336) *
                C9304 -
            (((C273 * C16852 + C89937 * C17084) * C89783 +
              (C273 * C16850 + C89937 * C17082) * C13338) *
                 C13336 +
             (C17111 + C17110) * C13335 + (C17095 + C17094) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C101 +
             (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
             C305 * C105 + C306 * C91) *
                C89926 * C9304 -
            (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
             (C273 * C1770 + C89937 * C1994) * C89 +
             (C273 * C1762 + C89937 * C1986) * C101) *
                C89926 * C89907) *
               C89998 +
           (((C273 * C4159 + C89937 * C4393) * C101 +
             (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
             C4411 * C90 + C4412 * C105 + C4413 * C91) *
                C89926 * C89907 -
            (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
             (C273 * C837 + C89937 * C1061) * C89 +
             (C273 * C829 + C89937 * C1053) * C101) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          (((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
             C3585 * C105 + C3586 * C91) *
                C89926 * C89907 -
            (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 + C304 * C89 +
             C303 * C101) *
                C89926 * C9304) *
               C89998 +
           ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
             C2864 * C105 + C2865 * C91) *
                C89926 * C9304 -
            ((C273 * C4166 + C89937 * C4400) * C91 +
             (C273 * C4162 + C89937 * C4396) * C105 + C4413 * C90 +
             C4412 * C103 + C4411 * C89 + C4410 * C101) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
              C26161 * C1763 + C26055 * C1987) *
                 C13338 +
             (C26159 * C112 + C26053 * C280 + C26160 * C1770 + C26054 * C1994 +
              C26161 * C1771 + C26055 * C1995) *
                 C89783) *
                C89926 * C9304 -
            ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
              C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                 C89783 +
             (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
              C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                 C13338) *
                C89926 * C89907) *
               C89998 +
           (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
              C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                 C13338 +
             (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
              C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                 C89783) *
                C89926 * C89907 -
            ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
              C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                 C89783 +
             (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
              C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                 C13338) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          ((((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
              C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                 C13338 +
             (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 +
              C26054 * C1996 + C26161 * C10622 + C26055 * C10740) *
                 C89783) *
                C89926 * C89907 -
            ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
              C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                 C89783 +
             (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
              C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                 C13338) *
                C89926 * C9304) *
               C89998 +
           (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
              C26161 * C6324 + C26055 * C6490) *
                 C13338 +
             (C26159 * C836 + C26053 * C1060 + C26160 * C4164 + C26054 * C4398 +
              C26161 * C6327 + C26055 * C6493) *
                 C89783) *
                C89926 * C9304 -
            ((C26161 * C29517 + C26055 * C29750 + C26160 * C6327 +
              C26054 * C6493 + C26159 * C4164 + C26053 * C4398) *
                 C89783 +
             (C26161 * C29516 + C26055 * C29749 + C26160 * C6324 +
              C26054 * C6490 + C26159 * C4160 + C26053 * C4394) *
                 C13338) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C13401 +
             (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
             C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
                C89937 * C9304 -
            (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
             C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
             (C13338 * C1762 + C89783 * C1770) * C13401) *
                C89937 * C89907) *
               C89998 +
           ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
             C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
                C89937 * C89907 -
            (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
             C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C13338 * C1761 + C89783 * C1769) * C13401 +
             (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
             C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
                C89937 * C89907 -
            (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
             C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
             (C13338 * C107 + C89783 * C113) * C13401) *
                C89937 * C9304) *
               C89998 +
           ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
             C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
                C89937 * C9304 -
            ((C13338 * C16980 + C89783 * C17210) * C13336 +
             (C13338 * C16850 + C89783 * C16852) * C13403 + C17235 * C13335 +
             C17234 * C13402 + C17233 * C13334 + C17232 * C13401) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C186 +
             (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
              C105 * C189 + C91 * C362) *
                 C89926) *
                C89937 * C9304 -
            ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
              C101 * C1872 + C89 * C2100) *
                 C89926 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C186) *
                C89937 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C186 +
             (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
              C105 * C4277 + C91 * C4513) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
              C101 * C939 + C89 * C1167) *
                 C89926 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C186) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C186 +
             (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
              C105 * C1876 + C91 * C2104) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
              C101 * C188 + C89 * C361) *
                 C89926 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C186) *
                C89937 * C9304) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C186 +
             (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
              C105 * C943 + C91 * C1171) *
                 C89926) *
                C89937 * C9304 -
            ((C105 * C4278 + C91 * C4514 + C103 * C4277 + C90 * C4513 +
              C101 * C4276 + C89 * C4512) *
                 C89926 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C186) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C186 +
              (C13338 * C187 + C89783 * C360) * C89926) *
                 C26053 +
             (C27577 + C27578) * C26054 + C27589 * C26055) *
                C9304 -
            (C36050 * C26055 + (C27580 + C27579) * C26054 +
             (C27578 + C27577) * C26053) *
                C89907) *
               C89998 +
           (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
             (C31846 + C31847) * C26055) *
                C89907 -
            (C31843 * C26055 + (C29852 + C29851) * C26054 +
             (C14185 * C89926 + C14184 * C186) * C26053) *
                C9304) *
               C89879) *
              C89990 +
          ((((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
             (C27587 + C27588) * C26055) *
                C89907 -
            (C27590 * C26055 + (C27584 + C27583) * C26054 +
             ((C13338 * C188 + C89783 * C361) * C89926 +
              (C13338 * C107 + C89783 * C113) * C186) *
                 C26053) *
                C9304) *
               C89998 +
           (((C14190 * C186 + C14191 * C89926) * C26053 +
             (C29855 + C29856) * C26054 + (C29863 + C29864) * C26055) *
                C9304 -
            (((C13338 * C29623 + C89783 * C29849) * C89926 +
              (C13338 * C29516 + C89783 * C29517) * C186) *
                 C26055 +
             (C29864 + C29863) * C26054 + (C29856 + C29855) * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
             C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 +
             C13560 + C13336 * C1250) *
                C89783 * C89937 * C9304 -
            (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
             C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
             C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                C89783 * C89937 * C89907) *
               C89998 +
           ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
             C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
             C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                C89783 * C89937 * C89907 -
            (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
             C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 +
             C14274 + C13334 * C1249) *
                C89783 * C89937 * C9304) *
               C89879) *
              C89990 +
          (((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 +
             C13555 * C4160 + C15061 + C15061 + C13335 * C4614 +
             C13556 * C8591 + C15062 + C15062 + C13336 * C8914) *
                C89783 * C89937 * C89907 -
            (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
             C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 +
             C13563 + C13334 * C418) *
                C89783 * C89937 * C9304) *
               C89998 +
           ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
             C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
             C14280 + C13336 * C6029) *
                C89783 * C89937 * C9304 -
            (C13556 * C16850 + C17339 + C17339 + C13336 * C17334 +
             C13555 * C8591 + C17340 + C17340 + C13335 * C8914 +
             C13554 * C4160 + C17341 + C17341 + C13334 * C4614) *
                C89783 * C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
             C447 * C91) *
                C89937 * C9304 -
            (C2213 * C91 + C2214 * C90 +
             (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                C89937 * C89907) *
               C89998 +
           (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
             C4630 * C90 + C4631 * C91) *
                C89937 * C89907 -
            (C1280 * C91 + C1281 * C90 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          (((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
            (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C9304) *
               C89998 +
           ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C9304 -
            ((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C91 +
             C4631 * C90 + C4630 * C89) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
             C27691 * C26054 + C27692 * C26055) *
                C9304 -
            (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
               C89998 +
           ((C29982 * C26053 + C29983 * C26054 + C31929 * C26055) * C89907 -
            (C29983 * C26055 + C29982 * C26054 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
                C9304) *
               C89879) *
              C89990 +
          (((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C89907 -
            (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
                C9304) *
               C89998 +
           ((C1281 * C89783 * C26053 + C29969 * C26054 + C29984 * C26055) *
                C9304 -
            ((C416 * C29516 + C29972 + C29972 + C89926 * C29962) * C89783 *
                 C26055 +
             C29984 * C26054 + C29969 * C26053) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C13401 +
             (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
             C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
                C89783 * C9304 -
            (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
             C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
             (C273 * C1762 + C89937 * C1986) * C13401) *
                C89783 * C89907) *
               C89998 +
           ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
             C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
                C89783 * C89907 -
            (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
             C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          (((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
             C17104 * C13403 + C17450 * C13336) *
                C89783 * C89907 -
            (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
             C518 * C13334 + C303 * C13401) *
                C89783 * C9304) *
               C89998 +
           ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
             C14072 * C13403 + C14371 * C13336) *
                C89783 * C9304 -
            ((C273 * C16980 + C89937 * C17440) * C13336 +
             (C273 * C16850 + C89937 * C17082) * C13403 + C17450 * C13335 +
             C17104 * C13402 + C4740 * C13334 + C4410 * C13401) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C186 +
              (C273 * C187 + C89937 * C499) * C89926) *
                 C89 +
             (C506 + C522) * C90 + C526 * C91) *
                C9304 -
            (C3818 * C91 + (C2316 + C2304) * C90 +
             ((C273 * C1872 + C89937 * C2292) * C89926 +
              (C273 * C1762 + C89937 * C1986) * C186) *
                 C89) *
                C89907) *
               C89998 +
           ((((C273 * C4159 + C89937 * C4393) * C186 +
              (C273 * C4275 + C89937 * C4729) * C89926) *
                 C89 +
             (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
                C89907 -
            (C3097 * C91 + (C1383 + C1371) * C90 +
             ((C273 * C939 + C89937 * C1359) * C89926 +
              (C273 * C829 + C89937 * C1053) * C186) *
                 C89) *
                C9304) *
               C89879) *
              C89990 +
          ((((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
             (C3819 + C3823) * C91) *
                C89907 -
            (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C9304) *
               C89998 +
           (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
             (C3098 + C3102) * C91) *
                C9304 -
            (((C273 * C4278 + C89937 * C4732) * C89926 +
              (C273 * C4162 + C89937 * C4396) * C186) *
                 C91 +
             (C4743 + C4737) * C90 + (C4742 + C4734) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
              C26161 * C1763 + C26055 * C1987) *
                 C186 +
             (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
              C26161 * C1873 + C26055 * C2293) *
                 C89926) *
                C89783 * C9304 -
            ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
              C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                 C89926 +
             (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
              C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                 C186) *
                C89783 * C89907) *
               C89998 +
           (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
              C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                 C186 +
             (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 +
              C26054 * C6728 + C26161 * C23415 + C26055 * C23630) *
                 C89926) *
                C89783 * C89907 -
            ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 +
              C26054 * C4729 + C26159 * C939 + C26053 * C1359) *
                 C89926 +
             (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
              C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                 C186) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          ((((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
              C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                 C186 +
             (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 +
              C26054 * C2294 + C26161 * C10681 + C26055 * C10902) *
                 C89926) *
                C89783 * C89907 -
            ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 +
              C26054 * C2291 + C26159 * C188 + C26053 * C500) *
                 C89926 +
             (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
              C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                 C186) *
                C89783 * C9304) *
               C89998 +
           (((C26159 * C828 + C26053 * C1052 + C26160 * C4160 + C26054 * C4394 +
              C26161 * C6324 + C26055 * C6490) *
                 C186 +
             (C26159 * C938 + C26053 * C1358 + C26160 * C4276 + C26054 * C4730 +
              C26161 * C6410 + C26055 * C6727) *
                 C89926) *
                C89783 * C9304 -
            ((C26161 * C29623 + C26055 * C30082 + C26160 * C6410 +
              C26054 * C6727 + C26159 * C4276 + C26053 * C4730) *
                 C89926 +
             (C26161 * C29516 + C26055 * C29749 + C26160 * C6324 +
              C26054 * C6490 + C26159 * C4160 + C26053 * C4394) *
                 C186) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C273 +
              (C13338 * C274 + C89783 * C577) * C89937) *
                 C13334 +
             (C14448 + C14472) * C13335 + C14478 * C13336) *
                C9304 -
            (C21812 * C13336 + (C17568 + C17556) * C13335 +
             ((C13338 * C1986 + C89783 * C2394) * C89937 +
              (C13338 * C1762 + C89783 * C1770) * C273) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
             (C21813 + C21817) * C13336) *
                C89907 -
            (C18843 * C13336 + (C14473 + C14451) * C13335 +
             (C14472 + C14448) * C13334) *
                C9304) *
               C89879) *
              C89990 +
          (((((C13338 * C1761 + C89783 * C1769) * C273 +
              (C13338 * C1985 + C89783 * C2393) * C89937) *
                 C13334 +
             (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                C89907 -
            (C14479 * C13336 + (C14475 + C14457) * C13335 +
             ((C13338 * C275 + C89783 * C578) * C89937 +
              (C13338 * C107 + C89783 * C113) * C273) *
                 C13334) *
                C9304) *
               C89998 +
           (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
             (C14463 + C14477) * C13336) *
                C9304 -
            (((C13338 * C17082 + C89783 * C17549) * C89937 +
              (C13338 * C16850 + C89783 * C16852) * C273) *
                 C13336 +
             (C17570 + C17560) * C13335 + (C17569 + C17557) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C273 +
             (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
              C105 * C276 + C91 * C579) *
                 C89937) *
                C89926 * C9304 -
            ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
              C101 * C1986 + C89 * C2394) *
                 C89937 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C273) *
                C89926 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C273 +
             (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
              C105 * C4395 + C91 * C4843) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
              C101 * C1053 + C89 * C1461) *
                 C89937 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C273) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C273 +
             (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
              C105 * C1990 + C91 * C2398) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
              C101 * C275 + C89 * C578) *
                 C89937 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C273) *
                C89926 * C9304) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C273 +
             (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
              C105 * C1057 + C91 * C1465) *
                 C89937) *
                C89926 * C9304 -
            ((C105 * C4396 + C91 * C4844 + C103 * C4395 + C90 * C4843 +
              C101 * C4394 + C89 * C4842) *
                 C89937 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C273) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C26159 +
             (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
             C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
                C89926 * C9304 -
            (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
             C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
                C89926 * C89907) *
               C89998 +
           ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
             C19542 * C26054 + C31844 * C26161 + C32082 * C26055) *
                C89926 * C89907 -
            (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
             C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          (((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
             C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
                C89926 * C89907 -
            (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
             C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
             (C13338 * C107 + C89783 * C113) * C26159) *
                C89926 * C9304) *
               C89998 +
           ((C14190 * C26159 + C14469 * C26053 + C17232 * C26160 +
             C17565 * C26054 + C29861 * C26161 + C30185 * C26055) *
                C89926 * C9304 -
            ((C13338 * C29749 + C89783 * C30181) * C26055 +
             (C13338 * C29516 + C89783 * C29517) * C26161 + C30185 * C26054 +
             C29861 * C26160 + C17565 * C26053 + C17232 * C26159) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C273 +
             (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
              C13403 * C1054 + C13336 * C1544) *
                 C89937) *
                C89783 * C9304 -
            ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
              C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                 C89937 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C273) *
                C89783 * C89907) *
               C89998 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C273 +
             (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
              C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
              C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                 C89937 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C273) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C273 +
             (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 +
              C13335 * C4944 + C13403 * C8757 + C13336 * C9148) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
              C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                 C89937 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C273) *
                C89783 * C9304) *
               C89998 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C273 +
             (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
              C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                 C89937) *
                C89783 * C9304 -
            ((C13403 * C17082 + C13336 * C17669 + C13402 * C8757 +
              C13335 * C9148 + C13401 * C4394 + C13334 * C4944) *
                 C89937 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C273) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C273 +
              (C186 * C274 + C89926 * C633) * C89937) *
                 C89 +
             (C640 + C656) * C90 + C660 * C91) *
                C9304 -
            (C3974 * C91 + (C2500 + C2488) * C90 +
             ((C186 * C1986 + C89926 * C2476) * C89937 +
              (C186 * C1762 + C89926 * C1872) * C273) *
                 C89) *
                C89907) *
               C89998 +
           ((((C186 * C4159 + C89926 * C4275) * C273 +
              (C186 * C4393 + C89926 * C4943) * C89937) *
                 C89 +
             (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                C89907 -
            (C3253 * C91 + (C1567 + C1555) * C90 +
             ((C186 * C1053 + C89926 * C1543) * C89937 +
              (C186 * C829 + C89926 * C939) * C273) *
                 C89) *
                C9304) *
               C89879) *
              C89990 +
          ((((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
             (C3975 + C3979) * C91) *
                C89907 -
            (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C9304) *
               C89998 +
           (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
             (C3254 + C3258) * C91) *
                C9304 -
            (((C186 * C4396 + C89926 * C4946) * C89937 +
              (C186 * C4162 + C89926 * C4278) * C273) *
                 C91 +
             (C4957 + C4951) * C90 + (C4956 + C4948) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C26159 +
             (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
             C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
                C89783 * C9304 -
            (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
             C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
                C89783 * C89907) *
               C89998 +
           ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
             C30292 * C26054 + C31684 * C26161 + C32160 * C26055) *
                C89783 * C89907 -
            (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
             C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
             (C186 * C829 + C89926 * C939) * C26159) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          (((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
             C27375 * C26161 + C27952 * C26055) *
                C89783 * C89907 -
            (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
             C652 * C26053 + C216 * C26159) *
                C89783 * C9304) *
               C89998 +
           ((C973 * C26159 + C1563 * C26053 + C4292 * C26160 + C4954 * C26054 +
             C29644 * C26161 + C30293 * C26055) *
                C89783 * C9304 -
            ((C186 * C29749 + C89926 * C30283) * C26055 +
             (C186 * C29516 + C89926 * C29623) * C26161 + C30293 * C26054 +
             C29644 * C26160 + C4954 * C26053 + C4292 * C26159) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
             C14650 * C13335 + C14651 * C13336) *
                C89783 * C9304 -
            (C17785 * C13336 + C17786 * C13335 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
                C89783 * C89907) *
               C89998 +
           ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
                C89907 -
            (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
                C9304) *
               C89879) *
              C89990 +
          (((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
                C89907 -
            (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
                C9304) *
               C89998 +
           ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
                C9304 -
            ((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C13336 +
             C17787 * C13335 + C5072 * C13334) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
             C745 * C90 + C746 * C91) *
                C9304 -
            (C2613 * C91 + C2614 * C90 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
                C89907) *
               C89998 +
           (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
             C5074 * C90 + C5075 * C91) *
                C89907 -
            (C1680 * C91 + C1681 * C90 +
             (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                C9304) *
               C89879) *
              C89990 +
          (((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
            (C747 * C91 + C746 * C90 + C745 * C89) * C9304) *
               C89998 +
           ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C9304 -
            ((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C89926 * C91 +
             C5075 * C90 + C5074 * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
             C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
             C26468 + C26055 * C2579) *
                C89926 * C89783 * C9304 -
            (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
             C26463 * C1763 + C28030 + C28030 + C26054 * C2579 +
             C26462 * C1762 + C28031 + C28031 + C26053 * C2578) *
                C89926 * C89783 * C89907) *
               C89998 +
           ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 +
             C26463 * C6325 + C30394 + C30394 + C26054 * C6959 +
             C26464 * C23356 + C30395 + C30395 + C26055 * C23786) *
                C89926 * C89783 * C89907 -
            (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 +
             C26463 * C4159 + C27147 + C27147 + C26054 * C5055 + C26462 * C829 +
             C27148 + C27148 + C26053 * C1645) *
                C89926 * C89783 * C9304) *
               C89879) *
              C89990 +
          (((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 +
             C26463 * C1764 + C28036 + C28036 + C26054 * C2580 +
             C26464 * C10619 + C28037 + C28037 + C26055 * C11061) *
                C89926 * C89783 * C89907 -
            (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 +
             C26463 * C1761 + C26470 + C26470 + C26054 * C2577 + C26462 * C107 +
             C26471 + C26471 + C26053 * C713) *
                C89926 * C89783 * C9304) *
               C89998 +
           ((C26462 * C828 + C27152 + C27152 + C26053 * C1644 + C26463 * C4160 +
             C27153 + C27153 + C26054 * C5056 + C26464 * C6324 + C27154 +
             C27154 + C26055 * C6958) *
                C89926 * C89783 * C9304 -
            (C26464 * C29516 + C30396 + C30396 + C26055 * C30391 +
             C26463 * C6324 + C30397 + C30397 + C26054 * C6958 +
             C26462 * C4160 + C30398 + C30398 + C26053 * C5056) *
                C89926 * C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C90026 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C90027 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            C19045 * C13335 + C19046 * C13336) *
               C12024) *
              C89998 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C90027 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C90026 -
           ((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C89937 *
                C13336 +
            C19046 * C13335 + C19045 * C13334) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C90026 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C90027 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C12024) *
              C89998 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C90027 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C90026 -
           (C104 * C6323 + C6333 + C6333 + C91 * C6329 + C102 * C6324 + C6334 +
            C6334 + C90 * C6330 + C100 * C6325 + C6335 + C6335 + C89 * C6331) *
               C89937 * C89926 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C90026 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C90027 +
           (C27266 * C26053 + C27267 * C26054 + C35885 * C26055) * C89926 *
               C12024) *
              C89998 +
          ((C16875 * C26053 + C19043 * C26054 + C31602 * C26055) * C89926 *
               C90027 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C90026 -
           ((C13337 * C31593 + C31599 + C31599 + C89783 * C31595) * C26055 +
            C31602 * C26054 + C19043 * C26053) *
               C89926 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[41] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C90026 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C90027 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C13338 +
                      (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                       C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                          C89783) *
                         C89937 * C12024) *
                        C89998 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C90027 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C90026 -
                     ((C13403 * C19031 + C13336 * C19121 + C13402 * C14729 +
                       C13335 * C14821 + C13401 * C6328 + C13334 * C6414) *
                          C89783 +
                      (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
                       C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                          C13338) *
                         C89937 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C90026 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C90027 +
                     ((C186 * C1763 + C89926 * C1873) * C101 +
                      (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                      C1908 * C90 + C1909 * C105 + C1910 * C91) *
                         C89937 * C12024) *
                        C89998 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C90027 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C90026 -
                     ((C186 * C6326 + C89926 * C6412) * C91 +
                      (C186 * C6323 + C89926 * C6409) * C105 +
                      (C186 * C6327 + C89926 * C6413) * C90 +
                      (C186 * C6324 + C89926 * C6410) * C103 +
                      (C186 * C6328 + C89926 * C6414) * C89 +
                      (C186 * C6325 + C89926 * C6411) * C101) *
                         C89937 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C90026 -
                     (C35938 * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C90027 +
                     (C27386 * C26053 + (C27383 + C27382) * C26054 +
                      (C35945 + C35946) * C26055) *
                         C12024) *
                        C89998 +
                    (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
                      (C31686 + C31687) * C26055) *
                         C90027 -
                     (C31683 * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C90026 -
                     (((C186 * C31594 + C89926 * C31677) * C89783 +
                       (C186 * C31593 + C89926 * C31676) * C13338) *
                          C26055 +
                      (C31687 + C31686) * C26054 + C31683 * C26053) *
                         C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[41] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C90026 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C90027 +
                     (((C273 * C1763 + C89937 * C1987) * C13338 +
                       (C273 * C1771 + C89937 * C1995) * C89783) *
                          C13334 +
                      (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                         C12024) *
                        C89998 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C90027 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C90026 -
                     (((C273 * C19031 + C89937 * C19197) * C89783 +
                       (C273 * C19030 + C89937 * C19196) * C13338) *
                          C13336 +
                      (C19214 + C19213) * C13335 + (C19212 + C19211) * C13334) *
                         C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C90026 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C90027 +
                     ((C273 * C1763 + C89937 * C1987) * C101 +
                      (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                      C2022 * C90 + C2023 * C105 + C2024 * C91) *
                         C89926 * C12024) *
                        C89998 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C90027 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C90026 -
                     ((C273 * C6326 + C89937 * C6492) * C91 +
                      (C273 * C6323 + C89937 * C6489) * C105 +
                      (C273 * C6327 + C89937 * C6493) * C90 +
                      (C273 * C6324 + C89937 * C6490) * C103 +
                      (C273 * C6328 + C89937 * C6494) * C89 +
                      (C273 * C6325 + C89937 * C6491) * C101) *
                         C89926 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C90026 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C90027 +
                     ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
                       C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                          C13338 +
                      (C26159 * C1771 + C26053 * C1995 + C26160 * C10623 +
                       C26054 * C10741 + C26161 * C27233 + C26055 * C27462) *
                          C89783) *
                         C89926 * C12024) *
                        C89998 +
                    (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
                       C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                          C13338 +
                      (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
                       C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                          C89783) *
                         C89926 * C90027 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C90026 -
                     ((C26161 * C31594 + C26055 * C31762 + C26160 * C23358 +
                       C26054 * C23471 + C26159 * C6328 + C26053 * C6494) *
                          C89783 +
                      (C26161 * C31593 + C26055 * C31761 + C26160 * C23356 +
                       C26054 * C23469 + C26159 * C6325 + C26053 * C6491) *
                          C13338) *
                         C89926 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C90026 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C90027 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
            C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
               C89937 * C12024) *
              C89998 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C90027 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C90026 -
           ((C13338 * C19120 + C89783 * C19288) * C13336 +
            (C13338 * C19030 + C89783 * C19031) * C13403 + C19301 * C13335 +
            C19300 * C13402 + C19299 * C13334 + C19298 * C13401) *
               C89937 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C90026 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C90027 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C186 +
            (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
             C105 * C1875 + C91 * C2103) *
                C89926) *
               C89937 * C12024) *
              C89998 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C90027 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C90026 -
           ((C105 * C6409 + C91 * C6569 + C103 * C6410 + C90 * C6570 +
             C101 * C6411 + C89 * C6571) *
                C89926 +
            (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
             C101 * C6325 + C89 * C6328) *
                C186) *
               C89937 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C90026 -
           (C36050 * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C90027 +
           (C27589 * C26053 + (C27582 + C27581) * C26054 +
            (C36057 + C36058) * C26055) *
               C12024) *
              C89998 +
          (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
            (C31846 + C31847) * C26055) *
               C90027 -
           (C31843 * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C90026 -
           (((C13338 * C31676 + C89783 * C31837) * C89926 +
             (C13338 * C31593 + C89783 * C31594) * C186) *
                C26055 +
            (C31847 + C31846) * C26054 + C31843 * C26053) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C90026 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C90027 +
           (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
            C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
            C15059 + C13336 * C15051) *
               C89783 * C89937 * C12024) *
              C89998 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C90027 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C90026 -
           (C13556 * C19030 + C19377 + C19377 + C13336 * C19375 +
            C13555 * C14727 + C19378 + C19378 + C13335 * C15051 +
            C13554 * C6325 + C19379 + C19379 + C13334 * C6648) *
               C89783 * C89937 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C90026 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C90027 +
           ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
            C2215 * C90 + C2216 * C91) *
               C89937 * C12024) *
              C89998 +
          (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
            C4630 * C90 + C4631 * C91) *
               C89937 * C90027 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C90026 -
           ((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C91 +
            (C416 * C6324 + C6651 + C6651 + C89926 * C6647) * C90 +
            (C416 * C6325 + C6652 + C6652 + C89926 * C6648) * C89) *
               C89937 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C90026 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C90027 +
           (C27692 * C26053 + C27693 * C26054 + C36116 * C26055) * C12024) *
              C89998 +
          ((C29982 * C26053 + C29983 * C26054 + C31929 * C26055) * C90027 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C90026 -
           ((C416 * C31593 + C31925 + C31925 + C89926 * C31921) * C89783 *
                C26055 +
            C31929 * C26054 + C29983 * C26053) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C90026 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C90027 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
            C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
               C89783 * C12024) *
              C89998 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C90027 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C90026 -
           ((C273 * C19120 + C89937 * C19453) * C13336 +
            (C273 * C19030 + C89937 * C19196) * C13403 + C19460 * C13335 +
            C19209 * C13402 + C19459 * C13334 + C19207 * C13401) *
               C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C90026 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C90027 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C12024) *
              C89998 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C90027 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C90026 -
           (((C273 * C6409 + C89937 * C6726) * C89926 +
             (C273 * C6323 + C89937 * C6489) * C186) *
                C91 +
            ((C273 * C6410 + C89937 * C6727) * C89926 +
             (C273 * C6324 + C89937 * C6490) * C186) *
                C90 +
            ((C273 * C6411 + C89937 * C6728) * C89926 +
             (C273 * C6325 + C89937 * C6491) * C186) *
                C89) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C90026 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C90027 +
           ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
             C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                C186 +
            (C26159 * C1873 + C26053 * C2293 + C26160 * C10682 +
             C26054 * C10903 + C26161 * C27344 + C26055 * C27768) *
                C89926) *
               C89783 * C12024) *
              C89998 +
          (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 + C26054 * C6491 +
             C26161 * C23356 + C26055 * C23469) *
                C186 +
            (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 + C26054 * C6728 +
             C26161 * C23415 + C26055 * C23630) *
                C89926) *
               C89783 * C90027 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C90026 -
           ((C26161 * C31676 + C26055 * C32003 + C26160 * C23415 +
             C26054 * C23630 + C26159 * C6411 + C26053 * C6728) *
                C89926 +
            (C26161 * C31593 + C26055 * C31761 + C26160 * C23356 +
             C26054 * C23469 + C26159 * C6325 + C26053 * C6491) *
                C186) *
               C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C90026 -
           (C21812 * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C90027 +
           (((C13338 * C1763 + C89783 * C1771) * C273 +
             (C13338 * C1987 + C89783 * C2395) * C89937) *
                C13334 +
            (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
               C12024) *
              C89998 +
          (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
            (C21813 + C21817) * C13336) *
               C90027 -
           (C18843 * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C90026 -
           (((C13338 * C19196 + C89783 * C19534) * C89937 +
             (C13338 * C19030 + C89783 * C19031) * C273) *
                C13336 +
            (C19545 + C19539) * C13335 + (C19544 + C19536) * C13334) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C90026 -
           ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
             C101 * C1986 + C89 * C2394) *
                C89937 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C273) *
               C89926 * C90027 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C273 +
            (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
             C105 * C1989 + C91 * C2397) *
                C89937) *
               C89926 * C12024) *
              C89998 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C273 +
            (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
             C105 * C4395 + C91 * C4843) *
                C89937) *
               C89926 * C90027 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C90026 -
           ((C105 * C6489 + C91 * C6803 + C103 * C6490 + C90 * C6804 +
             C101 * C6491 + C89 * C6805) *
                C89937 +
            (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
             C101 * C6325 + C89 * C6328) *
                C273) *
               C89926 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C90026 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C90027 +
           (C27567 * C26159 + C27860 * C26053 + C27570 * C26160 +
            C27861 * C26054 + C36055 * C26161 + C36221 * C26055) *
               C89926 * C12024) *
              C89998 +
          ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
            C19542 * C26054 + C31844 * C26161 + C32082 * C26055) *
               C89926 * C90027 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C90026 -
           ((C13338 * C31761 + C89783 * C32078) * C26055 +
            (C13338 * C31593 + C89783 * C31594) * C26161 + C32082 * C26054 +
            C31844 * C26160 + C19542 * C26053 + C19298 * C26159) *
               C89926 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C90026 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C90027 +
           ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
             C13403 * C14727 + C13336 * C14819) *
                C273 +
            (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
             C13403 * C14897 + C13336 * C15291) *
                C89937) *
               C89783 * C12024) *
              C89998 +
          (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 + C13335 * C8678 +
             C13403 * C16849 + C13336 * C16979) *
                C273 +
            (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 + C13335 * C9149 +
             C13403 * C17081 + C13336 * C17668) *
                C89937) *
               C89783 * C90027 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C90026 -
           ((C13403 * C19196 + C13336 * C19619 + C13402 * C14897 +
             C13335 * C15291 + C13401 * C6491 + C13334 * C6882) *
                C89937 +
            (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
             C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                C273) *
               C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C90026 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C90027 +
           (((C186 * C1763 + C89926 * C1873) * C273 +
             (C186 * C1987 + C89926 * C2477) * C89937) *
                C89 +
            (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
               C12024) *
              C89998 +
          ((((C186 * C4159 + C89926 * C4275) * C273 +
             (C186 * C4393 + C89926 * C4943) * C89937) *
                C89 +
            (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
               C90027 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C90026 -
           (((C186 * C6489 + C89926 * C6880) * C89937 +
             (C186 * C6323 + C89926 * C6409) * C273) *
                C91 +
            ((C186 * C6490 + C89926 * C6881) * C89937 +
             (C186 * C6324 + C89926 * C6410) * C273) *
                C90 +
            ((C186 * C6491 + C89926 * C6882) * C89937 +
             (C186 * C6325 + C89926 * C6411) * C273) *
                C89) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C90026 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C90027 +
           (C27371 * C26159 + C27950 * C26053 + C27374 * C26160 +
            C27951 * C26054 + C35943 * C26161 + C36275 * C26055) *
               C89783 * C12024) *
              C89998 +
          ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
            C30292 * C26054 + C31684 * C26161 + C32160 * C26055) *
               C89783 * C90027 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C90026 -
           ((C186 * C31761 + C89926 * C32156) * C26055 +
            (C186 * C31593 + C89926 * C31676) * C26161 + C32160 * C26054 +
            C31684 * C26160 + C30292 * C26053 + C29642 * C26159) *
               C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C90026 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            C19705 * C13335 + C19706 * C13336) *
               C89783 * C12024) *
              C89998 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C90027 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C90026 -
           ((C711 * C19030 + C19700 + C19700 + C89937 * C19694) * C13336 +
            C19706 * C13335 + C19705 * C13334) *
               C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C90026 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C12024) *
              C89998 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C90027 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C90026 -
           ((C711 * C6323 + C6961 + C6961 + C89937 * C6957) * C89926 * C91 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C89926 * C90 +
            (C711 * C6325 + C6963 + C6963 + C89937 * C6959) * C89926 * C89) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C90026 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C90027 +
           (C26462 * C1763 + C28032 + C28032 + C26053 * C2579 +
            C26463 * C10620 + C28033 + C28033 + C26054 * C11062 +
            C26464 * C27231 + C28034 + C28034 + C26055 * C28026) *
               C89926 * C89783 * C12024) *
              C89998 +
          ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 + C26463 * C6325 +
            C30394 + C30394 + C26054 * C6959 + C26464 * C23356 + C30395 +
            C30395 + C26055 * C23786) *
               C89926 * C89783 * C90027 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C90026 -
           (C26464 * C31593 + C32236 + C32236 + C26055 * C32234 +
            C26463 * C23356 + C32237 + C32237 + C26054 * C23786 +
            C26462 * C6325 + C32238 + C32238 + C26053 * C6959) *
               C89926 * C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
                C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                   C89937 * C89926 * C9304 -
               (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 +
                C1786 + C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 +
                C89 * C1778) *
                   C89937 * C89926 * C89907) *
                  C89827 * C5151 +
              ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 +
                C1792 + C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 +
                C91 * C1782) *
                   C89937 * C89926 * C89907 -
               (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
                C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                   C89937 * C89926 * C9304) *
                  C89827 * C5152 +
              ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 +
                C132 + C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
                   C89937 * C89926 * C9304 -
               (C104 * C3416 + C3420 + C3420 + C91 * C3418 + C102 * C1766 +
                C3421 + C3421 + C90 * C1782 + C100 * C1760 + C3422 + C3422 +
                C89 * C1776) *
                   C89937 * C89926 * C89907) *
                  C89827 * C5153) +
         0.5 * std::pow(Pi, 2.5) *
             (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
                C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                   C89937 * C89926 * C9304 -
               (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 +
                C1786 + C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 +
                C89 * C1778) *
                   C89937 * C89926 * C89907) *
                  C822 +
              ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 +
                C4173 + C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 +
                C91 * C4169) *
                   C89937 * C89926 * C89907 -
               (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
                C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                   C89937 * C89926 * C9304) *
                  C823 +
              ((C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 +
                C856 + C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
                   C89937 * C89926 * C9304 -
               (C104 * C8590 + C8600 + C8600 + C91 * C8596 + C102 * C8591 +
                C8601 + C8601 + C90 * C8597 + C100 * C8592 + C8602 + C8602 +
                C89 * C8598) *
                   C89937 * C89926 * C89907) *
                  C824) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C10614 -
          (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
           C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
              C89937 * C89926 * C10615 +
          (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
           C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
              C89937 * C89926 * C10616 -
          (C104 * C10618 + C10628 + C10628 + C91 * C10624 + C102 * C10619 +
           C10629 + C10629 + C90 * C10625 + C100 * C10620 + C10630 + C10630 +
           C89 * C10626) *
              C89937 * C89926 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5151 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            C16880 * C13335 + C16881 * C13336) *
               C89907 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C9304) *
              C89827 * C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C9304 -
           ((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C89937 *
                C13336 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C89937 *
                C13335 +
            (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C822 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C9304) *
              C823 +
          ((C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C9304 -
           ((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C89937 *
                C13336 +
            C21338 * C13335 + C16878 * C13334) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           C13884 * C13335 + C13885 * C13336) *
              C10614 -
          (C16878 * C13336 + C16879 * C13335 +
           (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
               C13334) *
              C10615 +
          ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
               C13334 +
           C19045 * C13335 + C19046 * C13336) *
              C10616 -
          ((C13337 * C23355 + C23362 + C23362 + C89783 * C23359) * C89937 *
               C13336 +
           (C13337 * C23356 + C23363 + C23363 + C89783 * C23360) * C89937 *
               C13335 +
           (C13337 * C10620 + C23364 + C23364 + C89783 * C10626) * C89937 *
               C13334) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C9304 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C89907) *
              C89827 * C5151 +
          ((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
               C89907 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
            C28794 * C26054 + C28795 * C26055) *
               C89926 * C9304 -
           ((C13337 * C10618 + C28789 + C28789 + C89783 * C10624) * C26055 +
            C28795 * C26054 + C28794 * C26053) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C9304 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C89907) *
              C822 +
          ((C16875 * C26053 + C19043 * C26054 + C31602 * C26055) * C89926 *
               C89907 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C9304) *
              C823 +
          ((C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
               C9304 -
           ((C13337 * C23355 + C23362 + C23362 + C89783 * C23359) * C26055 +
            C19044 * C26054 + C16874 * C26053) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
           C27265 * C26054 + C27266 * C26055) *
              C89926 * C10614 -
          (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
              C10615 +
          (C27266 * C26053 + C27267 * C26054 + C35885 * C26055) * C89926 *
              C10616 -
          ((C13337 * C35876 + C35882 + C35882 + C89783 * C35878) * C26055 +
           C35885 * C26054 + C27267 * C26053) *
              C89926 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] += (0.5 * std::pow(Pi, 2.5) *
                       ((((C186 * C106 + C89926 * C187) * C101 +
                          (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                          C217 * C90 + C218 * C105 + C219 * C91) *
                             C89937 * C9304 -
                         (C1903 * C91 + C1904 * C105 + C1905 * C90 +
                          C1906 * C103 + (C186 * C1770 + C89926 * C1880) * C89 +
                          (C186 * C1762 + C89926 * C1872) * C101) *
                             C89937 * C89907) *
                            C89827 * C5151 +
                        ((C1906 * C101 + C1905 * C89 + C1904 * C103 +
                          C1903 * C90 + C3503 * C105 + C3504 * C91) *
                             C89937 * C89907 -
                         (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                          C217 * C89 + C216 * C101) *
                             C89937 * C9304) *
                            C89827 * C5152 +
                        ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                          C222 * C105 + C223 * C91) *
                             C89937 * C9304 -
                         ((C186 * C3417 + C89926 * C3497) * C91 +
                          (C186 * C3416 + C89926 * C3496) * C105 + C3504 * C90 +
                          C3503 * C103 + C1903 * C89 + C1904 * C101) *
                             C89937 * C89907) *
                            C89827 * C5153) +
                   0.5 * std::pow(Pi, 2.5) *
                       ((((C186 * C106 + C89926 * C187) * C101 +
                          (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                          C217 * C90 + C218 * C105 + C219 * C91) *
                             C89937 * C9304 -
                         (C1903 * C91 + C1904 * C105 + C1905 * C90 +
                          C1906 * C103 + (C186 * C1770 + C89926 * C1880) * C89 +
                          (C186 * C1762 + C89926 * C1872) * C101) *
                             C89937 * C89907) *
                            C822 +
                        (((C186 * C4159 + C89926 * C4275) * C101 +
                          (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                          C4293 * C90 + C4294 * C105 + C4295 * C91) *
                             C89937 * C89907 -
                         (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                          (C186 * C837 + C89926 * C947) * C89 +
                          (C186 * C829 + C89926 * C939) * C101) *
                             C89937 * C9304) *
                            C823 +
                        (((C186 * C830 + C89926 * C940) * C101 +
                          (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                          C975 * C90 + C976 * C105 + C977 * C91) *
                             C89937 * C9304 -
                         ((C186 * C8593 + C89926 * C8679) * C91 +
                          (C186 * C8590 + C89926 * C8676) * C105 +
                          (C186 * C8594 + C89926 * C8680) * C90 +
                          (C186 * C8591 + C89926 * C8677) * C103 +
                          (C186 * C8595 + C89926 * C8681) * C89 +
                          (C186 * C8592 + C89926 * C8678) * C101) *
                             C89937 * C89907) *
                            C824) *
                       C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C10614 -
                    (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                     (C186 * C1770 + C89926 * C1880) * C89 +
                     (C186 * C1762 + C89926 * C1872) * C101) *
                        C89937 * C10615 +
                    ((C186 * C1763 + C89926 * C1873) * C101 +
                     (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                     C1908 * C90 + C1909 * C105 + C1910 * C91) *
                        C89937 * C10616 -
                    ((C186 * C10621 + C89926 * C10683) * C91 +
                     (C186 * C10618 + C89926 * C10680) * C105 +
                     (C186 * C10622 + C89926 * C10684) * C90 +
                     (C186 * C10619 + C89926 * C10681) * C103 +
                     (C186 * C10623 + C89926 * C10685) * C89 +
                     (C186 * C10620 + C89926 * C10682) * C101) *
                        C89937 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8593 + C13336 * C8679 + C13402 * C4165 +
                       C13335 * C4281 + C13401 * C1768 + C13334 * C1878) *
                          C89783 +
                      (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 +
                       C13335 * C4277 + C13401 * C1760 + C13334 * C1870) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C822 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C9304) *
                        C823 +
                    (((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C21329 + C13336 * C21413 + C13402 * C16851 +
                       C13335 * C16981 + C13401 * C8595 + C13334 * C8681) *
                          C89783 +
                      (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
                       C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                          C13338) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C10614 -
                    ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                      C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                         C89783 +
                     (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                      C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                         C13338) *
                        C89937 * C10615 +
                    ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                      C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                         C13338 +
                     (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                      C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                         C89783) *
                        C89937 * C10616 -
                    ((C13403 * C23357 + C13336 * C23416 + C13402 * C23358 +
                      C13335 * C23417 + C13401 * C10623 + C13334 * C10685) *
                         C89783 +
                     (C13403 * C23355 + C13336 * C23414 + C13402 * C23356 +
                      C13335 * C23415 + C13401 * C10620 + C13334 * C10682) *
                         C13338) *
                        C89937 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C9304 -
                     ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C89907) *
                        C89827 * C5151 +
                    (((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
                      (C27384 + C27385) * C26055) *
                         C89907 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C9304) *
                        C89827 * C5152 +
                    (((C218 * C13338 + C219 * C89783) * C26053 +
                      (C28870 + C28871) * C26054 + (C28872 + C28873) * C26055) *
                         C9304 -
                     (((C186 * C10621 + C89926 * C10683) * C89783 +
                       (C186 * C10618 + C89926 * C10680) * C13338) *
                          C26055 +
                      (C28873 + C28872) * C26054 + (C28871 + C28870) * C26053) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C9304 -
                     ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C89907) *
                        C822 +
                    (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
                      (C31686 + C31687) * C26055) *
                         C89907 -
                     (C31683 * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C9304) *
                        C823 +
                    ((((C186 * C830 + C89926 * C940) * C13338 +
                       (C186 * C838 + C89926 * C948) * C89783) *
                          C26053 +
                      (C33947 + C33948) * C26054 + (C33949 + C33950) * C26055) *
                         C9304 -
                     (((C186 * C23357 + C89926 * C23416) * C89783 +
                       (C186 * C23355 + C89926 * C23414) * C13338) *
                          C26055 +
                      (C33950 + C33949) * C26054 + (C33948 + C33947) * C26053) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C13338 +
                      (C186 * C112 + C89926 * C193) * C89783) *
                         C26053 +
                     (C27378 + C27379) * C26054 + C27386 * C26055) *
                        C10614 -
                    (C35938 * C26055 + (C27381 + C27380) * C26054 +
                     (C27379 + C27378) * C26053) *
                        C10615 +
                    (C27386 * C26053 + (C27383 + C27382) * C26054 +
                     (C35945 + C35946) * C26055) *
                        C10616 -
                    (((C186 * C35877 + C89926 * C35936) * C89783 +
                      (C186 * C35876 + C89926 * C35935) * C13338) *
                         C26055 +
                     (C35946 + C35945) * C26054 + C35938 * C26053) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[42] += (0.5 * std::pow(Pi, 2.5) *
                       ((((C273 * C106 + C89937 * C274) * C101 +
                          (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                          C304 * C90 + C305 * C105 + C306 * C91) *
                             C89926 * C9304 -
                         (C2017 * C91 + C2018 * C105 + C2019 * C90 +
                          C2020 * C103 + (C273 * C1770 + C89937 * C1994) * C89 +
                          (C273 * C1762 + C89937 * C1986) * C101) *
                             C89926 * C89907) *
                            C89827 * C5151 +
                        ((C2020 * C101 + C2019 * C89 + C2018 * C103 +
                          C2017 * C90 + C3585 * C105 + C3586 * C91) *
                             C89926 * C89907 -
                         (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                          C304 * C89 + C303 * C101) *
                             C89926 * C9304) *
                            C89827 * C5152 +
                        ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                          C309 * C105 + C310 * C91) *
                             C89926 * C9304 -
                         ((C273 * C3417 + C89937 * C3579) * C91 +
                          (C273 * C3416 + C89937 * C3578) * C105 + C3586 * C90 +
                          C3585 * C103 + C2017 * C89 + C2018 * C101) *
                             C89926 * C89907) *
                            C89827 * C5153) +
                   0.5 * std::pow(Pi, 2.5) *
                       ((((C273 * C106 + C89937 * C274) * C101 +
                          (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                          C304 * C90 + C305 * C105 + C306 * C91) *
                             C89926 * C9304 -
                         (C2017 * C91 + C2018 * C105 + C2019 * C90 +
                          C2020 * C103 + (C273 * C1770 + C89937 * C1994) * C89 +
                          (C273 * C1762 + C89937 * C1986) * C101) *
                             C89926 * C89907) *
                            C822 +
                        (((C273 * C4159 + C89937 * C4393) * C101 +
                          (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                          C4411 * C90 + C4412 * C105 + C4413 * C91) *
                             C89926 * C89907 -
                         (C1084 * C91 + C1085 * C105 + C1086 * C90 +
                          C1087 * C103 + (C273 * C837 + C89937 * C1061) * C89 +
                          (C273 * C829 + C89937 * C1053) * C101) *
                             C89926 * C9304) *
                            C823 +
                        (((C273 * C830 + C89937 * C1054) * C101 +
                          (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                          C1089 * C90 + C1090 * C105 + C1091 * C91) *
                             C89926 * C9304 -
                         ((C273 * C8593 + C89937 * C8759) * C91 +
                          (C273 * C8590 + C89937 * C8756) * C105 +
                          (C273 * C8594 + C89937 * C8760) * C90 +
                          (C273 * C8591 + C89937 * C8757) * C103 +
                          (C273 * C8595 + C89937 * C8761) * C89 +
                          (C273 * C8592 + C89937 * C8758) * C101) *
                             C89926 * C89907) *
                            C824) *
                       C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C10614 -
                    (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                     (C273 * C1770 + C89937 * C1994) * C89 +
                     (C273 * C1762 + C89937 * C1986) * C101) *
                        C89926 * C10615 +
                    ((C273 * C1763 + C89937 * C1987) * C101 +
                     (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                     C2022 * C90 + C2023 * C105 + C2024 * C91) *
                        C89926 * C10616 -
                    ((C273 * C10621 + C89937 * C10739) * C91 +
                     (C273 * C10618 + C89937 * C10736) * C105 +
                     (C273 * C10622 + C89937 * C10740) * C90 +
                     (C273 * C10619 + C89937 * C10737) * C103 +
                     (C273 * C10623 + C89937 * C10741) * C89 +
                     (C273 * C10620 + C89937 * C10738) * C101) *
                        C89926 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C89827 * C5151 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                         C89907 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C9304) *
                        C89827 * C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C9304 -
                     (((C273 * C8593 + C89937 * C8759) * C89783 +
                       (C273 * C8590 + C89937 * C8756) * C13338) *
                          C13336 +
                      (C4413 * C89783 + C4412 * C13338) * C13335 +
                      (C2017 * C89783 + C2018 * C13338) * C13334) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C822 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C89907 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C9304) *
                        C823 +
                    ((C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C9304 -
                     (((C273 * C21329 + C89937 * C21489) * C89783 +
                       (C273 * C21328 + C89937 * C21488) * C13338) *
                          C13336 +
                      (C21499 + C21498) * C13335 + C21491 * C13334) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     (C14075 + C14076) * C13335 + C14083 * C13336) *
                        C10614 -
                    (C21491 * C13336 + (C17108 + C17109) * C13335 +
                     ((C273 * C1770 + C89937 * C1994) * C89783 +
                      (C273 * C1762 + C89937 * C1986) * C13338) *
                         C13334) *
                        C10615 +
                    (((C273 * C1763 + C89937 * C1987) * C13338 +
                      (C273 * C1771 + C89937 * C1995) * C89783) *
                         C13334 +
                     (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                        C10616 -
                    (((C273 * C23357 + C89937 * C23470) * C89783 +
                      (C273 * C23355 + C89937 * C23468) * C13338) *
                         C13336 +
                     ((C273 * C23358 + C89937 * C23471) * C89783 +
                      (C273 * C23356 + C89937 * C23469) * C13338) *
                         C13335 +
                     ((C273 * C10623 + C89937 * C10741) * C89783 +
                      (C273 * C10620 + C89937 * C10738) * C13338) *
                         C13334) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
                       C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                          C13338 +
                      (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 +
                       C26054 * C1996 + C26161 * C10622 + C26055 * C10740) *
                          C89783) *
                         C89926 * C89907 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    (((C26159 * C108 + C26053 * C276 + C26160 * C1760 +
                       C26054 * C1984 + C26161 * C1765 + C26055 * C1989) *
                          C13338 +
                      (C26159 * C114 + C26053 * C282 + C26160 * C1768 +
                       C26054 * C1992 + C26161 * C1773 + C26055 * C1997) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C10621 + C26055 * C10739 + C26160 * C1773 +
                       C26054 * C1997 + C26159 * C1768 + C26053 * C1992) *
                          C89783 +
                      (C26161 * C10618 + C26055 * C10736 + C26160 * C1765 +
                       C26054 * C1989 + C26159 * C1760 + C26053 * C1984) *
                          C13338) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C89907) *
                        C822 +
                    (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
                       C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                          C13338 +
                      (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
                       C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                          C89783) *
                         C89926 * C89907 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C9304) *
                        C823 +
                    (((C26159 * C830 + C26053 * C1054 + C26160 * C8592 +
                       C26054 * C8758 + C26161 * C14727 + C26055 * C14897) *
                          C13338 +
                      (C26159 * C838 + C26053 * C1062 + C26160 * C8595 +
                       C26054 * C8761 + C26161 * C14729 + C26055 * C14899) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C23357 + C26055 * C23470 + C26160 * C14729 +
                       C26054 * C14899 + C26159 * C8595 + C26053 * C8761) *
                          C89783 +
                      (C26161 * C23355 + C26055 * C23468 + C26160 * C14727 +
                       C26054 * C14897 + C26159 * C8592 + C26053 * C8758) *
                          C13338) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                      C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                         C13338 +
                     (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                      C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                         C89783) *
                        C89926 * C10614 -
                    ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                      C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                         C89783 +
                     (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                      C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                         C13338) *
                        C89926 * C10615 +
                    ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
                      C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                         C13338 +
                     (C26159 * C1771 + C26053 * C1995 + C26160 * C10623 +
                      C26054 * C10741 + C26161 * C27233 + C26055 * C27462) *
                         C89783) *
                        C89926 * C10616 -
                    ((C26161 * C35877 + C26055 * C35997 + C26160 * C27233 +
                      C26054 * C27462 + C26159 * C10623 + C26053 * C10741) *
                         C89783 +
                     (C26161 * C35876 + C26055 * C35996 + C26160 * C27231 +
                      C26054 * C27460 + C26159 * C10620 + C26053 * C10738) *
                         C13338) *
                        C89926 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C186 +
                (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
                 C105 * C189 + C91 * C362) *
                    C89926) *
                   C89937 * C9304 -
               ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
                 C101 * C1872 + C89 * C2100) *
                    C89926 +
                (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                 C101 * C1762 + C89 * C1770) *
                    C186) *
                   C89937 * C89907) *
                  C89827 * C5151 +
              (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
                 C105 * C1766 + C91 * C1774) *
                    C186 +
                (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
                 C105 * C1876 + C91 * C2104) *
                    C89926) *
                   C89937 * C89907 -
               ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
                 C101 * C188 + C89 * C361) *
                    C89926 +
                (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                 C101 * C107 + C89 * C113) *
                    C186) *
                   C89937 * C9304) *
                  C89827 * C5152 +
              (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                 C105 * C110 + C91 * C116) *
                    C186 +
                (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 +
                 C105 * C191 + C91 * C364) *
                    C89926) *
                   C89937 * C9304 -
               ((C105 * C3496 + C91 * C3660 + C103 * C1876 + C90 * C2104 +
                 C101 * C1870 + C89 * C2098) *
                    C89926 +
                (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
                 C101 * C1760 + C89 * C1768) *
                    C186) *
                   C89937 * C89907) *
                  C89827 * C5153) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C186 +
                (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
                 C105 * C189 + C91 * C362) *
                    C89926) *
                   C89937 * C9304 -
               ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
                 C101 * C1872 + C89 * C2100) *
                    C89926 +
                (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                 C101 * C1762 + C89 * C1770) *
                    C186) *
                   C89937 * C89907) *
                  C822 +
              (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
                 C105 * C4161 + C91 * C4165) *
                    C186 +
                (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
                 C105 * C4277 + C91 * C4513) *
                    C89926) *
                   C89937 * C89907 -
               ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
                 C101 * C939 + C89 * C1167) *
                    C89926 +
                (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                 C101 * C829 + C89 * C837) *
                    C186) *
                   C89937 * C9304) *
                  C823 +
              (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                 C105 * C832 + C91 * C840) *
                    C186 +
                (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
                 C105 * C942 + C91 * C1170) *
                    C89926) *
                   C89937 * C9304 -
               ((C105 * C8676 + C91 * C8836 + C103 * C8677 + C90 * C8837 +
                 C101 * C8678 + C89 * C8838) *
                    C89926 +
                (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
                 C101 * C8592 + C89 * C8595) *
                    C186) *
                   C89937 * C89907) *
                  C824) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C10614 -
          ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
            C101 * C1872 + C89 * C2100) *
               C89926 +
           (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
            C101 * C1762 + C89 * C1770) *
               C186) *
              C89937 * C10615 +
          ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
            C105 * C1765 + C91 * C1773) *
               C186 +
           (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
            C105 * C1875 + C91 * C2103) *
               C89926) *
              C89937 * C10616 -
          ((C105 * C10680 + C91 * C10792 + C103 * C10681 + C90 * C10793 +
            C101 * C10682 + C89 * C10794) *
               C89926 +
           (C105 * C10618 + C91 * C10621 + C103 * C10619 + C90 * C10622 +
            C101 * C10620 + C89 * C10623) *
               C186) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
            C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
               C89937 * C89907 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C9304 -
           ((C13338 * C8676 + C89783 * C8836) * C13336 +
            (C13338 * C8590 + C89783 * C8593) * C13403 +
            (C13338 * C4277 + C89783 * C4513) * C13335 +
            (C13338 * C4161 + C89783 * C4165) * C13402 +
            (C13338 * C1870 + C89783 * C2098) * C13334 +
            (C13338 * C1760 + C89783 * C1768) * C13401) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C822 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C89907 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C9304) *
              C823 +
          ((C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C9304 -
           ((C13338 * C21412 + C89783 * C21573) * C13336 +
            (C13338 * C21328 + C89783 * C21329) * C13403 + C21580 * C13335 +
            C21579 * C13402 + C17228 * C13334 + C17229 * C13401) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
           C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
              C89937 * C10614 -
          (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
           C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
           (C13338 * C1762 + C89783 * C1770) * C13401) *
              C89937 * C10615 +
          ((C13338 * C1763 + C89783 * C1771) * C13401 +
           (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
           C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
              C89937 * C10616 -
          ((C13338 * C23414 + C89783 * C23522) * C13336 +
           (C13338 * C23355 + C89783 * C23357) * C13403 +
           (C13338 * C23415 + C89783 * C23523) * C13335 +
           (C13338 * C23356 + C89783 * C23358) * C13402 +
           (C13338 * C10682 + C89783 * C10794) * C13334 +
           (C13338 * C10620 + C89783 * C10623) * C13401) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C9304 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C89907) *
              C89827 * C5151 +
          (((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
            (C27587 + C27588) * C26055) *
               C89907 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C9304) *
              C89827 * C5152 +
          ((((C13338 * C108 + C89783 * C114) * C186 +
             (C13338 * C189 + C89783 * C362) * C89926) *
                C26053 +
            (C29034 + C29035) * C26054 + (C29036 + C29037) * C26055) *
               C9304 -
           (((C13338 * C10680 + C89783 * C10792) * C89926 +
             (C13338 * C10618 + C89783 * C10621) * C186) *
                C26055 +
            (C29037 + C29036) * C26054 + (C29035 + C29034) * C26053) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C9304 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C89907) *
              C822 +
          (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
            (C31846 + C31847) * C26055) *
               C89907 -
           (C31843 * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C9304) *
              C823 +
          (((C14186 * C186 + C14187 * C89926) * C26053 +
            (C34099 + C34100) * C26054 + (C34101 + C34102) * C26055) *
               C9304 -
           (((C13338 * C23414 + C89783 * C23522) * C89926 +
             (C13338 * C23355 + C89783 * C23357) * C186) *
                C26055 +
            (C34102 + C34101) * C26054 + (C34100 + C34099) * C26053) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C186 +
            (C13338 * C187 + C89783 * C360) * C89926) *
               C26053 +
           (C27577 + C27578) * C26054 + C27589 * C26055) *
              C10614 -
          (C36050 * C26055 + (C27580 + C27579) * C26054 +
           (C27578 + C27577) * C26053) *
              C10615 +
          (C27589 * C26053 + (C27582 + C27581) * C26054 +
           (C36057 + C36058) * C26055) *
              C10616 -
          (((C13338 * C35935 + C89783 * C36048) * C89926 +
            (C13338 * C35876 + C89783 * C35877) * C186) *
               C26055 +
           (C36058 + C36057) * C26054 + C36050 * C26053) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
                C447 * C91) *
                   C89937 * C9304 -
               (C2213 * C91 + C2214 * C90 +
                (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                   C89937 * C89907) *
                  C89827 * C5151 +
              ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
               (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C9304) *
                  C89827 * C5152 +
              ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C9304 -
               ((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C91 +
                C3742 * C90 + C2213 * C89) *
                   C89937 * C89907) *
                  C89827 * C5153) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
                C447 * C91) *
                   C89937 * C9304 -
               (C2213 * C91 + C2214 * C90 +
                (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                   C89937 * C89907) *
                  C822 +
              (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
                C4630 * C90 + C4631 * C91) *
                   C89937 * C89907 -
               (C1280 * C91 + C1281 * C90 +
                (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                   C89937 * C9304) *
                  C823 +
              (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 +
                C1282 * C90 + C1283 * C91) *
                   C89937 * C9304 -
               ((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C91 +
                (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C90 +
                (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89) *
                   C89937 * C89907) *
                  C824) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C10614 -
          (C2213 * C91 + C2214 * C90 +
           (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
              C89937 * C10615 +
          ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 + C2215 * C90 +
           C2216 * C91) *
              C89937 * C10616 -
          ((C416 * C10618 + C10849 + C10849 + C89926 * C10845) * C91 +
           (C416 * C10619 + C10850 + C10850 + C89926 * C10846) * C90 +
           (C416 * C10620 + C10851 + C10851 + C89926 * C10847) * C89) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C89827 * C5151 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C89907 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C9304) *
              C89827 * C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C9304 -
           (C13556 * C8590 + C16453 + C16453 + C13336 * C8913 + C13555 * C4161 +
            C16454 + C16454 + C13335 * C4615 + C13554 * C1760 + C16455 +
            C16455 + C13334 * C2180) *
               C89783 * C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C822 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C89907 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C9304) *
              C823 +
          ((C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C9304 -
           (C13556 * C21328 + C21656 + C21656 + C13336 * C21654 +
            C13555 * C16849 + C21657 + C21657 + C13335 * C17333 +
            C13554 * C8592 + C21658 + C21658 + C13334 * C8915) *
               C89783 * C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C10614 -
          (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
           C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 + C15056 +
           C13334 * C2182) *
              C89783 * C89937 * C10615 +
          (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
           C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
           C15059 + C13336 * C15051) *
              C89783 * C89937 * C10616 -
          (C13556 * C23355 + C23577 + C23577 + C13336 * C23574 +
           C13555 * C23356 + C23578 + C23578 + C13335 * C23575 +
           C13554 * C10620 + C23579 + C23579 + C13334 * C10847) *
              C89783 * C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C9304 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
              C89827 * C5151 +
          ((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C89907 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C9304) *
              C89827 * C5152 +
          ((C447 * C89783 * C26053 + C29112 * C26054 + C29113 * C26055) *
               C9304 -
           ((C416 * C10618 + C10849 + C10849 + C89926 * C10845) * C89783 *
                C26055 +
            C29113 * C26054 + C29112 * C26053) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C9304 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
              C822 +
          ((C29982 * C26053 + C29983 * C26054 + C31929 * C26055) * C89907 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C9304) *
              C823 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
            C34188 * C26054 + C34189 * C26055) *
               C9304 -
           ((C416 * C23355 + C34181 + C34181 + C89926 * C23574) * C89783 *
                C26055 +
            C34189 * C26054 + C34188 * C26053) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
           C27691 * C26054 + C27692 * C26055) *
              C10614 -
          (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C10615 +
          (C27692 * C26053 + C27693 * C26054 + C36116 * C26055) * C10616 -
          ((C416 * C35876 + C36112 + C36112 + C89926 * C36108) * C89783 *
               C26055 +
           C36116 * C26054 + C27693 * C26053) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C273 * C106 + C89937 * C274) * C186 +
                 (C273 * C187 + C89937 * C499) * C89926) *
                    C89 +
                (C506 + C522) * C90 + C526 * C91) *
                   C9304 -
               (C3818 * C91 + (C2316 + C2304) * C90 +
                ((C273 * C1872 + C89937 * C2292) * C89926 +
                 (C273 * C1762 + C89937 * C1986) * C186) *
                    C89) *
                   C89907) *
                  C89827 * C5151 +
              (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
                (C3819 + C3823) * C91) *
                   C89907 -
               (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) *
                   C9304) *
                  C89827 * C5152 +
              ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) *
                   C9304 -
               (((C273 * C3496 + C89937 * C3816) * C89926 +
                 (C273 * C3416 + C89937 * C3578) * C186) *
                    C91 +
                (C3823 + C3819) * C90 + C3818 * C89) *
                   C89907) *
                  C89827 * C5153) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C273 * C106 + C89937 * C274) * C186 +
                 (C273 * C187 + C89937 * C499) * C89926) *
                    C89 +
                (C506 + C522) * C90 + C526 * C91) *
                   C9304 -
               (C3818 * C91 + (C2316 + C2304) * C90 +
                ((C273 * C1872 + C89937 * C2292) * C89926 +
                 (C273 * C1762 + C89937 * C1986) * C186) *
                    C89) *
                   C89907) *
                  C822 +
              ((((C273 * C4159 + C89937 * C4393) * C186 +
                 (C273 * C4275 + C89937 * C4729) * C89926) *
                    C89 +
                (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
                   C89907 -
               (C3097 * C91 + (C1383 + C1371) * C90 +
                ((C273 * C939 + C89937 * C1359) * C89926 +
                 (C273 * C829 + C89937 * C1053) * C186) *
                    C89) *
                   C9304) *
                  C823 +
              ((((C273 * C830 + C89937 * C1054) * C186 +
                 (C273 * C940 + C89937 * C1360) * C89926) *
                    C89 +
                (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
                   C9304 -
               (((C273 * C8676 + C89937 * C8993) * C89926 +
                 (C273 * C8590 + C89937 * C8756) * C186) *
                    C91 +
                ((C273 * C8677 + C89937 * C8994) * C89926 +
                 (C273 * C8591 + C89937 * C8757) * C186) *
                    C90 +
                ((C273 * C8678 + C89937 * C8995) * C89926 +
                 (C273 * C8592 + C89937 * C8758) * C186) *
                    C89) *
                   C89907) *
                  C824) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C10614 -
          (C3818 * C91 + (C2316 + C2304) * C90 +
           ((C273 * C1872 + C89937 * C2292) * C89926 +
            (C273 * C1762 + C89937 * C1986) * C186) *
               C89) *
              C10615 +
          (((C273 * C1763 + C89937 * C1987) * C186 +
            (C273 * C1873 + C89937 * C2293) * C89926) *
               C89 +
           (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
              C10616 -
          (((C273 * C10680 + C89937 * C10901) * C89926 +
            (C273 * C10618 + C89937 * C10736) * C186) *
               C91 +
           ((C273 * C10681 + C89937 * C10902) * C89926 +
            (C273 * C10619 + C89937 * C10737) * C186) *
               C90 +
           ((C273 * C10682 + C89937 * C10903) * C89926 +
            (C273 * C10620 + C89937 * C10738) * C186) *
               C89) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            C17104 * C13403 + C17450 * C13336) *
               C89783 * C89907 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C9304) *
              C89827 * C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C9304 -
           ((C273 * C8676 + C89937 * C8993) * C13336 +
            (C273 * C8590 + C89937 * C8756) * C13403 + C4741 * C13335 +
            C4412 * C13402 + C2311 * C13334 + C2018 * C13401) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C822 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C89907 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C9304) *
              C823 +
          ((C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C9304 -
           ((C273 * C21412 + C89937 * C21732) * C13336 +
            (C273 * C21328 + C89937 * C21488) * C13403 + C21736 * C13335 +
            C21496 * C13402 + C17448 * C13334 + C17101 * C13401) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
           C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
              C89783 * C10614 -
          (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
           C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
           (C273 * C1762 + C89937 * C1986) * C13401) *
              C89783 * C10615 +
          ((C273 * C1763 + C89937 * C1987) * C13401 +
           (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
           C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
              C89783 * C10616 -
          ((C273 * C23414 + C89937 * C23629) * C13336 +
           (C273 * C23355 + C89937 * C23468) * C13403 +
           (C273 * C23415 + C89937 * C23630) * C13335 +
           (C273 * C23356 + C89937 * C23469) * C13402 +
           (C273 * C10682 + C89937 * C10903) * C13334 +
           (C273 * C10620 + C89937 * C10738) * C13401) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 + C26054 * C1988 +
             C26161 * C10619 + C26055 * C10737) *
                C186 +
            (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 + C26054 * C2294 +
             C26161 * C10681 + C26055 * C10902) *
                C89926) *
               C89783 * C89907 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
             C26161 * C1765 + C26055 * C1989) *
                C186 +
            (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
             C26161 * C1875 + C26055 * C2295) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C10680 + C26055 * C10901 + C26160 * C1875 +
             C26054 * C2295 + C26159 * C1870 + C26053 * C2290) *
                C89926 +
            (C26161 * C10618 + C26055 * C10736 + C26160 * C1765 +
             C26054 * C1989 + C26159 * C1760 + C26053 * C1984) *
                C186) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C89907) *
              C822 +
          (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 + C26054 * C6491 +
             C26161 * C23356 + C26055 * C23469) *
                C186 +
            (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 + C26054 * C6728 +
             C26161 * C23415 + C26055 * C23630) *
                C89926) *
               C89783 * C89907 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C9304) *
              C823 +
          (((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
             C26161 * C14727 + C26055 * C14897) *
                C186 +
            (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
             C26161 * C14819 + C26055 * C15139) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C23414 + C26055 * C23629 + C26160 * C14819 +
             C26054 * C15139 + C26159 * C8678 + C26053 * C8995) *
                C89926 +
            (C26161 * C23355 + C26055 * C23468 + C26160 * C14727 +
             C26054 * C14897 + C26159 * C8592 + C26053 * C8758) *
                C186) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
            C26161 * C1763 + C26055 * C1987) *
               C186 +
           (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
            C26161 * C1873 + C26055 * C2293) *
               C89926) *
              C89783 * C10614 -
          ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
            C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
               C89926 +
           (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
            C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
               C186) *
              C89783 * C10615 +
          ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
            C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
               C186 +
           (C26159 * C1873 + C26053 * C2293 + C26160 * C10682 +
            C26054 * C10903 + C26161 * C27344 + C26055 * C27768) *
               C89926) *
              C89783 * C10616 -
          ((C26161 * C35935 + C26055 * C36166 + C26160 * C27344 +
            C26054 * C27768 + C26159 * C10682 + C26053 * C10903) *
               C89926 +
           (C26161 * C35876 + C26055 * C35996 + C26160 * C27231 +
            C26054 * C27460 + C26159 * C10620 + C26053 * C10738) *
               C186) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C273 +
                (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                 C105 * C276 + C91 * C579) *
                    C89937) *
                   C89926 * C9304 -
               ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                 C101 * C1986 + C89 * C2394) *
                    C89937 +
                (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                 C101 * C1762 + C89 * C1770) *
                    C273) *
                   C89926 * C89907) *
                  C89827 * C5151 +
              (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
                 C105 * C1766 + C91 * C1774) *
                    C273 +
                (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
                 C105 * C1990 + C91 * C2398) *
                    C89937) *
                   C89926 * C89907 -
               ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                 C101 * C275 + C89 * C578) *
                    C89937 +
                (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                 C101 * C107 + C89 * C113) *
                    C273) *
                   C89926 * C9304) *
                  C89827 * C5152 +
              (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                 C105 * C110 + C91 * C116) *
                    C273 +
                (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                 C105 * C278 + C91 * C581) *
                    C89937) *
                   C89926 * C9304 -
               ((C105 * C3578 + C91 * C3897 + C103 * C1990 + C90 * C2398 +
                 C101 * C1984 + C89 * C2392) *
                    C89937 +
                (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
                 C101 * C1760 + C89 * C1768) *
                    C273) *
                   C89926 * C89907) *
                  C89827 * C5153) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                 C105 * C108 + C91 * C114) *
                    C273 +
                (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                 C105 * C276 + C91 * C579) *
                    C89937) *
                   C89926 * C9304 -
               ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                 C101 * C1986 + C89 * C2394) *
                    C89937 +
                (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                 C101 * C1762 + C89 * C1770) *
                    C273) *
                   C89926 * C89907) *
                  C822 +
              (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
                 C105 * C4161 + C91 * C4165) *
                    C273 +
                (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
                 C105 * C4395 + C91 * C4843) *
                    C89937) *
                   C89926 * C89907 -
               ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                 C101 * C1053 + C89 * C1461) *
                    C89937 +
                (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                 C101 * C829 + C89 * C837) *
                    C273) *
                   C89926 * C9304) *
                  C823 +
              (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                 C105 * C832 + C91 * C840) *
                    C273 +
                (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                 C105 * C1056 + C91 * C1464) *
                    C89937) *
                   C89926 * C9304 -
               ((C105 * C8756 + C91 * C9070 + C103 * C8757 + C90 * C9071 +
                 C101 * C8758 + C89 * C9072) *
                    C89937 +
                (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
                 C101 * C8592 + C89 * C8595) *
                    C273) *
                   C89926 * C89907) *
                  C824) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C273 +
           (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
            C91 * C579) *
               C89937) *
              C89926 * C10614 -
          ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
            C101 * C1986 + C89 * C2394) *
               C89937 +
           (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
            C101 * C1762 + C89 * C1770) *
               C273) *
              C89926 * C10615 +
          ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
            C105 * C1765 + C91 * C1773) *
               C273 +
           (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
            C105 * C1989 + C91 * C2397) *
               C89937) *
              C89926 * C10616 -
          ((C105 * C10736 + C91 * C10954 + C103 * C10737 + C90 * C10955 +
            C101 * C10738 + C89 * C10956) *
               C89937 +
           (C105 * C10618 + C91 * C10621 + C103 * C10619 + C90 * C10622 +
            C101 * C10620 + C89 * C10623) *
               C273) *
              C89926 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C9304 -
           (C21812 * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C89907) *
              C89827 * C5151 +
          ((((C13338 * C1761 + C89783 * C1769) * C273 +
             (C13338 * C1985 + C89783 * C2393) * C89937) *
                C13334 +
            (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
               C89907 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C9304) *
              C89827 * C5152 +
          ((((C13338 * C108 + C89783 * C114) * C273 +
             (C13338 * C276 + C89783 * C579) * C89937) *
                C13334 +
            (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
               C9304 -
           (((C13338 * C8756 + C89783 * C9070) * C89937 +
             (C13338 * C8590 + C89783 * C8593) * C273) *
                C13336 +
            ((C13338 * C4395 + C89783 * C4843) * C89937 +
             (C13338 * C4161 + C89783 * C4165) * C273) *
                C13335 +
            ((C13338 * C1984 + C89783 * C2392) * C89937 +
             (C13338 * C1760 + C89783 * C1768) * C273) *
                C13334) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C9304 -
           (C21812 * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C89907) *
              C822 +
          (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
            (C21813 + C21817) * C13336) *
               C89907 -
           (C18843 * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C9304) *
              C823 +
          ((C14478 * C13334 + (C14456 + C14474) * C13335 +
            (C18844 + C18848) * C13336) *
               C9304 -
           (((C13338 * C21488 + C89783 * C21810) * C89937 +
             (C13338 * C21328 + C89783 * C21329) * C273) *
                C13336 +
            (C21817 + C21813) * C13335 + C21812 * C13334) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C273 +
            (C13338 * C274 + C89783 * C577) * C89937) *
               C13334 +
           (C14448 + C14472) * C13335 + C14478 * C13336) *
              C10614 -
          (C21812 * C13336 + (C17568 + C17556) * C13335 +
           ((C13338 * C1986 + C89783 * C2394) * C89937 +
            (C13338 * C1762 + C89783 * C1770) * C273) *
               C13334) *
              C10615 +
          (((C13338 * C1763 + C89783 * C1771) * C273 +
            (C13338 * C1987 + C89783 * C2395) * C89937) *
               C13334 +
           (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
              C10616 -
          (((C13338 * C23468 + C89783 * C23681) * C89937 +
            (C13338 * C23355 + C89783 * C23357) * C273) *
               C13336 +
           ((C13338 * C23469 + C89783 * C23682) * C89937 +
            (C13338 * C23356 + C89783 * C23358) * C273) *
               C13335 +
           ((C13338 * C10738 + C89783 * C10956) * C89937 +
            (C13338 * C10620 + C89783 * C10623) * C273) *
               C13334) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C9304 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C89907) *
              C89827 * C5151 +
          ((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
            C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
               C89926 * C89907 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C13338 * C108 + C89783 * C114) * C26159 +
            (C13338 * C276 + C89783 * C579) * C26053 + C29030 * C26160 +
            C29266 * C26054 + C29032 * C26161 + C29267 * C26055) *
               C89926 * C9304 -
           ((C13338 * C10736 + C89783 * C10954) * C26055 +
            (C13338 * C10618 + C89783 * C10621) * C26161 + C29267 * C26054 +
            C29032 * C26160 + C29266 * C26053 + C29030 * C26159) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C9304 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C89907) *
              C822 +
          ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
            C19542 * C26054 + C31844 * C26161 + C32082 * C26055) *
               C89926 * C89907 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C9304) *
              C823 +
          ((C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
            C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
               C89926 * C9304 -
           ((C13338 * C23468 + C89783 * C23681) * C26055 +
            (C13338 * C23355 + C89783 * C23357) * C26161 + C19543 * C26054 +
            C19300 * C26160 + C17563 * C26053 + C17229 * C26159) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C26159 +
           (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
           C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
              C89926 * C10614 -
          (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
           C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
              C89926 * C10615 +
          (C27567 * C26159 + C27860 * C26053 + C27570 * C26160 +
           C27861 * C26054 + C36055 * C26161 + C36221 * C26055) *
              C89926 * C10616 -
          ((C13338 * C35996 + C89783 * C36217) * C26055 +
           (C13338 * C35876 + C89783 * C35877) * C26161 + C36221 * C26054 +
           C36055 * C26160 + C27861 * C26053 + C27570 * C26159) *
              C89926 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C186 * C106 + C89926 * C187) * C273 +
                 (C186 * C274 + C89926 * C633) * C89937) *
                    C89 +
                (C640 + C656) * C90 + C660 * C91) *
                   C9304 -
               (C3974 * C91 + (C2500 + C2488) * C90 +
                ((C186 * C1986 + C89926 * C2476) * C89937 +
                 (C186 * C1762 + C89926 * C1872) * C273) *
                    C89) *
                   C89907) *
                  C89827 * C5151 +
              (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
                (C3975 + C3979) * C91) *
                   C89907 -
               (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                   C9304) *
                  C89827 * C5152 +
              ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) *
                   C9304 -
               (((C186 * C3578 + C89926 * C3972) * C89937 +
                 (C186 * C3416 + C89926 * C3496) * C273) *
                    C91 +
                (C3979 + C3975) * C90 + C3974 * C89) *
                   C89907) *
                  C89827 * C5153) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C186 * C106 + C89926 * C187) * C273 +
                 (C186 * C274 + C89926 * C633) * C89937) *
                    C89 +
                (C640 + C656) * C90 + C660 * C91) *
                   C9304 -
               (C3974 * C91 + (C2500 + C2488) * C90 +
                ((C186 * C1986 + C89926 * C2476) * C89937 +
                 (C186 * C1762 + C89926 * C1872) * C273) *
                    C89) *
                   C89907) *
                  C822 +
              ((((C186 * C4159 + C89926 * C4275) * C273 +
                 (C186 * C4393 + C89926 * C4943) * C89937) *
                    C89 +
                (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                   C89907 -
               (C3253 * C91 + (C1567 + C1555) * C90 +
                ((C186 * C1053 + C89926 * C1543) * C89937 +
                 (C186 * C829 + C89926 * C939) * C273) *
                    C89) *
                   C9304) *
                  C823 +
              ((((C186 * C830 + C89926 * C940) * C273 +
                 (C186 * C1054 + C89926 * C1544) * C89937) *
                    C89 +
                (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                   C9304 -
               (((C186 * C8756 + C89926 * C9147) * C89937 +
                 (C186 * C8590 + C89926 * C8676) * C273) *
                    C91 +
                ((C186 * C8757 + C89926 * C9148) * C89937 +
                 (C186 * C8591 + C89926 * C8677) * C273) *
                    C90 +
                ((C186 * C8758 + C89926 * C9149) * C89937 +
                 (C186 * C8592 + C89926 * C8678) * C273) *
                    C89) *
                   C89907) *
                  C824) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C273 +
            (C186 * C274 + C89926 * C633) * C89937) *
               C89 +
           (C640 + C656) * C90 + C660 * C91) *
              C10614 -
          (C3974 * C91 + (C2500 + C2488) * C90 +
           ((C186 * C1986 + C89926 * C2476) * C89937 +
            (C186 * C1762 + C89926 * C1872) * C273) *
               C89) *
              C10615 +
          (((C186 * C1763 + C89926 * C1873) * C273 +
            (C186 * C1987 + C89926 * C2477) * C89937) *
               C89 +
           (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
              C10616 -
          (((C186 * C10736 + C89926 * C11007) * C89937 +
            (C186 * C10618 + C89926 * C10680) * C273) *
               C91 +
           ((C186 * C10737 + C89926 * C11008) * C89937 +
            (C186 * C10619 + C89926 * C10681) * C273) *
               C90 +
           ((C186 * C10738 + C89926 * C11009) * C89937 +
            (C186 * C10620 + C89926 * C10682) * C273) *
               C89) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8756 + C13336 * C9147 + C13402 * C4395 + C13335 * C4945 +
             C13401 * C1984 + C13334 * C2474) *
                C89937 +
            (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 + C13335 * C4277 +
             C13401 * C1760 + C13334 * C1870) *
                C273) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C822 +
          (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 + C13335 * C8678 +
             C13403 * C16849 + C13336 * C16979) *
                C273 +
            (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 + C13335 * C9149 +
             C13403 * C17081 + C13336 * C17668) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C9304) *
              C823 +
          (((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C21488 + C13336 * C21891 + C13402 * C17081 +
             C13335 * C17668 + C13401 * C8758 + C13334 * C9149) *
                C89937 +
            (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
             C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                C273) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C273 +
           (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
            C13403 * C1054 + C13336 * C1544) *
               C89937) *
              C89783 * C10614 -
          ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
            C13401 * C1986 + C13334 * C2476) *
               C89937 +
           (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
            C13401 * C1762 + C13334 * C1872) *
               C273) *
              C89783 * C10615 +
          ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
            C13403 * C14727 + C13336 * C14819) *
               C273 +
           (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
            C13403 * C14897 + C13336 * C15291) *
               C89937) *
              C89783 * C10616 -
          ((C13403 * C23468 + C13336 * C23733 + C13402 * C23469 +
            C13335 * C23734 + C13401 * C10738 + C13334 * C11009) *
               C89937 +
           (C13403 * C23355 + C13336 * C23414 + C13402 * C23356 +
            C13335 * C23415 + C13401 * C10620 + C13334 * C10682) *
               C273) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C9304 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
            C27375 * C26161 + C27952 * C26055) *
               C89783 * C89907 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C9304) *
              C89827 * C5152 +
          ((C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
            C1909 * C26161 + C2498 * C26055) *
               C89783 * C9304 -
           ((C186 * C10736 + C89926 * C11007) * C26055 +
            (C186 * C10618 + C89926 * C10680) * C26161 + C2498 * C26054 +
            C1909 * C26160 + C2495 * C26053 + C1904 * C26159) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C9304 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C89907) *
              C822 +
          ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
            C30292 * C26054 + C31684 * C26161 + C32160 * C26055) *
               C89783 * C89907 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C9304) *
              C823 +
          (((C186 * C830 + C89926 * C940) * C26159 +
            (C186 * C1054 + C89926 * C1544) * C26053 + C33943 * C26160 +
            C34416 * C26054 + C33945 * C26161 + C34417 * C26055) *
               C89783 * C9304 -
           ((C186 * C23468 + C89926 * C23733) * C26055 +
            (C186 * C23355 + C89926 * C23414) * C26161 + C34417 * C26054 +
            C33945 * C26160 + C34416 * C26053 + C33943 * C26159) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C186 * C106 + C89926 * C187) * C26159 +
           (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
           C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
              C89783 * C10614 -
          (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
           C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
              C89783 * C10615 +
          (C27371 * C26159 + C27950 * C26053 + C27374 * C26160 +
           C27951 * C26054 + C35943 * C26161 + C36275 * C26055) *
              C89783 * C10616 -
          ((C186 * C35996 + C89926 * C36271) * C26055 +
           (C186 * C35876 + C89926 * C35935) * C26161 + C36275 * C26054 +
           C35943 * C26160 + C27951 * C26053 + C27374 * C26159) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
                C745 * C90 + C746 * C91) *
                   C9304 -
               (C2613 * C91 + C2614 * C90 +
                (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 *
                    C89) *
                   C89907) *
                  C89827 * C5151 +
              ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
               (C747 * C91 + C746 * C90 + C745 * C89) * C9304) *
                  C89827 * C5152 +
              ((C746 * C89 + C747 * C90 + C748 * C91) * C9304 -
               ((C711 * C3416 + C4057 + C4057 + C89937 * C4053) * C89926 * C91 +
                C4061 * C90 + C2613 * C89) *
                   C89907) *
                  C89827 * C5153) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
                C745 * C90 + C746 * C91) *
                   C9304 -
               (C2613 * C91 + C2614 * C90 +
                (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 *
                    C89) *
                   C89907) *
                  C822 +
              (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
                C5074 * C90 + C5075 * C91) *
                   C89907 -
               (C1680 * C91 + C1681 * C90 +
                (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                   C9304) *
                  C823 +
              (((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
                C1682 * C90 + C1683 * C91) *
                   C9304 -
               ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C89926 * C91 +
                (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C89926 * C90 +
                (C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C89926 *
                    C89) *
                   C89907) *
                  C824) *
             C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C10614 -
          (C2613 * C91 + C2614 * C90 +
           (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
              C10615 +
          ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
           C2615 * C90 + C2616 * C91) *
              C10616 -
          ((C711 * C10618 + C11064 + C11064 + C89937 * C11060) * C89926 * C91 +
           (C711 * C10619 + C11065 + C11065 + C89937 * C11061) * C89926 * C90 +
           (C711 * C10620 + C11066 + C11066 + C89937 * C11062) * C89926 * C89) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
               C89907 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C9304) *
              C89827 * C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C9304 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C13336 +
            C5073 * C13335 + C2609 * C13334) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C822 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C89907 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C9304) *
              C823 +
          ((C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C9304 -
           ((C711 * C21328 + C21970 + C21970 + C89937 * C21966) * C13336 +
            C21973 * C13335 + C17785 * C13334) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           C14650 * C13335 + C14651 * C13336) *
              C89783 * C10614 -
          (C17785 * C13336 + C17786 * C13335 +
           (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
              C89783 * C10615 +
          ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
           C19705 * C13335 + C19706 * C13336) *
              C89783 * C10616 -
          ((C711 * C23355 + C23788 + C23788 + C89937 * C23785) * C13336 +
           (C711 * C23356 + C23789 + C23789 + C89937 * C23786) * C13335 +
           (C711 * C10620 + C11066 + C11066 + C89937 * C11062) * C13334) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C9304 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C89907) *
              C89827 * C5151 +
          ((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 + C26463 * C1764 +
            C28036 + C28036 + C26054 * C2580 + C26464 * C10619 + C28037 +
            C28037 + C26055 * C11061) *
               C89926 * C89783 * C89907 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C9304) *
              C89827 * C5152 +
          ((C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
            C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 +
            C26474 + C26055 * C2581) *
               C89926 * C89783 * C9304 -
           (C26464 * C10618 + C29416 + C29416 + C26055 * C11060 +
            C26463 * C1765 + C29417 + C29417 + C26054 * C2581 + C26462 * C1760 +
            C29418 + C29418 + C26053 * C2576) *
               C89926 * C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C9304 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C89907) *
              C822 +
          ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 + C26463 * C6325 +
            C30394 + C30394 + C26054 * C6959 + C26464 * C23356 + C30395 +
            C30395 + C26055 * C23786) *
               C89926 * C89783 * C89907 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C9304) *
              C823 +
          ((C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
            C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
            C27151 + C26055 * C15367) *
               C89926 * C89783 * C9304 -
           (C26464 * C23355 + C34492 + C34492 + C26055 * C23785 +
            C26463 * C14727 + C34493 + C34493 + C26054 * C15367 +
            C26462 * C8592 + C34494 + C34494 + C26053 * C9226) *
               C89926 * C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
           C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 + C26468 +
           C26055 * C2579) *
              C89926 * C89783 * C10614 -
          (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
           C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
           C28031 + C28031 + C26053 * C2578) *
              C89926 * C89783 * C10615 +
          (C26462 * C1763 + C28032 + C28032 + C26053 * C2579 + C26463 * C10620 +
           C28033 + C28033 + C26054 * C11062 + C26464 * C27231 + C28034 +
           C28034 + C26055 * C28026) *
              C89926 * C89783 * C10616 -
          (C26464 * C35876 + C36327 + C36327 + C26055 * C36325 +
           C26463 * C27231 + C36328 + C36328 + C26054 * C28026 +
           C26462 * C10620 + C36329 + C36329 + C26053 * C11062) *
              C89926 * C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C90026 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C90027 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            C19045 * C13335 + C19046 * C13336) *
               C12024) *
              C89827 * C89990 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            C16880 * C13335 + C16881 * C13336) *
               C90027 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C90026 -
           ((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C89937 *
                C13336 +
            (C13337 * C6324 + C14744 + C14744 + C89783 * C6330) * C89937 *
                C13335 +
            (C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C89937 *
                C13334) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C90026 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C90027 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C12024) *
              C89827 * C89990 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C90027 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C90026 -
           (C104 * C1767 + C1794 + C1794 + C91 * C1783 + C102 * C1765 + C1795 +
            C1795 + C90 * C1781 + C100 * C1764 + C1796 + C1796 + C89 * C1780) *
               C89937 * C89926 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C90026 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C90027 +
           (C27266 * C26053 + C27267 * C26054 + C35885 * C26055) * C89926 *
               C12024) *
              C89827 * C89990 +
          ((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
               C90027 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C90026 -
           ((C13337 * C27232 + C27252 + C27252 + C89783 * C27236) * C26055 +
            C27270 * C26054 + C27269 * C26053) *
               C89926 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[43] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C90026 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C90027 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C13338 +
                      (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                       C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                          C89783) *
                         C89937 * C12024) *
                        C89827 * C89990 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C90027 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C90026 -
                     ((C13403 * C14730 + C13336 * C14822 + C13402 * C6327 +
                       C13335 * C6413 + C13401 * C1772 + C13334 * C1882) *
                          C89783 +
                      (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
                       C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                          C13338) *
                         C89937 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C90026 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C90027 +
                     ((C186 * C1763 + C89926 * C1873) * C101 +
                      (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                      C1908 * C90 + C1909 * C105 + C1910 * C91) *
                         C89937 * C12024) *
                        C89827 * C89990 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      C3503 * C105 + C3504 * C91) *
                         C89937 * C90027 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C90026 -
                     ((C186 * C1775 + C89926 * C1885) * C91 +
                      (C186 * C1767 + C89926 * C1877) * C105 + C1910 * C90 +
                      C1909 * C103 + C1908 * C89 + C1907 * C101) *
                         C89937 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C90026 -
                     (C35938 * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C90027 +
                     (C27386 * C26053 + (C27383 + C27382) * C26054 +
                      (C35945 + C35946) * C26055) *
                         C12024) *
                        C89827 * C89990 +
                    (((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
                      (C27384 + C27385) * C26055) *
                         C90027 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C90026 -
                     (((C186 * C27234 + C89926 * C27347) * C89783 +
                       (C186 * C27232 + C89926 * C27345) * C13338) *
                          C26055 +
                      (C27385 + C27384) * C26054 + C27377 * C26053) *
                         C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[43] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C90026 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C90027 +
                     (((C273 * C1763 + C89937 * C1987) * C13338 +
                       (C273 * C1771 + C89937 * C1995) * C89783) *
                          C13334 +
                      (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                         C12024) *
                        C89827 * C89990 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                         C90027 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C90026 -
                     (((C273 * C14730 + C89937 * C14900) * C89783 +
                       (C273 * C14728 + C89937 * C14898) * C13338) *
                          C13336 +
                      ((C273 * C6327 + C89937 * C6493) * C89783 +
                       (C273 * C6324 + C89937 * C6490) * C13338) *
                          C13335 +
                      (C2022 * C89783 + C2021 * C13338) * C13334) *
                         C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C90026 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C90027 +
                     ((C273 * C1763 + C89937 * C1987) * C101 +
                      (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                      C2022 * C90 + C2023 * C105 + C2024 * C91) *
                         C89926 * C12024) *
                        C89827 * C89990 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      C3585 * C105 + C3586 * C91) *
                         C89926 * C90027 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C90026 -
                     ((C273 * C1775 + C89937 * C1999) * C91 +
                      (C273 * C1767 + C89937 * C1991) * C105 + C2024 * C90 +
                      C2023 * C103 + C2022 * C89 + C2021 * C101) *
                         C89926 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C90026 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C90027 +
                     ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
                       C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                          C13338 +
                      (C26159 * C1771 + C26053 * C1995 + C26160 * C10623 +
                       C26054 * C10741 + C26161 * C27233 + C26055 * C27462) *
                          C89783) *
                         C89926 * C12024) *
                        C89827 * C89990 +
                    (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
                       C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                          C13338 +
                      (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 +
                       C26054 * C1996 + C26161 * C10622 + C26055 * C10740) *
                          C89783) *
                         C89926 * C90027 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C90026 -
                     ((C26161 * C27234 + C26055 * C27463 + C26160 * C10622 +
                       C26054 * C10740 + C26159 * C1772 + C26053 * C1996) *
                          C89783 +
                      (C26161 * C27232 + C26055 * C27461 + C26160 * C10619 +
                       C26054 * C10737 + C26159 * C1764 + C26053 * C1988) *
                          C13338) *
                         C89926 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C90026 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C90027 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
            C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
               C89937 * C12024) *
              C89827 * C89990 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
            C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
               C89937 * C90027 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C90026 -
           ((C13338 * C14820 + C89783 * C14976) * C13336 +
            (C13338 * C14728 + C89783 * C14730) * C13403 +
            (C13338 * C6410 + C89783 * C6570) * C13335 +
            (C13338 * C6324 + C89783 * C6327) * C13402 +
            (C13338 * C1874 + C89783 * C2102) * C13334 +
            (C13338 * C1764 + C89783 * C1772) * C13401) *
               C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C90026 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C90027 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C186 +
            (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
             C105 * C1875 + C91 * C2103) *
                C89926) *
               C89937 * C12024) *
              C89827 * C89990 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C90027 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C90026 -
           ((C105 * C1877 + C91 * C2105 + C103 * C1875 + C90 * C2103 +
             C101 * C1874 + C89 * C2102) *
                C89926 +
            (C105 * C1767 + C91 * C1775 + C103 * C1765 + C90 * C1773 +
             C101 * C1764 + C89 * C1772) *
                C186) *
               C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C90026 -
           (C36050 * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C90027 +
           (C27589 * C26053 + (C27582 + C27581) * C26054 +
            (C36057 + C36058) * C26055) *
               C12024) *
              C89827 * C89990 +
          (((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
            (C27587 + C27588) * C26055) *
               C90027 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C90026 -
           (((C13338 * C27345 + C89783 * C27539) * C89926 +
             (C13338 * C27232 + C89783 * C27234) * C186) *
                C26055 +
            (C27588 + C27587) * C26054 + C27590 * C26053) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C90026 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C90027 +
           (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
            C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
            C15059 + C13336 * C15051) *
               C89783 * C89937 * C12024) *
              C89827 * C89990 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C90027 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C90026 -
           (C13556 * C14728 + C15063 + C15063 + C13336 * C15052 +
            C13555 * C6324 + C15064 + C15064 + C13335 * C6647 + C13554 * C1764 +
            C15065 + C15065 + C13334 * C2184) *
               C89783 * C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C90026 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C90027 +
           ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
            C2215 * C90 + C2216 * C91) *
               C89937 * C12024) *
              C89827 * C89990 +
          ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C90027 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C90026 -
           ((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C91 +
            C2216 * C90 + C2215 * C89) *
               C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C90026 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C90027 +
           (C27692 * C26053 + C27693 * C26054 + C36116 * C26055) * C12024) *
              C89827 * C89990 +
          ((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C90027 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C90026 -
           ((C416 * C27232 + C27678 + C27678 + C89926 * C27665) * C89783 *
                C26055 +
            C27694 * C26054 + C27675 * C26053) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C90026 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C90027 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
            C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
               C89783 * C12024) *
              C89827 * C89990 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            C17104 * C13403 + C17450 * C13336) *
               C89783 * C90027 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C90026 -
           ((C273 * C14820 + C89937 * C15140) * C13336 +
            (C273 * C14728 + C89937 * C14898) * C13403 +
            (C273 * C6410 + C89937 * C6727) * C13335 +
            (C273 * C6324 + C89937 * C6490) * C13402 + C2313 * C13334 +
            C2021 * C13401) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C90026 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C90027 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C12024) *
              C89827 * C89990 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            (C3819 + C3823) * C91) *
               C90027 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C90026 -
           (((C273 * C1877 + C89937 * C2297) * C89926 +
             (C273 * C1767 + C89937 * C1991) * C186) *
                C91 +
            (C2318 + C2308) * C90 + (C2317 + C2305) * C89) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C90026 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C90027 +
           ((C26159 * C1763 + C26053 * C1987 + C26160 * C10620 +
             C26054 * C10738 + C26161 * C27231 + C26055 * C27460) *
                C186 +
            (C26159 * C1873 + C26053 * C2293 + C26160 * C10682 +
             C26054 * C10903 + C26161 * C27344 + C26055 * C27768) *
                C89926) *
               C89783 * C12024) *
              C89827 * C89990 +
          (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 + C26054 * C1988 +
             C26161 * C10619 + C26055 * C10737) *
                C186 +
            (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 + C26054 * C2294 +
             C26161 * C10681 + C26055 * C10902) *
                C89926) *
               C89783 * C90027 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C90026 -
           ((C26161 * C27345 + C26055 * C27769 + C26160 * C10681 +
             C26054 * C10902 + C26159 * C1874 + C26053 * C2294) *
                C89926 +
            (C26161 * C27232 + C26055 * C27461 + C26160 * C10619 +
             C26054 * C10737 + C26159 * C1764 + C26053 * C1988) *
                C186) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C90026 -
           (C21812 * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C90027 +
           (((C13338 * C1763 + C89783 * C1771) * C273 +
             (C13338 * C1987 + C89783 * C2395) * C89937) *
                C13334 +
            (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
               C12024) *
              C89827 * C89990 +
          ((((C13338 * C1761 + C89783 * C1769) * C273 +
             (C13338 * C1985 + C89783 * C2393) * C89937) *
                C13334 +
            (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
               C90027 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C90026 -
           (((C13338 * C14898 + C89783 * C15216) * C89937 +
             (C13338 * C14728 + C89783 * C14730) * C273) *
                C13336 +
            ((C13338 * C6490 + C89783 * C6804) * C89937 +
             (C13338 * C6324 + C89783 * C6327) * C273) *
                C13335 +
            ((C13338 * C1988 + C89783 * C2396) * C89937 +
             (C13338 * C1764 + C89783 * C1772) * C273) *
                C13334) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C90026 -
           ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
             C101 * C1986 + C89 * C2394) *
                C89937 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C273) *
               C89926 * C90027 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C273 +
            (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
             C105 * C1989 + C91 * C2397) *
                C89937) *
               C89926 * C12024) *
              C89827 * C89990 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C273 +
            (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
             C105 * C1990 + C91 * C2398) *
                C89937) *
               C89926 * C90027 -
           ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
             C89 * C578) *
                C89937 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C273) *
               C89926 * C90026 -
           ((C105 * C1991 + C91 * C2399 + C103 * C1989 + C90 * C2397 +
             C101 * C1988 + C89 * C2396) *
                C89937 +
            (C105 * C1767 + C91 * C1775 + C103 * C1765 + C90 * C1773 +
             C101 * C1764 + C89 * C1772) *
                C273) *
               C89926 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C90026 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C90027 +
           (C27567 * C26159 + C27860 * C26053 + C27570 * C26160 +
            C27861 * C26054 + C36055 * C26161 + C36221 * C26055) *
               C89926 * C12024) *
              C89827 * C89990 +
          ((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
            C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
               C89926 * C90027 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C90026 -
           ((C13338 * C27461 + C89783 * C27845) * C26055 +
            (C13338 * C27232 + C89783 * C27234) * C26161 + C27864 * C26054 +
            C27575 * C26160 + C27863 * C26053 + C27573 * C26159) *
               C89926 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C90026 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C90027 +
           ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
             C13403 * C14727 + C13336 * C14819) *
                C273 +
            (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
             C13403 * C14897 + C13336 * C15291) *
                C89937) *
               C89783 * C12024) *
              C89827 * C89990 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C90027 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C90026 -
           ((C13403 * C14898 + C13336 * C15292 + C13402 * C6490 +
             C13335 * C6881 + C13401 * C1988 + C13334 * C2478) *
                C89937 +
            (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
             C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                C273) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C90026 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C90027 +
           (((C186 * C1763 + C89926 * C1873) * C273 +
             (C186 * C1987 + C89926 * C2477) * C89937) *
                C89 +
            (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
               C12024) *
              C89827 * C89990 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            (C3975 + C3979) * C91) *
               C90027 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C90026 -
           (((C186 * C1991 + C89926 * C2481) * C89937 +
             (C186 * C1767 + C89926 * C1877) * C273) *
                C91 +
            (C2502 + C2492) * C90 + (C2501 + C2489) * C89) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C90026 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C90027 +
           (C27371 * C26159 + C27950 * C26053 + C27374 * C26160 +
            C27951 * C26054 + C35943 * C26161 + C36275 * C26055) *
               C89783 * C12024) *
              C89827 * C89990 +
          ((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
            C27375 * C26161 + C27952 * C26055) *
               C89783 * C90027 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C90026 -
           ((C186 * C27461 + C89926 * C27939) * C26055 +
            (C186 * C27232 + C89926 * C27345) * C26161 + C27952 * C26054 +
            C27375 * C26160 + C2497 * C26053 + C1907 * C26159) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C90026 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            C19705 * C13335 + C19706 * C13336) *
               C89783 * C12024) *
              C89827 * C89990 +
          ((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
               C90027 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C90026 -
           ((C711 * C14728 + C15371 + C15371 + C89937 * C15368) * C13336 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C13335 +
            C2611 * C13334) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C90026 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C12024) *
              C89827 * C89990 +
          ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C90027 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C90026 -
           ((C711 * C1767 + C2600 + C2600 + C89937 * C2583) * C89926 * C91 +
            C2616 * C90 + C2615 * C89) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C90026 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C90027 +
           (C26462 * C1763 + C28032 + C28032 + C26053 * C2579 +
            C26463 * C10620 + C28033 + C28033 + C26054 * C11062 +
            C26464 * C27231 + C28034 + C28034 + C26055 * C28026) *
               C89926 * C89783 * C12024) *
              C89827 * C89990 +
          ((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 + C26463 * C1764 +
            C28036 + C28036 + C26054 * C2580 + C26464 * C10619 + C28037 +
            C28037 + C26055 * C11061) *
               C89926 * C89783 * C90027 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C90026 -
           (C26464 * C27232 + C28038 + C28038 + C26055 * C28027 +
            C26463 * C10619 + C28039 + C28039 + C26054 * C11061 +
            C26462 * C1764 + C28040 + C28040 + C26053 * C2580) *
               C89926 * C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C9304 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C822 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C89907 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C9304) *
              C823 +
          ((C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C9304 -
           (C104 * C8590 + C8600 + C8600 + C91 * C8596 + C102 * C8591 + C8601 +
            C8601 + C90 * C8597 + C100 * C8592 + C8602 + C8602 + C89 * C8598) *
               C89937 * C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C9304 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C89827 * C5151 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C89907 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C9304) *
              C89827 * C5152 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C9304 -
           (C104 * C3416 + C3420 + C3420 + C91 * C3418 + C102 * C1766 + C3421 +
            C3421 + C90 * C1782 + C100 * C1760 + C3422 + C3422 + C89 * C1776) *
               C89937 * C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5151 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            C16880 * C13335 + C16881 * C13336) *
               C89907 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C9304) *
              C89827 * C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C9304 -
           ((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C89937 *
                C13336 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C89937 *
                C13335 +
            (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C822 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C9304) *
              C823 +
          ((C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C9304 -
           ((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C89937 *
                C13336 +
            C21338 * C13335 + C16878 * C13334) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C9304 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C89907) *
              C89827 * C5151 +
          ((C27268 * C26053 + C27269 * C26054 + C27270 * C26055) * C89926 *
               C89907 -
           (C27269 * C26055 + C27268 * C26054 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C26053) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C26053 +
            C28794 * C26054 + C28795 * C26055) *
               C89926 * C9304 -
           ((C13337 * C10618 + C28789 + C28789 + C89783 * C10624) * C26055 +
            C28795 * C26054 + C28794 * C26053) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C26053 +
            C27265 * C26054 + C27266 * C26055) *
               C89926 * C9304 -
           (C27267 * C26055 + C27266 * C26054 + C27265 * C26053) * C89926 *
               C89907) *
              C822 +
          ((C16875 * C26053 + C19043 * C26054 + C31602 * C26055) * C89926 *
               C89907 -
           (C19043 * C26055 + C16875 * C26054 + C13878 * C26053) * C89926 *
               C9304) *
              C823 +
          ((C13879 * C26053 + C16874 * C26054 + C19044 * C26055) * C89926 *
               C9304 -
           ((C13337 * C23355 + C23362 + C23362 + C89783 * C23359) * C26055 +
            C19044 * C26054 + C16874 * C26053) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C9304 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C822 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C89907 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C9304) *
                        C823 +
                    (((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C9304 -
                     ((C186 * C8593 + C89926 * C8679) * C91 +
                      (C186 * C8590 + C89926 * C8676) * C105 +
                      (C186 * C8594 + C89926 * C8680) * C90 +
                      (C186 * C8591 + C89926 * C8677) * C103 +
                      (C186 * C8595 + C89926 * C8681) * C89 +
                      (C186 * C8592 + C89926 * C8678) * C101) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C9304 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      C3503 * C105 + C3504 * C91) *
                         C89937 * C89907 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C9304 -
                     ((C186 * C3417 + C89926 * C3497) * C91 +
                      (C186 * C3416 + C89926 * C3496) * C105 + C3504 * C90 +
                      C3503 * C103 + C1903 * C89 + C1904 * C101) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8593 + C13336 * C8679 + C13402 * C4165 +
                       C13335 * C4281 + C13401 * C1768 + C13334 * C1878) *
                          C89783 +
                      (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 +
                       C13335 * C4277 + C13401 * C1760 + C13334 * C1870) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C822 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C9304) *
                        C823 +
                    (((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C21329 + C13336 * C21413 + C13402 * C16851 +
                       C13335 * C16981 + C13401 * C8595 + C13334 * C8681) *
                          C89783 +
                      (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
                       C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                          C13338) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C9304 -
                     ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C89907) *
                        C89827 * C5151 +
                    (((C27361 + C27362) * C26053 + (C27363 + C27364) * C26054 +
                      (C27384 + C27385) * C26055) *
                         C89907 -
                     (C27377 * C26055 + (C27362 + C27361) * C26054 +
                      (C217 * C89783 + C216 * C13338) * C26053) *
                         C9304) *
                        C89827 * C5152 +
                    (((C218 * C13338 + C219 * C89783) * C26053 +
                      (C28870 + C28871) * C26054 + (C28872 + C28873) * C26055) *
                         C9304 -
                     (((C186 * C10621 + C89926 * C10683) * C89783 +
                       (C186 * C10618 + C89926 * C10680) * C13338) *
                          C26055 +
                      (C28873 + C28872) * C26054 + (C28871 + C28870) * C26053) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C13338 +
                       (C186 * C112 + C89926 * C193) * C89783) *
                          C26053 +
                      (C27378 + C27379) * C26054 + C27386 * C26055) *
                         C9304 -
                     ((C27382 + C27383) * C26055 + (C27381 + C27380) * C26054 +
                      (C27379 + C27378) * C26053) *
                         C89907) *
                        C822 +
                    (((C29646 + C29647) * C26053 + (C29648 + C29649) * C26054 +
                      (C31686 + C31687) * C26055) *
                         C89907 -
                     (C31683 * C26055 + (C29647 + C29646) * C26054 +
                      ((C186 * C837 + C89926 * C947) * C89783 +
                       (C186 * C829 + C89926 * C939) * C13338) *
                          C26053) *
                         C9304) *
                        C823 +
                    ((((C186 * C830 + C89926 * C940) * C13338 +
                       (C186 * C838 + C89926 * C948) * C89783) *
                          C26053 +
                      (C33947 + C33948) * C26054 + (C33949 + C33950) * C26055) *
                         C9304 -
                     (((C186 * C23357 + C89926 * C23416) * C89783 +
                       (C186 * C23355 + C89926 * C23414) * C13338) *
                          C26055 +
                      (C33950 + C33949) * C26054 + (C33948 + C33947) * C26053) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[44] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C9304 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C822 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C89907 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C9304) *
                        C823 +
                    (((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C9304 -
                     ((C273 * C8593 + C89937 * C8759) * C91 +
                      (C273 * C8590 + C89937 * C8756) * C105 +
                      (C273 * C8594 + C89937 * C8760) * C90 +
                      (C273 * C8591 + C89937 * C8757) * C103 +
                      (C273 * C8595 + C89937 * C8761) * C89 +
                      (C273 * C8592 + C89937 * C8758) * C101) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C9304 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      C3585 * C105 + C3586 * C91) *
                         C89926 * C89907 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C9304 -
                     ((C273 * C3417 + C89937 * C3579) * C91 +
                      (C273 * C3416 + C89937 * C3578) * C105 + C3586 * C90 +
                      C3585 * C103 + C2017 * C89 + C2018 * C101) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C89827 * C5151 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                         C89907 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C9304) *
                        C89827 * C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C9304 -
                     (((C273 * C8593 + C89937 * C8759) * C89783 +
                       (C273 * C8590 + C89937 * C8756) * C13338) *
                          C13336 +
                      (C4413 * C89783 + C4412 * C13338) * C13335 +
                      (C2017 * C89783 + C2018 * C13338) * C13334) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C822 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C89907 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C9304) *
                        C823 +
                    ((C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C9304 -
                     (((C273 * C21329 + C89937 * C21489) * C89783 +
                       (C273 * C21328 + C89937 * C21488) * C13338) *
                          C13336 +
                      (C21499 + C21498) * C13335 + C21491 * C13334) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 +
                       C26054 * C1988 + C26161 * C10619 + C26055 * C10737) *
                          C13338 +
                      (C26159 * C1769 + C26053 * C1993 + C26160 * C1772 +
                       C26054 * C1996 + C26161 * C10622 + C26055 * C10740) *
                          C89783) *
                         C89926 * C89907 -
                     ((C26161 * C1772 + C26055 * C1996 + C26160 * C1769 +
                       C26054 * C1993 + C26159 * C113 + C26053 * C281) *
                          C89783 +
                      (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 +
                       C26054 * C1985 + C26159 * C107 + C26053 * C275) *
                          C13338) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    (((C26159 * C108 + C26053 * C276 + C26160 * C1760 +
                       C26054 * C1984 + C26161 * C1765 + C26055 * C1989) *
                          C13338 +
                      (C26159 * C114 + C26053 * C282 + C26160 * C1768 +
                       C26054 * C1992 + C26161 * C1773 + C26055 * C1997) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C10621 + C26055 * C10739 + C26160 * C1773 +
                       C26054 * C1997 + C26159 * C1768 + C26053 * C1992) *
                          C89783 +
                      (C26161 * C10618 + C26055 * C10736 + C26160 * C1765 +
                       C26054 * C1989 + C26159 * C1760 + C26053 * C1984) *
                          C13338) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 +
                       C26054 * C1986 + C26161 * C1763 + C26055 * C1987) *
                          C13338 +
                      (C26159 * C112 + C26053 * C280 + C26160 * C1770 +
                       C26054 * C1994 + C26161 * C1771 + C26055 * C1995) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C10623 + C26055 * C10741 + C26160 * C1771 +
                       C26054 * C1995 + C26159 * C1770 + C26053 * C1994) *
                          C89783 +
                      (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
                       C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                          C13338) *
                         C89926 * C89907) *
                        C822 +
                    (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 +
                       C26054 * C6491 + C26161 * C23356 + C26055 * C23469) *
                          C13338 +
                      (C26159 * C4163 + C26053 * C4397 + C26160 * C6328 +
                       C26054 * C6494 + C26161 * C23358 + C26055 * C23471) *
                          C89783) *
                         C89926 * C89907 -
                     ((C26161 * C6328 + C26055 * C6494 + C26160 * C4163 +
                       C26054 * C4397 + C26159 * C837 + C26053 * C1061) *
                          C89783 +
                      (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 +
                       C26054 * C4393 + C26159 * C829 + C26053 * C1053) *
                          C13338) *
                         C89926 * C9304) *
                        C823 +
                    (((C26159 * C830 + C26053 * C1054 + C26160 * C8592 +
                       C26054 * C8758 + C26161 * C14727 + C26055 * C14897) *
                          C13338 +
                      (C26159 * C838 + C26053 * C1062 + C26160 * C8595 +
                       C26054 * C8761 + C26161 * C14729 + C26055 * C14899) *
                          C89783) *
                         C89926 * C9304 -
                     ((C26161 * C23357 + C26055 * C23470 + C26160 * C14729 +
                       C26054 * C14899 + C26159 * C8595 + C26053 * C8761) *
                          C89783 +
                      (C26161 * C23355 + C26055 * C23468 + C26160 * C14727 +
                       C26054 * C14897 + C26159 * C8592 + C26053 * C8758) *
                          C13338) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C822 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C9304) *
              C823 +
          (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C8676 + C91 * C8836 + C103 * C8677 + C90 * C8837 +
             C101 * C8678 + C89 * C8838) *
                C89926 +
            (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
             C101 * C8592 + C89 * C8595) *
                C186) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C3496 + C91 * C3660 + C103 * C1876 + C90 * C2104 +
             C101 * C1870 + C89 * C2098) *
                C89926 +
            (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
             C101 * C1760 + C89 * C1768) *
                C186) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
            C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
               C89937 * C89907 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C9304 -
           ((C13338 * C8676 + C89783 * C8836) * C13336 +
            (C13338 * C8590 + C89783 * C8593) * C13403 +
            (C13338 * C4277 + C89783 * C4513) * C13335 +
            (C13338 * C4161 + C89783 * C4165) * C13402 +
            (C13338 * C1870 + C89783 * C2098) * C13334 +
            (C13338 * C1760 + C89783 * C1768) * C13401) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C822 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C89907 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C9304) *
              C823 +
          ((C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C9304 -
           ((C13338 * C21412 + C89783 * C21573) * C13336 +
            (C13338 * C21328 + C89783 * C21329) * C13403 + C21580 * C13335 +
            C21579 * C13402 + C17228 * C13334 + C17229 * C13401) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C9304 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C89907) *
              C89827 * C5151 +
          (((C27583 + C27584) * C26053 + (C27585 + C27586) * C26054 +
            (C27587 + C27588) * C26055) *
               C89907 -
           (C27590 * C26055 + (C27584 + C27583) * C26054 +
            ((C13338 * C188 + C89783 * C361) * C89926 +
             (C13338 * C107 + C89783 * C113) * C186) *
                C26053) *
               C9304) *
              C89827 * C5152 +
          ((((C13338 * C108 + C89783 * C114) * C186 +
             (C13338 * C189 + C89783 * C362) * C89926) *
                C26053 +
            (C29034 + C29035) * C26054 + (C29036 + C29037) * C26055) *
               C9304 -
           (((C13338 * C10680 + C89783 * C10792) * C89926 +
             (C13338 * C10618 + C89783 * C10621) * C186) *
                C26055 +
            (C29037 + C29036) * C26054 + (C29035 + C29034) * C26053) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C186 +
             (C13338 * C187 + C89783 * C360) * C89926) *
                C26053 +
            (C27577 + C27578) * C26054 + C27589 * C26055) *
               C9304 -
           ((C27581 + C27582) * C26055 + (C27580 + C27579) * C26054 +
            (C27578 + C27577) * C26053) *
               C89907) *
              C822 +
          (((C29851 + C29852) * C26053 + (C29853 + C29854) * C26054 +
            (C31846 + C31847) * C26055) *
               C89907 -
           (C31843 * C26055 + (C29852 + C29851) * C26054 +
            (C14185 * C89926 + C14184 * C186) * C26053) *
               C9304) *
              C823 +
          (((C14186 * C186 + C14187 * C89926) * C26053 +
            (C34099 + C34100) * C26054 + (C34101 + C34102) * C26055) *
               C9304 -
           (((C13338 * C23414 + C89783 * C23522) * C89926 +
             (C13338 * C23355 + C89783 * C23357) * C186) *
                C26055 +
            (C34102 + C34101) * C26054 + (C34100 + C34099) * C26053) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C9304 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C822 +
          (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
            C4630 * C90 + C4631 * C91) *
               C89937 * C89907 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C9304) *
              C823 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C9304 -
           ((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C91 +
            (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C90 +
            (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C9304 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C89827 * C5151 +
          ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C9304) *
              C89827 * C5152 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C9304 -
           ((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C91 +
            C3742 * C90 + C2213 * C89) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C89827 * C5151 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C89907 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C9304) *
              C89827 * C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C9304 -
           (C13556 * C8590 + C16453 + C16453 + C13336 * C8913 + C13555 * C4161 +
            C16454 + C16454 + C13335 * C4615 + C13554 * C1760 + C16455 +
            C16455 + C13334 * C2180) *
               C89783 * C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C822 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C89907 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C9304) *
              C823 +
          ((C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C9304 -
           (C13556 * C21328 + C21656 + C21656 + C13336 * C21654 +
            C13555 * C16849 + C21657 + C21657 + C13335 * C17333 +
            C13554 * C8592 + C21658 + C21658 + C13334 * C8915) *
               C89783 * C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C9304 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
              C89827 * C5151 +
          ((C27674 * C26053 + C27675 * C26054 + C27694 * C26055) * C89907 -
           (C27675 * C26055 + C27674 * C26054 + C446 * C89783 * C26053) *
               C9304) *
              C89827 * C5152 +
          ((C447 * C89783 * C26053 + C29112 * C26054 + C29113 * C26055) *
               C9304 -
           ((C416 * C10618 + C10849 + C10849 + C89926 * C10845) * C89783 *
                C26055 +
            C29113 * C26054 + C29112 * C26053) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89783 * C26053 +
            C27691 * C26054 + C27692 * C26055) *
               C9304 -
           (C27693 * C26055 + C27692 * C26054 + C27691 * C26053) * C89907) *
              C822 +
          ((C29982 * C26053 + C29983 * C26054 + C31929 * C26055) * C89907 -
           (C29983 * C26055 + C29982 * C26054 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89783 * C26053) *
               C9304) *
              C823 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89783 * C26053 +
            C34188 * C26054 + C34189 * C26055) *
               C9304 -
           ((C416 * C23355 + C34181 + C34181 + C89926 * C23574) * C89783 *
                C26055 +
            C34189 * C26054 + C34188 * C26053) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C9304 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C822 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C89907 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C9304) *
              C823 +
          ((((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C9304 -
           (((C273 * C8676 + C89937 * C8993) * C89926 +
             (C273 * C8590 + C89937 * C8756) * C186) *
                C91 +
            ((C273 * C8677 + C89937 * C8994) * C89926 +
             (C273 * C8591 + C89937 * C8757) * C186) *
                C90 +
            ((C273 * C8678 + C89937 * C8995) * C89926 +
             (C273 * C8592 + C89937 * C8758) * C186) *
                C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C9304 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C89827 * C5151 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            (C3819 + C3823) * C91) *
               C89907 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C9304) *
              C89827 * C5152 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C9304 -
           (((C273 * C3496 + C89937 * C3816) * C89926 +
             (C273 * C3416 + C89937 * C3578) * C186) *
                C91 +
            (C3823 + C3819) * C90 + C3818 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            C17104 * C13403 + C17450 * C13336) *
               C89783 * C89907 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C9304) *
              C89827 * C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C9304 -
           ((C273 * C8676 + C89937 * C8993) * C13336 +
            (C273 * C8590 + C89937 * C8756) * C13403 + C4741 * C13335 +
            C4412 * C13402 + C2311 * C13334 + C2018 * C13401) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C822 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C89907 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C9304) *
              C823 +
          ((C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C9304 -
           ((C273 * C21412 + C89937 * C21732) * C13336 +
            (C273 * C21328 + C89937 * C21488) * C13403 + C21736 * C13335 +
            C21496 * C13402 + C17448 * C13334 + C17101 * C13401) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C26159 * C1761 + C26053 * C1985 + C26160 * C1764 + C26054 * C1988 +
             C26161 * C10619 + C26055 * C10737) *
                C186 +
            (C26159 * C1871 + C26053 * C2291 + C26160 * C1874 + C26054 * C2294 +
             C26161 * C10681 + C26055 * C10902) *
                C89926) *
               C89783 * C89907 -
           ((C26161 * C1874 + C26055 * C2294 + C26160 * C1871 + C26054 * C2291 +
             C26159 * C188 + C26053 * C500) *
                C89926 +
            (C26161 * C1764 + C26055 * C1988 + C26160 * C1761 + C26054 * C1985 +
             C26159 * C107 + C26053 * C275) *
                C186) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C26159 * C108 + C26053 * C276 + C26160 * C1760 + C26054 * C1984 +
             C26161 * C1765 + C26055 * C1989) *
                C186 +
            (C26159 * C189 + C26053 * C501 + C26160 * C1870 + C26054 * C2290 +
             C26161 * C1875 + C26055 * C2295) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C10680 + C26055 * C10901 + C26160 * C1875 +
             C26054 * C2295 + C26159 * C1870 + C26053 * C2290) *
                C89926 +
            (C26161 * C10618 + C26055 * C10736 + C26160 * C1765 +
             C26054 * C1989 + C26159 * C1760 + C26053 * C1984) *
                C186) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26159 * C106 + C26053 * C274 + C26160 * C1762 + C26054 * C1986 +
             C26161 * C1763 + C26055 * C1987) *
                C186 +
            (C26159 * C187 + C26053 * C499 + C26160 * C1872 + C26054 * C2292 +
             C26161 * C1873 + C26055 * C2293) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C10682 + C26055 * C10903 + C26160 * C1873 +
             C26054 * C2293 + C26159 * C1872 + C26053 * C2292) *
                C89926 +
            (C26161 * C10620 + C26055 * C10738 + C26160 * C1763 +
             C26054 * C1987 + C26159 * C1762 + C26053 * C1986) *
                C186) *
               C89783 * C89907) *
              C822 +
          (((C26159 * C4159 + C26053 * C4393 + C26160 * C6325 + C26054 * C6491 +
             C26161 * C23356 + C26055 * C23469) *
                C186 +
            (C26159 * C4275 + C26053 * C4729 + C26160 * C6411 + C26054 * C6728 +
             C26161 * C23415 + C26055 * C23630) *
                C89926) *
               C89783 * C89907 -
           ((C26161 * C6411 + C26055 * C6728 + C26160 * C4275 + C26054 * C4729 +
             C26159 * C939 + C26053 * C1359) *
                C89926 +
            (C26161 * C6325 + C26055 * C6491 + C26160 * C4159 + C26054 * C4393 +
             C26159 * C829 + C26053 * C1053) *
                C186) *
               C89783 * C9304) *
              C823 +
          (((C26159 * C830 + C26053 * C1054 + C26160 * C8592 + C26054 * C8758 +
             C26161 * C14727 + C26055 * C14897) *
                C186 +
            (C26159 * C940 + C26053 * C1360 + C26160 * C8678 + C26054 * C8995 +
             C26161 * C14819 + C26055 * C15139) *
                C89926) *
               C89783 * C9304 -
           ((C26161 * C23414 + C26055 * C23629 + C26160 * C14819 +
             C26054 * C15139 + C26159 * C8678 + C26053 * C8995) *
                C89926 +
            (C26161 * C23355 + C26055 * C23468 + C26160 * C14727 +
             C26054 * C14897 + C26159 * C8592 + C26053 * C8758) *
                C186) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C9304 -
           ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
             C101 * C1986 + C89 * C2394) *
                C89937 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C273) *
               C89926 * C89907) *
              C822 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C273 +
            (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
             C105 * C4395 + C91 * C4843) *
                C89937) *
               C89926 * C89907 -
           ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
             C101 * C1053 + C89 * C1461) *
                C89937 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C273) *
               C89926 * C9304) *
              C823 +
          (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C273 +
            (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
             C105 * C1056 + C91 * C1464) *
                C89937) *
               C89926 * C9304 -
           ((C105 * C8756 + C91 * C9070 + C103 * C8757 + C90 * C9071 +
             C101 * C8758 + C89 * C9072) *
                C89937 +
            (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
             C101 * C8592 + C89 * C8595) *
                C273) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C273 +
            (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 + C105 * C276 +
             C91 * C579) *
                C89937) *
               C89926 * C9304 -
           ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
             C101 * C1986 + C89 * C2394) *
                C89937 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C273) *
               C89926 * C89907) *
              C89827 * C5151 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C273 +
            (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
             C105 * C1990 + C91 * C2398) *
                C89937) *
               C89926 * C89907 -
           ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 + C101 * C275 +
             C89 * C578) *
                C89937 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C273) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C273 +
            (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 + C105 * C278 +
             C91 * C581) *
                C89937) *
               C89926 * C9304 -
           ((C105 * C3578 + C91 * C3897 + C103 * C1990 + C90 * C2398 +
             C101 * C1984 + C89 * C2392) *
                C89937 +
            (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
             C101 * C1760 + C89 * C1768) *
                C273) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C9304 -
           (C21812 * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C89907) *
              C89827 * C5151 +
          ((((C13338 * C1761 + C89783 * C1769) * C273 +
             (C13338 * C1985 + C89783 * C2393) * C89937) *
                C13334 +
            (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
               C89907 -
           (C14479 * C13336 + (C14475 + C14457) * C13335 +
            ((C13338 * C275 + C89783 * C578) * C89937 +
             (C13338 * C107 + C89783 * C113) * C273) *
                C13334) *
               C9304) *
              C89827 * C5152 +
          ((((C13338 * C108 + C89783 * C114) * C273 +
             (C13338 * C276 + C89783 * C579) * C89937) *
                C13334 +
            (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
               C9304 -
           (((C13338 * C8756 + C89783 * C9070) * C89937 +
             (C13338 * C8590 + C89783 * C8593) * C273) *
                C13336 +
            ((C13338 * C4395 + C89783 * C4843) * C89937 +
             (C13338 * C4161 + C89783 * C4165) * C273) *
                C13335 +
            ((C13338 * C1984 + C89783 * C2392) * C89937 +
             (C13338 * C1760 + C89783 * C1768) * C273) *
                C13334) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C273 +
             (C13338 * C274 + C89783 * C577) * C89937) *
                C13334 +
            (C14448 + C14472) * C13335 + C14478 * C13336) *
               C9304 -
           (C21812 * C13336 + (C17568 + C17556) * C13335 +
            ((C13338 * C1986 + C89783 * C2394) * C89937 +
             (C13338 * C1762 + C89783 * C1770) * C273) *
                C13334) *
               C89907) *
              C822 +
          (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
            (C21813 + C21817) * C13336) *
               C89907 -
           (C18843 * C13336 + (C14473 + C14451) * C13335 +
            (C14472 + C14448) * C13334) *
               C9304) *
              C823 +
          ((C14478 * C13334 + (C14456 + C14474) * C13335 +
            (C18844 + C18848) * C13336) *
               C9304 -
           (((C13338 * C21488 + C89783 * C21810) * C89937 +
             (C13338 * C21328 + C89783 * C21329) * C273) *
                C13336 +
            (C21817 + C21813) * C13335 + C21812 * C13334) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C9304 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C89907) *
              C89827 * C5151 +
          ((C27571 * C26159 + C27862 * C26053 + C27573 * C26160 +
            C27863 * C26054 + C27575 * C26161 + C27864 * C26055) *
               C89926 * C89907 -
           (C27863 * C26055 + C27573 * C26161 + C27862 * C26054 +
            C27571 * C26160 + (C13338 * C275 + C89783 * C578) * C26053 +
            (C13338 * C107 + C89783 * C113) * C26159) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C13338 * C108 + C89783 * C114) * C26159 +
            (C13338 * C276 + C89783 * C579) * C26053 + C29030 * C26160 +
            C29266 * C26054 + C29032 * C26161 + C29267 * C26055) *
               C89926 * C9304 -
           ((C13338 * C10736 + C89783 * C10954) * C26055 +
            (C13338 * C10618 + C89783 * C10621) * C26161 + C29267 * C26054 +
            C29032 * C26160 + C29266 * C26053 + C29030 * C26159) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C26159 +
            (C13338 * C274 + C89783 * C577) * C26053 + C27565 * C26160 +
            C27859 * C26054 + C27567 * C26161 + C27860 * C26055) *
               C89926 * C9304 -
           (C27861 * C26055 + C27570 * C26161 + C27860 * C26054 +
            C27567 * C26160 + C27859 * C26053 + C27565 * C26159) *
               C89926 * C89907) *
              C822 +
          ((C17231 * C26159 + C17564 * C26053 + C19298 * C26160 +
            C19542 * C26054 + C31844 * C26161 + C32082 * C26055) *
               C89926 * C89907 -
           (C19542 * C26055 + C19298 * C26161 + C17564 * C26054 +
            C17231 * C26160 + C14466 * C26053 + C14184 * C26159) *
               C89926 * C9304) *
              C823 +
          ((C14186 * C26159 + C14467 * C26053 + C17229 * C26160 +
            C17563 * C26054 + C19300 * C26161 + C19543 * C26055) *
               C89926 * C9304 -
           ((C13338 * C23468 + C89783 * C23681) * C26055 +
            (C13338 * C23355 + C89783 * C23357) * C26161 + C19543 * C26054 +
            C19300 * C26160 + C17563 * C26053 + C17229 * C26159) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C9304 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C822 +
          ((((C186 * C4159 + C89926 * C4275) * C273 +
             (C186 * C4393 + C89926 * C4943) * C89937) *
                C89 +
            (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
               C89907 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C9304) *
              C823 +
          ((((C186 * C830 + C89926 * C940) * C273 +
             (C186 * C1054 + C89926 * C1544) * C89937) *
                C89 +
            (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
               C9304 -
           (((C186 * C8756 + C89926 * C9147) * C89937 +
             (C186 * C8590 + C89926 * C8676) * C273) *
                C91 +
            ((C186 * C8757 + C89926 * C9148) * C89937 +
             (C186 * C8591 + C89926 * C8677) * C273) *
                C90 +
            ((C186 * C8758 + C89926 * C9149) * C89937 +
             (C186 * C8592 + C89926 * C8678) * C273) *
                C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C9304 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C89827 * C5151 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            (C3975 + C3979) * C91) *
               C89907 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C9304) *
              C89827 * C5152 +
          ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C9304 -
           (((C186 * C3578 + C89926 * C3972) * C89937 +
             (C186 * C3416 + C89926 * C3496) * C273) *
                C91 +
            (C3979 + C3975) * C90 + C3974 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8756 + C13336 * C9147 + C13402 * C4395 + C13335 * C4945 +
             C13401 * C1984 + C13334 * C2474) *
                C89937 +
            (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 + C13335 * C4277 +
             C13401 * C1760 + C13334 * C1870) *
                C273) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C822 +
          (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 + C13335 * C8678 +
             C13403 * C16849 + C13336 * C16979) *
                C273 +
            (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 + C13335 * C9149 +
             C13403 * C17081 + C13336 * C17668) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C9304) *
              C823 +
          (((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C21488 + C13336 * C21891 + C13402 * C17081 +
             C13335 * C17668 + C13401 * C8758 + C13334 * C9149) *
                C89937 +
            (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
             C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                C273) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C9304 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C1906 * C26159 + C2496 * C26053 + C1907 * C26160 + C2497 * C26054 +
            C27375 * C26161 + C27952 * C26055) *
               C89783 * C89907 -
           (C2497 * C26055 + C1907 * C26161 + C2496 * C26054 + C1906 * C26160 +
            C652 * C26053 + C216 * C26159) *
               C89783 * C9304) *
              C89827 * C5152 +
          ((C218 * C26159 + C653 * C26053 + C1904 * C26160 + C2495 * C26054 +
            C1909 * C26161 + C2498 * C26055) *
               C89783 * C9304 -
           ((C186 * C10736 + C89926 * C11007) * C26055 +
            (C186 * C10618 + C89926 * C10680) * C26161 + C2498 * C26054 +
            C1909 * C26160 + C2495 * C26053 + C1904 * C26159) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C26159 +
            (C186 * C274 + C89926 * C633) * C26053 + C27369 * C26160 +
            C27949 * C26054 + C27371 * C26161 + C27950 * C26055) *
               C89783 * C9304 -
           (C27951 * C26055 + C27374 * C26161 + C27950 * C26054 +
            C27371 * C26160 + C27949 * C26053 + C27369 * C26159) *
               C89783 * C89907) *
              C822 +
          ((C29640 * C26159 + C30291 * C26053 + C29642 * C26160 +
            C30292 * C26054 + C31684 * C26161 + C32160 * C26055) *
               C89783 * C89907 -
           (C30292 * C26055 + C29642 * C26161 + C30291 * C26054 +
            C29640 * C26160 + (C186 * C1053 + C89926 * C1543) * C26053 +
            (C186 * C829 + C89926 * C939) * C26159) *
               C89783 * C9304) *
              C823 +
          (((C186 * C830 + C89926 * C940) * C26159 +
            (C186 * C1054 + C89926 * C1544) * C26053 + C33943 * C26160 +
            C34416 * C26054 + C33945 * C26161 + C34417 * C26055) *
               C89783 * C9304 -
           ((C186 * C23468 + C89926 * C23733) * C26055 +
            (C186 * C23355 + C89926 * C23414) * C26161 + C34417 * C26054 +
            C33945 * C26160 + C34416 * C26053 + C33943 * C26159) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C9304 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C822 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C89907 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C9304) *
              C823 +
          (((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C9304 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C89926 * C91 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C89926 * C90 +
            (C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C89926 * C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C9304 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C89827 * C5151 +
          ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C9304) *
              C89827 * C5152 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C9304 -
           ((C711 * C3416 + C4057 + C4057 + C89937 * C4053) * C89926 * C91 +
            C4061 * C90 + C2613 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
               C89907 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C9304) *
              C89827 * C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C9304 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C13336 +
            C5073 * C13335 + C2609 * C13334) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C822 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C89907 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C9304) *
              C823 +
          ((C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C9304 -
           ((C711 * C21328 + C21970 + C21970 + C89937 * C21966) * C13336 +
            C21973 * C13335 + C17785 * C13334) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C9304 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C89907) *
              C89827 * C5151 +
          ((C26462 * C1761 + C28035 + C28035 + C26053 * C2577 + C26463 * C1764 +
            C28036 + C28036 + C26054 * C2580 + C26464 * C10619 + C28037 +
            C28037 + C26055 * C11061) *
               C89926 * C89783 * C89907 -
           (C26464 * C1764 + C26469 + C26469 + C26055 * C2580 + C26463 * C1761 +
            C26470 + C26470 + C26054 * C2577 + C26462 * C107 + C26471 + C26471 +
            C26053 * C713) *
               C89926 * C89783 * C9304) *
              C89827 * C5152 +
          ((C26462 * C108 + C26472 + C26472 + C26053 * C714 + C26463 * C1760 +
            C26473 + C26473 + C26054 * C2576 + C26464 * C1765 + C26474 +
            C26474 + C26055 * C2581) *
               C89926 * C89783 * C9304 -
           (C26464 * C10618 + C29416 + C29416 + C26055 * C11060 +
            C26463 * C1765 + C29417 + C29417 + C26054 * C2581 + C26462 * C1760 +
            C29418 + C29418 + C26053 * C2576) *
               C89926 * C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C26462 * C106 + C26466 + C26466 + C26053 * C712 + C26463 * C1762 +
            C26467 + C26467 + C26054 * C2578 + C26464 * C1763 + C26468 +
            C26468 + C26055 * C2579) *
               C89926 * C89783 * C9304 -
           (C26464 * C10620 + C28029 + C28029 + C26055 * C11062 +
            C26463 * C1763 + C28030 + C28030 + C26054 * C2579 + C26462 * C1762 +
            C28031 + C28031 + C26053 * C2578) *
               C89926 * C89783 * C89907) *
              C822 +
          ((C26462 * C4159 + C30393 + C30393 + C26053 * C5055 + C26463 * C6325 +
            C30394 + C30394 + C26054 * C6959 + C26464 * C23356 + C30395 +
            C30395 + C26055 * C23786) *
               C89926 * C89783 * C89907 -
           (C26464 * C6325 + C27146 + C27146 + C26055 * C6959 + C26463 * C4159 +
            C27147 + C27147 + C26054 * C5055 + C26462 * C829 + C27148 + C27148 +
            C26053 * C1645) *
               C89926 * C89783 * C9304) *
              C823 +
          ((C26462 * C830 + C27149 + C27149 + C26053 * C1646 + C26463 * C8592 +
            C27150 + C27150 + C26054 * C9226 + C26464 * C14727 + C27151 +
            C27151 + C26055 * C15367) *
               C89926 * C89783 * C9304 -
           (C26464 * C23355 + C34492 + C34492 + C26055 * C23785 +
            C26463 * C14727 + C34493 + C34493 + C26054 * C15367 +
            C26462 * C8592 + C34494 + C34494 + C26053 * C9226) *
               C89926 * C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C89843 * C89998 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C89843 * C89879) *
                        C90022 +
                    (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) *
                         C89926 * C89843 * C89879 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C89843 * C89998) *
                        C90023 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C55292 +
                      (C38613 * C1760 + C42421 + C42421 + C38609 * C1776 +
                       C38615 * C1766 + C42420 + C42420 + C38610 * C1782) *
                          C55293) *
                         C89926 * C89843 * C89998 -
                     ((C38615 * C4162 + C42418 + C42418 + C38610 * C4170 +
                       C38613 * C4161 + C42419 + C42419 + C38609 * C4169) *
                          C55293 +
                      (C41477 + C41476) * C55292) *
                         C89926 * C89843 * C89879) *
                        C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C89843 * C89998 -
           ((C4293 * C38610 + C4292 * C38616 + C29641 * C38609 +
             C29640 * C38614) *
                C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C89843 * C89879) *
              C90022 +
          (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                C55292 +
            (C4292 * C38614 + C4293 * C38609 + C4294 * C38616 +
             C4295 * C38610) *
                C55293) *
               C89843 * C89879 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C89843 * C89998) *
              C90023 +
          (((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
                C55292 +
            (C1904 * C38614 + C1903 * C38609 + C3503 * C38616 +
             C3504 * C38610) *
                C55293) *
               C89843 * C89998 -
           (((C186 * C4166 + C89926 * C4282) * C38610 +
             (C186 * C4162 + C89926 * C4278) * C38616 + C4295 * C38609 +
             C4294 * C38614) *
                C55293 +
            (C2783 * C38610 + C2782 * C38616 + C970 * C38609 + C971 * C38614) *
                C55292) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexz[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89843 * C89998 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C89843 * C89879) *
              C90022 +
          (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
            (C58305 + C58306) * C38616 + (C58307 + C58308) * C38610) *
               C89926 * C89843 * C89879 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C89843 * C89998) *
              C90023 +
          (((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
            (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
               C89926 * C89843 * C89998 -
           ((C55429 * C4166 + C55293 * C4400 + C55428 * C841 + C55292 * C1065) *
                C38610 +
            (C55429 * C4162 + C55293 * C4396 + C55428 * C833 + C55292 * C1057) *
                C38616 +
            (C58308 + C58307) * C38609 + (C58306 + C58305) * C38614) *
               C89926 * C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C89843 * C89998 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C89843 * C89879) *
              C90022 +
          ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
            ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
               C89843 * C89879 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C89843 * C89998) *
              C90023 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C186 +
             (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                 C89926) *
                C55292 +
            ((C38614 * C1760 + C38609 * C1768 + C38616 * C1766 +
              C38610 * C1774) *
                 C186 +
             (C38614 * C1870 + C38609 * C2098 + C38616 * C1876 +
              C38610 * C2104) *
                 C89926) *
                C55293) *
               C89843 * C89998 -
           (((C38616 * C4278 + C38610 * C4514 + C38614 * C4277 +
              C38609 * C4513) *
                 C89926 +
             (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
              C38609 * C4165) *
                 C186) *
                C55293 +
            ((C41799 + C41798) * C89926 + (C41797 + C41796) * C186) * C55292) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C89843 * C89998 -
           ((C4630 * C38610 + C29979 * C38609) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C89843 * C89879) *
              C90022 +
          (((C1281 * C38609 + C1280 * C38610) * C55292 +
            (C4630 * C38609 + C4631 * C38610) * C55293) *
               C89843 * C89879 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C89843 * C89998) *
              C90023 +
          (((C447 * C38609 + C448 * C38610) * C55292 +
            (C2213 * C38609 + C3742 * C38610) * C55293) *
               C89843 * C89998 -
           (((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C38610 +
             C4631 * C38609) *
                C55293 +
            (C3021 * C38610 + C1280 * C38609) * C55292) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89843 * C89998 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C89843 * C89879) *
              C90022 +
          ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
            ((C58305 + C58306) * C186 + (C58607 + C58608) * C89926) * C38610) *
               C89843 * C89879 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C89843 * C89998) *
              C90023 +
          ((((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
            ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
               C89843 * C89998 -
           (((C55429 * C4278 + C55293 * C4732 + C55428 * C943 +
              C55292 * C1363) *
                 C89926 +
             (C55429 * C4162 + C55293 * C4396 + C55428 * C833 +
              C55292 * C1057) *
                 C186) *
                C38610 +
            ((C58608 + C58607) * C89926 + (C58306 + C58305) * C186) * C38609) *
               C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezx[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C89843 * C89998 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C89843 * C89879) *
              C90022 +
          (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
            (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
               C89926 * C89843 * C89879 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C89843 * C89998) *
              C90023 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C55428 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C55292 +
            (C38614 * C1760 + C38609 * C1768 + C38616 * C1766 +
             C38610 * C1774) *
                C55429 +
            (C38614 * C1984 + C38609 * C2392 + C38616 * C1990 +
             C38610 * C2398) *
                C55293) *
               C89926 * C89843 * C89998 -
           ((C38616 * C4396 + C38610 * C4844 + C38614 * C4395 +
             C38609 * C4843) *
                C55293 +
            (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
             C38609 * C4165) *
                C55429 +
            (C42115 + C42114) * C55292 + (C41797 + C41796) * C55428) *
               C89926 * C89843 * C89879) *
              C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezy[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C89843 * C89998 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C89843 * C89879) *
                        C90022 +
                    (((C56769 + C56768 + C56767 + C56766) * C38609 +
                      (C58805 + C58806 + C58807 + C58808) * C38610) *
                         C89843 * C89879 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C89843 * C89998) *
                        C90023 +
                    (((C55822 + C55821 + C55820 + C55819) * C38609 +
                      (C55823 + C55824 + C55825 + C55826) * C38610) *
                         C89843 * C89998 -
                     (((C186 * C4396 + C89926 * C4946) * C55293 +
                       (C186 * C4162 + C89926 * C4278) * C55429 +
                       C3257 * C55292 + C2782 * C55428) *
                          C38610 +
                      (C58808 + C58807 + C58806 + C58805) * C38609) *
                         C89843 * C89879) *
                        C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89843 * C89998 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C89843 * C89879) *
                        C90022 +
                    (((C56904 + C56903) * C89926 * C38609 +
                      (C58917 + C58918) * C89926 * C38610) *
                         C89843 * C89879 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C89843 * C89998) *
                        C90023 +
                    (((C55932 + C55931) * C89926 * C38609 +
                      (C55933 + C55934) * C89926 * C38610) *
                         C89843 * C89998 -
                     ((C55893 * C4162 + C58911 + C58911 + C55293 * C5058 +
                       C55892 * C833 + C58912 + C58912 + C55292 * C1649) *
                          C89926 * C38610 +
                      (C58918 + C58917) * C89926 * C38609) *
                         C89843 * C89879) *
                        C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38613 * C106 + C38618 + C38618 + C38609 * C118 + C38615 * C107 +
              C38619 + C38619 + C38610 * C119) *
                 C55292 +
             (C57039 + C57040) * C55293) *
                C89926 * C89999 -
            ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) * C89926 *
                C89907) *
               C89998 +
           (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) * C89926 *
                C89907 -
            ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) * C89926 *
                C89999) *
               C89879) *
              C825 +
          ((((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) * C89926 *
                C89907 -
            ((C57044 + C57043) * C55293 +
             (C38615 * C108 + C38624 + C38624 + C38610 * C120 + C38613 * C107 +
              C38625 + C38625 + C38609 * C119) *
                 C55292) *
                C89926 * C89999) *
               C89998 +
           (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) * C89926 *
                C89999 -
            ((C38615 * C6323 + C40486 + C40486 + C38610 * C6329 +
              C38613 * C6324 + C40487 + C40487 + C38609 * C6330) *
                 C55293 +
             (C43395 + C43394) * C55292) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C38614 +
              (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
              C217 * C38610) *
                 C55292 +
             (C57145 + C57146 + C57147 + C57148) * C55293) *
                C89999 -
            ((C57149 + C57150 + C57151 + C57152) * C55293 +
             (C57148 + C57147 + C57146 + C57145) * C55292) *
                C89907) *
               C89998 +
           (((C60131 + C60132 + C60133 + C60134) * C55292 +
             (C29642 * C38614 + C29643 * C38609 + C29644 * C38616 +
              C29645 * C38610) *
                 C55293) *
                C89907 -
            ((C60134 + C60133 + C60132 + C60131) * C55293 +
             (C972 * C38610 + C973 * C38616 +
              (C186 * C837 + C89926 * C947) * C38609 +
              (C186 * C829 + C89926 * C939) * C38614) *
                 C55292) *
                C89999) *
               C89879) *
              C825 +
          ((((C57153 + C57154 + C57155 + C57156) * C55292 +
             (C57157 + C57158 + C57159 + C57160) * C55293) *
                C89907 -
            ((C57156 + C57155 + C57154 + C57153) * C55293 +
             (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                 C55292) *
                C89999) *
               C89998 +
           (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                 C55292 +
             (C60135 + C60136 + C60137 + C60138) * C55293) *
                C89999 -
            (((C186 * C6326 + C89926 * C6412) * C38610 +
              (C186 * C6323 + C89926 * C6409) * C38616 + C29645 * C38609 +
              C29644 * C38614) *
                 C55293 +
             (C60138 + C60137 + C60136 + C60135) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C38614 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C38609 +
             (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
                C89926 * C89999 -
            ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
             (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C38609 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C38614) *
                C89926 * C89907) *
               C89998 +
           (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C38614 +
             (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
              C55293 * C6494) *
                 C38609 +
             (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
                C89926 * C89907 -
            ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
             (C55429 * C4163 + C55293 * C4397 + C55428 * C837 +
              C55292 * C1061) *
                 C38609 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C38614) *
                C89926 * C89999) *
               C89879) *
              C825 +
          ((((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
             (C59237 + C59238) * C38616 + (C59239 + C59240) * C38610) *
                C89926 * C89907 -
            ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
             (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
                C89926 * C89999) *
               C89998 +
           (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
             (C58305 + C58306) * C38616 + (C58307 + C58308) * C38610) *
                C89926 * C89999 -
            ((C55429 * C6326 + C55293 * C6492 + C55428 * C4165 +
              C55292 * C4399) *
                 C38610 +
             (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
              C55292 * C4395) *
                 C38616 +
             (C60280 + C60279) * C38609 + (C60278 + C60277) * C38614) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                  C186 +
              (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                  C89926) *
                 C55292 +
             ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
                C89999 -
            (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
             ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
                C89907) *
               C89998 +
           ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
             ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
                C89907 -
            (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
             ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
                C89999) *
               C89879) *
              C825 +
          (((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
             ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
                C89907 -
            (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
             ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                  C89926 +
              (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                  C186) *
                 C55292) *
                C89999) *
               C89998 +
           ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
             ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
                C89999 -
            (((C38616 * C6409 + C38610 * C6569 + C38614 * C6410 +
               C38609 * C6570) *
                  C89926 +
              (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
               C38609 * C6327) *
                  C186) *
                 C55293 +
             ((C43829 + C43828) * C89926 + (C43827 + C43826) * C186) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
              C446 * C38610) *
                 C55292 +
             (C57527 + C57528) * C55293) *
                C89999 -
            ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) *
                C89907) *
               C89998 +
           (((C60541 + C60542) * C55292 +
             (C29980 * C38609 + C29981 * C38610) * C55293) *
                C89907 -
            ((C60542 + C60541) * C55293 +
             (C1281 * C38610 +
              (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                 C55292) *
                C89999) *
               C89879) *
              C825 +
          ((((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C89907 -
            ((C57532 + C57531) * C55293 +
             (C447 * C38610 + C446 * C38609) * C55292) *
                C89999) *
               C89998 +
           (((C1281 * C38609 + C1280 * C38610) * C55292 +
             (C60543 + C60544) * C55293) *
                C89999 -
            (((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C38610 +
              C29981 * C38609) *
                 C55293 +
             (C60544 + C60543) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C55428 * C106 + C55292 * C274 + C55429 * C1762 +
               C55293 * C1986) *
                  C186 +
              (C55428 * C187 + C55292 * C499 + C55429 * C1872 +
               C55293 * C2292) *
                  C89926) *
                 C38609 +
             ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
                C89999 -
            (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
             ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
               C55292 * C2292) *
                  C89926 +
              (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
               C55292 * C1986) *
                  C186) *
                 C38609) *
                C89907) *
               C89998 +
           ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
               C55293 * C6491) *
                  C186 +
              (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
               C55293 * C6728) *
                  C89926) *
                 C38609 +
             ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
                C89907 -
            (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
             ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
               C55292 * C1359) *
                  C89926 +
              (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
               C55292 * C1053) *
                  C186) *
                 C38609) *
                C89999) *
               C89879) *
              C825 +
          (((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
             ((C59237 + C59238) * C186 + (C59553 + C59554) * C89926) * C38610) *
                C89907 -
            (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
             ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
                C89999) *
               C89998 +
           ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
             ((C58305 + C58306) * C186 + (C58607 + C58608) * C89926) * C38610) *
                C89999 -
            (((C55429 * C6409 + C55293 * C6726 + C55428 * C4277 +
               C55292 * C4731) *
                  C89926 +
              (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
               C55292 * C4395) *
                  C186) *
                 C38610 +
             ((C60680 + C60679) * C89926 + (C60278 + C60277) * C186) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C55428 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C55292 +
             (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
                C89926 * C89999 -
            ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
             (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
                C89926 * C89907) *
               C89998 +
           (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
             (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
                C89926 * C89907 -
            ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
             (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
                C89926 * C89999) *
               C89879) *
              C825 +
          ((((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
             (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
                C89926 * C89907 -
            ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
             (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C55292 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C55428) *
                C89926 * C89999) *
               C89998 +
           (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
             (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
                C89926 * C89999 -
            ((C38616 * C6489 + C38610 * C6803 + C38614 * C6490 +
              C38609 * C6804) *
                 C55293 +
             (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
              C38609 * C6327) *
                 C55429 +
             (C44251 + C44250) * C55292 + (C43827 + C43826) * C55428) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C186 * C106 + C89926 * C187) * C55428 +
                        (C186 * C274 + C89926 * C633) * C55292 +
                        C27369 * C55429 + C27949 * C55293) *
                           C38609 +
                       (C55815 + C55816 + C55817 + C55818) * C38610) *
                          C89999 -
                      ((C57865 + C57866 + C57867 + C57868) * C38610 +
                       (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                        C27369 * C55428) *
                           C38609) *
                          C89907) *
                         C89998 +
                     (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                        C30292 * C55293) *
                           C38609 +
                       (C60941 + C60942 + C60943 + C60944) * C38610) *
                          C89907 -
                      ((C56766 + C56767 + C56768 + C56769) * C38610 +
                       (C30291 * C55293 + C29640 * C55429 +
                        (C186 * C1053 + C89926 * C1543) * C55292 +
                        (C186 * C829 + C89926 * C939) * C55428) *
                           C38609) *
                          C89999) *
                         C89879) *
                        C825 +
                    ((((C57868 + C57867 + C57866 + C57865) * C38609 +
                       (C59757 + C59758 + C59759 + C59760) * C38610) *
                          C89907 -
                      ((C55819 + C55820 + C55821 + C55822) * C38610 +
                       (C55818 + C55817 + C55816 + C55815) * C38609) *
                          C89999) *
                         C89998 +
                     (((C56769 + C56768 + C56767 + C56766) * C38609 +
                       (C58805 + C58806 + C58807 + C58808) * C38610) *
                          C89999 -
                      (((C186 * C6489 + C89926 * C6880) * C55293 +
                        (C186 * C6323 + C89926 * C6409) * C55429 +
                        C4955 * C55292 + C4294 * C55428) *
                           C38610 +
                       (C60944 + C60943 + C60942 + C60941) * C38609) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                        C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                           C89926 * C38609 +
                       (C55929 + C55930) * C89926 * C38610) *
                          C89999 -
                      ((C57999 + C58000) * C89926 * C38610 +
                       (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                        C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                           C89926 * C38609) *
                          C89907) *
                         C89998 +
                     (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                        C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                           C89926 * C38609 +
                       (C61089 + C61090) * C89926 * C38610) *
                          C89907 -
                      ((C56903 + C56904) * C89926 * C38610 +
                       (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                        C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                           C89926 * C38609) *
                          C89999) *
                         C89879) *
                        C825 +
                    ((((C58000 + C57999) * C89926 * C38609 +
                       (C59869 + C59870) * C89926 * C38610) *
                          C89907 -
                      ((C55931 + C55932) * C89926 * C38610 +
                       (C55930 + C55929) * C89926 * C38609) *
                          C89999) *
                         C89998 +
                     (((C56904 + C56903) * C89926 * C38609 +
                       (C58917 + C58918) * C89926 * C38610) *
                          C89999 -
                      ((C55893 * C6323 + C61083 + C61083 + C55293 * C6957 +
                        C55892 * C4161 + C61084 + C61084 + C55292 * C5057) *
                           C89926 * C38610 +
                       (C61090 + C61089) * C89926 * C38609) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C38613 * C1762 + C40477 + C40477 + C38609 * C1778 +
                       C38615 * C1761 + C40476 + C40476 + C38610 * C1777) *
                          C55293) *
                         C89926 * C89843 * C822 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C89843 * C823 +
                     ((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                         C89926 * C89843 * C824) *
                        C825 +
                    (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) *
                         C89926 * C89843 * C823 -
                     ((C38615 * C1760 + C40483 + C40483 + C38610 * C1776 +
                       C38613 * C1761 + C40482 + C40482 + C38609 * C1777) *
                          C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C89843 * C822 -
                     ((C38615 * C8590 + C43382 + C43382 + C38610 * C8596 +
                       C38613 * C8591 + C43383 + C43383 + C38609 * C8597) *
                          C55293 +
                      (C39423 + C39422) * C55292) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C55292 +
                     (C38613 * C1762 + C40477 + C40477 + C38609 * C1778 +
                      C38615 * C1761 + C40476 + C40476 + C38610 * C1777) *
                         C55293) *
                        C89926 * C89843 * C89827 * C96 -
                    ((C38615 * C1760 + C40483 + C40483 + C38610 * C1776 +
                      C38613 * C1761 + C40482 + C40482 + C38609 * C1777) *
                         C55293 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C55292) *
                        C89926 * C89843 * C89827 * C97 +
                    ((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                      C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                         C55292 +
                     (C38613 * C1760 + C42421 + C42421 + C38609 * C1776 +
                      C38615 * C1766 + C42420 + C42420 + C38610 * C1782) *
                         C55293) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C38615 * C3416 + C55295 + C55295 + C38610 * C3418 +
                      C38613 * C1766 + C55296 + C55296 + C38609 * C1782) *
                         C55293 +
                     (C38615 * C110 + C38632 + C38632 + C38610 * C122 +
                      C38613 * C109 + C38633 + C38633 + C38609 * C121) *
                         C55292) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C1757 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C1758 +
                     ((C57042 + C57041) * C55292 +
                      (C38613 * C10620 + C51759 + C51759 + C38609 * C10626 +
                       C38615 * C10619 + C51758 + C51758 + C38610 * C10625) *
                          C55293) *
                         C89926 * C1759) *
                        C89827 * C825 +
                    (((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) *
                         C89926 * C1758 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C1757 -
                     ((C38615 * C10618 + C57021 + C57021 + C38610 * C10624 +
                       C38613 * C10619 + C57022 + C57022 + C38609 * C10625) *
                          C55293 +
                      (C57046 + C57045) * C55292) *
                         C89926 * C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C27369 * C38614 + C27370 * C38609 + C1906 * C38616 +
             C1905 * C38610) *
                C55293) *
               C89843 * C822 -
           ((C4293 * C38610 + C4292 * C38616 + C29641 * C38609 +
             C29640 * C38614) *
                C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C89843 * C823 +
           (((C186 * C830 + C89926 * C940) * C38614 +
             (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
             C975 * C38610) *
                C55292 +
            (C33943 * C38614 + C33944 * C38609 + C56135 * C38616 +
             C56136 * C38610) *
                C55293) *
               C89843 * C824) *
              C825 +
          (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                C55292 +
            (C4292 * C38614 + C4293 * C38609 + C4294 * C38616 +
             C4295 * C38610) *
                C55293) *
               C89843 * C823 -
           ((C1903 * C38610 + C1904 * C38616 + C1905 * C38609 +
             C1906 * C38614) *
                C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C89843 * C822 -
           (((C186 * C8593 + C89926 * C8679) * C38610 +
             (C186 * C8590 + C89926 * C8676) * C38616 + C56136 * C38609 +
             C56135 * C38614) *
                C55293 +
            (C977 * C38610 + C976 * C38616 + C975 * C38609 + C974 * C38614) *
                C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C38614 +
            (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
            C217 * C38610) *
               C55292 +
           (C27369 * C38614 + C27370 * C38609 + C1906 * C38616 +
            C1905 * C38610) *
               C55293) *
              C89843 * C89827 * C96 -
          ((C1903 * C38610 + C1904 * C38616 + C1905 * C38609 + C1906 * C38614) *
               C55293 +
           (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
               C55292) *
              C89843 * C89827 * C97 +
          ((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
               C55292 +
           (C1904 * C38614 + C1903 * C38609 + C3503 * C38616 + C3504 * C38610) *
               C55293) *
              C89843 * C89827 * C98 -
          (((C186 * C3417 + C89926 * C3497) * C38610 +
            (C186 * C3416 + C89926 * C3496) * C38616 + C3504 * C38609 +
            C3503 * C38614) *
               C55293 +
           (C223 * C38610 + C222 * C38616 + C220 * C38609 + C221 * C38614) *
               C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C1757 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C1758 +
           ((C57152 + C57151 + C57150 + C57149) * C55292 +
            (C27374 * C38614 + C27373 * C38609 + C27375 * C38616 +
             C27376 * C38610) *
                C55293) *
               C1759) *
              C89827 * C825 +
          (((C57153 + C57154 + C57155 + C57156) * C55292 +
            (C57157 + C57158 + C57159 + C57160) * C55293) *
               C1758 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C1757 -
           (((C186 * C10621 + C89926 * C10683) * C38610 +
             (C186 * C10618 + C89926 * C10680) * C38616 + C27376 * C38609 +
             C27375 * C38614) *
                C55293 +
            (C57160 + C57159 + C57158 + C57157) * C55292) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89843 * C822 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C89843 * C823 +
           ((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C38614 +
            (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
                C38609 +
            (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
               C89926 * C89843 * C824) *
              C825 +
          (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
            (C55428 * C827 + C55292 * C1051 + C55429 * C4161 + C55293 * C4395) *
                C38616 +
            (C55428 * C835 + C55292 * C1059 + C55429 * C4165 + C55293 * C4399) *
                C38610) *
               C89926 * C89843 * C823 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C89843 * C822 -
           ((C55429 * C8593 + C55293 * C8759 + C55428 * C840 + C55292 * C1064) *
                C38610 +
            (C55429 * C8590 + C55293 * C8756 + C55428 * C832 + C55292 * C1056) *
                C38616 +
            (C56258 + C56257) * C38609 + (C56256 + C56255) * C38614) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38614 +
           (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
               C38609 +
           (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
              C89926 * C89843 * C89827 * C96 -
          ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
           (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
              C89926 * C89843 * C89827 * C97 +
          ((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
           (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
              C89926 * C89843 * C89827 * C98 -
          ((C55429 * C3417 + C55293 * C3579 + C55428 * C116 + C55292 * C284) *
               C38610 +
           (C55429 * C3416 + C55293 * C3578 + C55428 * C110 + C55292 * C278) *
               C38616 +
           (C55466 + C55465) * C38609 + (C55464 + C55463) * C38614) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C1757 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C1758 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38614 +
            (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
             C55293 * C10741) *
                C38609 +
            (C57279 + C57280) * C38616 + (C57281 + C57282) * C38610) *
               C89926 * C1759) *
              C89827 * C825 +
          (((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
            (C55428 * C1760 + C55292 * C1984 + C55429 * C1765 +
             C55293 * C1989) *
                C38616 +
            (C55428 * C1768 + C55292 * C1992 + C55429 * C1773 +
             C55293 * C1997) *
                C38610) *
               C89926 * C1758 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C1757 -
           ((C55429 * C10621 + C55293 * C10739 + C55428 * C1773 +
             C55292 * C1997) *
                C38610 +
            (C55429 * C10618 + C55293 * C10736 + C55428 * C1765 +
             C55292 * C1989) *
                C38616 +
            (C57282 + C57281) * C38609 + (C57280 + C57279) * C38614) *
               C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C38614 * C1762 + C38609 * C1770 + C38616 * C1761 +
              C38610 * C1769) *
                 C186 +
             (C38614 * C1872 + C38609 * C2100 + C38616 * C1871 +
              C38610 * C2099) *
                 C89926) *
                C55293) *
               C89843 * C822 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C89843 * C823 +
           (((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
            ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
               C89843 * C824) *
              C825 +
          ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
            ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
               C89843 * C823 -
           (((C38616 * C1870 + C38610 * C2098 + C38614 * C1871 +
              C38609 * C2099) *
                 C89926 +
             (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 +
              C38609 * C1769) *
                 C186) *
                C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C89843 * C822 -
           (((C38616 * C8676 + C38610 * C8836 + C38614 * C8677 +
              C38609 * C8837) *
                 C89926 +
             (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
              C38609 * C8594) *
                 C186) *
                C55293 +
            ((C39805 + C39804) * C89926 + (C39803 + C39802) * C186) * C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C186 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C89926) *
               C55292 +
           ((C38614 * C1762 + C38609 * C1770 + C38616 * C1761 +
             C38610 * C1769) *
                C186 +
            (C38614 * C1872 + C38609 * C2100 + C38616 * C1871 +
             C38610 * C2099) *
                C89926) *
               C55293) *
              C89843 * C89827 * C96 -
          (((C38616 * C1870 + C38610 * C2098 + C38614 * C1871 +
             C38609 * C2099) *
                C89926 +
            (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 +
             C38609 * C1769) *
                C186) *
               C55293 +
           ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C89926 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C186) *
               C55292) *
              C89843 * C89827 * C97 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C186 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C89926) *
               C55292 +
           ((C38614 * C1760 + C38609 * C1768 + C38616 * C1766 +
             C38610 * C1774) *
                C186 +
            (C38614 * C1870 + C38609 * C2098 + C38616 * C1876 +
             C38610 * C2104) *
                C89926) *
               C55293) *
              C89843 * C89827 * C98 -
          (((C38616 * C3496 + C38610 * C3660 + C38614 * C1876 +
             C38609 * C2104) *
                C89926 +
            (C38616 * C3416 + C38610 * C3417 + C38614 * C1766 +
             C38609 * C1774) *
                C186) *
               C55293 +
           ((C38616 * C191 + C38610 * C364 + C38614 * C190 + C38609 * C363) *
                C89926 +
            (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
                C186) *
               C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C1757 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C1758 +
           (((C57420 + C57419) * C186 + (C57418 + C57417) * C89926) * C55292 +
            ((C38614 * C10620 + C38609 * C10623 + C38616 * C10619 +
              C38610 * C10622) *
                 C186 +
             (C38614 * C10682 + C38609 * C10794 + C38616 * C10681 +
              C38610 * C10793) *
                 C89926) *
                C55293) *
               C1759) *
              C89827 * C825 +
          ((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
            ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
               C1758 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C1757 -
           (((C38616 * C10680 + C38610 * C10792 + C38614 * C10681 +
              C38609 * C10793) *
                 C89926 +
             (C38616 * C10618 + C38610 * C10621 + C38614 * C10619 +
              C38609 * C10622) *
                 C186) *
                C55293 +
            ((C57428 + C57427) * C89926 + (C57426 + C57425) * C186) * C55292) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C27687 * C38609 + C2214 * C38610) * C55293) *
               C89843 * C822 -
           ((C4630 * C38610 + C29979 * C38609) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C89843 * C823 +
           (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
             C1282 * C38610) *
                C55292 +
            (C34186 * C38609 + C56459 * C38610) * C55293) *
               C89843 * C824) *
              C825 +
          (((C1281 * C38609 + C1280 * C38610) * C55292 +
            (C4630 * C38609 + C4631 * C38610) * C55293) *
               C89843 * C823 -
           ((C2213 * C38610 + C2214 * C38609) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C89843 * C822 -
           (((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C38610 +
             C56459 * C38609) *
                C55293 +
            (C1283 * C38610 + C1282 * C38609) * C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
            C446 * C38610) *
               C55292 +
           (C27687 * C38609 + C2214 * C38610) * C55293) *
              C89843 * C89827 * C96 -
          ((C2213 * C38610 + C2214 * C38609) * C55293 +
           (C447 * C38610 + C446 * C38609) * C55292) *
              C89843 * C89827 * C97 +
          ((C447 * C38609 + C448 * C38610) * C55292 +
           (C2213 * C38609 + C3742 * C38610) * C55293) *
              C89843 * C89827 * C98 -
          (((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C38610 +
            C3742 * C38609) *
               C55293 +
           (C449 * C38610 + C448 * C38609) * C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C1757 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C1758 +
           ((C57530 + C57529) * C55292 +
            (C27689 * C38609 + C27690 * C38610) * C55293) *
               C1759) *
              C89827 * C825 +
          (((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C1758 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C1757 -
           (((C416 * C10618 + C10849 + C10849 + C89926 * C10845) * C38610 +
             C27690 * C38609) *
                C55293 +
            (C57534 + C57533) * C55292) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89843 * C822 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C89843 * C823 +
           (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 +
              C55293 * C8758) *
                 C186 +
             (C55428 * C940 + C55292 * C1360 + C55429 * C8678 +
              C55293 * C8995) *
                 C89926) *
                C38609 +
            ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
               C89843 * C824) *
              C825 +
          ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
            ((C55428 * C827 + C55292 * C1051 + C55429 * C4161 +
              C55293 * C4395) *
                 C186 +
             (C55428 * C937 + C55292 * C1357 + C55429 * C4277 +
              C55293 * C4731) *
                 C89926) *
                C38610) *
               C89843 * C823 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C89843 * C822 -
           (((C55429 * C8676 + C55293 * C8993 + C55428 * C942 +
              C55292 * C1362) *
                 C89926 +
             (C55429 * C8590 + C55293 * C8756 + C55428 * C832 +
              C55292 * C1056) *
                 C186) *
                C38610 +
            ((C56569 + C56568) * C89926 + (C56256 + C56255) * C186) * C38609) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C186 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C89926) *
               C38609 +
           ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
              C89843 * C89827 * C96 -
          (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
           ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
              C89843 * C89827 * C97 +
          (((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
           ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
              C89843 * C89827 * C98 -
          (((C55429 * C3496 + C55293 * C3816 + C55428 * C191 + C55292 * C503) *
                C89926 +
            (C55429 * C3416 + C55293 * C3578 + C55428 * C110 + C55292 * C278) *
                C186) *
               C38610 +
           ((C55682 + C55681) * C89926 + (C55464 + C55463) * C186) * C38609) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C1757 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C1758 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C186 +
             (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
              C55293 * C10903) *
                 C89926) *
                C38609 +
            ((C57279 + C57280) * C186 + (C57643 + C57644) * C89926) * C38610) *
               C1759) *
              C89827 * C825 +
          ((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
            ((C55428 * C1760 + C55292 * C1984 + C55429 * C1765 +
              C55293 * C1989) *
                 C186 +
             (C55428 * C1870 + C55292 * C2290 + C55429 * C1875 +
              C55293 * C2295) *
                 C89926) *
                C38610) *
               C1758 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C1757 -
           (((C55429 * C10680 + C55293 * C10901 + C55428 * C1875 +
              C55292 * C2295) *
                 C89926 +
             (C55429 * C10618 + C55293 * C10736 + C55428 * C1765 +
              C55292 * C1989) *
                 C186) *
                C38610 +
            ((C57644 + C57643) * C89926 + (C57280 + C57279) * C186) * C38609) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C38614 * C1762 + C38609 * C1770 + C38616 * C1761 +
             C38610 * C1769) *
                C55429 +
            (C38614 * C1986 + C38609 * C2394 + C38616 * C1985 +
             C38610 * C2393) *
                C55293) *
               C89926 * C89843 * C822 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C89843 * C823 +
           ((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
            (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
               C89926 * C89843 * C824) *
              C825 +
          (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
            (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
               C89926 * C89843 * C823 -
           ((C38616 * C1984 + C38610 * C2392 + C38614 * C1985 +
             C38609 * C2393) *
                C55293 +
            (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 +
             C38609 * C1769) *
                C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C89843 * C822 -
           ((C38616 * C8756 + C38610 * C9070 + C38614 * C8757 +
             C38609 * C9071) *
                C55293 +
            (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
             C38609 * C8594) *
                C55429 +
            (C40163 + C40162) * C55292 + (C39803 + C39802) * C55428) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C55428 +
           (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
               C55292 +
           (C38614 * C1762 + C38609 * C1770 + C38616 * C1761 + C38610 * C1769) *
               C55429 +
           (C38614 * C1986 + C38609 * C2394 + C38616 * C1985 + C38610 * C2393) *
               C55293) *
              C89926 * C89843 * C89827 * C96 -
          ((C38616 * C1984 + C38610 * C2392 + C38614 * C1985 + C38609 * C2393) *
               C55293 +
           (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 + C38609 * C1769) *
               C55429 +
           (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
               C55292 +
           (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
               C55428) *
              C89926 * C89843 * C89827 * C97 +
          ((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
               C55428 +
           (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
               C55292 +
           (C38614 * C1760 + C38609 * C1768 + C38616 * C1766 + C38610 * C1774) *
               C55429 +
           (C38614 * C1984 + C38609 * C2392 + C38616 * C1990 + C38610 * C2398) *
               C55293) *
              C89926 * C89843 * C89827 * C98 -
          ((C38616 * C3578 + C38610 * C3897 + C38614 * C1990 + C38609 * C2398) *
               C55293 +
           (C38616 * C3416 + C38610 * C3417 + C38614 * C1766 + C38609 * C1774) *
               C55429 +
           (C38616 * C278 + C38610 * C581 + C38614 * C277 + C38609 * C580) *
               C55292 +
           (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
               C55428) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C1757 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C1758 +
           ((C57420 + C57419) * C55428 + (C57762 + C57761) * C55292 +
            (C38614 * C10620 + C38609 * C10623 + C38616 * C10619 +
             C38610 * C10622) *
                C55429 +
            (C38614 * C10738 + C38609 * C10956 + C38616 * C10737 +
             C38610 * C10955) *
                C55293) *
               C89926 * C1759) *
              C89827 * C825 +
          (((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
            (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
               C89926 * C1758 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C1757 -
           ((C38616 * C10736 + C38610 * C10954 + C38614 * C10737 +
             C38609 * C10955) *
                C55293 +
            (C38616 * C10618 + C38610 * C10621 + C38614 * C10619 +
             C38609 * C10622) *
                C55429 +
            (C57766 + C57765) * C55292 + (C57426 + C57425) * C55428) *
               C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C55428 +
             (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
             C27949 * C55293) *
                C38609 +
            (C55815 + C55816 + C55817 + C55818) * C38610) *
               C89843 * C822 -
           ((C56766 + C56767 + C56768 + C56769) * C38610 +
            (C30291 * C55293 + C29640 * C55429 +
             (C186 * C1053 + C89926 * C1543) * C55292 +
             (C186 * C829 + C89926 * C939) * C55428) *
                C38609) *
               C89843 * C823 +
           (((C186 * C830 + C89926 * C940) * C55428 +
             (C186 * C1054 + C89926 * C1544) * C55292 + C33943 * C55429 +
             C34416 * C55293) *
                C38609 +
            (C56770 + C56771 + C56772 + C56776) * C38610) *
               C89843 * C824) *
              C825 +
          (((C56769 + C56768 + C56767 + C56766) * C38609 +
            (C971 * C55428 + C1562 * C55292 + C4294 * C55429 + C4955 * C55293) *
                C38610) *
               C89843 * C823 -
           ((C55819 + C55820 + C55821 + C55822) * C38610 +
            (C55818 + C55817 + C55816 + C55815) * C38609) *
               C89843 * C822 -
           (((C186 * C8756 + C89926 * C9147) * C55293 +
             (C186 * C8590 + C89926 * C8676) * C55429 + C1565 * C55292 +
             C976 * C55428) *
                C38610 +
            (C56776 + C56772 + C56771 + C56770) * C38609) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C55428 +
            (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
            C27949 * C55293) *
               C38609 +
           (C55815 + C55816 + C55817 + C55818) * C38610) *
              C89843 * C89827 * C96 -
          ((C55819 + C55820 + C55821 + C55822) * C38610 +
           (C55818 + C55817 + C55816 + C55815) * C38609) *
              C89843 * C89827 * C97 +
          ((C55822 + C55821 + C55820 + C55819) * C38609 +
           (C55823 + C55824 + C55825 + C55826) * C38610) *
              C89843 * C89827 * C98 -
          (((C186 * C3578 + C89926 * C3972) * C55293 +
            (C186 * C3416 + C89926 * C3496) * C55429 + C655 * C55292 +
            C222 * C55428) *
               C38610 +
           (C55826 + C55825 + C55824 + C55823) * C38609) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C55428 +
             (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
             C27949 * C55293) *
                C38609 +
            (C55815 + C55816 + C55817 + C55818) * C38610) *
               C1757 -
           ((C57865 + C57866 + C57867 + C57868) * C38610 +
            (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
             C27369 * C55428) *
                C38609) *
               C1758 +
           ((C27371 * C55428 + C27950 * C55292 + C27374 * C55429 +
             C27951 * C55293) *
                C38609 +
            (C57869 + C57870 + C57871 + C57872) * C38610) *
               C1759) *
              C89827 * C825 +
          (((C57868 + C57867 + C57866 + C57865) * C38609 +
            (C1904 * C55428 + C2495 * C55292 + C1909 * C55429 +
             C2498 * C55293) *
                C38610) *
               C1758 -
           ((C55819 + C55820 + C55821 + C55822) * C38610 +
            (C55818 + C55817 + C55816 + C55815) * C38609) *
               C1757 -
           (((C186 * C10736 + C89926 * C11007) * C55293 +
             (C186 * C10618 + C89926 * C10680) * C55429 + C2498 * C55292 +
             C1909 * C55428) *
                C38610 +
            (C57872 + C57871 + C57870 + C57869) * C38609) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89843 * C822 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C89843 * C823 +
                     ((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                       C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                          C89926 * C38609 +
                      (C56905 + C56906) * C89926 * C38610) *
                         C89843 * C824) *
                        C825 +
                    (((C56904 + C56903) * C89926 * C38609 +
                      (C55892 * C827 + C56891 + C56891 + C55292 * C1643 +
                       C55893 * C4161 + C56892 + C56892 + C55293 * C5057) *
                          C89926 * C38610) *
                         C89843 * C823 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C89843 * C822 -
                     ((C55893 * C8590 + C56893 + C56893 + C55293 * C9224 +
                       C55892 * C832 + C56894 + C56894 + C55292 * C1648) *
                          C89926 * C38610 +
                      (C56906 + C56905) * C89926 * C38609) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C89926 * C38609 +
                     (C55929 + C55930) * C89926 * C38610) *
                        C89843 * C89827 * C96 -
                    ((C55931 + C55932) * C89926 * C38610 +
                     (C55930 + C55929) * C89926 * C38609) *
                        C89843 * C89827 * C97 +
                    ((C55932 + C55931) * C89926 * C38609 +
                     (C55933 + C55934) * C89926 * C38610) *
                        C89843 * C89827 * C98 -
                    ((C55893 * C3416 + C55915 + C55915 + C55293 * C4053 +
                      C55892 * C110 + C55916 + C55916 + C55292 * C716) *
                         C89926 * C38610 +
                     (C55934 + C55933) * C89926 * C38609) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C1757 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C1758 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C89926 * C38609 +
                      (C58001 + C58002) * C89926 * C38610) *
                         C1759) *
                        C89827 * C825 +
                    (((C58000 + C57999) * C89926 * C38609 +
                      (C55892 * C1760 + C57987 + C57987 + C55292 * C2576 +
                       C55893 * C1765 + C57988 + C57988 + C55293 * C2581) *
                          C89926 * C38610) *
                         C1758 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C1757 -
                     ((C55893 * C10618 + C57989 + C57989 + C55293 * C11060 +
                       C55892 * C1765 + C57990 + C57990 + C55292 * C2581) *
                          C89926 * C38610 +
                      (C58002 + C58001) * C89926 * C38609) *
                         C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C89999 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C89907) *
                        C89827 * C90022 +
                    (((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) *
                         C89926 * C89907 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C89999) *
                        C89827 * C90023 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C55292 +
                      (C59027 + C59028) * C55293) *
                         C89926 * C89999 -
                     ((C38615 * C1767 + C59021 + C59021 + C38610 * C1783 +
                       C38613 * C1765 + C59022 + C59022 + C38609 * C1781) *
                          C55293 +
                      (C59028 + C59027) * C55292) *
                         C89926 * C89907) *
                        C89827 * C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C89999 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C89907) *
              C89827 * C90022 +
          (((C57153 + C57154 + C57155 + C57156) * C55292 +
            (C57157 + C57158 + C57159 + C57160) * C55293) *
               C89907 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C89999) *
              C89827 * C90023 +
          (((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
                C55292 +
            (C59127 + C59128 + C59129 + C59130) * C55293) *
               C89999 -
           (((C186 * C1775 + C89926 * C1885) * C38610 +
             (C186 * C1767 + C89926 * C1877) * C38616 + C1910 * C38609 +
             C1909 * C38614) *
                C55293 +
            (C59130 + C59129 + C59128 + C59127) * C55292) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eexz[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89999 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C89907) *
              C89827 * C90022 +
          (((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
            (C59237 + C59238) * C38616 + (C59239 + C59240) * C38610) *
               C89926 * C89907 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C89999) *
              C89827 * C90023 +
          (((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
            (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
               C89926 * C89999 -
           ((C55429 * C1775 + C55293 * C1999 + C55428 * C1774 +
             C55292 * C1998) *
                C38610 +
            (C55429 * C1767 + C55293 * C1991 + C55428 * C1766 +
             C55292 * C1990) *
                C38616 +
            (C59240 + C59239) * C38609 + (C59238 + C59237) * C38614) *
               C89926 * C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C89999 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C89907) *
              C89827 * C90022 +
          ((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
            ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
               C89907 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C89999) *
              C89827 * C90023 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C186 +
             (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                 C89926) *
                C55292 +
            ((C59347 + C59348) * C186 + (C59349 + C59350) * C89926) * C55293) *
               C89999 -
           (((C38616 * C1877 + C38610 * C2105 + C38614 * C1875 +
              C38609 * C2103) *
                 C89926 +
             (C38616 * C1767 + C38610 * C1775 + C38614 * C1765 +
              C38609 * C1773) *
                 C186) *
                C55293 +
            ((C59350 + C59349) * C89926 + (C59348 + C59347) * C186) * C55292) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C89999 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C89907) *
              C89827 * C90022 +
          (((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C89907 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C89999) *
              C89827 * C90023 +
          (((C447 * C38609 + C448 * C38610) * C55292 +
            (C59449 + C59450) * C55293) *
               C89999 -
           (((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C38610 +
             C2216 * C38609) *
                C55293 +
            (C59450 + C59449) * C55292) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89999 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C89907) *
              C89827 * C90022 +
          ((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
            ((C59237 + C59238) * C186 + (C59553 + C59554) * C89926) * C38610) *
               C89907 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C89999) *
              C89827 * C90023 +
          ((((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
            ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
               C89999 -
           (((C55429 * C1877 + C55293 * C2297 + C55428 * C1876 +
              C55292 * C2296) *
                 C89926 +
             (C55429 * C1767 + C55293 * C1991 + C55428 * C1766 +
              C55292 * C1990) *
                 C186) *
                C38610 +
            ((C59554 + C59553) * C89926 + (C59238 + C59237) * C186) * C38609) *
               C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezx[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C89999 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C89907) *
              C89827 * C90022 +
          (((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
            (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
               C89926 * C89907 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C89999) *
              C89827 * C90023 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C55428 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C55292 +
            (C59347 + C59348) * C55429 + (C59657 + C59658) * C55293) *
               C89926 * C89999 -
           ((C38616 * C1991 + C38610 * C2399 + C38614 * C1989 +
             C38609 * C2397) *
                C55293 +
            (C38616 * C1767 + C38610 * C1775 + C38614 * C1765 +
             C38609 * C1773) *
                C55429 +
            (C59658 + C59657) * C55292 + (C59348 + C59347) * C55428) *
               C89926 * C89907) *
              C89827 * C2694)) /
        (p * q * std::sqrt(p + q));
    d2eezy[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C89999 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C89907) *
                        C89827 * C90022 +
                    (((C57868 + C57867 + C57866 + C57865) * C38609 +
                      (C59757 + C59758 + C59759 + C59760) * C38610) *
                         C89907 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C89999) *
                        C89827 * C90023 +
                    (((C55822 + C55821 + C55820 + C55819) * C38609 +
                      (C55823 + C55824 + C55825 + C55826) * C38610) *
                         C89999 -
                     (((C186 * C1991 + C89926 * C2481) * C55293 +
                       (C186 * C1767 + C89926 * C1877) * C55429 +
                       C3978 * C55292 + C3503 * C55428) *
                          C38610 +
                      (C59760 + C59759 + C59758 + C59757) * C38609) *
                         C89907) *
                        C89827 * C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89999 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C89907) *
                        C89827 * C90022 +
                    (((C58000 + C57999) * C89926 * C38609 +
                      (C59869 + C59870) * C89926 * C38610) *
                         C89907 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C89999) *
                        C89827 * C90023 +
                    (((C55932 + C55931) * C89926 * C38609 +
                      (C55933 + C55934) * C89926 * C38610) *
                         C89999 -
                     ((C55893 * C1767 + C59863 + C59863 + C55293 * C2583 +
                       C55892 * C1766 + C59864 + C59864 + C55292 * C2582) *
                          C89926 * C38610 +
                      (C59870 + C59869) * C89926 * C38609) *
                         C89907) *
                        C89827 * C2694)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C55292 +
                     (C38613 * C1762 + C40477 + C40477 + C38609 * C1778 +
                      C38615 * C1761 + C40476 + C40476 + C38610 * C1777) *
                         C55293) *
                        C89926 * C89843 * C89827 * C96 -
                    ((C38615 * C1760 + C40483 + C40483 + C38610 * C1776 +
                      C38613 * C1761 + C40482 + C40482 + C38609 * C1777) *
                         C55293 +
                     (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                      C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                         C55292) *
                        C89926 * C89843 * C89827 * C97 +
                    ((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                      C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                         C55292 +
                     (C38613 * C1760 + C42421 + C42421 + C38609 * C1776 +
                      C38615 * C1766 + C42420 + C42420 + C38610 * C1782) *
                         C55293) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C38615 * C3416 + C55295 + C55295 + C38610 * C3418 +
                      C38613 * C1766 + C55296 + C55296 + C38609 * C1782) *
                         C55293 +
                     (C38615 * C110 + C38632 + C38632 + C38610 * C122 +
                      C38613 * C109 + C38633 + C38633 + C38609 * C121) *
                         C55292) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C38613 * C1762 + C40477 + C40477 + C38609 * C1778 +
                       C38615 * C1761 + C40476 + C40476 + C38610 * C1777) *
                          C55293) *
                         C89926 * C89843 * C822 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C89843 * C823 +
                     ((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                         C89926 * C89843 * C824) *
                        C825 +
                    (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) *
                         C89926 * C89843 * C823 -
                     ((C38615 * C1760 + C40483 + C40483 + C38610 * C1776 +
                       C38613 * C1761 + C40482 + C40482 + C38609 * C1777) *
                          C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C89843 * C822 -
                     ((C38615 * C8590 + C43382 + C43382 + C38610 * C8596 +
                       C38613 * C8591 + C43383 + C43383 + C38609 * C8597) *
                          C55293 +
                      (C39423 + C39422) * C55292) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C38614 +
            (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
            C217 * C38610) *
               C55292 +
           (C27369 * C38614 + C27370 * C38609 + C1906 * C38616 +
            C1905 * C38610) *
               C55293) *
              C89843 * C89827 * C96 -
          ((C1903 * C38610 + C1904 * C38616 + C1905 * C38609 + C1906 * C38614) *
               C55293 +
           (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
               C55292) *
              C89843 * C89827 * C97 +
          ((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
               C55292 +
           (C1904 * C38614 + C1903 * C38609 + C3503 * C38616 + C3504 * C38610) *
               C55293) *
              C89843 * C89827 * C98 -
          (((C186 * C3417 + C89926 * C3497) * C38610 +
            (C186 * C3416 + C89926 * C3496) * C38616 + C3504 * C38609 +
            C3503 * C38614) *
               C55293 +
           (C223 * C38610 + C222 * C38616 + C220 * C38609 + C221 * C38614) *
               C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C27369 * C38614 + C27370 * C38609 + C1906 * C38616 +
             C1905 * C38610) *
                C55293) *
               C89843 * C822 -
           ((C4293 * C38610 + C4292 * C38616 + C29641 * C38609 +
             C29640 * C38614) *
                C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C89843 * C823 +
           (((C186 * C830 + C89926 * C940) * C38614 +
             (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
             C975 * C38610) *
                C55292 +
            (C33943 * C38614 + C33944 * C38609 + C56135 * C38616 +
             C56136 * C38610) *
                C55293) *
               C89843 * C824) *
              C825 +
          (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                C55292 +
            (C4292 * C38614 + C4293 * C38609 + C4294 * C38616 +
             C4295 * C38610) *
                C55293) *
               C89843 * C823 -
           ((C1903 * C38610 + C1904 * C38616 + C1905 * C38609 +
             C1906 * C38614) *
                C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C89843 * C822 -
           (((C186 * C8593 + C89926 * C8679) * C38610 +
             (C186 * C8590 + C89926 * C8676) * C38616 + C56136 * C38609 +
             C56135 * C38614) *
                C55293 +
            (C977 * C38610 + C976 * C38616 + C975 * C38609 + C974 * C38614) *
                C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexz[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38614 +
           (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
               C38609 +
           (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
              C89926 * C89843 * C89827 * C96 -
          ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
           (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
              C89926 * C89843 * C89827 * C97 +
          ((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
           (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
              C89926 * C89843 * C89827 * C98 -
          ((C55429 * C3417 + C55293 * C3579 + C55428 * C116 + C55292 * C284) *
               C38610 +
           (C55429 * C3416 + C55293 * C3578 + C55428 * C110 + C55292 * C278) *
               C38616 +
           (C55466 + C55465) * C38609 + (C55464 + C55463) * C38614) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89843 * C822 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C89843 * C823 +
           ((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C38614 +
            (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
                C38609 +
            (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
               C89926 * C89843 * C824) *
              C825 +
          (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
            (C55428 * C827 + C55292 * C1051 + C55429 * C4161 + C55293 * C4395) *
                C38616 +
            (C55428 * C835 + C55292 * C1059 + C55429 * C4165 + C55293 * C4399) *
                C38610) *
               C89926 * C89843 * C823 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C89843 * C822 -
           ((C55429 * C8593 + C55293 * C8759 + C55428 * C840 + C55292 * C1064) *
                C38610 +
            (C55429 * C8590 + C55293 * C8756 + C55428 * C832 + C55292 * C1056) *
                C38616 +
            (C56258 + C56257) * C38609 + (C56256 + C56255) * C38614) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C186 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C89926) *
               C55292 +
           ((C38614 * C1762 + C38609 * C1770 + C38616 * C1761 +
             C38610 * C1769) *
                C186 +
            (C38614 * C1872 + C38609 * C2100 + C38616 * C1871 +
             C38610 * C2099) *
                C89926) *
               C55293) *
              C89843 * C89827 * C96 -
          (((C38616 * C1870 + C38610 * C2098 + C38614 * C1871 +
             C38609 * C2099) *
                C89926 +
            (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 +
             C38609 * C1769) *
                C186) *
               C55293 +
           ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                C89926 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C186) *
               C55292) *
              C89843 * C89827 * C97 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C186 +
            (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                C89926) *
               C55292 +
           ((C38614 * C1760 + C38609 * C1768 + C38616 * C1766 +
             C38610 * C1774) *
                C186 +
            (C38614 * C1870 + C38609 * C2098 + C38616 * C1876 +
             C38610 * C2104) *
                C89926) *
               C55293) *
              C89843 * C89827 * C98 -
          (((C38616 * C3496 + C38610 * C3660 + C38614 * C1876 +
             C38609 * C2104) *
                C89926 +
            (C38616 * C3416 + C38610 * C3417 + C38614 * C1766 +
             C38609 * C1774) *
                C186) *
               C55293 +
           ((C38616 * C191 + C38610 * C364 + C38614 * C190 + C38609 * C363) *
                C89926 +
            (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
                C186) *
               C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C38614 * C1762 + C38609 * C1770 + C38616 * C1761 +
              C38610 * C1769) *
                 C186 +
             (C38614 * C1872 + C38609 * C2100 + C38616 * C1871 +
              C38610 * C2099) *
                 C89926) *
                C55293) *
               C89843 * C822 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C89843 * C823 +
           (((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
            ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
               C89843 * C824) *
              C825 +
          ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
            ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
               C89843 * C823 -
           (((C38616 * C1870 + C38610 * C2098 + C38614 * C1871 +
              C38609 * C2099) *
                 C89926 +
             (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 +
              C38609 * C1769) *
                 C186) *
                C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C89843 * C822 -
           (((C38616 * C8676 + C38610 * C8836 + C38614 * C8677 +
              C38609 * C8837) *
                 C89926 +
             (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
              C38609 * C8594) *
                 C186) *
                C55293 +
            ((C39805 + C39804) * C89926 + (C39803 + C39802) * C186) * C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
            C446 * C38610) *
               C55292 +
           (C27687 * C38609 + C2214 * C38610) * C55293) *
              C89843 * C89827 * C96 -
          ((C2213 * C38610 + C2214 * C38609) * C55293 +
           (C447 * C38610 + C446 * C38609) * C55292) *
              C89843 * C89827 * C97 +
          ((C447 * C38609 + C448 * C38610) * C55292 +
           (C2213 * C38609 + C3742 * C38610) * C55293) *
              C89843 * C89827 * C98 -
          (((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C38610 +
            C3742 * C38609) *
               C55293 +
           (C449 * C38610 + C448 * C38609) * C55292) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C27687 * C38609 + C2214 * C38610) * C55293) *
               C89843 * C822 -
           ((C4630 * C38610 + C29979 * C38609) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C89843 * C823 +
           (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
             C1282 * C38610) *
                C55292 +
            (C34186 * C38609 + C56459 * C38610) * C55293) *
               C89843 * C824) *
              C825 +
          (((C1281 * C38609 + C1280 * C38610) * C55292 +
            (C4630 * C38609 + C4631 * C38610) * C55293) *
               C89843 * C823 -
           ((C2213 * C38610 + C2214 * C38609) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C89843 * C822 -
           (((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C38610 +
             C56459 * C38609) *
                C55293 +
            (C1283 * C38610 + C1282 * C38609) * C55292) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C186 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C89926) *
               C38609 +
           ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
              C89843 * C89827 * C96 -
          (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
           ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
              C89843 * C89827 * C97 +
          (((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
           ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
              C89843 * C89827 * C98 -
          (((C55429 * C3496 + C55293 * C3816 + C55428 * C191 + C55292 * C503) *
                C89926 +
            (C55429 * C3416 + C55293 * C3578 + C55428 * C110 + C55292 * C278) *
                C186) *
               C38610 +
           ((C55682 + C55681) * C89926 + (C55464 + C55463) * C186) * C38609) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89843 * C822 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C89843 * C823 +
           (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 +
              C55293 * C8758) *
                 C186 +
             (C55428 * C940 + C55292 * C1360 + C55429 * C8678 +
              C55293 * C8995) *
                 C89926) *
                C38609 +
            ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
               C89843 * C824) *
              C825 +
          ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
            ((C55428 * C827 + C55292 * C1051 + C55429 * C4161 +
              C55293 * C4395) *
                 C186 +
             (C55428 * C937 + C55292 * C1357 + C55429 * C4277 +
              C55293 * C4731) *
                 C89926) *
                C38610) *
               C89843 * C823 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C89843 * C822 -
           (((C55429 * C8676 + C55293 * C8993 + C55428 * C942 +
              C55292 * C1362) *
                 C89926 +
             (C55429 * C8590 + C55293 * C8756 + C55428 * C832 +
              C55292 * C1056) *
                 C186) *
                C38610 +
            ((C56569 + C56568) * C89926 + (C56256 + C56255) * C186) * C38609) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C55428 +
           (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
               C55292 +
           (C38614 * C1762 + C38609 * C1770 + C38616 * C1761 + C38610 * C1769) *
               C55429 +
           (C38614 * C1986 + C38609 * C2394 + C38616 * C1985 + C38610 * C2393) *
               C55293) *
              C89926 * C89843 * C89827 * C96 -
          ((C38616 * C1984 + C38610 * C2392 + C38614 * C1985 + C38609 * C2393) *
               C55293 +
           (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 + C38609 * C1769) *
               C55429 +
           (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
               C55292 +
           (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
               C55428) *
              C89926 * C89843 * C89827 * C97 +
          ((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
               C55428 +
           (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
               C55292 +
           (C38614 * C1760 + C38609 * C1768 + C38616 * C1766 + C38610 * C1774) *
               C55429 +
           (C38614 * C1984 + C38609 * C2392 + C38616 * C1990 + C38610 * C2398) *
               C55293) *
              C89926 * C89843 * C89827 * C98 -
          ((C38616 * C3578 + C38610 * C3897 + C38614 * C1990 + C38609 * C2398) *
               C55293 +
           (C38616 * C3416 + C38610 * C3417 + C38614 * C1766 + C38609 * C1774) *
               C55429 +
           (C38616 * C278 + C38610 * C581 + C38614 * C277 + C38609 * C580) *
               C55292 +
           (C38616 * C110 + C38610 * C116 + C38614 * C109 + C38609 * C115) *
               C55428) *
              C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C38614 * C1762 + C38609 * C1770 + C38616 * C1761 +
             C38610 * C1769) *
                C55429 +
            (C38614 * C1986 + C38609 * C2394 + C38616 * C1985 +
             C38610 * C2393) *
                C55293) *
               C89926 * C89843 * C822 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C89843 * C823 +
           ((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
            (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
               C89926 * C89843 * C824) *
              C825 +
          (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
            (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
               C89926 * C89843 * C823 -
           ((C38616 * C1984 + C38610 * C2392 + C38614 * C1985 +
             C38609 * C2393) *
                C55293 +
            (C38616 * C1760 + C38610 * C1768 + C38614 * C1761 +
             C38609 * C1769) *
                C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C89843 * C822 -
           ((C38616 * C8756 + C38610 * C9070 + C38614 * C8757 +
             C38609 * C9071) *
                C55293 +
            (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
             C38609 * C8594) *
                C55429 +
            (C40163 + C40162) * C55292 + (C39803 + C39802) * C55428) *
               C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C55428 +
            (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
            C27949 * C55293) *
               C38609 +
           (C55815 + C55816 + C55817 + C55818) * C38610) *
              C89843 * C89827 * C96 -
          ((C55819 + C55820 + C55821 + C55822) * C38610 +
           (C55818 + C55817 + C55816 + C55815) * C38609) *
              C89843 * C89827 * C97 +
          ((C55822 + C55821 + C55820 + C55819) * C38609 +
           (C55823 + C55824 + C55825 + C55826) * C38610) *
              C89843 * C89827 * C98 -
          (((C186 * C3578 + C89926 * C3972) * C55293 +
            (C186 * C3416 + C89926 * C3496) * C55429 + C655 * C55292 +
            C222 * C55428) *
               C38610 +
           (C55826 + C55825 + C55824 + C55823) * C38609) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C55428 +
             (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
             C27949 * C55293) *
                C38609 +
            (C55815 + C55816 + C55817 + C55818) * C38610) *
               C89843 * C822 -
           ((C56766 + C56767 + C56768 + C56769) * C38610 +
            (C30291 * C55293 + C29640 * C55429 +
             (C186 * C1053 + C89926 * C1543) * C55292 +
             (C186 * C829 + C89926 * C939) * C55428) *
                C38609) *
               C89843 * C823 +
           (((C186 * C830 + C89926 * C940) * C55428 +
             (C186 * C1054 + C89926 * C1544) * C55292 + C33943 * C55429 +
             C34416 * C55293) *
                C38609 +
            (C56770 + C56771 + C56772 + C56776) * C38610) *
               C89843 * C824) *
              C825 +
          (((C56769 + C56768 + C56767 + C56766) * C38609 +
            (C971 * C55428 + C1562 * C55292 + C4294 * C55429 + C4955 * C55293) *
                C38610) *
               C89843 * C823 -
           ((C55819 + C55820 + C55821 + C55822) * C38610 +
            (C55818 + C55817 + C55816 + C55815) * C38609) *
               C89843 * C822 -
           (((C186 * C8756 + C89926 * C9147) * C55293 +
             (C186 * C8590 + C89926 * C8676) * C55429 + C1565 * C55292 +
             C976 * C55428) *
                C38610 +
            (C56776 + C56772 + C56771 + C56770) * C38609) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C89926 * C38609 +
                     (C55929 + C55930) * C89926 * C38610) *
                        C89843 * C89827 * C96 -
                    ((C55931 + C55932) * C89926 * C38610 +
                     (C55930 + C55929) * C89926 * C38609) *
                        C89843 * C89827 * C97 +
                    ((C55932 + C55931) * C89926 * C38609 +
                     (C55933 + C55934) * C89926 * C38610) *
                        C89843 * C89827 * C98 -
                    ((C55893 * C3416 + C55915 + C55915 + C55293 * C4053 +
                      C55892 * C110 + C55916 + C55916 + C55292 * C716) *
                         C89926 * C38610 +
                     (C55934 + C55933) * C89926 * C38609) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89843 * C822 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C89843 * C823 +
                     ((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                       C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                          C89926 * C38609 +
                      (C56905 + C56906) * C89926 * C38610) *
                         C89843 * C824) *
                        C825 +
                    (((C56904 + C56903) * C89926 * C38609 +
                      (C55892 * C827 + C56891 + C56891 + C55292 * C1643 +
                       C55893 * C4161 + C56892 + C56892 + C55293 * C5057) *
                          C89926 * C38610) *
                         C89843 * C823 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C89843 * C822 -
                     ((C55893 * C8590 + C56893 + C56893 + C55293 * C9224 +
                       C55892 * C832 + C56894 + C56894 + C55292 * C1648) *
                          C89926 * C38610 +
                      (C56906 + C56905) * C89926 * C38609) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C89843 * C90024 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C89843 * C90025 +
                     ((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                         C89926 * C89843 * C7039) *
                        C89990 +
                    (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) *
                         C89926 * C89843 * C90025 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C89843 * C90024 -
                     ((C38615 * C8590 + C43382 + C43382 + C38610 * C8596 +
                       C38613 * C8591 + C43383 + C43383 + C38609 * C8597) *
                          C55293 +
                      (C39423 + C39422) * C55292) *
                         C89926 * C89843 * C7039) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C89843 * C90024 -
           ((C60134 + C60133 + C60132 + C60131) * C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C89843 * C90025 +
           (((C186 * C830 + C89926 * C940) * C38614 +
             (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
             C975 * C38610) *
                C55292 +
            (C33943 * C38614 + C33944 * C38609 + C56135 * C38616 +
             C56136 * C38610) *
                C55293) *
               C89843 * C7039) *
              C89990 +
          (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                C55292 +
            (C60135 + C60136 + C60137 + C60138) * C55293) *
               C89843 * C90025 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C89843 * C90024 -
           (((C186 * C8593 + C89926 * C8679) * C38610 +
             (C186 * C8590 + C89926 * C8676) * C38616 + C56136 * C38609 +
             C56135 * C38614) *
                C55293 +
            (C977 * C38610 + C976 * C38616 + C975 * C38609 + C974 * C38614) *
                C55292) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89843 * C90024 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C89843 * C90025 +
           ((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C38614 +
            (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
                C38609 +
            (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
               C89926 * C89843 * C7039) *
              C89990 +
          (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
            (C58305 + C58306) * C38616 + (C58307 + C58308) * C38610) *
               C89926 * C89843 * C90025 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C89843 * C90024 -
           ((C55429 * C8593 + C55293 * C8759 + C55428 * C840 + C55292 * C1064) *
                C38610 +
            (C55429 * C8590 + C55293 * C8756 + C55428 * C832 + C55292 * C1056) *
                C38616 +
            (C56258 + C56257) * C38609 + (C56256 + C56255) * C38614) *
               C89926 * C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C89843 * C90024 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C89843 * C90025 +
           (((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
            ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
               C89843 * C7039) *
              C89990 +
          ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
            ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
               C89843 * C90025 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C89843 * C90024 -
           (((C38616 * C8676 + C38610 * C8836 + C38614 * C8677 +
              C38609 * C8837) *
                 C89926 +
             (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
              C38609 * C8594) *
                 C186) *
                C55293 +
            ((C39805 + C39804) * C89926 + (C39803 + C39802) * C186) * C55292) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C89843 * C90024 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C89843 * C90025 +
           (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
             C1282 * C38610) *
                C55292 +
            (C34186 * C38609 + C56459 * C38610) * C55293) *
               C89843 * C7039) *
              C89990 +
          (((C1281 * C38609 + C1280 * C38610) * C55292 +
            (C60543 + C60544) * C55293) *
               C89843 * C90025 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C89843 * C90024 -
           (((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C38610 +
             C56459 * C38609) *
                C55293 +
            (C1283 * C38610 + C1282 * C38609) * C55292) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89843 * C90024 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C89843 * C90025 +
           (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 +
              C55293 * C8758) *
                 C186 +
             (C55428 * C940 + C55292 * C1360 + C55429 * C8678 +
              C55293 * C8995) *
                 C89926) *
                C38609 +
            ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
               C89843 * C7039) *
              C89990 +
          ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
            ((C58305 + C58306) * C186 + (C58607 + C58608) * C89926) * C38610) *
               C89843 * C90025 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C89843 * C90024 -
           (((C55429 * C8676 + C55293 * C8993 + C55428 * C942 +
              C55292 * C1362) *
                 C89926 +
             (C55429 * C8590 + C55293 * C8756 + C55428 * C832 +
              C55292 * C1056) *
                 C186) *
                C38610 +
            ((C56569 + C56568) * C89926 + (C56256 + C56255) * C186) * C38609) *
               C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C89843 * C90024 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C89843 * C90025 +
           ((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
            (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
               C89926 * C89843 * C7039) *
              C89990 +
          (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
            (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
               C89926 * C89843 * C90025 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C89843 * C90024 -
           ((C38616 * C8756 + C38610 * C9070 + C38614 * C8757 +
             C38609 * C9071) *
                C55293 +
            (C38616 * C8590 + C38610 * C8593 + C38614 * C8591 +
             C38609 * C8594) *
                C55429 +
            (C40163 + C40162) * C55292 + (C39803 + C39802) * C55428) *
               C89926 * C89843 * C7039) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C89843 * C90024 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C89843 * C90025 +
                     (((C186 * C830 + C89926 * C940) * C55428 +
                       (C186 * C1054 + C89926 * C1544) * C55292 +
                       C33943 * C55429 + C34416 * C55293) *
                          C38609 +
                      (C56770 + C56771 + C56772 + C56776) * C38610) *
                         C89843 * C7039) *
                        C89990 +
                    (((C56769 + C56768 + C56767 + C56766) * C38609 +
                      (C58805 + C58806 + C58807 + C58808) * C38610) *
                         C89843 * C90025 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C89843 * C90024 -
                     (((C186 * C8756 + C89926 * C9147) * C55293 +
                       (C186 * C8590 + C89926 * C8676) * C55429 +
                       C1565 * C55292 + C976 * C55428) *
                          C38610 +
                      (C56776 + C56772 + C56771 + C56770) * C38609) *
                         C89843 * C7039) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89843 * C90024 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C89843 * C90025 +
                     ((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                       C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                          C89926 * C38609 +
                      (C56905 + C56906) * C89926 * C38610) *
                         C89843 * C7039) *
                        C89990 +
                    (((C56904 + C56903) * C89926 * C38609 +
                      (C58917 + C58918) * C89926 * C38610) *
                         C89843 * C90025 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C89843 * C90024 -
                     ((C55893 * C8590 + C56893 + C56893 + C55293 * C9224 +
                       C55892 * C832 + C56894 + C56894 + C55292 * C1648) *
                          C89926 * C38610 +
                      (C56906 + C56905) * C89926 * C38609) *
                         C89843 * C7039) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C89999 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C89907) *
                        C90024 +
                    (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) *
                         C89926 * C89907 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C89999) *
                        C90025 +
                    (((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                         C89926 * C89999 -
                     ((C38615 * C14728 + C46136 + C46136 + C38610 * C14732 +
                       C38613 * C14727 + C46137 + C46137 + C38609 * C14731) *
                          C55293 +
                      (C49115 + C49114) * C55292) *
                         C89926 * C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexy[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C38614 +
                       (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
                       C217 * C38610) *
                          C55292 +
                      (C57145 + C57146 + C57147 + C57148) * C55293) *
                         C89999 -
                     ((C57149 + C57150 + C57151 + C57152) * C55293 +
                      (C57148 + C57147 + C57146 + C57145) * C55292) *
                         C89907) *
                        C90024 +
                    (((C60131 + C60132 + C60133 + C60134) * C55292 +
                      (C62768 + C62769 + C62770 + C62771) * C55293) *
                         C89907 -
                     ((C60134 + C60133 + C60132 + C60131) * C55293 +
                      (C972 * C38610 + C973 * C38616 +
                       (C186 * C837 + C89926 * C947) * C38609 +
                       (C186 * C829 + C89926 * C939) * C38614) *
                          C55292) *
                         C89999) *
                        C90025 +
                    ((((C186 * C830 + C89926 * C940) * C38614 +
                       (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
                       C975 * C38610) *
                          C55292 +
                      (C65712 + C65713 + C65714 + C65715) * C55293) *
                         C89999 -
                     (((C186 * C14730 + C89926 * C14822) * C38610 +
                       (C186 * C14728 + C89926 * C14820) * C38616 +
                       C33946 * C38609 + C33945 * C38614) *
                          C55293 +
                      (C65715 + C65714 + C65713 + C65712) * C55292) *
                         C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89999 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C89907) *
              C90024 +
          (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
             C55293 * C6491) *
                C38614 +
            (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
             C55293 * C6494) *
                C38609 +
            (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
               C89926 * C89907 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C89999) *
              C90025 +
          (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C38614 +
            (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
                C38609 +
            (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
               C89926 * C89999 -
           ((C55429 * C14730 + C55293 * C14900 + C55428 * C8594 +
             C55292 * C8760) *
                C38610 +
            (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
             C55292 * C8757) *
                C38616 +
            (C55429 * C14729 + C55293 * C14899 + C55428 * C8595 +
             C55292 * C8761) *
                C38609 +
            (C55429 * C14727 + C55293 * C14897 + C55428 * C8592 +
             C55292 * C8758) *
                C38614) *
               C89926 * C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C89999 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C89907) *
              C90024 +
          ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
            ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
               C89907 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C89999) *
              C90025 +
          ((((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
            ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
               C89999 -
           (((C38616 * C14820 + C38610 * C14976 + C38614 * C14819 +
              C38609 * C14975) *
                 C89926 +
             (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
              C38609 * C14729) *
                 C186) *
                C55293 +
            ((C49425 + C49424) * C89926 + (C49423 + C49422) * C186) * C55292) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C89999 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C89907) *
              C90024 +
          (((C60541 + C60542) * C55292 + (C63066 + C63067) * C55293) * C89907 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C89999) *
              C90025 +
          ((((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
             C1282 * C38610) *
                C55292 +
            (C66010 + C66011) * C55293) *
               C89999 -
           (((C416 * C14728 + C26849 + C26849 + C89926 * C15052) * C38610 +
             C34187 * C38609) *
                C55293 +
            (C66011 + C66010) * C55292) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89999 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C89907) *
              C90024 +
          ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C186 +
             (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
              C55293 * C6728) *
                 C89926) *
                C38609 +
            ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
               C89907 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C89999) *
              C90025 +
          ((((C55428 * C830 + C55292 * C1054 + C55429 * C8592 +
              C55293 * C8758) *
                 C186 +
             (C55428 * C940 + C55292 * C1360 + C55429 * C8678 +
              C55293 * C8995) *
                 C89926) *
                C38609 +
            ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
               C89999 -
           (((C55429 * C14820 + C55293 * C15140 + C55428 * C8677 +
              C55292 * C8994) *
                 C89926 +
             (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
              C55292 * C8757) *
                 C186) *
                C38610 +
            ((C55429 * C14819 + C55293 * C15139 + C55428 * C8678 +
              C55292 * C8995) *
                 C89926 +
             (C55429 * C14727 + C55293 * C14897 + C55428 * C8592 +
              C55292 * C8758) *
                 C186) *
                C38609) *
               C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C89999 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C89907) *
              C90024 +
          (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
            (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
               C89926 * C89907 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C89999) *
              C90025 +
          (((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
            (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
               C89926 * C89999 -
           ((C38616 * C14898 + C38610 * C15216 + C38614 * C14897 +
             C38609 * C15215) *
                C55293 +
            (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
             C38609 * C14729) *
                C55429 +
            (C49729 + C49728) * C55292 + (C49423 + C49422) * C55428) *
               C89926 * C89907) *
              C7039) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezy[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C89999 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C89907) *
                        C90024 +
                    (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                       C30292 * C55293) *
                          C38609 +
                      (C60941 + C60942 + C60943 + C60944) * C38610) *
                         C89907 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C89999) *
                        C90025 +
                    ((((C186 * C830 + C89926 * C940) * C55428 +
                       (C186 * C1054 + C89926 * C1544) * C55292 +
                       C33943 * C55429 + C34416 * C55293) *
                          C38609 +
                      (C56770 + C56771 + C56772 + C56776) * C38610) *
                         C89999 -
                     (((C186 * C14898 + C89926 * C15292) * C55293 +
                       (C186 * C14728 + C89926 * C14820) * C55429 +
                       C56775 * C55292 + C56135 * C55428) *
                          C38610 +
                      (C34417 * C55293 + C33945 * C55429 + C34416 * C55292 +
                       C33943 * C55428) *
                          C38609) *
                         C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eezz[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89999 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C89907) *
                        C90024 +
                    (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                       C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                          C89926 * C38609 +
                      (C61089 + C61090) * C89926 * C38610) *
                         C89907 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C89999) *
                        C90025 +
                    (((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                       C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                          C89926 * C38609 +
                      (C56905 + C56906) * C89926 * C38610) *
                         C89999 -
                     ((C55893 * C14728 + C66404 + C66404 + C55293 * C15368 +
                       C55892 * C8591 + C66405 + C66405 + C55292 * C9225) *
                          C89926 * C38610 +
                      (C55893 * C14727 + C66406 + C66406 + C55293 * C15367 +
                       C55892 * C8592 + C66407 + C66407 + C55292 * C9226) *
                          C89926 * C38609) *
                         C89907) *
                        C7039) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexx[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C55292 +
                     (C57039 + C57040) * C55293) *
                        C89926 * C89843 * C5796 -
                    ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                        C89926 * C89843 * C5797 +
                    ((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                        C89926 * C89843 * C5798 -
                    ((C38615 * C16850 + C49108 + C49108 + C38610 * C16854 +
                      C38613 * C16849 + C49109 + C49109 + C38609 * C16853) *
                         C55293 +
                     (C45479 + C45478) * C55292) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C89843 * C5149 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) *
                         C89926 * C89843 * C89879 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C55292 +
                      (C59027 + C59028) * C55293) *
                         C89926 * C89843 * C5149 -
                     ((C38615 * C4162 + C42418 + C42418 + C38610 * C4170 +
                       C38613 * C4161 + C42419 + C42419 + C38609 * C4169) *
                          C55293 +
                      (C41477 + C41476) * C55292) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C1757 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C1758 +
                     ((C57042 + C57041) * C55292 +
                      (C38613 * C10620 + C51759 + C51759 + C38609 * C10626 +
                       C38615 * C10619 + C51758 + C51758 + C38610 * C10625) *
                          C55293) *
                         C89926 * C1759) *
                        C5149 +
                    (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) *
                         C89926 * C1758 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C1757 -
                     ((C38615 * C29516 + C51756 + C51756 + C38610 * C29518 +
                       C38613 * C23356 + C51757 + C51757 + C38609 * C23360) *
                          C55293 +
                      (C46143 + C46142) * C55292) *
                         C89926 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C38614 +
            (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
            C217 * C38610) *
               C55292 +
           (C57145 + C57146 + C57147 + C57148) * C55293) *
              C89843 * C5796 -
          ((C60134 + C60133 + C60132 + C60131) * C55293 +
           (C972 * C38610 + C973 * C38616 +
            (C186 * C837 + C89926 * C947) * C38609 +
            (C186 * C829 + C89926 * C939) * C38614) *
               C55292) *
              C89843 * C5797 +
          (((C186 * C830 + C89926 * C940) * C38614 +
            (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
            C975 * C38610) *
               C55292 +
           (C33943 * C38614 + C33944 * C38609 + C56135 * C38616 +
            C56136 * C38610) *
               C55293) *
              C89843 * C5798 -
          (((C186 * C16852 + C89926 * C16982) * C38610 +
            (C186 * C16850 + C89926 * C16980) * C38616 +
            (C186 * C16851 + C89926 * C16981) * C38609 +
            (C186 * C16849 + C89926 * C16979) * C38614) *
               C55293 +
           ((C186 * C5805 + C89926 * C5867) * C38610 +
            (C186 * C5802 + C89926 * C5864) * C38616 +
            (C186 * C5806 + C89926 * C5868) * C38609 +
            (C186 * C5803 + C89926 * C5865) * C38614) *
               C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C89843 * C5149 -
           ((C60134 + C60133 + C60132 + C60131) * C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C89843 * C89879) *
              C5151 +
          (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                C55292 +
            (C60135 + C60136 + C60137 + C60138) * C55293) *
               C89843 * C89879 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C89843 * C5149) *
              C5152 +
          (((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
                C55292 +
            (C59127 + C59128 + C59129 + C59130) * C55293) *
               C89843 * C5149 -
           (((C186 * C4166 + C89926 * C4282) * C38610 +
             (C186 * C4162 + C89926 * C4278) * C38616 + C4295 * C38609 +
             C4294 * C38614) *
                C55293 +
            (C2783 * C38610 + C2782 * C38616 + C970 * C38609 + C971 * C38614) *
                C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C1757 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C1758 +
           ((C57152 + C57151 + C57150 + C57149) * C55292 +
            (C27374 * C38614 + C27373 * C38609 + C27375 * C38616 +
             C27376 * C38610) *
                C55293) *
               C1759) *
              C5149 +
          (((C60131 + C60132 + C60133 + C60134) * C55292 +
            (C62768 + C62769 + C62770 + C62771) * C55293) *
               C1758 -
           ((C60134 + C60133 + C60132 + C60131) * C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C1757 -
           (((C186 * C29517 + C89926 * C29624) * C38610 +
             (C186 * C29516 + C89926 * C29623) * C38616 + C31685 * C38609 +
             C31684 * C38614) *
                C55293 +
            (C62771 + C62770 + C62769 + C62768) * C55292) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38614 +
           (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
               C38609 +
           (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
              C89926 * C89843 * C5796 -
          ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
           (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
               C38609 +
           (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
               C38614) *
              C89926 * C89843 * C5797 +
          ((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
               C38614 +
           (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
               C38609 +
           (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
              C89926 * C89843 * C5798 -
          ((C55429 * C16852 + C55293 * C17084 + C55428 * C5805 +
            C55292 * C5923) *
               C38610 +
           (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
            C55292 * C5920) *
               C38616 +
           (C55429 * C16851 + C55293 * C17083 + C55428 * C5806 +
            C55292 * C5924) *
               C38609 +
           (C55429 * C16849 + C55293 * C17081 + C55428 * C5803 +
            C55292 * C5921) *
               C38614) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89843 * C5149 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C89843 * C89879) *
              C5151 +
          (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
            (C58305 + C58306) * C38616 + (C58307 + C58308) * C38610) *
               C89926 * C89843 * C89879 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
            (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
               C89926 * C89843 * C5149 -
           ((C55429 * C4166 + C55293 * C4400 + C55428 * C841 + C55292 * C1065) *
                C38610 +
            (C55429 * C4162 + C55293 * C4396 + C55428 * C833 + C55292 * C1057) *
                C38616 +
            (C58308 + C58307) * C38609 + (C58306 + C58305) * C38614) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C1757 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C1758 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38614 +
            (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
             C55293 * C10741) *
                C38609 +
            (C57279 + C57280) * C38616 + (C57281 + C57282) * C38610) *
               C89926 * C1759) *
              C5149 +
          (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
             C55293 * C6491) *
                C38614 +
            (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
             C55293 * C6494) *
                C38609 +
            (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
               C89926 * C1758 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C1757 -
           ((C55429 * C29517 + C55293 * C29750 + C55428 * C6327 +
             C55292 * C6493) *
                C38610 +
            (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
             C55292 * C6490) *
                C38616 +
            (C55429 * C23358 + C55293 * C23471 + C55428 * C6328 +
             C55292 * C6494) *
                C38609 +
            (C55429 * C23356 + C55293 * C23469 + C55428 * C6325 +
             C55292 * C6491) *
                C38614) *
               C89926 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C186 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C89926) *
               C55292 +
           ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
              C89843 * C5796 -
          (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
           ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
              C89843 * C5797 +
          (((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
           ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
              C89843 * C5798 -
          (((C38616 * C16980 + C38610 * C17210 + C38614 * C16979 +
             C38609 * C17209) *
                C89926 +
            (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
             C38609 * C16851) *
                C186) *
               C55293 +
           ((C45693 + C45692) * C89926 + (C45691 + C45690) * C186) * C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C89843 * C5149 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C89843 * C89879) *
              C5151 +
          ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
            ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
               C89843 * C89879 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C89843 * C5149) *
              C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C186 +
             (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                 C89926) *
                C55292 +
            ((C59347 + C59348) * C186 + (C59349 + C59350) * C89926) * C55293) *
               C89843 * C5149 -
           (((C38616 * C4278 + C38610 * C4514 + C38614 * C4277 +
              C38609 * C4513) *
                 C89926 +
             (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
              C38609 * C4165) *
                 C186) *
                C55293 +
            ((C41799 + C41798) * C89926 + (C41797 + C41796) * C186) * C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C1757 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C1758 +
           (((C57420 + C57419) * C186 + (C57418 + C57417) * C89926) * C55292 +
            ((C38614 * C10620 + C38609 * C10623 + C38616 * C10619 +
              C38610 * C10622) *
                 C186 +
             (C38614 * C10682 + C38609 * C10794 + C38616 * C10681 +
              C38610 * C10793) *
                 C89926) *
                C55293) *
               C1759) *
              C5149 +
          ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
            ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
               C1758 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C1757 -
           (((C38616 * C29623 + C38610 * C29849 + C38614 * C23415 +
              C38609 * C23523) *
                 C89926 +
             (C38616 * C29516 + C38610 * C29517 + C38614 * C23356 +
              C38609 * C23358) *
                 C186) *
                C55293 +
            ((C46453 + C46452) * C89926 + (C46451 + C46450) * C186) * C55292) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
            C446 * C38610) *
               C55292 +
           (C57527 + C57528) * C55293) *
              C89843 * C5796 -
          ((C60542 + C60541) * C55293 +
           (C1281 * C38610 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
               C55292) *
              C89843 * C5797 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
            C1282 * C38610) *
               C55292 +
           (C34186 * C38609 + C56459 * C38610) * C55293) *
              C89843 * C5798 -
          (((C416 * C16850 + C62303 + C62303 + C89926 * C17334) * C38610 +
            (C416 * C16849 + C31316 + C31316 + C89926 * C17333) * C38609) *
               C55293 +
           ((C416 * C5802 + C6033 + C6033 + C89926 * C6029) * C38610 +
            (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C38609) *
               C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C89843 * C5149 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C89843 * C89879) *
              C5151 +
          (((C1281 * C38609 + C1280 * C38610) * C55292 +
            (C60543 + C60544) * C55293) *
               C89843 * C89879 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C89843 * C5149) *
              C5152 +
          (((C447 * C38609 + C448 * C38610) * C55292 +
            (C59449 + C59450) * C55293) *
               C89843 * C5149 -
           (((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C38610 +
             C4631 * C38609) *
                C55293 +
            (C3021 * C38610 + C1280 * C38609) * C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C1757 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C1758 +
           ((C57530 + C57529) * C55292 +
            (C27689 * C38609 + C27690 * C38610) * C55293) *
               C1759) *
              C5149 +
          (((C60541 + C60542) * C55292 + (C63066 + C63067) * C55293) * C1758 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C1757 -
           (((C416 * C29516 + C29972 + C29972 + C89926 * C29962) * C38610 +
             C31928 * C38609) *
                C55293 +
            (C63067 + C63066) * C55292) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C186 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C89926) *
               C38609 +
           ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
              C89843 * C5796 -
          (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
           ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 + C55292 * C1359) *
                C89926 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C186) *
               C38609) *
              C89843 * C5797 +
          (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C186 +
            (C55428 * C940 + C55292 * C1360 + C55429 * C8678 + C55293 * C8995) *
                C89926) *
               C38609 +
           ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
              C89843 * C5798 -
          (((C55429 * C16980 + C55293 * C17440 + C55428 * C5864 +
             C55292 * C6085) *
                C89926 +
            (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
             C55292 * C5920) *
                C186) *
               C38610 +
           ((C55429 * C16979 + C55293 * C17439 + C55428 * C5865 +
             C55292 * C6086) *
                C89926 +
            (C55429 * C16849 + C55293 * C17081 + C55428 * C5803 +
             C55292 * C5921) *
                C186) *
               C38609) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89843 * C5149 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C89843 * C89879) *
              C5151 +
          ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
            ((C58305 + C58306) * C186 + (C58607 + C58608) * C89926) * C38610) *
               C89843 * C89879 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C89843 * C5149) *
              C5152 +
          ((((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
            ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
               C89843 * C5149 -
           (((C55429 * C4278 + C55293 * C4732 + C55428 * C943 +
              C55292 * C1363) *
                 C89926 +
             (C55429 * C4162 + C55293 * C4396 + C55428 * C833 +
              C55292 * C1057) *
                 C186) *
                C38610 +
            ((C58608 + C58607) * C89926 + (C58306 + C58305) * C186) * C38609) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C1757 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C1758 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C186 +
             (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
              C55293 * C10903) *
                 C89926) *
                C38609 +
            ((C57279 + C57280) * C186 + (C57643 + C57644) * C89926) * C38610) *
               C1759) *
              C5149 +
          ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C186 +
             (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
              C55293 * C6728) *
                 C89926) *
                C38609 +
            ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
               C1758 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C1757 -
           (((C55429 * C29623 + C55293 * C30082 + C55428 * C6410 +
              C55292 * C6727) *
                 C89926 +
             (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
              C55292 * C6490) *
                 C186) *
                C38610 +
            ((C55429 * C23415 + C55293 * C23630 + C55428 * C6411 +
              C55292 * C6728) *
                 C89926 +
             (C55429 * C23356 + C55293 * C23469 + C55428 * C6325 +
              C55292 * C6491) *
                 C186) *
                C38609) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C55428 +
           (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
               C55292 +
           (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
              C89926 * C89843 * C5796 -
          ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
           (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
              C89926 * C89843 * C5797 +
          ((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
           (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
              C89926 * C89843 * C5798 -
          ((C38616 * C17082 + C38610 * C17549 + C38614 * C17081 +
            C38609 * C17548) *
               C55293 +
           (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
            C38609 * C16851) *
               C55429 +
           (C45901 + C45900) * C55292 + (C45691 + C45690) * C55428) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C89843 * C5149 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C89843 * C89879) *
              C5151 +
          (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
            (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
               C89926 * C89843 * C89879 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C55428 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C55292 +
            (C59347 + C59348) * C55429 + (C59657 + C59658) * C55293) *
               C89926 * C89843 * C5149 -
           ((C38616 * C4396 + C38610 * C4844 + C38614 * C4395 +
             C38609 * C4843) *
                C55293 +
            (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
             C38609 * C4165) *
                C55429 +
            (C42115 + C42114) * C55292 + (C41797 + C41796) * C55428) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C1757 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C1758 +
           ((C57420 + C57419) * C55428 + (C57762 + C57761) * C55292 +
            (C38614 * C10620 + C38609 * C10623 + C38616 * C10619 +
             C38610 * C10622) *
                C55429 +
            (C38614 * C10738 + C38609 * C10956 + C38616 * C10737 +
             C38610 * C10955) *
                C55293) *
               C89926 * C1759) *
              C5149 +
          (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
            (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
               C89926 * C1758 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C1757 -
           ((C38616 * C29749 + C38610 * C30181 + C38614 * C23469 +
             C38609 * C23682) *
                C55293 +
            (C38616 * C29516 + C38610 * C29517 + C38614 * C23356 +
             C38609 * C23358) *
                C55429 +
            (C46757 + C46756) * C55292 + (C46451 + C46450) * C55428) *
               C89926 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C55428 +
                      (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
                      C27949 * C55293) *
                         C38609 +
                     (C55815 + C55816 + C55817 + C55818) * C38610) *
                        C89843 * C5796 -
                    ((C56766 + C56767 + C56768 + C56769) * C38610 +
                     (C30291 * C55293 + C29640 * C55429 +
                      (C186 * C1053 + C89926 * C1543) * C55292 +
                      (C186 * C829 + C89926 * C939) * C55428) *
                         C38609) *
                        C89843 * C5797 +
                    (((C186 * C830 + C89926 * C940) * C55428 +
                      (C186 * C1054 + C89926 * C1544) * C55292 +
                      C33943 * C55429 + C34416 * C55293) *
                         C38609 +
                     (C56770 + C56771 + C56772 + C56776) * C38610) *
                        C89843 * C5798 -
                    (((C186 * C17082 + C89926 * C17669) * C55293 +
                      (C186 * C16850 + C89926 * C16980) * C55429 +
                      (C186 * C5920 + C89926 * C6191) * C55292 +
                      (C186 * C5802 + C89926 * C5864) * C55428) *
                         C38610 +
                     ((C186 * C17081 + C89926 * C17668) * C55293 +
                      (C186 * C16849 + C89926 * C16979) * C55429 +
                      (C186 * C5921 + C89926 * C6192) * C55292 +
                      (C186 * C5803 + C89926 * C5865) * C55428) *
                         C38609) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C89843 * C5149 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C89843 * C89879) *
                        C5151 +
                    (((C56769 + C56768 + C56767 + C56766) * C38609 +
                      (C58805 + C58806 + C58807 + C58808) * C38610) *
                         C89843 * C89879 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C89843 * C5149) *
                        C5152 +
                    (((C55822 + C55821 + C55820 + C55819) * C38609 +
                      (C55823 + C55824 + C55825 + C55826) * C38610) *
                         C89843 * C5149 -
                     (((C186 * C4396 + C89926 * C4946) * C55293 +
                       (C186 * C4162 + C89926 * C4278) * C55429 +
                       C3257 * C55292 + C2782 * C55428) *
                          C38610 +
                      (C58808 + C58807 + C58806 + C58805) * C38609) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C1757 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C1758 +
                     ((C27371 * C55428 + C27950 * C55292 + C27374 * C55429 +
                       C27951 * C55293) *
                          C38609 +
                      (C57869 + C57870 + C57871 + C57872) * C38610) *
                         C1759) *
                        C5149 +
                    (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                       C30292 * C55293) *
                          C38609 +
                      (C60941 + C60942 + C60943 + C60944) * C38610) *
                         C1758 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C1757 -
                     (((C186 * C29749 + C89926 * C30283) * C55293 +
                       (C186 * C29516 + C89926 * C29623) * C55429 +
                       C30293 * C55292 + C29644 * C55428) *
                          C38610 +
                      (C32160 * C55293 + C31684 * C55429 + C30292 * C55292 +
                       C29642 * C55428) *
                          C38609) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C89926 * C38609 +
                     (C55929 + C55930) * C89926 * C38610) *
                        C89843 * C5796 -
                    ((C56903 + C56904) * C89926 * C38610 +
                     (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                      C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                         C89926 * C38609) *
                        C89843 * C5797 +
                    ((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                      C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                         C89926 * C38609 +
                     (C56905 + C56906) * C89926 * C38610) *
                        C89843 * C5798 -
                    ((C55893 * C16850 + C62568 + C62568 + C55293 * C17769 +
                      C55892 * C5802 + C62569 + C62569 + C55292 * C6244) *
                         C89926 * C38610 +
                     (C55893 * C16849 + C62570 + C62570 + C55293 * C17768 +
                      C55892 * C5803 + C62571 + C62571 + C55292 * C6245) *
                         C89926 * C38609) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89843 * C5149 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C89843 * C89879) *
                        C5151 +
                    (((C56904 + C56903) * C89926 * C38609 +
                      (C58917 + C58918) * C89926 * C38610) *
                         C89843 * C89879 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C89843 * C5149) *
                        C5152 +
                    (((C55932 + C55931) * C89926 * C38609 +
                      (C55933 + C55934) * C89926 * C38610) *
                         C89843 * C5149 -
                     ((C55893 * C4162 + C58911 + C58911 + C55293 * C5058 +
                       C55892 * C833 + C58912 + C58912 + C55292 * C1649) *
                          C89926 * C38610 +
                      (C58918 + C58917) * C89926 * C38609) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C1757 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C1758 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C89926 * C38609 +
                      (C58001 + C58002) * C89926 * C38610) *
                         C1759) *
                        C5149 +
                    (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                       C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                          C89926 * C38609 +
                      (C61089 + C61090) * C89926 * C38610) *
                         C1758 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C1757 -
                     ((C55893 * C29516 + C63460 + C63460 + C55293 * C30391 +
                       C55892 * C6324 + C63461 + C63461 + C55292 * C6958) *
                          C89926 * C38610 +
                      (C55893 * C23356 + C63462 + C63462 + C55293 * C23786 +
                       C55892 * C6325 + C63463 + C63463 + C55292 * C6959) *
                          C89926 * C38609) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38613 * C106 + C38618 + C38618 + C38609 * C118 + C38615 * C107 +
              C38619 + C38619 + C38610 * C119) *
                 C55292 +
             (C57039 + C57040) * C55293) *
                C89926 * C89999 -
            ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) * C89926 *
                C89907) *
               C5149 +
           (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) * C89926 *
                C89907 -
            ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) * C89926 *
                C89999) *
               C89879) *
              C89990 +
          ((((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) * C89926 *
                C89907 -
            ((C57044 + C57043) * C55293 +
             (C38615 * C108 + C38624 + C38624 + C38610 * C120 + C38613 * C107 +
              C38625 + C38625 + C38609 * C119) *
                 C55292) *
                C89926 * C89999) *
               C5149 +
           (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) * C89926 *
                C89999 -
            ((C38615 * C6323 + C40486 + C40486 + C38610 * C6329 +
              C38613 * C6324 + C40487 + C40487 + C38609 * C6330) *
                 C55293 +
             (C43395 + C43394) * C55292) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C38614 +
              (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
              C217 * C38610) *
                 C55292 +
             (C57145 + C57146 + C57147 + C57148) * C55293) *
                C89999 -
            ((C57149 + C57150 + C57151 + C57152) * C55293 +
             (C57148 + C57147 + C57146 + C57145) * C55292) *
                C89907) *
               C5149 +
           (((C60131 + C60132 + C60133 + C60134) * C55292 +
             (C62768 + C62769 + C62770 + C62771) * C55293) *
                C89907 -
            ((C60134 + C60133 + C60132 + C60131) * C55293 +
             (C972 * C38610 + C973 * C38616 +
              (C186 * C837 + C89926 * C947) * C38609 +
              (C186 * C829 + C89926 * C939) * C38614) *
                 C55292) *
                C89999) *
               C89879) *
              C89990 +
          ((((C57153 + C57154 + C57155 + C57156) * C55292 +
             (C57157 + C57158 + C57159 + C57160) * C55293) *
                C89907 -
            ((C57156 + C57155 + C57154 + C57153) * C55293 +
             (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                 C55292) *
                C89999) *
               C5149 +
           (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                 C55292 +
             (C60135 + C60136 + C60137 + C60138) * C55293) *
                C89999 -
            (((C186 * C6326 + C89926 * C6412) * C38610 +
              (C186 * C6323 + C89926 * C6409) * C38616 + C29645 * C38609 +
              C29644 * C38614) *
                 C55293 +
             (C60138 + C60137 + C60136 + C60135) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C38614 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C38609 +
             (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
                C89926 * C89999 -
            ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
             (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C38609 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C38614) *
                C89926 * C89907) *
               C5149 +
           (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C38614 +
             (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
              C55293 * C6494) *
                 C38609 +
             (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
                C89926 * C89907 -
            ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
             (C55429 * C4163 + C55293 * C4397 + C55428 * C837 +
              C55292 * C1061) *
                 C38609 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C38614) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          ((((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
             (C59237 + C59238) * C38616 + (C59239 + C59240) * C38610) *
                C89926 * C89907 -
            ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
             (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
                C89926 * C89999) *
               C5149 +
           (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
             (C58305 + C58306) * C38616 + (C58307 + C58308) * C38610) *
                C89926 * C89999 -
            ((C55429 * C6326 + C55293 * C6492 + C55428 * C4165 +
              C55292 * C4399) *
                 C38610 +
             (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
              C55292 * C4395) *
                 C38616 +
             (C60280 + C60279) * C38609 + (C60278 + C60277) * C38614) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                  C186 +
              (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                  C89926) *
                 C55292 +
             ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
                C89999 -
            (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
             ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
                C89907) *
               C5149 +
           ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
             ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
                C89907 -
            (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
             ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
                C89999) *
               C89879) *
              C89990 +
          (((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
             ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
                C89907 -
            (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
             ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                  C89926 +
              (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                  C186) *
                 C55292) *
                C89999) *
               C5149 +
           ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
             ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
                C89999 -
            (((C38616 * C6409 + C38610 * C6569 + C38614 * C6410 +
               C38609 * C6570) *
                  C89926 +
              (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
               C38609 * C6327) *
                  C186) *
                 C55293 +
             ((C43829 + C43828) * C89926 + (C43827 + C43826) * C186) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
              C446 * C38610) *
                 C55292 +
             (C57527 + C57528) * C55293) *
                C89999 -
            ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) *
                C89907) *
               C5149 +
           (((C60541 + C60542) * C55292 + (C63066 + C63067) * C55293) * C89907 -
            ((C60542 + C60541) * C55293 +
             (C1281 * C38610 +
              (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                 C55292) *
                C89999) *
               C89879) *
              C89990 +
          ((((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C89907 -
            ((C57532 + C57531) * C55293 +
             (C447 * C38610 + C446 * C38609) * C55292) *
                C89999) *
               C5149 +
           (((C1281 * C38609 + C1280 * C38610) * C55292 +
             (C60543 + C60544) * C55293) *
                C89999 -
            (((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C38610 +
              C29981 * C38609) *
                 C55293 +
             (C60544 + C60543) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C55428 * C106 + C55292 * C274 + C55429 * C1762 +
               C55293 * C1986) *
                  C186 +
              (C55428 * C187 + C55292 * C499 + C55429 * C1872 +
               C55293 * C2292) *
                  C89926) *
                 C38609 +
             ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
                C89999 -
            (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
             ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
               C55292 * C2292) *
                  C89926 +
              (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
               C55292 * C1986) *
                  C186) *
                 C38609) *
                C89907) *
               C5149 +
           ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
               C55293 * C6491) *
                  C186 +
              (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
               C55293 * C6728) *
                  C89926) *
                 C38609 +
             ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
                C89907 -
            (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
             ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
               C55292 * C1359) *
                  C89926 +
              (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
               C55292 * C1053) *
                  C186) *
                 C38609) *
                C89999) *
               C89879) *
              C89990 +
          (((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
             ((C59237 + C59238) * C186 + (C59553 + C59554) * C89926) * C38610) *
                C89907 -
            (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
             ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
                C89999) *
               C5149 +
           ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
             ((C58305 + C58306) * C186 + (C58607 + C58608) * C89926) * C38610) *
                C89999 -
            (((C55429 * C6409 + C55293 * C6726 + C55428 * C4277 +
               C55292 * C4731) *
                  C89926 +
              (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
               C55292 * C4395) *
                  C186) *
                 C38610 +
             ((C60680 + C60679) * C89926 + (C60278 + C60277) * C186) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C55428 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C55292 +
             (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
                C89926 * C89999 -
            ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
             (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
                C89926 * C89907) *
               C5149 +
           (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
             (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
                C89926 * C89907 -
            ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
             (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          ((((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
             (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
                C89926 * C89907 -
            ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
             (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C55292 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C55428) *
                C89926 * C89999) *
               C5149 +
           (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
             (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
                C89926 * C89999 -
            ((C38616 * C6489 + C38610 * C6803 + C38614 * C6490 +
              C38609 * C6804) *
                 C55293 +
             (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
              C38609 * C6327) *
                 C55429 +
             (C44251 + C44250) * C55292 + (C43827 + C43826) * C55428) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C186 * C106 + C89926 * C187) * C55428 +
                        (C186 * C274 + C89926 * C633) * C55292 +
                        C27369 * C55429 + C27949 * C55293) *
                           C38609 +
                       (C55815 + C55816 + C55817 + C55818) * C38610) *
                          C89999 -
                      ((C57865 + C57866 + C57867 + C57868) * C38610 +
                       (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                        C27369 * C55428) *
                           C38609) *
                          C89907) *
                         C5149 +
                     (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                        C30292 * C55293) *
                           C38609 +
                       (C60941 + C60942 + C60943 + C60944) * C38610) *
                          C89907 -
                      ((C56766 + C56767 + C56768 + C56769) * C38610 +
                       (C30291 * C55293 + C29640 * C55429 +
                        (C186 * C1053 + C89926 * C1543) * C55292 +
                        (C186 * C829 + C89926 * C939) * C55428) *
                           C38609) *
                          C89999) *
                         C89879) *
                        C89990 +
                    ((((C57868 + C57867 + C57866 + C57865) * C38609 +
                       (C59757 + C59758 + C59759 + C59760) * C38610) *
                          C89907 -
                      ((C55819 + C55820 + C55821 + C55822) * C38610 +
                       (C55818 + C55817 + C55816 + C55815) * C38609) *
                          C89999) *
                         C5149 +
                     (((C56769 + C56768 + C56767 + C56766) * C38609 +
                       (C58805 + C58806 + C58807 + C58808) * C38610) *
                          C89999 -
                      (((C186 * C6489 + C89926 * C6880) * C55293 +
                        (C186 * C6323 + C89926 * C6409) * C55429 +
                        C4955 * C55292 + C4294 * C55428) *
                           C38610 +
                       (C60944 + C60943 + C60942 + C60941) * C38609) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                        C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                           C89926 * C38609 +
                       (C55929 + C55930) * C89926 * C38610) *
                          C89999 -
                      ((C57999 + C58000) * C89926 * C38610 +
                       (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                        C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                           C89926 * C38609) *
                          C89907) *
                         C5149 +
                     (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                        C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                           C89926 * C38609 +
                       (C61089 + C61090) * C89926 * C38610) *
                          C89907 -
                      ((C56903 + C56904) * C89926 * C38610 +
                       (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                        C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                           C89926 * C38609) *
                          C89999) *
                         C89879) *
                        C89990 +
                    ((((C58000 + C57999) * C89926 * C38609 +
                       (C59869 + C59870) * C89926 * C38610) *
                          C89907 -
                      ((C55931 + C55932) * C89926 * C38610 +
                       (C55930 + C55929) * C89926 * C38609) *
                          C89999) *
                         C5149 +
                     (((C56904 + C56903) * C89926 * C38609 +
                       (C58917 + C58918) * C89926 * C38610) *
                          C89999 -
                      ((C55893 * C6323 + C61083 + C61083 + C55293 * C6957 +
                        C55892 * C4161 + C61084 + C61084 + C55292 * C5057) *
                           C89926 * C38610 +
                       (C61090 + C61089) * C89926 * C38609) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C89843 * C5149 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) *
                         C89926 * C89843 * C89879 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C55292 +
                      (C59027 + C59028) * C55293) *
                         C89926 * C89843 * C5149 -
                     ((C38615 * C4162 + C42418 + C42418 + C38610 * C4170 +
                       C38613 * C4161 + C42419 + C42419 + C38609 * C4169) *
                          C55293 +
                      (C41477 + C41476) * C55292) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C55292 +
                     (C57039 + C57040) * C55293) *
                        C89926 * C89843 * C5796 -
                    ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                        C89926 * C89843 * C5797 +
                    ((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                        C89926 * C89843 * C5798 -
                    ((C38615 * C16850 + C49108 + C49108 + C38610 * C16854 +
                      C38613 * C16849 + C49109 + C49109 + C38609 * C16853) *
                         C55293 +
                     (C45479 + C45478) * C55292) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C89843 * C5149 -
           ((C60134 + C60133 + C60132 + C60131) * C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C89843 * C89879) *
              C5151 +
          (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                C55292 +
            (C60135 + C60136 + C60137 + C60138) * C55293) *
               C89843 * C89879 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C89843 * C5149) *
              C5152 +
          (((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
                C55292 +
            (C59127 + C59128 + C59129 + C59130) * C55293) *
               C89843 * C5149 -
           (((C186 * C4166 + C89926 * C4282) * C38610 +
             (C186 * C4162 + C89926 * C4278) * C38616 + C4295 * C38609 +
             C4294 * C38614) *
                C55293 +
            (C2783 * C38610 + C2782 * C38616 + C970 * C38609 + C971 * C38614) *
                C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C38614 +
            (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
            C217 * C38610) *
               C55292 +
           (C57145 + C57146 + C57147 + C57148) * C55293) *
              C89843 * C5796 -
          ((C60134 + C60133 + C60132 + C60131) * C55293 +
           (C972 * C38610 + C973 * C38616 +
            (C186 * C837 + C89926 * C947) * C38609 +
            (C186 * C829 + C89926 * C939) * C38614) *
               C55292) *
              C89843 * C5797 +
          (((C186 * C830 + C89926 * C940) * C38614 +
            (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
            C975 * C38610) *
               C55292 +
           (C33943 * C38614 + C33944 * C38609 + C56135 * C38616 +
            C56136 * C38610) *
               C55293) *
              C89843 * C5798 -
          (((C186 * C16852 + C89926 * C16982) * C38610 +
            (C186 * C16850 + C89926 * C16980) * C38616 +
            (C186 * C16851 + C89926 * C16981) * C38609 +
            (C186 * C16849 + C89926 * C16979) * C38614) *
               C55293 +
           ((C186 * C5805 + C89926 * C5867) * C38610 +
            (C186 * C5802 + C89926 * C5864) * C38616 +
            (C186 * C5806 + C89926 * C5868) * C38609 +
            (C186 * C5803 + C89926 * C5865) * C38614) *
               C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C89843 * C5149 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C89843 * C89879) *
              C5151 +
          (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
            (C58305 + C58306) * C38616 + (C58307 + C58308) * C38610) *
               C89926 * C89843 * C89879 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
            (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
               C89926 * C89843 * C5149 -
           ((C55429 * C4166 + C55293 * C4400 + C55428 * C841 + C55292 * C1065) *
                C38610 +
            (C55429 * C4162 + C55293 * C4396 + C55428 * C833 + C55292 * C1057) *
                C38616 +
            (C58308 + C58307) * C38609 + (C58306 + C58305) * C38614) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38614 +
           (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
               C38609 +
           (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
              C89926 * C89843 * C5796 -
          ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
           (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
               C38609 +
           (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
               C38614) *
              C89926 * C89843 * C5797 +
          ((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
               C38614 +
           (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
               C38609 +
           (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
              C89926 * C89843 * C5798 -
          ((C55429 * C16852 + C55293 * C17084 + C55428 * C5805 +
            C55292 * C5923) *
               C38610 +
           (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
            C55292 * C5920) *
               C38616 +
           (C55429 * C16851 + C55293 * C17083 + C55428 * C5806 +
            C55292 * C5924) *
               C38609 +
           (C55429 * C16849 + C55293 * C17081 + C55428 * C5803 +
            C55292 * C5921) *
               C38614) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C89843 * C5149 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C89843 * C89879) *
              C5151 +
          ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
            ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
               C89843 * C89879 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C89843 * C5149) *
              C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C186 +
             (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                 C89926) *
                C55292 +
            ((C59347 + C59348) * C186 + (C59349 + C59350) * C89926) * C55293) *
               C89843 * C5149 -
           (((C38616 * C4278 + C38610 * C4514 + C38614 * C4277 +
              C38609 * C4513) *
                 C89926 +
             (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
              C38609 * C4165) *
                 C186) *
                C55293 +
            ((C41799 + C41798) * C89926 + (C41797 + C41796) * C186) * C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C186 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C89926) *
               C55292 +
           ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
              C89843 * C5796 -
          (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
           ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
              C89843 * C5797 +
          (((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
           ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
              C89843 * C5798 -
          (((C38616 * C16980 + C38610 * C17210 + C38614 * C16979 +
             C38609 * C17209) *
                C89926 +
            (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
             C38609 * C16851) *
                C186) *
               C55293 +
           ((C45693 + C45692) * C89926 + (C45691 + C45690) * C186) * C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C89843 * C5149 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C89843 * C89879) *
              C5151 +
          (((C1281 * C38609 + C1280 * C38610) * C55292 +
            (C60543 + C60544) * C55293) *
               C89843 * C89879 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C89843 * C5149) *
              C5152 +
          (((C447 * C38609 + C448 * C38610) * C55292 +
            (C59449 + C59450) * C55293) *
               C89843 * C5149 -
           (((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C38610 +
             C4631 * C38609) *
                C55293 +
            (C3021 * C38610 + C1280 * C38609) * C55292) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
            C446 * C38610) *
               C55292 +
           (C57527 + C57528) * C55293) *
              C89843 * C5796 -
          ((C60542 + C60541) * C55293 +
           (C1281 * C38610 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
               C55292) *
              C89843 * C5797 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
            C1282 * C38610) *
               C55292 +
           (C34186 * C38609 + C56459 * C38610) * C55293) *
              C89843 * C5798 -
          (((C416 * C16850 + C62303 + C62303 + C89926 * C17334) * C38610 +
            (C416 * C16849 + C31316 + C31316 + C89926 * C17333) * C38609) *
               C55293 +
           ((C416 * C5802 + C6033 + C6033 + C89926 * C6029) * C38610 +
            (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C38609) *
               C55292) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C89843 * C5149 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C89843 * C89879) *
              C5151 +
          ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
            ((C58305 + C58306) * C186 + (C58607 + C58608) * C89926) * C38610) *
               C89843 * C89879 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C89843 * C5149) *
              C5152 +
          ((((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
            ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
               C89843 * C5149 -
           (((C55429 * C4278 + C55293 * C4732 + C55428 * C943 +
              C55292 * C1363) *
                 C89926 +
             (C55429 * C4162 + C55293 * C4396 + C55428 * C833 +
              C55292 * C1057) *
                 C186) *
                C38610 +
            ((C58608 + C58607) * C89926 + (C58306 + C58305) * C186) * C38609) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C186 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C89926) *
               C38609 +
           ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
              C89843 * C5796 -
          (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
           ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 + C55292 * C1359) *
                C89926 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C186) *
               C38609) *
              C89843 * C5797 +
          (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C186 +
            (C55428 * C940 + C55292 * C1360 + C55429 * C8678 + C55293 * C8995) *
                C89926) *
               C38609 +
           ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
              C89843 * C5798 -
          (((C55429 * C16980 + C55293 * C17440 + C55428 * C5864 +
             C55292 * C6085) *
                C89926 +
            (C55429 * C16850 + C55293 * C17082 + C55428 * C5802 +
             C55292 * C5920) *
                C186) *
               C38610 +
           ((C55429 * C16979 + C55293 * C17439 + C55428 * C5865 +
             C55292 * C6086) *
                C89926 +
            (C55429 * C16849 + C55293 * C17081 + C55428 * C5803 +
             C55292 * C5921) *
                C186) *
               C38609) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C89843 * C5149 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C89843 * C89879) *
              C5151 +
          (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
            (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
               C89926 * C89843 * C89879 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C89843 * C5149) *
              C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C55428 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C55292 +
            (C59347 + C59348) * C55429 + (C59657 + C59658) * C55293) *
               C89926 * C89843 * C5149 -
           ((C38616 * C4396 + C38610 * C4844 + C38614 * C4395 +
             C38609 * C4843) *
                C55293 +
            (C38616 * C4162 + C38610 * C4166 + C38614 * C4161 +
             C38609 * C4165) *
                C55429 +
            (C42115 + C42114) * C55292 + (C41797 + C41796) * C55428) *
               C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C55428 +
           (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
               C55292 +
           (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
              C89926 * C89843 * C5796 -
          ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
           (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
              C89926 * C89843 * C5797 +
          ((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
           (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
              C89926 * C89843 * C5798 -
          ((C38616 * C17082 + C38610 * C17549 + C38614 * C17081 +
            C38609 * C17548) *
               C55293 +
           (C38616 * C16850 + C38610 * C16852 + C38614 * C16849 +
            C38609 * C16851) *
               C55429 +
           (C45901 + C45900) * C55292 + (C45691 + C45690) * C55428) *
              C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C89843 * C5149 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C89843 * C89879) *
                        C5151 +
                    (((C56769 + C56768 + C56767 + C56766) * C38609 +
                      (C58805 + C58806 + C58807 + C58808) * C38610) *
                         C89843 * C89879 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C89843 * C5149) *
                        C5152 +
                    (((C55822 + C55821 + C55820 + C55819) * C38609 +
                      (C55823 + C55824 + C55825 + C55826) * C38610) *
                         C89843 * C5149 -
                     (((C186 * C4396 + C89926 * C4946) * C55293 +
                       (C186 * C4162 + C89926 * C4278) * C55429 +
                       C3257 * C55292 + C2782 * C55428) *
                          C38610 +
                      (C58808 + C58807 + C58806 + C58805) * C38609) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C55428 +
                      (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
                      C27949 * C55293) *
                         C38609 +
                     (C55815 + C55816 + C55817 + C55818) * C38610) *
                        C89843 * C5796 -
                    ((C56766 + C56767 + C56768 + C56769) * C38610 +
                     (C30291 * C55293 + C29640 * C55429 +
                      (C186 * C1053 + C89926 * C1543) * C55292 +
                      (C186 * C829 + C89926 * C939) * C55428) *
                         C38609) *
                        C89843 * C5797 +
                    (((C186 * C830 + C89926 * C940) * C55428 +
                      (C186 * C1054 + C89926 * C1544) * C55292 +
                      C33943 * C55429 + C34416 * C55293) *
                         C38609 +
                     (C56770 + C56771 + C56772 + C56776) * C38610) *
                        C89843 * C5798 -
                    (((C186 * C17082 + C89926 * C17669) * C55293 +
                      (C186 * C16850 + C89926 * C16980) * C55429 +
                      (C186 * C5920 + C89926 * C6191) * C55292 +
                      (C186 * C5802 + C89926 * C5864) * C55428) *
                         C38610 +
                     ((C186 * C17081 + C89926 * C17668) * C55293 +
                      (C186 * C16849 + C89926 * C16979) * C55429 +
                      (C186 * C5921 + C89926 * C6192) * C55292 +
                      (C186 * C5803 + C89926 * C5865) * C55428) *
                         C38609) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C89843 * C5149 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C89843 * C89879) *
                        C5151 +
                    (((C56904 + C56903) * C89926 * C38609 +
                      (C58917 + C58918) * C89926 * C38610) *
                         C89843 * C89879 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C89843 * C5149) *
                        C5152 +
                    (((C55932 + C55931) * C89926 * C38609 +
                      (C55933 + C55934) * C89926 * C38610) *
                         C89843 * C5149 -
                     ((C55893 * C4162 + C58911 + C58911 + C55293 * C5058 +
                       C55892 * C833 + C58912 + C58912 + C55292 * C1649) *
                          C89926 * C38610 +
                      (C58918 + C58917) * C89926 * C38609) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C89926 * C38609 +
                     (C55929 + C55930) * C89926 * C38610) *
                        C89843 * C5796 -
                    ((C56903 + C56904) * C89926 * C38610 +
                     (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                      C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                         C89926 * C38609) *
                        C89843 * C5797 +
                    ((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                      C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                         C89926 * C38609 +
                     (C56905 + C56906) * C89926 * C38610) *
                        C89843 * C5798 -
                    ((C55893 * C16850 + C62568 + C62568 + C55293 * C17769 +
                      C55892 * C5802 + C62569 + C62569 + C55292 * C6244) *
                         C89926 * C38610 +
                     (C55893 * C16849 + C62570 + C62570 + C55293 * C17768 +
                      C55892 * C5803 + C62571 + C62571 + C55292 * C6245) *
                         C89926 * C38609) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38613 * C106 + C38618 + C38618 + C38609 * C118 + C38615 * C107 +
              C38619 + C38619 + C38610 * C119) *
                 C55292 +
             (C57039 + C57040) * C55293) *
                C89926 * C9304 -
            ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) * C89926 *
                C89907) *
               C89998 +
           (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) * C89926 *
                C89907 -
            ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) * C89926 *
                C9304) *
               C89879) *
              C89990 +
          ((((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) * C89926 *
                C89907 -
            ((C57044 + C57043) * C55293 +
             (C38615 * C108 + C38624 + C38624 + C38610 * C120 + C38613 * C107 +
              C38625 + C38625 + C38609 * C119) *
                 C55292) *
                C89926 * C9304) *
               C89998 +
           (((C39420 + C39421) * C55292 + (C43394 + C43395) * C55293) * C89926 *
                C9304 -
            ((C38615 * C6323 + C40486 + C40486 + C38610 * C6329 +
              C38613 * C6324 + C40487 + C40487 + C38609 * C6330) *
                 C55293 +
             (C43395 + C43394) * C55292) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C38614 +
              (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
              C217 * C38610) *
                 C55292 +
             (C57145 + C57146 + C57147 + C57148) * C55293) *
                C9304 -
            ((C57149 + C57150 + C57151 + C57152) * C55293 +
             (C57148 + C57147 + C57146 + C57145) * C55292) *
                C89907) *
               C89998 +
           (((C60131 + C60132 + C60133 + C60134) * C55292 +
             (C62768 + C62769 + C62770 + C62771) * C55293) *
                C89907 -
            ((C60134 + C60133 + C60132 + C60131) * C55293 +
             (C972 * C38610 + C973 * C38616 +
              (C186 * C837 + C89926 * C947) * C38609 +
              (C186 * C829 + C89926 * C939) * C38614) *
                 C55292) *
                C9304) *
               C89879) *
              C89990 +
          ((((C57153 + C57154 + C57155 + C57156) * C55292 +
             (C57157 + C57158 + C57159 + C57160) * C55293) *
                C89907 -
            ((C57156 + C57155 + C57154 + C57153) * C55293 +
             (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                 C55292) *
                C9304) *
               C89998 +
           (((C973 * C38614 + C972 * C38609 + C971 * C38616 + C970 * C38610) *
                 C55292 +
             (C60135 + C60136 + C60137 + C60138) * C55293) *
                C9304 -
            (((C186 * C6326 + C89926 * C6412) * C38610 +
              (C186 * C6323 + C89926 * C6409) * C38616 + C29645 * C38609 +
              C29644 * C38614) *
                 C55293 +
             (C60138 + C60137 + C60136 + C60135) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C38614 +
             (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                 C38609 +
             (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
                C89926 * C9304 -
            ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
             (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
              C55292 * C1994) *
                 C38609 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C38614) *
                C89926 * C89907) *
               C89998 +
           (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C38614 +
             (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
              C55293 * C6494) *
                 C38609 +
             (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
                C89926 * C89907 -
            ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
             (C55429 * C4163 + C55293 * C4397 + C55428 * C837 +
              C55292 * C1061) *
                 C38609 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C38614) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          ((((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
             (C59237 + C59238) * C38616 + (C59239 + C59240) * C38610) *
                C89926 * C89907 -
            ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
             (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
                C89926 * C9304) *
               C89998 +
           (((C56254 + C56253) * C38614 + (C56252 + C56251) * C38609 +
             (C58305 + C58306) * C38616 + (C58307 + C58308) * C38610) *
                C89926 * C9304 -
            ((C55429 * C6326 + C55293 * C6492 + C55428 * C4165 +
              C55292 * C4399) *
                 C38610 +
             (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
              C55292 * C4395) *
                 C38616 +
             (C60280 + C60279) * C38609 + (C60278 + C60277) * C38614) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                  C186 +
              (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                  C89926) *
                 C55292 +
             ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
                C9304 -
            (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
             ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
                C89907) *
               C89998 +
           ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
             ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
                C89907 -
            (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
             ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
                C9304) *
               C89879) *
              C89990 +
          (((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
             ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
                C89907 -
            (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
             ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                  C89926 +
              (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                  C186) *
                 C55292) *
                C9304) *
               C89998 +
           ((((C39798 + C39799) * C186 + (C39800 + C39801) * C89926) * C55292 +
             ((C43826 + C43827) * C186 + (C43828 + C43829) * C89926) * C55293) *
                C9304 -
            (((C38616 * C6409 + C38610 * C6569 + C38614 * C6410 +
               C38609 * C6570) *
                  C89926 +
              (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
               C38609 * C6327) *
                  C186) *
                 C55293 +
             ((C43829 + C43828) * C89926 + (C43827 + C43826) * C186) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
              C446 * C38610) *
                 C55292 +
             (C57527 + C57528) * C55293) *
                C9304 -
            ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) *
                C89907) *
               C89998 +
           (((C60541 + C60542) * C55292 + (C63066 + C63067) * C55293) * C89907 -
            ((C60542 + C60541) * C55293 +
             (C1281 * C38610 +
              (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                 C55292) *
                C9304) *
               C89879) *
              C89990 +
          ((((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C89907 -
            ((C57532 + C57531) * C55293 +
             (C447 * C38610 + C446 * C38609) * C55292) *
                C9304) *
               C89998 +
           (((C1281 * C38609 + C1280 * C38610) * C55292 +
             (C60543 + C60544) * C55293) *
                C9304 -
            (((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C38610 +
              C29981 * C38609) *
                 C55293 +
             (C60544 + C60543) * C55292) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C55428 * C106 + C55292 * C274 + C55429 * C1762 +
               C55293 * C1986) *
                  C186 +
              (C55428 * C187 + C55292 * C499 + C55429 * C1872 +
               C55293 * C2292) *
                  C89926) *
                 C38609 +
             ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
                C9304 -
            (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
             ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
               C55292 * C2292) *
                  C89926 +
              (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
               C55292 * C1986) *
                  C186) *
                 C38609) *
                C89907) *
               C89998 +
           ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
               C55293 * C6491) *
                  C186 +
              (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
               C55293 * C6728) *
                  C89926) *
                 C38609 +
             ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
                C89907 -
            (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
             ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
               C55292 * C1359) *
                  C89926 +
              (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
               C55292 * C1053) *
                  C186) *
                 C38609) *
                C9304) *
               C89879) *
              C89990 +
          (((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
             ((C59237 + C59238) * C186 + (C59553 + C59554) * C89926) * C38610) *
                C89907 -
            (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
             ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
                C9304) *
               C89998 +
           ((((C56254 + C56253) * C186 + (C56567 + C56566) * C89926) * C38609 +
             ((C58305 + C58306) * C186 + (C58607 + C58608) * C89926) * C38610) *
                C9304 -
            (((C55429 * C6409 + C55293 * C6726 + C55428 * C4277 +
               C55292 * C4731) *
                  C89926 +
              (C55429 * C6323 + C55293 * C6489 + C55428 * C4161 +
               C55292 * C4395) *
                  C186) *
                 C38610 +
             ((C60680 + C60679) * C89926 + (C60278 + C60277) * C186) * C38609) *
                C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C55428 +
             (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                 C55292 +
             (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
                C89926 * C9304 -
            ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
             (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
                C89926 * C89907) *
               C89998 +
           (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
             (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
                C89926 * C89907 -
            ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
             (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          ((((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
             (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
                C89926 * C89907 -
            ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
             (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                 C55292 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C55428) *
                C89926 * C9304) *
               C89998 +
           (((C39798 + C39799) * C55428 + (C40160 + C40161) * C55292 +
             (C43826 + C43827) * C55429 + (C44250 + C44251) * C55293) *
                C89926 * C9304 -
            ((C38616 * C6489 + C38610 * C6803 + C38614 * C6490 +
              C38609 * C6804) *
                 C55293 +
             (C38616 * C6323 + C38610 * C6326 + C38614 * C6324 +
              C38609 * C6327) *
                 C55429 +
             (C44251 + C44250) * C55292 + (C43827 + C43826) * C55428) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C186 * C106 + C89926 * C187) * C55428 +
                        (C186 * C274 + C89926 * C633) * C55292 +
                        C27369 * C55429 + C27949 * C55293) *
                           C38609 +
                       (C55815 + C55816 + C55817 + C55818) * C38610) *
                          C9304 -
                      ((C57865 + C57866 + C57867 + C57868) * C38610 +
                       (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                        C27369 * C55428) *
                           C38609) *
                          C89907) *
                         C89998 +
                     (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                        C30292 * C55293) *
                           C38609 +
                       (C60941 + C60942 + C60943 + C60944) * C38610) *
                          C89907 -
                      ((C56766 + C56767 + C56768 + C56769) * C38610 +
                       (C30291 * C55293 + C29640 * C55429 +
                        (C186 * C1053 + C89926 * C1543) * C55292 +
                        (C186 * C829 + C89926 * C939) * C55428) *
                           C38609) *
                          C9304) *
                         C89879) *
                        C89990 +
                    ((((C57868 + C57867 + C57866 + C57865) * C38609 +
                       (C59757 + C59758 + C59759 + C59760) * C38610) *
                          C89907 -
                      ((C55819 + C55820 + C55821 + C55822) * C38610 +
                       (C55818 + C55817 + C55816 + C55815) * C38609) *
                          C9304) *
                         C89998 +
                     (((C56769 + C56768 + C56767 + C56766) * C38609 +
                       (C58805 + C58806 + C58807 + C58808) * C38610) *
                          C9304 -
                      (((C186 * C6489 + C89926 * C6880) * C55293 +
                        (C186 * C6323 + C89926 * C6409) * C55429 +
                        C4955 * C55292 + C4294 * C55428) *
                           C38610 +
                       (C60944 + C60943 + C60942 + C60941) * C38609) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                        C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                           C89926 * C38609 +
                       (C55929 + C55930) * C89926 * C38610) *
                          C9304 -
                      ((C57999 + C58000) * C89926 * C38610 +
                       (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                        C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                           C89926 * C38609) *
                          C89907) *
                         C89998 +
                     (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                        C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                           C89926 * C38609 +
                       (C61089 + C61090) * C89926 * C38610) *
                          C89907 -
                      ((C56903 + C56904) * C89926 * C38610 +
                       (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                        C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                           C89926 * C38609) *
                          C9304) *
                         C89879) *
                        C89990 +
                    ((((C58000 + C57999) * C89926 * C38609 +
                       (C59869 + C59870) * C89926 * C38610) *
                          C89907 -
                      ((C55931 + C55932) * C89926 * C38610 +
                       (C55930 + C55929) * C89926 * C38609) *
                          C9304) *
                         C89998 +
                     (((C56904 + C56903) * C89926 * C38609 +
                       (C58917 + C58918) * C89926 * C38610) *
                          C9304 -
                      ((C55893 * C6323 + C61083 + C61083 + C55293 * C6957 +
                        C55892 * C4161 + C61084 + C61084 + C55292 * C5057) *
                           C89926 * C38610 +
                       (C61090 + C61089) * C89926 * C38609) *
                          C89907) *
                         C89879) *
                        C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C90026 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C90027 +
                     ((C57042 + C57041) * C55292 + (C68248 + C68249) * C55293) *
                         C89926 * C12024) *
                        C89998 +
                    (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) *
                         C89926 * C90027 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C90026 -
                     ((C38615 * C29516 + C51756 + C51756 + C38610 * C29518 +
                       C38613 * C23356 + C51757 + C51757 + C38609 * C23360) *
                          C55293 +
                      (C46143 + C46142) * C55292) *
                         C89926 * C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C38614 +
                       (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
                       C217 * C38610) *
                          C55292 +
                      (C57145 + C57146 + C57147 + C57148) * C55293) *
                         C90026 -
                     ((C57149 + C57150 + C57151 + C57152) * C55293 +
                      (C57148 + C57147 + C57146 + C57145) * C55292) *
                         C90027 +
                     ((C57152 + C57151 + C57150 + C57149) * C55292 +
                      (C68316 + C68317 + C68318 + C68319) * C55293) *
                         C12024) *
                        C89998 +
                    (((C60131 + C60132 + C60133 + C60134) * C55292 +
                      (C62768 + C62769 + C62770 + C62771) * C55293) *
                         C90027 -
                     ((C60134 + C60133 + C60132 + C60131) * C55293 +
                      (C972 * C38610 + C973 * C38616 +
                       (C186 * C837 + C89926 * C947) * C38609 +
                       (C186 * C829 + C89926 * C939) * C38614) *
                          C55292) *
                         C90026 -
                     (((C186 * C29517 + C89926 * C29624) * C38610 +
                       (C186 * C29516 + C89926 * C29623) * C38616 +
                       C31685 * C38609 + C31684 * C38614) *
                          C55293 +
                      (C62771 + C62770 + C62769 + C62768) * C55292) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexz[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C90026 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C90027 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38614 +
            (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
             C55293 * C10741) *
                C38609 +
            (C57279 + C57280) * C38616 + (C57281 + C57282) * C38610) *
               C89926 * C12024) *
              C89998 +
          (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
             C55293 * C6491) *
                C38614 +
            (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
             C55293 * C6494) *
                C38609 +
            (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
               C89926 * C90027 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C90026 -
           ((C55429 * C29517 + C55293 * C29750 + C55428 * C6327 +
             C55292 * C6493) *
                C38610 +
            (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
             C55292 * C6490) *
                C38616 +
            (C55429 * C23358 + C55293 * C23471 + C55428 * C6328 +
             C55292 * C6494) *
                C38609 +
            (C55429 * C23356 + C55293 * C23469 + C55428 * C6325 +
             C55292 * C6491) *
                C38614) *
               C89926 * C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C90026 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C90027 +
           (((C57420 + C57419) * C186 + (C57418 + C57417) * C89926) * C55292 +
            ((C68460 + C68461) * C186 + (C68462 + C68463) * C89926) * C55293) *
               C12024) *
              C89998 +
          ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
            ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
               C90027 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C90026 -
           (((C38616 * C29623 + C38610 * C29849 + C38614 * C23415 +
              C38609 * C23523) *
                 C89926 +
             (C38616 * C29516 + C38610 * C29517 + C38614 * C23356 +
              C38609 * C23358) *
                 C186) *
                C55293 +
            ((C46453 + C46452) * C89926 + (C46451 + C46450) * C186) * C55292) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyy[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C90026 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C90027 +
           ((C57530 + C57529) * C55292 + (C68530 + C68531) * C55293) * C12024) *
              C89998 +
          (((C60541 + C60542) * C55292 + (C63066 + C63067) * C55293) * C90027 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C90026 -
           (((C416 * C29516 + C29972 + C29972 + C89926 * C29962) * C38610 +
             C31928 * C38609) *
                C55293 +
            (C63067 + C63066) * C55292) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eeyz[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C90026 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C90027 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C186 +
             (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
              C55293 * C10903) *
                 C89926) *
                C38609 +
            ((C57279 + C57280) * C186 + (C57643 + C57644) * C89926) * C38610) *
               C12024) *
              C89998 +
          ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C186 +
             (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
              C55293 * C6728) *
                 C89926) *
                C38609 +
            ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
               C90027 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C90026 -
           (((C55429 * C29623 + C55293 * C30082 + C55428 * C6410 +
              C55292 * C6727) *
                 C89926 +
             (C55429 * C29516 + C55293 * C29749 + C55428 * C6324 +
              C55292 * C6490) *
                 C186) *
                C38610 +
            ((C55429 * C23415 + C55293 * C23630 + C55428 * C6411 +
              C55292 * C6728) *
                 C89926 +
             (C55429 * C23356 + C55293 * C23469 + C55428 * C6325 +
              C55292 * C6491) *
                 C186) *
                C38609) *
               C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C90026 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C90027 +
           ((C57420 + C57419) * C55428 + (C57762 + C57761) * C55292 +
            (C68460 + C68461) * C55429 + (C68668 + C68669) * C55293) *
               C89926 * C12024) *
              C89998 +
          (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
            (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
               C89926 * C90027 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C90026 -
           ((C38616 * C29749 + C38610 * C30181 + C38614 * C23469 +
             C38609 * C23682) *
                C55293 +
            (C38616 * C29516 + C38610 * C29517 + C38614 * C23356 +
             C38609 * C23358) *
                C55429 +
            (C46757 + C46756) * C55292 + (C46451 + C46450) * C55428) *
               C89926 * C12024) *
              C89879) *
         C89808) /
        (p * q * std::sqrt(p + q));
    d2eezy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C90026 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C90027 +
                     ((C27371 * C55428 + C27950 * C55292 + C27374 * C55429 +
                       C27951 * C55293) *
                          C38609 +
                      (C57869 + C57870 + C57871 + C57872) * C38610) *
                         C12024) *
                        C89998 +
                    (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                       C30292 * C55293) *
                          C38609 +
                      (C60941 + C60942 + C60943 + C60944) * C38610) *
                         C90027 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C90026 -
                     (((C186 * C29749 + C89926 * C30283) * C55293 +
                       (C186 * C29516 + C89926 * C29623) * C55429 +
                       C30293 * C55292 + C29644 * C55428) *
                          C38610 +
                      (C32160 * C55293 + C31684 * C55429 + C30292 * C55292 +
                       C29642 * C55428) *
                          C38609) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eezz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C90026 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C90027 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C89926 * C38609 +
                      (C58001 + C58002) * C89926 * C38610) *
                         C12024) *
                        C89998 +
                    (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                       C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                          C89926 * C38609 +
                      (C61089 + C61090) * C89926 * C38610) *
                         C90027 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C90026 -
                     ((C55893 * C29516 + C63460 + C63460 + C55293 * C30391 +
                       C55892 * C6324 + C63461 + C63461 + C55292 * C6958) *
                          C89926 * C38610 +
                      (C55893 * C23356 + C63462 + C63462 + C55293 * C23786 +
                       C55892 * C6325 + C63463 + C63463 + C55292 * C6959) *
                          C89926 * C38609) *
                         C12024) *
                        C89879) *
                   C89808) /
                  (p * q * std::sqrt(p + q));
    d2eexx[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C9304 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C89907) *
                        C822 +
                    (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) *
                         C89926 * C89907 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C9304) *
                        C823 +
                    (((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                         C89926 * C9304 -
                     ((C38615 * C14728 + C46136 + C46136 + C38610 * C14732 +
                       C38613 * C14727 + C46137 + C46137 + C38609 * C14731) *
                          C55293 +
                      (C49115 + C49114) * C55292) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C9304 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    (((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) *
                         C89926 * C89907 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C55292 +
                      (C59027 + C59028) * C55293) *
                         C89926 * C9304 -
                     ((C38615 * C1767 + C59021 + C59021 + C38610 * C1783 +
                       C38613 * C1765 + C59022 + C59022 + C38609 * C1781) *
                          C55293 +
                      (C59028 + C59027) * C55292) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                      C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                         C55292 +
                     (C57039 + C57040) * C55293) *
                        C89926 * C10614 -
                    ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                        C89926 * C10615 +
                    ((C57042 + C57041) * C55292 + (C68248 + C68249) * C55293) *
                        C89926 * C10616 -
                    ((C38615 * C27232 + C68242 + C68242 + C38610 * C27236 +
                      C38613 * C27231 + C68243 + C68243 + C38609 * C27235) *
                         C55293 +
                     (C68249 + C68248) * C55292) *
                        C89926 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C9304 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C89907) *
              C822 +
          (((C60131 + C60132 + C60133 + C60134) * C55292 +
            (C62768 + C62769 + C62770 + C62771) * C55293) *
               C89907 -
           ((C60134 + C60133 + C60132 + C60131) * C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C9304) *
              C823 +
          ((((C186 * C830 + C89926 * C940) * C38614 +
             (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
             C975 * C38610) *
                C55292 +
            (C65712 + C65713 + C65714 + C65715) * C55293) *
               C9304 -
           (((C186 * C14730 + C89926 * C14822) * C38610 +
             (C186 * C14728 + C89926 * C14820) * C38616 + C33946 * C38609 +
             C33945 * C38614) *
                C55293 +
            (C65715 + C65714 + C65713 + C65712) * C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C9304 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C89907) *
              C89827 * C5151 +
          (((C57153 + C57154 + C57155 + C57156) * C55292 +
            (C57157 + C57158 + C57159 + C57160) * C55293) *
               C89907 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C9304) *
              C89827 * C5152 +
          (((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
                C55292 +
            (C59127 + C59128 + C59129 + C59130) * C55293) *
               C9304 -
           (((C186 * C1775 + C89926 * C1885) * C38610 +
             (C186 * C1767 + C89926 * C1877) * C38616 + C1910 * C38609 +
             C1909 * C38614) *
                C55293 +
            (C59130 + C59129 + C59128 + C59127) * C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C38614 +
            (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
            C217 * C38610) *
               C55292 +
           (C57145 + C57146 + C57147 + C57148) * C55293) *
              C10614 -
          ((C57149 + C57150 + C57151 + C57152) * C55293 +
           (C57148 + C57147 + C57146 + C57145) * C55292) *
              C10615 +
          ((C57152 + C57151 + C57150 + C57149) * C55292 +
           (C68316 + C68317 + C68318 + C68319) * C55293) *
              C10616 -
          (((C186 * C27234 + C89926 * C27347) * C38610 +
            (C186 * C27232 + C89926 * C27345) * C38616 + C35944 * C38609 +
            C35943 * C38614) *
               C55293 +
           (C68319 + C68318 + C68317 + C68316) * C55292) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C9304 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C89907) *
              C822 +
          (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
             C55293 * C6491) *
                C38614 +
            (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
             C55293 * C6494) *
                C38609 +
            (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
               C89926 * C89907 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C9304) *
              C823 +
          (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C38614 +
            (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
                C38609 +
            (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
               C89926 * C9304 -
           ((C55429 * C14730 + C55293 * C14900 + C55428 * C8594 +
             C55292 * C8760) *
                C38610 +
            (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
             C55292 * C8757) *
                C38616 +
            (C55429 * C14729 + C55293 * C14899 + C55428 * C8595 +
             C55292 * C8761) *
                C38609 +
            (C55429 * C14727 + C55293 * C14897 + C55428 * C8592 +
             C55292 * C8758) *
                C38614) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C9304 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C89907) *
              C89827 * C5151 +
          (((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
            (C59237 + C59238) * C38616 + (C59239 + C59240) * C38610) *
               C89926 * C89907 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
            (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
               C89926 * C9304 -
           ((C55429 * C1775 + C55293 * C1999 + C55428 * C1774 +
             C55292 * C1998) *
                C38610 +
            (C55429 * C1767 + C55293 * C1991 + C55428 * C1766 +
             C55292 * C1990) *
                C38616 +
            (C59240 + C59239) * C38609 + (C59238 + C59237) * C38614) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
               C38614 +
           (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
               C38609 +
           (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
              C89926 * C10614 -
          ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
           (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 + C55292 * C1994) *
               C38609 +
           (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 + C55292 * C1986) *
               C38614) *
              C89926 * C10615 +
          ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
            C55293 * C10738) *
               C38614 +
           (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
            C55293 * C10741) *
               C38609 +
           (C57279 + C57280) * C38616 + (C57281 + C57282) * C38610) *
              C89926 * C10616 -
          ((C55429 * C27234 + C55293 * C27463 + C55428 * C10622 +
            C55292 * C10740) *
               C38610 +
           (C55429 * C27232 + C55293 * C27461 + C55428 * C10619 +
            C55292 * C10737) *
               C38616 +
           (C55429 * C27233 + C55293 * C27462 + C55428 * C10623 +
            C55292 * C10741) *
               C38609 +
           (C55429 * C27231 + C55293 * C27460 + C55428 * C10620 +
            C55292 * C10738) *
               C38614) *
              C89926 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C9304 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C89907) *
              C822 +
          ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
            ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
               C89907 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C9304) *
              C823 +
          ((((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
            ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
               C9304 -
           (((C38616 * C14820 + C38610 * C14976 + C38614 * C14819 +
              C38609 * C14975) *
                 C89926 +
             (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
              C38609 * C14729) *
                 C186) *
                C55293 +
            ((C49425 + C49424) * C89926 + (C49423 + C49422) * C186) * C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C9304 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C89907) *
              C89827 * C5151 +
          ((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
            ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
               C89907 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C9304) *
              C89827 * C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C186 +
             (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                 C89926) *
                C55292 +
            ((C59347 + C59348) * C186 + (C59349 + C59350) * C89926) * C55293) *
               C9304 -
           (((C38616 * C1877 + C38610 * C2105 + C38614 * C1875 +
              C38609 * C2103) *
                 C89926 +
             (C38616 * C1767 + C38610 * C1775 + C38614 * C1765 +
              C38609 * C1773) *
                 C186) *
                C55293 +
            ((C59350 + C59349) * C89926 + (C59348 + C59347) * C186) * C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C186 +
            (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                C89926) *
               C55292 +
           ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
              C10614 -
          (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
           ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
              C10615 +
          (((C57420 + C57419) * C186 + (C57418 + C57417) * C89926) * C55292 +
           ((C68460 + C68461) * C186 + (C68462 + C68463) * C89926) * C55293) *
              C10616 -
          (((C38616 * C27345 + C38610 * C27539 + C38614 * C27344 +
             C38609 * C27538) *
                C89926 +
            (C38616 * C27232 + C38610 * C27234 + C38614 * C27231 +
             C38609 * C27233) *
                C186) *
               C55293 +
           ((C68463 + C68462) * C89926 + (C68461 + C68460) * C186) * C55292) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C9304 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C89907) *
              C822 +
          (((C60541 + C60542) * C55292 + (C63066 + C63067) * C55293) * C89907 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C9304) *
              C823 +
          ((((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
             C1282 * C38610) *
                C55292 +
            (C66010 + C66011) * C55293) *
               C9304 -
           (((C416 * C14728 + C26849 + C26849 + C89926 * C15052) * C38610 +
             C34187 * C38609) *
                C55293 +
            (C66011 + C66010) * C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C9304 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C89907) *
              C89827 * C5151 +
          (((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C89907 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C9304) *
              C89827 * C5152 +
          (((C447 * C38609 + C448 * C38610) * C55292 +
            (C59449 + C59450) * C55293) *
               C9304 -
           (((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C38610 +
             C2216 * C38609) *
                C55293 +
            (C59450 + C59449) * C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
            C446 * C38610) *
               C55292 +
           (C57527 + C57528) * C55293) *
              C10614 -
          ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C10615 +
          ((C57530 + C57529) * C55292 + (C68530 + C68531) * C55293) * C10616 -
          (((C416 * C27232 + C27678 + C27678 + C89926 * C27665) * C38610 +
            C36115 * C38609) *
               C55293 +
           (C68531 + C68530) * C55292) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C9304 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C89907) *
              C822 +
          ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C186 +
             (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
              C55293 * C6728) *
                 C89926) *
                C38609 +
            ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
               C89907 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C9304) *
              C823 +
          ((((C55428 * C830 + C55292 * C1054 + C55429 * C8592 +
              C55293 * C8758) *
                 C186 +
             (C55428 * C940 + C55292 * C1360 + C55429 * C8678 +
              C55293 * C8995) *
                 C89926) *
                C38609 +
            ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
               C9304 -
           (((C55429 * C14820 + C55293 * C15140 + C55428 * C8677 +
              C55292 * C8994) *
                 C89926 +
             (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
              C55292 * C8757) *
                 C186) *
                C38610 +
            ((C55429 * C14819 + C55293 * C15139 + C55428 * C8678 +
              C55292 * C8995) *
                 C89926 +
             (C55429 * C14727 + C55293 * C14897 + C55428 * C8592 +
              C55292 * C8758) *
                 C186) *
                C38609) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C9304 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C89907) *
              C89827 * C5151 +
          ((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
            ((C59237 + C59238) * C186 + (C59553 + C59554) * C89926) * C38610) *
               C89907 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C9304) *
              C89827 * C5152 +
          ((((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
            ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
               C9304 -
           (((C55429 * C1877 + C55293 * C2297 + C55428 * C1876 +
              C55292 * C2296) *
                 C89926 +
             (C55429 * C1767 + C55293 * C1991 + C55428 * C1766 +
              C55292 * C1990) *
                 C186) *
                C38610 +
            ((C59554 + C59553) * C89926 + (C59238 + C59237) * C186) * C38609) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C186 +
            (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                C89926) *
               C38609 +
           ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
              C10614 -
          (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
           ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
             C55292 * C2292) *
                C89926 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C186) *
               C38609) *
              C10615 +
          (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C186 +
            (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
             C55293 * C10903) *
                C89926) *
               C38609 +
           ((C57279 + C57280) * C186 + (C57643 + C57644) * C89926) * C38610) *
              C10616 -
          (((C55429 * C27345 + C55293 * C27769 + C55428 * C10681 +
             C55292 * C10902) *
                C89926 +
            (C55429 * C27232 + C55293 * C27461 + C55428 * C10619 +
             C55292 * C10737) *
                C186) *
               C38610 +
           ((C55429 * C27344 + C55293 * C27768 + C55428 * C10682 +
             C55292 * C10903) *
                C89926 +
            (C55429 * C27231 + C55293 * C27460 + C55428 * C10620 +
             C55292 * C10738) *
                C186) *
               C38609) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C9304 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C89907) *
              C822 +
          (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
            (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
               C89926 * C89907 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C9304) *
              C823 +
          (((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
            (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
               C89926 * C9304 -
           ((C38616 * C14898 + C38610 * C15216 + C38614 * C14897 +
             C38609 * C15215) *
                C55293 +
            (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
             C38609 * C14729) *
                C55429 +
            (C49729 + C49728) * C55292 + (C49423 + C49422) * C55428) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C9304 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C89907) *
              C89827 * C5151 +
          (((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
            (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
               C89926 * C89907 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C55428 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C55292 +
            (C59347 + C59348) * C55429 + (C59657 + C59658) * C55293) *
               C89926 * C9304 -
           ((C38616 * C1991 + C38610 * C2399 + C38614 * C1989 +
             C38609 * C2397) *
                C55293 +
            (C38616 * C1767 + C38610 * C1775 + C38614 * C1765 +
             C38609 * C1773) *
                C55429 +
            (C59658 + C59657) * C55292 + (C59348 + C59347) * C55428) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
               C55428 +
           (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
               C55292 +
           (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
              C89926 * C10614 -
          ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
           (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
              C89926 * C10615 +
          ((C57420 + C57419) * C55428 + (C57762 + C57761) * C55292 +
           (C68460 + C68461) * C55429 + (C68668 + C68669) * C55293) *
              C89926 * C10616 -
          ((C38616 * C27461 + C38610 * C27845 + C38614 * C27460 +
            C38609 * C27844) *
               C55293 +
           (C38616 * C27232 + C38610 * C27234 + C38614 * C27231 +
            C38609 * C27233) *
               C55429 +
           (C68669 + C68668) * C55292 + (C68461 + C68460) * C55428) *
              C89926 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C9304 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C89907) *
                        C822 +
                    (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                       C30292 * C55293) *
                          C38609 +
                      (C60941 + C60942 + C60943 + C60944) * C38610) *
                         C89907 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C9304) *
                        C823 +
                    ((((C186 * C830 + C89926 * C940) * C55428 +
                       (C186 * C1054 + C89926 * C1544) * C55292 +
                       C33943 * C55429 + C34416 * C55293) *
                          C38609 +
                      (C56770 + C56771 + C56772 + C56776) * C38610) *
                         C9304 -
                     (((C186 * C14898 + C89926 * C15292) * C55293 +
                       (C186 * C14728 + C89926 * C14820) * C55429 +
                       C56775 * C55292 + C56135 * C55428) *
                          C38610 +
                      (C34417 * C55293 + C33945 * C55429 + C34416 * C55292 +
                       C33943 * C55428) *
                          C38609) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C9304 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C89907) *
                        C89827 * C5151 +
                    (((C57868 + C57867 + C57866 + C57865) * C38609 +
                      (C59757 + C59758 + C59759 + C59760) * C38610) *
                         C89907 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C9304) *
                        C89827 * C5152 +
                    (((C55822 + C55821 + C55820 + C55819) * C38609 +
                      (C55823 + C55824 + C55825 + C55826) * C38610) *
                         C9304 -
                     (((C186 * C1991 + C89926 * C2481) * C55293 +
                       (C186 * C1767 + C89926 * C1877) * C55429 +
                       C3978 * C55292 + C3503 * C55428) *
                          C38610 +
                      (C59760 + C59759 + C59758 + C59757) * C38609) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C55428 +
                      (C186 * C274 + C89926 * C633) * C55292 + C27369 * C55429 +
                      C27949 * C55293) *
                         C38609 +
                     (C55815 + C55816 + C55817 + C55818) * C38610) *
                        C10614 -
                    ((C57865 + C57866 + C57867 + C57868) * C38610 +
                     (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                      C27369 * C55428) *
                         C38609) *
                        C10615 +
                    ((C27371 * C55428 + C27950 * C55292 + C27374 * C55429 +
                      C27951 * C55293) *
                         C38609 +
                     (C57869 + C57870 + C57871 + C57872) * C38610) *
                        C10616 -
                    (((C186 * C27461 + C89926 * C27939) * C55293 +
                      (C186 * C27232 + C89926 * C27345) * C55429 +
                      C27952 * C55292 + C27375 * C55428) *
                         C38610 +
                     (C36275 * C55293 + C35943 * C55429 + C27951 * C55292 +
                      C27374 * C55428) *
                         C38609) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C9304 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C89907) *
                        C822 +
                    (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                       C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                          C89926 * C38609 +
                      (C61089 + C61090) * C89926 * C38610) *
                         C89907 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C9304) *
                        C823 +
                    (((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                       C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                          C89926 * C38609 +
                      (C56905 + C56906) * C89926 * C38610) *
                         C9304 -
                     ((C55893 * C14728 + C66404 + C66404 + C55293 * C15368 +
                       C55892 * C8591 + C66405 + C66405 + C55292 * C9225) *
                          C89926 * C38610 +
                      (C55893 * C14727 + C66406 + C66406 + C55293 * C15367 +
                       C55892 * C8592 + C66407 + C66407 + C55292 * C9226) *
                          C89926 * C38609) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C9304 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C89907) *
                        C89827 * C5151 +
                    (((C58000 + C57999) * C89926 * C38609 +
                      (C59869 + C59870) * C89926 * C38610) *
                         C89907 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C9304) *
                        C89827 * C5152 +
                    (((C55932 + C55931) * C89926 * C38609 +
                      (C55933 + C55934) * C89926 * C38610) *
                         C9304 -
                     ((C55893 * C1767 + C59863 + C59863 + C55293 * C2583 +
                       C55892 * C1766 + C59864 + C59864 + C55292 * C2582) *
                          C89926 * C38610 +
                      (C59870 + C59869) * C89926 * C38609) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                      C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                         C89926 * C38609 +
                     (C55929 + C55930) * C89926 * C38610) *
                        C10614 -
                    ((C57999 + C58000) * C89926 * C38610 +
                     (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                      C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                         C89926 * C38609) *
                        C10615 +
                    ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                      C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                         C89926 * C38609 +
                     (C58001 + C58002) * C89926 * C38610) *
                        C10616 -
                    ((C55893 * C27232 + C68802 + C68802 + C55293 * C28027 +
                      C55892 * C10619 + C68803 + C68803 + C55292 * C11061) *
                         C89926 * C38610 +
                     (C55893 * C27231 + C68804 + C68804 + C55293 * C28026 +
                      C55892 * C10620 + C68805 + C68805 + C55292 * C11062) *
                         C89926 * C38609) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C90026 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C90027 +
                     ((C57042 + C57041) * C55292 + (C68248 + C68249) * C55293) *
                         C89926 * C12024) *
                        C89827 * C89990 +
                    (((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) *
                         C89926 * C90027 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C90026 -
                     ((C38615 * C10618 + C57021 + C57021 + C38610 * C10624 +
                       C38613 * C10619 + C57022 + C57022 + C38609 * C10625) *
                          C55293 +
                      (C57046 + C57045) * C55292) *
                         C89926 * C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C90026 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C90027 +
           ((C57152 + C57151 + C57150 + C57149) * C55292 +
            (C68316 + C68317 + C68318 + C68319) * C55293) *
               C12024) *
              C89827 * C89990 +
          (((C57153 + C57154 + C57155 + C57156) * C55292 +
            (C57157 + C57158 + C57159 + C57160) * C55293) *
               C90027 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C90026 -
           (((C186 * C10621 + C89926 * C10683) * C38610 +
             (C186 * C10618 + C89926 * C10680) * C38616 + C27376 * C38609 +
             C27375 * C38614) *
                C55293 +
            (C57160 + C57159 + C57158 + C57157) * C55292) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eexz[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C90026 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C90027 +
           ((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
             C55293 * C10738) *
                C38614 +
            (C55428 * C1771 + C55292 * C1995 + C55429 * C10623 +
             C55293 * C10741) *
                C38609 +
            (C57279 + C57280) * C38616 + (C57281 + C57282) * C38610) *
               C89926 * C12024) *
              C89827 * C89990 +
          (((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
            (C59237 + C59238) * C38616 + (C59239 + C59240) * C38610) *
               C89926 * C90027 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C90026 -
           ((C55429 * C10621 + C55293 * C10739 + C55428 * C1773 +
             C55292 * C1997) *
                C38610 +
            (C55429 * C10618 + C55293 * C10736 + C55428 * C1765 +
             C55292 * C1989) *
                C38616 +
            (C57282 + C57281) * C38609 + (C57280 + C57279) * C38614) *
               C89926 * C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C90026 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C90027 +
           (((C57420 + C57419) * C186 + (C57418 + C57417) * C89926) * C55292 +
            ((C68460 + C68461) * C186 + (C68462 + C68463) * C89926) * C55293) *
               C12024) *
              C89827 * C89990 +
          ((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
            ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
               C90027 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C90026 -
           (((C38616 * C10680 + C38610 * C10792 + C38614 * C10681 +
              C38609 * C10793) *
                 C89926 +
             (C38616 * C10618 + C38610 * C10621 + C38614 * C10619 +
              C38609 * C10622) *
                 C186) *
                C55293 +
            ((C57428 + C57427) * C89926 + (C57426 + C57425) * C186) * C55292) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C90026 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C90027 +
           ((C57530 + C57529) * C55292 + (C68530 + C68531) * C55293) * C12024) *
              C89827 * C89990 +
          (((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C90027 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C90026 -
           (((C416 * C10618 + C10849 + C10849 + C89926 * C10845) * C38610 +
             C27690 * C38609) *
                C55293 +
            (C57534 + C57533) * C55292) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C90026 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C90027 +
           (((C55428 * C1763 + C55292 * C1987 + C55429 * C10620 +
              C55293 * C10738) *
                 C186 +
             (C55428 * C1873 + C55292 * C2293 + C55429 * C10682 +
              C55293 * C10903) *
                 C89926) *
                C38609 +
            ((C57279 + C57280) * C186 + (C57643 + C57644) * C89926) * C38610) *
               C12024) *
              C89827 * C89990 +
          ((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
            ((C59237 + C59238) * C186 + (C59553 + C59554) * C89926) * C38610) *
               C90027 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C90026 -
           (((C55429 * C10680 + C55293 * C10901 + C55428 * C1875 +
              C55292 * C2295) *
                 C89926 +
             (C55429 * C10618 + C55293 * C10736 + C55428 * C1765 +
              C55292 * C1989) *
                 C186) *
                C38610 +
            ((C57644 + C57643) * C89926 + (C57280 + C57279) * C186) * C38609) *
               C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C90026 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C90027 +
           ((C57420 + C57419) * C55428 + (C57762 + C57761) * C55292 +
            (C68460 + C68461) * C55429 + (C68668 + C68669) * C55293) *
               C89926 * C12024) *
              C89827 * C89990 +
          (((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
            (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
               C89926 * C90027 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C90026 -
           ((C38616 * C10736 + C38610 * C10954 + C38614 * C10737 +
             C38609 * C10955) *
                C55293 +
            (C38616 * C10618 + C38610 * C10621 + C38614 * C10619 +
             C38609 * C10622) *
                C55429 +
            (C57766 + C57765) * C55292 + (C57426 + C57425) * C55428) *
               C89926 * C12024) *
              C89827 * C89814)) /
        (p * q * std::sqrt(p + q));
    d2eezy[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C90026 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C90027 +
                     ((C27371 * C55428 + C27950 * C55292 + C27374 * C55429 +
                       C27951 * C55293) *
                          C38609 +
                      (C57869 + C57870 + C57871 + C57872) * C38610) *
                         C12024) *
                        C89827 * C89990 +
                    (((C57868 + C57867 + C57866 + C57865) * C38609 +
                      (C59757 + C59758 + C59759 + C59760) * C38610) *
                         C90027 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C90026 -
                     (((C186 * C10736 + C89926 * C11007) * C55293 +
                       (C186 * C10618 + C89926 * C10680) * C55429 +
                       C2498 * C55292 + C1909 * C55428) *
                          C38610 +
                      (C57872 + C57871 + C57870 + C57869) * C38609) *
                         C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C90026 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C90027 +
                     ((C55892 * C1763 + C57979 + C57979 + C55292 * C2579 +
                       C55893 * C10620 + C57980 + C57980 + C55293 * C11062) *
                          C89926 * C38609 +
                      (C58001 + C58002) * C89926 * C38610) *
                         C12024) *
                        C89827 * C89990 +
                    (((C58000 + C57999) * C89926 * C38609 +
                      (C59869 + C59870) * C89926 * C38610) *
                         C90027 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C90026 -
                     ((C55893 * C10618 + C57989 + C57989 + C55293 * C11060 +
                       C55892 * C1765 + C57990 + C57990 + C55292 * C2581) *
                          C89926 * C38610 +
                      (C58002 + C58001) * C89926 * C38609) *
                         C12024) *
                        C89827 * C89814)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C9304 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    (((C57043 + C57044) * C55292 + (C57045 + C57046) * C55293) *
                         C89926 * C89907 -
                     ((C57044 + C57043) * C55293 +
                      (C38615 * C108 + C38624 + C38624 + C38610 * C120 +
                       C38613 * C107 + C38625 + C38625 + C38609 * C119) *
                          C55292) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    (((C38613 * C108 + C38626 + C38626 + C38609 * C120 +
                       C38615 * C109 + C38627 + C38627 + C38610 * C121) *
                          C55292 +
                      (C59027 + C59028) * C55293) *
                         C89926 * C9304 -
                     ((C38615 * C1767 + C59021 + C59021 + C38610 * C1783 +
                       C38613 * C1765 + C59022 + C59022 + C38609 * C1781) *
                          C55293 +
                      (C59028 + C59027) * C55292) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C38613 * C106 + C38618 + C38618 + C38609 * C118 +
                       C38615 * C107 + C38619 + C38619 + C38610 * C119) *
                          C55292 +
                      (C57039 + C57040) * C55293) *
                         C89926 * C9304 -
                     ((C57041 + C57042) * C55293 + (C57040 + C57039) * C55292) *
                         C89926 * C89907) *
                        C822 +
                    (((C43393 + C43392) * C55292 + (C46142 + C46143) * C55293) *
                         C89926 * C89907 -
                     ((C43392 + C43393) * C55293 + (C39417 + C39416) * C55292) *
                         C89926 * C9304) *
                        C823 +
                    (((C39419 + C39418) * C55292 + (C49114 + C49115) * C55293) *
                         C89926 * C9304 -
                     ((C38615 * C14728 + C46136 + C46136 + C38610 * C14732 +
                       C38613 * C14727 + C46137 + C46137 + C38609 * C14731) *
                          C55293 +
                      (C49115 + C49114) * C55292) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C9304 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C89907) *
              C89827 * C5151 +
          (((C57153 + C57154 + C57155 + C57156) * C55292 +
            (C57157 + C57158 + C57159 + C57160) * C55293) *
               C89907 -
           ((C57156 + C57155 + C57154 + C57153) * C55293 +
            (C219 * C38610 + C218 * C38616 + C217 * C38609 + C216 * C38614) *
                C55292) *
               C9304) *
              C89827 * C5152 +
          (((C218 * C38614 + C219 * C38609 + C221 * C38616 + C220 * C38610) *
                C55292 +
            (C59127 + C59128 + C59129 + C59130) * C55293) *
               C9304 -
           (((C186 * C1775 + C89926 * C1885) * C38610 +
             (C186 * C1767 + C89926 * C1877) * C38616 + C1910 * C38609 +
             C1909 * C38614) *
                C55293 +
            (C59130 + C59129 + C59128 + C59127) * C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C38614 +
             (C186 * C112 + C89926 * C193) * C38609 + C216 * C38616 +
             C217 * C38610) *
                C55292 +
            (C57145 + C57146 + C57147 + C57148) * C55293) *
               C9304 -
           ((C57149 + C57150 + C57151 + C57152) * C55293 +
            (C57148 + C57147 + C57146 + C57145) * C55292) *
               C89907) *
              C822 +
          (((C60131 + C60132 + C60133 + C60134) * C55292 +
            (C62768 + C62769 + C62770 + C62771) * C55293) *
               C89907 -
           ((C60134 + C60133 + C60132 + C60131) * C55293 +
            (C972 * C38610 + C973 * C38616 +
             (C186 * C837 + C89926 * C947) * C38609 +
             (C186 * C829 + C89926 * C939) * C38614) *
                C55292) *
               C9304) *
              C823 +
          ((((C186 * C830 + C89926 * C940) * C38614 +
             (C186 * C838 + C89926 * C948) * C38609 + C974 * C38616 +
             C975 * C38610) *
                C55292 +
            (C65712 + C65713 + C65714 + C65715) * C55293) *
               C9304 -
           (((C186 * C14730 + C89926 * C14822) * C38610 +
             (C186 * C14728 + C89926 * C14820) * C38616 + C33946 * C38609 +
             C33945 * C38614) *
                C55293 +
            (C65715 + C65714 + C65713 + C65712) * C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C9304 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C89907) *
              C89827 * C5151 +
          (((C57278 + C57277) * C38614 + (C57276 + C57275) * C38609 +
            (C59237 + C59238) * C38616 + (C59239 + C59240) * C38610) *
               C89926 * C89907 -
           ((C55459 + C55460) * C38610 + (C55461 + C55462) * C38616 +
            (C55458 + C55457) * C38609 + (C55456 + C55455) * C38614) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C55462 + C55461) * C38614 + (C55460 + C55459) * C38609 +
            (C55463 + C55464) * C38616 + (C55465 + C55466) * C38610) *
               C89926 * C9304 -
           ((C55429 * C1775 + C55293 * C1999 + C55428 * C1774 +
             C55292 * C1998) *
                C38610 +
            (C55429 * C1767 + C55293 * C1991 + C55428 * C1766 +
             C55292 * C1990) *
                C38616 +
            (C59240 + C59239) * C38609 + (C59238 + C59237) * C38614) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                C38614 +
            (C55428 * C112 + C55292 * C280 + C55429 * C1770 + C55293 * C1994) *
                C38609 +
            (C55455 + C55456) * C38616 + (C55457 + C55458) * C38610) *
               C89926 * C9304 -
           ((C57275 + C57276) * C38610 + (C57277 + C57278) * C38616 +
            (C55429 * C1771 + C55293 * C1995 + C55428 * C1770 +
             C55292 * C1994) *
                C38609 +
            (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
             C55292 * C1986) *
                C38614) *
               C89926 * C89907) *
              C822 +
          (((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
             C55293 * C6491) *
                C38614 +
            (C55428 * C4163 + C55292 * C4397 + C55429 * C6328 +
             C55293 * C6494) *
                C38609 +
            (C60277 + C60278) * C38616 + (C60279 + C60280) * C38610) *
               C89926 * C89907 -
           ((C56251 + C56252) * C38610 + (C56253 + C56254) * C38616 +
            (C55429 * C4163 + C55293 * C4397 + C55428 * C837 + C55292 * C1061) *
                C38609 +
            (C55429 * C4159 + C55293 * C4393 + C55428 * C829 + C55292 * C1053) *
                C38614) *
               C89926 * C9304) *
              C823 +
          (((C55428 * C830 + C55292 * C1054 + C55429 * C8592 + C55293 * C8758) *
                C38614 +
            (C55428 * C838 + C55292 * C1062 + C55429 * C8595 + C55293 * C8761) *
                C38609 +
            (C56255 + C56256) * C38616 + (C56257 + C56258) * C38610) *
               C89926 * C9304 -
           ((C55429 * C14730 + C55293 * C14900 + C55428 * C8594 +
             C55292 * C8760) *
                C38610 +
            (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
             C55292 * C8757) *
                C38616 +
            (C55429 * C14729 + C55293 * C14899 + C55428 * C8595 +
             C55292 * C8761) *
                C38609 +
            (C55429 * C14727 + C55293 * C14897 + C55428 * C8592 +
             C55292 * C8758) *
                C38614) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C9304 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C89907) *
              C89827 * C5151 +
          ((((C57421 + C57422) * C186 + (C57423 + C57424) * C89926) * C55292 +
            ((C57425 + C57426) * C186 + (C57427 + C57428) * C89926) * C55293) *
               C89907 -
           (((C57424 + C57423) * C89926 + (C57422 + C57421) * C186) * C55293 +
            ((C38616 * C189 + C38610 * C362 + C38614 * C188 + C38609 * C361) *
                 C89926 +
             (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                 C186) *
                C55292) *
               C9304) *
              C89827 * C5152 +
          ((((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                 C186 +
             (C38614 * C189 + C38609 * C362 + C38616 * C190 + C38610 * C363) *
                 C89926) *
                C55292 +
            ((C59347 + C59348) * C186 + (C59349 + C59350) * C89926) * C55293) *
               C9304 -
           (((C38616 * C1877 + C38610 * C2105 + C38614 * C1875 +
              C38609 * C2103) *
                 C89926 +
             (C38616 * C1767 + C38610 * C1775 + C38614 * C1765 +
              C38609 * C1773) *
                 C186) *
                C55293 +
            ((C59350 + C59349) * C89926 + (C59348 + C59347) * C186) * C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                 C186 +
             (C38614 * C187 + C38609 * C360 + C38616 * C188 + C38610 * C361) *
                 C89926) *
                C55292 +
            ((C57413 + C57414) * C186 + (C57415 + C57416) * C89926) * C55293) *
               C9304 -
           (((C57417 + C57418) * C89926 + (C57419 + C57420) * C186) * C55293 +
            ((C57416 + C57415) * C89926 + (C57414 + C57413) * C186) * C55292) *
               C89907) *
              C822 +
          ((((C43825 + C43824) * C186 + (C43823 + C43822) * C89926) * C55292 +
            ((C46450 + C46451) * C186 + (C46452 + C46453) * C89926) * C55293) *
               C89907 -
           (((C43822 + C43823) * C89926 + (C43824 + C43825) * C186) * C55293 +
            ((C39793 + C39792) * C89926 + (C39791 + C39790) * C186) * C55292) *
               C9304) *
              C823 +
          ((((C39797 + C39796) * C186 + (C39795 + C39794) * C89926) * C55292 +
            ((C49422 + C49423) * C186 + (C49424 + C49425) * C89926) * C55293) *
               C9304 -
           (((C38616 * C14820 + C38610 * C14976 + C38614 * C14819 +
              C38609 * C14975) *
                 C89926 +
             (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
              C38609 * C14729) *
                 C186) *
                C55293 +
            ((C49425 + C49424) * C89926 + (C49423 + C49422) * C186) * C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C9304 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C89907) *
              C89827 * C5151 +
          (((C57531 + C57532) * C55292 + (C57533 + C57534) * C55293) * C89907 -
           ((C57532 + C57531) * C55293 +
            (C447 * C38610 + C446 * C38609) * C55292) *
               C9304) *
              C89827 * C5152 +
          (((C447 * C38609 + C448 * C38610) * C55292 +
            (C59449 + C59450) * C55293) *
               C9304 -
           (((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C38610 +
             C2216 * C38609) *
                C55293 +
            (C59450 + C59449) * C55292) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C38609 +
             C446 * C38610) *
                C55292 +
            (C57527 + C57528) * C55293) *
               C9304 -
           ((C57529 + C57530) * C55293 + (C57528 + C57527) * C55292) * C89907) *
              C822 +
          (((C60541 + C60542) * C55292 + (C63066 + C63067) * C55293) * C89907 -
           ((C60542 + C60541) * C55293 +
            (C1281 * C38610 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C38609) *
                C55292) *
               C9304) *
              C823 +
          ((((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C38609 +
             C1282 * C38610) *
                C55292 +
            (C66010 + C66011) * C55293) *
               C9304 -
           (((C416 * C14728 + C26849 + C26849 + C89926 * C15052) * C38610 +
             C34187 * C38609) *
                C55293 +
            (C66011 + C66010) * C55292) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C9304 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C89907) *
              C89827 * C5151 +
          ((((C57278 + C57277) * C186 + (C57642 + C57641) * C89926) * C38609 +
            ((C59237 + C59238) * C186 + (C59553 + C59554) * C89926) * C38610) *
               C89907 -
           (((C55679 + C55680) * C89926 + (C55461 + C55462) * C186) * C38610 +
            ((C55678 + C55677) * C89926 + (C55456 + C55455) * C186) * C38609) *
               C9304) *
              C89827 * C5152 +
          ((((C55462 + C55461) * C186 + (C55680 + C55679) * C89926) * C38609 +
            ((C55463 + C55464) * C186 + (C55681 + C55682) * C89926) * C38610) *
               C9304 -
           (((C55429 * C1877 + C55293 * C2297 + C55428 * C1876 +
              C55292 * C2296) *
                 C89926 +
             (C55429 * C1767 + C55293 * C1991 + C55428 * C1766 +
              C55292 * C1990) *
                 C186) *
                C38610 +
            ((C59554 + C59553) * C89926 + (C59238 + C59237) * C186) * C38609) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C55428 * C106 + C55292 * C274 + C55429 * C1762 + C55293 * C1986) *
                 C186 +
             (C55428 * C187 + C55292 * C499 + C55429 * C1872 + C55293 * C2292) *
                 C89926) *
                C38609 +
            ((C55455 + C55456) * C186 + (C55677 + C55678) * C89926) * C38610) *
               C9304 -
           (((C57641 + C57642) * C89926 + (C57277 + C57278) * C186) * C38610 +
            ((C55429 * C1873 + C55293 * C2293 + C55428 * C1872 +
              C55292 * C2292) *
                 C89926 +
             (C55429 * C1763 + C55293 * C1987 + C55428 * C1762 +
              C55292 * C1986) *
                 C186) *
                C38609) *
               C89907) *
              C822 +
          ((((C55428 * C4159 + C55292 * C4393 + C55429 * C6325 +
              C55293 * C6491) *
                 C186 +
             (C55428 * C4275 + C55292 * C4729 + C55429 * C6411 +
              C55293 * C6728) *
                 C89926) *
                C38609 +
            ((C60277 + C60278) * C186 + (C60679 + C60680) * C89926) * C38610) *
               C89907 -
           (((C56566 + C56567) * C89926 + (C56253 + C56254) * C186) * C38610 +
            ((C55429 * C4275 + C55293 * C4729 + C55428 * C939 +
              C55292 * C1359) *
                 C89926 +
             (C55429 * C4159 + C55293 * C4393 + C55428 * C829 +
              C55292 * C1053) *
                 C186) *
                C38609) *
               C9304) *
              C823 +
          ((((C55428 * C830 + C55292 * C1054 + C55429 * C8592 +
              C55293 * C8758) *
                 C186 +
             (C55428 * C940 + C55292 * C1360 + C55429 * C8678 +
              C55293 * C8995) *
                 C89926) *
                C38609 +
            ((C56255 + C56256) * C186 + (C56568 + C56569) * C89926) * C38610) *
               C9304 -
           (((C55429 * C14820 + C55293 * C15140 + C55428 * C8677 +
              C55292 * C8994) *
                 C89926 +
             (C55429 * C14728 + C55293 * C14898 + C55428 * C8591 +
              C55292 * C8757) *
                 C186) *
                C38610 +
            ((C55429 * C14819 + C55293 * C15139 + C55428 * C8678 +
              C55292 * C8995) *
                 C89926 +
             (C55429 * C14727 + C55293 * C14897 + C55428 * C8592 +
              C55292 * C8758) *
                 C186) *
                C38609) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C9304 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C89907) *
              C89827 * C5151 +
          (((C57421 + C57422) * C55428 + (C57763 + C57764) * C55292 +
            (C57425 + C57426) * C55429 + (C57765 + C57766) * C55293) *
               C89926 * C89907 -
           ((C57764 + C57763) * C55293 + (C57422 + C57421) * C55429 +
            (C38616 * C276 + C38610 * C579 + C38614 * C275 + C38609 * C578) *
                C55292 +
            (C38616 * C108 + C38610 * C114 + C38614 * C107 + C38609 * C113) *
                C55428) *
               C89926 * C9304) *
              C89827 * C5152 +
          (((C38614 * C108 + C38609 * C114 + C38616 * C109 + C38610 * C115) *
                C55428 +
            (C38614 * C276 + C38609 * C579 + C38616 * C277 + C38610 * C580) *
                C55292 +
            (C59347 + C59348) * C55429 + (C59657 + C59658) * C55293) *
               C89926 * C9304 -
           ((C38616 * C1991 + C38610 * C2399 + C38614 * C1989 +
             C38609 * C2397) *
                C55293 +
            (C38616 * C1767 + C38610 * C1775 + C38614 * C1765 +
             C38609 * C1773) *
                C55429 +
            (C59658 + C59657) * C55292 + (C59348 + C59347) * C55428) *
               C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C38614 * C106 + C38609 * C112 + C38616 * C107 + C38610 * C113) *
                C55428 +
            (C38614 * C274 + C38609 * C577 + C38616 * C275 + C38610 * C578) *
                C55292 +
            (C57413 + C57414) * C55429 + (C57759 + C57760) * C55293) *
               C89926 * C9304 -
           ((C57761 + C57762) * C55293 + (C57419 + C57420) * C55429 +
            (C57760 + C57759) * C55292 + (C57414 + C57413) * C55428) *
               C89926 * C89907) *
              C822 +
          (((C43825 + C43824) * C55428 + (C44249 + C44248) * C55292 +
            (C46450 + C46451) * C55429 + (C46756 + C46757) * C55293) *
               C89926 * C89907 -
           ((C44248 + C44249) * C55293 + (C43824 + C43825) * C55429 +
            (C40157 + C40156) * C55292 + (C39791 + C39790) * C55428) *
               C89926 * C9304) *
              C823 +
          (((C39797 + C39796) * C55428 + (C40159 + C40158) * C55292 +
            (C49422 + C49423) * C55429 + (C49728 + C49729) * C55293) *
               C89926 * C9304 -
           ((C38616 * C14898 + C38610 * C15216 + C38614 * C14897 +
             C38609 * C15215) *
                C55293 +
            (C38616 * C14728 + C38610 * C14730 + C38614 * C14727 +
             C38609 * C14729) *
                C55429 +
            (C49729 + C49728) * C55292 + (C49423 + C49422) * C55428) *
               C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezy[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C9304 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C89907) *
                        C89827 * C5151 +
                    (((C57868 + C57867 + C57866 + C57865) * C38609 +
                      (C59757 + C59758 + C59759 + C59760) * C38610) *
                         C89907 -
                     ((C55819 + C55820 + C55821 + C55822) * C38610 +
                      (C55818 + C55817 + C55816 + C55815) * C38609) *
                         C9304) *
                        C89827 * C5152 +
                    (((C55822 + C55821 + C55820 + C55819) * C38609 +
                      (C55823 + C55824 + C55825 + C55826) * C38610) *
                         C9304 -
                     (((C186 * C1991 + C89926 * C2481) * C55293 +
                       (C186 * C1767 + C89926 * C1877) * C55429 +
                       C3978 * C55292 + C3503 * C55428) *
                          C38610 +
                      (C59760 + C59759 + C59758 + C59757) * C38609) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C55428 +
                       (C186 * C274 + C89926 * C633) * C55292 +
                       C27369 * C55429 + C27949 * C55293) *
                          C38609 +
                      (C55815 + C55816 + C55817 + C55818) * C38610) *
                         C9304 -
                     ((C57865 + C57866 + C57867 + C57868) * C38610 +
                      (C27950 * C55293 + C27371 * C55429 + C27949 * C55292 +
                       C27369 * C55428) *
                          C38609) *
                         C89907) *
                        C822 +
                    (((C29640 * C55428 + C30291 * C55292 + C29642 * C55429 +
                       C30292 * C55293) *
                          C38609 +
                      (C60941 + C60942 + C60943 + C60944) * C38610) *
                         C89907 -
                     ((C56766 + C56767 + C56768 + C56769) * C38610 +
                      (C30291 * C55293 + C29640 * C55429 +
                       (C186 * C1053 + C89926 * C1543) * C55292 +
                       (C186 * C829 + C89926 * C939) * C55428) *
                          C38609) *
                         C9304) *
                        C823 +
                    ((((C186 * C830 + C89926 * C940) * C55428 +
                       (C186 * C1054 + C89926 * C1544) * C55292 +
                       C33943 * C55429 + C34416 * C55293) *
                          C38609 +
                      (C56770 + C56771 + C56772 + C56776) * C38610) *
                         C9304 -
                     (((C186 * C14898 + C89926 * C15292) * C55293 +
                       (C186 * C14728 + C89926 * C14820) * C55429 +
                       C56775 * C55292 + C56135 * C55428) *
                          C38610 +
                      (C34417 * C55293 + C33945 * C55429 + C34416 * C55292 +
                       C33943 * C55428) *
                          C38609) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C9304 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C89907) *
                        C89827 * C5151 +
                    (((C58000 + C57999) * C89926 * C38609 +
                      (C59869 + C59870) * C89926 * C38610) *
                         C89907 -
                     ((C55931 + C55932) * C89926 * C38610 +
                      (C55930 + C55929) * C89926 * C38609) *
                         C9304) *
                        C89827 * C5152 +
                    (((C55932 + C55931) * C89926 * C38609 +
                      (C55933 + C55934) * C89926 * C38610) *
                         C9304 -
                     ((C55893 * C1767 + C59863 + C59863 + C55293 * C2583 +
                       C55892 * C1766 + C59864 + C59864 + C55292 * C2582) *
                          C89926 * C38610 +
                      (C59870 + C59869) * C89926 * C38609) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C55892 * C106 + C55895 + C55895 + C55292 * C712 +
                       C55893 * C1762 + C55896 + C55896 + C55293 * C2578) *
                          C89926 * C38609 +
                      (C55929 + C55930) * C89926 * C38610) *
                         C9304 -
                     ((C57999 + C58000) * C89926 * C38610 +
                      (C55893 * C1763 + C57977 + C57977 + C55293 * C2579 +
                       C55892 * C1762 + C57978 + C57978 + C55292 * C2578) *
                          C89926 * C38609) *
                         C89907) *
                        C822 +
                    (((C55892 * C4159 + C61075 + C61075 + C55292 * C5055 +
                       C55893 * C6325 + C61076 + C61076 + C55293 * C6959) *
                          C89926 * C38609 +
                      (C61089 + C61090) * C89926 * C38610) *
                         C89907 -
                     ((C56903 + C56904) * C89926 * C38610 +
                      (C55893 * C4159 + C56881 + C56881 + C55293 * C5055 +
                       C55892 * C829 + C56882 + C56882 + C55292 * C1645) *
                          C89926 * C38609) *
                         C9304) *
                        C823 +
                    (((C55892 * C830 + C56883 + C56883 + C55292 * C1646 +
                       C55893 * C8592 + C56884 + C56884 + C55293 * C9226) *
                          C89926 * C38609 +
                      (C56905 + C56906) * C89926 * C38610) *
                         C9304 -
                     ((C55893 * C14728 + C66404 + C66404 + C55293 * C15368 +
                       C55892 * C8591 + C66405 + C66405 + C55292 * C9225) *
                          C89926 * C38610 +
                      (C55893 * C14727 + C66406 + C66406 + C55293 * C15367 +
                       C55892 * C8592 + C66407 + C66407 + C55292 * C9226) *
                          C89926 * C38609) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexx[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C89998 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C89879) *
              C90022 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C89879 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C89998) *
              C90023 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C89843 * C89998 -
           (C104 * C2695 + C2699 + C2699 + C91 * C2697 + C102 * C833 + C2700 +
            C2700 + C90 * C849 + C100 * C827 + C2701 + C2701 + C89 * C843) *
               C89937 * C89926 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C89998 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C89879) *
              C90022 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C89879 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C89998) *
              C90023 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89843 * C89998 -
           ((C13337 * C5801 + C15450 + C15450 + C89783 * C5807) * C89937 *
                C13336 +
            C15458 * C13335 + C15457 * C13334) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexy[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C89998 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C89879) *
                        C90022 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      C2782 * C105 + C2783 * C91) *
                         C89937 * C89843 * C89879 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C89998) *
                        C90023 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C89843 * C89998 -
                     ((C186 * C2696 + C89926 * C2776) * C91 +
                      (C186 * C2695 + C89926 * C2775) * C105 + C2783 * C90 +
                      C2782 * C103 + C970 * C89 + C971 * C101) *
                         C89937 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C89998 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C90022 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C89879 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C89998) *
                        C90023 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89843 * C89998 -
                     ((C13403 * C5804 + C13336 * C5866 + C13402 * C840 +
                       C13335 * C950 + C13401 * C835 + C13334 * C945) *
                          C89783 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C89998 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C89879) *
                        C90022 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      C2864 * C105 + C2865 * C91) *
                         C89926 * C89843 * C89879 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C89998) *
                        C90023 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C89843 * C89998 -
                     ((C273 * C2696 + C89937 * C2858) * C91 +
                      (C273 * C2695 + C89937 * C2857) * C105 + C2865 * C90 +
                      C2864 * C103 + C1084 * C89 + C1085 * C101) *
                         C89926 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C89998 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C89879) *
                        C90022 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C89879 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C89998) *
                        C90023 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89843 * C89998 -
                     (((C273 * C5804 + C89937 * C5922) * C89783 +
                       (C273 * C5801 + C89937 * C5919) * C13338) *
                          C13336 +
                      (C15610 + C15609) * C13335 + (C15608 + C15607) * C13334) *
                         C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C89998 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C89879) *
              C90022 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C89879 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C89998) *
              C90023 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C89843 * C89998 -
           ((C105 * C2775 + C91 * C2939 + C103 * C943 + C90 * C1171 +
             C101 * C937 + C89 * C1165) *
                C89926 +
            (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
             C101 * C827 + C89 * C835) *
                C186) *
               C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C89998 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C89879) *
              C90022 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C89879 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C89998) *
              C90023 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89843 * C89998 -
           ((C13338 * C5863 + C89783 * C5975) * C13336 +
            (C13338 * C5801 + C89783 * C5804) * C13403 + C15696 * C13335 +
            C15695 * C13402 + C15694 * C13334 + C15693 * C13401) *
               C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C89998 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C89879) *
              C90022 +
          ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
               C89879 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C89998) *
              C90023 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C89998 -
           ((C416 * C2695 + C3018 + C3018 + C89926 * C3014) * C91 +
            C3021 * C90 + C1280 * C89) *
               C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C89998 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C89879) *
              C90022 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C89879 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C89998) *
              C90023 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89843 * C89998 -
           (C13556 * C5801 + C15771 + C15771 + C13336 * C6028 + C13555 * C832 +
            C15772 + C15772 + C13335 * C1252 + C13554 * C827 + C15773 + C15773 +
            C13334 * C1247) *
               C89783 * C89937 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C89998 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C89879) *
              C90022 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            (C3098 + C3102) * C91) *
               C89843 * C89879 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C89998) *
              C90023 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
               C89998 -
           (((C273 * C2775 + C89937 * C3095) * C89926 +
             (C273 * C2695 + C89937 * C2857) * C186) *
                C91 +
            (C3102 + C3098) * C90 + C3097 * C89) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C89998 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C89879) *
              C90022 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C89879 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C89998) *
              C90023 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89843 * C89998 -
           ((C273 * C5863 + C89937 * C6084) * C13336 +
            (C273 * C5801 + C89937 * C5919) * C13403 + C1381 * C13335 +
            C1090 * C13402 + C1378 * C13334 + C1085 * C13401) *
               C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezx[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89843 * C89998 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C89843 * C89879) *
                        C90022 +
                    (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                       C105 * C833 + C91 * C841) *
                          C273 +
                      (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                       C105 * C1057 + C91 * C1465) *
                          C89937) *
                         C89926 * C89843 * C89879 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C89843 * C89998) *
                        C90023 +
                    (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                       C105 * C110 + C91 * C116) *
                          C273 +
                      (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                       C105 * C278 + C91 * C581) *
                          C89937) *
                         C89926 * C89843 * C89998 -
                     ((C105 * C2857 + C91 * C3176 + C103 * C1057 + C90 * C1465 +
                       C101 * C1051 + C89 * C1459) *
                          C89937 +
                      (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
                       C101 * C827 + C89 * C835) *
                          C273) *
                         C89926 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89843 * C89998 -
                     ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C89843 * C89879) *
                        C90022 +
                    (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
                      (C14463 + C14477) * C13336) *
                         C89843 * C89879 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C89843 * C89998) *
                        C90023 +
                    ((((C13338 * C108 + C89783 * C114) * C273 +
                       (C13338 * C276 + C89783 * C579) * C89937) *
                          C13334 +
                      (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
                         C89843 * C89998 -
                     (((C13338 * C5919 + C89783 * C6137) * C89937 +
                       (C13338 * C5801 + C89783 * C5804) * C273) *
                          C13336 +
                      (C15931 + C15925) * C13335 + (C15930 + C15922) * C13334) *
                         C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C89843 * C89998 -
                     (C3253 * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C89843 * C89879) *
                        C90022 +
                    (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
                      (C3254 + C3258) * C91) *
                         C89843 * C89879 -
                     (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                         C89843 * C89998) *
                        C90023 +
                    ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) *
                         C89843 * C89998 -
                     (((C186 * C2857 + C89926 * C3251) * C89937 +
                       (C186 * C2695 + C89926 * C2775) * C273) *
                          C91 +
                      (C3258 + C3254) * C90 + C3253 * C89) *
                         C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C89843 * C89998 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C89843 * C89879) *
                        C90022 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C273 +
                      (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
                       C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                          C89937) *
                         C89783 * C89843 * C89879 -
                     ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
                       C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                          C89937 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C273) *
                         C89783 * C89843 * C89998) *
                        C90023 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C273 +
                      (C13401 * C276 + C13334 * C635 + C13402 * C1051 +
                       C13335 * C1541 + C13403 * C1056 + C13336 * C1546) *
                          C89937) *
                         C89783 * C89843 * C89998 -
                     ((C13403 * C5919 + C13336 * C6190 + C13402 * C1056 +
                       C13335 * C1546 + C13401 * C1051 + C13334 * C1541) *
                          C89937 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C273) *
                         C89783 * C89843 * C89879) *
                        C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C89998 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C89879) *
              C90022 +
          ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C89879 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C89998) *
              C90023 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C89998 -
           ((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C89926 * C91 +
            C3340 * C90 + C1680 * C89) *
               C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C89998 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C89879) *
              C90022 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C89879 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C89998) *
              C90023 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
               C89998 -
           ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C13336 +
            C1679 * C13335 + C1676 * C13334) *
               C89783 * C89843 * C89879) *
              C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexx[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
             C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                C89937 * C89926 * C89999 -
            (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
             C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
                C89937 * C89926 * C89907) *
               C89998 +
           ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
             C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
                C89937 * C89926 * C89907 -
            (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
             C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                C89937 * C89926 * C89999) *
               C89879) *
              C825 +
          (((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
             C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
                C89937 * C89926 * C89907 -
            (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
             C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                C89937 * C89926 * C89999) *
               C89998 +
           ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
             C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                C89937 * C89926 * C89999 -
            (C104 * C4162 + C4175 + C4175 + C91 * C4170 + C102 * C4161 + C4176 +
             C4176 + C90 * C4169 + C100 * C4160 + C4177 + C4177 + C89 * C4168) *
                C89937 * C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                 C13334 +
             C13884 * C13335 + C13885 * C13336) *
                C89999 -
            (C16878 * C13336 + C16879 * C13335 +
             (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                 C13334) *
                C89907) *
               C89998 +
           ((C16879 * C13334 + C16878 * C13335 +
             (C13337 * C16849 + C16860 + C16860 + C89783 * C16853) * C89937 *
                 C13336) *
                C89907 -
            (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89999) *
               C89879) *
              C825 +
          ((((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                 C13334 +
             C16880 * C13335 + C16881 * C13336) *
                C89907 -
            (C13888 * C13336 + C13887 * C13335 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                 C13334) *
                C89999) *
               C89998 +
           ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89999 -
            ((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C89937 *
                 C13336 +
             C16881 * C13335 + C16880 * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C101 +
                       (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                       C217 * C90 + C218 * C105 + C219 * C91) *
                          C89937 * C89999 -
                      (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                       (C186 * C1770 + C89926 * C1880) * C89 +
                       (C186 * C1762 + C89926 * C1872) * C101) *
                          C89937 * C89907) *
                         C89998 +
                     (((C186 * C4159 + C89926 * C4275) * C101 +
                       (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                       C4293 * C90 + C4294 * C105 + C4295 * C91) *
                          C89937 * C89907 -
                      (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                       (C186 * C837 + C89926 * C947) * C89 +
                       (C186 * C829 + C89926 * C939) * C101) *
                          C89937 * C89999) *
                         C89879) *
                        C825 +
                    (((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                       C3503 * C105 + C3504 * C91) *
                          C89937 * C89907 -
                      (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                       C217 * C89 + C216 * C101) *
                          C89937 * C89999) *
                         C89998 +
                     ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                       C2782 * C105 + C2783 * C91) *
                          C89937 * C89999 -
                      ((C186 * C4166 + C89926 * C4282) * C91 +
                       (C186 * C4162 + C89926 * C4278) * C105 + C4295 * C90 +
                       C4294 * C103 + C4293 * C89 + C4292 * C101) *
                          C89937 * C89907) *
                         C89879) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                        C13335 * C939 + C13403 * C830 + C13336 * C940) *
                           C13338 +
                       (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                        C13335 * C947 + C13403 * C838 + C13336 * C948) *
                           C89783) *
                          C89937 * C89999 -
                      ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                        C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                           C89783 +
                       (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                        C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                           C13338) *
                          C89937 * C89907) *
                         C89998 +
                     (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                        C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                           C13338 +
                       (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                        C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                           C89783) *
                          C89937 * C89907 -
                      ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                        C13335 * C948 + C13401 * C837 + C13334 * C947) *
                           C89783 +
                       (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                        C13335 * C940 + C13401 * C829 + C13334 * C939) *
                           C13338) *
                          C89937 * C89999) *
                         C89879) *
                        C825 +
                    ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                        C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                           C13338 +
                       (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                        C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                           C89783) *
                          C89937 * C89907 -
                      ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                        C13335 * C946 + C13401 * C113 + C13334 * C194) *
                           C89783 +
                       (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                        C13335 * C938 + C13401 * C107 + C13334 * C188) *
                           C13338) *
                          C89937 * C89999) *
                         C89998 +
                     (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                        C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                           C13338 +
                       (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                        C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                           C89783) *
                          C89937 * C89999 -
                      ((C13403 * C16852 + C13336 * C16982 + C13402 * C8594 +
                        C13335 * C8680 + C13401 * C4164 + C13334 * C4280) *
                           C89783 +
                       (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
                        C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                           C13338) *
                          C89937 * C89907) *
                         C89879) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C101 +
             (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
             C305 * C105 + C306 * C91) *
                C89926 * C89999 -
            (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
             (C273 * C1770 + C89937 * C1994) * C89 +
             (C273 * C1762 + C89937 * C1986) * C101) *
                C89926 * C89907) *
               C89998 +
           (((C273 * C4159 + C89937 * C4393) * C101 +
             (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
             C4411 * C90 + C4412 * C105 + C4413 * C91) *
                C89926 * C89907 -
            (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
             (C273 * C837 + C89937 * C1061) * C89 +
             (C273 * C829 + C89937 * C1053) * C101) *
                C89926 * C89999) *
               C89879) *
              C825 +
          (((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
             C3585 * C105 + C3586 * C91) *
                C89926 * C89907 -
            (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 + C304 * C89 +
             C303 * C101) *
                C89926 * C89999) *
               C89998 +
           ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
             C2864 * C105 + C2865 * C91) *
                C89926 * C89999 -
            ((C273 * C4166 + C89937 * C4400) * C91 +
             (C273 * C4162 + C89937 * C4396) * C105 + C4413 * C90 +
             C4412 * C103 + C4411 * C89 + C4410 * C101) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C13338 +
              (C273 * C112 + C89937 * C280) * C89783) *
                 C13334 +
             (C14075 + C14076) * C13335 + C14083 * C13336) *
                C89999 -
            ((C17106 + C17107) * C13336 + (C17108 + C17109) * C13335 +
             ((C273 * C1770 + C89937 * C1994) * C89783 +
              (C273 * C1762 + C89937 * C1986) * C13338) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
             ((C273 * C16849 + C89937 * C17081) * C13338 +
              (C273 * C16851 + C89937 * C17083) * C89783) *
                 C13336) *
                C89907 -
            ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
             (C14076 + C14075) * C13334) *
                C89999) *
               C89879) *
              C825 +
          ((((C2020 * C13338 + C2019 * C89783) * C13334 +
             (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                C89907 -
            (C14074 * C13336 + (C14059 + C14058) * C13335 +
             (C304 * C89783 + C303 * C13338) * C13334) *
                C89999) *
               C89998 +
           (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
             (C14081 + C14082) * C13336) *
                C89999 -
            (((C273 * C16852 + C89937 * C17084) * C89783 +
              (C273 * C16850 + C89937 * C17082) * C13338) *
                 C13336 +
             (C17111 + C17110) * C13335 + (C17095 + C17094) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C186 +
             (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
              C105 * C189 + C91 * C362) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
              C101 * C1872 + C89 * C2100) *
                 C89926 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C186) *
                C89937 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C186 +
             (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
              C105 * C4277 + C91 * C4513) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
              C101 * C939 + C89 * C1167) *
                 C89926 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C186) *
                C89937 * C89999) *
               C89879) *
              C825 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C186 +
             (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
              C105 * C1876 + C91 * C2104) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
              C101 * C188 + C89 * C361) *
                 C89926 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C186) *
                C89937 * C89999) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C186 +
             (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
              C105 * C943 + C91 * C1171) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C4278 + C91 * C4514 + C103 * C4277 + C90 * C4513 +
              C101 * C4276 + C89 * C4512) *
                 C89926 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C186) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C13401 +
             (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
             C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
                C89937 * C89999 -
            (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
             C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
             (C13338 * C1762 + C89783 * C1770) * C13401) *
                C89937 * C89907) *
               C89998 +
           ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
             C17228 * C13335 + (C13338 * C16849 + C89783 * C16851) * C13403 +
             (C13338 * C16979 + C89783 * C17209) * C13336) *
                C89937 * C89907 -
            (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
             C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
                C89937 * C89999) *
               C89879) *
              C825 +
          ((((C13338 * C1761 + C89783 * C1769) * C13401 +
             (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
             C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
                C89937 * C89907 -
            (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
             C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
             (C13338 * C107 + C89783 * C113) * C13401) *
                C89937 * C89999) *
               C89998 +
           ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
             C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
                C89937 * C89999 -
            ((C13338 * C16980 + C89783 * C17210) * C13336 +
             (C13338 * C16850 + C89783 * C16852) * C13403 + C17235 * C13335 +
             C17234 * C13402 + C17233 * C13334 + C17232 * C13401) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
             C447 * C91) *
                C89937 * C89999 -
            (C2213 * C91 + C2214 * C90 +
             (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                C89937 * C89907) *
               C89998 +
           (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
             C4630 * C90 + C4631 * C91) *
                C89937 * C89907 -
            (C1280 * C91 + C1281 * C90 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                C89937 * C89999) *
               C89879) *
              C825 +
          (((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
            (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89999) *
               C89998 +
           ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89999 -
            ((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C91 +
             C4631 * C90 + C4630 * C89) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
             C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 +
             C13560 + C13336 * C1250) *
                C89783 * C89937 * C89999 -
            (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
             C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
             C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                C89783 * C89937 * C89907) *
               C89998 +
           ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
             C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
             C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                C89783 * C89937 * C89907 -
            (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
             C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 +
             C14274 + C13334 * C1249) *
                C89783 * C89937 * C89999) *
               C89879) *
              C825 +
          (((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 +
             C13555 * C4160 + C15061 + C15061 + C13335 * C4614 +
             C13556 * C8591 + C15062 + C15062 + C13336 * C8914) *
                C89783 * C89937 * C89907 -
            (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
             C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 +
             C13563 + C13334 * C418) *
                C89783 * C89937 * C89999) *
               C89998 +
           ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
             C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
             C14280 + C13336 * C6029) *
                C89783 * C89937 * C89999 -
            (C13556 * C16850 + C17339 + C17339 + C13336 * C17334 +
             C13555 * C8591 + C17340 + C17340 + C13335 * C8914 +
             C13554 * C4160 + C17341 + C17341 + C13334 * C4614) *
                C89783 * C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C186 +
              (C273 * C187 + C89937 * C499) * C89926) *
                 C89 +
             (C506 + C522) * C90 + C526 * C91) *
                C89999 -
            (C3818 * C91 + (C2316 + C2304) * C90 +
             ((C273 * C1872 + C89937 * C2292) * C89926 +
              (C273 * C1762 + C89937 * C1986) * C186) *
                 C89) *
                C89907) *
               C89998 +
           ((((C273 * C4159 + C89937 * C4393) * C186 +
              (C273 * C4275 + C89937 * C4729) * C89926) *
                 C89 +
             (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
                C89907 -
            (C3097 * C91 + (C1383 + C1371) * C90 +
             ((C273 * C939 + C89937 * C1359) * C89926 +
              (C273 * C829 + C89937 * C1053) * C186) *
                 C89) *
                C89999) *
               C89879) *
              C825 +
          ((((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
             (C3819 + C3823) * C91) *
                C89907 -
            (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89999) *
               C89998 +
           (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
             (C3098 + C3102) * C91) *
                C89999 -
            (((C273 * C4278 + C89937 * C4732) * C89926 +
              (C273 * C4162 + C89937 * C4396) * C186) *
                 C91 +
             (C4743 + C4737) * C90 + (C4742 + C4734) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C13401 +
             (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
             C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
                C89783 * C89999 -
            (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
             C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
             (C273 * C1762 + C89937 * C1986) * C13401) *
                C89783 * C89907) *
               C89998 +
           ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
             C17448 * C13335 + (C273 * C16849 + C89937 * C17081) * C13403 +
             (C273 * C16979 + C89937 * C17439) * C13336) *
                C89783 * C89907 -
            (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
             C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
                C89783 * C89999) *
               C89879) *
              C825 +
          (((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
             C17104 * C13403 + C17450 * C13336) *
                C89783 * C89907 -
            (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
             C518 * C13334 + C303 * C13401) *
                C89783 * C89999) *
               C89998 +
           ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
             C14072 * C13403 + C14371 * C13336) *
                C89783 * C89999 -
            ((C273 * C16980 + C89937 * C17440) * C13336 +
             (C273 * C16850 + C89937 * C17082) * C13403 + C17450 * C13335 +
             C17104 * C13402 + C4740 * C13334 + C4410 * C13401) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C273 +
             (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
              C105 * C276 + C91 * C579) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
              C101 * C1986 + C89 * C2394) *
                 C89937 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C273) *
                C89926 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C273 +
             (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
              C105 * C4395 + C91 * C4843) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
              C101 * C1053 + C89 * C1461) *
                 C89937 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C273) *
                C89926 * C89999) *
               C89879) *
              C825 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C273 +
             (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
              C105 * C1990 + C91 * C2398) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
              C101 * C275 + C89 * C578) *
                 C89937 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C273) *
                C89926 * C89999) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C273 +
             (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
              C105 * C1057 + C91 * C1465) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C4396 + C91 * C4844 + C103 * C4395 + C90 * C4843 +
              C101 * C4394 + C89 * C4842) *
                 C89937 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C273) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C273 +
              (C13338 * C274 + C89783 * C577) * C89937) *
                 C13334 +
             (C14448 + C14472) * C13335 + C14478 * C13336) *
                C89999 -
            ((C17567 + C17553) * C13336 + (C17568 + C17556) * C13335 +
             ((C13338 * C1986 + C89783 * C2394) * C89937 +
              (C13338 * C1762 + C89783 * C1770) * C273) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
             ((C13338 * C16849 + C89783 * C16851) * C273 +
              (C13338 * C17081 + C89783 * C17548) * C89937) *
                 C13336) *
                C89907 -
            ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
             (C14472 + C14448) * C13334) *
                C89999) *
               C89879) *
              C825 +
          (((((C13338 * C1761 + C89783 * C1769) * C273 +
              (C13338 * C1985 + C89783 * C2393) * C89937) *
                 C13334 +
             (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                C89907 -
            (C14479 * C13336 + (C14475 + C14457) * C13335 +
             ((C13338 * C275 + C89783 * C578) * C89937 +
              (C13338 * C107 + C89783 * C113) * C273) *
                 C13334) *
                C89999) *
               C89998 +
           (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
             (C14463 + C14477) * C13336) *
                C89999 -
            (((C13338 * C17082 + C89783 * C17549) * C89937 +
              (C13338 * C16850 + C89783 * C16852) * C273) *
                 C13336 +
             (C17570 + C17560) * C13335 + (C17569 + C17557) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C273 +
              (C186 * C274 + C89926 * C633) * C89937) *
                 C89 +
             (C640 + C656) * C90 + C660 * C91) *
                C89999 -
            (C3974 * C91 + (C2500 + C2488) * C90 +
             ((C186 * C1986 + C89926 * C2476) * C89937 +
              (C186 * C1762 + C89926 * C1872) * C273) *
                 C89) *
                C89907) *
               C89998 +
           ((((C186 * C4159 + C89926 * C4275) * C273 +
              (C186 * C4393 + C89926 * C4943) * C89937) *
                 C89 +
             (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                C89907 -
            (C3253 * C91 + (C1567 + C1555) * C90 +
             ((C186 * C1053 + C89926 * C1543) * C89937 +
              (C186 * C829 + C89926 * C939) * C273) *
                 C89) *
                C89999) *
               C89879) *
              C825 +
          ((((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
             (C3975 + C3979) * C91) *
                C89907 -
            (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89999) *
               C89998 +
           (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
             (C3254 + C3258) * C91) *
                C89999 -
            (((C186 * C4396 + C89926 * C4946) * C89937 +
              (C186 * C4162 + C89926 * C4278) * C273) *
                 C91 +
             (C4957 + C4951) * C90 + (C4956 + C4948) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C273 +
             (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
              C13403 * C1054 + C13336 * C1544) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
              C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                 C89937 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C273) *
                C89783 * C89907) *
               C89998 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C273 +
             (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
              C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
              C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                 C89937 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C273) *
                C89783 * C89999) *
               C89879) *
              C825 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C273 +
             (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 +
              C13335 * C4944 + C13403 * C8757 + C13336 * C9148) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
              C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                 C89937 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C273) *
                C89783 * C89999) *
               C89998 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C273 +
             (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
              C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C17082 + C13336 * C17669 + C13402 * C8757 +
              C13335 * C9148 + C13401 * C4394 + C13334 * C4944) *
                 C89937 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C273) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
             C745 * C90 + C746 * C91) *
                C89999 -
            (C2613 * C91 + C2614 * C90 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
                C89907) *
               C89998 +
           (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
             C5074 * C90 + C5075 * C91) *
                C89907 -
            (C1680 * C91 + C1681 * C90 +
             (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                C89999) *
               C89879) *
              C825 +
          (((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
            (C747 * C91 + C746 * C90 + C745 * C89) * C89999) *
               C89998 +
           ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89999 -
            ((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C89926 * C91 +
             C5075 * C90 + C5074 * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
             C14650 * C13335 + C14651 * C13336) *
                C89783 * C89999 -
            (C17785 * C13336 + C17786 * C13335 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
                C89783 * C89907) *
               C89998 +
           ((C17786 * C13334 + C17785 * C13335 +
             (C711 * C16849 + C17775 + C17775 + C89937 * C17768) * C13336) *
                C89783 * C89907 -
            (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
                C89999) *
               C89879) *
              C825 +
          (((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
                C89907 -
            (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
                C89999) *
               C89998 +
           ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
                C89999 -
            ((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C13336 +
             C17787 * C13335 + C5072 * C13334) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C822 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C823 +
           (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C89843 * C824) *
              C825 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C823 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C822 -
           (C104 * C834 + C861 + C861 + C91 * C850 + C102 * C832 + C862 + C862 +
            C90 * C848 + C100 * C831 + C863 + C863 + C89 * C847) *
               C89937 * C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C89843 * C89827 * C96 -
          (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
           C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
              C89937 * C89926 * C89843 * C89827 * C97 +
          (C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
           C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
              C89937 * C89926 * C89843 * C89827 * C98 -
          (C104 * C111 + C134 + C134 + C91 * C123 + C102 * C110 + C135 + C135 +
           C90 * C122 + C100 * C109 + C136 + C136 + C89 * C121) *
              C89937 * C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C1757 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C1758 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C1759) *
              C89827 * C825 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C1758 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C1757 -
           (C104 * C1767 + C1794 + C1794 + C91 * C1783 + C102 * C1765 + C1795 +
            C1795 + C90 * C1781 + C100 * C1764 + C1796 + C1796 + C89 * C1780) *
               C89937 * C89926 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           (C13337 * C829 + C13341 + C13341 + C89783 * C845) * C89937 * C13335 +
           (C13337 * C830 + C13342 + C13342 + C89783 * C846) * C89937 *
               C13336) *
              C89843 * C89827 * C96 -
          ((C13337 * C831 + C13343 + C13343 + C89783 * C847) * C89937 * C13336 +
           (C13337 * C828 + C13344 + C13344 + C89783 * C844) * C89937 * C13335 +
           (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
               C13334) *
              C89843 * C89827 * C97 +
          ((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 * C13334 +
           (C13337 * C827 + C13347 + C13347 + C89783 * C843) * C89937 * C13335 +
           (C13337 * C832 + C13348 + C13348 + C89783 * C848) * C89937 *
               C13336) *
              C89843 * C89827 * C98 -
          ((C13337 * C834 + C13349 + C13349 + C89783 * C850) * C89937 * C13336 +
           (C13337 * C833 + C13350 + C13350 + C89783 * C849) * C89937 * C13335 +
           (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C89937 *
               C13334) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C822 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C823 +
           (C13885 * C13334 + C13886 * C13335 +
            (C13337 * C13843 + C13857 + C13857 + C89783 * C13847) * C89937 *
                C13336) *
               C89843 * C824) *
              C825 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C823 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C822 -
           ((C13337 * C13844 + C13865 + C13865 + C89783 * C13848) * C89937 *
                C13336 +
            C13889 * C13335 + C13888 * C13334) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C1757 -
           ((C13337 * C8592 + C14734 + C14734 + C89783 * C8598) * C89937 *
                C13336 +
            (C13337 * C4159 + C14735 + C14735 + C89783 * C4167) * C89937 *
                C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C1758 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            (C13337 * C6325 + C14738 + C14738 + C89783 * C6331) * C89937 *
                C13335 +
            (C13337 * C14727 + C14739 + C14739 + C89783 * C14731) * C89937 *
                C13336) *
               C1759) *
              C89827 * C825 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            (C13337 * C4160 + C14741 + C14741 + C89783 * C4168) * C89937 *
                C13335 +
            (C13337 * C8591 + C14742 + C14742 + C89783 * C8597) * C89937 *
                C13336) *
               C1758 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C1757 -
           ((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C89937 *
                C13336 +
            (C13337 * C6324 + C14744 + C14744 + C89783 * C6330) * C89937 *
                C13335 +
            (C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C89937 *
                C13334) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[62] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C822 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C823 +
                     ((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C89843 * C824) *
                        C825 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      (C186 * C833 + C89926 * C943) * C105 +
                      (C186 * C841 + C89926 * C951) * C91) *
                         C89937 * C89843 * C823 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C822 -
                     ((C186 * C842 + C89926 * C952) * C91 +
                      (C186 * C834 + C89926 * C944) * C105 + C977 * C90 +
                      C976 * C103 + C975 * C89 + C974 * C101) *
                         C89937 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C89843 * C89827 * C96 -
                    (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                     C217 * C89 + C216 * C101) *
                        C89937 * C89843 * C89827 * C97 +
                    (C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                     C222 * C105 + C223 * C91) *
                        C89937 * C89843 * C89827 * C98 -
                    ((C186 * C117 + C89926 * C198) * C91 +
                     (C186 * C111 + C89926 * C192) * C105 + C223 * C90 +
                     C222 * C103 + C220 * C89 + C221 * C101) *
                        C89937 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C1757 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C1758 +
                     ((C186 * C1763 + C89926 * C1873) * C101 +
                      (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                      C1908 * C90 + C1909 * C105 + C1910 * C91) *
                         C89937 * C1759) *
                        C89827 * C825 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      (C186 * C1766 + C89926 * C1876) * C105 +
                      (C186 * C1774 + C89926 * C1884) * C91) *
                         C89937 * C1758 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C1757 -
                     ((C186 * C1775 + C89926 * C1885) * C91 +
                      (C186 * C1767 + C89926 * C1877) * C105 + C1910 * C90 +
                      C1909 * C103 + C1908 * C89 + C1907 * C101) *
                         C89937 * C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C89843 * C89827 * C96 -
                    ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                      C13335 * C946 + C13401 * C113 + C13334 * C194) *
                         C89783 +
                     (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                      C13335 * C938 + C13401 * C107 + C13334 * C188) *
                         C13338) *
                        C89937 * C89843 * C89827 * C97 +
                    ((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                      C13335 * C937 + C13403 * C832 + C13336 * C942) *
                         C13338 +
                     (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                      C13335 * C945 + C13403 * C840 + C13336 * C950) *
                         C89783) *
                        C89937 * C89843 * C89827 * C98 -
                    ((C13403 * C842 + C13336 * C952 + C13402 * C841 +
                      C13335 * C951 + C13401 * C115 + C13334 * C196) *
                         C89783 +
                     (C13403 * C834 + C13336 * C944 + C13402 * C833 +
                      C13335 * C943 + C13401 * C109 + C13334 * C190) *
                         C13338) *
                        C89937 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C822 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C823 +
                     ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C89843 * C824) *
                        C825 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C823 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C822 -
                     ((C13403 * C13846 + C13336 * C13966 + C13402 * C5805 +
                       C13335 * C5867 + C13401 * C839 + C13334 * C949) *
                          C89783 +
                      (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
                       C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                          C13338) *
                         C89937 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C1757 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C1758 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C13338 +
                      (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                       C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                          C89783) *
                         C89937 * C1759) *
                        C89827 * C825 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C1758 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C1757 -
                     ((C13403 * C14730 + C13336 * C14822 + C13402 * C6327 +
                       C13335 * C6413 + C13401 * C1772 + C13334 * C1882) *
                          C89783 +
                      (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
                       C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                          C13338) *
                         C89937 * C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[62] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C822 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C823 +
                     ((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C89843 * C824) *
                        C825 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      (C273 * C833 + C89937 * C1057) * C105 +
                      (C273 * C841 + C89937 * C1065) * C91) *
                         C89926 * C89843 * C823 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C822 -
                     ((C273 * C842 + C89937 * C1066) * C91 +
                      (C273 * C834 + C89937 * C1058) * C105 + C1091 * C90 +
                      C1090 * C103 + C1089 * C89 + C1088 * C101) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C89843 * C89827 * C96 -
                    (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                     C304 * C89 + C303 * C101) *
                        C89926 * C89843 * C89827 * C97 +
                    (C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                     C309 * C105 + C310 * C91) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C273 * C117 + C89937 * C285) * C91 +
                     (C273 * C111 + C89937 * C279) * C105 + C310 * C90 +
                     C309 * C103 + C307 * C89 + C308 * C101) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C1757 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C1758 +
                     ((C273 * C1763 + C89937 * C1987) * C101 +
                      (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                      C2022 * C90 + C2023 * C105 + C2024 * C91) *
                         C89926 * C1759) *
                        C89827 * C825 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      (C273 * C1766 + C89937 * C1990) * C105 +
                      (C273 * C1774 + C89937 * C1998) * C91) *
                         C89926 * C1758 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C1757 -
                     ((C273 * C1775 + C89937 * C1999) * C91 +
                      (C273 * C1767 + C89937 * C1991) * C105 + C2024 * C90 +
                      C2023 * C103 + C2022 * C89 + C2021 * C101) *
                         C89926 * C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     ((C273 * C829 + C89937 * C1053) * C13338 +
                      (C273 * C837 + C89937 * C1061) * C89783) *
                         C13335 +
                     ((C273 * C830 + C89937 * C1054) * C13338 +
                      (C273 * C838 + C89937 * C1062) * C89783) *
                         C13336) *
                        C89843 * C89827 * C96 -
                    ((C1089 * C89783 + C1088 * C13338) * C13336 +
                     (C1086 * C89783 + C1087 * C13338) * C13335 +
                     (C304 * C89783 + C303 * C13338) * C13334) *
                        C89843 * C89827 * C97 +
                    ((C305 * C13338 + C306 * C89783) * C13334 +
                     (C1085 * C13338 + C1084 * C89783) * C13335 +
                     (C1090 * C13338 + C1091 * C89783) * C13336) *
                        C89843 * C89827 * C98 -
                    (((C273 * C842 + C89937 * C1066) * C89783 +
                      (C273 * C834 + C89937 * C1058) * C13338) *
                         C13336 +
                     (C2865 * C89783 + C2864 * C13338) * C13335 +
                     (C307 * C89783 + C308 * C13338) * C13334) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C822 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C823 +
                     (C14083 * C13334 + (C14080 + C14079) * C13335 +
                      ((C273 * C13843 + C89937 * C14041) * C13338 +
                       (C273 * C13845 + C89937 * C14043) * C89783) *
                          C13336) *
                         C89843 * C824) *
                        C825 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C823 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C822 -
                     (((C273 * C13846 + C89937 * C14044) * C89783 +
                       (C273 * C13844 + C89937 * C14042) * C13338) *
                          C13336 +
                      (C14082 + C14081) * C13335 + C14074 * C13334) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C1757 -
                     (((C273 * C8595 + C89937 * C8761) * C89783 +
                       (C273 * C8592 + C89937 * C8758) * C13338) *
                          C13336 +
                      ((C273 * C4163 + C89937 * C4397) * C89783 +
                       (C273 * C4159 + C89937 * C4393) * C13338) *
                          C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C1758 +
                     (((C273 * C1763 + C89937 * C1987) * C13338 +
                       (C273 * C1771 + C89937 * C1995) * C89783) *
                          C13334 +
                      ((C273 * C6325 + C89937 * C6491) * C13338 +
                       (C273 * C6328 + C89937 * C6494) * C89783) *
                          C13335 +
                      ((C273 * C14727 + C89937 * C14897) * C13338 +
                       (C273 * C14729 + C89937 * C14899) * C89783) *
                          C13336) *
                         C1759) *
                        C89827 * C825 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C4410 * C13338 + C4411 * C89783) * C13335 +
                      ((C273 * C8591 + C89937 * C8757) * C13338 +
                       (C273 * C8594 + C89937 * C8760) * C89783) *
                          C13336) *
                         C1758 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C1757 -
                     (((C273 * C14730 + C89937 * C14900) * C89783 +
                       (C273 * C14728 + C89937 * C14898) * C13338) *
                          C13336 +
                      ((C273 * C6327 + C89937 * C6493) * C89783 +
                       (C273 * C6324 + C89937 * C6490) * C13338) *
                          C13335 +
                      (C2022 * C89783 + C2021 * C13338) * C13334) *
                         C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C822 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C823 +
           ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C89843 * C824) *
              C825 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C823 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C822 -
           ((C105 * C944 + C91 * C1172 + C103 * C942 + C90 * C1170 +
             C101 * C941 + C89 * C1169) *
                C89926 +
            (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 + C101 * C831 +
             C89 * C839) *
                C186) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C89843 * C89827 * C96 -
          ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
            C89 * C361) *
               C89926 +
           (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
            C89 * C113) *
               C186) *
              C89937 * C89843 * C89827 * C97 +
          ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116) *
               C186 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364) *
               C89926) *
              C89937 * C89843 * C89827 * C98 -
          ((C105 * C192 + C91 * C365 + C103 * C191 + C90 * C364 + C101 * C190 +
            C89 * C363) *
               C89926 +
           (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 + C101 * C109 +
            C89 * C115) *
               C186) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C1757 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C1758 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C186 +
            (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
             C105 * C1875 + C91 * C2103) *
                C89926) *
               C89937 * C1759) *
              C89827 * C825 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C1758 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C1757 -
           ((C105 * C1877 + C91 * C2105 + C103 * C1875 + C90 * C2103 +
             C101 * C1874 + C89 * C2102) *
                C89926 +
            (C105 * C1767 + C91 * C1775 + C103 * C1765 + C90 * C1773 +
             C101 * C1764 + C89 * C1772) *
                C186) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 +
           (C13338 * C829 + C89783 * C837) * C13402 +
           (C13338 * C939 + C89783 * C1167) * C13335 +
           (C13338 * C830 + C89783 * C838) * C13403 +
           (C13338 * C940 + C89783 * C1168) * C13336) *
              C89937 * C89843 * C89827 * C96 -
          ((C13338 * C941 + C89783 * C1169) * C13336 +
           (C13338 * C831 + C89783 * C839) * C13403 +
           (C13338 * C938 + C89783 * C1166) * C13335 +
           (C13338 * C828 + C89783 * C836) * C13402 +
           (C13338 * C188 + C89783 * C361) * C13334 +
           (C13338 * C107 + C89783 * C113) * C13401) *
              C89937 * C89843 * C89827 * C97 +
          ((C13338 * C108 + C89783 * C114) * C13401 +
           (C13338 * C189 + C89783 * C362) * C13334 +
           (C13338 * C827 + C89783 * C835) * C13402 +
           (C13338 * C937 + C89783 * C1165) * C13335 +
           (C13338 * C832 + C89783 * C840) * C13403 +
           (C13338 * C942 + C89783 * C1170) * C13336) *
              C89937 * C89843 * C89827 * C98 -
          ((C13338 * C944 + C89783 * C1172) * C13336 +
           (C13338 * C834 + C89783 * C842) * C13403 +
           (C13338 * C943 + C89783 * C1171) * C13335 +
           (C13338 * C833 + C89783 * C841) * C13402 +
           (C13338 * C190 + C89783 * C363) * C13334 +
           (C13338 * C109 + C89783 * C115) * C13401) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C822 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C823 +
           (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + (C13338 * C13843 + C89783 * C13845) * C13403 +
            (C13338 * C13963 + C89783 * C14157) * C13336) *
               C89937 * C89843 * C824) *
              C825 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C823 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C822 -
           ((C13338 * C13964 + C89783 * C14158) * C13336 +
            (C13338 * C13844 + C89783 * C13846) * C13403 + C14195 * C13335 +
            C14194 * C13402 + C14193 * C13334 + C14192 * C13401) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C1757 -
           ((C13338 * C8678 + C89783 * C8838) * C13336 +
            (C13338 * C8592 + C89783 * C8595) * C13403 +
            (C13338 * C4275 + C89783 * C4511) * C13335 +
            (C13338 * C4159 + C89783 * C4163) * C13402 +
            (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C1758 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 +
            (C13338 * C6325 + C89783 * C6328) * C13402 +
            (C13338 * C6411 + C89783 * C6571) * C13335 +
            (C13338 * C14727 + C89783 * C14729) * C13403 +
            (C13338 * C14819 + C89783 * C14975) * C13336) *
               C89937 * C1759) *
              C89827 * C825 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 +
            (C13338 * C4160 + C89783 * C4164) * C13402 +
            (C13338 * C4276 + C89783 * C4512) * C13335 +
            (C13338 * C8591 + C89783 * C8594) * C13403 +
            (C13338 * C8677 + C89783 * C8837) * C13336) *
               C89937 * C1758 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C1757 -
           ((C13338 * C14820 + C89783 * C14976) * C13336 +
            (C13338 * C14728 + C89783 * C14730) * C13403 +
            (C13338 * C6410 + C89783 * C6570) * C13335 +
            (C13338 * C6324 + C89783 * C6327) * C13402 +
            (C13338 * C1874 + C89783 * C2102) * C13334 +
            (C13338 * C1764 + C89783 * C1772) * C13401) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C822 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C823 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C89843 * C824) *
              C825 +
          ((C1281 * C89 + C1280 * C90 +
            (C416 * C833 + C1270 + C1270 + C89926 * C1253) * C91) *
               C89937 * C89843 * C823 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C822 -
           ((C416 * C834 + C1271 + C1271 + C89926 * C1254) * C91 + C1283 * C90 +
            C1282 * C89) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C89843 * C89827 * C96 -
          (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C89827 *
              C97 +
          (C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C89827 *
              C98 -
          ((C416 * C111 + C437 + C437 + C89926 * C422) * C91 + C449 * C90 +
           C448 * C89) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C1757 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C1758 +
           ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
            C2215 * C90 + C2216 * C91) *
               C89937 * C1759) *
              C89827 * C825 +
          ((C2214 * C89 + C2213 * C90 +
            (C416 * C1766 + C2203 + C2203 + C89926 * C2186) * C91) *
               C89937 * C1758 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C1757 -
           ((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C91 +
            C2216 * C90 + C2215 * C89) *
               C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C89827 * C96 -
          (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
           C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
           C13334 * C418) *
              C89783 * C89937 * C89843 * C89827 * C97 +
          (C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
           C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
           C13336 * C1252) *
              C89783 * C89937 * C89843 * C89827 * C98 -
          (C13556 * C834 + C13567 + C13567 + C13336 * C1254 + C13555 * C833 +
           C13568 + C13568 + C13335 * C1253 + C13554 * C109 + C13569 + C13569 +
           C13334 * C420) *
              C89783 * C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C823 +
           (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C89843 * C824) *
              C825 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C823 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C13844 + C14281 + C14281 + C13336 * C14270 +
            C13555 * C5802 + C14282 + C14282 + C13335 * C6029 + C13554 * C831 +
            C14283 + C14283 + C13334 * C1251) *
               C89783 * C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C1757 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C1758 +
           (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
            C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
            C15059 + C13336 * C15051) *
               C89783 * C89937 * C1759) *
              C89827 * C825 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C1758 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C1757 -
           (C13556 * C14728 + C15063 + C15063 + C13336 * C15052 +
            C13555 * C6324 + C15064 + C15064 + C13335 * C6647 + C13554 * C1764 +
            C15065 + C15065 + C13334 * C2184) *
               C89783 * C89937 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C822 -
           ((C1382 + C1368) * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C823 +
           (((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C89843 * C824) *
              C825 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            ((C273 * C833 + C89937 * C1057) * C186 +
             (C273 * C943 + C89937 * C1363) * C89926) *
                C91) *
               C89843 * C823 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C822 -
           (((C273 * C944 + C89937 * C1364) * C89926 +
             (C273 * C834 + C89937 * C1058) * C186) *
                C91 +
            (C1385 + C1375) * C90 + (C1384 + C1372) * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C89843 * C89827 * C96 -
          (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
              C89827 * C97 +
          (C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
              C89827 * C98 -
          (((C273 * C192 + C89937 * C504) * C89926 +
            (C273 * C111 + C89937 * C279) * C186) *
               C91 +
           (C525 + C515) * C90 + C527 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C1757 -
           ((C2315 + C2301) * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C1758 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C1759) *
              C89827 * C825 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            ((C273 * C1766 + C89937 * C1990) * C186 +
             (C273 * C1876 + C89937 * C2296) * C89926) *
                C91) *
               C1758 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C1757 -
           (((C273 * C1877 + C89937 * C2297) * C89926 +
             (C273 * C1767 + C89937 * C1991) * C186) *
                C91 +
            (C2318 + C2308) * C90 + (C2317 + C2305) * C89) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 +
           (C273 * C829 + C89937 * C1053) * C13402 +
           (C273 * C939 + C89937 * C1359) * C13335 +
           (C273 * C830 + C89937 * C1054) * C13403 +
           (C273 * C940 + C89937 * C1360) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
           C518 * C13334 + C303 * C13401) *
              C89783 * C89843 * C89827 * C97 +
          (C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
           C1090 * C13403 + C1381 * C13336) *
              C89783 * C89843 * C89827 * C98 -
          ((C273 * C944 + C89937 * C1364) * C13336 +
           (C273 * C834 + C89937 * C1058) * C13403 + C3101 * C13335 +
           C2864 * C13402 + C520 * C13334 + C308 * C13401) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C822 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C823 +
           (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + (C273 * C13843 + C89937 * C14041) * C13403 +
            (C273 * C13963 + C89937 * C14357) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C823 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C822 -
           ((C273 * C13964 + C89937 * C14358) * C13336 +
            (C273 * C13844 + C89937 * C14042) * C13403 + C14371 * C13335 +
            C14072 * C13402 + C1380 * C13334 + C1088 * C13401) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C1757 -
           ((C273 * C8678 + C89937 * C8995) * C13336 +
            (C273 * C8592 + C89937 * C8758) * C13403 +
            (C273 * C4275 + C89937 * C4729) * C13335 +
            (C273 * C4159 + C89937 * C4393) * C13402 +
            (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C1758 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 +
            (C273 * C6325 + C89937 * C6491) * C13402 +
            (C273 * C6411 + C89937 * C6728) * C13335 +
            (C273 * C14727 + C89937 * C14897) * C13403 +
            (C273 * C14819 + C89937 * C15139) * C13336) *
               C89783 * C1759) *
              C89827 * C825 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            (C273 * C8591 + C89937 * C8757) * C13403 +
            (C273 * C8677 + C89937 * C8994) * C13336) *
               C89783 * C1758 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C1757 -
           ((C273 * C14820 + C89937 * C15140) * C13336 +
            (C273 * C14728 + C89937 * C14898) * C13403 +
            (C273 * C6410 + C89937 * C6727) * C13335 +
            (C273 * C6324 + C89937 * C6490) * C13402 + C2313 * C13334 +
            C2021 * C13401) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[62] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89843 * C822 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C89843 * C823 +
                     ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                       C105 * C832 + C91 * C840) *
                          C273 +
                      (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                       C105 * C1056 + C91 * C1464) *
                          C89937) *
                         C89926 * C89843 * C824) *
                        C825 +
                    (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                       C105 * C833 + C91 * C841) *
                          C273 +
                      (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                       C105 * C1057 + C91 * C1465) *
                          C89937) *
                         C89926 * C89843 * C823 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C89843 * C822 -
                     ((C105 * C1058 + C91 * C1466 + C103 * C1056 + C90 * C1464 +
                       C101 * C1055 + C89 * C1463) *
                          C89937 +
                      (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 +
                       C101 * C831 + C89 * C839) *
                          C273) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                      C105 * C108 + C91 * C114) *
                         C273 +
                     (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                      C105 * C276 + C91 * C579) *
                         C89937) *
                        C89926 * C89843 * C89827 * C96 -
                    ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                      C101 * C275 + C89 * C578) *
                         C89937 +
                     (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                      C101 * C107 + C89 * C113) *
                         C273) *
                        C89926 * C89843 * C89827 * C97 +
                    ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                      C105 * C110 + C91 * C116) *
                         C273 +
                     (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                      C105 * C278 + C91 * C581) *
                         C89937) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C105 * C279 + C91 * C582 + C103 * C278 + C90 * C581 +
                      C101 * C277 + C89 * C580) *
                         C89937 +
                     (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 +
                      C101 * C109 + C89 * C115) *
                         C273) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C1757 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C1758 +
                     ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
                       C105 * C1765 + C91 * C1773) *
                          C273 +
                      (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
                       C105 * C1989 + C91 * C2397) *
                          C89937) *
                         C89926 * C1759) *
                        C89827 * C825 +
                    (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
                       C105 * C1766 + C91 * C1774) *
                          C273 +
                      (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
                       C105 * C1990 + C91 * C2398) *
                          C89937) *
                         C89926 * C1758 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C1757 -
                     ((C105 * C1991 + C91 * C2399 + C103 * C1989 + C90 * C2397 +
                       C101 * C1988 + C89 * C2396) *
                          C89937 +
                      (C105 * C1767 + C91 * C1775 + C103 * C1765 + C90 * C1773 +
                       C101 * C1764 + C89 * C1772) *
                          C273) *
                         C89926 * C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C273 +
                      (C13338 * C274 + C89783 * C577) * C89937) *
                         C13334 +
                     ((C13338 * C829 + C89783 * C837) * C273 +
                      (C13338 * C1053 + C89783 * C1461) * C89937) *
                         C13335 +
                     ((C13338 * C830 + C89783 * C838) * C273 +
                      (C13338 * C1054 + C89783 * C1462) * C89937) *
                         C13336) *
                        C89843 * C89827 * C96 -
                    (((C13338 * C1055 + C89783 * C1463) * C89937 +
                      (C13338 * C831 + C89783 * C839) * C273) *
                         C13336 +
                     ((C13338 * C1052 + C89783 * C1460) * C89937 +
                      (C13338 * C828 + C89783 * C836) * C273) *
                         C13335 +
                     ((C13338 * C275 + C89783 * C578) * C89937 +
                      (C13338 * C107 + C89783 * C113) * C273) *
                         C13334) *
                        C89843 * C89827 * C97 +
                    (((C13338 * C108 + C89783 * C114) * C273 +
                      (C13338 * C276 + C89783 * C579) * C89937) *
                         C13334 +
                     ((C13338 * C827 + C89783 * C835) * C273 +
                      (C13338 * C1051 + C89783 * C1459) * C89937) *
                         C13335 +
                     ((C13338 * C832 + C89783 * C840) * C273 +
                      (C13338 * C1056 + C89783 * C1464) * C89937) *
                         C13336) *
                        C89843 * C89827 * C98 -
                    (((C13338 * C1058 + C89783 * C1466) * C89937 +
                      (C13338 * C834 + C89783 * C842) * C273) *
                         C13336 +
                     ((C13338 * C1057 + C89783 * C1465) * C89937 +
                      (C13338 * C833 + C89783 * C841) * C273) *
                         C13335 +
                     ((C13338 * C277 + C89783 * C580) * C89937 +
                      (C13338 * C109 + C89783 * C115) * C273) *
                         C13334) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89843 * C822 -
                     ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C89843 * C823 +
                     (C14478 * C13334 + (C14456 + C14474) * C13335 +
                      ((C13338 * C13843 + C89783 * C13845) * C273 +
                       (C13338 * C14041 + C89783 * C14445) * C89937) *
                          C13336) *
                         C89843 * C824) *
                        C825 +
                    (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
                      (C14463 + C14477) * C13336) *
                         C89843 * C823 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C89843 * C822 -
                     (((C13338 * C14042 + C89783 * C14446) * C89937 +
                       (C13338 * C13844 + C89783 * C13846) * C273) *
                          C13336 +
                      (C14477 + C14463) * C13335 + C14479 * C13334) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C1757 -
                     (((C13338 * C8758 + C89783 * C9072) * C89937 +
                       (C13338 * C8592 + C89783 * C8595) * C273) *
                          C13336 +
                      ((C13338 * C4393 + C89783 * C4841) * C89937 +
                       (C13338 * C4159 + C89783 * C4163) * C273) *
                          C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C1758 +
                     (((C13338 * C1763 + C89783 * C1771) * C273 +
                       (C13338 * C1987 + C89783 * C2395) * C89937) *
                          C13334 +
                      ((C13338 * C6325 + C89783 * C6328) * C273 +
                       (C13338 * C6491 + C89783 * C6805) * C89937) *
                          C13335 +
                      ((C13338 * C14727 + C89783 * C14729) * C273 +
                       (C13338 * C14897 + C89783 * C15215) * C89937) *
                          C13336) *
                         C1759) *
                        C89827 * C825 +
                    ((((C13338 * C1761 + C89783 * C1769) * C273 +
                       (C13338 * C1985 + C89783 * C2393) * C89937) *
                          C13334 +
                      ((C13338 * C4160 + C89783 * C4164) * C273 +
                       (C13338 * C4394 + C89783 * C4842) * C89937) *
                          C13335 +
                      ((C13338 * C8591 + C89783 * C8594) * C273 +
                       (C13338 * C8757 + C89783 * C9071) * C89937) *
                          C13336) *
                         C1758 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C1757 -
                     (((C13338 * C14898 + C89783 * C15216) * C89937 +
                       (C13338 * C14728 + C89783 * C14730) * C273) *
                          C13336 +
                      ((C13338 * C6490 + C89783 * C6804) * C89937 +
                       (C13338 * C6324 + C89783 * C6327) * C273) *
                          C13335 +
                      ((C13338 * C1988 + C89783 * C2396) * C89937 +
                       (C13338 * C1764 + C89783 * C1772) * C273) *
                          C13334) *
                         C1759) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89843 * C822 -
           ((C1566 + C1552) * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C89843 * C823 +
           (((C186 * C830 + C89926 * C940) * C273 +
             (C186 * C1054 + C89926 * C1544) * C89937) *
                C89 +
            (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
               C89843 * C824) *
              C825 +
          (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
            ((C186 * C833 + C89926 * C943) * C273 +
             (C186 * C1057 + C89926 * C1547) * C89937) *
                C91) *
               C89843 * C823 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89843 *
               C822 -
           (((C186 * C1058 + C89926 * C1548) * C89937 +
             (C186 * C834 + C89926 * C944) * C273) *
                C91 +
            (C1569 + C1559) * C90 + (C1568 + C1556) * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C273 +
            (C186 * C274 + C89926 * C633) * C89937) *
               C89 +
           (C640 + C656) * C90 + C660 * C91) *
              C89843 * C89827 * C96 -
          (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89843 *
              C89827 * C97 +
          (C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C89843 *
              C89827 * C98 -
          (((C186 * C279 + C89926 * C638) * C89937 +
            (C186 * C111 + C89926 * C192) * C273) *
               C91 +
           (C659 + C649) * C90 + C661 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C1757 -
           ((C2499 + C2485) * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C1758 +
           (((C186 * C1763 + C89926 * C1873) * C273 +
             (C186 * C1987 + C89926 * C2477) * C89937) *
                C89 +
            (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
               C1759) *
              C89827 * C825 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            ((C186 * C1766 + C89926 * C1876) * C273 +
             (C186 * C1990 + C89926 * C2480) * C89937) *
                C91) *
               C1758 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C1757 -
           (((C186 * C1991 + C89926 * C2481) * C89937 +
             (C186 * C1767 + C89926 * C1877) * C273) *
                C91 +
            (C2502 + C2492) * C90 + (C2501 + C2489) * C89) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C273 +
           (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
            C13403 * C1054 + C13336 * C1544) *
               C89937) *
              C89783 * C89843 * C89827 * C96 -
          ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
            C13401 * C275 + C13334 * C634) *
               C89937 +
           (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
            C13401 * C107 + C13334 * C188) *
               C273) *
              C89783 * C89843 * C89827 * C97 +
          ((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
            C13403 * C832 + C13336 * C942) *
               C273 +
           (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
            C13403 * C1056 + C13336 * C1546) *
               C89937) *
              C89783 * C89843 * C89827 * C98 -
          ((C13403 * C1058 + C13336 * C1548 + C13402 * C1057 + C13335 * C1547 +
            C13401 * C277 + C13334 * C636) *
               C89937 +
           (C13403 * C834 + C13336 * C944 + C13402 * C833 + C13335 * C943 +
            C13401 * C109 + C13334 * C190) *
               C273) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89843 * C822 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C89843 * C823 +
           ((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C89843 * C824) *
              C825 +
          (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
             C13403 * C5802 + C13336 * C5864) *
                C273 +
            (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 + C13335 * C1545 +
             C13403 * C5920 + C13336 * C6191) *
                C89937) *
               C89783 * C89843 * C823 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89843 * C822 -
           ((C13403 * C14042 + C13336 * C14554 + C13402 * C5920 +
             C13335 * C6191 + C13401 * C1055 + C13334 * C1545) *
                C89937 +
            (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
             C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                C273) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C1757 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C1758 +
           ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
             C13403 * C14727 + C13336 * C14819) *
                C273 +
            (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
             C13403 * C14897 + C13336 * C15291) *
                C89937) *
               C89783 * C1759) *
              C89827 * C825 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C1758 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C1757 -
           ((C13403 * C14898 + C13336 * C15292 + C13402 * C6490 +
             C13335 * C6881 + C13401 * C1988 + C13334 * C2478) *
                C89937 +
            (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
             C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                C273) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C822 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C823 +
           ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C89843 * C824) *
              C825 +
          ((C1681 * C89 + C1680 * C90 +
            (C711 * C833 + C1666 + C1666 + C89937 * C1649) * C89926 * C91) *
               C89843 * C823 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C822 -
           ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C89926 * C91 +
            C1683 * C90 + C1682 * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C89843 * C89827 * C96 -
          (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C89827 * C97 +
          (C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C89827 * C98 -
          ((C711 * C111 + C732 + C732 + C89937 * C717) * C89926 * C91 +
           C748 * C90 + C747 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C1757 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C1759) *
              C89827 * C825 +
          ((C2614 * C89 + C2613 * C90 +
            (C711 * C1766 + C2599 + C2599 + C89937 * C2582) * C89926 * C91) *
               C1758 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C1757 -
           ((C711 * C1767 + C2600 + C2600 + C89937 * C2583) * C89926 * C91 +
            C2616 * C90 + C2615 * C89) *
               C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C13335 +
           (C711 * C830 + C1659 + C1659 + C89937 * C1646) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
              C89827 * C97 +
          (C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
              C89827 * C98 -
          ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C13336 +
           C3339 * C13335 + C743 * C13334) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C822 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C823 +
           (C14651 * C13334 + C14652 * C13335 +
            (C711 * C13843 + C14638 + C14638 + C89937 * C14629) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C823 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C822 -
           ((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C13336 +
            C14653 * C13335 + C1678 * C13334) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C1757 -
           ((C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C13336 +
            (C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            (C711 * C6325 + C6963 + C6963 + C89937 * C6959) * C13335 +
            (C711 * C14727 + C15370 + C15370 + C89937 * C15367) * C13336) *
               C89783 * C1759) *
              C89827 * C825 +
          ((C2610 * C13334 + C5072 * C13335 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C13336) *
               C89783 * C1758 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C1757 -
           ((C711 * C14728 + C15371 + C15371 + C89937 * C15368) * C13336 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C13335 +
            C2611 * C13334) *
               C89783 * C1759) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89999 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C89827 * C90022 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C89907 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89999) *
              C89827 * C90023 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C89999 -
           (C104 * C3416 + C3420 + C3420 + C91 * C3418 + C102 * C1766 + C3421 +
            C3421 + C90 * C1782 + C100 * C1760 + C3422 + C3422 + C89 * C1776) *
               C89937 * C89926 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89999 -
           ((C13337 * C8592 + C14734 + C14734 + C89783 * C8598) * C89937 *
                C13336 +
            (C13337 * C4159 + C14735 + C14735 + C89783 * C4167) * C89937 *
                C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C89827 * C90022 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            (C13337 * C4160 + C14741 + C14741 + C89783 * C4168) * C89937 *
                C13335 +
            (C13337 * C8591 + C14742 + C14742 + C89783 * C8597) * C89937 *
                C13336) *
               C89907 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89999) *
              C89827 * C90023 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89999 -
           ((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C89937 *
                C13336 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C89937 *
                C13335 +
            (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C89937 *
                C13334) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexy[63] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89999 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C89827 * C90022 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      C3503 * C105 + C3504 * C91) *
                         C89937 * C89907 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89999) *
                        C89827 * C90023 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C89999 -
                     ((C186 * C3417 + C89926 * C3497) * C91 +
                      (C186 * C3416 + C89926 * C3496) * C105 + C3504 * C90 +
                      C3503 * C103 + C1903 * C89 + C1904 * C101) *
                         C89937 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C90022 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89999) *
                        C89827 * C90023 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C8593 + C13336 * C8679 + C13402 * C4165 +
                       C13335 * C4281 + C13401 * C1768 + C13334 * C1878) *
                          C89783 +
                      (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 +
                       C13335 * C4277 + C13401 * C1760 + C13334 * C1870) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[63] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89999 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C89827 * C90022 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      C3585 * C105 + C3586 * C91) *
                         C89926 * C89907 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89999) *
                        C89827 * C90023 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C89999 -
                     ((C273 * C3417 + C89937 * C3579) * C91 +
                      (C273 * C3416 + C89937 * C3578) * C105 + C3586 * C90 +
                      C3585 * C103 + C2017 * C89 + C2018 * C101) *
                         C89926 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89999 -
                     (((C273 * C8595 + C89937 * C8761) * C89783 +
                       (C273 * C8592 + C89937 * C8758) * C13338) *
                          C13336 +
                      ((C273 * C4163 + C89937 * C4397) * C89783 +
                       (C273 * C4159 + C89937 * C4393) * C13338) *
                          C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C89827 * C90022 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C4410 * C13338 + C4411 * C89783) * C13335 +
                      ((C273 * C8591 + C89937 * C8757) * C13338 +
                       (C273 * C8594 + C89937 * C8760) * C89783) *
                          C13336) *
                         C89907 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89999) *
                        C89827 * C90023 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89999 -
                     (((C273 * C8593 + C89937 * C8759) * C89783 +
                       (C273 * C8590 + C89937 * C8756) * C13338) *
                          C13336 +
                      (C4413 * C89783 + C4412 * C13338) * C13335 +
                      (C2017 * C89783 + C2018 * C13338) * C13334) *
                         C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C89827 * C90022 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89999) *
              C89827 * C90023 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C3496 + C91 * C3660 + C103 * C1876 + C90 * C2104 +
             C101 * C1870 + C89 * C2098) *
                C89926 +
            (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
             C101 * C1760 + C89 * C1768) *
                C186) *
               C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89999 -
           ((C13338 * C8678 + C89783 * C8838) * C13336 +
            (C13338 * C8592 + C89783 * C8595) * C13403 +
            (C13338 * C4275 + C89783 * C4511) * C13335 +
            (C13338 * C4159 + C89783 * C4163) * C13402 +
            (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C89827 * C90022 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 +
            (C13338 * C4160 + C89783 * C4164) * C13402 +
            (C13338 * C4276 + C89783 * C4512) * C13335 +
            (C13338 * C8591 + C89783 * C8594) * C13403 +
            (C13338 * C8677 + C89783 * C8837) * C13336) *
               C89937 * C89907 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89999) *
              C89827 * C90023 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89999 -
           ((C13338 * C8676 + C89783 * C8836) * C13336 +
            (C13338 * C8590 + C89783 * C8593) * C13403 +
            (C13338 * C4277 + C89783 * C4513) * C13335 +
            (C13338 * C4161 + C89783 * C4165) * C13402 +
            (C13338 * C1870 + C89783 * C2098) * C13334 +
            (C13338 * C1760 + C89783 * C1768) * C13401) *
               C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89999 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C89827 * C90022 +
          ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89999) *
              C89827 * C90023 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89999 -
           ((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C91 +
            C3742 * C90 + C2213 * C89) *
               C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89999 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C89827 * C90022 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C89907 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89999) *
              C89827 * C90023 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89999 -
           (C13556 * C8590 + C16453 + C16453 + C13336 * C8913 + C13555 * C4161 +
            C16454 + C16454 + C13335 * C4615 + C13554 * C1760 + C16455 +
            C16455 + C13334 * C2180) *
               C89783 * C89937 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89999 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C89827 * C90022 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            (C3819 + C3823) * C91) *
               C89907 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89999) *
              C89827 * C90023 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89999 -
           (((C273 * C3496 + C89937 * C3816) * C89926 +
             (C273 * C3416 + C89937 * C3578) * C186) *
                C91 +
            (C3823 + C3819) * C90 + C3818 * C89) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89999 -
           ((C273 * C8678 + C89937 * C8995) * C13336 +
            (C273 * C8592 + C89937 * C8758) * C13403 +
            (C273 * C4275 + C89937 * C4729) * C13335 +
            (C273 * C4159 + C89937 * C4393) * C13402 +
            (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C89827 * C90022 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            (C273 * C8591 + C89937 * C8757) * C13403 +
            (C273 * C8677 + C89937 * C8994) * C13336) *
               C89783 * C89907 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89999) *
              C89827 * C90023 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89999 -
           ((C273 * C8676 + C89937 * C8993) * C13336 +
            (C273 * C8590 + C89937 * C8756) * C13403 + C4741 * C13335 +
            C4412 * C13402 + C2311 * C13334 + C2018 * C13401) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezx[63] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89999 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C89907) *
                        C89827 * C90022 +
                    (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
                       C105 * C1766 + C91 * C1774) *
                          C273 +
                      (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
                       C105 * C1990 + C91 * C2398) *
                          C89937) *
                         C89926 * C89907 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C89999) *
                        C89827 * C90023 +
                    (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                       C105 * C110 + C91 * C116) *
                          C273 +
                      (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                       C105 * C278 + C91 * C581) *
                          C89937) *
                         C89926 * C89999 -
                     ((C105 * C3578 + C91 * C3897 + C103 * C1990 + C90 * C2398 +
                       C101 * C1984 + C89 * C2392) *
                          C89937 +
                      (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
                       C101 * C1760 + C89 * C1768) *
                          C273) *
                         C89926 * C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89999 -
                     (((C13338 * C8758 + C89783 * C9072) * C89937 +
                       (C13338 * C8592 + C89783 * C8595) * C273) *
                          C13336 +
                      ((C13338 * C4393 + C89783 * C4841) * C89937 +
                       (C13338 * C4159 + C89783 * C4163) * C273) *
                          C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C89907) *
                        C89827 * C90022 +
                    ((((C13338 * C1761 + C89783 * C1769) * C273 +
                       (C13338 * C1985 + C89783 * C2393) * C89937) *
                          C13334 +
                      ((C13338 * C4160 + C89783 * C4164) * C273 +
                       (C13338 * C4394 + C89783 * C4842) * C89937) *
                          C13335 +
                      ((C13338 * C8591 + C89783 * C8594) * C273 +
                       (C13338 * C8757 + C89783 * C9071) * C89937) *
                          C13336) *
                         C89907 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C89999) *
                        C89827 * C90023 +
                    ((((C13338 * C108 + C89783 * C114) * C273 +
                       (C13338 * C276 + C89783 * C579) * C89937) *
                          C13334 +
                      (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
                         C89999 -
                     (((C13338 * C8756 + C89783 * C9070) * C89937 +
                       (C13338 * C8590 + C89783 * C8593) * C273) *
                          C13336 +
                      ((C13338 * C4395 + C89783 * C4843) * C89937 +
                       (C13338 * C4161 + C89783 * C4165) * C273) *
                          C13335 +
                      ((C13338 * C1984 + C89783 * C2392) * C89937 +
                       (C13338 * C1760 + C89783 * C1768) * C273) *
                          C13334) *
                         C89907) *
                        C89827 * C2694)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C89999 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C89827 * C90022 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            (C3975 + C3979) * C91) *
               C89907 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89999) *
              C89827 * C90023 +
          ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C89999 -
           (((C186 * C3578 + C89926 * C3972) * C89937 +
             (C186 * C3416 + C89926 * C3496) * C273) *
                C91 +
            (C3979 + C3975) * C90 + C3974 * C89) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C89999 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C89827 * C90022 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C89999) *
              C89827 * C90023 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C89999 -
           ((C13403 * C8756 + C13336 * C9147 + C13402 * C4395 + C13335 * C4945 +
             C13401 * C1984 + C13334 * C2474) *
                C89937 +
            (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 + C13335 * C4277 +
             C13401 * C1760 + C13334 * C1870) *
                C273) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eezz[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89999 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C89827 * C90022 +
          ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89999) *
              C89827 * C90023 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C89999 -
           ((C711 * C3416 + C4057 + C4057 + C89937 * C4053) * C89926 * C91 +
            C4061 * C90 + C2613 * C89) *
               C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89999 -
           ((C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C13336 +
            (C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C89827 * C90022 +
          ((C2610 * C13334 + C5072 * C13335 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C13336) *
               C89783 * C89907 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
               C89999) *
              C89827 * C90023 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89999 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C13336 +
            C5073 * C13335 + C2609 * C13334) *
               C89783 * C89907) *
              C89827 * C2694)) /
            (p * q * std::sqrt(p + q));
    d2eexx[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C89843 * C89827 * C96 -
          (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
           C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
              C89937 * C89926 * C89843 * C89827 * C97 +
          (C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
           C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
              C89937 * C89926 * C89843 * C89827 * C98 -
          (C104 * C111 + C134 + C134 + C91 * C123 + C102 * C110 + C135 + C135 +
           C90 * C122 + C100 * C109 + C136 + C136 + C89 * C121) *
              C89937 * C89926 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C822 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C823 +
           (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C89843 * C824) *
              C825 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C823 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C822 -
           (C104 * C834 + C861 + C861 + C91 * C850 + C102 * C832 + C862 + C862 +
            C90 * C848 + C100 * C831 + C863 + C863 + C89 * C847) *
               C89937 * C89926 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           (C13337 * C829 + C13341 + C13341 + C89783 * C845) * C89937 * C13335 +
           (C13337 * C830 + C13342 + C13342 + C89783 * C846) * C89937 *
               C13336) *
              C89843 * C89827 * C96 -
          ((C13337 * C831 + C13343 + C13343 + C89783 * C847) * C89937 * C13336 +
           (C13337 * C828 + C13344 + C13344 + C89783 * C844) * C89937 * C13335 +
           (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
               C13334) *
              C89843 * C89827 * C97 +
          ((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 * C13334 +
           (C13337 * C827 + C13347 + C13347 + C89783 * C843) * C89937 * C13335 +
           (C13337 * C832 + C13348 + C13348 + C89783 * C848) * C89937 *
               C13336) *
              C89843 * C89827 * C98 -
          ((C13337 * C834 + C13349 + C13349 + C89783 * C850) * C89937 * C13336 +
           (C13337 * C833 + C13350 + C13350 + C89783 * C849) * C89937 * C13335 +
           (C13337 * C109 + C13351 + C13351 + C89783 * C121) * C89937 *
               C13334) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C822 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C823 +
           (C13885 * C13334 + C13886 * C13335 +
            (C13337 * C13843 + C13857 + C13857 + C89783 * C13847) * C89937 *
                C13336) *
               C89843 * C824) *
              C825 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C823 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C822 -
           ((C13337 * C13844 + C13865 + C13865 + C89783 * C13848) * C89937 *
                C13336 +
            C13889 * C13335 + C13888 * C13334) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C89843 * C89827 * C96 -
                    (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                     C217 * C89 + C216 * C101) *
                        C89937 * C89843 * C89827 * C97 +
                    (C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                     C222 * C105 + C223 * C91) *
                        C89937 * C89843 * C89827 * C98 -
                    ((C186 * C117 + C89926 * C198) * C91 +
                     (C186 * C111 + C89926 * C192) * C105 + C223 * C90 +
                     C222 * C103 + C220 * C89 + C221 * C101) *
                        C89937 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C822 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C823 +
                     ((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C89843 * C824) *
                        C825 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      (C186 * C833 + C89926 * C943) * C105 +
                      (C186 * C841 + C89926 * C951) * C91) *
                         C89937 * C89843 * C823 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C822 -
                     ((C186 * C842 + C89926 * C952) * C91 +
                      (C186 * C834 + C89926 * C944) * C105 + C977 * C90 +
                      C976 * C103 + C975 * C89 + C974 * C101) *
                         C89937 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C89843 * C89827 * C96 -
                    ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                      C13335 * C946 + C13401 * C113 + C13334 * C194) *
                         C89783 +
                     (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                      C13335 * C938 + C13401 * C107 + C13334 * C188) *
                         C13338) *
                        C89937 * C89843 * C89827 * C97 +
                    ((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                      C13335 * C937 + C13403 * C832 + C13336 * C942) *
                         C13338 +
                     (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                      C13335 * C945 + C13403 * C840 + C13336 * C950) *
                         C89783) *
                        C89937 * C89843 * C89827 * C98 -
                    ((C13403 * C842 + C13336 * C952 + C13402 * C841 +
                      C13335 * C951 + C13401 * C115 + C13334 * C196) *
                         C89783 +
                     (C13403 * C834 + C13336 * C944 + C13402 * C833 +
                      C13335 * C943 + C13401 * C109 + C13334 * C190) *
                         C13338) *
                        C89937 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C822 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C823 +
                     ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C89843 * C824) *
                        C825 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C823 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C822 -
                     ((C13403 * C13846 + C13336 * C13966 + C13402 * C5805 +
                       C13335 * C5867 + C13401 * C839 + C13334 * C949) *
                          C89783 +
                      (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
                       C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                          C13338) *
                         C89937 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C89843 * C89827 * C96 -
                    (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                     C304 * C89 + C303 * C101) *
                        C89926 * C89843 * C89827 * C97 +
                    (C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                     C309 * C105 + C310 * C91) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C273 * C117 + C89937 * C285) * C91 +
                     (C273 * C111 + C89937 * C279) * C105 + C310 * C90 +
                     C309 * C103 + C307 * C89 + C308 * C101) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C822 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C823 +
                     ((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C89843 * C824) *
                        C825 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      (C273 * C833 + C89937 * C1057) * C105 +
                      (C273 * C841 + C89937 * C1065) * C91) *
                         C89926 * C89843 * C823 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C822 -
                     ((C273 * C842 + C89937 * C1066) * C91 +
                      (C273 * C834 + C89937 * C1058) * C105 + C1091 * C90 +
                      C1090 * C103 + C1089 * C89 + C1088 * C101) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     ((C273 * C829 + C89937 * C1053) * C13338 +
                      (C273 * C837 + C89937 * C1061) * C89783) *
                         C13335 +
                     ((C273 * C830 + C89937 * C1054) * C13338 +
                      (C273 * C838 + C89937 * C1062) * C89783) *
                         C13336) *
                        C89843 * C89827 * C96 -
                    ((C1089 * C89783 + C1088 * C13338) * C13336 +
                     (C1086 * C89783 + C1087 * C13338) * C13335 +
                     (C304 * C89783 + C303 * C13338) * C13334) *
                        C89843 * C89827 * C97 +
                    ((C305 * C13338 + C306 * C89783) * C13334 +
                     (C1085 * C13338 + C1084 * C89783) * C13335 +
                     (C1090 * C13338 + C1091 * C89783) * C13336) *
                        C89843 * C89827 * C98 -
                    (((C273 * C842 + C89937 * C1066) * C89783 +
                      (C273 * C834 + C89937 * C1058) * C13338) *
                         C13336 +
                     (C2865 * C89783 + C2864 * C13338) * C13335 +
                     (C307 * C89783 + C308 * C13338) * C13334) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C822 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C823 +
                     (C14083 * C13334 + (C14080 + C14079) * C13335 +
                      ((C273 * C13843 + C89937 * C14041) * C13338 +
                       (C273 * C13845 + C89937 * C14043) * C89783) *
                          C13336) *
                         C89843 * C824) *
                        C825 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C823 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C822 -
                     (((C273 * C13846 + C89937 * C14044) * C89783 +
                       (C273 * C13844 + C89937 * C14042) * C13338) *
                          C13336 +
                      (C14082 + C14081) * C13335 + C14074 * C13334) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C89843 * C89827 * C96 -
          ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
            C89 * C361) *
               C89926 +
           (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
            C89 * C113) *
               C186) *
              C89937 * C89843 * C89827 * C97 +
          ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
            C91 * C116) *
               C186 +
           (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
            C91 * C364) *
               C89926) *
              C89937 * C89843 * C89827 * C98 -
          ((C105 * C192 + C91 * C365 + C103 * C191 + C90 * C364 + C101 * C190 +
            C89 * C363) *
               C89926 +
           (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 + C101 * C109 +
            C89 * C115) *
               C186) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C822 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C823 +
           ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C89843 * C824) *
              C825 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C823 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C822 -
           ((C105 * C944 + C91 * C1172 + C103 * C942 + C90 * C1170 +
             C101 * C941 + C89 * C1169) *
                C89926 +
            (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 + C101 * C831 +
             C89 * C839) *
                C186) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 +
           (C13338 * C829 + C89783 * C837) * C13402 +
           (C13338 * C939 + C89783 * C1167) * C13335 +
           (C13338 * C830 + C89783 * C838) * C13403 +
           (C13338 * C940 + C89783 * C1168) * C13336) *
              C89937 * C89843 * C89827 * C96 -
          ((C13338 * C941 + C89783 * C1169) * C13336 +
           (C13338 * C831 + C89783 * C839) * C13403 +
           (C13338 * C938 + C89783 * C1166) * C13335 +
           (C13338 * C828 + C89783 * C836) * C13402 +
           (C13338 * C188 + C89783 * C361) * C13334 +
           (C13338 * C107 + C89783 * C113) * C13401) *
              C89937 * C89843 * C89827 * C97 +
          ((C13338 * C108 + C89783 * C114) * C13401 +
           (C13338 * C189 + C89783 * C362) * C13334 +
           (C13338 * C827 + C89783 * C835) * C13402 +
           (C13338 * C937 + C89783 * C1165) * C13335 +
           (C13338 * C832 + C89783 * C840) * C13403 +
           (C13338 * C942 + C89783 * C1170) * C13336) *
              C89937 * C89843 * C89827 * C98 -
          ((C13338 * C944 + C89783 * C1172) * C13336 +
           (C13338 * C834 + C89783 * C842) * C13403 +
           (C13338 * C943 + C89783 * C1171) * C13335 +
           (C13338 * C833 + C89783 * C841) * C13402 +
           (C13338 * C190 + C89783 * C363) * C13334 +
           (C13338 * C109 + C89783 * C115) * C13401) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C822 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C823 +
           (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + (C13338 * C13843 + C89783 * C13845) * C13403 +
            (C13338 * C13963 + C89783 * C14157) * C13336) *
               C89937 * C89843 * C824) *
              C825 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C823 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C822 -
           ((C13338 * C13964 + C89783 * C14158) * C13336 +
            (C13338 * C13844 + C89783 * C13846) * C13403 + C14195 * C13335 +
            C14194 * C13402 + C14193 * C13334 + C14192 * C13401) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C89843 * C89827 * C96 -
          (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C89827 *
              C97 +
          (C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C89827 *
              C98 -
          ((C416 * C111 + C437 + C437 + C89926 * C422) * C91 + C449 * C90 +
           C448 * C89) *
              C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C822 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C823 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C89843 * C824) *
              C825 +
          ((C1281 * C89 + C1280 * C90 +
            (C416 * C833 + C1270 + C1270 + C89926 * C1253) * C91) *
               C89937 * C89843 * C823 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C822 -
           ((C416 * C834 + C1271 + C1271 + C89926 * C1254) * C91 + C1283 * C90 +
            C1282 * C89) *
               C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C89827 * C96 -
          (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
           C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
           C13334 * C418) *
              C89783 * C89937 * C89843 * C89827 * C97 +
          (C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
           C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
           C13336 * C1252) *
              C89783 * C89937 * C89843 * C89827 * C98 -
          (C13556 * C834 + C13567 + C13567 + C13336 * C1254 + C13555 * C833 +
           C13568 + C13568 + C13335 * C1253 + C13554 * C109 + C13569 + C13569 +
           C13334 * C420) *
              C89783 * C89937 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C823 +
           (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C89843 * C824) *
              C825 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C823 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C822 -
           (C13556 * C13844 + C14281 + C14281 + C13336 * C14270 +
            C13555 * C5802 + C14282 + C14282 + C13335 * C6029 + C13554 * C831 +
            C14283 + C14283 + C13334 * C1251) *
               C89783 * C89937 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C89843 * C89827 * C96 -
          (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
              C89827 * C97 +
          (C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
              C89827 * C98 -
          (((C273 * C192 + C89937 * C504) * C89926 +
            (C273 * C111 + C89937 * C279) * C186) *
               C91 +
           (C525 + C515) * C90 + C527 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C822 -
           ((C1382 + C1368) * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C823 +
           (((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C89843 * C824) *
              C825 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            ((C273 * C833 + C89937 * C1057) * C186 +
             (C273 * C943 + C89937 * C1363) * C89926) *
                C91) *
               C89843 * C823 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C822 -
           (((C273 * C944 + C89937 * C1364) * C89926 +
             (C273 * C834 + C89937 * C1058) * C186) *
                C91 +
            (C1385 + C1375) * C90 + (C1384 + C1372) * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 +
           (C273 * C829 + C89937 * C1053) * C13402 +
           (C273 * C939 + C89937 * C1359) * C13335 +
           (C273 * C830 + C89937 * C1054) * C13403 +
           (C273 * C940 + C89937 * C1360) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
           C518 * C13334 + C303 * C13401) *
              C89783 * C89843 * C89827 * C97 +
          (C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
           C1090 * C13403 + C1381 * C13336) *
              C89783 * C89843 * C89827 * C98 -
          ((C273 * C944 + C89937 * C1364) * C13336 +
           (C273 * C834 + C89937 * C1058) * C13403 + C3101 * C13335 +
           C2864 * C13402 + C520 * C13334 + C308 * C13401) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C822 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C823 +
           (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + (C273 * C13843 + C89937 * C14041) * C13403 +
            (C273 * C13963 + C89937 * C14357) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C823 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C822 -
           ((C273 * C13964 + C89937 * C14358) * C13336 +
            (C273 * C13844 + C89937 * C14042) * C13403 + C14371 * C13335 +
            C14072 * C13402 + C1380 * C13334 + C1088 * C13401) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                      C105 * C108 + C91 * C114) *
                         C273 +
                     (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                      C105 * C276 + C91 * C579) *
                         C89937) *
                        C89926 * C89843 * C89827 * C96 -
                    ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                      C101 * C275 + C89 * C578) *
                         C89937 +
                     (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                      C101 * C107 + C89 * C113) *
                         C273) *
                        C89926 * C89843 * C89827 * C97 +
                    ((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                      C105 * C110 + C91 * C116) *
                         C273 +
                     (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                      C105 * C278 + C91 * C581) *
                         C89937) *
                        C89926 * C89843 * C89827 * C98 -
                    ((C105 * C279 + C91 * C582 + C103 * C278 + C90 * C581 +
                      C101 * C277 + C89 * C580) *
                         C89937 +
                     (C105 * C111 + C91 * C117 + C103 * C110 + C90 * C116 +
                      C101 * C109 + C89 * C115) *
                         C273) *
                        C89926 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89843 * C822 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C89843 * C823 +
                     ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                       C105 * C832 + C91 * C840) *
                          C273 +
                      (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                       C105 * C1056 + C91 * C1464) *
                          C89937) *
                         C89926 * C89843 * C824) *
                        C825 +
                    (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                       C105 * C833 + C91 * C841) *
                          C273 +
                      (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                       C105 * C1057 + C91 * C1465) *
                          C89937) *
                         C89926 * C89843 * C823 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C89843 * C822 -
                     ((C105 * C1058 + C91 * C1466 + C103 * C1056 + C90 * C1464 +
                       C101 * C1055 + C89 * C1463) *
                          C89937 +
                      (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 +
                       C101 * C831 + C89 * C839) *
                          C273) *
                         C89926 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C273 +
                      (C13338 * C274 + C89783 * C577) * C89937) *
                         C13334 +
                     ((C13338 * C829 + C89783 * C837) * C273 +
                      (C13338 * C1053 + C89783 * C1461) * C89937) *
                         C13335 +
                     ((C13338 * C830 + C89783 * C838) * C273 +
                      (C13338 * C1054 + C89783 * C1462) * C89937) *
                         C13336) *
                        C89843 * C89827 * C96 -
                    (((C13338 * C1055 + C89783 * C1463) * C89937 +
                      (C13338 * C831 + C89783 * C839) * C273) *
                         C13336 +
                     ((C13338 * C1052 + C89783 * C1460) * C89937 +
                      (C13338 * C828 + C89783 * C836) * C273) *
                         C13335 +
                     ((C13338 * C275 + C89783 * C578) * C89937 +
                      (C13338 * C107 + C89783 * C113) * C273) *
                         C13334) *
                        C89843 * C89827 * C97 +
                    (((C13338 * C108 + C89783 * C114) * C273 +
                      (C13338 * C276 + C89783 * C579) * C89937) *
                         C13334 +
                     ((C13338 * C827 + C89783 * C835) * C273 +
                      (C13338 * C1051 + C89783 * C1459) * C89937) *
                         C13335 +
                     ((C13338 * C832 + C89783 * C840) * C273 +
                      (C13338 * C1056 + C89783 * C1464) * C89937) *
                         C13336) *
                        C89843 * C89827 * C98 -
                    (((C13338 * C1058 + C89783 * C1466) * C89937 +
                      (C13338 * C834 + C89783 * C842) * C273) *
                         C13336 +
                     ((C13338 * C1057 + C89783 * C1465) * C89937 +
                      (C13338 * C833 + C89783 * C841) * C273) *
                         C13335 +
                     ((C13338 * C277 + C89783 * C580) * C89937 +
                      (C13338 * C109 + C89783 * C115) * C273) *
                         C13334) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89843 * C822 -
                     ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C89843 * C823 +
                     (C14478 * C13334 + (C14456 + C14474) * C13335 +
                      ((C13338 * C13843 + C89783 * C13845) * C273 +
                       (C13338 * C14041 + C89783 * C14445) * C89937) *
                          C13336) *
                         C89843 * C824) *
                        C825 +
                    (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
                      (C14463 + C14477) * C13336) *
                         C89843 * C823 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C89843 * C822 -
                     (((C13338 * C14042 + C89783 * C14446) * C89937 +
                       (C13338 * C13844 + C89783 * C13846) * C273) *
                          C13336 +
                      (C14477 + C14463) * C13335 + C14479 * C13334) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C273 +
                      (C186 * C274 + C89926 * C633) * C89937) *
                         C89 +
                     (C640 + C656) * C90 + C660 * C91) *
                        C89843 * C89827 * C96 -
                    (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                        C89843 * C89827 * C97 +
                    (C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) *
                        C89843 * C89827 * C98 -
                    (((C186 * C279 + C89926 * C638) * C89937 +
                      (C186 * C111 + C89926 * C192) * C273) *
                         C91 +
                     (C659 + C649) * C90 + C661 * C89) *
                        C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C89843 * C822 -
                     ((C1566 + C1552) * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C89843 * C823 +
                     (((C186 * C830 + C89926 * C940) * C273 +
                       (C186 * C1054 + C89926 * C1544) * C89937) *
                          C89 +
                      (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                         C89843 * C824) *
                        C825 +
                    (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
                      ((C186 * C833 + C89926 * C943) * C273 +
                       (C186 * C1057 + C89926 * C1547) * C89937) *
                          C91) *
                         C89843 * C823 -
                     (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                         C89843 * C822 -
                     (((C186 * C1058 + C89926 * C1548) * C89937 +
                       (C186 * C834 + C89926 * C944) * C273) *
                          C91 +
                      (C1569 + C1559) * C90 + (C1568 + C1556) * C89) *
                         C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C273 +
                     (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                      C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                         C89937) *
                        C89783 * C89843 * C89827 * C96 -
                    ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
                      C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                         C89937 +
                     (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                      C13335 * C938 + C13401 * C107 + C13334 * C188) *
                         C273) *
                        C89783 * C89843 * C89827 * C97 +
                    ((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                      C13335 * C937 + C13403 * C832 + C13336 * C942) *
                         C273 +
                     (C13401 * C276 + C13334 * C635 + C13402 * C1051 +
                      C13335 * C1541 + C13403 * C1056 + C13336 * C1546) *
                         C89937) *
                        C89783 * C89843 * C89827 * C98 -
                    ((C13403 * C1058 + C13336 * C1548 + C13402 * C1057 +
                      C13335 * C1547 + C13401 * C277 + C13334 * C636) *
                         C89937 +
                     (C13403 * C834 + C13336 * C944 + C13402 * C833 +
                      C13335 * C943 + C13401 * C109 + C13334 * C190) *
                         C273) *
                        C89783 * C89843 * C89827 * C99)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C89843 * C822 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C89843 * C823 +
                     ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C273 +
                      (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 +
                       C13335 * C6192 + C13403 * C14041 + C13336 * C14553) *
                          C89937) *
                         C89783 * C89843 * C824) *
                        C825 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C273 +
                      (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
                       C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                          C89937) *
                         C89783 * C89843 * C823 -
                     ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
                       C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                          C89937 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C273) *
                         C89783 * C89843 * C822 -
                     ((C13403 * C14042 + C13336 * C14554 + C13402 * C5920 +
                       C13335 * C6191 + C13401 * C1055 + C13334 * C1545) *
                          C89937 +
                      (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
                       C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                          C273) *
                         C89783 * C89843 * C824) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C89843 * C89827 * C96 -
          (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C89827 * C97 +
          (C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C89827 * C98 -
          ((C711 * C111 + C732 + C732 + C89937 * C717) * C89926 * C91 +
           C748 * C90 + C747 * C89) *
              C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C822 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C823 +
           ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C89843 * C824) *
              C825 +
          ((C1681 * C89 + C1680 * C90 +
            (C711 * C833 + C1666 + C1666 + C89937 * C1649) * C89926 * C91) *
               C89843 * C823 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C822 -
           ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C89926 * C91 +
            C1683 * C90 + C1682 * C89) *
               C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C13335 +
           (C711 * C830 + C1659 + C1659 + C89937 * C1646) * C13336) *
              C89783 * C89843 * C89827 * C96 -
          (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
              C89827 * C97 +
          (C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
              C89827 * C98 -
          ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C13336 +
           C3339 * C13335 + C743 * C13334) *
              C89783 * C89843 * C89827 * C99)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C822 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C823 +
           (C14651 * C13334 + C14652 * C13335 +
            (C711 * C13843 + C14638 + C14638 + C89937 * C14629) * C13336) *
               C89783 * C89843 * C824) *
              C825 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C823 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C822 -
           ((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C13336 +
            C14653 * C13335 + C1678 * C13334) *
               C89783 * C89843 * C824) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C90024 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C90025 +
           (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C89843 * C7039) *
              C89990 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C90025 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C90024 -
           (C104 * C834 + C861 + C861 + C91 * C850 + C102 * C832 + C862 + C862 +
            C90 * C848 + C100 * C831 + C863 + C863 + C89 * C847) *
               C89937 * C89926 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C90024 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C90025 +
           (C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89843 *
               C7039) *
              C89990 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C90025 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C90024 -
           ((C13337 * C13844 + C13865 + C13865 + C89783 * C13848) * C89937 *
                C13336 +
            C13889 * C13335 + C13888 * C13334) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[65] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C90024 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C90025 +
                     ((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C89843 * C7039) *
                        C89990 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      C2782 * C105 + C2783 * C91) *
                         C89937 * C89843 * C90025 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C90024 -
                     ((C186 * C842 + C89926 * C952) * C91 +
                      (C186 * C834 + C89926 * C944) * C105 + C977 * C90 +
                      C976 * C103 + C975 * C89 + C974 * C101) *
                         C89937 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C90024 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C90025 +
                     ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C89843 * C7039) *
                        C89990 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C90025 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C90024 -
                     ((C13403 * C13846 + C13336 * C13966 + C13402 * C5805 +
                       C13335 * C5867 + C13401 * C839 + C13334 * C949) *
                          C89783 +
                      (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
                       C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                          C13338) *
                         C89937 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[65] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C90024 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C90025 +
                     ((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C89843 * C7039) *
                        C89990 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      C2864 * C105 + C2865 * C91) *
                         C89926 * C89843 * C90025 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C90024 -
                     ((C273 * C842 + C89937 * C1066) * C91 +
                      (C273 * C834 + C89937 * C1058) * C105 + C1091 * C90 +
                      C1090 * C103 + C1089 * C89 + C1088 * C101) *
                         C89926 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C90024 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C90025 +
                     (C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C89843 * C7039) *
                        C89990 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C90025 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C90024 -
                     (((C273 * C13846 + C89937 * C14044) * C89783 +
                       (C273 * C13844 + C89937 * C14042) * C13338) *
                          C13336 +
                      (C14082 + C14081) * C13335 + C14074 * C13334) *
                         C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C90024 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C90025 +
           ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C89843 * C7039) *
              C89990 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C90025 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C90024 -
           ((C105 * C944 + C91 * C1172 + C103 * C942 + C90 * C1170 +
             C101 * C941 + C89 * C1169) *
                C89926 +
            (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 + C101 * C831 +
             C89 * C839) *
                C186) *
               C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C90024 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C90025 +
           (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C89843 * C7039) *
              C89990 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C90025 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C90024 -
           ((C13338 * C13964 + C89783 * C14158) * C13336 +
            (C13338 * C13844 + C89783 * C13846) * C13403 + C14195 * C13335 +
            C14194 * C13402 + C14193 * C13334 + C14192 * C13401) *
               C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C90024 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C90025 +
           ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C89843 * C7039) *
              C89990 +
          ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
               C90025 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C90024 -
           ((C416 * C834 + C1271 + C1271 + C89926 * C1254) * C91 + C1283 * C90 +
            C1282 * C89) *
               C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C90024 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C90025 +
           (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C89843 * C7039) *
              C89990 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C90025 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C90024 -
           (C13556 * C13844 + C14281 + C14281 + C13336 * C14270 +
            C13555 * C5802 + C14282 + C14282 + C13335 * C6029 + C13554 * C831 +
            C14283 + C14283 + C13334 * C1251) *
               C89783 * C89937 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C90024 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C90025 +
           (((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C89843 * C7039) *
              C89990 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            (C3098 + C3102) * C91) *
               C89843 * C90025 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C90024 -
           (((C273 * C944 + C89937 * C1364) * C89926 +
             (C273 * C834 + C89937 * C1058) * C186) *
                C91 +
            (C1385 + C1375) * C90 + (C1384 + C1372) * C89) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C90024 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C90025 +
           (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C89843 * C7039) *
              C89990 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C90025 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C90024 -
           ((C273 * C13964 + C89937 * C14358) * C13336 +
            (C273 * C13844 + C89937 * C14042) * C13403 + C14371 * C13335 +
            C14072 * C13402 + C1380 * C13334 + C1088 * C13401) *
               C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[65] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89843 * C90024 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C89843 * C90025 +
                     ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                       C105 * C832 + C91 * C840) *
                          C273 +
                      (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                       C105 * C1056 + C91 * C1464) *
                          C89937) *
                         C89926 * C89843 * C7039) *
                        C89990 +
                    (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                       C105 * C833 + C91 * C841) *
                          C273 +
                      (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                       C105 * C1057 + C91 * C1465) *
                          C89937) *
                         C89926 * C89843 * C90025 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C89843 * C90024 -
                     ((C105 * C1058 + C91 * C1466 + C103 * C1056 + C90 * C1464 +
                       C101 * C1055 + C89 * C1463) *
                          C89937 +
                      (C105 * C834 + C91 * C842 + C103 * C832 + C90 * C840 +
                       C101 * C831 + C89 * C839) *
                          C273) *
                         C89926 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89843 * C90024 -
                     (C18843 * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C89843 * C90025 +
                     (C14478 * C13334 + (C14456 + C14474) * C13335 +
                      (C18844 + C18848) * C13336) *
                         C89843 * C7039) *
                        C89990 +
                    (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
                      (C14463 + C14477) * C13336) *
                         C89843 * C90025 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C89843 * C90024 -
                     (((C13338 * C14042 + C89783 * C14446) * C89937 +
                       (C13338 * C13844 + C89783 * C13846) * C273) *
                          C13336 +
                      (C14477 + C14463) * C13335 + C14479 * C13334) *
                         C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[65] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C89843 * C90024 -
                     (C3253 * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C89843 * C90025 +
                     (((C186 * C830 + C89926 * C940) * C273 +
                       (C186 * C1054 + C89926 * C1544) * C89937) *
                          C89 +
                      (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                         C89843 * C7039) *
                        C89990 +
                    (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
                      (C3254 + C3258) * C91) *
                         C89843 * C90025 -
                     (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                         C89843 * C90024 -
                     (((C186 * C1058 + C89926 * C1548) * C89937 +
                       (C186 * C834 + C89926 * C944) * C273) *
                          C91 +
                      (C1569 + C1559) * C90 + (C1568 + C1556) * C89) *
                         C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C89843 * C90024 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C89843 * C90025 +
                     ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C273 +
                      (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 +
                       C13335 * C6192 + C13403 * C14041 + C13336 * C14553) *
                          C89937) *
                         C89783 * C89843 * C7039) *
                        C89990 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C273 +
                      (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
                       C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                          C89937) *
                         C89783 * C89843 * C90025 -
                     ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
                       C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                          C89937 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C273) *
                         C89783 * C89843 * C90024 -
                     ((C13403 * C14042 + C13336 * C14554 + C13402 * C5920 +
                       C13335 * C6191 + C13401 * C1055 + C13334 * C1545) *
                          C89937 +
                      (C13403 * C13844 + C13336 * C13964 + C13402 * C5802 +
                       C13335 * C5864 + C13401 * C831 + C13334 * C941) *
                          C273) *
                         C89783 * C89843 * C7039) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C90024 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C90025 +
           ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C89843 * C7039) *
              C89990 +
          ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C90025 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C90024 -
           ((C711 * C834 + C1667 + C1667 + C89937 * C1650) * C89926 * C91 +
            C1683 * C90 + C1682 * C89) *
               C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C90024 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C90025 +
           (C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C89843 * C7039) *
              C89990 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C90025 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C90024 -
           ((C711 * C13844 + C14641 + C14641 + C89937 * C14630) * C13336 +
            C14653 * C13335 + C1678 * C13334) *
               C89783 * C89843 * C7039) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89999 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C90024 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C89907 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89999) *
              C90025 +
          ((C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C89999 -
           (C104 * C8590 + C8600 + C8600 + C91 * C8596 + C102 * C8591 + C8601 +
            C8601 + C90 * C8597 + C100 * C8592 + C8602 + C8602 + C89 * C8598) *
               C89937 * C89926 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89999 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C90024 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89999) *
              C90025 +
          ((C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89999 -
           ((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C89937 *
                C13336 +
            C21338 * C13335 + C16878 * C13334) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89999 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C90024 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C89907 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89999) *
                        C90025 +
                    (((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C89999 -
                     ((C186 * C8593 + C89926 * C8679) * C91 +
                      (C186 * C8590 + C89926 * C8676) * C105 +
                      (C186 * C8594 + C89926 * C8680) * C90 +
                      (C186 * C8591 + C89926 * C8677) * C103 +
                      (C186 * C8595 + C89926 * C8681) * C89 +
                      (C186 * C8592 + C89926 * C8678) * C101) *
                         C89937 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C90024 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89999) *
                        C90025 +
                    (((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C89999 -
                     ((C13403 * C21329 + C13336 * C21413 + C13402 * C16851 +
                       C13335 * C16981 + C13401 * C8595 + C13334 * C8681) *
                          C89783 +
                      (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
                       C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                          C13338) *
                         C89937 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89999 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C90024 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C89907 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89999) *
                        C90025 +
                    (((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C89999 -
                     ((C273 * C8593 + C89937 * C8759) * C91 +
                      (C273 * C8590 + C89937 * C8756) * C105 +
                      (C273 * C8594 + C89937 * C8760) * C90 +
                      (C273 * C8591 + C89937 * C8757) * C103 +
                      (C273 * C8595 + C89937 * C8761) * C89 +
                      (C273 * C8592 + C89937 * C8758) * C101) *
                         C89926 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89999 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C90024 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C89907 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89999) *
                        C90025 +
                    ((C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C89999 -
                     (((C273 * C21329 + C89937 * C21489) * C89783 +
                       (C273 * C21328 + C89937 * C21488) * C13338) *
                          C13336 +
                      (C21499 + C21498) * C13335 + C21491 * C13334) *
                         C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C90024 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89999) *
              C90025 +
          (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C89999 -
           ((C105 * C8676 + C91 * C8836 + C103 * C8677 + C90 * C8837 +
             C101 * C8678 + C89 * C8838) *
                C89926 +
            (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
             C101 * C8592 + C89 * C8595) *
                C186) *
               C89937 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89999 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C90024 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C89907 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89999) *
              C90025 +
          ((C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C89999 -
           ((C13338 * C21412 + C89783 * C21573) * C13336 +
            (C13338 * C21328 + C89783 * C21329) * C13403 + C21580 * C13335 +
            C21579 * C13402 + C17228 * C13334 + C17229 * C13401) *
               C89937 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 +
                      C446 * C90 + C447 * C91) *
                         C89937 * C89999 -
                     (C2213 * C91 + C2214 * C90 +
                      (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                         C89937 * C89907) *
                        C90024 +
                    (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
                      C4630 * C90 + C4631 * C91) *
                         C89937 * C89907 -
                     (C1280 * C91 + C1281 * C90 +
                      (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                         C89937 * C89999) *
                        C90025 +
                    (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 +
                      C1282 * C90 + C1283 * C91) *
                         C89937 * C89999 -
                     ((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C91 +
                      (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C90 +
                      (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89) *
                         C89937 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C13554 * C106 + C13558 + C13558 + C13334 * C417 +
                      C13555 * C829 + C13559 + C13559 + C13335 * C1249 +
                      C13556 * C830 + C13560 + C13560 + C13336 * C1250) *
                         C89783 * C89937 * C89999 -
                     (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
                      C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
                      C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                         C89783 * C89937 * C89907) *
                        C90024 +
                    ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
                      C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
                      C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                         C89783 * C89937 * C89907 -
                     (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 +
                      C13555 * C830 + C14273 + C14273 + C13335 * C1250 +
                      C13554 * C829 + C14274 + C14274 + C13334 * C1249) *
                         C89783 * C89937 * C89999) *
                        C90025 +
                    ((C13554 * C830 + C14275 + C14275 + C13334 * C1250 +
                      C13555 * C5803 + C14276 + C14276 + C13335 * C6030 +
                      C13556 * C13843 + C14277 + C14277 + C13336 * C14269) *
                         C89783 * C89937 * C89999 -
                     (C13556 * C21328 + C21656 + C21656 + C13336 * C21654 +
                      C13555 * C16849 + C21657 + C21657 + C13335 * C17333 +
                      C13554 * C8592 + C21658 + C21658 + C13334 * C8915) *
                         C89783 * C89937 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89999 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C90024 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C89907 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89999) *
              C90025 +
          ((((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C89999 -
           (((C273 * C8676 + C89937 * C8993) * C89926 +
             (C273 * C8590 + C89937 * C8756) * C186) *
                C91 +
            ((C273 * C8677 + C89937 * C8994) * C89926 +
             (C273 * C8591 + C89937 * C8757) * C186) *
                C90 +
            ((C273 * C8678 + C89937 * C8995) * C89926 +
             (C273 * C8592 + C89937 * C8758) * C186) *
                C89) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89999 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C90024 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C89907 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89999) *
              C90025 +
          ((C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C89999 -
           ((C273 * C21412 + C89937 * C21732) * C13336 +
            (C273 * C21328 + C89937 * C21488) * C13403 + C21736 * C13335 +
            C21496 * C13402 + C17448 * C13334 + C17101 * C13401) *
               C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89999 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C89907) *
                        C90024 +
                    (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
                       C105 * C4161 + C91 * C4165) *
                          C273 +
                      (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
                       C105 * C4395 + C91 * C4843) *
                          C89937) *
                         C89926 * C89907 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C89999) *
                        C90025 +
                    (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                       C105 * C832 + C91 * C840) *
                          C273 +
                      (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                       C105 * C1056 + C91 * C1464) *
                          C89937) *
                         C89926 * C89999 -
                     ((C105 * C8756 + C91 * C9070 + C103 * C8757 + C90 * C9071 +
                       C101 * C8758 + C89 * C9072) *
                          C89937 +
                      (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
                       C101 * C8592 + C89 * C8595) *
                          C273) *
                         C89926 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89999 -
                     (C21812 * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C89907) *
                        C90024 +
                    (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
                      (C21813 + C21817) * C13336) *
                         C89907 -
                     (C18843 * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C89999) *
                        C90025 +
                    ((C14478 * C13334 + (C14456 + C14474) * C13335 +
                      (C18844 + C18848) * C13336) *
                         C89999 -
                     (((C13338 * C21488 + C89783 * C21810) * C89937 +
                       (C13338 * C21328 + C89783 * C21329) * C273) *
                          C13336 +
                      (C21817 + C21813) * C13335 + C21812 * C13334) *
                         C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C89999 -
                     (C3974 * C91 + (C2500 + C2488) * C90 +
                      ((C186 * C1986 + C89926 * C2476) * C89937 +
                       (C186 * C1762 + C89926 * C1872) * C273) *
                          C89) *
                         C89907) *
                        C90024 +
                    ((((C186 * C4159 + C89926 * C4275) * C273 +
                       (C186 * C4393 + C89926 * C4943) * C89937) *
                          C89 +
                      (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                         C89907 -
                     (C3253 * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C89999) *
                        C90025 +
                    ((((C186 * C830 + C89926 * C940) * C273 +
                       (C186 * C1054 + C89926 * C1544) * C89937) *
                          C89 +
                      (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                         C89999 -
                     (((C186 * C8756 + C89926 * C9147) * C89937 +
                       (C186 * C8590 + C89926 * C8676) * C273) *
                          C91 +
                      ((C186 * C8757 + C89926 * C9148) * C89937 +
                       (C186 * C8591 + C89926 * C8677) * C273) *
                          C90 +
                      ((C186 * C8758 + C89926 * C9149) * C89937 +
                       (C186 * C8592 + C89926 * C8678) * C273) *
                          C89) *
                         C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C89999 -
                     ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
                       C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                          C89937 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C273) *
                         C89783 * C89907) *
                        C90024 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C273 +
                      (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
                       C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                          C89937) *
                         C89783 * C89907 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C89999) *
                        C90025 +
                    (((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C273 +
                      (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 +
                       C13335 * C6192 + C13403 * C14041 + C13336 * C14553) *
                          C89937) *
                         C89783 * C89999 -
                     ((C13403 * C21488 + C13336 * C21891 + C13402 * C17081 +
                       C13335 * C17668 + C13401 * C8758 + C13334 * C9149) *
                          C89937 +
                      (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
                       C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                          C273) *
                         C89783 * C89907) *
                        C7039) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89999 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C90024 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C89907 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89999) *
              C90025 +
          (((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C89999 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C89926 * C91 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C89926 * C90 +
            (C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C89926 * C89) *
               C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89999 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C90024 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C89907 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89999) *
              C90025 +
          ((C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C89999 -
           ((C711 * C21328 + C21970 + C21970 + C89937 * C21966) * C13336 +
            C21973 * C13335 + C17785 * C13334) *
               C89783 * C89907) *
              C7039) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C89843 * C5796 -
          (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
           C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
              C89937 * C89926 * C89843 * C5797 +
          (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
           C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
              C89937 * C89926 * C89843 * C5798 -
          (C104 * C5801 + C5811 + C5811 + C91 * C5807 + C102 * C5802 + C5812 +
           C5812 + C90 * C5808 + C100 * C5803 + C5813 + C5813 + C89 * C5809) *
              C89937 * C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C5149 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C89879) *
              C5151 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C89879 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C5149) *
              C5152 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C89843 * C5149 -
           (C104 * C2695 + C2699 + C2699 + C91 * C2697 + C102 * C833 + C2700 +
            C2700 + C90 * C849 + C100 * C827 + C2701 + C2701 + C89 * C843) *
               C89937 * C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C1757 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C1758 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C1759) *
              C5149 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C1758 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C1757 -
           (C104 * C6323 + C6333 + C6333 + C91 * C6329 + C102 * C6324 + C6334 +
            C6334 + C90 * C6330 + C100 * C6325 + C6335 + C6335 + C89 * C6331) *
               C89937 * C89926 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C5149 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C89879) *
              C5151 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C89879 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C5149) *
              C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89843 * C5149 -
           ((C13337 * C5801 + C15450 + C15450 + C89783 * C5807) * C89937 *
                C13336 +
            C15458 * C13335 + C15457 * C13334) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           C13884 * C13335 + C13885 * C13336) *
              C89843 * C5796 -
          (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
              C5797 +
          (C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89843 *
              C5798 -
          ((C13337 * C18503 + C18509 + C18509 + C89783 * C18505) * C89937 *
               C13336 +
           C18513 * C13335 + C13886 * C13334) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C1757 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C1758 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            C19045 * C13335 + C19046 * C13336) *
               C1759) *
              C5149 +
          ((C16879 * C13334 + C16878 * C13335 +
            (C13337 * C16849 + C16860 + C16860 + C89783 * C16853) * C89937 *
                C13336) *
               C1758 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C1757 -
           ((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C89937 *
                C13336 +
            C19046 * C13335 + C19045 * C13334) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[67] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C89843 * C5796 -
                    (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                     (C186 * C837 + C89926 * C947) * C89 +
                     (C186 * C829 + C89926 * C939) * C101) *
                        C89937 * C89843 * C5797 +
                    ((C186 * C830 + C89926 * C940) * C101 +
                     (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                     C975 * C90 + C976 * C105 + C977 * C91) *
                        C89937 * C89843 * C5798 -
                    ((C186 * C5804 + C89926 * C5866) * C91 +
                     (C186 * C5801 + C89926 * C5863) * C105 +
                     (C186 * C5805 + C89926 * C5867) * C90 +
                     (C186 * C5802 + C89926 * C5864) * C103 +
                     (C186 * C5806 + C89926 * C5868) * C89 +
                     (C186 * C5803 + C89926 * C5865) * C101) *
                        C89937 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C5149 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C89879) *
                        C5151 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      C2782 * C105 + C2783 * C91) *
                         C89937 * C89843 * C89879 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C5149) *
                        C5152 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C89843 * C5149 -
                     ((C186 * C2696 + C89926 * C2776) * C91 +
                      (C186 * C2695 + C89926 * C2775) * C105 + C2783 * C90 +
                      C2782 * C103 + C970 * C89 + C971 * C101) *
                         C89937 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C1757 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C1758 +
                     ((C186 * C1763 + C89926 * C1873) * C101 +
                      (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                      C1908 * C90 + C1909 * C105 + C1910 * C91) *
                         C89937 * C1759) *
                        C5149 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C1758 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C1757 -
                     ((C186 * C6326 + C89926 * C6412) * C91 +
                      (C186 * C6323 + C89926 * C6409) * C105 +
                      (C186 * C6327 + C89926 * C6413) * C90 +
                      (C186 * C6324 + C89926 * C6410) * C103 +
                      (C186 * C6328 + C89926 * C6414) * C89 +
                      (C186 * C6325 + C89926 * C6411) * C101) *
                         C89937 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5151 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C89879 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C5149) *
                        C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5804 + C13336 * C5866 + C13402 * C840 +
                       C13335 * C950 + C13401 * C835 + C13334 * C945) *
                          C89783 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C89843 * C5796 -
                    ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                      C13335 * C948 + C13401 * C837 + C13334 * C947) *
                         C89783 +
                     (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                      C13335 * C940 + C13401 * C829 + C13334 * C939) *
                         C13338) *
                        C89937 * C89843 * C5797 +
                    ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                      C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                         C13338 +
                     (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                      C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                         C89783) *
                        C89937 * C89843 * C5798 -
                    ((C13403 * C18504 + C13336 * C18564 + C13402 * C13845 +
                      C13335 * C13965 + C13401 * C5806 + C13334 * C5868) *
                         C89783 +
                     (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
                      C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
                         C13338) *
                        C89937 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C1757 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C1758 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C13338 +
                      (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                       C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                          C89783) *
                         C89937 * C1759) *
                        C5149 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C1758 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C1757 -
                     ((C13403 * C19031 + C13336 * C19121 + C13402 * C14729 +
                       C13335 * C14821 + C13401 * C6328 + C13334 * C6414) *
                          C89783 +
                      (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
                       C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                          C13338) *
                         C89937 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[67] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C89843 * C5796 -
                    (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                     (C273 * C837 + C89937 * C1061) * C89 +
                     (C273 * C829 + C89937 * C1053) * C101) *
                        C89926 * C89843 * C5797 +
                    ((C273 * C830 + C89937 * C1054) * C101 +
                     (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                     C1089 * C90 + C1090 * C105 + C1091 * C91) *
                        C89926 * C89843 * C5798 -
                    ((C273 * C5804 + C89937 * C5922) * C91 +
                     (C273 * C5801 + C89937 * C5919) * C105 +
                     (C273 * C5805 + C89937 * C5923) * C90 +
                     (C273 * C5802 + C89937 * C5920) * C103 +
                     (C273 * C5806 + C89937 * C5924) * C89 +
                     (C273 * C5803 + C89937 * C5921) * C101) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C5149 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      C2864 * C105 + C2865 * C91) *
                         C89926 * C89843 * C89879 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C89843 * C5149 -
                     ((C273 * C2696 + C89937 * C2858) * C91 +
                      (C273 * C2695 + C89937 * C2857) * C105 + C2865 * C90 +
                      C2864 * C103 + C1084 * C89 + C1085 * C101) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C1757 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C1758 +
                     ((C273 * C1763 + C89937 * C1987) * C101 +
                      (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                      C2022 * C90 + C2023 * C105 + C2024 * C91) *
                         C89926 * C1759) *
                        C5149 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C1758 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C1757 -
                     ((C273 * C6326 + C89937 * C6492) * C91 +
                      (C273 * C6323 + C89937 * C6489) * C105 +
                      (C273 * C6327 + C89937 * C6493) * C90 +
                      (C273 * C6324 + C89937 * C6490) * C103 +
                      (C273 * C6328 + C89937 * C6494) * C89 +
                      (C273 * C6325 + C89937 * C6491) * C101) *
                         C89926 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C5149 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C89879 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C5149) *
                        C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89843 * C5149 -
                     (((C273 * C5804 + C89937 * C5922) * C89783 +
                       (C273 * C5801 + C89937 * C5919) * C13338) *
                          C13336 +
                      (C15610 + C15609) * C13335 + (C15608 + C15607) * C13334) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     (C14075 + C14076) * C13335 + C14083 * C13336) *
                        C89843 * C5796 -
                    (C18618 * C13336 + (C14078 + C14077) * C13335 +
                     (C14076 + C14075) * C13334) *
                        C89843 * C5797 +
                    (C14083 * C13334 + (C14080 + C14079) * C13335 +
                     (C18625 + C18626) * C13336) *
                        C89843 * C5798 -
                    (((C273 * C18504 + C89937 * C18616) * C89783 +
                      (C273 * C18503 + C89937 * C18615) * C13338) *
                         C13336 +
                     (C18626 + C18625) * C13335 + C18618 * C13334) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C1757 -
                     ((C17106 + C17107) * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C1758 +
                     (((C273 * C1763 + C89937 * C1987) * C13338 +
                       (C273 * C1771 + C89937 * C1995) * C89783) *
                          C13334 +
                      (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                         C1759) *
                        C5149 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      ((C273 * C16849 + C89937 * C17081) * C13338 +
                       (C273 * C16851 + C89937 * C17083) * C89783) *
                          C13336) *
                         C1758 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C1757 -
                     (((C273 * C19031 + C89937 * C19197) * C89783 +
                       (C273 * C19030 + C89937 * C19196) * C13338) *
                          C13336 +
                      (C19214 + C19213) * C13335 + (C19212 + C19211) * C13334) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C89843 * C5796 -
          ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
            C101 * C939 + C89 * C1167) *
               C89926 +
           (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
            C89 * C837) *
               C186) *
              C89937 * C89843 * C5797 +
          ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
            C91 * C840) *
               C186 +
           (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
            C105 * C942 + C91 * C1170) *
               C89926) *
              C89937 * C89843 * C5798 -
          ((C105 * C5863 + C91 * C5975 + C103 * C5864 + C90 * C5976 +
            C101 * C5865 + C89 * C5977) *
               C89926 +
           (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
            C101 * C5803 + C89 * C5806) *
               C186) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C5149 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C89879) *
              C5151 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C89879 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C89843 * C5149 -
           ((C105 * C2775 + C91 * C2939 + C103 * C943 + C90 * C1171 +
             C101 * C937 + C89 * C1165) *
                C89926 +
            (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
             C101 * C827 + C89 * C835) *
                C186) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C1757 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C1758 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C186 +
            (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
             C105 * C1875 + C91 * C2103) *
                C89926) *
               C89937 * C1759) *
              C5149 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C1758 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C1757 -
           ((C105 * C6409 + C91 * C6569 + C103 * C6410 + C90 * C6570 +
             C101 * C6411 + C89 * C6571) *
                C89926 +
            (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
             C101 * C6325 + C89 * C6328) *
                C186) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C5149 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C89879) *
              C5151 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C89879 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89843 * C5149 -
           ((C13338 * C5863 + C89783 * C5975) * C13336 +
            (C13338 * C5801 + C89783 * C5804) * C13403 + C15696 * C13335 +
            C15695 * C13402 + C15694 * C13334 + C15693 * C13401) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
           C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
              C89937 * C89843 * C5796 -
          (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
           C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
              C89937 * C89843 * C5797 +
          (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
           C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
              C89937 * C89843 * C5798 -
          ((C13338 * C18563 + C89783 * C18676) * C13336 +
           (C13338 * C18503 + C89783 * C18504) * C13403 + C18683 * C13335 +
           C18682 * C13402 + C14188 * C13334 + C14189 * C13401) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C1757 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C1758 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
            C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
               C89937 * C1759) *
              C5149 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + (C13338 * C16849 + C89783 * C16851) * C13403 +
            (C13338 * C16979 + C89783 * C17209) * C13336) *
               C89937 * C1758 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C1757 -
           ((C13338 * C19120 + C89783 * C19288) * C13336 +
            (C13338 * C19030 + C89783 * C19031) * C13403 + C19301 * C13335 +
            C19300 * C13402 + C19299 * C13334 + C19298 * C13401) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C89843 * C5796 -
          (C1280 * C91 + C1281 * C90 +
           (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
              C89937 * C89843 * C5797 +
          ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
           C1283 * C91) *
              C89937 * C89843 * C5798 -
          ((C416 * C5801 + C6032 + C6032 + C89926 * C6028) * C91 +
           (C416 * C5802 + C6033 + C6033 + C89926 * C6029) * C90 +
           (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C89) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C5149 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C89879) *
              C5151 +
          ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
               C89879 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C5149) *
              C5152 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C5149 -
           ((C416 * C2695 + C3018 + C3018 + C89926 * C3014) * C91 +
            C3021 * C90 + C1280 * C89) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C1757 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C1758 +
           ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
            C2215 * C90 + C2216 * C91) *
               C89937 * C1759) *
              C5149 +
          (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
            C4630 * C90 + C4631 * C91) *
               C89937 * C1758 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C1757 -
           ((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C91 +
            (C416 * C6324 + C6651 + C6651 + C89926 * C6647) * C90 +
            (C416 * C6325 + C6652 + C6652 + C89926 * C6648) * C89) *
               C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C89879) *
              C5151 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C89879 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C5149) *
              C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5801 + C15771 + C15771 + C13336 * C6028 + C13555 * C832 +
            C15772 + C15772 + C13335 * C1252 + C13554 * C827 + C15773 + C15773 +
            C13334 * C1247) *
               C89783 * C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C5796 -
          (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
           C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
           C13334 * C1249) *
              C89783 * C89937 * C89843 * C5797 +
          (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
           C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
           C14277 + C13336 * C14269) *
              C89783 * C89937 * C89843 * C5798 -
          (C13556 * C18503 + C18735 + C18735 + C13336 * C18733 +
           C13555 * C13843 + C18736 + C18736 + C13335 * C14269 +
           C13554 * C5803 + C18737 + C18737 + C13334 * C6030) *
              C89783 * C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C1757 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C1758 +
           (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
            C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
            C15059 + C13336 * C15051) *
               C89783 * C89937 * C1759) *
              C5149 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C1758 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C1757 -
           (C13556 * C19030 + C19377 + C19377 + C13336 * C19375 +
            C13555 * C14727 + C19378 + C19378 + C13335 * C15051 +
            C13554 * C6325 + C19379 + C19379 + C13334 * C6648) *
               C89783 * C89937 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C89843 * C5796 -
          (C3097 * C91 + (C1383 + C1371) * C90 +
           ((C273 * C939 + C89937 * C1359) * C89926 +
            (C273 * C829 + C89937 * C1053) * C186) *
               C89) *
              C89843 * C5797 +
          (((C273 * C830 + C89937 * C1054) * C186 +
            (C273 * C940 + C89937 * C1360) * C89926) *
               C89 +
           (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
              C89843 * C5798 -
          (((C273 * C5863 + C89937 * C6084) * C89926 +
            (C273 * C5801 + C89937 * C5919) * C186) *
               C91 +
           ((C273 * C5864 + C89937 * C6085) * C89926 +
            (C273 * C5802 + C89937 * C5920) * C186) *
               C90 +
           ((C273 * C5865 + C89937 * C6086) * C89926 +
            (C273 * C5803 + C89937 * C5921) * C186) *
               C89) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C5149 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C89879) *
              C5151 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            (C3098 + C3102) * C91) *
               C89843 * C89879 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C5149) *
              C5152 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
               C5149 -
           (((C273 * C2775 + C89937 * C3095) * C89926 +
             (C273 * C2695 + C89937 * C2857) * C186) *
                C91 +
            (C3102 + C3098) * C90 + C3097 * C89) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C1757 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C1758 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C1759) *
              C5149 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C1758 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C1757 -
           (((C273 * C6409 + C89937 * C6726) * C89926 +
             (C273 * C6323 + C89937 * C6489) * C186) *
                C91 +
            ((C273 * C6410 + C89937 * C6727) * C89926 +
             (C273 * C6324 + C89937 * C6490) * C186) *
                C90 +
            ((C273 * C6411 + C89937 * C6728) * C89926 +
             (C273 * C6325 + C89937 * C6491) * C186) *
                C89) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C5149 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C89879) *
              C5151 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C89879 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C5149) *
              C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89843 * C5149 -
           ((C273 * C5863 + C89937 * C6084) * C13336 +
            (C273 * C5801 + C89937 * C5919) * C13403 + C1381 * C13335 +
            C1090 * C13402 + C1378 * C13334 + C1085 * C13401) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
           C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
              C89783 * C89843 * C5796 -
          (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
           C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
              C89783 * C89843 * C5797 +
          (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
           C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
              C89783 * C89843 * C5798 -
          ((C273 * C18563 + C89937 * C18787) * C13336 +
           (C273 * C18503 + C89937 * C18615) * C13403 + C18791 * C13335 +
           C18623 * C13402 + C14370 * C13334 + C14071 * C13401) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C1757 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C1758 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
            C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
               C89783 * C1759) *
              C5149 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + (C273 * C16849 + C89937 * C17081) * C13403 +
            (C273 * C16979 + C89937 * C17439) * C13336) *
               C89783 * C1758 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C1757 -
           ((C273 * C19120 + C89937 * C19453) * C13336 +
            (C273 * C19030 + C89937 * C19196) * C13403 + C19460 * C13335 +
            C19209 * C13402 + C19459 * C13334 + C19207 * C13401) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[67] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                      C105 * C108 + C91 * C114) *
                         C273 +
                     (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                      C105 * C276 + C91 * C579) *
                         C89937) *
                        C89926 * C89843 * C5796 -
                    ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                      C101 * C1053 + C89 * C1461) *
                         C89937 +
                     (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                      C101 * C829 + C89 * C837) *
                         C273) *
                        C89926 * C89843 * C5797 +
                    ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                      C105 * C832 + C91 * C840) *
                         C273 +
                     (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                      C105 * C1056 + C91 * C1464) *
                         C89937) *
                        C89926 * C89843 * C5798 -
                    ((C105 * C5919 + C91 * C6137 + C103 * C5920 + C90 * C6138 +
                      C101 * C5921 + C89 * C6139) *
                         C89937 +
                     (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
                      C101 * C5803 + C89 * C5806) *
                         C273) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89843 * C5149 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                       C105 * C833 + C91 * C841) *
                          C273 +
                      (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                       C105 * C1057 + C91 * C1465) *
                          C89937) *
                         C89926 * C89843 * C89879 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                       C105 * C110 + C91 * C116) *
                          C273 +
                      (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                       C105 * C278 + C91 * C581) *
                          C89937) *
                         C89926 * C89843 * C5149 -
                     ((C105 * C2857 + C91 * C3176 + C103 * C1057 + C90 * C1465 +
                       C101 * C1051 + C89 * C1459) *
                          C89937 +
                      (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
                       C101 * C827 + C89 * C835) *
                          C273) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C1757 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C1758 +
                     ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
                       C105 * C1765 + C91 * C1773) *
                          C273 +
                      (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
                       C105 * C1989 + C91 * C2397) *
                          C89937) *
                         C89926 * C1759) *
                        C5149 +
                    (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
                       C105 * C4161 + C91 * C4165) *
                          C273 +
                      (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
                       C105 * C4395 + C91 * C4843) *
                          C89937) *
                         C89926 * C1758 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C1757 -
                     ((C105 * C6489 + C91 * C6803 + C103 * C6490 + C90 * C6804 +
                       C101 * C6491 + C89 * C6805) *
                          C89937 +
                      (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
                       C101 * C6325 + C89 * C6328) *
                          C273) *
                         C89926 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89843 * C5149 -
                     ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
                      (C14463 + C14477) * C13336) *
                         C89843 * C89879 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C89843 * C5149) *
                        C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C273 +
                       (C13338 * C276 + C89783 * C579) * C89937) *
                          C13334 +
                      (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
                         C89843 * C5149 -
                     (((C13338 * C5919 + C89783 * C6137) * C89937 +
                       (C13338 * C5801 + C89783 * C5804) * C273) *
                          C13336 +
                      (C15931 + C15925) * C13335 + (C15930 + C15922) * C13334) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C273 +
                      (C13338 * C274 + C89783 * C577) * C89937) *
                         C13334 +
                     (C14448 + C14472) * C13335 + C14478 * C13336) *
                        C89843 * C5796 -
                    (C18843 * C13336 + (C14473 + C14451) * C13335 +
                     (C14472 + C14448) * C13334) *
                        C89843 * C5797 +
                    (C14478 * C13334 + (C14456 + C14474) * C13335 +
                     (C18844 + C18848) * C13336) *
                        C89843 * C5798 -
                    (((C13338 * C18615 + C89783 * C18841) * C89937 +
                      (C13338 * C18503 + C89783 * C18504) * C273) *
                         C13336 +
                     (C18848 + C18844) * C13335 + C18843 * C13334) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C1757 -
                     ((C17567 + C17553) * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C1758 +
                     (((C13338 * C1763 + C89783 * C1771) * C273 +
                       (C13338 * C1987 + C89783 * C2395) * C89937) *
                          C13334 +
                      (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
                         C1759) *
                        C5149 +
                    (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
                      ((C13338 * C16849 + C89783 * C16851) * C273 +
                       (C13338 * C17081 + C89783 * C17548) * C89937) *
                          C13336) *
                         C1758 -
                     (C18843 * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C1757 -
                     (((C13338 * C19196 + C89783 * C19534) * C89937 +
                       (C13338 * C19030 + C89783 * C19031) * C273) *
                          C13336 +
                      (C19545 + C19539) * C13335 + (C19544 + C19536) * C13334) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[67] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C273 +
                      (C186 * C274 + C89926 * C633) * C89937) *
                         C89 +
                     (C640 + C656) * C90 + C660 * C91) *
                        C89843 * C5796 -
                    (C3253 * C91 + (C1567 + C1555) * C90 +
                     ((C186 * C1053 + C89926 * C1543) * C89937 +
                      (C186 * C829 + C89926 * C939) * C273) *
                         C89) *
                        C89843 * C5797 +
                    (((C186 * C830 + C89926 * C940) * C273 +
                      (C186 * C1054 + C89926 * C1544) * C89937) *
                         C89 +
                     (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                        C89843 * C5798 -
                    (((C186 * C5919 + C89926 * C6190) * C89937 +
                      (C186 * C5801 + C89926 * C5863) * C273) *
                         C91 +
                     ((C186 * C5920 + C89926 * C6191) * C89937 +
                      (C186 * C5802 + C89926 * C5864) * C273) *
                         C90 +
                     ((C186 * C5921 + C89926 * C6192) * C89937 +
                      (C186 * C5803 + C89926 * C5865) * C273) *
                         C89) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C89843 * C5149 -
                     (C3253 * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C89843 * C89879) *
                        C5151 +
                    (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
                      (C3254 + C3258) * C91) *
                         C89843 * C89879 -
                     (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                         C89843 * C5149) *
                        C5152 +
                    ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) *
                         C89843 * C5149 -
                     (((C186 * C2857 + C89926 * C3251) * C89937 +
                       (C186 * C2695 + C89926 * C2775) * C273) *
                          C91 +
                      (C3258 + C3254) * C90 + C3253 * C89) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C1757 -
                     (C3974 * C91 + (C2500 + C2488) * C90 +
                      ((C186 * C1986 + C89926 * C2476) * C89937 +
                       (C186 * C1762 + C89926 * C1872) * C273) *
                          C89) *
                         C1758 +
                     (((C186 * C1763 + C89926 * C1873) * C273 +
                       (C186 * C1987 + C89926 * C2477) * C89937) *
                          C89 +
                      (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
                         C1759) *
                        C5149 +
                    ((((C186 * C4159 + C89926 * C4275) * C273 +
                       (C186 * C4393 + C89926 * C4943) * C89937) *
                          C89 +
                      (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                         C1758 -
                     (C3253 * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C1757 -
                     (((C186 * C6489 + C89926 * C6880) * C89937 +
                       (C186 * C6323 + C89926 * C6409) * C273) *
                          C91 +
                      ((C186 * C6490 + C89926 * C6881) * C89937 +
                       (C186 * C6324 + C89926 * C6410) * C273) *
                          C90 +
                      ((C186 * C6491 + C89926 * C6882) * C89937 +
                       (C186 * C6325 + C89926 * C6411) * C273) *
                          C89) *
                         C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C89843 * C5149 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C89843 * C89879) *
                        C5151 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C273 +
                      (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
                       C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                          C89937) *
                         C89783 * C89843 * C89879 -
                     ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
                       C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                          C89937 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C273) *
                         C89783 * C89843 * C5149) *
                        C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C273 +
                      (C13401 * C276 + C13334 * C635 + C13402 * C1051 +
                       C13335 * C1541 + C13403 * C1056 + C13336 * C1546) *
                          C89937) *
                         C89783 * C89843 * C5149 -
                     ((C13403 * C5919 + C13336 * C6190 + C13402 * C1056 +
                       C13335 * C1546 + C13401 * C1051 + C13334 * C1541) *
                          C89937 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C273) *
                         C89783 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C273 +
                     (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                      C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                         C89937) *
                        C89783 * C89843 * C5796 -
                    ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                      C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                         C89937 +
                     (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                      C13335 * C940 + C13401 * C829 + C13334 * C939) *
                         C273) *
                        C89783 * C89843 * C5797 +
                    ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                      C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                         C273 +
                     (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 +
                      C13335 * C6192 + C13403 * C14041 + C13336 * C14553) *
                         C89937) *
                        C89783 * C89843 * C5798 -
                    ((C13403 * C18615 + C13336 * C18898 + C13402 * C14041 +
                      C13335 * C14553 + C13401 * C5921 + C13334 * C6192) *
                         C89937 +
                     (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
                      C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
                         C273) *
                        C89783 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C1757 -
                     ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
                       C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                          C89937 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C273) *
                         C89783 * C1758 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C273 +
                      (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 +
                       C13335 * C6882 + C13403 * C14897 + C13336 * C15291) *
                          C89937) *
                         C89783 * C1759) *
                        C5149 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C273 +
                      (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
                       C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                          C89937) *
                         C89783 * C1758 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C1757 -
                     ((C13403 * C19196 + C13336 * C19619 + C13402 * C14897 +
                       C13335 * C15291 + C13401 * C6491 + C13334 * C6882) *
                          C89937 +
                      (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
                       C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                          C273) *
                         C89783 * C1759) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C89843 * C5796 -
          (C1680 * C91 + C1681 * C90 +
           (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
              C89843 * C5797 +
          ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
           C1682 * C90 + C1683 * C91) *
              C89843 * C5798 -
          ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C89926 * C91 +
           (C711 * C5802 + C6248 + C6248 + C89937 * C6244) * C89926 * C90 +
           (C711 * C5803 + C6249 + C6249 + C89937 * C6245) * C89926 * C89) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C5149 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C89879) *
              C5151 +
          ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C89879 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C5149) *
              C5152 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C5149 -
           ((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C89926 * C91 +
            C3340 * C90 + C1680 * C89) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C1757 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C1759) *
              C5149 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C1758 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C1757 -
           ((C711 * C6323 + C6961 + C6961 + C89937 * C6957) * C89926 * C91 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C89926 * C90 +
            (C711 * C6325 + C6963 + C6963 + C89937 * C6959) * C89926 * C89) *
               C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C5149 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C89879) *
              C5151 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C89879 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C5149) *
              C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
               C5149 -
           ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C13336 +
            C1679 * C13335 + C1676 * C13334) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           C14650 * C13335 + C14651 * C13336) *
              C89783 * C89843 * C5796 -
          (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
              C89843 * C5797 +
          (C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
              C89843 * C5798 -
          ((C711 * C18503 + C18953 + C18953 + C89937 * C18949) * C13336 +
           C18956 * C13335 + C14652 * C13334) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C1757 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C1758 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            C19705 * C13335 + C19706 * C13336) *
               C89783 * C1759) *
              C5149 +
          ((C17786 * C13334 + C17785 * C13335 +
            (C711 * C16849 + C17775 + C17775 + C89937 * C17768) * C13336) *
               C89783 * C1758 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C1757 -
           ((C711 * C19030 + C19700 + C19700 + C89937 * C19694) * C13336 +
            C19706 * C13335 + C19705 * C13334) *
               C89783 * C1759) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
             C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                C89937 * C89926 * C89999 -
            (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
             C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
                C89937 * C89926 * C89907) *
               C5149 +
           ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
             C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
                C89937 * C89926 * C89907 -
            (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
             C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                C89937 * C89926 * C89999) *
               C89879) *
              C89990 +
          (((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
             C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
                C89937 * C89926 * C89907 -
            (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
             C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                C89937 * C89926 * C89999) *
               C5149 +
           ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
             C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                C89937 * C89926 * C89999 -
            (C104 * C4162 + C4175 + C4175 + C91 * C4170 + C102 * C4161 + C4176 +
             C4176 + C90 * C4169 + C100 * C4160 + C4177 + C4177 + C89 * C4168) *
                C89937 * C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                 C13334 +
             C13884 * C13335 + C13885 * C13336) *
                C89999 -
            (C16878 * C13336 + C16879 * C13335 +
             (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                 C13334) *
                C89907) *
               C5149 +
           ((C16879 * C13334 + C16878 * C13335 +
             (C13337 * C16849 + C16860 + C16860 + C89783 * C16853) * C89937 *
                 C13336) *
                C89907 -
            (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89999) *
               C89879) *
              C89990 +
          ((((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                 C13334 +
             C16880 * C13335 + C16881 * C13336) *
                C89907 -
            (C13888 * C13336 + C13887 * C13335 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                 C13334) *
                C89999) *
               C5149 +
           ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89999 -
            ((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C89937 *
                 C13336 +
             C16881 * C13335 + C16880 * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[68] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C101 +
                       (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                       C217 * C90 + C218 * C105 + C219 * C91) *
                          C89937 * C89999 -
                      (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                       (C186 * C1770 + C89926 * C1880) * C89 +
                       (C186 * C1762 + C89926 * C1872) * C101) *
                          C89937 * C89907) *
                         C5149 +
                     (((C186 * C4159 + C89926 * C4275) * C101 +
                       (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                       C4293 * C90 + C4294 * C105 + C4295 * C91) *
                          C89937 * C89907 -
                      (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                       (C186 * C837 + C89926 * C947) * C89 +
                       (C186 * C829 + C89926 * C939) * C101) *
                          C89937 * C89999) *
                         C89879) *
                        C89990 +
                    (((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                       C3503 * C105 + C3504 * C91) *
                          C89937 * C89907 -
                      (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                       C217 * C89 + C216 * C101) *
                          C89937 * C89999) *
                         C5149 +
                     ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                       C2782 * C105 + C2783 * C91) *
                          C89937 * C89999 -
                      ((C186 * C4166 + C89926 * C4282) * C91 +
                       (C186 * C4162 + C89926 * C4278) * C105 + C4295 * C90 +
                       C4294 * C103 + C4293 * C89 + C4292 * C101) *
                          C89937 * C89907) *
                         C89879) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                        C13335 * C939 + C13403 * C830 + C13336 * C940) *
                           C13338 +
                       (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                        C13335 * C947 + C13403 * C838 + C13336 * C948) *
                           C89783) *
                          C89937 * C89999 -
                      ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                        C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                           C89783 +
                       (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                        C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                           C13338) *
                          C89937 * C89907) *
                         C5149 +
                     (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                        C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                           C13338 +
                       (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                        C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                           C89783) *
                          C89937 * C89907 -
                      ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                        C13335 * C948 + C13401 * C837 + C13334 * C947) *
                           C89783 +
                       (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                        C13335 * C940 + C13401 * C829 + C13334 * C939) *
                           C13338) *
                          C89937 * C89999) *
                         C89879) *
                        C89990 +
                    ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                        C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                           C13338 +
                       (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                        C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                           C89783) *
                          C89937 * C89907 -
                      ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                        C13335 * C946 + C13401 * C113 + C13334 * C194) *
                           C89783 +
                       (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                        C13335 * C938 + C13401 * C107 + C13334 * C188) *
                           C13338) *
                          C89937 * C89999) *
                         C5149 +
                     (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                        C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                           C13338 +
                       (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                        C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                           C89783) *
                          C89937 * C89999 -
                      ((C13403 * C16852 + C13336 * C16982 + C13402 * C8594 +
                        C13335 * C8680 + C13401 * C4164 + C13334 * C4280) *
                           C89783 +
                       (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
                        C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                           C13338) *
                          C89937 * C89907) *
                         C89879) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C101 +
             (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
             C305 * C105 + C306 * C91) *
                C89926 * C89999 -
            (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
             (C273 * C1770 + C89937 * C1994) * C89 +
             (C273 * C1762 + C89937 * C1986) * C101) *
                C89926 * C89907) *
               C5149 +
           (((C273 * C4159 + C89937 * C4393) * C101 +
             (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
             C4411 * C90 + C4412 * C105 + C4413 * C91) *
                C89926 * C89907 -
            (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
             (C273 * C837 + C89937 * C1061) * C89 +
             (C273 * C829 + C89937 * C1053) * C101) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          (((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
             C3585 * C105 + C3586 * C91) *
                C89926 * C89907 -
            (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 + C304 * C89 +
             C303 * C101) *
                C89926 * C89999) *
               C5149 +
           ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
             C2864 * C105 + C2865 * C91) *
                C89926 * C89999 -
            ((C273 * C4166 + C89937 * C4400) * C91 +
             (C273 * C4162 + C89937 * C4396) * C105 + C4413 * C90 +
             C4412 * C103 + C4411 * C89 + C4410 * C101) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C13338 +
              (C273 * C112 + C89937 * C280) * C89783) *
                 C13334 +
             (C14075 + C14076) * C13335 + C14083 * C13336) *
                C89999 -
            ((C17106 + C17107) * C13336 + (C17108 + C17109) * C13335 +
             ((C273 * C1770 + C89937 * C1994) * C89783 +
              (C273 * C1762 + C89937 * C1986) * C13338) *
                 C13334) *
                C89907) *
               C5149 +
           (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
             ((C273 * C16849 + C89937 * C17081) * C13338 +
              (C273 * C16851 + C89937 * C17083) * C89783) *
                 C13336) *
                C89907 -
            (C18618 * C13336 + (C14078 + C14077) * C13335 +
             (C14076 + C14075) * C13334) *
                C89999) *
               C89879) *
              C89990 +
          ((((C2020 * C13338 + C2019 * C89783) * C13334 +
             (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                C89907 -
            (C14074 * C13336 + (C14059 + C14058) * C13335 +
             (C304 * C89783 + C303 * C13338) * C13334) *
                C89999) *
               C5149 +
           (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
             (C14081 + C14082) * C13336) *
                C89999 -
            (((C273 * C16852 + C89937 * C17084) * C89783 +
              (C273 * C16850 + C89937 * C17082) * C13338) *
                 C13336 +
             (C17111 + C17110) * C13335 + (C17095 + C17094) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C186 +
             (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
              C105 * C189 + C91 * C362) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
              C101 * C1872 + C89 * C2100) *
                 C89926 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C186) *
                C89937 * C89907) *
               C5149 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C186 +
             (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
              C105 * C4277 + C91 * C4513) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
              C101 * C939 + C89 * C1167) *
                 C89926 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C186) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C186 +
             (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
              C105 * C1876 + C91 * C2104) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
              C101 * C188 + C89 * C361) *
                 C89926 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C186) *
                C89937 * C89999) *
               C5149 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C186 +
             (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
              C105 * C943 + C91 * C1171) *
                 C89926) *
                C89937 * C89999 -
            ((C105 * C4278 + C91 * C4514 + C103 * C4277 + C90 * C4513 +
              C101 * C4276 + C89 * C4512) *
                 C89926 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C186) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C13401 +
             (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
             C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
                C89937 * C89999 -
            (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
             C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
             (C13338 * C1762 + C89783 * C1770) * C13401) *
                C89937 * C89907) *
               C5149 +
           ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
             C17228 * C13335 + (C13338 * C16849 + C89783 * C16851) * C13403 +
             (C13338 * C16979 + C89783 * C17209) * C13336) *
                C89937 * C89907 -
            (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
             C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          ((((C13338 * C1761 + C89783 * C1769) * C13401 +
             (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
             C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
                C89937 * C89907 -
            (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
             C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
             (C13338 * C107 + C89783 * C113) * C13401) *
                C89937 * C89999) *
               C5149 +
           ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
             C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
                C89937 * C89999 -
            ((C13338 * C16980 + C89783 * C17210) * C13336 +
             (C13338 * C16850 + C89783 * C16852) * C13403 + C17235 * C13335 +
             C17234 * C13402 + C17233 * C13334 + C17232 * C13401) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
             C447 * C91) *
                C89937 * C89999 -
            (C2213 * C91 + C2214 * C90 +
             (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                C89937 * C89907) *
               C5149 +
           (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
             C4630 * C90 + C4631 * C91) *
                C89937 * C89907 -
            (C1280 * C91 + C1281 * C90 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                C89937 * C89999) *
               C89879) *
              C89990 +
          (((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
            (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89999) *
               C5149 +
           ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89999 -
            ((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C91 +
             C4631 * C90 + C4630 * C89) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
             C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 +
             C13560 + C13336 * C1250) *
                C89783 * C89937 * C89999 -
            (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
             C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
             C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                C89783 * C89937 * C89907) *
               C5149 +
           ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
             C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
             C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                C89783 * C89937 * C89907 -
            (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
             C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 +
             C14274 + C13334 * C1249) *
                C89783 * C89937 * C89999) *
               C89879) *
              C89990 +
          (((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 +
             C13555 * C4160 + C15061 + C15061 + C13335 * C4614 +
             C13556 * C8591 + C15062 + C15062 + C13336 * C8914) *
                C89783 * C89937 * C89907 -
            (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
             C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 +
             C13563 + C13334 * C418) *
                C89783 * C89937 * C89999) *
               C5149 +
           ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
             C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
             C14280 + C13336 * C6029) *
                C89783 * C89937 * C89999 -
            (C13556 * C16850 + C17339 + C17339 + C13336 * C17334 +
             C13555 * C8591 + C17340 + C17340 + C13335 * C8914 +
             C13554 * C4160 + C17341 + C17341 + C13334 * C4614) *
                C89783 * C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C186 +
              (C273 * C187 + C89937 * C499) * C89926) *
                 C89 +
             (C506 + C522) * C90 + C526 * C91) *
                C89999 -
            (C3818 * C91 + (C2316 + C2304) * C90 +
             ((C273 * C1872 + C89937 * C2292) * C89926 +
              (C273 * C1762 + C89937 * C1986) * C186) *
                 C89) *
                C89907) *
               C5149 +
           ((((C273 * C4159 + C89937 * C4393) * C186 +
              (C273 * C4275 + C89937 * C4729) * C89926) *
                 C89 +
             (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
                C89907 -
            (C3097 * C91 + (C1383 + C1371) * C90 +
             ((C273 * C939 + C89937 * C1359) * C89926 +
              (C273 * C829 + C89937 * C1053) * C186) *
                 C89) *
                C89999) *
               C89879) *
              C89990 +
          ((((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
             (C3819 + C3823) * C91) *
                C89907 -
            (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89999) *
               C5149 +
           (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
             (C3098 + C3102) * C91) *
                C89999 -
            (((C273 * C4278 + C89937 * C4732) * C89926 +
              (C273 * C4162 + C89937 * C4396) * C186) *
                 C91 +
             (C4743 + C4737) * C90 + (C4742 + C4734) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C13401 +
             (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
             C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
                C89783 * C89999 -
            (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
             C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
             (C273 * C1762 + C89937 * C1986) * C13401) *
                C89783 * C89907) *
               C5149 +
           ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
             C17448 * C13335 + (C273 * C16849 + C89937 * C17081) * C13403 +
             (C273 * C16979 + C89937 * C17439) * C13336) *
                C89783 * C89907 -
            (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
             C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          (((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
             C17104 * C13403 + C17450 * C13336) *
                C89783 * C89907 -
            (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
             C518 * C13334 + C303 * C13401) *
                C89783 * C89999) *
               C5149 +
           ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
             C14072 * C13403 + C14371 * C13336) *
                C89783 * C89999 -
            ((C273 * C16980 + C89937 * C17440) * C13336 +
             (C273 * C16850 + C89937 * C17082) * C13403 + C17450 * C13335 +
             C17104 * C13402 + C4740 * C13334 + C4410 * C13401) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C273 +
             (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
              C105 * C276 + C91 * C579) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
              C101 * C1986 + C89 * C2394) *
                 C89937 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C273) *
                C89926 * C89907) *
               C5149 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C273 +
             (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
              C105 * C4395 + C91 * C4843) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
              C101 * C1053 + C89 * C1461) *
                 C89937 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C273) *
                C89926 * C89999) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C273 +
             (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
              C105 * C1990 + C91 * C2398) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
              C101 * C275 + C89 * C578) *
                 C89937 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C273) *
                C89926 * C89999) *
               C5149 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C273 +
             (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
              C105 * C1057 + C91 * C1465) *
                 C89937) *
                C89926 * C89999 -
            ((C105 * C4396 + C91 * C4844 + C103 * C4395 + C90 * C4843 +
              C101 * C4394 + C89 * C4842) *
                 C89937 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C273) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C273 +
              (C13338 * C274 + C89783 * C577) * C89937) *
                 C13334 +
             (C14448 + C14472) * C13335 + C14478 * C13336) *
                C89999 -
            ((C17567 + C17553) * C13336 + (C17568 + C17556) * C13335 +
             ((C13338 * C1986 + C89783 * C2394) * C89937 +
              (C13338 * C1762 + C89783 * C1770) * C273) *
                 C13334) *
                C89907) *
               C5149 +
           (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
             ((C13338 * C16849 + C89783 * C16851) * C273 +
              (C13338 * C17081 + C89783 * C17548) * C89937) *
                 C13336) *
                C89907 -
            (C18843 * C13336 + (C14473 + C14451) * C13335 +
             (C14472 + C14448) * C13334) *
                C89999) *
               C89879) *
              C89990 +
          (((((C13338 * C1761 + C89783 * C1769) * C273 +
              (C13338 * C1985 + C89783 * C2393) * C89937) *
                 C13334 +
             (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                C89907 -
            (C14479 * C13336 + (C14475 + C14457) * C13335 +
             ((C13338 * C275 + C89783 * C578) * C89937 +
              (C13338 * C107 + C89783 * C113) * C273) *
                 C13334) *
                C89999) *
               C5149 +
           (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
             (C14463 + C14477) * C13336) *
                C89999 -
            (((C13338 * C17082 + C89783 * C17549) * C89937 +
              (C13338 * C16850 + C89783 * C16852) * C273) *
                 C13336 +
             (C17570 + C17560) * C13335 + (C17569 + C17557) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C273 +
              (C186 * C274 + C89926 * C633) * C89937) *
                 C89 +
             (C640 + C656) * C90 + C660 * C91) *
                C89999 -
            (C3974 * C91 + (C2500 + C2488) * C90 +
             ((C186 * C1986 + C89926 * C2476) * C89937 +
              (C186 * C1762 + C89926 * C1872) * C273) *
                 C89) *
                C89907) *
               C5149 +
           ((((C186 * C4159 + C89926 * C4275) * C273 +
              (C186 * C4393 + C89926 * C4943) * C89937) *
                 C89 +
             (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                C89907 -
            (C3253 * C91 + (C1567 + C1555) * C90 +
             ((C186 * C1053 + C89926 * C1543) * C89937 +
              (C186 * C829 + C89926 * C939) * C273) *
                 C89) *
                C89999) *
               C89879) *
              C89990 +
          ((((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
             (C3975 + C3979) * C91) *
                C89907 -
            (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C89999) *
               C5149 +
           (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
             (C3254 + C3258) * C91) *
                C89999 -
            (((C186 * C4396 + C89926 * C4946) * C89937 +
              (C186 * C4162 + C89926 * C4278) * C273) *
                 C91 +
             (C4957 + C4951) * C90 + (C4956 + C4948) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C273 +
             (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
              C13403 * C1054 + C13336 * C1544) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
              C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                 C89937 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C273) *
                C89783 * C89907) *
               C5149 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C273 +
             (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
              C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
              C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                 C89937 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C273) *
                C89783 * C89999) *
               C89879) *
              C89990 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C273 +
             (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 +
              C13335 * C4944 + C13403 * C8757 + C13336 * C9148) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
              C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                 C89937 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C273) *
                C89783 * C89999) *
               C5149 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C273 +
             (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
              C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                 C89937) *
                C89783 * C89999 -
            ((C13403 * C17082 + C13336 * C17669 + C13402 * C8757 +
              C13335 * C9148 + C13401 * C4394 + C13334 * C4944) *
                 C89937 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C273) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
             C745 * C90 + C746 * C91) *
                C89999 -
            (C2613 * C91 + C2614 * C90 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
                C89907) *
               C5149 +
           (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
             C5074 * C90 + C5075 * C91) *
                C89907 -
            (C1680 * C91 + C1681 * C90 +
             (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                C89999) *
               C89879) *
              C89990 +
          (((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
            (C747 * C91 + C746 * C90 + C745 * C89) * C89999) *
               C5149 +
           ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89999 -
            ((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C89926 * C91 +
             C5075 * C90 + C5074 * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
             C14650 * C13335 + C14651 * C13336) *
                C89783 * C89999 -
            (C17785 * C13336 + C17786 * C13335 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
                C89783 * C89907) *
               C5149 +
           ((C17786 * C13334 + C17785 * C13335 +
             (C711 * C16849 + C17775 + C17775 + C89937 * C17768) * C13336) *
                C89783 * C89907 -
            (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
                C89999) *
               C89879) *
              C89990 +
          (((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
                C89907 -
            (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
                C89999) *
               C5149 +
           ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
                C89999 -
            ((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C13336 +
             C17787 * C13335 + C5072 * C13334) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C89843 * C5149 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C89843 * C89879) *
              C5151 +
          ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 + C859 +
            C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
               C89937 * C89926 * C89843 * C89879 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C89843 * C5149) *
              C5152 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C89843 * C5149 -
           (C104 * C2695 + C2699 + C2699 + C91 * C2697 + C102 * C833 + C2700 +
            C2700 + C90 * C849 + C100 * C827 + C2701 + C2701 + C89 * C843) *
               C89937 * C89926 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C89843 * C5796 -
          (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
           C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
              C89937 * C89926 * C89843 * C5797 +
          (C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
           C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
              C89937 * C89926 * C89843 * C5798 -
          (C104 * C5801 + C5811 + C5811 + C91 * C5807 + C102 * C5802 + C5812 +
           C5812 + C90 * C5808 + C100 * C5803 + C5813 + C5813 + C89 * C5809) *
              C89937 * C89926 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C89843 * C5149 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
               C89879) *
              C5151 +
          ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C89843 *
               C89879 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C89843 * C5149) *
              C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C89843 * C5149 -
           ((C13337 * C5801 + C15450 + C15450 + C89783 * C5807) * C89937 *
                C13336 +
            C15458 * C13335 + C15457 * C13334) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           C13884 * C13335 + C13885 * C13336) *
              C89843 * C5796 -
          (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C89843 *
              C5797 +
          (C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C89843 *
              C5798 -
          ((C13337 * C18503 + C18509 + C18509 + C89783 * C18505) * C89937 *
               C13336 +
           C18513 * C13335 + C13886 * C13334) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C89843 * C5149 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C89843 * C89879) *
                        C5151 +
                    ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                      C2782 * C105 + C2783 * C91) *
                         C89937 * C89843 * C89879 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C89843 * C5149) *
                        C5152 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C89843 * C5149 -
                     ((C186 * C2696 + C89926 * C2776) * C91 +
                      (C186 * C2695 + C89926 * C2775) * C105 + C2783 * C90 +
                      C2782 * C103 + C970 * C89 + C971 * C101) *
                         C89937 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C89843 * C5796 -
                    (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                     (C186 * C837 + C89926 * C947) * C89 +
                     (C186 * C829 + C89926 * C939) * C101) *
                        C89937 * C89843 * C5797 +
                    ((C186 * C830 + C89926 * C940) * C101 +
                     (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                     C975 * C90 + C976 * C105 + C977 * C91) *
                        C89937 * C89843 * C5798 -
                    ((C186 * C5804 + C89926 * C5866) * C91 +
                     (C186 * C5801 + C89926 * C5863) * C105 +
                     (C186 * C5805 + C89926 * C5867) * C90 +
                     (C186 * C5802 + C89926 * C5864) * C103 +
                     (C186 * C5806 + C89926 * C5868) * C89 +
                     (C186 * C5803 + C89926 * C5865) * C101) *
                        C89937 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5151 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C13338 +
                      (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                       C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                          C89783) *
                         C89937 * C89843 * C89879 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C89843 * C5149) *
                        C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C89843 * C5149 -
                     ((C13403 * C5804 + C13336 * C5866 + C13402 * C840 +
                       C13335 * C950 + C13401 * C835 + C13334 * C945) *
                          C89783 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C13338) *
                         C89937 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C89843 * C5796 -
                    ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                      C13335 * C948 + C13401 * C837 + C13334 * C947) *
                         C89783 +
                     (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                      C13335 * C940 + C13401 * C829 + C13334 * C939) *
                         C13338) *
                        C89937 * C89843 * C5797 +
                    ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                      C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                         C13338 +
                     (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                      C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                         C89783) *
                        C89937 * C89843 * C5798 -
                    ((C13403 * C18504 + C13336 * C18564 + C13402 * C13845 +
                      C13335 * C13965 + C13401 * C5806 + C13334 * C5868) *
                         C89783 +
                     (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
                      C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
                         C13338) *
                        C89937 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C89843 * C5149 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
                      C2864 * C105 + C2865 * C91) *
                         C89926 * C89843 * C89879 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C89843 * C5149 -
                     ((C273 * C2696 + C89937 * C2858) * C91 +
                      (C273 * C2695 + C89937 * C2857) * C105 + C2865 * C90 +
                      C2864 * C103 + C1084 * C89 + C1085 * C101) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C89843 * C5796 -
                    (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                     (C273 * C837 + C89937 * C1061) * C89 +
                     (C273 * C829 + C89937 * C1053) * C101) *
                        C89926 * C89843 * C5797 +
                    ((C273 * C830 + C89937 * C1054) * C101 +
                     (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                     C1089 * C90 + C1090 * C105 + C1091 * C91) *
                        C89926 * C89843 * C5798 -
                    ((C273 * C5804 + C89937 * C5922) * C91 +
                     (C273 * C5801 + C89937 * C5919) * C105 +
                     (C273 * C5805 + C89937 * C5923) * C90 +
                     (C273 * C5802 + C89937 * C5920) * C103 +
                     (C273 * C5806 + C89937 * C5924) * C89 +
                     (C273 * C5803 + C89937 * C5921) * C101) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C89843 * C5149 -
                     ((C14079 + C14080) * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
                      (C14081 + C14082) * C13336) *
                         C89843 * C89879 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C89843 * C5149) *
                        C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C89843 * C5149 -
                     (((C273 * C5804 + C89937 * C5922) * C89783 +
                       (C273 * C5801 + C89937 * C5919) * C13338) *
                          C13336 +
                      (C15610 + C15609) * C13335 + (C15608 + C15607) * C13334) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     (C14075 + C14076) * C13335 + C14083 * C13336) *
                        C89843 * C5796 -
                    (C18618 * C13336 + (C14078 + C14077) * C13335 +
                     (C14076 + C14075) * C13334) *
                        C89843 * C5797 +
                    (C14083 * C13334 + (C14080 + C14079) * C13335 +
                     (C18625 + C18626) * C13336) *
                        C89843 * C5798 -
                    (((C273 * C18504 + C89937 * C18616) * C89783 +
                      (C273 * C18503 + C89937 * C18615) * C13338) *
                         C13336 +
                     (C18626 + C18625) * C13335 + C18618 * C13334) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C89843 * C5149 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C89843 * C89879) *
              C5151 +
          (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 + C105 * C833 +
             C91 * C841) *
                C186 +
            (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
             C105 * C943 + C91 * C1171) *
                C89926) *
               C89937 * C89843 * C89879 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C89843 * C5149 -
           ((C105 * C2775 + C91 * C2939 + C103 * C943 + C90 * C1171 +
             C101 * C937 + C89 * C1165) *
                C89926 +
            (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
             C101 * C827 + C89 * C835) *
                C186) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C89843 * C5796 -
          ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
            C101 * C939 + C89 * C1167) *
               C89926 +
           (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
            C89 * C837) *
               C186) *
              C89937 * C89843 * C5797 +
          ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
            C91 * C840) *
               C186 +
           (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
            C105 * C942 + C91 * C1170) *
               C89926) *
              C89937 * C89843 * C5798 -
          ((C105 * C5863 + C91 * C5975 + C103 * C5864 + C90 * C5976 +
            C101 * C5865 + C89 * C5977) *
               C89926 +
           (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
            C101 * C5803 + C89 * C5806) *
               C186) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C89843 * C5149 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C89843 * C89879) *
              C5151 +
          ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
            C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
               C89937 * C89843 * C89879 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C89843 * C5149) *
              C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C89843 * C5149 -
           ((C13338 * C5863 + C89783 * C5975) * C13336 +
            (C13338 * C5801 + C89783 * C5804) * C13403 + C15696 * C13335 +
            C15695 * C13402 + C15694 * C13334 + C15693 * C13401) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
           C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
              C89937 * C89843 * C5796 -
          (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
           C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
              C89937 * C89843 * C5797 +
          (C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
           C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
              C89937 * C89843 * C5798 -
          ((C13338 * C18563 + C89783 * C18676) * C13336 +
           (C13338 * C18503 + C89783 * C18504) * C13403 + C18683 * C13335 +
           C18682 * C13402 + C14188 * C13334 + C14189 * C13401) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C89843 * C5149 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C89843 * C89879) *
              C5151 +
          ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C89843 *
               C89879 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C89843 * C5149) *
              C5152 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C89843 * C5149 -
           ((C416 * C2695 + C3018 + C3018 + C89926 * C3014) * C91 +
            C3021 * C90 + C1280 * C89) *
               C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C89843 * C5796 -
          (C1280 * C91 + C1281 * C90 +
           (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
              C89937 * C89843 * C5797 +
          ((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
           C1283 * C91) *
              C89937 * C89843 * C5798 -
          ((C416 * C5801 + C6032 + C6032 + C89926 * C6028) * C91 +
           (C416 * C5802 + C6033 + C6033 + C89926 * C6029) * C90 +
           (C416 * C5803 + C6034 + C6034 + C89926 * C6030) * C89) *
              C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C89843 * C89879) *
              C5151 +
          ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
            C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
            C14280 + C13336 * C6029) *
               C89783 * C89937 * C89843 * C89879 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C89843 * C5149) *
              C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C89843 * C5149 -
           (C13556 * C5801 + C15771 + C15771 + C13336 * C6028 + C13555 * C832 +
            C15772 + C15772 + C13335 * C1252 + C13554 * C827 + C15773 + C15773 +
            C13334 * C1247) *
               C89783 * C89937 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C89843 * C5796 -
          (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
           C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
           C13334 * C1249) *
              C89783 * C89937 * C89843 * C5797 +
          (C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
           C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
           C14277 + C13336 * C14269) *
              C89783 * C89937 * C89843 * C5798 -
          (C13556 * C18503 + C18735 + C18735 + C13336 * C18733 +
           C13555 * C13843 + C18736 + C18736 + C13335 * C14269 +
           C13554 * C5803 + C18737 + C18737 + C13334 * C6030) *
              C89783 * C89937 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C89843 * C5149 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C89843 * C89879) *
              C5151 +
          (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
            (C3098 + C3102) * C91) *
               C89843 * C89879 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C89843 *
               C5149) *
              C5152 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C89843 *
               C5149 -
           (((C273 * C2775 + C89937 * C3095) * C89926 +
             (C273 * C2695 + C89937 * C2857) * C186) *
                C91 +
            (C3102 + C3098) * C90 + C3097 * C89) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C89843 * C5796 -
          (C3097 * C91 + (C1383 + C1371) * C90 +
           ((C273 * C939 + C89937 * C1359) * C89926 +
            (C273 * C829 + C89937 * C1053) * C186) *
               C89) *
              C89843 * C5797 +
          (((C273 * C830 + C89937 * C1054) * C186 +
            (C273 * C940 + C89937 * C1360) * C89926) *
               C89 +
           (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
              C89843 * C5798 -
          (((C273 * C5863 + C89937 * C6084) * C89926 +
            (C273 * C5801 + C89937 * C5919) * C186) *
               C91 +
           ((C273 * C5864 + C89937 * C6085) * C89926 +
            (C273 * C5802 + C89937 * C5920) * C186) *
               C90 +
           ((C273 * C5865 + C89937 * C6086) * C89926 +
            (C273 * C5803 + C89937 * C5921) * C186) *
               C89) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C89843 * C5149 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C89843 * C89879) *
              C5151 +
          ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
            C14072 * C13403 + C14371 * C13336) *
               C89783 * C89843 * C89879 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C89843 * C5149) *
              C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C89843 * C5149 -
           ((C273 * C5863 + C89937 * C6084) * C13336 +
            (C273 * C5801 + C89937 * C5919) * C13403 + C1381 * C13335 +
            C1090 * C13402 + C1378 * C13334 + C1085 * C13401) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
           C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
              C89783 * C89843 * C5796 -
          (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
           C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
              C89783 * C89843 * C5797 +
          (C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
           C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
              C89783 * C89843 * C5798 -
          ((C273 * C18563 + C89937 * C18787) * C13336 +
           (C273 * C18503 + C89937 * C18615) * C13403 + C18791 * C13335 +
           C18623 * C13402 + C14370 * C13334 + C14071 * C13401) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C89843 * C5149 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C89843 * C89879) *
                        C5151 +
                    (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
                       C105 * C833 + C91 * C841) *
                          C273 +
                      (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
                       C105 * C1057 + C91 * C1465) *
                          C89937) *
                         C89926 * C89843 * C89879 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C89843 * C5149) *
                        C5152 +
                    (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                       C105 * C110 + C91 * C116) *
                          C273 +
                      (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                       C105 * C278 + C91 * C581) *
                          C89937) *
                         C89926 * C89843 * C5149 -
                     ((C105 * C2857 + C91 * C3176 + C103 * C1057 + C90 * C1465 +
                       C101 * C1051 + C89 * C1459) *
                          C89937 +
                      (C105 * C2695 + C91 * C2696 + C103 * C833 + C90 * C841 +
                       C101 * C827 + C89 * C835) *
                          C273) *
                         C89926 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                      C105 * C108 + C91 * C114) *
                         C273 +
                     (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                      C105 * C276 + C91 * C579) *
                         C89937) *
                        C89926 * C89843 * C5796 -
                    ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                      C101 * C1053 + C89 * C1461) *
                         C89937 +
                     (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                      C101 * C829 + C89 * C837) *
                         C273) *
                        C89926 * C89843 * C5797 +
                    ((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                      C105 * C832 + C91 * C840) *
                         C273 +
                     (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                      C105 * C1056 + C91 * C1464) *
                         C89937) *
                        C89926 * C89843 * C5798 -
                    ((C105 * C5919 + C91 * C6137 + C103 * C5920 + C90 * C6138 +
                      C101 * C5921 + C89 * C6139) *
                         C89937 +
                     (C105 * C5801 + C91 * C5804 + C103 * C5802 + C90 * C5805 +
                      C101 * C5803 + C89 * C5806) *
                         C273) *
                        C89926 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C89843 * C5149 -
                     ((C14474 + C14456) * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C89843 * C89879) *
                        C5151 +
                    (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
                      (C14463 + C14477) * C13336) *
                         C89843 * C89879 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C89843 * C5149) *
                        C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C273 +
                       (C13338 * C276 + C89783 * C579) * C89937) *
                          C13334 +
                      (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
                         C89843 * C5149 -
                     (((C13338 * C5919 + C89783 * C6137) * C89937 +
                       (C13338 * C5801 + C89783 * C5804) * C273) *
                          C13336 +
                      (C15931 + C15925) * C13335 + (C15930 + C15922) * C13334) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C273 +
                      (C13338 * C274 + C89783 * C577) * C89937) *
                         C13334 +
                     (C14448 + C14472) * C13335 + C14478 * C13336) *
                        C89843 * C5796 -
                    (C18843 * C13336 + (C14473 + C14451) * C13335 +
                     (C14472 + C14448) * C13334) *
                        C89843 * C5797 +
                    (C14478 * C13334 + (C14456 + C14474) * C13335 +
                     (C18844 + C18848) * C13336) *
                        C89843 * C5798 -
                    (((C13338 * C18615 + C89783 * C18841) * C89937 +
                      (C13338 * C18503 + C89783 * C18504) * C273) *
                         C13336 +
                     (C18848 + C18844) * C13335 + C18843 * C13334) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C89843 * C5149 -
                     (C3253 * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C89843 * C89879) *
                        C5151 +
                    (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
                      (C3254 + C3258) * C91) *
                         C89843 * C89879 -
                     (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) *
                         C89843 * C5149) *
                        C5152 +
                    ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) *
                         C89843 * C5149 -
                     (((C186 * C2857 + C89926 * C3251) * C89937 +
                       (C186 * C2695 + C89926 * C2775) * C273) *
                          C91 +
                      (C3258 + C3254) * C90 + C3253 * C89) *
                         C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C273 +
                      (C186 * C274 + C89926 * C633) * C89937) *
                         C89 +
                     (C640 + C656) * C90 + C660 * C91) *
                        C89843 * C5796 -
                    (C3253 * C91 + (C1567 + C1555) * C90 +
                     ((C186 * C1053 + C89926 * C1543) * C89937 +
                      (C186 * C829 + C89926 * C939) * C273) *
                         C89) *
                        C89843 * C5797 +
                    (((C186 * C830 + C89926 * C940) * C273 +
                      (C186 * C1054 + C89926 * C1544) * C89937) *
                         C89 +
                     (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
                        C89843 * C5798 -
                    (((C186 * C5919 + C89926 * C6190) * C89937 +
                      (C186 * C5801 + C89926 * C5863) * C273) *
                         C91 +
                     ((C186 * C5920 + C89926 * C6191) * C89937 +
                      (C186 * C5802 + C89926 * C5864) * C273) *
                         C90 +
                     ((C186 * C5921 + C89926 * C6192) * C89937 +
                      (C186 * C5803 + C89926 * C5865) * C273) *
                         C89) *
                        C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C89843 * C5149 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C89843 * C89879) *
                        C5151 +
                    (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                       C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                          C273 +
                      (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
                       C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                          C89937) *
                         C89783 * C89843 * C89879 -
                     ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
                       C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                          C89937 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C273) *
                         C89783 * C89843 * C5149) *
                        C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C273 +
                      (C13401 * C276 + C13334 * C635 + C13402 * C1051 +
                       C13335 * C1541 + C13403 * C1056 + C13336 * C1546) *
                          C89937) *
                         C89783 * C89843 * C5149 -
                     ((C13403 * C5919 + C13336 * C6190 + C13402 * C1056 +
                       C13335 * C1546 + C13401 * C1051 + C13334 * C1541) *
                          C89937 +
                      (C13403 * C5801 + C13336 * C5863 + C13402 * C832 +
                       C13335 * C942 + C13401 * C827 + C13334 * C937) *
                          C273) *
                         C89783 * C89843 * C89879) *
                        C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C273 +
                     (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                      C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                         C89937) *
                        C89783 * C89843 * C5796 -
                    ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                      C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                         C89937 +
                     (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                      C13335 * C940 + C13401 * C829 + C13334 * C939) *
                         C273) *
                        C89783 * C89843 * C5797 +
                    ((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                      C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                         C273 +
                     (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 +
                      C13335 * C6192 + C13403 * C14041 + C13336 * C14553) *
                         C89937) *
                        C89783 * C89843 * C5798 -
                    ((C13403 * C18615 + C13336 * C18898 + C13402 * C14041 +
                      C13335 * C14553 + C13401 * C5921 + C13334 * C6192) *
                         C89937 +
                     (C13403 * C18503 + C13336 * C18563 + C13402 * C13843 +
                      C13335 * C13963 + C13401 * C5803 + C13334 * C5865) *
                         C273) *
                        C89783 * C89843 * C5799) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C89843 * C5149 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C89843 * C89879) *
              C5151 +
          ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C89843 * C89879 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C89843 * C5149) *
              C5152 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C89843 * C5149 -
           ((C711 * C2695 + C3336 + C3336 + C89937 * C3332) * C89926 * C91 +
            C3340 * C90 + C1680 * C89) *
               C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C89843 * C5796 -
          (C1680 * C91 + C1681 * C90 +
           (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
              C89843 * C5797 +
          ((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
           C1682 * C90 + C1683 * C91) *
              C89843 * C5798 -
          ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C89926 * C91 +
           (C711 * C5802 + C6248 + C6248 + C89937 * C6244) * C89926 * C90 +
           (C711 * C5803 + C6249 + C6249 + C89937 * C6245) * C89926 * C89) *
              C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C89843 * C5149 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C89843 * C89879) *
              C5151 +
          ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
               C89843 * C89879 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C89843 *
               C5149) *
              C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C89843 *
               C5149 -
           ((C711 * C5801 + C6247 + C6247 + C89937 * C6243) * C13336 +
            C1679 * C13335 + C1676 * C13334) *
               C89783 * C89843 * C89879) *
              C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           C14650 * C13335 + C14651 * C13336) *
              C89783 * C89843 * C5796 -
          (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
              C89843 * C5797 +
          (C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
              C89843 * C5798 -
          ((C711 * C18503 + C18953 + C18953 + C89937 * C18949) * C13336 +
           C18956 * C13335 + C14652 * C13334) *
              C89783 * C89843 * C5799) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 +
             C126 + C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
                C89937 * C89926 * C9304 -
            (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
             C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
                C89937 * C89926 * C89907) *
               C89998 +
           ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
             C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
                C89937 * C89926 * C89907 -
            (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 +
             C853 + C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
                C89937 * C89926 * C9304) *
               C89879) *
              C89990 +
          (((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
             C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
                C89937 * C89926 * C89907 -
            (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 +
             C129 + C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
                C89937 * C89926 * C9304) *
               C89998 +
           ((C100 * C828 + C858 + C858 + C89 * C844 + C102 * C827 + C859 +
             C859 + C90 * C843 + C104 * C833 + C860 + C860 + C91 * C849) *
                C89937 * C89926 * C9304 -
            (C104 * C4162 + C4175 + C4175 + C91 * C4170 + C102 * C4161 + C4176 +
             C4176 + C90 * C4169 + C100 * C4160 + C4177 + C4177 + C89 * C4168) *
                C89937 * C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                 C13334 +
             C13884 * C13335 + C13885 * C13336) *
                C9304 -
            (C16878 * C13336 + C16879 * C13335 +
             (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                 C13334) *
                C89907) *
               C89998 +
           ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
            (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C9304) *
               C89879) *
              C89990 +
          ((((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                 C13334 +
             C16880 * C13335 + C16881 * C13336) *
                C89907 -
            (C13888 * C13336 + C13887 * C13335 +
             (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                 C13334) *
                C9304) *
               C89998 +
           ((C13887 * C13334 + C13888 * C13335 + C13889 * C13336) * C9304 -
            ((C13337 * C16850 + C16865 + C16865 + C89783 * C16854) * C89937 *
                 C13336 +
             C16881 * C13335 + C16880 * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C101 +
                       (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                       C217 * C90 + C218 * C105 + C219 * C91) *
                          C89937 * C9304 -
                      (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                       (C186 * C1770 + C89926 * C1880) * C89 +
                       (C186 * C1762 + C89926 * C1872) * C101) *
                          C89937 * C89907) *
                         C89998 +
                     (((C186 * C4159 + C89926 * C4275) * C101 +
                       (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                       C4293 * C90 + C4294 * C105 + C4295 * C91) *
                          C89937 * C89907 -
                      (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                       (C186 * C837 + C89926 * C947) * C89 +
                       (C186 * C829 + C89926 * C939) * C101) *
                          C89937 * C9304) *
                         C89879) *
                        C89990 +
                    (((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                       C3503 * C105 + C3504 * C91) *
                          C89937 * C89907 -
                      (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                       C217 * C89 + C216 * C101) *
                          C89937 * C9304) *
                         C89998 +
                     ((C973 * C101 + C972 * C89 + C971 * C103 + C970 * C90 +
                       C2782 * C105 + C2783 * C91) *
                          C89937 * C9304 -
                      ((C186 * C4166 + C89926 * C4282) * C91 +
                       (C186 * C4162 + C89926 * C4278) * C105 + C4295 * C90 +
                       C4294 * C103 + C4293 * C89 + C4292 * C101) *
                          C89937 * C89907) *
                         C89879) *
                        C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                        C13335 * C939 + C13403 * C830 + C13336 * C940) *
                           C13338 +
                       (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                        C13335 * C947 + C13403 * C838 + C13336 * C948) *
                           C89783) *
                          C89937 * C9304 -
                      ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                        C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                           C89783 +
                       (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                        C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                           C13338) *
                          C89937 * C89907) *
                         C89998 +
                     (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                        C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                           C13338 +
                       (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                        C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                           C89783) *
                          C89937 * C89907 -
                      ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                        C13335 * C948 + C13401 * C837 + C13334 * C947) *
                           C89783 +
                       (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                        C13335 * C940 + C13401 * C829 + C13334 * C939) *
                           C13338) *
                          C89937 * C9304) *
                         C89879) *
                        C89990 +
                    ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                        C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                           C13338 +
                       (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                        C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                           C89783) *
                          C89937 * C89907 -
                      ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                        C13335 * C946 + C13401 * C113 + C13334 * C194) *
                           C89783 +
                       (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                        C13335 * C938 + C13401 * C107 + C13334 * C188) *
                           C13338) *
                          C89937 * C9304) *
                         C89998 +
                     (((C13401 * C828 + C13334 * C938 + C13402 * C831 +
                        C13335 * C941 + C13403 * C5802 + C13336 * C5864) *
                           C13338 +
                       (C13401 * C836 + C13334 * C946 + C13402 * C839 +
                        C13335 * C949 + C13403 * C5805 + C13336 * C5867) *
                           C89783) *
                          C89937 * C9304 -
                      ((C13403 * C16852 + C13336 * C16982 + C13402 * C8594 +
                        C13335 * C8680 + C13401 * C4164 + C13334 * C4280) *
                           C89783 +
                       (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
                        C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                           C13338) *
                          C89937 * C89907) *
                         C89879) *
                        C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C101 +
             (C273 * C112 + C89937 * C280) * C89 + C303 * C103 + C304 * C90 +
             C305 * C105 + C306 * C91) *
                C89926 * C9304 -
            (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
             (C273 * C1770 + C89937 * C1994) * C89 +
             (C273 * C1762 + C89937 * C1986) * C101) *
                C89926 * C89907) *
               C89998 +
           (((C273 * C4159 + C89937 * C4393) * C101 +
             (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
             C4411 * C90 + C4412 * C105 + C4413 * C91) *
                C89926 * C89907 -
            (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
             (C273 * C837 + C89937 * C1061) * C89 +
             (C273 * C829 + C89937 * C1053) * C101) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          (((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
             C3585 * C105 + C3586 * C91) *
                C89926 * C89907 -
            (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 + C304 * C89 +
             C303 * C101) *
                C89926 * C9304) *
               C89998 +
           ((C1087 * C101 + C1086 * C89 + C1085 * C103 + C1084 * C90 +
             C2864 * C105 + C2865 * C91) *
                C89926 * C9304 -
            ((C273 * C4166 + C89937 * C4400) * C91 +
             (C273 * C4162 + C89937 * C4396) * C105 + C4413 * C90 +
             C4412 * C103 + C4411 * C89 + C4410 * C101) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C13338 +
              (C273 * C112 + C89937 * C280) * C89783) *
                 C13334 +
             (C14075 + C14076) * C13335 + C14083 * C13336) *
                C9304 -
            (C21491 * C13336 + (C17108 + C17109) * C13335 +
             ((C273 * C1770 + C89937 * C1994) * C89783 +
              (C273 * C1762 + C89937 * C1986) * C13338) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
             (C21498 + C21499) * C13336) *
                C89907 -
            (C18618 * C13336 + (C14078 + C14077) * C13335 +
             (C14076 + C14075) * C13334) *
                C9304) *
               C89879) *
              C89990 +
          ((((C2020 * C13338 + C2019 * C89783) * C13334 +
             (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                C89907 -
            (C14074 * C13336 + (C14059 + C14058) * C13335 +
             (C304 * C89783 + C303 * C13338) * C13334) *
                C9304) *
               C89998 +
           (((C14058 + C14059) * C13334 + (C14060 + C14061) * C13335 +
             (C14081 + C14082) * C13336) *
                C9304 -
            (((C273 * C16852 + C89937 * C17084) * C89783 +
              (C273 * C16850 + C89937 * C17082) * C13338) *
                 C13336 +
             (C17111 + C17110) * C13335 + (C17095 + C17094) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C186 +
             (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 +
              C105 * C189 + C91 * C362) *
                 C89926) *
                C89937 * C9304 -
            ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
              C101 * C1872 + C89 * C2100) *
                 C89926 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C186) *
                C89937 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C186 +
             (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
              C105 * C4277 + C91 * C4513) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
              C101 * C939 + C89 * C1167) *
                 C89926 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C186) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C186 +
             (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
              C105 * C1876 + C91 * C2104) *
                 C89926) *
                C89937 * C89907 -
            ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 +
              C101 * C188 + C89 * C361) *
                 C89926 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C186) *
                C89937 * C9304) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C186 +
             (C101 * C938 + C89 * C1166 + C103 * C937 + C90 * C1165 +
              C105 * C943 + C91 * C1171) *
                 C89926) *
                C89937 * C9304 -
            ((C105 * C4278 + C91 * C4514 + C103 * C4277 + C90 * C4513 +
              C101 * C4276 + C89 * C4512) *
                 C89926 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C186) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13338 * C106 + C89783 * C112) * C13401 +
             (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
             C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
                C89937 * C9304 -
            (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
             C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
             (C13338 * C1762 + C89783 * C1770) * C13401) *
                C89937 * C89907) *
               C89998 +
           ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
             C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
                C89937 * C89907 -
            (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
             C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          ((((C13338 * C1761 + C89783 * C1769) * C13401 +
             (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
             C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
                C89937 * C89907 -
            (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
             C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
             (C13338 * C107 + C89783 * C113) * C13401) *
                C89937 * C9304) *
               C89998 +
           ((C14190 * C13401 + C14191 * C13334 + C14192 * C13402 +
             C14193 * C13335 + C14194 * C13403 + C14195 * C13336) *
                C89937 * C9304 -
            ((C13338 * C16980 + C89783 * C17210) * C13336 +
             (C13338 * C16850 + C89783 * C16852) * C13403 + C17235 * C13335 +
             C17234 * C13402 + C17233 * C13334 + C17232 * C13401) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
             C447 * C91) *
                C89937 * C9304 -
            (C2213 * C91 + C2214 * C90 +
             (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                C89937 * C89907) *
               C89998 +
           (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
             C4630 * C90 + C4631 * C91) *
                C89937 * C89907 -
            (C1280 * C91 + C1281 * C90 +
             (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                C89937 * C9304) *
               C89879) *
              C89990 +
          (((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
            (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C9304) *
               C89998 +
           ((C1281 * C89 + C1280 * C90 + C3021 * C91) * C89937 * C9304 -
            ((C416 * C4162 + C4625 + C4625 + C89926 * C4616) * C91 +
             C4631 * C90 + C4630 * C89) *
                C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
             C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 +
             C13560 + C13336 * C1250) *
                C89783 * C89937 * C9304 -
            (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
             C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
             C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                C89783 * C89937 * C89907) *
               C89998 +
           ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
             C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
             C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                C89783 * C89937 * C89907 -
            (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
             C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 +
             C14274 + C13334 * C1249) *
                C89783 * C89937 * C9304) *
               C89879) *
              C89990 +
          (((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 +
             C13555 * C4160 + C15061 + C15061 + C13335 * C4614 +
             C13556 * C8591 + C15062 + C15062 + C13336 * C8914) *
                C89783 * C89937 * C89907 -
            (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
             C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 +
             C13563 + C13334 * C418) *
                C89783 * C89937 * C9304) *
               C89998 +
           ((C13554 * C828 + C14278 + C14278 + C13334 * C1248 + C13555 * C831 +
             C14279 + C14279 + C13335 * C1251 + C13556 * C5802 + C14280 +
             C14280 + C13336 * C6029) *
                C89783 * C89937 * C9304 -
            (C13556 * C16850 + C17339 + C17339 + C13336 * C17334 +
             C13555 * C8591 + C17340 + C17340 + C13335 * C8914 +
             C13554 * C4160 + C17341 + C17341 + C13334 * C4614) *
                C89783 * C89937 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C273 * C106 + C89937 * C274) * C186 +
              (C273 * C187 + C89937 * C499) * C89926) *
                 C89 +
             (C506 + C522) * C90 + C526 * C91) *
                C9304 -
            (C3818 * C91 + (C2316 + C2304) * C90 +
             ((C273 * C1872 + C89937 * C2292) * C89926 +
              (C273 * C1762 + C89937 * C1986) * C186) *
                 C89) *
                C89907) *
               C89998 +
           ((((C273 * C4159 + C89937 * C4393) * C186 +
              (C273 * C4275 + C89937 * C4729) * C89926) *
                 C89 +
             (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
                C89907 -
            (C3097 * C91 + (C1383 + C1371) * C90 +
             ((C273 * C939 + C89937 * C1359) * C89926 +
              (C273 * C829 + C89937 * C1053) * C186) *
                 C89) *
                C9304) *
               C89879) *
              C89990 +
          ((((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
             (C3819 + C3823) * C91) *
                C89907 -
            (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C9304) *
               C89998 +
           (((C1371 + C1383) * C89 + (C1368 + C1382) * C90 +
             (C3098 + C3102) * C91) *
                C9304 -
            (((C273 * C4278 + C89937 * C4732) * C89926 +
              (C273 * C4162 + C89937 * C4396) * C186) *
                 C91 +
             (C4743 + C4737) * C90 + (C4742 + C4734) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C13401 +
             (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
             C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
                C89783 * C9304 -
            (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
             C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
             (C273 * C1762 + C89937 * C1986) * C13401) *
                C89783 * C89907) *
               C89998 +
           ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
             C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
                C89783 * C89907 -
            (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
             C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          (((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
             C17104 * C13403 + C17450 * C13336) *
                C89783 * C89907 -
            (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
             C518 * C13334 + C303 * C13401) *
                C89783 * C9304) *
               C89998 +
           ((C1087 * C13401 + C1379 * C13334 + C1088 * C13402 + C1380 * C13335 +
             C14072 * C13403 + C14371 * C13336) *
                C89783 * C9304 -
            ((C273 * C16980 + C89937 * C17440) * C13336 +
             (C273 * C16850 + C89937 * C17082) * C13403 + C17450 * C13335 +
             C17104 * C13402 + C4740 * C13334 + C4410 * C13401) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
              C105 * C108 + C91 * C114) *
                 C273 +
             (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
              C105 * C276 + C91 * C579) *
                 C89937) *
                C89926 * C9304 -
            ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
              C101 * C1986 + C89 * C2394) *
                 C89937 +
             (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
              C101 * C1762 + C89 * C1770) *
                 C273) *
                C89926 * C89907) *
               C89998 +
           (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
              C105 * C4161 + C91 * C4165) *
                 C273 +
             (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
              C105 * C4395 + C91 * C4843) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
              C101 * C1053 + C89 * C1461) *
                 C89937 +
             (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
              C101 * C829 + C89 * C837) *
                 C273) *
                C89926 * C9304) *
               C89879) *
              C89990 +
          ((((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
              C105 * C1766 + C91 * C1774) *
                 C273 +
             (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
              C105 * C1990 + C91 * C2398) *
                 C89937) *
                C89926 * C89907 -
            ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
              C101 * C275 + C89 * C578) *
                 C89937 +
             (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
              C101 * C107 + C89 * C113) *
                 C273) *
                C89926 * C9304) *
               C89998 +
           (((C101 * C828 + C89 * C836 + C103 * C827 + C90 * C835 +
              C105 * C833 + C91 * C841) *
                 C273 +
             (C101 * C1052 + C89 * C1460 + C103 * C1051 + C90 * C1459 +
              C105 * C1057 + C91 * C1465) *
                 C89937) *
                C89926 * C9304 -
            ((C105 * C4396 + C91 * C4844 + C103 * C4395 + C90 * C4843 +
              C101 * C4394 + C89 * C4842) *
                 C89937 +
             (C105 * C4162 + C91 * C4166 + C103 * C4161 + C90 * C4165 +
              C101 * C4160 + C89 * C4164) *
                 C273) *
                C89926 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13338 * C106 + C89783 * C112) * C273 +
              (C13338 * C274 + C89783 * C577) * C89937) *
                 C13334 +
             (C14448 + C14472) * C13335 + C14478 * C13336) *
                C9304 -
            (C21812 * C13336 + (C17568 + C17556) * C13335 +
             ((C13338 * C1986 + C89783 * C2394) * C89937 +
              (C13338 * C1762 + C89783 * C1770) * C273) *
                 C13334) *
                C89907) *
               C89998 +
           (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
             (C21813 + C21817) * C13336) *
                C89907 -
            (C18843 * C13336 + (C14473 + C14451) * C13335 +
             (C14472 + C14448) * C13334) *
                C9304) *
               C89879) *
              C89990 +
          (((((C13338 * C1761 + C89783 * C1769) * C273 +
              (C13338 * C1985 + C89783 * C2393) * C89937) *
                 C13334 +
             (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                C89907 -
            (C14479 * C13336 + (C14475 + C14457) * C13335 +
             ((C13338 * C275 + C89783 * C578) * C89937 +
              (C13338 * C107 + C89783 * C113) * C273) *
                 C13334) *
                C9304) *
               C89998 +
           (((C14457 + C14475) * C13334 + (C14460 + C14476) * C13335 +
             (C14463 + C14477) * C13336) *
                C9304 -
            (((C13338 * C17082 + C89783 * C17549) * C89937 +
              (C13338 * C16850 + C89783 * C16852) * C273) *
                 C13336 +
             (C17570 + C17560) * C13335 + (C17569 + C17557) * C13334) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C186 * C106 + C89926 * C187) * C273 +
              (C186 * C274 + C89926 * C633) * C89937) *
                 C89 +
             (C640 + C656) * C90 + C660 * C91) *
                C9304 -
            (C3974 * C91 + (C2500 + C2488) * C90 +
             ((C186 * C1986 + C89926 * C2476) * C89937 +
              (C186 * C1762 + C89926 * C1872) * C273) *
                 C89) *
                C89907) *
               C89998 +
           ((((C186 * C4159 + C89926 * C4275) * C273 +
              (C186 * C4393 + C89926 * C4943) * C89937) *
                 C89 +
             (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                C89907 -
            (C3253 * C91 + (C1567 + C1555) * C90 +
             ((C186 * C1053 + C89926 * C1543) * C89937 +
              (C186 * C829 + C89926 * C939) * C273) *
                 C89) *
                C9304) *
               C89879) *
              C89990 +
          ((((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
             (C3975 + C3979) * C91) *
                C89907 -
            (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C9304) *
               C89998 +
           (((C1555 + C1567) * C89 + (C1552 + C1566) * C90 +
             (C3254 + C3258) * C91) *
                C9304 -
            (((C186 * C4396 + C89926 * C4946) * C89937 +
              (C186 * C4162 + C89926 * C4278) * C273) *
                 C91 +
             (C4957 + C4951) * C90 + (C4956 + C4948) * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
              C13403 * C830 + C13336 * C940) *
                 C273 +
             (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
              C13403 * C1054 + C13336 * C1544) *
                 C89937) *
                C89783 * C9304 -
            ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
              C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                 C89937 +
             (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
              C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                 C273) *
                C89783 * C89907) *
               C89998 +
           (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
              C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                 C273 +
             (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
              C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
              C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                 C89937 +
             (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
              C13401 * C829 + C13334 * C939) *
                 C273) *
                C89783 * C9304) *
               C89879) *
              C89990 +
          ((((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
              C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                 C273 +
             (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 +
              C13335 * C4944 + C13403 * C8757 + C13336 * C9148) *
                 C89937) *
                C89783 * C89907 -
            ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 +
              C13335 * C1542 + C13401 * C275 + C13334 * C634) *
                 C89937 +
             (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
              C13401 * C107 + C13334 * C188) *
                 C273) *
                C89783 * C9304) *
               C89998 +
           (((C13401 * C828 + C13334 * C938 + C13402 * C831 + C13335 * C941 +
              C13403 * C5802 + C13336 * C5864) *
                 C273 +
             (C13401 * C1052 + C13334 * C1542 + C13402 * C1055 +
              C13335 * C1545 + C13403 * C5920 + C13336 * C6191) *
                 C89937) *
                C89783 * C9304 -
            ((C13403 * C17082 + C13336 * C17669 + C13402 * C8757 +
              C13335 * C9148 + C13401 * C4394 + C13334 * C4944) *
                 C89937 +
             (C13403 * C16850 + C13336 * C16980 + C13402 * C8591 +
              C13335 * C8677 + C13401 * C4160 + C13334 * C4276) *
                 C273) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
             C745 * C90 + C746 * C91) *
                C9304 -
            (C2613 * C91 + C2614 * C90 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
                C89907) *
               C89998 +
           (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
             C5074 * C90 + C5075 * C91) *
                C89907 -
            (C1680 * C91 + C1681 * C90 +
             (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
                C9304) *
               C89879) *
              C89990 +
          (((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
            (C747 * C91 + C746 * C90 + C745 * C89) * C9304) *
               C89998 +
           ((C1681 * C89 + C1680 * C90 + C3340 * C91) * C9304 -
            ((C711 * C4162 + C5067 + C5067 + C89937 * C5058) * C89926 * C91 +
             C5075 * C90 + C5074 * C89) *
                C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
             C14650 * C13335 + C14651 * C13336) *
                C89783 * C9304 -
            (C17785 * C13336 + C17786 * C13335 +
             (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
                C89783 * C89907) *
               C89998 +
           ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
                C89907 -
            (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
                C9304) *
               C89879) *
              C89990 +
          (((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
                C89907 -
            (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 *
                C9304) *
               C89998 +
           ((C1677 * C13334 + C1678 * C13335 + C14653 * C13336) * C89783 *
                C9304 -
            ((C711 * C16850 + C17778 + C17778 + C89937 * C17769) * C13336 +
             C17787 * C13335 + C5072 * C13334) *
                C89783 * C89907) *
               C89879) *
              C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C90026 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C90027 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C12024) *
              C89998 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C90027 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C90026 -
           (C104 * C6323 + C6333 + C6333 + C91 * C6329 + C102 * C6324 + C6334 +
            C6334 + C90 * C6330 + C100 * C6325 + C6335 + C6335 + C89 * C6331) *
               C89937 * C89926 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C90026 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C90027 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            C19045 * C13335 + C19046 * C13336) *
               C12024) *
              C89998 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C90027 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C90026 -
           ((C13337 * C19030 + C19038 + C19038 + C89783 * C19032) * C89937 *
                C13336 +
            C19046 * C13335 + C19045 * C13334) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C90026 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C90027 +
                     ((C186 * C1763 + C89926 * C1873) * C101 +
                      (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                      C1908 * C90 + C1909 * C105 + C1910 * C91) *
                         C89937 * C12024) *
                        C89998 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C90027 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C90026 -
                     ((C186 * C6326 + C89926 * C6412) * C91 +
                      (C186 * C6323 + C89926 * C6409) * C105 +
                      (C186 * C6327 + C89926 * C6413) * C90 +
                      (C186 * C6324 + C89926 * C6410) * C103 +
                      (C186 * C6328 + C89926 * C6414) * C89 +
                      (C186 * C6325 + C89926 * C6411) * C101) *
                         C89937 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C90026 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C90027 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C13338 +
                      (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                       C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                          C89783) *
                         C89937 * C12024) *
                        C89998 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C90027 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C90026 -
                     ((C13403 * C19031 + C13336 * C19121 + C13402 * C14729 +
                       C13335 * C14821 + C13401 * C6328 + C13334 * C6414) *
                          C89783 +
                      (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
                       C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                          C13338) *
                         C89937 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C90026 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C90027 +
                     ((C273 * C1763 + C89937 * C1987) * C101 +
                      (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                      C2022 * C90 + C2023 * C105 + C2024 * C91) *
                         C89926 * C12024) *
                        C89998 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C90027 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C90026 -
                     ((C273 * C6326 + C89937 * C6492) * C91 +
                      (C273 * C6323 + C89937 * C6489) * C105 +
                      (C273 * C6327 + C89937 * C6493) * C90 +
                      (C273 * C6324 + C89937 * C6490) * C103 +
                      (C273 * C6328 + C89937 * C6494) * C89 +
                      (C273 * C6325 + C89937 * C6491) * C101) *
                         C89926 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C90026 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C90027 +
                     (((C273 * C1763 + C89937 * C1987) * C13338 +
                       (C273 * C1771 + C89937 * C1995) * C89783) *
                          C13334 +
                      (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                         C12024) *
                        C89998 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C90027 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C90026 -
                     (((C273 * C19031 + C89937 * C19197) * C89783 +
                       (C273 * C19030 + C89937 * C19196) * C13338) *
                          C13336 +
                      (C19214 + C19213) * C13335 + (C19212 + C19211) * C13334) *
                         C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C90026 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C90027 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C186 +
            (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
             C105 * C1875 + C91 * C2103) *
                C89926) *
               C89937 * C12024) *
              C89998 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C90027 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C90026 -
           ((C105 * C6409 + C91 * C6569 + C103 * C6410 + C90 * C6570 +
             C101 * C6411 + C89 * C6571) *
                C89926 +
            (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
             C101 * C6325 + C89 * C6328) *
                C186) *
               C89937 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C90026 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C90027 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
            C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
               C89937 * C12024) *
              C89998 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C90027 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C90026 -
           ((C13338 * C19120 + C89783 * C19288) * C13336 +
            (C13338 * C19030 + C89783 * C19031) * C13403 + C19301 * C13335 +
            C19300 * C13402 + C19299 * C13334 + C19298 * C13401) *
               C89937 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 +
                      C446 * C90 + C447 * C91) *
                         C89937 * C90026 -
                     (C2213 * C91 + C2214 * C90 +
                      (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
                         C89937 * C90027 +
                     ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
                      C2215 * C90 + C2216 * C91) *
                         C89937 * C12024) *
                        C89998 +
                    (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
                      C4630 * C90 + C4631 * C91) *
                         C89937 * C90027 -
                     (C1280 * C91 + C1281 * C90 +
                      (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
                         C89937 * C90026 -
                     ((C416 * C6323 + C6650 + C6650 + C89926 * C6646) * C91 +
                      (C416 * C6324 + C6651 + C6651 + C89926 * C6647) * C90 +
                      (C416 * C6325 + C6652 + C6652 + C89926 * C6648) * C89) *
                         C89937 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C13554 * C106 + C13558 + C13558 + C13334 * C417 +
                      C13555 * C829 + C13559 + C13559 + C13335 * C1249 +
                      C13556 * C830 + C13560 + C13560 + C13336 * C1250) *
                         C89783 * C89937 * C90026 -
                     (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 +
                      C13555 * C4159 + C15055 + C15055 + C13335 * C4613 +
                      C13554 * C1762 + C15056 + C15056 + C13334 * C2182) *
                         C89783 * C89937 * C90027 +
                     (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 +
                      C13555 * C6325 + C15058 + C15058 + C13335 * C6648 +
                      C13556 * C14727 + C15059 + C15059 + C13336 * C15051) *
                         C89783 * C89937 * C12024) *
                        C89998 +
                    ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 +
                      C13555 * C8592 + C17337 + C17337 + C13335 * C8915 +
                      C13556 * C16849 + C17338 + C17338 + C13336 * C17333) *
                         C89783 * C89937 * C90027 -
                     (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 +
                      C13555 * C830 + C14273 + C14273 + C13335 * C1250 +
                      C13554 * C829 + C14274 + C14274 + C13334 * C1249) *
                         C89783 * C89937 * C90026 -
                     (C13556 * C19030 + C19377 + C19377 + C13336 * C19375 +
                      C13555 * C14727 + C19378 + C19378 + C13335 * C15051 +
                      C13554 * C6325 + C19379 + C19379 + C13334 * C6648) *
                         C89783 * C89937 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C90026 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C90027 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C12024) *
              C89998 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C90027 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C90026 -
           (((C273 * C6409 + C89937 * C6726) * C89926 +
             (C273 * C6323 + C89937 * C6489) * C186) *
                C91 +
            ((C273 * C6410 + C89937 * C6727) * C89926 +
             (C273 * C6324 + C89937 * C6490) * C186) *
                C90 +
            ((C273 * C6411 + C89937 * C6728) * C89926 +
             (C273 * C6325 + C89937 * C6491) * C186) *
                C89) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C90026 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C90027 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
            C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
               C89783 * C12024) *
              C89998 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C90027 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C90026 -
           ((C273 * C19120 + C89937 * C19453) * C13336 +
            (C273 * C19030 + C89937 * C19196) * C13403 + C19460 * C13335 +
            C19209 * C13402 + C19459 * C13334 + C19207 * C13401) *
               C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C90026 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C90027 +
                     ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
                       C105 * C1765 + C91 * C1773) *
                          C273 +
                      (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
                       C105 * C1989 + C91 * C2397) *
                          C89937) *
                         C89926 * C12024) *
                        C89998 +
                    (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
                       C105 * C4161 + C91 * C4165) *
                          C273 +
                      (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
                       C105 * C4395 + C91 * C4843) *
                          C89937) *
                         C89926 * C90027 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C90026 -
                     ((C105 * C6489 + C91 * C6803 + C103 * C6490 + C90 * C6804 +
                       C101 * C6491 + C89 * C6805) *
                          C89937 +
                      (C105 * C6323 + C91 * C6326 + C103 * C6324 + C90 * C6327 +
                       C101 * C6325 + C89 * C6328) *
                          C273) *
                         C89926 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C90026 -
                     (C21812 * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C90027 +
                     (((C13338 * C1763 + C89783 * C1771) * C273 +
                       (C13338 * C1987 + C89783 * C2395) * C89937) *
                          C13334 +
                      (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
                         C12024) *
                        C89998 +
                    (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
                      (C21813 + C21817) * C13336) *
                         C90027 -
                     (C18843 * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C90026 -
                     (((C13338 * C19196 + C89783 * C19534) * C89937 +
                       (C13338 * C19030 + C89783 * C19031) * C273) *
                          C13336 +
                      (C19545 + C19539) * C13335 + (C19544 + C19536) * C13334) *
                         C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C186 * C106 + C89926 * C187) * C273 +
                       (C186 * C274 + C89926 * C633) * C89937) *
                          C89 +
                      (C640 + C656) * C90 + C660 * C91) *
                         C90026 -
                     (C3974 * C91 + (C2500 + C2488) * C90 +
                      ((C186 * C1986 + C89926 * C2476) * C89937 +
                       (C186 * C1762 + C89926 * C1872) * C273) *
                          C89) *
                         C90027 +
                     (((C186 * C1763 + C89926 * C1873) * C273 +
                       (C186 * C1987 + C89926 * C2477) * C89937) *
                          C89 +
                      (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
                         C12024) *
                        C89998 +
                    ((((C186 * C4159 + C89926 * C4275) * C273 +
                       (C186 * C4393 + C89926 * C4943) * C89937) *
                          C89 +
                      (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
                         C90027 -
                     (C3253 * C91 + (C1567 + C1555) * C90 +
                      ((C186 * C1053 + C89926 * C1543) * C89937 +
                       (C186 * C829 + C89926 * C939) * C273) *
                          C89) *
                         C90026 -
                     (((C186 * C6489 + C89926 * C6880) * C89937 +
                       (C186 * C6323 + C89926 * C6409) * C273) *
                          C91 +
                      ((C186 * C6490 + C89926 * C6881) * C89937 +
                       (C186 * C6324 + C89926 * C6410) * C273) *
                          C90 +
                      ((C186 * C6491 + C89926 * C6882) * C89937 +
                       (C186 * C6325 + C89926 * C6411) * C273) *
                          C89) *
                         C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C273 +
                      (C13401 * C274 + C13334 * C633 + C13402 * C1053 +
                       C13335 * C1543 + C13403 * C1054 + C13336 * C1544) *
                          C89937) *
                         C89783 * C90026 -
                     ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 +
                       C13335 * C4943 + C13401 * C1986 + C13334 * C2476) *
                          C89937 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C273) *
                         C89783 * C90027 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C273 +
                      (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 +
                       C13335 * C6882 + C13403 * C14897 + C13336 * C15291) *
                          C89937) *
                         C89783 * C12024) *
                        C89998 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C273 +
                      (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 +
                       C13335 * C9149 + C13403 * C17081 + C13336 * C17668) *
                          C89937) *
                         C89783 * C90027 -
                     ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 +
                       C13335 * C1544 + C13401 * C1053 + C13334 * C1543) *
                          C89937 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C273) *
                         C89783 * C90026 -
                     ((C13403 * C19196 + C13336 * C19619 + C13402 * C14897 +
                       C13335 * C15291 + C13401 * C6491 + C13334 * C6882) *
                          C89937 +
                      (C13403 * C19030 + C13336 * C19120 + C13402 * C14727 +
                       C13335 * C14819 + C13401 * C6325 + C13334 * C6411) *
                          C273) *
                         C89783 * C12024) *
                        C89879) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C90026 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C12024) *
              C89998 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C90027 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C90026 -
           ((C711 * C6323 + C6961 + C6961 + C89937 * C6957) * C89926 * C91 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C89926 * C90 +
            (C711 * C6325 + C6963 + C6963 + C89937 * C6959) * C89926 * C89) *
               C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C90026 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            C19705 * C13335 + C19706 * C13336) *
               C89783 * C12024) *
              C89998 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C90027 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C90026 -
           ((C711 * C19030 + C19700 + C19700 + C89937 * C19694) * C13336 +
            C19706 * C13335 + C19705 * C13334) *
               C89783 * C12024) *
              C89879) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C9304 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C822 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C89907 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C9304) *
              C823 +
          ((C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C9304 -
           (C104 * C8590 + C8600 + C8600 + C91 * C8596 + C102 * C8591 + C8601 +
            C8601 + C90 * C8597 + C100 * C8592 + C8602 + C8602 + C89 * C8598) *
               C89937 * C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C9304 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C89827 * C5151 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C89907 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C9304) *
              C89827 * C5152 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C9304 -
           (C104 * C3416 + C3420 + C3420 + C91 * C3418 + C102 * C1766 + C3421 +
            C3421 + C90 * C1782 + C100 * C1760 + C3422 + C3422 + C89 * C1776) *
               C89937 * C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
           C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
              C89937 * C89926 * C10614 -
          (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
           C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
              C89937 * C89926 * C10615 +
          (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
           C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
              C89937 * C89926 * C10616 -
          (C104 * C10618 + C10628 + C10628 + C91 * C10624 + C102 * C10619 +
           C10629 + C10629 + C90 * C10625 + C100 * C10620 + C10630 + C10630 +
           C89 * C10626) *
              C89937 * C89926 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5151 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            C16880 * C13335 + C16881 * C13336) *
               C89907 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C9304) *
              C89827 * C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C9304 -
           ((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C89937 *
                C13336 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C89937 *
                C13335 +
            (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C822 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C9304) *
              C823 +
          ((C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C9304 -
           ((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C89937 *
                C13336 +
            C21338 * C13335 + C16878 * C13334) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 * C13334 +
           C13884 * C13335 + C13885 * C13336) *
              C10614 -
          (C16878 * C13336 + C16879 * C13335 +
           (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
               C13334) *
              C10615 +
          ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
               C13334 +
           C19045 * C13335 + C19046 * C13336) *
              C10616 -
          ((C13337 * C23355 + C23362 + C23362 + C89783 * C23359) * C89937 *
               C13336 +
           (C13337 * C23356 + C23363 + C23363 + C89783 * C23360) * C89937 *
               C13335 +
           (C13337 * C10620 + C23364 + C23364 + C89783 * C10626) * C89937 *
               C13334) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C9304 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C822 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C89907 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C9304) *
                        C823 +
                    (((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C9304 -
                     ((C186 * C8593 + C89926 * C8679) * C91 +
                      (C186 * C8590 + C89926 * C8676) * C105 +
                      (C186 * C8594 + C89926 * C8680) * C90 +
                      (C186 * C8591 + C89926 * C8677) * C103 +
                      (C186 * C8595 + C89926 * C8681) * C89 +
                      (C186 * C8592 + C89926 * C8678) * C101) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C9304 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      C3503 * C105 + C3504 * C91) *
                         C89937 * C89907 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C9304 -
                     ((C186 * C3417 + C89926 * C3497) * C91 +
                      (C186 * C3416 + C89926 * C3496) * C105 + C3504 * C90 +
                      C3503 * C103 + C1903 * C89 + C1904 * C101) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C186 * C106 + C89926 * C187) * C101 +
                     (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                     C217 * C90 + C218 * C105 + C219 * C91) *
                        C89937 * C10614 -
                    (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                     (C186 * C1770 + C89926 * C1880) * C89 +
                     (C186 * C1762 + C89926 * C1872) * C101) *
                        C89937 * C10615 +
                    ((C186 * C1763 + C89926 * C1873) * C101 +
                     (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                     C1908 * C90 + C1909 * C105 + C1910 * C91) *
                        C89937 * C10616 -
                    ((C186 * C10621 + C89926 * C10683) * C91 +
                     (C186 * C10618 + C89926 * C10680) * C105 +
                     (C186 * C10622 + C89926 * C10684) * C90 +
                     (C186 * C10619 + C89926 * C10681) * C103 +
                     (C186 * C10623 + C89926 * C10685) * C89 +
                     (C186 * C10620 + C89926 * C10682) * C101) *
                        C89937 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8593 + C13336 * C8679 + C13402 * C4165 +
                       C13335 * C4281 + C13401 * C1768 + C13334 * C1878) *
                          C89783 +
                      (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 +
                       C13335 * C4277 + C13401 * C1760 + C13334 * C1870) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C822 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C9304) *
                        C823 +
                    (((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C21329 + C13336 * C21413 + C13402 * C16851 +
                       C13335 * C16981 + C13401 * C8595 + C13334 * C8681) *
                          C89783 +
                      (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
                       C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                          C13338) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                      C13335 * C939 + C13403 * C830 + C13336 * C940) *
                         C13338 +
                     (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                      C13335 * C947 + C13403 * C838 + C13336 * C948) *
                         C89783) *
                        C89937 * C10614 -
                    ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                      C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                         C89783 +
                     (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                      C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                         C13338) *
                        C89937 * C10615 +
                    ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                      C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                         C13338 +
                     (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                      C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                         C89783) *
                        C89937 * C10616 -
                    ((C13403 * C23357 + C13336 * C23416 + C13402 * C23358 +
                      C13335 * C23417 + C13401 * C10623 + C13334 * C10685) *
                         C89783 +
                     (C13403 * C23355 + C13336 * C23414 + C13402 * C23356 +
                      C13335 * C23415 + C13401 * C10620 + C13334 * C10682) *
                         C13338) *
                        C89937 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C9304 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C822 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C89907 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C9304) *
                        C823 +
                    (((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C9304 -
                     ((C273 * C8593 + C89937 * C8759) * C91 +
                      (C273 * C8590 + C89937 * C8756) * C105 +
                      (C273 * C8594 + C89937 * C8760) * C90 +
                      (C273 * C8591 + C89937 * C8757) * C103 +
                      (C273 * C8595 + C89937 * C8761) * C89 +
                      (C273 * C8592 + C89937 * C8758) * C101) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C9304 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      C3585 * C105 + C3586 * C91) *
                         C89926 * C89907 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C9304 -
                     ((C273 * C3417 + C89937 * C3579) * C91 +
                      (C273 * C3416 + C89937 * C3578) * C105 + C3586 * C90 +
                      C3585 * C103 + C2017 * C89 + C2018 * C101) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C273 * C106 + C89937 * C274) * C101 +
                     (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                     C304 * C90 + C305 * C105 + C306 * C91) *
                        C89926 * C10614 -
                    (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                     (C273 * C1770 + C89937 * C1994) * C89 +
                     (C273 * C1762 + C89937 * C1986) * C101) *
                        C89926 * C10615 +
                    ((C273 * C1763 + C89937 * C1987) * C101 +
                     (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                     C2022 * C90 + C2023 * C105 + C2024 * C91) *
                        C89926 * C10616 -
                    ((C273 * C10621 + C89937 * C10739) * C91 +
                     (C273 * C10618 + C89937 * C10736) * C105 +
                     (C273 * C10622 + C89937 * C10740) * C90 +
                     (C273 * C10619 + C89937 * C10737) * C103 +
                     (C273 * C10623 + C89937 * C10741) * C89 +
                     (C273 * C10620 + C89937 * C10738) * C101) *
                        C89926 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C89827 * C5151 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                         C89907 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C9304) *
                        C89827 * C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C9304 -
                     (((C273 * C8593 + C89937 * C8759) * C89783 +
                       (C273 * C8590 + C89937 * C8756) * C13338) *
                          C13336 +
                      (C4413 * C89783 + C4412 * C13338) * C13335 +
                      (C2017 * C89783 + C2018 * C13338) * C13334) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C822 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C89907 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C9304) *
                        C823 +
                    ((C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C9304 -
                     (((C273 * C21329 + C89937 * C21489) * C89783 +
                       (C273 * C21328 + C89937 * C21488) * C13338) *
                          C13336 +
                      (C21499 + C21498) * C13335 + C21491 * C13334) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C13338 +
                      (C273 * C112 + C89937 * C280) * C89783) *
                         C13334 +
                     (C14075 + C14076) * C13335 + C14083 * C13336) *
                        C10614 -
                    (C21491 * C13336 + (C17108 + C17109) * C13335 +
                     ((C273 * C1770 + C89937 * C1994) * C89783 +
                      (C273 * C1762 + C89937 * C1986) * C13338) *
                         C13334) *
                        C10615 +
                    (((C273 * C1763 + C89937 * C1987) * C13338 +
                      (C273 * C1771 + C89937 * C1995) * C89783) *
                         C13334 +
                     (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                        C10616 -
                    (((C273 * C23357 + C89937 * C23470) * C89783 +
                      (C273 * C23355 + C89937 * C23468) * C13338) *
                         C13336 +
                     ((C273 * C23358 + C89937 * C23471) * C89783 +
                      (C273 * C23356 + C89937 * C23469) * C13338) *
                         C13335 +
                     ((C273 * C10623 + C89937 * C10741) * C89783 +
                      (C273 * C10620 + C89937 * C10738) * C13338) *
                         C13334) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C822 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C9304) *
              C823 +
          (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C8676 + C91 * C8836 + C103 * C8677 + C90 * C8837 +
             C101 * C8678 + C89 * C8838) *
                C89926 +
            (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
             C101 * C8592 + C89 * C8595) *
                C186) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C3496 + C91 * C3660 + C103 * C1876 + C90 * C2104 +
             C101 * C1870 + C89 * C2098) *
                C89926 +
            (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
             C101 * C1760 + C89 * C1768) *
                C186) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
            C91 * C114) *
               C186 +
           (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
            C91 * C362) *
               C89926) *
              C89937 * C10614 -
          ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
            C101 * C1872 + C89 * C2100) *
               C89926 +
           (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
            C101 * C1762 + C89 * C1770) *
               C186) *
              C89937 * C10615 +
          ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
            C105 * C1765 + C91 * C1773) *
               C186 +
           (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
            C105 * C1875 + C91 * C2103) *
               C89926) *
              C89937 * C10616 -
          ((C105 * C10680 + C91 * C10792 + C103 * C10681 + C90 * C10793 +
            C101 * C10682 + C89 * C10794) *
               C89926 +
           (C105 * C10618 + C91 * C10621 + C103 * C10619 + C90 * C10622 +
            C101 * C10620 + C89 * C10623) *
               C186) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
            C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
               C89937 * C89907 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C9304 -
           ((C13338 * C8676 + C89783 * C8836) * C13336 +
            (C13338 * C8590 + C89783 * C8593) * C13403 +
            (C13338 * C4277 + C89783 * C4513) * C13335 +
            (C13338 * C4161 + C89783 * C4165) * C13402 +
            (C13338 * C1870 + C89783 * C2098) * C13334 +
            (C13338 * C1760 + C89783 * C1768) * C13401) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C822 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C89907 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C9304) *
              C823 +
          ((C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C9304 -
           ((C13338 * C21412 + C89783 * C21573) * C13336 +
            (C13338 * C21328 + C89783 * C21329) * C13403 + C21580 * C13335 +
            C21579 * C13402 + C17228 * C13334 + C17229 * C13401) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13338 * C106 + C89783 * C112) * C13401 +
           (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
           C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
              C89937 * C10614 -
          (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
           C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
           (C13338 * C1762 + C89783 * C1770) * C13401) *
              C89937 * C10615 +
          ((C13338 * C1763 + C89783 * C1771) * C13401 +
           (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
           C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
              C89937 * C10616 -
          ((C13338 * C23414 + C89783 * C23522) * C13336 +
           (C13338 * C23355 + C89783 * C23357) * C13403 +
           (C13338 * C23415 + C89783 * C23523) * C13335 +
           (C13338 * C23356 + C89783 * C23358) * C13402 +
           (C13338 * C10682 + C89783 * C10794) * C13334 +
           (C13338 * C10620 + C89783 * C10623) * C13401) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C9304 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C822 +
          (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
            C4630 * C90 + C4631 * C91) *
               C89937 * C89907 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C9304) *
              C823 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C9304 -
           ((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C91 +
            (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C90 +
            (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C9304 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C89827 * C5151 +
          ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C9304) *
              C89827 * C5152 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C9304 -
           ((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C91 +
            C3742 * C90 + C2213 * C89) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
           C447 * C91) *
              C89937 * C10614 -
          (C2213 * C91 + C2214 * C90 +
           (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
              C89937 * C10615 +
          ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 + C2215 * C90 +
           C2216 * C91) *
              C89937 * C10616 -
          ((C416 * C10618 + C10849 + C10849 + C89926 * C10845) * C91 +
           (C416 * C10619 + C10850 + C10850 + C89926 * C10846) * C90 +
           (C416 * C10620 + C10851 + C10851 + C89926 * C10847) * C89) *
              C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C89827 * C5151 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C89907 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C9304) *
              C89827 * C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C9304 -
           (C13556 * C8590 + C16453 + C16453 + C13336 * C8913 + C13555 * C4161 +
            C16454 + C16454 + C13335 * C4615 + C13554 * C1760 + C16455 +
            C16455 + C13334 * C2180) *
               C89783 * C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C822 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C89907 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C9304) *
              C823 +
          ((C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C9304 -
           (C13556 * C21328 + C21656 + C21656 + C13336 * C21654 +
            C13555 * C16849 + C21657 + C21657 + C13335 * C17333 +
            C13554 * C8592 + C21658 + C21658 + C13334 * C8915) *
               C89783 * C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
           C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
           C13336 * C1250) *
              C89783 * C89937 * C10614 -
          (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
           C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 + C15056 +
           C13334 * C2182) *
              C89783 * C89937 * C10615 +
          (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
           C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
           C15059 + C13336 * C15051) *
              C89783 * C89937 * C10616 -
          (C13556 * C23355 + C23577 + C23577 + C13336 * C23574 +
           C13555 * C23356 + C23578 + C23578 + C13335 * C23575 +
           C13554 * C10620 + C23579 + C23579 + C13334 * C10847) *
              C89783 * C89937 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C9304 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C822 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C89907 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C9304) *
              C823 +
          ((((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C9304 -
           (((C273 * C8676 + C89937 * C8993) * C89926 +
             (C273 * C8590 + C89937 * C8756) * C186) *
                C91 +
            ((C273 * C8677 + C89937 * C8994) * C89926 +
             (C273 * C8591 + C89937 * C8757) * C186) *
                C90 +
            ((C273 * C8678 + C89937 * C8995) * C89926 +
             (C273 * C8592 + C89937 * C8758) * C186) *
                C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C9304 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C89827 * C5151 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            (C3819 + C3823) * C91) *
               C89907 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C9304) *
              C89827 * C5152 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C9304 -
           (((C273 * C3496 + C89937 * C3816) * C89926 +
             (C273 * C3416 + C89937 * C3578) * C186) *
                C91 +
            (C3823 + C3819) * C90 + C3818 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C186 +
            (C273 * C187 + C89937 * C499) * C89926) *
               C89 +
           (C506 + C522) * C90 + C526 * C91) *
              C10614 -
          (C3818 * C91 + (C2316 + C2304) * C90 +
           ((C273 * C1872 + C89937 * C2292) * C89926 +
            (C273 * C1762 + C89937 * C1986) * C186) *
               C89) *
              C10615 +
          (((C273 * C1763 + C89937 * C1987) * C186 +
            (C273 * C1873 + C89937 * C2293) * C89926) *
               C89 +
           (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
              C10616 -
          (((C273 * C10680 + C89937 * C10901) * C89926 +
            (C273 * C10618 + C89937 * C10736) * C186) *
               C91 +
           ((C273 * C10681 + C89937 * C10902) * C89926 +
            (C273 * C10619 + C89937 * C10737) * C186) *
               C90 +
           ((C273 * C10682 + C89937 * C10903) * C89926 +
            (C273 * C10620 + C89937 * C10738) * C186) *
               C89) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            C17104 * C13403 + C17450 * C13336) *
               C89783 * C89907 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C9304) *
              C89827 * C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C9304 -
           ((C273 * C8676 + C89937 * C8993) * C13336 +
            (C273 * C8590 + C89937 * C8756) * C13403 + C4741 * C13335 +
            C4412 * C13402 + C2311 * C13334 + C2018 * C13401) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C822 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C89907 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C9304) *
              C823 +
          ((C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C9304 -
           ((C273 * C21412 + C89937 * C21732) * C13336 +
            (C273 * C21328 + C89937 * C21488) * C13403 + C21736 * C13335 +
            C21496 * C13402 + C17448 * C13334 + C17101 * C13401) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C273 * C106 + C89937 * C274) * C13401 +
           (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
           C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
              C89783 * C10614 -
          (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
           C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
           (C273 * C1762 + C89937 * C1986) * C13401) *
              C89783 * C10615 +
          ((C273 * C1763 + C89937 * C1987) * C13401 +
           (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
           C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
              C89783 * C10616 -
          ((C273 * C23414 + C89937 * C23629) * C13336 +
           (C273 * C23355 + C89937 * C23468) * C13403 +
           (C273 * C23415 + C89937 * C23630) * C13335 +
           (C273 * C23356 + C89937 * C23469) * C13402 +
           (C273 * C10682 + C89937 * C10903) * C13334 +
           (C273 * C10620 + C89937 * C10738) * C13401) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C89907) *
                        C822 +
                    (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
                       C105 * C4161 + C91 * C4165) *
                          C273 +
                      (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
                       C105 * C4395 + C91 * C4843) *
                          C89937) *
                         C89926 * C89907 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C9304) *
                        C823 +
                    (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                       C105 * C832 + C91 * C840) *
                          C273 +
                      (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                       C105 * C1056 + C91 * C1464) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C8756 + C91 * C9070 + C103 * C8757 + C90 * C9071 +
                       C101 * C8758 + C89 * C9072) *
                          C89937 +
                      (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
                       C101 * C8592 + C89 * C8595) *
                          C273) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
                       C105 * C1766 + C91 * C1774) *
                          C273 +
                      (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
                       C105 * C1990 + C91 * C2398) *
                          C89937) *
                         C89926 * C89907 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                       C105 * C110 + C91 * C116) *
                          C273 +
                      (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                       C105 * C278 + C91 * C581) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C3578 + C91 * C3897 + C103 * C1990 + C90 * C2398 +
                       C101 * C1984 + C89 * C2392) *
                          C89937 +
                      (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
                       C101 * C1760 + C89 * C1768) *
                          C273) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                      C105 * C108 + C91 * C114) *
                         C273 +
                     (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                      C105 * C276 + C91 * C579) *
                         C89937) *
                        C89926 * C10614 -
                    ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                      C101 * C1986 + C89 * C2394) *
                         C89937 +
                     (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                      C101 * C1762 + C89 * C1770) *
                         C273) *
                        C89926 * C10615 +
                    ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
                      C105 * C1765 + C91 * C1773) *
                         C273 +
                     (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
                      C105 * C1989 + C91 * C2397) *
                         C89937) *
                        C89926 * C10616 -
                    ((C105 * C10736 + C91 * C10954 + C103 * C10737 +
                      C90 * C10955 + C101 * C10738 + C89 * C10956) *
                         C89937 +
                     (C105 * C10618 + C91 * C10621 + C103 * C10619 +
                      C90 * C10622 + C101 * C10620 + C89 * C10623) *
                         C273) *
                        C89926 * C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C9304 -
                     (C21812 * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C89907) *
                        C89827 * C5151 +
                    ((((C13338 * C1761 + C89783 * C1769) * C273 +
                       (C13338 * C1985 + C89783 * C2393) * C89937) *
                          C13334 +
                      (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                         C89907 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C9304) *
                        C89827 * C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C273 +
                       (C13338 * C276 + C89783 * C579) * C89937) *
                          C13334 +
                      (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
                         C9304 -
                     (((C13338 * C8756 + C89783 * C9070) * C89937 +
                       (C13338 * C8590 + C89783 * C8593) * C273) *
                          C13336 +
                      ((C13338 * C4395 + C89783 * C4843) * C89937 +
                       (C13338 * C4161 + C89783 * C4165) * C273) *
                          C13335 +
                      ((C13338 * C1984 + C89783 * C2392) * C89937 +
                       (C13338 * C1760 + C89783 * C1768) * C273) *
                          C13334) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C9304 -
                     (C21812 * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C89907) *
                        C822 +
                    (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
                      (C21813 + C21817) * C13336) *
                         C89907 -
                     (C18843 * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C9304) *
                        C823 +
                    ((C14478 * C13334 + (C14456 + C14474) * C13335 +
                      (C18844 + C18848) * C13336) *
                         C9304 -
                     (((C13338 * C21488 + C89783 * C21810) * C89937 +
                       (C13338 * C21328 + C89783 * C21329) * C273) *
                          C13336 +
                      (C21817 + C21813) * C13335 + C21812 * C13334) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13338 * C106 + C89783 * C112) * C273 +
                      (C13338 * C274 + C89783 * C577) * C89937) *
                         C13334 +
                     (C14448 + C14472) * C13335 + C14478 * C13336) *
                        C10614 -
                    (C21812 * C13336 + (C17568 + C17556) * C13335 +
                     ((C13338 * C1986 + C89783 * C2394) * C89937 +
                      (C13338 * C1762 + C89783 * C1770) * C273) *
                         C13334) *
                        C10615 +
                    (((C13338 * C1763 + C89783 * C1771) * C273 +
                      (C13338 * C1987 + C89783 * C2395) * C89937) *
                         C13334 +
                     (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
                        C10616 -
                    (((C13338 * C23468 + C89783 * C23681) * C89937 +
                      (C13338 * C23355 + C89783 * C23357) * C273) *
                         C13336 +
                     ((C13338 * C23469 + C89783 * C23682) * C89937 +
                      (C13338 * C23356 + C89783 * C23358) * C273) *
                         C13335 +
                     ((C13338 * C10738 + C89783 * C10956) * C89937 +
                      (C13338 * C10620 + C89783 * C10623) * C273) *
                         C13334) *
                        C10617) *
                   C89827 * C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C9304 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C822 +
          ((((C186 * C4159 + C89926 * C4275) * C273 +
             (C186 * C4393 + C89926 * C4943) * C89937) *
                C89 +
            (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
               C89907 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C9304) *
              C823 +
          ((((C186 * C830 + C89926 * C940) * C273 +
             (C186 * C1054 + C89926 * C1544) * C89937) *
                C89 +
            (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
               C9304 -
           (((C186 * C8756 + C89926 * C9147) * C89937 +
             (C186 * C8590 + C89926 * C8676) * C273) *
                C91 +
            ((C186 * C8757 + C89926 * C9148) * C89937 +
             (C186 * C8591 + C89926 * C8677) * C273) *
                C90 +
            ((C186 * C8758 + C89926 * C9149) * C89937 +
             (C186 * C8592 + C89926 * C8678) * C273) *
                C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C9304 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C89827 * C5151 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            (C3975 + C3979) * C91) *
               C89907 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C9304) *
              C89827 * C5152 +
          ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C9304 -
           (((C186 * C3578 + C89926 * C3972) * C89937 +
             (C186 * C3416 + C89926 * C3496) * C273) *
                C91 +
            (C3979 + C3975) * C90 + C3974 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C186 * C106 + C89926 * C187) * C273 +
            (C186 * C274 + C89926 * C633) * C89937) *
               C89 +
           (C640 + C656) * C90 + C660 * C91) *
              C10614 -
          (C3974 * C91 + (C2500 + C2488) * C90 +
           ((C186 * C1986 + C89926 * C2476) * C89937 +
            (C186 * C1762 + C89926 * C1872) * C273) *
               C89) *
              C10615 +
          (((C186 * C1763 + C89926 * C1873) * C273 +
            (C186 * C1987 + C89926 * C2477) * C89937) *
               C89 +
           (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
              C10616 -
          (((C186 * C10736 + C89926 * C11007) * C89937 +
            (C186 * C10618 + C89926 * C10680) * C273) *
               C91 +
           ((C186 * C10737 + C89926 * C11008) * C89937 +
            (C186 * C10619 + C89926 * C10681) * C273) *
               C90 +
           ((C186 * C10738 + C89926 * C11009) * C89937 +
            (C186 * C10620 + C89926 * C10682) * C273) *
               C89) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8756 + C13336 * C9147 + C13402 * C4395 + C13335 * C4945 +
             C13401 * C1984 + C13334 * C2474) *
                C89937 +
            (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 + C13335 * C4277 +
             C13401 * C1760 + C13334 * C1870) *
                C273) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C822 +
          (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 + C13335 * C8678 +
             C13403 * C16849 + C13336 * C16979) *
                C273 +
            (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 + C13335 * C9149 +
             C13403 * C17081 + C13336 * C17668) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C9304) *
              C823 +
          (((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C21488 + C13336 * C21891 + C13402 * C17081 +
             C13335 * C17668 + C13401 * C8758 + C13334 * C9149) *
                C89937 +
            (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
             C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                C273) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
            C13403 * C830 + C13336 * C940) *
               C273 +
           (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
            C13403 * C1054 + C13336 * C1544) *
               C89937) *
              C89783 * C10614 -
          ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
            C13401 * C1986 + C13334 * C2476) *
               C89937 +
           (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
            C13401 * C1762 + C13334 * C1872) *
               C273) *
              C89783 * C10615 +
          ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
            C13403 * C14727 + C13336 * C14819) *
               C273 +
           (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
            C13403 * C14897 + C13336 * C15291) *
               C89937) *
              C89783 * C10616 -
          ((C13403 * C23468 + C13336 * C23733 + C13402 * C23469 +
            C13335 * C23734 + C13401 * C10738 + C13334 * C11009) *
               C89937 +
           (C13403 * C23355 + C13336 * C23414 + C13402 * C23356 +
            C13335 * C23415 + C13401 * C10620 + C13334 * C10682) *
               C273) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C9304 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C822 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C89907 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C9304) *
              C823 +
          (((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C9304 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C89926 * C91 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C89926 * C90 +
            (C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C89926 * C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C9304 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C89827 * C5151 +
          ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C9304) *
              C89827 * C5152 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C9304 -
           ((C711 * C3416 + C4057 + C4057 + C89937 * C4053) * C89926 * C91 +
            C4061 * C90 + C2613 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
           C745 * C90 + C746 * C91) *
              C10614 -
          (C2613 * C91 + C2614 * C90 +
           (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
              C10615 +
          ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
           C2615 * C90 + C2616 * C91) *
              C10616 -
          ((C711 * C10618 + C11064 + C11064 + C89937 * C11060) * C89926 * C91 +
           (C711 * C10619 + C11065 + C11065 + C89937 * C11061) * C89926 * C90 +
           (C711 * C10620 + C11066 + C11066 + C89937 * C11062) * C89926 * C89) *
              C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
               C89907 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C9304) *
              C89827 * C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C9304 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C13336 +
            C5073 * C13335 + C2609 * C13334) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C822 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C89907 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C9304) *
              C823 +
          ((C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C9304 -
           ((C711 * C21328 + C21970 + C21970 + C89937 * C21966) * C13336 +
            C21973 * C13335 + C17785 * C13334) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
           C14650 * C13335 + C14651 * C13336) *
              C89783 * C10614 -
          (C17785 * C13336 + C17786 * C13335 +
           (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
              C89783 * C10615 +
          ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
           C19705 * C13335 + C19706 * C13336) *
              C89783 * C10616 -
          ((C711 * C23355 + C23788 + C23788 + C89937 * C23785) * C13336 +
           (C711 * C23356 + C23789 + C23789 + C89937 * C23786) * C13335 +
           (C711 * C10620 + C11066 + C11066 + C89937 * C11062) * C13334) *
              C89783 * C10617) *
         C89827 * C89808) /
            (p * q * std::sqrt(p + q));
    d2eexx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C90026 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C90027 +
           (C100 * C1763 + C1788 + C1788 + C89 * C1779 + C102 * C1764 + C1789 +
            C1789 + C90 * C1780 + C104 * C1765 + C1790 + C1790 + C91 * C1781) *
               C89937 * C89926 * C12024) *
              C89827 * C89990 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C90027 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C90026 -
           (C104 * C1767 + C1794 + C1794 + C91 * C1783 + C102 * C1765 + C1795 +
            C1795 + C90 * C1781 + C100 * C1764 + C1796 + C1796 + C89 * C1780) *
               C89937 * C89926 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C90026 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C90027 +
           ((C13337 * C1763 + C14737 + C14737 + C89783 * C1779) * C89937 *
                C13334 +
            C19045 * C13335 + C19046 * C13336) *
               C12024) *
              C89827 * C89990 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            C16880 * C13335 + C16881 * C13336) *
               C90027 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C90026 -
           ((C13337 * C14728 + C14743 + C14743 + C89783 * C14732) * C89937 *
                C13336 +
            (C13337 * C6324 + C14744 + C14744 + C89783 * C6330) * C89937 *
                C13335 +
            (C13337 * C1764 + C14745 + C14745 + C89783 * C1780) * C89937 *
                C13334) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexy[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C90026 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C90027 +
                     ((C186 * C1763 + C89926 * C1873) * C101 +
                      (C186 * C1771 + C89926 * C1881) * C89 + C1907 * C103 +
                      C1908 * C90 + C1909 * C105 + C1910 * C91) *
                         C89937 * C12024) *
                        C89827 * C89990 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      C3503 * C105 + C3504 * C91) *
                         C89937 * C90027 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C90026 -
                     ((C186 * C1775 + C89926 * C1885) * C91 +
                      (C186 * C1767 + C89926 * C1877) * C105 + C1910 * C90 +
                      C1909 * C103 + C1908 * C89 + C1907 * C101) *
                         C89937 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C90026 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C90027 +
                     ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 +
                       C13335 * C6411 + C13403 * C14727 + C13336 * C14819) *
                          C13338 +
                      (C13401 * C1771 + C13334 * C1881 + C13402 * C6328 +
                       C13335 * C6414 + C13403 * C14729 + C13336 * C14821) *
                          C89783) *
                         C89937 * C12024) *
                        C89827 * C89990 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C90027 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C90026 -
                     ((C13403 * C14730 + C13336 * C14822 + C13402 * C6327 +
                       C13335 * C6413 + C13401 * C1772 + C13334 * C1882) *
                          C89783 +
                      (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
                       C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                          C13338) *
                         C89937 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C90026 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C90027 +
                     ((C273 * C1763 + C89937 * C1987) * C101 +
                      (C273 * C1771 + C89937 * C1995) * C89 + C2021 * C103 +
                      C2022 * C90 + C2023 * C105 + C2024 * C91) *
                         C89926 * C12024) *
                        C89827 * C89990 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      C3585 * C105 + C3586 * C91) *
                         C89926 * C90027 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C90026 -
                     ((C273 * C1775 + C89937 * C1999) * C91 +
                      (C273 * C1767 + C89937 * C1991) * C105 + C2024 * C90 +
                      C2023 * C103 + C2022 * C89 + C2021 * C101) *
                         C89926 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C90026 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C90027 +
                     (((C273 * C1763 + C89937 * C1987) * C13338 +
                       (C273 * C1771 + C89937 * C1995) * C89783) *
                          C13334 +
                      (C19211 + C19212) * C13335 + (C19213 + C19214) * C13336) *
                         C12024) *
                        C89827 * C89990 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                         C90027 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C90026 -
                     (((C273 * C14730 + C89937 * C14900) * C89783 +
                       (C273 * C14728 + C89937 * C14898) * C13338) *
                          C13336 +
                      ((C273 * C6327 + C89937 * C6493) * C89783 +
                       (C273 * C6324 + C89937 * C6490) * C13338) *
                          C13335 +
                      (C2022 * C89783 + C2021 * C13338) * C13334) *
                         C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C90026 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C90027 +
           ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
             C105 * C1765 + C91 * C1773) *
                C186 +
            (C101 * C1873 + C89 * C2101 + C103 * C1874 + C90 * C2102 +
             C105 * C1875 + C91 * C2103) *
                C89926) *
               C89937 * C12024) *
              C89827 * C89990 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C90027 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C90026 -
           ((C105 * C1877 + C91 * C2105 + C103 * C1875 + C90 * C2103 +
             C101 * C1874 + C89 * C2102) *
                C89926 +
            (C105 * C1767 + C91 * C1775 + C103 * C1765 + C90 * C1773 +
             C101 * C1764 + C89 * C1772) *
                C186) *
               C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C90026 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C90027 +
           ((C13338 * C1763 + C89783 * C1771) * C13401 +
            (C13338 * C1873 + C89783 * C2101) * C13334 + C19298 * C13402 +
            C19299 * C13335 + C19300 * C13403 + C19301 * C13336) *
               C89937 * C12024) *
              C89827 * C89990 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
            C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
               C89937 * C90027 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C90026 -
           ((C13338 * C14820 + C89783 * C14976) * C13336 +
            (C13338 * C14728 + C89783 * C14730) * C13403 +
            (C13338 * C6410 + C89783 * C6570) * C13335 +
            (C13338 * C6324 + C89783 * C6327) * C13402 +
            (C13338 * C1874 + C89783 * C2102) * C13334 +
            (C13338 * C1764 + C89783 * C1772) * C13401) *
               C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C90026 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C90027 +
           ((C416 * C1763 + C2196 + C2196 + C89926 * C2183) * C89 +
            C2215 * C90 + C2216 * C91) *
               C89937 * C12024) *
              C89827 * C89990 +
          ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C90027 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C90026 -
           ((C416 * C1767 + C2204 + C2204 + C89926 * C2187) * C91 +
            C2216 * C90 + C2215 * C89) *
               C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C90026 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C90027 +
           (C13554 * C1763 + C15057 + C15057 + C13334 * C2183 + C13555 * C6325 +
            C15058 + C15058 + C13335 * C6648 + C13556 * C14727 + C15059 +
            C15059 + C13336 * C15051) *
               C89783 * C89937 * C12024) *
              C89827 * C89990 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C90027 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C90026 -
           (C13556 * C14728 + C15063 + C15063 + C13336 * C15052 +
            C13555 * C6324 + C15064 + C15064 + C13335 * C6647 + C13554 * C1764 +
            C15065 + C15065 + C13334 * C2184) *
               C89783 * C89937 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C90026 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C90027 +
           (((C273 * C1763 + C89937 * C1987) * C186 +
             (C273 * C1873 + C89937 * C2293) * C89926) *
                C89 +
            (C2305 + C2317) * C90 + (C2308 + C2318) * C91) *
               C12024) *
              C89827 * C89990 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            (C3819 + C3823) * C91) *
               C90027 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C90026 -
           (((C273 * C1877 + C89937 * C2297) * C89926 +
             (C273 * C1767 + C89937 * C1991) * C186) *
                C91 +
            (C2318 + C2308) * C90 + (C2317 + C2305) * C89) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C90026 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C90027 +
           ((C273 * C1763 + C89937 * C1987) * C13401 +
            (C273 * C1873 + C89937 * C2293) * C13334 + C19207 * C13402 +
            C19459 * C13335 + C19209 * C13403 + C19460 * C13336) *
               C89783 * C12024) *
              C89827 * C89990 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            C17104 * C13403 + C17450 * C13336) *
               C89783 * C90027 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C90026 -
           ((C273 * C14820 + C89937 * C15140) * C13336 +
            (C273 * C14728 + C89937 * C14898) * C13403 +
            (C273 * C6410 + C89937 * C6727) * C13335 +
            (C273 * C6324 + C89937 * C6490) * C13402 + C2313 * C13334 +
            C2021 * C13401) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezx[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C90026 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C90027 +
                     ((C101 * C1763 + C89 * C1771 + C103 * C1764 + C90 * C1772 +
                       C105 * C1765 + C91 * C1773) *
                          C273 +
                      (C101 * C1987 + C89 * C2395 + C103 * C1988 + C90 * C2396 +
                       C105 * C1989 + C91 * C2397) *
                          C89937) *
                         C89926 * C12024) *
                        C89827 * C89990 +
                    (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
                       C105 * C1766 + C91 * C1774) *
                          C273 +
                      (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
                       C105 * C1990 + C91 * C2398) *
                          C89937) *
                         C89926 * C90027 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C90026 -
                     ((C105 * C1991 + C91 * C2399 + C103 * C1989 + C90 * C2397 +
                       C101 * C1988 + C89 * C2396) *
                          C89937 +
                      (C105 * C1767 + C91 * C1775 + C103 * C1765 + C90 * C1773 +
                       C101 * C1764 + C89 * C1772) *
                          C273) *
                         C89926 * C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C90026 -
                     (C21812 * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C90027 +
                     (((C13338 * C1763 + C89783 * C1771) * C273 +
                       (C13338 * C1987 + C89783 * C2395) * C89937) *
                          C13334 +
                      (C19536 + C19544) * C13335 + (C19539 + C19545) * C13336) *
                         C12024) *
                        C89827 * C89990 +
                    ((((C13338 * C1761 + C89783 * C1769) * C273 +
                       (C13338 * C1985 + C89783 * C2393) * C89937) *
                          C13334 +
                      (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                         C90027 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C90026 -
                     (((C13338 * C14898 + C89783 * C15216) * C89937 +
                       (C13338 * C14728 + C89783 * C14730) * C273) *
                          C13336 +
                      ((C13338 * C6490 + C89783 * C6804) * C89937 +
                       (C13338 * C6324 + C89783 * C6327) * C273) *
                          C13335 +
                      ((C13338 * C1988 + C89783 * C2396) * C89937 +
                       (C13338 * C1764 + C89783 * C1772) * C273) *
                          C13334) *
                         C12024) *
                        C89827 * C89814)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C90026 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C90027 +
           (((C186 * C1763 + C89926 * C1873) * C273 +
             (C186 * C1987 + C89926 * C2477) * C89937) *
                C89 +
            (C2489 + C2501) * C90 + (C2492 + C2502) * C91) *
               C12024) *
              C89827 * C89990 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            (C3975 + C3979) * C91) *
               C90027 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C90026 -
           (((C186 * C1991 + C89926 * C2481) * C89937 +
             (C186 * C1767 + C89926 * C1877) * C273) *
                C91 +
            (C2502 + C2492) * C90 + (C2501 + C2489) * C89) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C90026 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C90027 +
           ((C13401 * C1763 + C13334 * C1873 + C13402 * C6325 + C13335 * C6411 +
             C13403 * C14727 + C13336 * C14819) *
                C273 +
            (C13401 * C1987 + C13334 * C2477 + C13402 * C6491 + C13335 * C6882 +
             C13403 * C14897 + C13336 * C15291) *
                C89937) *
               C89783 * C12024) *
              C89827 * C89990 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C90027 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C90026 -
           ((C13403 * C14898 + C13336 * C15292 + C13402 * C6490 +
             C13335 * C6881 + C13401 * C1988 + C13334 * C2478) *
                C89937 +
            (C13403 * C14728 + C13336 * C14820 + C13402 * C6324 +
             C13335 * C6410 + C13401 * C1764 + C13334 * C1874) *
                C273) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eezz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C90026 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C89926 * C89 +
            C2615 * C90 + C2616 * C91) *
               C12024) *
              C89827 * C89990 +
          ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C90027 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C90026 -
           ((C711 * C1767 + C2600 + C2600 + C89937 * C2583) * C89926 * C91 +
            C2616 * C90 + C2615 * C89) *
               C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C90026 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C90027 +
           ((C711 * C1763 + C2592 + C2592 + C89937 * C2579) * C13334 +
            C19705 * C13335 + C19706 * C13336) *
               C89783 * C12024) *
              C89827 * C89990 +
          ((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
               C90027 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C90026 -
           ((C711 * C14728 + C15371 + C15371 + C89937 * C15368) * C13336 +
            (C711 * C6324 + C6962 + C6962 + C89937 * C6958) * C13335 +
            C2611 * C13334) *
               C89783 * C12024) *
              C89827 * C89814)) /
            (p * q * std::sqrt(p + q));
    d2eexx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C9304 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C89827 * C5151 +
          ((C100 * C1761 + C1791 + C1791 + C89 * C1777 + C102 * C1760 + C1792 +
            C1792 + C90 * C1776 + C104 * C1766 + C1793 + C1793 + C91 * C1782) *
               C89937 * C89926 * C89907 -
           (C104 * C109 + C128 + C128 + C91 * C121 + C102 * C108 + C129 + C129 +
            C90 * C120 + C100 * C107 + C130 + C130 + C89 * C119) *
               C89937 * C89926 * C9304) *
              C89827 * C5152 +
          ((C100 * C108 + C131 + C131 + C89 * C120 + C102 * C109 + C132 + C132 +
            C90 * C121 + C104 * C110 + C133 + C133 + C91 * C122) *
               C89937 * C89926 * C9304 -
           (C104 * C3416 + C3420 + C3420 + C91 * C3418 + C102 * C1766 + C3421 +
            C3421 + C90 * C1782 + C100 * C1760 + C3422 + C3422 + C89 * C1776) *
               C89937 * C89926 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C106 + C125 + C125 + C89 * C118 + C102 * C107 + C126 + C126 +
            C90 * C119 + C104 * C108 + C127 + C127 + C91 * C120) *
               C89937 * C89926 * C9304 -
           (C104 * C1760 + C1785 + C1785 + C91 * C1776 + C102 * C1761 + C1786 +
            C1786 + C90 * C1777 + C100 * C1762 + C1787 + C1787 + C89 * C1778) *
               C89937 * C89926 * C89907) *
              C822 +
          ((C100 * C4159 + C4172 + C4172 + C89 * C4167 + C102 * C4160 + C4173 +
            C4173 + C90 * C4168 + C104 * C4161 + C4174 + C4174 + C91 * C4169) *
               C89937 * C89926 * C89907 -
           (C104 * C827 + C852 + C852 + C91 * C843 + C102 * C828 + C853 + C853 +
            C90 * C844 + C100 * C829 + C854 + C854 + C89 * C845) *
               C89937 * C89926 * C9304) *
              C823 +
          ((C100 * C830 + C855 + C855 + C89 * C846 + C102 * C831 + C856 + C856 +
            C90 * C847 + C104 * C832 + C857 + C857 + C91 * C848) *
               C89937 * C89926 * C9304 -
           (C104 * C8590 + C8600 + C8600 + C91 * C8596 + C102 * C8591 + C8601 +
            C8601 + C90 * C8597 + C100 * C8592 + C8602 + C8602 + C89 * C8598) *
               C89937 * C89926 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5151 +
          (((C13337 * C1761 + C14740 + C14740 + C89783 * C1777) * C89937 *
                C13334 +
            C16880 * C13335 + C16881 * C13336) *
               C89907 -
           (C13888 * C13336 + C13887 * C13335 +
            (C13337 * C107 + C13345 + C13345 + C89783 * C119) * C89937 *
                C13334) *
               C9304) *
              C89827 * C5152 +
          (((C13337 * C108 + C13346 + C13346 + C89783 * C120) * C89937 *
                C13334 +
            C15457 * C13335 + C15458 * C13336) *
               C9304 -
           ((C13337 * C8590 + C16154 + C16154 + C89783 * C8596) * C89937 *
                C13336 +
            (C13337 * C4161 + C16155 + C16155 + C89783 * C4169) * C89937 *
                C13335 +
            (C13337 * C1760 + C16156 + C16156 + C89783 * C1776) * C89937 *
                C13334) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13337 * C106 + C13340 + C13340 + C89783 * C118) * C89937 *
                C13334 +
            C13884 * C13335 + C13885 * C13336) *
               C9304 -
           (C16878 * C13336 + C16879 * C13335 +
            (C13337 * C1762 + C14736 + C14736 + C89783 * C1778) * C89937 *
                C13334) *
               C89907) *
              C822 +
          ((C16879 * C13334 + C16878 * C13335 + C21338 * C13336) * C89907 -
           (C13886 * C13336 + C13885 * C13335 + C13884 * C13334) * C9304) *
              C823 +
          ((C13885 * C13334 + C13886 * C13335 + C18513 * C13336) * C9304 -
           ((C13337 * C21328 + C21334 + C21334 + C89783 * C21330) * C89937 *
                C13336 +
            C21338 * C13335 + C16878 * C13334) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eexy[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C9304 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    ((C1906 * C101 + C1905 * C89 + C1904 * C103 + C1903 * C90 +
                      C3503 * C105 + C3504 * C91) *
                         C89937 * C89907 -
                     (C220 * C91 + C221 * C105 + C219 * C90 + C218 * C103 +
                      C217 * C89 + C216 * C101) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    ((C218 * C101 + C219 * C89 + C221 * C103 + C220 * C90 +
                      C222 * C105 + C223 * C91) *
                         C89937 * C9304 -
                     ((C186 * C3417 + C89926 * C3497) * C91 +
                      (C186 * C3416 + C89926 * C3496) * C105 + C3504 * C90 +
                      C3503 * C103 + C1903 * C89 + C1904 * C101) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C186 * C106 + C89926 * C187) * C101 +
                      (C186 * C112 + C89926 * C193) * C89 + C216 * C103 +
                      C217 * C90 + C218 * C105 + C219 * C91) *
                         C89937 * C9304 -
                     (C1903 * C91 + C1904 * C105 + C1905 * C90 + C1906 * C103 +
                      (C186 * C1770 + C89926 * C1880) * C89 +
                      (C186 * C1762 + C89926 * C1872) * C101) *
                         C89937 * C89907) *
                        C822 +
                    (((C186 * C4159 + C89926 * C4275) * C101 +
                      (C186 * C4163 + C89926 * C4279) * C89 + C4292 * C103 +
                      C4293 * C90 + C4294 * C105 + C4295 * C91) *
                         C89937 * C89907 -
                     (C970 * C91 + C971 * C105 + C972 * C90 + C973 * C103 +
                      (C186 * C837 + C89926 * C947) * C89 +
                      (C186 * C829 + C89926 * C939) * C101) *
                         C89937 * C9304) *
                        C823 +
                    (((C186 * C830 + C89926 * C940) * C101 +
                      (C186 * C838 + C89926 * C948) * C89 + C974 * C103 +
                      C975 * C90 + C976 * C105 + C977 * C91) *
                         C89937 * C9304 -
                     ((C186 * C8593 + C89926 * C8679) * C91 +
                      (C186 * C8590 + C89926 * C8676) * C105 +
                      (C186 * C8594 + C89926 * C8680) * C90 +
                      (C186 * C8591 + C89926 * C8677) * C103 +
                      (C186 * C8595 + C89926 * C8681) * C89 +
                      (C186 * C8592 + C89926 * C8678) * C101) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5151 +
                    (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 +
                       C13335 * C4276 + C13403 * C8591 + C13336 * C8677) *
                          C13338 +
                      (C13401 * C1769 + C13334 * C1879 + C13402 * C4164 +
                       C13335 * C4280 + C13403 * C8594 + C13336 * C8680) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C839 + C13336 * C949 + C13402 * C836 +
                       C13335 * C946 + C13401 * C113 + C13334 * C194) *
                          C89783 +
                      (C13403 * C831 + C13336 * C941 + C13402 * C828 +
                       C13335 * C938 + C13401 * C107 + C13334 * C188) *
                          C13338) *
                         C89937 * C9304) *
                        C89827 * C5152 +
                    (((C13401 * C108 + C13334 * C189 + C13402 * C827 +
                       C13335 * C937 + C13403 * C832 + C13336 * C942) *
                          C13338 +
                      (C13401 * C114 + C13334 * C195 + C13402 * C835 +
                       C13335 * C945 + C13403 * C840 + C13336 * C950) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8593 + C13336 * C8679 + C13402 * C4165 +
                       C13335 * C4281 + C13401 * C1768 + C13334 * C1878) *
                          C89783 +
                      (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 +
                       C13335 * C4277 + C13401 * C1760 + C13334 * C1870) *
                          C13338) *
                         C89937 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C13401 * C106 + C13334 * C187 + C13402 * C829 +
                       C13335 * C939 + C13403 * C830 + C13336 * C940) *
                          C13338 +
                      (C13401 * C112 + C13334 * C193 + C13402 * C837 +
                       C13335 * C947 + C13403 * C838 + C13336 * C948) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C8595 + C13336 * C8681 + C13402 * C4163 +
                       C13335 * C4279 + C13401 * C1770 + C13334 * C1880) *
                          C89783 +
                      (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 +
                       C13335 * C4275 + C13401 * C1762 + C13334 * C1872) *
                          C13338) *
                         C89937 * C89907) *
                        C822 +
                    (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 +
                       C13335 * C8678 + C13403 * C16849 + C13336 * C16979) *
                          C13338 +
                      (C13401 * C4163 + C13334 * C4279 + C13402 * C8595 +
                       C13335 * C8681 + C13403 * C16851 + C13336 * C16981) *
                          C89783) *
                         C89937 * C89907 -
                     ((C13403 * C5806 + C13336 * C5868 + C13402 * C838 +
                       C13335 * C948 + C13401 * C837 + C13334 * C947) *
                          C89783 +
                      (C13403 * C5803 + C13336 * C5865 + C13402 * C830 +
                       C13335 * C940 + C13401 * C829 + C13334 * C939) *
                          C13338) *
                         C89937 * C9304) *
                        C823 +
                    (((C13401 * C830 + C13334 * C940 + C13402 * C5803 +
                       C13335 * C5865 + C13403 * C13843 + C13336 * C13963) *
                          C13338 +
                      (C13401 * C838 + C13334 * C948 + C13402 * C5806 +
                       C13335 * C5868 + C13403 * C13845 + C13336 * C13965) *
                          C89783) *
                         C89937 * C9304 -
                     ((C13403 * C21329 + C13336 * C21413 + C13402 * C16851 +
                       C13335 * C16981 + C13401 * C8595 + C13334 * C8681) *
                          C89783 +
                      (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
                       C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                          C13338) *
                         C89937 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eexz[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C9304 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    ((C2020 * C101 + C2019 * C89 + C2018 * C103 + C2017 * C90 +
                      C3585 * C105 + C3586 * C91) *
                         C89926 * C89907 -
                     (C307 * C91 + C308 * C105 + C306 * C90 + C305 * C103 +
                      C304 * C89 + C303 * C101) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    ((C305 * C101 + C306 * C89 + C308 * C103 + C307 * C90 +
                      C309 * C105 + C310 * C91) *
                         C89926 * C9304 -
                     ((C273 * C3417 + C89937 * C3579) * C91 +
                      (C273 * C3416 + C89937 * C3578) * C105 + C3586 * C90 +
                      C3585 * C103 + C2017 * C89 + C2018 * C101) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C273 * C106 + C89937 * C274) * C101 +
                      (C273 * C112 + C89937 * C280) * C89 + C303 * C103 +
                      C304 * C90 + C305 * C105 + C306 * C91) *
                         C89926 * C9304 -
                     (C2017 * C91 + C2018 * C105 + C2019 * C90 + C2020 * C103 +
                      (C273 * C1770 + C89937 * C1994) * C89 +
                      (C273 * C1762 + C89937 * C1986) * C101) *
                         C89926 * C89907) *
                        C822 +
                    (((C273 * C4159 + C89937 * C4393) * C101 +
                      (C273 * C4163 + C89937 * C4397) * C89 + C4410 * C103 +
                      C4411 * C90 + C4412 * C105 + C4413 * C91) *
                         C89926 * C89907 -
                     (C1084 * C91 + C1085 * C105 + C1086 * C90 + C1087 * C103 +
                      (C273 * C837 + C89937 * C1061) * C89 +
                      (C273 * C829 + C89937 * C1053) * C101) *
                         C89926 * C9304) *
                        C823 +
                    (((C273 * C830 + C89937 * C1054) * C101 +
                      (C273 * C838 + C89937 * C1062) * C89 + C1088 * C103 +
                      C1089 * C90 + C1090 * C105 + C1091 * C91) *
                         C89926 * C9304 -
                     ((C273 * C8593 + C89937 * C8759) * C91 +
                      (C273 * C8590 + C89937 * C8756) * C105 +
                      (C273 * C8594 + C89937 * C8760) * C90 +
                      (C273 * C8591 + C89937 * C8757) * C103 +
                      (C273 * C8595 + C89937 * C8761) * C89 +
                      (C273 * C8592 + C89937 * C8758) * C101) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C89827 * C5151 +
                    (((C2020 * C13338 + C2019 * C89783) * C13334 +
                      (C17094 + C17095) * C13335 + (C17110 + C17111) * C13336) *
                         C89907 -
                     (C14074 * C13336 + (C14059 + C14058) * C13335 +
                      (C304 * C89783 + C303 * C13338) * C13334) *
                         C9304) *
                        C89827 * C5152 +
                    (((C305 * C13338 + C306 * C89783) * C13334 +
                      (C15607 + C15608) * C13335 + (C15609 + C15610) * C13336) *
                         C9304 -
                     (((C273 * C8593 + C89937 * C8759) * C89783 +
                       (C273 * C8590 + C89937 * C8756) * C13338) *
                          C13336 +
                      (C4413 * C89783 + C4412 * C13338) * C13335 +
                      (C2017 * C89783 + C2018 * C13338) * C13334) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C273 * C106 + C89937 * C274) * C13338 +
                       (C273 * C112 + C89937 * C280) * C89783) *
                          C13334 +
                      (C14075 + C14076) * C13335 + C14083 * C13336) *
                         C9304 -
                     (C21491 * C13336 + (C17108 + C17109) * C13335 +
                      ((C273 * C1770 + C89937 * C1994) * C89783 +
                       (C273 * C1762 + C89937 * C1986) * C13338) *
                          C13334) *
                         C89907) *
                        C822 +
                    (((C17109 + C17108) * C13334 + (C17107 + C17106) * C13335 +
                      (C21498 + C21499) * C13336) *
                         C89907 -
                     (C18618 * C13336 + (C14078 + C14077) * C13335 +
                      (C14076 + C14075) * C13334) *
                         C9304) *
                        C823 +
                    ((C14083 * C13334 + (C14080 + C14079) * C13335 +
                      (C18625 + C18626) * C13336) *
                         C9304 -
                     (((C273 * C21329 + C89937 * C21489) * C89783 +
                       (C273 * C21328 + C89937 * C21488) * C13338) *
                          C13336 +
                      (C21499 + C21498) * C13335 + C21491 * C13334) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
             C105 * C1766 + C91 * C1774) *
                C186 +
            (C101 * C1871 + C89 * C2099 + C103 * C1870 + C90 * C2098 +
             C105 * C1876 + C91 * C2104) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C190 + C91 * C363 + C103 * C189 + C90 * C362 + C101 * C188 +
             C89 * C361) *
                C89926 +
            (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 + C101 * C107 +
             C89 * C113) *
                C186) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 + C105 * C110 +
             C91 * C116) *
                C186 +
            (C101 * C189 + C89 * C362 + C103 * C190 + C90 * C363 + C105 * C191 +
             C91 * C364) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C3496 + C91 * C3660 + C103 * C1876 + C90 * C2104 +
             C101 * C1870 + C89 * C2098) *
                C89926 +
            (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
             C101 * C1760 + C89 * C1768) *
                C186) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 + C105 * C108 +
             C91 * C114) *
                C186 +
            (C101 * C187 + C89 * C360 + C103 * C188 + C90 * C361 + C105 * C189 +
             C91 * C362) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C1870 + C91 * C2098 + C103 * C1871 + C90 * C2099 +
             C101 * C1872 + C89 * C2100) *
                C89926 +
            (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
             C101 * C1762 + C89 * C1770) *
                C186) *
               C89937 * C89907) *
              C822 +
          (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
             C105 * C4161 + C91 * C4165) *
                C186 +
            (C101 * C4275 + C89 * C4511 + C103 * C4276 + C90 * C4512 +
             C105 * C4277 + C91 * C4513) *
                C89926) *
               C89937 * C89907 -
           ((C105 * C937 + C91 * C1165 + C103 * C938 + C90 * C1166 +
             C101 * C939 + C89 * C1167) *
                C89926 +
            (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 + C101 * C829 +
             C89 * C837) *
                C186) *
               C89937 * C9304) *
              C823 +
          (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 + C105 * C832 +
             C91 * C840) *
                C186 +
            (C101 * C940 + C89 * C1168 + C103 * C941 + C90 * C1169 +
             C105 * C942 + C91 * C1170) *
                C89926) *
               C89937 * C9304 -
           ((C105 * C8676 + C91 * C8836 + C103 * C8677 + C90 * C8837 +
             C101 * C8678 + C89 * C8838) *
                C89926 +
            (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
             C101 * C8592 + C89 * C8595) *
                C186) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C89827 * C5151 +
          (((C13338 * C1761 + C89783 * C1769) * C13401 +
            (C13338 * C1871 + C89783 * C2099) * C13334 + C17232 * C13402 +
            C17233 * C13335 + C17234 * C13403 + C17235 * C13336) *
               C89937 * C89907 -
           (C14193 * C13336 + C14192 * C13403 + C14191 * C13335 +
            C14190 * C13402 + (C13338 * C188 + C89783 * C361) * C13334 +
            (C13338 * C107 + C89783 * C113) * C13401) *
               C89937 * C9304) *
              C89827 * C5152 +
          (((C13338 * C108 + C89783 * C114) * C13401 +
            (C13338 * C189 + C89783 * C362) * C13334 + C15693 * C13402 +
            C15694 * C13335 + C15695 * C13403 + C15696 * C13336) *
               C89937 * C9304 -
           ((C13338 * C8676 + C89783 * C8836) * C13336 +
            (C13338 * C8590 + C89783 * C8593) * C13403 +
            (C13338 * C4277 + C89783 * C4513) * C13335 +
            (C13338 * C4161 + C89783 * C4165) * C13402 +
            (C13338 * C1870 + C89783 * C2098) * C13334 +
            (C13338 * C1760 + C89783 * C1768) * C13401) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13338 * C106 + C89783 * C112) * C13401 +
            (C13338 * C187 + C89783 * C360) * C13334 + C14184 * C13402 +
            C14185 * C13335 + C14186 * C13403 + C14187 * C13336) *
               C89937 * C9304 -
           (C17228 * C13336 + C17229 * C13403 + C17230 * C13335 +
            C17231 * C13402 + (C13338 * C1872 + C89783 * C2100) * C13334 +
            (C13338 * C1762 + C89783 * C1770) * C13401) *
               C89937 * C89907) *
              C822 +
          ((C17231 * C13401 + C17230 * C13334 + C17229 * C13402 +
            C17228 * C13335 + C21579 * C13403 + C21580 * C13336) *
               C89937 * C89907 -
           (C14188 * C13336 + C14189 * C13403 + C14187 * C13335 +
            C14186 * C13402 + C14185 * C13334 + C14184 * C13401) *
               C89937 * C9304) *
              C823 +
          ((C14186 * C13401 + C14187 * C13334 + C14189 * C13402 +
            C14188 * C13335 + C18682 * C13403 + C18683 * C13336) *
               C89937 * C9304 -
           ((C13338 * C21412 + C89783 * C21573) * C13336 +
            (C13338 * C21328 + C89783 * C21329) * C13403 + C21580 * C13335 +
            C21579 * C13402 + C17228 * C13334 + C17229 * C13401) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C9304 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C89827 * C5151 +
          ((C2214 * C89 + C2213 * C90 + C3742 * C91) * C89937 * C89907 -
           (C448 * C91 + C447 * C90 + C446 * C89) * C89937 * C9304) *
              C89827 * C5152 +
          ((C447 * C89 + C448 * C90 + C449 * C91) * C89937 * C9304 -
           ((C416 * C3416 + C3739 + C3739 + C89926 * C3735) * C91 +
            C3742 * C90 + C2213 * C89) *
               C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C416 * C106 + C424 + C424 + C89926 * C417) * C89 + C446 * C90 +
            C447 * C91) *
               C89937 * C9304 -
           (C2213 * C91 + C2214 * C90 +
            (C416 * C1762 + C2195 + C2195 + C89926 * C2182) * C89) *
               C89937 * C89907) *
              C822 +
          (((C416 * C4159 + C4618 + C4618 + C89926 * C4613) * C89 +
            C4630 * C90 + C4631 * C91) *
               C89937 * C89907 -
           (C1280 * C91 + C1281 * C90 +
            (C416 * C829 + C1262 + C1262 + C89926 * C1249) * C89) *
               C89937 * C9304) *
              C823 +
          (((C416 * C830 + C1263 + C1263 + C89926 * C1250) * C89 + C1282 * C90 +
            C1283 * C91) *
               C89937 * C9304 -
           ((C416 * C8590 + C8917 + C8917 + C89926 * C8913) * C91 +
            (C416 * C8591 + C8918 + C8918 + C89926 * C8914) * C90 +
            (C416 * C8592 + C8919 + C8919 + C89926 * C8915) * C89) *
               C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C89827 * C5151 +
          ((C13554 * C1761 + C15060 + C15060 + C13334 * C2181 + C13555 * C4160 +
            C15061 + C15061 + C13335 * C4614 + C13556 * C8591 + C15062 +
            C15062 + C13336 * C8914) *
               C89783 * C89937 * C89907 -
           (C13556 * C831 + C13561 + C13561 + C13336 * C1251 + C13555 * C828 +
            C13562 + C13562 + C13335 * C1248 + C13554 * C107 + C13563 + C13563 +
            C13334 * C418) *
               C89783 * C89937 * C9304) *
              C89827 * C5152 +
          ((C13554 * C108 + C13564 + C13564 + C13334 * C419 + C13555 * C827 +
            C13565 + C13565 + C13335 * C1247 + C13556 * C832 + C13566 + C13566 +
            C13336 * C1252) *
               C89783 * C89937 * C9304 -
           (C13556 * C8590 + C16453 + C16453 + C13336 * C8913 + C13555 * C4161 +
            C16454 + C16454 + C13335 * C4615 + C13554 * C1760 + C16455 +
            C16455 + C13334 * C2180) *
               C89783 * C89937 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13554 * C106 + C13558 + C13558 + C13334 * C417 + C13555 * C829 +
            C13559 + C13559 + C13335 * C1249 + C13556 * C830 + C13560 + C13560 +
            C13336 * C1250) *
               C89783 * C89937 * C9304 -
           (C13556 * C8592 + C15054 + C15054 + C13336 * C8915 + C13555 * C4159 +
            C15055 + C15055 + C13335 * C4613 + C13554 * C1762 + C15056 +
            C15056 + C13334 * C2182) *
               C89783 * C89937 * C89907) *
              C822 +
          ((C13554 * C4159 + C17336 + C17336 + C13334 * C4613 + C13555 * C8592 +
            C17337 + C17337 + C13335 * C8915 + C13556 * C16849 + C17338 +
            C17338 + C13336 * C17333) *
               C89783 * C89937 * C89907 -
           (C13556 * C5803 + C14272 + C14272 + C13336 * C6030 + C13555 * C830 +
            C14273 + C14273 + C13335 * C1250 + C13554 * C829 + C14274 + C14274 +
            C13334 * C1249) *
               C89783 * C89937 * C9304) *
              C823 +
          ((C13554 * C830 + C14275 + C14275 + C13334 * C1250 + C13555 * C5803 +
            C14276 + C14276 + C13335 * C6030 + C13556 * C13843 + C14277 +
            C14277 + C13336 * C14269) *
               C89783 * C89937 * C9304 -
           (C13556 * C21328 + C21656 + C21656 + C13336 * C21654 +
            C13555 * C16849 + C21657 + C21657 + C13335 * C17333 +
            C13554 * C8592 + C21658 + C21658 + C13334 * C8915) *
               C89783 * C89937 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eeyz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C9304 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C89827 * C5151 +
          (((C2304 + C2316) * C89 + (C2301 + C2315) * C90 +
            (C3819 + C3823) * C91) *
               C89907 -
           (C527 * C91 + (C523 + C509) * C90 + (C522 + C506) * C89) * C9304) *
              C89827 * C5152 +
          ((C526 * C89 + (C514 + C524) * C90 + (C515 + C525) * C91) * C9304 -
           (((C273 * C3496 + C89937 * C3816) * C89926 +
             (C273 * C3416 + C89937 * C3578) * C186) *
                C91 +
            (C3823 + C3819) * C90 + C3818 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C273 * C106 + C89937 * C274) * C186 +
             (C273 * C187 + C89937 * C499) * C89926) *
                C89 +
            (C506 + C522) * C90 + C526 * C91) *
               C9304 -
           (C3818 * C91 + (C2316 + C2304) * C90 +
            ((C273 * C1872 + C89937 * C2292) * C89926 +
             (C273 * C1762 + C89937 * C1986) * C186) *
                C89) *
               C89907) *
              C822 +
          ((((C273 * C4159 + C89937 * C4393) * C186 +
             (C273 * C4275 + C89937 * C4729) * C89926) *
                C89 +
            (C4734 + C4742) * C90 + (C4737 + C4743) * C91) *
               C89907 -
           (C3097 * C91 + (C1383 + C1371) * C90 +
            ((C273 * C939 + C89937 * C1359) * C89926 +
             (C273 * C829 + C89937 * C1053) * C186) *
                C89) *
               C9304) *
              C823 +
          ((((C273 * C830 + C89937 * C1054) * C186 +
             (C273 * C940 + C89937 * C1360) * C89926) *
                C89 +
            (C1372 + C1384) * C90 + (C1375 + C1385) * C91) *
               C9304 -
           (((C273 * C8676 + C89937 * C8993) * C89926 +
             (C273 * C8590 + C89937 * C8756) * C186) *
                C91 +
            ((C273 * C8677 + C89937 * C8994) * C89926 +
             (C273 * C8591 + C89937 * C8757) * C186) *
                C90 +
            ((C273 * C8678 + C89937 * C8995) * C89926 +
             (C273 * C8592 + C89937 * C8758) * C186) *
                C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2020 * C13401 + C2312 * C13334 + C4410 * C13402 + C4740 * C13335 +
            C17104 * C13403 + C17450 * C13336) *
               C89783 * C89907 -
           (C1380 * C13336 + C1088 * C13403 + C1379 * C13335 + C1087 * C13402 +
            C518 * C13334 + C303 * C13401) *
               C89783 * C9304) *
              C89827 * C5152 +
          ((C305 * C13401 + C519 * C13334 + C1085 * C13402 + C1378 * C13335 +
            C1090 * C13403 + C1381 * C13336) *
               C89783 * C9304 -
           ((C273 * C8676 + C89937 * C8993) * C13336 +
            (C273 * C8590 + C89937 * C8756) * C13403 + C4741 * C13335 +
            C4412 * C13402 + C2311 * C13334 + C2018 * C13401) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C273 * C106 + C89937 * C274) * C13401 +
            (C273 * C187 + C89937 * C499) * C13334 + C14066 * C13402 +
            C14368 * C13335 + C14068 * C13403 + C14369 * C13336) *
               C89783 * C9304 -
           (C17448 * C13336 + C17101 * C13403 + C17449 * C13335 +
            C17103 * C13402 + (C273 * C1872 + C89937 * C2292) * C13334 +
            (C273 * C1762 + C89937 * C1986) * C13401) *
               C89783 * C89907) *
              C822 +
          ((C17103 * C13401 + C17449 * C13334 + C17101 * C13402 +
            C17448 * C13335 + C21496 * C13403 + C21736 * C13336) *
               C89783 * C89907 -
           (C14370 * C13336 + C14071 * C13403 + C14369 * C13335 +
            C14068 * C13402 + C14368 * C13334 + C14066 * C13401) *
               C89783 * C9304) *
              C823 +
          ((C14068 * C13401 + C14369 * C13334 + C14071 * C13402 +
            C14370 * C13335 + C18623 * C13403 + C18791 * C13336) *
               C89783 * C9304 -
           ((C273 * C21412 + C89937 * C21732) * C13336 +
            (C273 * C21328 + C89937 * C21488) * C13403 + C21736 * C13335 +
            C21496 * C13402 + C17448 * C13334 + C17101 * C13401) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezx[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C89907) *
                        C89827 * C5151 +
                    (((C101 * C1761 + C89 * C1769 + C103 * C1760 + C90 * C1768 +
                       C105 * C1766 + C91 * C1774) *
                          C273 +
                      (C101 * C1985 + C89 * C2393 + C103 * C1984 + C90 * C2392 +
                       C105 * C1990 + C91 * C2398) *
                          C89937) *
                         C89926 * C89907 -
                     ((C105 * C277 + C91 * C580 + C103 * C276 + C90 * C579 +
                       C101 * C275 + C89 * C578) *
                          C89937 +
                      (C105 * C109 + C91 * C115 + C103 * C108 + C90 * C114 +
                       C101 * C107 + C89 * C113) *
                          C273) *
                         C89926 * C9304) *
                        C89827 * C5152 +
                    (((C101 * C108 + C89 * C114 + C103 * C109 + C90 * C115 +
                       C105 * C110 + C91 * C116) *
                          C273 +
                      (C101 * C276 + C89 * C579 + C103 * C277 + C90 * C580 +
                       C105 * C278 + C91 * C581) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C3578 + C91 * C3897 + C103 * C1990 + C90 * C2398 +
                       C101 * C1984 + C89 * C2392) *
                          C89937 +
                      (C105 * C3416 + C91 * C3417 + C103 * C1766 + C90 * C1774 +
                       C101 * C1760 + C89 * C1768) *
                          C273) *
                         C89926 * C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C101 * C106 + C89 * C112 + C103 * C107 + C90 * C113 +
                       C105 * C108 + C91 * C114) *
                          C273 +
                      (C101 * C274 + C89 * C577 + C103 * C275 + C90 * C578 +
                       C105 * C276 + C91 * C579) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C1984 + C91 * C2392 + C103 * C1985 + C90 * C2393 +
                       C101 * C1986 + C89 * C2394) *
                          C89937 +
                      (C105 * C1760 + C91 * C1768 + C103 * C1761 + C90 * C1769 +
                       C101 * C1762 + C89 * C1770) *
                          C273) *
                         C89926 * C89907) *
                        C822 +
                    (((C101 * C4159 + C89 * C4163 + C103 * C4160 + C90 * C4164 +
                       C105 * C4161 + C91 * C4165) *
                          C273 +
                      (C101 * C4393 + C89 * C4841 + C103 * C4394 + C90 * C4842 +
                       C105 * C4395 + C91 * C4843) *
                          C89937) *
                         C89926 * C89907 -
                     ((C105 * C1051 + C91 * C1459 + C103 * C1052 + C90 * C1460 +
                       C101 * C1053 + C89 * C1461) *
                          C89937 +
                      (C105 * C827 + C91 * C835 + C103 * C828 + C90 * C836 +
                       C101 * C829 + C89 * C837) *
                          C273) *
                         C89926 * C9304) *
                        C823 +
                    (((C101 * C830 + C89 * C838 + C103 * C831 + C90 * C839 +
                       C105 * C832 + C91 * C840) *
                          C273 +
                      (C101 * C1054 + C89 * C1462 + C103 * C1055 + C90 * C1463 +
                       C105 * C1056 + C91 * C1464) *
                          C89937) *
                         C89926 * C9304 -
                     ((C105 * C8756 + C91 * C9070 + C103 * C8757 + C90 * C9071 +
                       C101 * C8758 + C89 * C9072) *
                          C89937 +
                      (C105 * C8590 + C91 * C8593 + C103 * C8591 + C90 * C8594 +
                       C101 * C8592 + C89 * C8595) *
                          C273) *
                         C89926 * C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C9304 -
                     (C21812 * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C89907) *
                        C89827 * C5151 +
                    ((((C13338 * C1761 + C89783 * C1769) * C273 +
                       (C13338 * C1985 + C89783 * C2393) * C89937) *
                          C13334 +
                      (C17557 + C17569) * C13335 + (C17560 + C17570) * C13336) *
                         C89907 -
                     (C14479 * C13336 + (C14475 + C14457) * C13335 +
                      ((C13338 * C275 + C89783 * C578) * C89937 +
                       (C13338 * C107 + C89783 * C113) * C273) *
                          C13334) *
                         C9304) *
                        C89827 * C5152 +
                    ((((C13338 * C108 + C89783 * C114) * C273 +
                       (C13338 * C276 + C89783 * C579) * C89937) *
                          C13334 +
                      (C15922 + C15930) * C13335 + (C15925 + C15931) * C13336) *
                         C9304 -
                     (((C13338 * C8756 + C89783 * C9070) * C89937 +
                       (C13338 * C8590 + C89783 * C8593) * C273) *
                          C13336 +
                      ((C13338 * C4395 + C89783 * C4843) * C89937 +
                       (C13338 * C4161 + C89783 * C4165) * C273) *
                          C13335 +
                      ((C13338 * C1984 + C89783 * C2392) * C89937 +
                       (C13338 * C1760 + C89783 * C1768) * C273) *
                          C13334) *
                         C89907) *
                        C89827 * C5153)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C13338 * C106 + C89783 * C112) * C273 +
                       (C13338 * C274 + C89783 * C577) * C89937) *
                          C13334 +
                      (C14448 + C14472) * C13335 + C14478 * C13336) *
                         C9304 -
                     (C21812 * C13336 + (C17568 + C17556) * C13335 +
                      ((C13338 * C1986 + C89783 * C2394) * C89937 +
                       (C13338 * C1762 + C89783 * C1770) * C273) *
                          C13334) *
                         C89907) *
                        C822 +
                    (((C17556 + C17568) * C13334 + (C17553 + C17567) * C13335 +
                      (C21813 + C21817) * C13336) *
                         C89907 -
                     (C18843 * C13336 + (C14473 + C14451) * C13335 +
                      (C14472 + C14448) * C13334) *
                         C9304) *
                        C823 +
                    ((C14478 * C13334 + (C14456 + C14474) * C13335 +
                      (C18844 + C18848) * C13336) *
                         C9304 -
                     (((C13338 * C21488 + C89783 * C21810) * C89937 +
                       (C13338 * C21328 + C89783 * C21329) * C273) *
                          C13336 +
                      (C21817 + C21813) * C13335 + C21812 * C13334) *
                         C89907) *
                        C824) *
                   C89808) /
                      (p * q * std::sqrt(p + q));
    d2eezy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C9304 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C89827 * C5151 +
          (((C2488 + C2500) * C89 + (C2485 + C2499) * C90 +
            (C3975 + C3979) * C91) *
               C89907 -
           (C661 * C91 + (C657 + C643) * C90 + (C656 + C640) * C89) * C9304) *
              C89827 * C5152 +
          ((C660 * C89 + (C648 + C658) * C90 + (C649 + C659) * C91) * C9304 -
           (((C186 * C3578 + C89926 * C3972) * C89937 +
             (C186 * C3416 + C89926 * C3496) * C273) *
                C91 +
            (C3979 + C3975) * C90 + C3974 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C186 * C106 + C89926 * C187) * C273 +
             (C186 * C274 + C89926 * C633) * C89937) *
                C89 +
            (C640 + C656) * C90 + C660 * C91) *
               C9304 -
           (C3974 * C91 + (C2500 + C2488) * C90 +
            ((C186 * C1986 + C89926 * C2476) * C89937 +
             (C186 * C1762 + C89926 * C1872) * C273) *
                C89) *
               C89907) *
              C822 +
          ((((C186 * C4159 + C89926 * C4275) * C273 +
             (C186 * C4393 + C89926 * C4943) * C89937) *
                C89 +
            (C4948 + C4956) * C90 + (C4951 + C4957) * C91) *
               C89907 -
           (C3253 * C91 + (C1567 + C1555) * C90 +
            ((C186 * C1053 + C89926 * C1543) * C89937 +
             (C186 * C829 + C89926 * C939) * C273) *
                C89) *
               C9304) *
              C823 +
          ((((C186 * C830 + C89926 * C940) * C273 +
             (C186 * C1054 + C89926 * C1544) * C89937) *
                C89 +
            (C1556 + C1568) * C90 + (C1559 + C1569) * C91) *
               C9304 -
           (((C186 * C8756 + C89926 * C9147) * C89937 +
             (C186 * C8590 + C89926 * C8676) * C273) *
                C91 +
            ((C186 * C8757 + C89926 * C9148) * C89937 +
             (C186 * C8591 + C89926 * C8677) * C273) *
                C90 +
            ((C186 * C8758 + C89926 * C9149) * C89937 +
             (C186 * C8592 + C89926 * C8678) * C273) *
                C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C89827 * C5151 +
          (((C13401 * C1761 + C13334 * C1871 + C13402 * C4160 + C13335 * C4276 +
             C13403 * C8591 + C13336 * C8677) *
                C273 +
            (C13401 * C1985 + C13334 * C2475 + C13402 * C4394 + C13335 * C4944 +
             C13403 * C8757 + C13336 * C9148) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C1055 + C13336 * C1545 + C13402 * C1052 + C13335 * C1542 +
             C13401 * C275 + C13334 * C634) *
                C89937 +
            (C13403 * C831 + C13336 * C941 + C13402 * C828 + C13335 * C938 +
             C13401 * C107 + C13334 * C188) *
                C273) *
               C89783 * C9304) *
              C89827 * C5152 +
          (((C13401 * C108 + C13334 * C189 + C13402 * C827 + C13335 * C937 +
             C13403 * C832 + C13336 * C942) *
                C273 +
            (C13401 * C276 + C13334 * C635 + C13402 * C1051 + C13335 * C1541 +
             C13403 * C1056 + C13336 * C1546) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8756 + C13336 * C9147 + C13402 * C4395 + C13335 * C4945 +
             C13401 * C1984 + C13334 * C2474) *
                C89937 +
            (C13403 * C8590 + C13336 * C8676 + C13402 * C4161 + C13335 * C4277 +
             C13401 * C1760 + C13334 * C1870) *
                C273) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13401 * C106 + C13334 * C187 + C13402 * C829 + C13335 * C939 +
             C13403 * C830 + C13336 * C940) *
                C273 +
            (C13401 * C274 + C13334 * C633 + C13402 * C1053 + C13335 * C1543 +
             C13403 * C1054 + C13336 * C1544) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C8758 + C13336 * C9149 + C13402 * C4393 + C13335 * C4943 +
             C13401 * C1986 + C13334 * C2476) *
                C89937 +
            (C13403 * C8592 + C13336 * C8678 + C13402 * C4159 + C13335 * C4275 +
             C13401 * C1762 + C13334 * C1872) *
                C273) *
               C89783 * C89907) *
              C822 +
          (((C13401 * C4159 + C13334 * C4275 + C13402 * C8592 + C13335 * C8678 +
             C13403 * C16849 + C13336 * C16979) *
                C273 +
            (C13401 * C4393 + C13334 * C4943 + C13402 * C8758 + C13335 * C9149 +
             C13403 * C17081 + C13336 * C17668) *
                C89937) *
               C89783 * C89907 -
           ((C13403 * C5921 + C13336 * C6192 + C13402 * C1054 + C13335 * C1544 +
             C13401 * C1053 + C13334 * C1543) *
                C89937 +
            (C13403 * C5803 + C13336 * C5865 + C13402 * C830 + C13335 * C940 +
             C13401 * C829 + C13334 * C939) *
                C273) *
               C89783 * C9304) *
              C823 +
          (((C13401 * C830 + C13334 * C940 + C13402 * C5803 + C13335 * C5865 +
             C13403 * C13843 + C13336 * C13963) *
                C273 +
            (C13401 * C1054 + C13334 * C1544 + C13402 * C5921 + C13335 * C6192 +
             C13403 * C14041 + C13336 * C14553) *
                C89937) *
               C89783 * C9304 -
           ((C13403 * C21488 + C13336 * C21891 + C13402 * C17081 +
             C13335 * C17668 + C13401 * C8758 + C13334 * C9149) *
                C89937 +
            (C13403 * C21328 + C13336 * C21412 + C13402 * C16849 +
             C13335 * C16979 + C13401 * C8592 + C13334 * C8678) *
                C273) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
    d2eezz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C9304 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C89827 * C5151 +
          ((C2614 * C89 + C2613 * C90 + C4061 * C91) * C89907 -
           (C747 * C91 + C746 * C90 + C745 * C89) * C9304) *
              C89827 * C5152 +
          ((C746 * C89 + C747 * C90 + C748 * C91) * C9304 -
           ((C711 * C3416 + C4057 + C4057 + C89937 * C4053) * C89926 * C91 +
            C4061 * C90 + C2613 * C89) *
               C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C89926 * C89 +
            C745 * C90 + C746 * C91) *
               C9304 -
           (C2613 * C91 + C2614 * C90 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C89926 * C89) *
               C89907) *
              C822 +
          (((C711 * C4159 + C5060 + C5060 + C89937 * C5055) * C89926 * C89 +
            C5074 * C90 + C5075 * C91) *
               C89907 -
           (C1680 * C91 + C1681 * C90 +
            (C711 * C829 + C1658 + C1658 + C89937 * C1645) * C89926 * C89) *
               C9304) *
              C823 +
          (((C711 * C830 + C1659 + C1659 + C89937 * C1646) * C89926 * C89 +
            C1682 * C90 + C1683 * C91) *
               C9304 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C89926 * C91 +
            (C711 * C8591 + C9229 + C9229 + C89937 * C9225) * C89926 * C90 +
            (C711 * C8592 + C9230 + C9230 + C89937 * C9226) * C89926 * C89) *
               C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C89827 * C5151 +
          ((C2610 * C13334 + C5072 * C13335 + C17787 * C13336) * C89783 *
               C89907 -
           (C1678 * C13336 + C1677 * C13335 + C741 * C13334) * C89783 * C9304) *
              C89827 * C5152 +
          ((C742 * C13334 + C1676 * C13335 + C1679 * C13336) * C89783 * C9304 -
           ((C711 * C8590 + C9228 + C9228 + C89937 * C9224) * C13336 +
            C5073 * C13335 + C2609 * C13334) *
               C89783 * C89907) *
              C89827 * C5153)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C711 * C106 + C719 + C719 + C89937 * C712) * C13334 +
            C14650 * C13335 + C14651 * C13336) *
               C89783 * C9304 -
           (C17785 * C13336 + C17786 * C13335 +
            (C711 * C1762 + C2591 + C2591 + C89937 * C2578) * C13334) *
               C89783 * C89907) *
              C822 +
          ((C17786 * C13334 + C17785 * C13335 + C21973 * C13336) * C89783 *
               C89907 -
           (C14652 * C13336 + C14651 * C13335 + C14650 * C13334) * C89783 *
               C9304) *
              C823 +
          ((C14651 * C13334 + C14652 * C13335 + C18956 * C13336) * C89783 *
               C9304 -
           ((C711 * C21328 + C21970 + C21970 + C89937 * C21966) * C13336 +
            C21973 * C13335 + C17785 * C13334) *
               C89783 * C89907) *
              C824) *
         C89808) /
            (p * q * std::sqrt(p + q));
}
