/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddd_AA_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1222_11_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150509 = 0 * ae;
    const double C150508 = ae * be;
    const double C150507 = 0 * be;
    const double C150506 = xA - xB;
    const double C150505 = ae + be;
    const double C150504 = 0 * be;
    const double C150609 = p + q;
    const double C150608 = p * q;
    const double C150614 = xP - xQ;
    const double C150613 = bs[2];
    const double C150621 = std::pow(ae, 2);
    const double C150619 = bs[3];
    const double C150632 = bs[4];
    const double C150653 = bs[5];
    const double C150686 = bs[6];
    const double C150732 = bs[7];
    const double C150792 = bs[8];
    const double C150860 = yP - yQ;
    const double C150963 = zP - zQ;
    const double C142 = bs[0];
    const double C151812 = ce + de;
    const double C151811 = ce * de;
    const double C151810 = xC - xD;
    const double C151844 = yC - yD;
    const double C151862 = zC - zD;
    const double C152032 = yA - yB;
    const double C152044 = zA - zB;
    const double C150515 = 2 * C150508;
    const double C150512 = -2 * C150507;
    const double C150514 = C150508 * C150506;
    const double C150513 = C150506 * C150507;
    const double C151786 = C150506 * be;
    const double C151785 = C150506 * ae;
    const double C151784 = std::pow(C150506, 2);
    const double C150516 = C150509 / C150505;
    const double C150511 = 2 * C150505;
    const double C150510 = std::pow(C150505, 2);
    const double C150610 = 2 * C150608;
    const double C150622 = C150614 * ae;
    const double C150618 = std::pow(C150614, 2);
    const double C150873 = std::pow(C150860, 2);
    const double C150976 = std::pow(C150963, 2);
    const double C151816 = 2 * C151812;
    const double C151815 = std::pow(C151812, 2);
    const double C151817 = C151810 * de;
    const double C151814 = C151810 * ce;
    const double C151813 = std::pow(C151810, 2);
    const double C151845 = std::pow(C151844, 2);
    const double C151904 = C151844 * de;
    const double C151902 = C151844 * ce;
    const double C151863 = std::pow(C151862, 2);
    const double C151946 = C151862 * de;
    const double C151944 = C151862 * ce;
    const double C152033 = std::pow(C152032, 2);
    const double C152083 = C152032 * be;
    const double C152082 = C152032 * ae;
    const double C152045 = std::pow(C152044, 2);
    const double C152109 = C152044 * be;
    const double C152108 = C152044 * ae;
    const double C150518 = ae * C150512;
    const double C150519 = C150513 / C150505;
    const double C151787 = C151784 * C150508;
    const double C151794 = std::pow(C150511, -1);
    const double C152181 = std::pow(C150511, -2);
    const double C150520 = 2 * C150510;
    const double C150517 = C150510 * C150511;
    const double C152149 = 4 * C150510;
    const double C150612 = C150610 / C150609;
    const double C158 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C150610 / C150609, 2) -
          (bs[1] * C150610) / C150609) *
         std::pow(ae, 2)) /
        C150510;
    const double C143 = -(C150614 * bs[1] * C150610) / C150609;
    const double C341 = -(C150860 * bs[1] * C150610) / C150609;
    const double C550 = -(C150963 * bs[1] * C150610) / C150609;
    const double C150624 = C150619 * C150622;
    const double C150635 = C150632 * C150622;
    const double C150658 = C150653 * C150622;
    const double C150694 = C150686 * C150622;
    const double C150743 = C150732 * C150622;
    const double C150806 = C150792 * C150622;
    const double C150 = (-(bs[1] * C150622 * C150610) / C150609) / C150505;
    const double C150634 = C150618 * C150632;
    const double C150657 = C150618 * C150653;
    const double C150693 = C150618 * C150686;
    const double C150742 = C150618 * C150732;
    const double C150805 = C150618 * C150792;
    const double C151829 = std::pow(C151816, -1);
    const double C152157 = std::pow(C151816, -2);
    const double C151830 = 2 * C151815;
    const double C152161 = C151815 * C151816;
    const double C152160 = 4 * C151815;
    const double C152150 = std::pow(C151814, 2);
    const double C151818 = C151813 * C151811;
    const double C151846 = C151845 * C151811;
    const double C152162 = std::pow(C151902, 2);
    const double C151864 = C151863 * C151811;
    const double C152164 = std::pow(C151944, 2);
    const double C152034 = C152033 * C150508;
    const double C152046 = C152045 * C150508;
    const double C150522 = 0 - C150519;
    const double C151788 = C151787 / C150505;
    const double C150526 = C150507 / C150520;
    const double C150523 = C150504 / C150520;
    const double C150615 = std::pow(C150612, 2);
    const double C150620 = -C150612;
    const double C150633 = std::pow(C150612, 4);
    const double C150687 = std::pow(C150612, 6);
    const double C150793 = std::pow(C150612, 8);
    const double C152205 = 4 * C152161;
    const double C152204 = C151812 * C152160;
    const double C151819 = C151818 / C151812;
    const double C151847 = C151846 / C151812;
    const double C151865 = C151864 / C151812;
    const double C152035 = C152034 / C150505;
    const double C152047 = C152046 / C150505;
    const double C150528 = C150522 * ae;
    const double C151789 = -C151788;
    const double C150617 = C150613 * C150615;
    const double C159 = (2 * ae * C150615 * C150613 * C150614 * ae +
                         C150614 *
                             (C150613 * C150615 + std::pow(C150614, 2) * bs[3] *
                                                      std::pow(-C150612, 3)) *
                             std::pow(ae, 2)) /
                        C150510;
    const double C151 = (C150614 * C150615 * C150613 * C150622) / C150505 -
                        (ae * bs[1] * C150610) / (C150609 * C150505);
    const double C353 = (C150860 * C150615 * C150613 * C150622) / C150505;
    const double C562 = (C150963 * C150615 * C150613 * C150622) / C150505;
    const double C150623 = std::pow(C150620, 3);
    const double C150654 = std::pow(C150620, 5);
    const double C150733 = std::pow(C150620, 7);
    const double C150639 = C150633 * C150635;
    const double C150638 = C150634 * C150633;
    const double C150652 = C150632 * C150633;
    const double C150699 = C150687 * C150694;
    const double C150698 = C150693 * C150687;
    const double C150731 = C150686 * C150687;
    const double C150813 = C150793 * C150806;
    const double C150812 = C150805 * C150793;
    const double C151820 = -C151819;
    const double C151848 = -C151847;
    const double C151866 = -C151865;
    const double C152036 = -C152035;
    const double C152048 = -C152047;
    const double C150532 = C150528 / C150505;
    const double C151790 = std::exp(C151789);
    const double C150625 = C150617 * ae;
    const double C144 = C150617 * C150618 - (bs[1] * C150610) / C150609;
    const double C340 = C150860 * C150614 * C150617;
    const double C342 = C150617 * C150873 - (bs[1] * C150610) / C150609;
    const double C549 = C150963 * C150614 * C150617;
    const double C551 = C150617 * C150976 - (bs[1] * C150610) / C150609;
    const double C1083 = C150963 * C150860 * C150617;
    const double C150626 = C150623 * C150624;
    const double C150631 = C150619 * C150623;
    const double C365 =
        (C150860 * (C150617 + C150618 * C150619 * C150623) * C150621) / C150510;
    const double C574 =
        (C150963 * (C150617 + C150618 * C150619 * C150623) * C150621) / C150510;
    const double C150663 = C150654 * C150658;
    const double C150662 = C150657 * C150654;
    const double C150685 = C150653 * C150654;
    const double C150749 = C150733 * C150743;
    const double C150748 = C150742 * C150733;
    const double C150791 = C150732 * C150733;
    const double C150642 = C150614 * C150639;
    const double C150651 = ae * C150639;
    const double C151522 = C150860 * C150639;
    const double C150661 = C150652 * C150618;
    const double C150660 = C150614 * C150652;
    const double C150659 = C150652 * ae;
    const double C151677 = C150652 * C150873;
    const double C151680 = C150860 * C150652;
    const double C151719 = C150652 * C150976;
    const double C151722 = C150963 * C150652;
    const double C150703 = C150614 * C150699;
    const double C150730 = ae * C150699;
    const double C150901 = C150699 * C150873;
    const double C150920 = C150860 * C150699;
    const double C151004 = C150699 * C150976;
    const double C151023 = C150963 * C150699;
    const double C150746 = C150731 * C150618;
    const double C150745 = C150614 * C150731;
    const double C150744 = C150731 * ae;
    const double C151751 = C150731 * C150873;
    const double C151763 = C150860 * C150731;
    const double C151775 = C150731 * C150976;
    const double C150817 = C150614 * C150813;
    const double C151821 = std::exp(C151820);
    const double C151849 = std::exp(C151848);
    const double C151867 = std::exp(C151866);
    const double C152037 = std::exp(C152036);
    const double C152049 = std::exp(C152048);
    const double C150534 = C150532 - C150523;
    const double C150521 = C150514 * C151790;
    const double C151791 = C151790 * C151785;
    const double C151795 = C151794 * C151790;
    const double C152146 = C151790 * C151786;
    const double C152143 = C151790 / C150511;
    const double C50872 = C152181 * C151790;
    const double C150627 = C150614 * C150626;
    const double C354 =
        (C150615 * C150613 * C150622 + C150626 * C150873) / C150505;
    const double C563 =
        (C150615 * C150613 * C150622 + C150626 * C150976) / C150505;
    const double C1089 = (C150963 * C150860 * C150626) / C150505;
    const double C1364 =
        (2 * C150860 * C150626 + C150860 * (C150626 + C150639 * C150873)) /
        C150505;
    const double C1546 =
        (C150860 * C150626 + C150860 * C150639 * C150976) / C150505;
    const double C1550 = (C150963 * (C150626 + C150639 * C150873)) / C150505;
    const double C2462 =
        (2 * C150963 * C150626 + C150963 * (C150626 + C150639 * C150976)) /
        C150505;
    const double C150637 = C150614 * C150631;
    const double C150636 = C150631 * ae;
    const double C150641 = C150631 + C150638;
    const double C151666 = C150860 * C150631;
    const double C145 =
        2 * C150614 * C150617 + C150614 * (C150617 + C150631 * C150618);
    const double C339 = C150860 * (C150617 + C150631 * C150618);
    const double C548 = C150963 * (C150617 + C150631 * C150618);
    const double C1356 =
        2 * C150860 * C150617 + C150860 * (C150617 + C150631 * C150873);
    const double C1357 = 3 * (C150617 + C150631 * C150873) +
                         C150860 * (2 * C150860 * C150631 +
                                    C150860 * (C150631 + C150652 * C150873));
    const double C1534 = C150860 * C150617 + C150860 * C150631 * C150976;
    const double C1538 = C150963 * (C150617 + C150631 * C150873);
    const double C1539 =
        C150617 + C150631 * C150873 + (C150631 + C150652 * C150873) * C150976;
    const double C2053 = C150963 * (2 * C150860 * C150631 +
                                    C150860 * (C150631 + C150652 * C150873));
    const double C2454 =
        2 * C150963 * C150617 + C150963 * (C150617 + C150631 * C150976);
    const double C2455 = 3 * (C150617 + C150631 * C150976) +
                         C150963 * (2 * C150963 * C150631 +
                                    C150963 * (C150631 + C150652 * C150976));
    const double C59602 = C151790 * C365;
    const double C65729 = C151790 * C574;
    const double C150667 = C150614 * C150663;
    const double C150684 = ae * C150663;
    const double C150888 = C150860 * C150663;
    const double C150991 = C150963 * C150663;
    const double C151528 = C150663 * C150873;
    const double C151557 = C150663 * C150976;
    const double C1365 = (3 * (C150626 + C150639 * C150873) +
                          C150860 * (2 * C150860 * C150639 +
                                     C150860 * (C150639 + C150663 * C150873))) /
                         C150505;
    const double C1551 = (C150626 + C150639 * C150873 +
                          (C150639 + C150663 * C150873) * C150976) /
                         C150505;
    const double C2057 = (C150963 * (2 * C150860 * C150639 +
                                     C150860 * (C150639 + C150663 * C150873))) /
                         C150505;
    const double C2463 = (3 * (C150626 + C150639 * C150976) +
                          C150963 * (2 * C150963 * C150639 +
                                     C150963 * (C150639 + C150663 * C150976))) /
                         C150505;
    const double C150666 = C150652 + C150662;
    const double C150697 = C150685 * C150618;
    const double C150696 = C150614 * C150685;
    const double C150695 = C150685 * ae;
    const double C150702 = C150685 + C150698;
    const double C151681 = C150685 * C150873;
    const double C151723 = C150685 * C150976;
    const double C151741 = C150860 * C150685;
    const double C151774 = C150963 * C150685;
    const double C150753 = C150614 * C150749;
    const double C150790 = ae * C150749;
    const double C150939 = C150749 * C150873;
    const double C151042 = C150749 * C150976;
    const double C151068 = C150860 * C150749;
    const double C151094 = C150963 * C150749;
    const double C150752 = C150731 + C150748;
    const double C150809 = C150791 * C150618;
    const double C150808 = C150614 * C150791;
    const double C150807 = C150791 * ae;
    const double C150816 = C150791 + C150812;
    const double C150656 = 2 * C150651;
    const double C150665 = C150631 + C150661;
    const double C150664 = C150660 * ae;
    const double C150690 = 2 * C150660;
    const double C151668 = C150860 * C150660;
    const double C151678 = C150631 + C151677;
    const double C151682 = 2 * C151680;
    const double C151720 = C150631 + C151719;
    const double C151724 = 2 * C151722;
    const double C150741 = 2 * C150730;
    const double C150906 = C150663 + C150901;
    const double C150927 = ae * C150920;
    const double C151129 = C150963 * C150920;
    const double C151249 = 2 * C150920;
    const double C151567 = C150920 * C150976;
    const double C151009 = C150663 + C151004;
    const double C151030 = ae * C151023;
    const double C151352 = 2 * C151023;
    const double C150751 = C150685 + C150746;
    const double C150750 = C150745 * ae;
    const double C150798 = 2 * C150745;
    const double C151688 = C150745 * C150873;
    const double C151730 = C150745 * C150976;
    const double C151745 = C150860 * C150745;
    const double C151752 = C150685 + C151751;
    const double C151765 = C151763 * C150976;
    const double C151777 = C150685 + C151775;
    const double C151823 = C151821 * C151814;
    const double C151822 = C151821 / C151816;
    const double C151832 = C151829 * C151821;
    const double C152153 = C151821 * C151817;
    const double C152202 = C152157 * C151821;
    const double C152196 = C151821 * C152150;
    const double C151903 = C151849 / C151816;
    const double C151905 = C151849 * C151902;
    const double C151912 = C151829 * C151849;
    const double C152168 = C151849 * C151904;
    const double C152208 = C152157 * C151849;
    const double C152206 = C151849 * C152162;
    const double C151945 = C151867 / C151816;
    const double C151947 = C151867 * C151944;
    const double C151954 = C151829 * C151867;
    const double C152174 = C151867 * C151946;
    const double C152211 = C152157 * C151867;
    const double C152209 = C151867 * C152164;
    const double C152084 = C152037 * C152082;
    const double C152087 = C151794 * C152037;
    const double C152185 = C152037 * C152083;
    const double C152180 = C152037 / C150511;
    const double C6088 = C152181 * C152037;
    const double C152110 = C152049 * C152108;
    const double C152113 = C151794 * C152049;
    const double C152189 = C152049 * C152109;
    const double C152182 = C152049 / C150511;
    const double C14753 = C152181 * C152049;
    const double C150527 = C150521 / C150510;
    const double C150525 = 2 * C150521;
    const double C150524 = -4 * C150521;
    const double C152147 = C151791 / C150520;
    const double C152145 = C151791 / C150505;
    const double C152144 = C151791 * C151786;
    const double C50871 = (2 * C151794 * C151791) / C150505;
    const double C152148 = C151795 * C151786;
    const double C124 = C151795 / C152149;
    const double C23123 = C151795 / C150511;
    const double C152194 = C152146 / C150505;
    const double C50870 = (C151790 * std::pow(C151785, 2)) / C150510 + C152143;
    const double C150628 = C150627 + C150625;
    const double C150640 = C150637 * ae;
    const double C343 = C150614 * C150617 + C150637 * C150873;
    const double C552 = C150614 * C150617 + C150637 * C150976;
    const double C1084 = C150963 * C150860 * C150637;
    const double C1355 =
        2 * C150860 * C150637 + C150860 * (C150637 + C150660 * C150873);
    const double C1533 = C150860 * C150637 + C150860 * C150660 * C150976;
    const double C1537 = C150963 * (C150637 + C150660 * C150873);
    const double C2453 =
        2 * C150963 * C150637 + C150963 * (C150637 + C150660 * C150976);
    const double C150644 = C150642 + C150636;
    const double C150643 = C150641 * C150621;
    const double C2955 = 2 * C150963 * C151666 +
                         C150963 * (C151666 + C150860 * C150652 * C150976);
    const double C9433 =
        3 * (C151666 + C151680 * C150976) +
        C150963 * (2 * C150963 * C151680 +
                   C150963 * (C151680 + C150860 * C150685 * C150976));
    const double C150670 = C150667 + C150659;
    const double C150692 = 2 * C150684;
    const double C150893 = ae * C150888;
    const double C151531 = 2 * C150888;
    const double C2959 =
        (2 * C150963 * C151522 + C150963 * (C151522 + C150888 * C150976)) /
        C150505;
    const double C9439 = (3 * (C151522 + C150888 * C150976) +
                          C150963 * (2 * C150963 * C150888 +
                                     C150963 * (C150888 + C150920 * C150976))) /
                         C150505;
    const double C150996 = ae * C150991;
    const double C151560 = 2 * C150991;
    const double C151529 = C150639 + C151528;
    const double C151558 = C150639 + C151557;
    const double C150669 = C150666 * C150621;
    const double C150701 = C150652 + C150697;
    const double C150700 = C150696 * ae;
    const double C150737 = 2 * C150696;
    const double C151674 = C150696 * C150873;
    const double C151687 = C150860 * C150696;
    const double C151716 = C150696 * C150976;
    const double C151729 = C150963 * C150696;
    const double C1358 = 3 * (C150637 + C150660 * C150873) +
                         C150860 * (2 * C150860 * C150660 +
                                    C150860 * (C150660 + C150696 * C150873));
    const double C1540 =
        C150637 + C150660 * C150873 + (C150660 + C150696 * C150873) * C150976;
    const double C2054 = C150963 * (2 * C150860 * C150660 +
                                    C150860 * (C150660 + C150696 * C150873));
    const double C2456 = 3 * (C150637 + C150660 * C150976) +
                         C150963 * (2 * C150963 * C150660 +
                                    C150963 * (C150660 + C150696 * C150976));
    const double C150707 = C150703 + C150695;
    const double C150706 = C150702 * C150621;
    const double C151683 = C150652 + C151681;
    const double C151725 = C150652 + C151723;
    const double C151742 = C151741 * C150976;
    const double C151750 = 2 * C151741;
    const double C151762 = C150963 * C151741;
    const double C151776 = 2 * C151774;
    const double C150757 = C150753 + C150744;
    const double C150804 = 2 * C150790;
    const double C150946 = C150699 + C150939;
    const double C151049 = C150699 + C151042;
    const double C151077 = ae * C151068;
    const double C151143 = C150963 * C151068;
    const double C151334 = C151068 * C150976;
    const double C151103 = ae * C151094;
    const double C150756 = C150752 * C150621;
    const double C150815 = C150731 + C150809;
    const double C150814 = C150808 * ae;
    const double C150821 = C150817 + C150807;
    const double C150820 = C150816 * C150621;
    const double C150668 = C150665 * ae;
    const double C146 = 3 * (C150617 + C150631 * C150618) +
                        C150614 * (2 * C150637 + C150614 * C150665);
    const double C338 = C150860 * (2 * C150637 + C150614 * C150665);
    const double C344 = C150617 + C150631 * C150618 + C150665 * C150873;
    const double C547 = C150963 * (2 * C150637 + C150614 * C150665);
    const double C553 = C150617 + C150631 * C150618 + C150665 * C150976;
    const double C1085 = C150963 * C150860 * C150665;
    const double C2956 = 2 * C150963 * C151668 +
                         C150963 * (C151668 + C150860 * C150696 * C150976);
    const double C7816 =
        4 * (2 * C151666 + C150860 * C151678) +
        C150860 *
            (3 * C151678 + C150860 * (2 * C150860 * C150652 +
                                      C150860 * (C150652 + C150685 * C150873)));
    const double C17805 =
        4 * (2 * C150963 * C150631 + C150963 * C151720) +
        C150963 *
            (3 * C151720 + C150963 * (2 * C150963 * C150652 +
                                      C150963 * (C150652 + C150685 * C150976)));
    const double C150911 = ae * C150906;
    const double C151532 = C150860 * C150906;
    const double C151571 = 3 * C150906;
    const double C150933 = 2 * C150927;
    const double C151134 = ae * C151129;
    const double C151579 = 2 * C151129;
    const double C151568 = C150888 + C151567;
    const double C151014 = ae * C151009;
    const double C151561 = C150963 * C151009;
    const double C151586 = 3 * C151009;
    const double C151036 = 2 * C151030;
    const double C150755 = C150614 * C150751;
    const double C150754 = C150751 * ae;
    const double C150799 = 3 * C150751;
    const double C151700 = C150751 * C150873;
    const double C151736 = C150860 * C150751;
    const double C151738 = C150751 * C150976;
    const double C151690 = C150696 + C151688;
    const double C151732 = C150696 + C151730;
    const double C151746 = C151745 * C150976;
    const double C151753 = C150860 * C151752;
    const double C151770 = C151752 * C150976;
    const double C151766 = C151741 + C151765;
    const double C151778 = C150963 * C151777;
    const double C151824 = C151823 * C151817;
    const double C151831 = C151823 / C151830;
    const double C152154 = C151829 * C151823;
    const double C152152 = C151823 / C151812;
    const double C335 = (C151821 * std::pow(C151817, 2)) / C151815 + C151822;
    const double C151833 = C151832 * C151817;
    const double C152158 = C151814 * C151832;
    const double C152156 = 2 * C151832;
    const double C152212 = C151832 / C152160;
    const double C133 = C151832 / C152205;
    const double C3588 = C151832 / C151816;
    const double C152198 = C152153 / C151812;
    const double C336 = (-2 * C151829 * C152153) / C151812;
    const double C152233 = C152196 / C151815;
    const double C1259 = (C151849 * std::pow(C151904, 2)) / C151815 + C151903;
    const double C151906 = C151905 * C151904;
    const double C151911 = C151905 / C151830;
    const double C152166 = C151905 / C151812;
    const double C152163 = C151829 * C151905;
    const double C151913 = C151912 * C151904;
    const double C152172 = C151902 * C151912;
    const double C152171 = 2 * C151912;
    const double C152218 = C151912 / C152160;
    const double C1351 = C151912 / C152205;
    const double C3585 = C151912 / C151816;
    const double C152214 = C152168 / C151812;
    const double C1260 = (-2 * C151829 * C152168) / C151812;
    const double C152238 = C152206 / C151815;
    const double C2215 = (C151867 * std::pow(C151946, 2)) / C151815 + C151945;
    const double C151948 = C151947 * C151946;
    const double C151953 = C151947 / C151830;
    const double C152167 = C151947 / C151812;
    const double C152165 = C151829 * C151947;
    const double C151955 = C151954 * C151946;
    const double C152178 = C151944 * C151954;
    const double C152177 = 2 * C151954;
    const double C152224 = C151954 / C152160;
    const double C2450 = C151954 / C152205;
    const double C4779 = C151954 / C151816;
    const double C152220 = C152174 / C151812;
    const double C2216 = (-2 * C151829 * C152174) / C151812;
    const double C152240 = C152209 / C151815;
    const double C152187 = C152084 / C150520;
    const double C152186 = C152084 * C152083;
    const double C152183 = C152084 / C150505;
    const double C6087 = (2 * C151794 * C152084) / C150505;
    const double C152188 = C152087 * C152083;
    const double C59431 = C152087 / C152149;
    const double C73612 = C152087 / C150511;
    const double C152225 = C152185 / C150505;
    const double C6086 = (C152037 * std::pow(C152082, 2)) / C150510 + C152180;
    const double C152191 = C152110 / C150520;
    const double C152190 = C152110 * C152109;
    const double C152184 = C152110 / C150505;
    const double C14752 = (2 * C151794 * C152110) / C150505;
    const double C152192 = C152113 * C152109;
    const double C117887 = C152113 / C152149;
    const double C134230 = C152113 / C150511;
    const double C152228 = C152189 / C150505;
    const double C14751 = (C152049 * std::pow(C152108, 2)) / C150510 + C152182;
    const double C150531 = C150516 - C150527;
    const double C150530 = C150506 * C150525;
    const double C6092 = (-C150525 / C150505) / C150511 - (0 * be) / C150505;
    const double C59433 = -C150525 / C150505;
    const double C150529 = C150524 / C150505;
    const double C73867 = C152145 * C365;
    const double C82829 = C152145 * C574;
    const double C152193 = C152144 / C150510;
    const double C152195 = C152148 / C150505;
    const double C6084 = -C152194;
    const double C51131 = C50870 * C365;
    const double C101858 = C50870 * C574;
    const double C150629 = ae * C150628;
    const double C152 = (C150615 * C150613 * C150622 + C150614 * C150628 +
                         C150614 * C150617 * ae) /
                        C150505;
    const double C352 = (C150860 * C150628) / C150505;
    const double C561 = (C150963 * C150628) / C150505;
    const double C150646 = ae * C150644;
    const double C150645 = C150614 * C150644;
    const double C150655 = 2 * C150644;
    const double C150867 = C150860 * C150644;
    const double C150970 = C150963 * C150644;
    const double C355 = (C150628 + C150644 * C150873) / C150505;
    const double C564 = (C150628 + C150644 * C150976) / C150505;
    const double C364 =
        (2 * ae * C150860 * C150626 + C150614 * C150860 * C150643) / C150510;
    const double C366 = ((C150617 + C150618 * C150619 * C150623) * C150621 +
                         C150643 * std::pow(C150860, 2)) /
                        C150510;
    const double C573 =
        (2 * ae * C150963 * C150626 + C150614 * C150963 * C150643) / C150510;
    const double C575 = ((C150617 + C150618 * C150619 * C150623) * C150621 +
                         C150643 * std::pow(C150963, 2)) /
                        C150510;
    const double C1095 = (C150963 * C150860 * C150643) / C150510;
    const double C150673 = ae * C150670;
    const double C150672 = C150614 * C150670;
    const double C150689 = 2 * C150670;
    const double C150863 = C150860 * C150670;
    const double C150875 = C150670 * C150873;
    const double C150966 = C150963 * C150670;
    const double C150978 = C150670 * C150976;
    const double C150898 = 2 * C150893;
    const double C151001 = 2 * C150996;
    const double C7820 =
        (4 * (2 * C151522 + C150860 * C151529) +
         C150860 *
             (3 * C151529 + C150860 * (2 * C150888 + C150860 * C150906))) /
        C150505;
    const double C9438 =
        (2 * C150963 * C151529 + C150963 * (C151529 + C150906 * C150976)) /
        C150505;
    const double C17809 =
        (4 * (2 * C150963 * C150639 + C150963 * C151558) +
         C150963 *
             (3 * C151558 + C150963 * (2 * C150991 + C150963 * C151009))) /
        C150505;
    const double C150671 = C150614 * C150669;
    const double C150861 = C150860 * C150669;
    const double C150964 = C150963 * C150669;
    const double C367 = (2 * ae * (C150626 + C150639 * C150873) +
                         C150614 * (C150643 + C150669 * C150873)) /
                        C150510;
    const double C576 = (2 * ae * (C150626 + C150639 * C150976) +
                         C150614 * (C150643 + C150669 * C150976)) /
                        C150510;
    const double C1372 =
        (2 * C150860 * C150643 + C150860 * (C150643 + C150669 * C150873)) /
        C150510;
    const double C1562 = (C150963 * (C150643 + C150669 * C150873)) / C150510;
    const double C2470 =
        (2 * C150963 * C150643 + C150963 * (C150643 + C150669 * C150976)) /
        C150510;
    const double C150705 = C150614 * C150701;
    const double C150704 = C150701 * ae;
    const double C150738 = 3 * C150701;
    const double C151670 = C150860 * C150701;
    const double C1354 =
        2 * C150860 * C150665 + C150860 * (C150665 + C150701 * C150873);
    const double C1359 = 3 * (C150665 + C150701 * C150873) +
                         C150860 * (2 * C150860 * C150701 +
                                    C150860 * (C150701 + C150751 * C150873));
    const double C1532 = C150860 * C150665 + C150860 * C150701 * C150976;
    const double C1536 = C150963 * (C150665 + C150701 * C150873);
    const double C1541 =
        C150665 + C150701 * C150873 + (C150701 + C150751 * C150873) * C150976;
    const double C2055 = C150963 * (2 * C150860 * C150701 +
                                    C150860 * (C150701 + C150751 * C150873));
    const double C2452 =
        2 * C150963 * C150665 + C150963 * (C150665 + C150701 * C150976);
    const double C2457 = 3 * (C150665 + C150701 * C150976) +
                         C150963 * (2 * C150963 * C150701 +
                                    C150963 * (C150701 + C150751 * C150976));
    const double C151675 = C150660 + C151674;
    const double C151689 = 2 * C151687;
    const double C9434 =
        3 * (C151668 + C151687 * C150976) +
        C150963 * (2 * C150963 * C151687 +
                   C150963 * (C151687 + C150860 * C150745 * C150976));
    const double C151717 = C150660 + C151716;
    const double C151731 = 2 * C151729;
    const double C150712 = ae * C150707;
    const double C150710 = C150614 * C150707;
    const double C150736 = 2 * C150707;
    const double C150881 = C150707 * C150873;
    const double C150892 = C150860 * C150707;
    const double C150984 = C150707 * C150976;
    const double C150995 = C150963 * C150707;
    const double C150709 = C150614 * C150706;
    const double C150879 = C150706 * C150873;
    const double C150889 = C150860 * C150706;
    const double C150982 = C150706 * C150976;
    const double C150992 = C150963 * C150706;
    const double C151684 = C150860 * C151683;
    const double C151749 = 3 * C151683;
    const double C9432 =
        2 * C150963 * C151678 + C150963 * (C151678 + C151683 * C150976);
    const double C9435 =
        3 * (C151678 + C151683 * C150976) +
        C150963 *
            (2 * C150963 * C151683 +
             C150963 * (C151683 + (C150685 + C150731 * C150873) * C150976));
    const double C151726 = C150963 * C151725;
    const double C151773 = 3 * C151725;
    const double C151743 = C151680 + C151742;
    const double C151764 = 2 * C151762;
    const double C150763 = ae * C150757;
    const double C150760 = C150614 * C150757;
    const double C150797 = 2 * C150757;
    const double C150905 = C150757 * C150873;
    const double C150925 = C150860 * C150757;
    const double C151008 = C150757 * C150976;
    const double C151028 = C150963 * C150757;
    const double C150952 = ae * C150946;
    const double C151250 = C150860 * C150946;
    const double C151263 = C150963 * C150946;
    const double C151583 = C150946 * C150976;
    const double C9441 = (3 * (C151529 + C150906 * C150976) +
                          C150963 * (2 * C150963 * C150906 +
                                     C150963 * (C150906 + C150946 * C150976))) /
                         C150505;
    const double C151055 = ae * C151049;
    const double C151353 = C150963 * C151049;
    const double C151085 = 2 * C151077;
    const double C151150 = ae * C151143;
    const double C151339 = C150920 + C151334;
    const double C151111 = 2 * C151103;
    const double C150759 = C150614 * C150756;
    const double C150902 = C150756 * C150873;
    const double C150921 = C150860 * C150756;
    const double C151005 = C150756 * C150976;
    const double C151024 = C150963 * C150756;
    const double C150819 = C150614 * C150815;
    const double C150818 = C150815 * ae;
    const double C150827 = ae * C150821;
    const double C150824 = C150614 * C150821;
    const double C150944 = C150821 * C150873;
    const double C151047 = C150821 * C150976;
    const double C151074 = C150860 * C150821;
    const double C151100 = C150963 * C150821;
    const double C150823 = C150614 * C150820;
    const double C150940 = C150820 * C150873;
    const double C151043 = C150820 * C150976;
    const double C151069 = C150860 * C150820;
    const double C151095 = C150963 * C150820;
    const double C150916 = 2 * C150911;
    const double C151533 = C151531 + C151532;
    const double C151139 = 2 * C151134;
    const double C151019 = 2 * C151014;
    const double C151562 = C151560 + C151561;
    const double C150758 = C150737 + C150755;
    const double C151701 = C150701 + C151700;
    const double C151739 = C150701 + C151738;
    const double C151691 = C150860 * C151690;
    const double C151733 = C150963 * C151732;
    const double C151747 = C151687 + C151746;
    const double C151754 = C151750 + C151753;
    const double C151771 = C151683 + C151770;
    const double C151767 = C150963 * C151766;
    const double C151779 = C151776 + C151778;
    const double C151825 = C151824 / C151815;
    const double C152199 = 2 * C152154;
    const double C151834 = C151833 / C151812;
    const double C152203 = C152158 / C151830;
    const double C152234 = C152152 - C152198;
    const double C3241 = -C152198;
    const double C152252 = C152233 + C151822;
    const double C151907 = C151906 / C151815;
    const double C152207 = 2 * C152163;
    const double C151914 = C151913 / C151812;
    const double C152217 = C152172 / C151830;
    const double C152242 = C152166 - C152214;
    const double C3101 = -C152214;
    const double C152255 = C152238 + C151903;
    const double C151949 = C151948 / C151815;
    const double C152210 = 2 * C152165;
    const double C151956 = C151955 / C151812;
    const double C152223 = C152178 / C151830;
    const double C152245 = C152167 - C152220;
    const double C4107 = -C152220;
    const double C152256 = C152240 + C151945;
    const double C152226 = C152186 / C150510;
    const double C152227 = C152188 / C150505;
    const double C50873 = -C152225;
    const double C152229 = C152190 / C150510;
    const double C152230 = C152192 / C150505;
    const double C101415 = -C152228;
    const double C73619 = C150531 * C151;
    const double C141 =
        (C150531 / C150511 - (0 * be) / C150505) / C150511 + (0 * ae) / C150505;
    const double C23131 = C150531 / C150511 - (0 * be) / C150505;
    const double C50880 = C150531 / C150511 + (0 * ae) / C150505;
    const double C150533 = C150530 / C150505;
    const double C6095 = C6092 * C151;
    const double C59442 = C59433 * C151;
    const double C59438 = C59433 * C1364;
    const double C59437 = C59433 * C354;
    const double C59436 = C59433 * C353;
    const double C59435 = C59433 * C150;
    const double C59608 = C59433 * C1365;
    const double C59831 = C59433 * C1551;
    const double C59830 = C59433 * C1546;
    const double C59829 = C59433 * C563;
    const double C59828 = C59433 * C562;
    const double C59827 = C59433 * C1089;
    const double C59826 = C59433 * C1550;
    const double C59825 = C59433 * C2057;
    const double C61670 = C59433 * C9439;
    const double C61669 = C59433 * C2463;
    const double C61668 = C59433 * C2462;
    const double C61667 = C59433 * C2959;
    const double C152231 = C152143 - C152193;
    const double C152232 = C152147 - C152195;
    const double C6343 = C6084 * C365;
    const double C15198 = C6084 * C574;
    const double C160 =
        ((C150617 + C150618 * C150619 * C150623) * C150621 + C150629 + C150629 +
         C150614 *
             (2 * ae * C150626 +
              C150614 *
                  (C150619 * C150623 + C150618 * bs[4] * std::pow(C150612, 4)) *
                  C150621)) /
        C150510;
    const double C6104 = C6092 * C152;
    const double C59443 = C59433 * C152;
    const double C73628 = C150531 * C152;
    const double C6097 = C6092 * C352;
    const double C59441 = C59433 * C352;
    const double C73621 = C150531 * C352;
    const double C6672 = C6092 * C561;
    const double C59833 = C59433 * C561;
    const double C74196 = C150531 * C561;
    const double C150647 = C150626 + C150645;
    const double C150868 = ae * C150867;
    const double C1090 = (C150963 * C150867) / C150505;
    const double C150971 = ae * C150970;
    const double C6099 = C6092 * C355;
    const double C59440 = C59433 * C355;
    const double C73623 = C150531 * C355;
    const double C6675 = C6092 * C564;
    const double C59840 = C59433 * C564;
    const double C74199 = C150531 * C564;
    const double C6359 = C6084 * C364;
    const double C6345 = C151795 * C364;
    const double C51149 = C50870 * C364;
    const double C51133 = C50871 * C364;
    const double C59612 = C151790 * C364;
    const double C73883 = C152145 * C364;
    const double C73869 = C151795 * C364;
    const double C6347 = C6084 * C366;
    const double C51144 = C50870 * C366;
    const double C59604 = C151790 * C366;
    const double C73871 = C152145 * C366;
    const double C15210 = C6084 * C573;
    const double C15200 = C151795 * C573;
    const double C65735 = C151790 * C573;
    const double C82837 = C152145 * C573;
    const double C82831 = C151795 * C573;
    const double C101870 = C50870 * C573;
    const double C101860 = C50871 * C573;
    const double C15202 = C6084 * C575;
    const double C65731 = C151790 * C575;
    const double C82835 = C152145 * C575;
    const double C101868 = C50870 * C575;
    const double C7417 = C6084 * C1095;
    const double C52199 = C50870 * C1095;
    const double C60331 = C151790 * C1095;
    const double C74941 = C152145 * C1095;
    const double C150683 = C150669 + C150673;
    const double C150675 = C150639 + C150672;
    const double C150865 = ae * C150863;
    const double C151120 = C150963 * C150863;
    const double C151173 = 2 * C150863;
    const double C1545 = (C150867 + C150863 * C150976) / C150505;
    const double C150876 = C150644 + C150875;
    const double C150968 = ae * C150966;
    const double C151299 = 2 * C150966;
    const double C150979 = C150644 + C150978;
    const double C59610 = C59433 * C7820;
    const double C61666 = C59433 * C9438;
    const double C68345 = C59433 * C17809;
    const double C150674 = C150656 + C150671;
    const double C1096 =
        (2 * ae * C150963 * C150860 * C150639 + C150614 * C150963 * C150861) /
        C150510;
    const double C1558 = (C150860 * C150643 + C150861 * C150976) / C150510;
    const double C6363 = C6084 * C367;
    const double C6349 = C151795 * C367;
    const double C51156 = C50870 * C367;
    const double C51141 = C50871 * C367;
    const double C59614 = C151790 * C367;
    const double C73887 = C152145 * C367;
    const double C73873 = C151795 * C367;
    const double C15214 = C6084 * C576;
    const double C15204 = C151795 * C576;
    const double C65737 = C151790 * C576;
    const double C82841 = C152145 * C576;
    const double C82833 = C151795 * C576;
    const double C101876 = C50870 * C576;
    const double C101866 = C50871 * C576;
    const double C6355 = C6084 * C1372;
    const double C52589 = C50870 * C1372;
    const double C59606 = C151790 * C1372;
    const double C73879 = C152145 * C1372;
    const double C7413 = C6084 * C1562;
    const double C52849 = C50870 * C1562;
    const double C60329 = C151790 * C1562;
    const double C74937 = C152145 * C1562;
    const double C15208 = C6084 * C2470;
    const double C65733 = C151790 * C2470;
    const double C86227 = C152145 * C2470;
    const double C104441 = C50870 * C2470;
    const double C150708 = C150690 + C150705;
    const double C2957 = 2 * C150963 * C151670 +
                         C150963 * (C151670 + C150860 * C150751 * C150976);
    const double C18132 =
        3 * (C151670 + C151736 * C150976) +
        C150963 * (2 * C150963 * C151736 +
                   C150963 * (C151736 + C150860 * C150815 * C150976));
    const double C7815 =
        4 * (2 * C151668 + C150860 * C151675) +
        C150860 *
            (3 * C151675 + C150860 * (2 * C150860 * C150696 +
                                      C150860 * (C150696 + C150745 * C150873)));
    const double C9431 =
        2 * C150963 * C151675 + C150963 * (C151675 + C151690 * C150976);
    const double C9436 =
        3 * (C151675 + C151690 * C150976) +
        C150963 *
            (2 * C150963 * C151690 +
             C150963 * (C151690 + (C150745 + C150808 * C150873) * C150976));
    const double C17804 =
        4 * (2 * C150963 * C150660 + C150963 * C151717) +
        C150963 *
            (3 * C151717 + C150963 * (2 * C150963 * C150696 +
                                      C150963 * (C150696 + C150745 * C150976)));
    const double C150729 = C150706 + C150712;
    const double C150714 = C150663 + C150710;
    const double C150884 = C150670 + C150881;
    const double C150897 = ae * C150892;
    const double C151125 = C150963 * C150892;
    const double C151165 = 2 * C150892;
    const double C151217 = C150892 * C150976;
    const double C150987 = C150670 + C150984;
    const double C151000 = ae * C150995;
    const double C151291 = 2 * C150995;
    const double C150713 = C150692 + C150709;
    const double C150882 = C150669 + C150879;
    const double C150894 = C150614 * C150889;
    const double C151123 = C150963 * C150889;
    const double C151161 = 2 * C150889;
    const double C1557 = (2 * ae * (C150860 * C150639 + C150888 * C150976) +
                          C150614 * (C150861 + C150889 * C150976)) /
                         C150510;
    const double C2963 =
        (2 * C150963 * C150861 + C150963 * (C150861 + C150889 * C150976)) /
        C150510;
    const double C150985 = C150669 + C150982;
    const double C150997 = C150614 * C150992;
    const double C151287 = 2 * C150992;
    const double C151685 = C151682 + C151684;
    const double C151727 = C151724 + C151726;
    const double C18552 =
        4 * (2 * C150963 * C151680 + C150963 * C151743) +
        C150963 *
            (3 * C151743 +
             C150963 * (2 * C150963 * C151741 +
                        C150963 * (C151741 + C150860 * C150731 * C150976)));
    const double C150789 = C150756 + C150763;
    const double C150765 = C150699 + C150760;
    const double C150910 = C150707 + C150905;
    const double C150932 = ae * C150925;
    const double C151133 = C150963 * C150925;
    const double C151194 = 2 * C150925;
    const double C151210 = C150925 * C150976;
    const double C151013 = C150707 + C151008;
    const double C151035 = ae * C151028;
    const double C151320 = 2 * C151028;
    const double C150958 = 2 * C150952;
    const double C151256 = C151249 + C151250;
    const double C151268 = ae * C151263;
    const double C151584 = C150906 + C151583;
    const double C61671 = C59433 * C9441;
    const double C151061 = 2 * C151055;
    const double C151359 = C151352 + C151353;
    const double C151156 = 2 * C151150;
    const double C151344 = ae * C151339;
    const double C151580 = C150963 * C151339;
    const double C18554 =
        (4 * (2 * C150963 * C150888 + C150963 * C151568) +
         C150963 *
             (3 * C151568 + C150963 * (2 * C151129 + C150963 * C151339))) /
        C150505;
    const double C150764 = C150741 + C150759;
    const double C150907 = C150706 + C150902;
    const double C150928 = C150614 * C150921;
    const double C151130 = C150963 * C150921;
    const double C151188 = 2 * C150921;
    const double C151208 = C150921 * C150976;
    const double C151010 = C150706 + C151005;
    const double C151031 = C150614 * C151024;
    const double C151314 = 2 * C151024;
    const double C150822 = C150798 + C150819;
    const double C150829 = C150749 + C150824;
    const double C150951 = C150757 + C150944;
    const double C151054 = C150757 + C151047;
    const double C151083 = ae * C151074;
    const double C151148 = C150963 * C151074;
    const double C151338 = C151074 * C150976;
    const double C151109 = ae * C151100;
    const double C150828 = C150804 + C150823;
    const double C150947 = C150756 + C150940;
    const double C151050 = C150756 + C151043;
    const double C151078 = C150614 * C151069;
    const double C151144 = C150963 * C151069;
    const double C151335 = C151069 * C150976;
    const double C151104 = C150614 * C151095;
    const double C8080 =
        (2 * C151522 + C150860 * C151529 + C151533 * C150976) / C150505;
    const double C8082 =
        (C150963 * (3 * C151529 + C150860 * C151533)) / C150505;
    const double C150762 = C150614 * C150758;
    const double C150761 = C150758 * ae;
    const double C150800 = 4 * C150758;
    const double C151672 = C150860 * C150758;
    const double C8335 =
        4 * (2 * C151670 + C150860 * C151701) +
        C150860 *
            (3 * C151701 + C150860 * (2 * C150860 * C150751 +
                                      C150860 * (C150751 + C150815 * C150873)));
    const double C8642 =
        C150963 *
        (3 * C151701 + C150860 * (2 * C150860 * C150751 +
                                  C150860 * (C150751 + C150815 * C150873)));
    const double C9751 =
        2 * C151670 + C150860 * C151701 +
        (2 * C150860 * C150751 + C150860 * (C150751 + C150815 * C150873)) *
            C150976;
    const double C9970 =
        2 * C150963 * C151701 +
        C150963 * (C151701 + (C150751 + C150815 * C150873) * C150976);
    const double C18342 =
        4 * (2 * C150963 * C150701 + C150963 * C151739) +
        C150963 *
            (3 * C151739 + C150963 * (2 * C150963 * C150751 +
                                      C150963 * (C150751 + C150815 * C150976)));
    const double C151692 = C151689 + C151691;
    const double C151734 = C151731 + C151733;
    const double C18553 =
        4 * (2 * C150963 * C151687 + C150963 * C151747) +
        C150963 *
            (3 * C151747 +
             C150963 * (2 * C150963 * C151745 +
                        C150963 * (C151745 + C150860 * C150808 * C150976)));
    const double C151755 = C150860 * C151754;
    const double C69051 =
        4 * (2 * C150963 * C151683 + C150963 * C151771) +
        C150963 *
            (3 * C151771 +
             C150963 * (2 * C150963 * C151752 +
                        C150963 * (C151752 +
                                   (C150731 + C150791 * C150873) * C150976)));
    const double C151768 = C151764 + C151767;
    const double C151780 = C150963 * C151779;
    const double C151826 = C151822 - C151825;
    const double C152235 = C152199 / C151812;
    const double C151835 = C151831 - C151834;
    const double C152253 = C152234 / C151816;
    const double C151908 = C151903 - C151907;
    const double C152239 = C152207 / C151812;
    const double C151915 = C151911 - C151914;
    const double C152257 = C152242 / C151816;
    const double C151950 = C151945 - C151949;
    const double C152241 = C152210 / C151812;
    const double C151957 = C151953 - C151956;
    const double C152259 = C152245 / C151816;
    const double C152248 = C152180 - C152226;
    const double C152249 = C152187 - C152227;
    const double C152250 = C152182 - C152229;
    const double C152251 = C152191 - C152230;
    const double C23135 = C23131 * C152;
    const double C50884 = C50880 * C152;
    const double C150535 = C151790 - C150533;
    const double C23407 = C152231 * C367;
    const double C23400 = C152231 * C364;
    const double C23395 = C152231 * C366;
    const double C23382 = C152231 * C365;
    const double C24450 = C152231 * C1095;
    const double C24840 = C152231 * C1372;
    const double C25100 = C152231 * C1562;
    const double C32179 = C152231 * C576;
    const double C32173 = C152231 * C573;
    const double C32171 = C152231 * C575;
    const double C32161 = C152231 * C574;
    const double C34744 = C152231 * C2470;
    const double C121 =
        (C152231 * C151785) / C150505 + (C152145 - C152194) / C150511;
    const double C23392 = C152232 * C367;
    const double C23384 = C152232 * C364;
    const double C32169 = C152232 * C576;
    const double C32163 = C152232 * C573;
    const double C122 =
        (C152232 * C151785) / C150505 + (2 * C151795 + C152231) / C150511;
    const double C123 = (C151785 * C151795) / C150520 + C152232 / C150511;
    const double C150648 = C150647 + C150640;
    const double C363 =
        (C150860 * C150643 + C150868 + C150868 +
         C150614 * (2 * ae * C150860 * C150639 + C150614 * C150861)) /
        C150510;
    const double C6670 = C6092 * C1090;
    const double C59834 = C59433 * C1090;
    const double C74194 = C150531 * C1090;
    const double C572 =
        (C150963 * C150643 + C150971 + C150971 +
         C150614 * (2 * ae * C150963 * C150639 + C150614 * C150964)) /
        C150510;
    const double C150691 = C150683 + C150673;
    const double C150676 = C150675 + C150664;
    const double C151121 = ae * C151120;
    const double C6677 = C6092 * C1545;
    const double C59839 = C59433 * C1545;
    const double C74201 = C150531 * C1545;
    const double C150877 = ae * C150876;
    const double C1363 = (2 * C150867 + C150860 * C150876) / C150505;
    const double C1549 = (C150963 * C150876) / C150505;
    const double C150980 = ae * C150979;
    const double C2461 = (2 * C150970 + C150963 * C150979) / C150505;
    const double C7421 = C6084 * C1096;
    const double C7415 = C151795 * C1096;
    const double C24455 = C152231 * C1096;
    const double C24448 = C152232 * C1096;
    const double C52204 = C50870 * C1096;
    const double C52197 = C50871 * C1096;
    const double C60334 = C151790 * C1096;
    const double C74945 = C152145 * C1096;
    const double C74939 = C151795 * C1096;
    const double C8094 = C6084 * C1558;
    const double C25094 = C152231 * C1558;
    const double C52843 = C50870 * C1558;
    const double C60778 = C151790 * C1558;
    const double C75588 = C152145 * C1558;
    const double C150711 = C150708 * ae;
    const double C147 = 4 * (2 * C150637 + C150614 * C150665) +
                        C150614 * (3 * C150665 + C150614 * C150708);
    const double C345 = 2 * C150637 + C150614 * C150665 + C150708 * C150873;
    const double C346 = C150860 * (3 * C150665 + C150614 * C150708);
    const double C554 = 2 * C150637 + C150614 * C150665 + C150708 * C150976;
    const double C555 = C150963 * (3 * C150665 + C150614 * C150708);
    const double C1086 = C150963 * C150860 * C150708;
    const double C1353 =
        2 * C150860 * C150708 + C150860 * (C150708 + C150758 * C150873);
    const double C1531 = C150860 * C150708 + C150860 * C150758 * C150976;
    const double C1535 = C150963 * (C150708 + C150758 * C150873);
    const double C2451 =
        2 * C150963 * C150708 + C150963 * (C150708 + C150758 * C150976);
    const double C150740 = C150729 + C150712;
    const double C150716 = C150714 + C150700;
    const double C150886 = ae * C150884;
    const double C151174 = C150860 * C150884;
    const double C151182 = 3 * C150884;
    const double C151229 = C150963 * C150884;
    const double C1552 = (C150876 + C150884 * C150976) / C150505;
    const double C150919 = C150889 + C150897;
    const double C151127 = ae * C151125;
    const double C151368 = 2 * C151125;
    const double C151218 = C150863 + C151217;
    const double C150989 = ae * C150987;
    const double C151300 = C150963 * C150987;
    const double C151308 = 3 * C150987;
    const double C151022 = C150992 + C151000;
    const double C150715 = C150614 * C150713;
    const double C150728 = 2 * C150713;
    const double C1371 =
        (2 * ae *
             (2 * C150860 * C150639 + C150860 * (C150639 + C150663 * C150873)) +
         C150614 * (2 * C150861 + C150860 * C150882)) /
        C150510;
    const double C1373 = (3 * (C150643 + C150669 * C150873) +
                          C150860 * (2 * C150861 + C150860 * C150882)) /
                         C150510;
    const double C1561 = (2 * ae * C150963 * (C150639 + C150663 * C150873) +
                          C150614 * C150963 * C150882) /
                         C150510;
    const double C1563 =
        (C150643 + C150669 * C150873 + C150882 * C150976) / C150510;
    const double C2061 =
        (C150963 * (2 * C150861 + C150860 * C150882)) / C150510;
    const double C150899 = C150898 + C150894;
    const double C8096 = C151795 * C1557;
    const double C9762 = C6084 * C1557;
    const double C25096 = C152232 * C1557;
    const double C26744 = C152231 * C1557;
    const double C52845 = C50871 * C1557;
    const double C54493 = C50870 * C1557;
    const double C61872 = C151790 * C1557;
    const double C75590 = C151795 * C1557;
    const double C77223 = C152145 * C1557;
    const double C10187 = C6084 * C2963;
    const double C27156 = C152231 * C2963;
    const double C54905 = C50870 * C2963;
    const double C62158 = C151790 * C2963;
    const double C77639 = C152145 * C2963;
    const double C2469 =
        (2 * ae *
             (2 * C150963 * C150639 + C150963 * (C150639 + C150663 * C150976)) +
         C150614 * (2 * C150964 + C150963 * C150985)) /
        C150510;
    const double C2471 = (3 * (C150643 + C150669 * C150976) +
                          C150963 * (2 * C150964 + C150963 * C150985)) /
                         C150510;
    const double C151002 = C151001 + C150997;
    const double C7817 =
        5 * (3 * C151678 + C150860 * C151685) +
        C150860 *
            (4 * C151685 +
             C150860 * (3 * C151683 +
                        C150860 * (2 * C150860 * C150685 +
                                   C150860 * (C150685 + C150731 * C150873))));
    const double C8074 = 2 * C151666 + C150860 * C151678 + C151685 * C150976;
    const double C8076 = C150963 * (3 * C151678 + C150860 * C151685);
    const double C8077 =
        3 * C151678 + C150860 * C151685 +
        (3 * C151683 + C150860 * (2 * C150860 * C150685 +
                                  C150860 * (C150685 + C150731 * C150873))) *
            C150976;
    const double C8853 =
        C150963 *
        (4 * C151685 +
         C150860 * (3 * C151683 +
                    C150860 * (2 * C150860 * C150685 +
                               C150860 * (C150685 + C150731 * C150873))));
    const double C10173 =
        2 * C150963 * C151685 +
        C150963 * (C151685 + (2 * C150860 * C150685 +
                              C150860 * (C150685 + C150731 * C150873)) *
                                 C150976);
    const double C61661 =
        3 * (C151685 + C151754 * C150976) +
        C150963 *
            (2 * C150963 * C151754 +
             C150963 * (C151754 + (2 * C150860 * C150731 +
                                   C150860 * (C150731 + C150791 * C150873)) *
                                      C150976));
    const double C17806 =
        5 * (3 * C151720 + C150963 * C151727) +
        C150963 *
            (4 * C151727 +
             C150963 * (3 * C151725 +
                        C150963 * (2 * C150963 * C150685 +
                                   C150963 * (C150685 + C150731 * C150976))));
    const double C150803 = C150789 + C150763;
    const double C150768 = C150765 + C150750;
    const double C150915 = ae * C150910;
    const double C151166 = C150860 * C150910;
    const double C151193 = 3 * C150910;
    const double C151225 = C150963 * C150910;
    const double C151236 = C150910 * C150976;
    const double C151067 = C150921 + C150932;
    const double C151138 = ae * C151133;
    const double C151377 = 2 * C151133;
    const double C151213 = C150892 + C151210;
    const double C151018 = ae * C151013;
    const double C151292 = C150963 * C151013;
    const double C151319 = 3 * C151013;
    const double C151093 = C151024 + C151035;
    const double C151258 = ae * C151256;
    const double C151572 = C150860 * C151256;
    const double C7821 =
        (5 * (3 * C151529 + C150860 * C151533) +
         C150860 *
             (4 * C151533 + C150860 * (3 * C150906 + C150860 * C151256))) /
        C150505;
    const double C8083 = (3 * C151529 + C150860 * C151533 +
                          (3 * C150906 + C150860 * C151256) * C150976) /
                         C150505;
    const double C8855 =
        (C150963 *
         (4 * C151533 + C150860 * (3 * C150906 + C150860 * C151256))) /
        C150505;
    const double C10175 =
        (2 * C150963 * C151533 + C150963 * (C151533 + C151256 * C150976)) /
        C150505;
    const double C61662 =
        (3 * (C151533 + C151256 * C150976) +
         C150963 *
             (2 * C150963 * C151256 +
              C150963 * (C151256 + (2 * C151068 +
                                    C150860 * (C150749 + C150813 * C150873)) *
                                       C150976))) /
        C150505;
    const double C151273 = 2 * C151268;
    const double C69052 =
        (4 * (2 * C150963 * C150906 + C150963 * C151584) +
         C150963 *
             (3 * C151584 +
              C150963 * (2 * C151263 +
                         C150963 * (C150946 + (C150749 + C150813 * C150873) *
                                                  C150976)))) /
        C150505;
    const double C151361 = ae * C151359;
    const double C151587 = C150963 * C151359;
    const double C17810 =
        (5 * (3 * C151558 + C150963 * C151562) +
         C150963 *
             (4 * C151562 + C150963 * (3 * C151009 + C150963 * C151359))) /
        C150505;
    const double C151349 = 2 * C151344;
    const double C151581 = C151579 + C151580;
    const double C68342 = C59433 * C18554;
    const double C150767 = C150614 * C150764;
    const double C150788 = 2 * C150764;
    const double C150912 = C150614 * C150907;
    const double C151162 = C150860 * C150907;
    const double C151187 = 3 * C150907;
    const double C151223 = C150963 * C150907;
    const double C1564 =
        (2 * ae * (C150639 + C150663 * C150873 + C150906 * C150976) +
         C150614 * (C150882 + C150907 * C150976)) /
        C150510;
    const double C9444 =
        (2 * C150963 * C150882 + C150963 * (C150882 + C150907 * C150976)) /
        C150510;
    const double C150934 = C150933 + C150928;
    const double C151135 = C150614 * C151130;
    const double C151373 = 2 * C151130;
    const double C151211 = C150889 + C151208;
    const double C151015 = C150614 * C151010;
    const double C151288 = C150963 * C151010;
    const double C151313 = 3 * C151010;
    const double C151037 = C151036 + C151031;
    const double C150826 = C150614 * C150822;
    const double C150825 = C150822 * ae;
    const double C1360 = 3 * (C150708 + C150758 * C150873) +
                         C150860 * (2 * C150860 * C150758 +
                                    C150860 * (C150758 + C150822 * C150873));
    const double C1542 =
        C150708 + C150758 * C150873 + (C150758 + C150822 * C150873) * C150976;
    const double C2056 = C150963 * (2 * C150860 * C150758 +
                                    C150860 * (C150758 + C150822 * C150873));
    const double C2458 = 3 * (C150708 + C150758 * C150976) +
                         C150963 * (2 * C150963 * C150758 +
                                    C150963 * (C150758 + C150822 * C150976));
    const double C150832 = C150829 + C150814;
    const double C150957 = ae * C150951;
    const double C151195 = C150860 * C150951;
    const double C151242 = C150951 * C150976;
    const double C151267 = C150963 * C150951;
    const double C151060 = ae * C151054;
    const double C151321 = C150963 * C151054;
    const double C151155 = ae * C151148;
    const double C151343 = C150925 + C151338;
    const double C150831 = C150614 * C150828;
    const double C150953 = C150614 * C150947;
    const double C151189 = C150860 * C150947;
    const double C151240 = C150947 * C150976;
    const double C151264 = C150963 * C150947;
    const double C151056 = C150614 * C151050;
    const double C151315 = C150963 * C151050;
    const double C151086 = C151085 + C151078;
    const double C151151 = C150614 * C151144;
    const double C151340 = C150921 + C151335;
    const double C151112 = C151111 + C151104;
    const double C59832 = C59433 * C8080;
    const double C60332 = C59433 * C8082;
    const double C150766 = C150738 + C150762;
    const double C2958 = 2 * C150963 * C151672 +
                         C150963 * (C151672 + C150860 * C150822 * C150976);
    const double C7818 =
        5 * (3 * C151675 + C150860 * C151692) +
        C150860 *
            (4 * C151692 +
             C150860 * (3 * C151690 +
                        C150860 * (2 * C150860 * C150745 +
                                   C150860 * (C150745 + C150808 * C150873))));
    const double C8073 = 2 * C151668 + C150860 * C151675 + C151692 * C150976;
    const double C8075 = C150963 * (3 * C151675 + C150860 * C151692);
    const double C8078 =
        3 * C151675 + C150860 * C151692 +
        (3 * C151690 + C150860 * (2 * C150860 * C150745 +
                                  C150860 * (C150745 + C150808 * C150873))) *
            C150976;
    const double C8854 =
        C150963 *
        (4 * C151692 +
         C150860 * (3 * C151690 +
                    C150860 * (2 * C150860 * C150745 +
                               C150860 * (C150745 + C150808 * C150873))));
    const double C10174 =
        2 * C150963 * C151692 +
        C150963 * (C151692 + (2 * C150860 * C150745 +
                              C150860 * (C150745 + C150808 * C150873)) *
                                 C150976);
    const double C17807 =
        5 * (3 * C151717 + C150963 * C151734) +
        C150963 *
            (4 * C151734 +
             C150963 * (3 * C151732 +
                        C150963 * (2 * C150963 * C150745 +
                                   C150963 * (C150745 + C150808 * C150976))));
    const double C151756 = C151749 + C151755;
    const double C68335 =
        5 * (3 * C151743 + C150963 * C151768) +
        C150963 *
            (4 * C151768 +
             C150963 * (3 * C151766 +
                        C150963 * (2 * C150963 * C151763 +
                                   C150963 * (C151763 +
                                              C150860 * C150791 * C150976))));
    const double C151781 = C151773 + C151780;
    const double C152151 = C151826 * C151814;
    const double C152201 = C152156 + C151826;
    const double C152159 = C151835 / C151816;
    const double C152155 = C151835 * C151814;
    const double C739 = C152253 - (C151826 * C151817) / C151812;
    const double C152169 = C151908 * C151902;
    const double C152216 = C152171 + C151908;
    const double C152173 = C151915 / C151816;
    const double C152170 = C151915 * C151902;
    const double C1709 = C152257 - (C151908 * C151904) / C151812;
    const double C152175 = C151950 * C151944;
    const double C152222 = C152177 + C151950;
    const double C152179 = C151957 / C151816;
    const double C152176 = C151957 * C151944;
    const double C2814 = C152259 - (C151950 * C151946) / C151812;
    const double C59428 =
        (C152248 * C152082) / C150505 + (C152183 - C152225) / C150511;
    const double C59429 =
        (C152249 * C152082) / C150505 + (2 * C152087 + C152248) / C150511;
    const double C59430 = (C152082 * C152087) / C150520 + C152249 / C150511;
    const double C117884 =
        (C152250 * C152108) / C150505 + (C152184 - C152228) / C150511;
    const double C117885 =
        (C152251 * C152108) / C150505 + (2 * C152113 + C152250) / C150511;
    const double C117886 = (C152108 * C152113) / C150520 + C152251 / C150511;
    const double C150537 = C150535 * ae;
    const double C150536 = C150535 * C150515;
    const double C6090 =
        (-C150507 / C150505) / C150511 - (C150535 * be) / C150505;
    const double C150649 = ae * C150648;
    const double C153 =
        (2 * C150628 + C150614 * C150648 + (C150617 + C150631 * C150618) * ae) /
        C150505;
    const double C351 = (C150860 * C150648) / C150505;
    const double C560 = (C150963 * C150648) / C150505;
    const double C6375 = C6084 * C363;
    const double C6361 = C151795 * C363;
    const double C23418 = C152231 * C363;
    const double C23402 = C152232 * C363;
    const double C23386 = C23123 * C363;
    const double C51167 = C50870 * C363;
    const double C51151 = C50871 * C363;
    const double C51135 = C50872 * C363;
    const double C59622 = C151790 * C363;
    const double C73899 = C152145 * C363;
    const double C73885 = C151795 * C363;
    const double C15224 = C6084 * C572;
    const double C15212 = C151795 * C572;
    const double C32185 = C152231 * C572;
    const double C32175 = C152232 * C572;
    const double C32165 = C23123 * C572;
    const double C65745 = C151790 * C572;
    const double C82845 = C152145 * C572;
    const double C82839 = C151795 * C572;
    const double C101882 = C50870 * C572;
    const double C101872 = C50871 * C572;
    const double C101862 = C50872 * C572;
    const double C150678 = ae * C150676;
    const double C150677 = C150614 * C150676;
    const double C150688 = 3 * C150676;
    const double C150862 = C150860 * C150676;
    const double C150965 = C150963 * C150676;
    const double C356 = (C150648 + C150676 * C150873) / C150505;
    const double C565 = (C150648 + C150676 * C150976) / C150505;
    const double C1097 =
        (C150963 * C150861 + C151121 + C151121 +
         C150614 * (2 * ae * C150963 * C150888 + C150614 * C150963 * C150889)) /
        C150510;
    const double C368 = (C150643 + C150669 * C150873 + C150877 + C150877 +
                         C150614 * (2 * ae * (C150639 + C150663 * C150873) +
                                    C150614 * (C150669 + C150706 * C150873))) /
                        C150510;
    const double C6351 = C6092 * C1363;
    const double C59439 = C59433 * C1363;
    const double C73875 = C150531 * C1363;
    const double C6668 = C6092 * C1549;
    const double C59835 = C59433 * C1549;
    const double C74192 = C150531 * C1549;
    const double C577 = (C150643 + C150669 * C150976 + C150980 + C150980 +
                         C150614 * (2 * ae * (C150639 + C150663 * C150976) +
                                    C150614 * (C150669 + C150706 * C150976))) /
                        C150510;
    const double C9454 = C6092 * C2461;
    const double C62016 = C59433 * C2461;
    const double C76918 = C150531 * C2461;
    const double C150719 = ae * C150716;
    const double C150718 = C150614 * C150716;
    const double C150735 = 3 * C150716;
    const double C150880 = C150716 * C150873;
    const double C150891 = C150860 * C150716;
    const double C150983 = C150716 * C150976;
    const double C150994 = C150963 * C150716;
    const double C151175 = C151173 + C151174;
    const double C151230 = ae * C151229;
    const double C6679 = C6092 * C1552;
    const double C59838 = C59433 * C1552;
    const double C74203 = C150531 * C1552;
    const double C150926 = C150919 + C150897;
    const double C151219 = ae * C151218;
    const double C2960 = (2 * C151120 + C150963 * C151218) / C150505;
    const double C151301 = C151299 + C151300;
    const double C151029 = C151022 + C151000;
    const double C150717 = C150691 + C150715;
    const double C6368 = C6084 * C1371;
    const double C6352 = C151795 * C1371;
    const double C24842 = C152232 * C1371;
    const double C25346 = C152231 * C1371;
    const double C52591 = C50871 * C1371;
    const double C53095 = C50870 * C1371;
    const double C59616 = C151790 * C1371;
    const double C73892 = C152145 * C1371;
    const double C73876 = C151795 * C1371;
    const double C7830 = C6084 * C1373;
    const double C24853 = C152231 * C1373;
    const double C52602 = C50870 * C1373;
    const double C59609 = C151790 * C1373;
    const double C75342 = C152145 * C1373;
    const double C7425 = C6084 * C1561;
    const double C7411 = C151795 * C1561;
    const double C25102 = C152232 * C1561;
    const double C25654 = C152231 * C1561;
    const double C52851 = C50871 * C1561;
    const double C53403 = C50870 * C1561;
    const double C60336 = C151790 * C1561;
    const double C74949 = C152145 * C1561;
    const double C74935 = C151795 * C1561;
    const double C8098 = C6084 * C1563;
    const double C25113 = C152231 * C1563;
    const double C52862 = C50870 * C1563;
    const double C60780 = C151790 * C1563;
    const double C75592 = C152145 * C1563;
    const double C8102 = C6084 * C2061;
    const double C25866 = C152231 * C2061;
    const double C53615 = C50870 * C2061;
    const double C60327 = C151790 * C2061;
    const double C75596 = C152145 * C2061;
    const double C15218 = C6084 * C2469;
    const double C15206 = C151795 * C2469;
    const double C34746 = C152232 * C2469;
    const double C35265 = C152231 * C2469;
    const double C65739 = C151790 * C2469;
    const double C86229 = C151795 * C2469;
    const double C86919 = C152145 * C2469;
    const double C104443 = C50871 * C2469;
    const double C104962 = C50870 * C2469;
    const double C17819 = C6084 * C2471;
    const double C34754 = C152231 * C2471;
    const double C68340 = C151790 * C2471;
    const double C86237 = C152145 * C2471;
    const double C104451 = C50870 * C2471;
    const double C150772 = ae * C150768;
    const double C150771 = C150614 * C150768;
    const double C150796 = 3 * C150768;
    const double C150904 = C150768 * C150873;
    const double C150924 = C150860 * C150768;
    const double C151007 = C150768 * C150976;
    const double C151027 = C150963 * C150768;
    const double C150938 = C150907 + C150915;
    const double C151169 = C151165 + C151166;
    const double C151227 = ae * C151225;
    const double C151415 = 2 * C151225;
    const double C151237 = C150884 + C151236;
    const double C151076 = C151067 + C150932;
    const double C151142 = C151130 + C151138;
    const double C151215 = ae * C151213;
    const double C151369 = C150963 * C151213;
    const double C151426 = 3 * C151213;
    const double C151041 = C151010 + C151018;
    const double C151295 = C151291 + C151292;
    const double C151102 = C151093 + C151035;
    const double C151260 = 2 * C151258;
    const double C151573 = C151571 + C151572;
    const double C60617 = C59433 * C7821;
    const double C60786 = C59433 * C8083;
    const double C60788 = C59433 * C8855;
    const double C61665 = C59433 * C10175;
    const double C61672 = C59433 * C61662;
    const double C69058 = C59433 * C69052;
    const double C151363 = 2 * C151361;
    const double C151588 = C151586 + C151587;
    const double C68347 = C59433 * C17810;
    const double C68336 =
        (5 * (3 * C151568 + C150963 * C151581) +
         C150963 *
             (4 * C151581 +
              C150963 * (3 * C151339 +
                         C150963 * (2 * C151143 +
                                    C150963 * (C151068 + C150860 * C150813 *
                                                             C150976))))) /
        C150505;
    const double C150770 = C150740 + C150767;
    const double C150917 = C150916 + C150912;
    const double C151167 = C151161 + C151162;
    const double C8100 = C151795 * C1564;
    const double C9758 = C6084 * C1564;
    const double C25110 = C152232 * C1564;
    const double C52859 = C50871 * C1564;
    const double C61870 = C151790 * C1564;
    const double C75594 = C151795 * C1564;
    const double C77219 = C152145 * C1564;
    const double C10183 = C6084 * C9444;
    const double C62156 = C151790 * C9444;
    const double C77635 = C152145 * C9444;
    const double C150935 = C150614 * C150934;
    const double C151066 = 2 * C150934;
    const double C151140 = C151139 + C151135;
    const double C2964 =
        (2 * ae *
             (2 * C150963 * C150888 + C150963 * (C150888 + C150920 * C150976)) +
         C150614 * (2 * C151123 + C150963 * C151211)) /
        C150510;
    const double C9445 = (3 * (C150861 + C150889 * C150976) +
                          C150963 * (2 * C151123 + C150963 * C151211)) /
                         C150510;
    const double C151020 = C151019 + C151015;
    const double C151293 = C151287 + C151288;
    const double C151038 = C150614 * C151037;
    const double C151092 = 2 * C151037;
    const double C150830 = C150799 + C150826;
    const double C150838 = ae * C150832;
    const double C150836 = C150614 * C150832;
    const double C150943 = C150832 * C150873;
    const double C151046 = C150832 * C150976;
    const double C151073 = C150860 * C150832;
    const double C151099 = C150963 * C150832;
    const double C151198 = C151194 + C151195;
    const double C151245 = C150910 + C151242;
    const double C151272 = ae * C151267;
    const double C151324 = C151320 + C151321;
    const double C151348 = ae * C151343;
    const double C151378 = C150963 * C151343;
    const double C150835 = C150803 + C150831;
    const double C150959 = C150958 + C150953;
    const double C151196 = C151188 + C151189;
    const double C151243 = C150907 + C151240;
    const double C151269 = C150614 * C151264;
    const double C151062 = C151061 + C151056;
    const double C151322 = C151314 + C151315;
    const double C151087 = C150614 * C151086;
    const double C151157 = C151156 + C151151;
    const double C151345 = C150614 * C151340;
    const double C151374 = C150963 * C151340;
    const double C151113 = C150614 * C151112;
    const double C150769 = C150766 * ae;
    const double C148 = 5 * (3 * C150665 + C150614 * C150708) +
                        C150614 * (4 * C150708 + C150614 * C150766);
    const double C347 = 3 * C150665 + C150614 * C150708 + C150766 * C150873;
    const double C348 = C150860 * (4 * C150708 + C150614 * C150766);
    const double C556 = 3 * C150665 + C150614 * C150708 + C150766 * C150976;
    const double C557 = C150963 * (4 * C150708 + C150614 * C150766);
    const double C1087 = C150963 * C150860 * C150766;
    const double C60610 =
        6 * (4 * C151685 + C150860 * C151756) +
        C150860 *
            (5 * C151756 +
             C150860 * (4 * C151754 +
                        C150860 * (3 * C151752 +
                                   C150860 * (2 * C150860 * C150731 +
                                              C150860 * (C150731 +
                                                         C150791 * C150873)))));
    const double C60773 =
        4 * C151685 + C150860 * C151756 +
        (4 * C151754 +
         C150860 * (3 * C151752 +
                    C150860 * (2 * C150860 * C150731 +
                               C150860 * (C150731 + C150791 * C150873)))) *
            C150976;
    const double C61277 =
        C150963 *
        (5 * C151756 +
         C150860 *
             (4 * C151754 +
              C150860 * (3 * C151752 +
                         C150860 * (2 * C150860 * C150731 +
                                    C150860 * (C150731 + C150791 * C150873)))));
    const double C62149 =
        2 * C150963 * C151756 +
        C150963 *
            (C151756 + (3 * C151752 +
                        C150860 * (2 * C150860 * C150731 +
                                   C150860 * (C150731 + C150791 * C150873))) *
                           C150976);
    const double C119849 =
        6 * (4 * C151727 + C150963 * C151781) +
        C150963 *
            (5 * C151781 +
             C150963 * (4 * C151779 +
                        C150963 * (3 * C151777 +
                                   C150963 * (2 * C150963 * C150731 +
                                              C150963 * (C150731 +
                                                         C150791 * C150976)))));
    const double C152197 = C152151 / C151812;
    const double C152236 = C152201 / C151816;
    const double C152237 = C152203 + C152159;
    const double C741 = C152159 - C151833 / C151830;
    const double C152200 = C152155 / C151812;
    const double C152213 = C152169 / C151812;
    const double C152243 = C152216 / C151816;
    const double C152244 = C152217 + C152173;
    const double C1711 = C152173 - C151913 / C151830;
    const double C152215 = C152170 / C151812;
    const double C152219 = C152175 / C151812;
    const double C152246 = C152222 / C151816;
    const double C152247 = C152223 + C152179;
    const double C2816 = C152179 - C151955 / C151830;
    const double C152221 = C152176 / C151812;
    const double C150539 = C150537 / C150505;
    const double C150538 = C150506 * C150536;
    const double C140 = (-C150536 / C150505) / (4 * C150517);
    const double C6091 = (-C150536 / C150505) / C150511;
    const double C23130 = (-C150536 / C150505) / (4 * C150510);
    const double C50879 = (-C150536 / C150505) / (4 * C150510);
    const double C59432 = -C150536 / C150505;
    const double C73615 = (-C150536 / C150505) / C150511;
    const double C6106 = C6090 * C152;
    const double C6105 = C6090 * C151;
    const double C6103 = C6090 * C352;
    const double C6101 = C6090 * C355;
    const double C6098 = C6090 * C354;
    const double C6096 = C6090 * C353;
    const double C6094 = C6090 * C150;
    const double C6367 = C6090 * C1363;
    const double C6356 = C6090 * C1365;
    const double C6354 = C6090 * C1364;
    const double C6691 = C6090 * C564;
    const double C6689 = C6090 * C1545;
    const double C6687 = C6090 * C1552;
    const double C6684 = C6090 * C1549;
    const double C6682 = C6090 * C1090;
    const double C6680 = C6090 * C561;
    const double C6678 = C6090 * C1551;
    const double C6676 = C6090 * C1546;
    const double C6674 = C6090 * C563;
    const double C6673 = C6090 * C562;
    const double C6671 = C6090 * C1089;
    const double C6669 = C6090 * C1550;
    const double C7418 = C6090 * C2057;
    const double C7839 = C6090 * C7821;
    const double C7837 = C6090 * C7820;
    const double C8113 = C6090 * C8083;
    const double C8112 = C6090 * C8082;
    const double C8109 = C6090 * C8080;
    const double C8865 = C6090 * C8855;
    const double C9460 = C6090 * C9441;
    const double C9458 = C6090 * C9439;
    const double C9456 = C6090 * C2463;
    const double C9455 = C6090 * C2462;
    const double C9453 = C6090 * C2959;
    const double C9451 = C6090 * C9438;
    const double C9974 = C6090 * C2461;
    const double C10188 = C6090 * C10175;
    const double C17828 = C6090 * C17810;
    const double C17826 = C6090 * C17809;
    const double C18564 = C6090 * C18554;
    const double C161 =
        (2 * (2 * ae * C150626 + C150614 * C150643) + C150649 + C150649 +
         C150614 * (C150643 + C150646 + C150646 +
                    C150614 * (2 * ae * C150639 +
                               C150614 *
                                   (C150632 * C150633 +
                                    C150618 * bs[5] * std::pow(C150620, 5)) *
                                   C150621))) /
        C150510;
    const double C170 = C141 * C153;
    const double C6117 = C6090 * C153;
    const double C6107 = C6092 * C153;
    const double C23142 = C23131 * C153;
    const double C50891 = C50880 * C153;
    const double C59450 = C59433 * C153;
    const double C73631 = C150531 * C153;
    const double C6108 = C6090 * C351;
    const double C6102 = C6092 * C351;
    const double C23138 = C23131 * C351;
    const double C50887 = C50880 * C351;
    const double C59444 = C59433 * C351;
    const double C73626 = C150531 * C351;
    const double C6697 = C6090 * C560;
    const double C6681 = C6092 * C560;
    const double C23710 = C23131 * C560;
    const double C51459 = C50880 * C560;
    const double C59844 = C59433 * C560;
    const double C74205 = C150531 * C560;
    const double C150679 = C150655 + C150677;
    const double C150864 = ae * C150862;
    const double C1091 = (C150963 * C150862) / C150505;
    const double C150967 = ae * C150965;
    const double C6110 = C6090 * C356;
    const double C6100 = C6092 * C356;
    const double C23388 = C23131 * C356;
    const double C51137 = C50880 * C356;
    const double C59445 = C59433 * C356;
    const double C73624 = C150531 * C356;
    const double C6698 = C6090 * C565;
    const double C6690 = C6092 * C565;
    const double C23715 = C23131 * C565;
    const double C51464 = C50880 * C565;
    const double C59845 = C59433 * C565;
    const double C74214 = C150531 * C565;
    const double C7437 = C6084 * C1097;
    const double C7423 = C151795 * C1097;
    const double C24468 = C152231 * C1097;
    const double C24457 = C152232 * C1097;
    const double C24446 = C23123 * C1097;
    const double C52217 = C50870 * C1097;
    const double C52206 = C50871 * C1097;
    const double C52195 = C50872 * C1097;
    const double C60345 = C151790 * C1097;
    const double C74961 = C152145 * C1097;
    const double C74947 = C151795 * C1097;
    const double C6379 = C6084 * C368;
    const double C6365 = C151795 * C368;
    const double C23431 = C152231 * C368;
    const double C23410 = C152232 * C368;
    const double C23389 = C23123 * C368;
    const double C51180 = C50870 * C368;
    const double C51159 = C50871 * C368;
    const double C51138 = C50872 * C368;
    const double C59624 = C151790 * C368;
    const double C73903 = C152145 * C368;
    const double C73889 = C151795 * C368;
    const double C15228 = C6084 * C577;
    const double C15216 = C151795 * C577;
    const double C32195 = C152231 * C577;
    const double C32181 = C152232 * C577;
    const double C32167 = C23123 * C577;
    const double C65747 = C151790 * C577;
    const double C82855 = C152145 * C577;
    const double C82843 = C151795 * C577;
    const double C101892 = C50870 * C577;
    const double C101878 = C50871 * C577;
    const double C101864 = C50872 * C577;
    const double C150739 = C150728 + C150719;
    const double C150720 = C150689 + C150718;
    const double C150883 = C150676 + C150880;
    const double C150896 = ae * C150891;
    const double C151124 = C150963 * C150891;
    const double C151163 = 2 * C150891;
    const double C1544 = (C150862 + C150891 * C150976) / C150505;
    const double C150986 = C150676 + C150983;
    const double C150999 = ae * C150994;
    const double C151289 = 2 * C150994;
    const double C151176 = ae * C151175;
    const double C1366 = (3 * C150876 + C150860 * C151175) / C150505;
    const double C2058 = (C150963 * C151175) / C150505;
    const double C1560 =
        (C150963 * C150882 + C151230 + C151230 +
         C150614 * (2 * ae * C150963 * C150906 + C150614 * C151223)) /
        C150510;
    const double C1556 = (C150861 + C150889 * C150976 + C151219 + C151219 +
                          C150614 * (2 * ae * (C150888 + C150920 * C150976) +
                                     C150614 * C151211)) /
                         C150510;
    const double C9452 = C6092 * C2960;
    const double C9976 = C6090 * C2960;
    const double C62017 = C59433 * C2960;
    const double C76916 = C150531 * C2960;
    const double C151302 = ae * C151301;
    const double C2464 = (3 * C150979 + C150963 * C151301) / C150505;
    const double C150802 = C150788 + C150772;
    const double C150774 = C150736 + C150771;
    const double C150909 = C150716 + C150904;
    const double C150931 = ae * C150924;
    const double C151132 = C150963 * C150924;
    const double C151191 = 2 * C150924;
    const double C151209 = C150924 * C150976;
    const double C151012 = C150716 + C151007;
    const double C151034 = ae * C151027;
    const double C151317 = 2 * C151027;
    const double C150945 = C150938 + C150915;
    const double C151171 = ae * C151169;
    const double C151183 = C150860 * C151169;
    const double C151278 = C150963 * C151169;
    const double C151395 = 4 * C151169;
    const double C8079 = (C151175 + C151169 * C150976) / C150505;
    const double C151238 = ae * C151237;
    const double C9437 = (2 * C151229 + C150963 * C151237) / C150505;
    const double C151149 = C151142 + C151138;
    const double C151370 = C151368 + C151369;
    const double C151048 = C151041 + C151018;
    const double C151297 = ae * C151295;
    const double C151309 = C150963 * C151295;
    const double C151431 = 4 * C151295;
    const double C60611 =
        (6 * (4 * C151533 + C150860 * C151573) +
         C150860 *
             (5 * C151573 +
              C150860 *
                  (4 * C151256 +
                   C150860 * (3 * C150946 +
                              C150860 * (2 * C151068 +
                                         C150860 * (C150749 +
                                                    C150813 * C150873)))))) /
        C150505;
    const double C60774 =
        (4 * C151533 + C150860 * C151573 +
         (4 * C151256 +
          C150860 * (3 * C150946 +
                     C150860 * (2 * C151068 +
                                C150860 * (C150749 + C150813 * C150873)))) *
             C150976) /
        C150505;
    const double C61278 =
        (C150963 *
         (5 * C151573 +
          C150860 * (4 * C151256 +
                     C150860 * (3 * C150946 +
                                C150860 * (2 * C151068 +
                                           C150860 * (C150749 +
                                                      C150813 * C150873)))))) /
        C150505;
    const double C62150 =
        (2 * C150963 * C151573 +
         C150963 *
             (C151573 + (3 * C150946 +
                         C150860 * (2 * C151068 +
                                    C150860 * (C150749 + C150813 * C150873))) *
                            C150976)) /
        C150505;
    const double C119850 =
        (6 * (4 * C151562 + C150963 * C151588) +
         C150963 *
             (5 * C151588 +
              C150963 *
                  (4 * C151359 +
                   C150963 * (3 * C151049 +
                              C150963 * (2 * C151094 +
                                         C150963 * (C150749 +
                                                    C150813 * C150976)))))) /
        C150505;
    const double C68348 = C59433 * C68336;
    const double C150773 = C150614 * C150770;
    const double C150787 = 3 * C150770;
    const double C1374 = (2 * ae *
                              (3 * (C150639 + C150663 * C150873) +
                               C150860 * (2 * C150888 + C150860 * C150906)) +
                          C150614 * (3 * C150882 + C150860 * C151167)) /
                         C150510;
    const double C2062 = (2 * ae * C150963 * (2 * C150888 + C150860 * C150906) +
                          C150614 * C150963 * C151167) /
                         C150510;
    const double C7824 = (4 * (2 * C150861 + C150860 * C150882) +
                          C150860 * (3 * C150882 + C150860 * C151167)) /
                         C150510;
    const double C8086 =
        (2 * C150861 + C150860 * C150882 + C151167 * C150976) / C150510;
    const double C8088 =
        (C150963 * (3 * C150882 + C150860 * C151167)) / C150510;
    const double C150936 = C150926 + C150935;
    const double C10185 = C151795 * C2964;
    const double C18140 = C6084 * C2964;
    const double C27154 = C152232 * C2964;
    const double C54903 = C50871 * C2964;
    const double C65741 = C151790 * C2964;
    const double C77637 = C151795 * C2964;
    const double C86650 = C152145 * C2964;
    const double C18563 = C6084 * C9445;
    const double C67070 = C151790 * C9445;
    const double C86233 = C152145 * C9445;
    const double C2472 = (2 * ae *
                              (3 * (C150639 + C150663 * C150976) +
                               C150963 * (2 * C150991 + C150963 * C151009)) +
                          C150614 * (3 * C150985 + C150963 * C151293)) /
                         C150510;
    const double C17813 = (4 * (2 * C150964 + C150963 * C150985) +
                           C150963 * (3 * C150985 + C150963 * C151293)) /
                          C150510;
    const double C151039 = C151029 + C151038;
    const double C150834 = C150614 * C150830;
    const double C150833 = C150830 * ae;
    const double C1715 =
        2 * C150860 * C150766 + C150860 * (C150766 + C150830 * C150873);
    const double C1916 = C150963 * (C150766 + C150830 * C150873);
    const double C2677 = C150860 * C150766 + C150860 * C150830 * C150976;
    const double C2818 =
        2 * C150963 * C150766 + C150963 * (C150766 + C150830 * C150976);
    const double C150840 = C150797 + C150836;
    const double C150950 = C150768 + C150943;
    const double C151053 = C150768 + C151046;
    const double C151082 = ae * C151073;
    const double C151147 = C150963 * C151073;
    const double C151337 = C151073 * C150976;
    const double C151108 = ae * C151099;
    const double C151201 = C150860 * C151198;
    const double C151255 = ae * C151198;
    const double C151283 = C150963 * C151198;
    const double C151411 = C151198 * C150976;
    const double C151247 = ae * C151245;
    const double C151416 = C150963 * C151245;
    const double C151327 = C150963 * C151324;
    const double C151358 = ae * C151324;
    const double C151381 = C151377 + C151378;
    const double C150839 = C150614 * C150835;
    const double C150960 = C150614 * C150959;
    const double C151199 = C150860 * C151196;
    const double C151251 = C150614 * C151196;
    const double C151281 = C150963 * C151196;
    const double C8085 =
        (2 * ae * (2 * C150888 + C150860 * C150906 + C151256 * C150976) +
         C150614 * (C151167 + C151196 * C150976)) /
        C150510;
    const double C8858 =
        (2 * ae * C150963 *
             (4 * C151256 +
              C150860 * (3 * C150946 +
                         C150860 * (2 * C151068 +
                                    C150860 * (C150749 + C150813 * C150873)))) +
         C150614 * C150963 *
             (4 * C151196 +
              C150860 *
                  (3 * C150947 +
                   C150860 * (2 * C151069 +
                              C150860 * (C150820 + (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                       C150621 * C150873))))) /
        C150510;
    const double C10177 =
        (2 * C150963 * C151167 + C150963 * (C151167 + C151196 * C150976)) /
        C150510;
    const double C9443 =
        (2 * ae *
             (2 * C150963 * C150906 + C150963 * (C150906 + C150946 * C150976)) +
         C150614 * (2 * C151223 + C150963 * C151243)) /
        C150510;
    const double C9447 = (3 * (C150882 + C150907 * C150976) +
                          C150963 * (2 * C151223 + C150963 * C151243)) /
                         C150510;
    const double C9448 =
        (2 * ae *
             (3 * (C150906 + C150946 * C150976) +
              C150963 * (2 * C151263 +
                         C150963 * (C150946 +
                                    (C150749 + C150813 * C150873) * C150976))) +
         C150614 *
             (3 * C151243 +
              C150963 *
                  (2 * C151264 +
                   C150963 * (C150947 + (C150820 + (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                       C150621 * C150873) *
                                            C150976)))) /
        C150510;
    const double C69053 =
        (4 * (2 * C151223 + C150963 * C151243) +
         C150963 *
             (3 * C151243 +
              C150963 *
                  (2 * C151264 +
                   C150963 * (C150947 + (C150820 + (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                       C150621 * C150873) *
                                            C150976)))) /
        C150510;
    const double C151274 = C151273 + C151269;
    const double C151063 = C150614 * C151062;
    const double C151325 = C150963 * C151322;
    const double C151354 = C150614 * C151322;
    const double C151088 = C151076 + C151087;
    const double C151158 = C150614 * C151157;
    const double C151350 = C151349 + C151345;
    const double C151379 = C151373 + C151374;
    const double C151114 = C151102 + C151113;
    const double C152261 = C152197 + C152253;
    const double C740 = C152236 - (C151835 * C151817) / C151812;
    const double C132 = C152237 / C151816 - C151833 / C152204;
    const double C152254 = C152200 + C152236;
    const double C152262 = C152213 + C152257;
    const double C1710 = C152243 - (C151915 * C151904) / C151812;
    const double C1350 = C152244 / C151816 - C151913 / C152204;
    const double C152258 = C152215 + C152243;
    const double C152263 = C152219 + C152259;
    const double C2815 = C152246 - (C151957 * C151946) / C151812;
    const double C2449 = C152247 / C151816 - C151955 / C152204;
    const double C152260 = C152221 + C152246;
    const double C150541 = C150539 - C150526;
    const double C150540 = C150538 / C150505;
    const double C6382 = C6091 * C1353;
    const double C6380 = C6091 * C345;
    const double C6376 = C6091 * C338;
    const double C6369 = C6091 * C1354;
    const double C6364 = C6091 * C344;
    const double C6360 = C6091 * C339;
    const double C6350 = C6091 * C1355;
    const double C6348 = C6091 * C343;
    const double C6344 = C6091 * C340;
    const double C6904 = C6091 * C347;
    const double C6900 = C6091 * C346;
    const double C7434 = C6091 * C1086;
    const double C7430 = C6091 * C1535;
    const double C7426 = C6091 * C1536;
    const double C7422 = C6091 * C1085;
    const double C7414 = C6091 * C1084;
    const double C7410 = C6091 * C1537;
    const double C7833 = C6091 * C7815;
    const double C7831 = C6091 * C1358;
    const double C8105 = C6091 * C8073;
    const double C8103 = C6091 * C2054;
    const double C8099 = C6091 * C1540;
    const double C8095 = C6091 * C1533;
    const double C8340 = C6091 * C1359;
    const double C8647 = C6091 * C2055;
    const double C8861 = C6091 * C8075;
    const double C9759 = C6091 * C1532;
    const double C9755 = C6091 * C1541;
    const double C10184 = C6091 * C2956;
    const double C10180 = C6091 * C9431;
    const double C15231 = C6091 * C2451;
    const double C15229 = C6091 * C554;
    const double C15225 = C6091 * C547;
    const double C15219 = C6091 * C2452;
    const double C15215 = C6091 * C553;
    const double C15211 = C6091 * C548;
    const double C15205 = C6091 * C2453;
    const double C15203 = C6091 * C552;
    const double C15199 = C6091 * C549;
    const double C15692 = C6091 * C556;
    const double C15688 = C6091 * C555;
    const double C16000 = C6091 * C1531;
    const double C17822 = C6091 * C17804;
    const double C17820 = C6091 * C2456;
    const double C18137 = C6091 * C2957;
    const double C18347 = C6091 * C2457;
    const double C18560 = C6091 * C9434;
    const double C40904 = C6091 * C1087;
    const double C23423 = C23130 * C347;
    const double C23421 = C23130 * C346;
    const double C23411 = C23130 * C345;
    const double C23403 = C23130 * C338;
    const double C23387 = C23130 * C344;
    const double C23385 = C23130 * C339;
    const double C23941 = C23130 * C348;
    const double C24463 = C23130 * C1087;
    const double C24458 = C23130 * C1086;
    const double C24445 = C23130 * C1085;
    const double C24845 = C23130 * C1359;
    const double C24843 = C23130 * C1354;
    const double C25105 = C23130 * C1541;
    const double C25103 = C23130 * C1536;
    const double C25097 = C23130 * C1532;
    const double C25341 = C23130 * C1353;
    const double C25649 = C23130 * C1535;
    const double C25861 = C23130 * C2055;
    const double C26739 = C23130 * C1531;
    const double C27151 = C23130 * C2957;
    const double C32190 = C23130 * C556;
    const double C32188 = C23130 * C555;
    const double C32182 = C23130 * C554;
    const double C32176 = C23130 * C547;
    const double C32166 = C23130 * C553;
    const double C32164 = C23130 * C548;
    const double C32645 = C23130 * C557;
    const double C34749 = C23130 * C2457;
    const double C34747 = C23130 * C2452;
    const double C35260 = C23130 * C2451;
    const double C51172 = C50879 * C347;
    const double C51170 = C50879 * C346;
    const double C51160 = C50879 * C345;
    const double C51152 = C50879 * C338;
    const double C51136 = C50879 * C344;
    const double C51134 = C50879 * C339;
    const double C51690 = C50879 * C348;
    const double C52212 = C50879 * C1087;
    const double C52207 = C50879 * C1086;
    const double C52194 = C50879 * C1085;
    const double C52594 = C50879 * C1359;
    const double C52592 = C50879 * C1354;
    const double C52854 = C50879 * C1541;
    const double C52852 = C50879 * C1536;
    const double C52846 = C50879 * C1532;
    const double C53090 = C50879 * C1353;
    const double C53398 = C50879 * C1535;
    const double C53610 = C50879 * C2055;
    const double C54488 = C50879 * C1531;
    const double C54900 = C50879 * C2957;
    const double C101887 = C50879 * C556;
    const double C101885 = C50879 * C555;
    const double C101879 = C50879 * C554;
    const double C101873 = C50879 * C547;
    const double C101863 = C50879 * C553;
    const double C101861 = C50879 * C548;
    const double C102342 = C50879 * C557;
    const double C104446 = C50879 * C2457;
    const double C104444 = C50879 * C2452;
    const double C104957 = C50879 * C2451;
    const double C59627 = C59432 * C1359;
    const double C59625 = C59432 * C1354;
    const double C59623 = C59432 * C344;
    const double C59621 = C59432 * C339;
    const double C59617 = C59432 * C1358;
    const double C59615 = C59432 * C1355;
    const double C59613 = C59432 * C343;
    const double C59611 = C59432 * C340;
    const double C59607 = C59432 * C1357;
    const double C59605 = C59432 * C1356;
    const double C59603 = C59432 * C342;
    const double C59601 = C59432 * C341;
    const double C59983 = C59432 * C1353;
    const double C59981 = C59432 * C345;
    const double C59979 = C59432 * C338;
    const double C60344 = C59432 * C1085;
    const double C60342 = C59432 * C1536;
    const double C60340 = C59432 * C2055;
    const double C60337 = C59432 * C2054;
    const double C60335 = C59432 * C1537;
    const double C60333 = C59432 * C1084;
    const double C60330 = C59432 * C1083;
    const double C60328 = C59432 * C1538;
    const double C60326 = C59432 * C2053;
    const double C60616 = C59432 * C7817;
    const double C60614 = C59432 * C7816;
    const double C60785 = C59432 * C8077;
    const double C60783 = C59432 * C8076;
    const double C60781 = C59432 * C8074;
    const double C60779 = C59432 * C1539;
    const double C60777 = C59432 * C1534;
    const double C60940 = C59432 * C7815;
    const double C61141 = C59432 * C8075;
    const double C61281 = C59432 * C8853;
    const double C61871 = C59432 * C1533;
    const double C61869 = C59432 * C1540;
    const double C61867 = C59432 * C8073;
    const double C62157 = C59432 * C2955;
    const double C62155 = C59432 * C9432;
    const double C62153 = C59432 * C10173;
    const double C65498 = C59432 * C1541;
    const double C65496 = C59432 * C1532;
    const double C65751 = C59432 * C2452;
    const double C65748 = C59432 * C2957;
    const double C65746 = C59432 * C553;
    const double C65744 = C59432 * C548;
    const double C65740 = C59432 * C2956;
    const double C65738 = C59432 * C2453;
    const double C65736 = C59432 * C552;
    const double C65734 = C59432 * C549;
    const double C65732 = C59432 * C2454;
    const double C65730 = C59432 * C551;
    const double C65728 = C59432 * C550;
    const double C65986 = C59432 * C1531;
    const double C65984 = C59432 * C1086;
    const double C66193 = C59432 * C554;
    const double C66191 = C59432 * C547;
    const double C67074 = C59432 * C9435;
    const double C67069 = C59432 * C9433;
    const double C67573 = C59432 * C9431;
    const double C68344 = C59432 * C17805;
    const double C68341 = C59432 * C18552;
    const double C68339 = C59432 * C2455;
    const double C68648 = C59432 * C9434;
    const double C68851 = C59432 * C2456;
    const double C93859 = C59432 * C1535;
    const double C118182 = C59432 * C2457;
    const double C118448 = C59432 * C2451;
    const double C119853 = C59432 * C17806;
    const double C120183 = C59432 * C17804;
    const double C73906 = C73615 * C1353;
    const double C73904 = C73615 * C345;
    const double C73900 = C73615 * C338;
    const double C73893 = C73615 * C1354;
    const double C73888 = C73615 * C344;
    const double C73884 = C73615 * C339;
    const double C73874 = C73615 * C1355;
    const double C73872 = C73615 * C343;
    const double C73868 = C73615 * C340;
    const double C74428 = C73615 * C347;
    const double C74424 = C73615 * C346;
    const double C74958 = C73615 * C1086;
    const double C74954 = C73615 * C1535;
    const double C74950 = C73615 * C1536;
    const double C74946 = C73615 * C1085;
    const double C74938 = C73615 * C1084;
    const double C74934 = C73615 * C1537;
    const double C75345 = C73615 * C7815;
    const double C75343 = C73615 * C1358;
    const double C75599 = C73615 * C8073;
    const double C75597 = C73615 * C2054;
    const double C75593 = C73615 * C1540;
    const double C75589 = C73615 * C1533;
    const double C75831 = C73615 * C1359;
    const double C76135 = C73615 * C2055;
    const double C76343 = C73615 * C8075;
    const double C77220 = C73615 * C1532;
    const double C77216 = C73615 * C1541;
    const double C77636 = C73615 * C2956;
    const double C77632 = C73615 * C9431;
    const double C82852 = C73615 * C554;
    const double C82848 = C73615 * C1531;
    const double C82846 = C73615 * C547;
    const double C82842 = C73615 * C553;
    const double C82838 = C73615 * C548;
    const double C82832 = C73615 * C552;
    const double C82830 = C73615 * C549;
    const double C83162 = C73615 * C1087;
    const double C83430 = C73615 * C555;
    const double C86234 = C73615 * C2456;
    const double C86230 = C73615 * C9434;
    const double C86228 = C73615 * C2453;
    const double C86647 = C73615 * C2957;
    const double C86916 = C73615 * C2452;
    const double C134673 = C73615 * C2451;
    const double C135075 = C73615 * C556;
    const double C137171 = C73615 * C17804;
    const double C137668 = C73615 * C2457;
    const double C150680 = C150679 + C150668;
    const double C362 = (2 * (2 * ae * C150860 * C150639 + C150614 * C150861) +
                         C150864 + C150864 +
                         C150614 * (C150861 + C150865 + C150865 +
                                    C150614 * (2 * ae * C150860 * C150663 +
                                               C150614 * C150860 * C150706))) /
                        C150510;
    const double C6695 = C6090 * C1091;
    const double C6683 = C6092 * C1091;
    const double C23707 = C23131 * C1091;
    const double C51456 = C50880 * C1091;
    const double C59843 = C59433 * C1091;
    const double C74207 = C150531 * C1091;
    const double C571 = (2 * (2 * ae * C150963 * C150639 + C150614 * C150964) +
                         C150967 + C150967 +
                         C150614 * (C150964 + C150968 + C150968 +
                                    C150614 * (2 * ae * C150963 * C150663 +
                                               C150614 * C150963 * C150706))) /
                        C150510;
    const double C150747 = C150739 + C150719;
    const double C150721 = C150720 + C150704;
    const double C150885 = ae * C150883;
    const double C1362 = (2 * C150862 + C150860 * C150883) / C150505;
    const double C1548 = (C150963 * C150883) / C150505;
    const double C151126 = ae * C151124;
    const double C6700 = C6090 * C1544;
    const double C6688 = C6092 * C1544;
    const double C23718 = C23131 * C1544;
    const double C51467 = C50880 * C1544;
    const double C59846 = C59433 * C1544;
    const double C74212 = C150531 * C1544;
    const double C150988 = ae * C150986;
    const double C2460 = (2 * C150965 + C150963 * C150986) / C150505;
    const double C1370 =
        (2 * C150861 + C150860 * C150882 + C151176 + C151176 +
         C150614 *
             (2 * ae * (2 * C150888 + C150860 * C150906) + C150614 * C151167)) /
        C150510;
    const double C6373 = C6090 * C1366;
    const double C6357 = C6092 * C1366;
    const double C59618 = C59433 * C1366;
    const double C73881 = C150531 * C1366;
    const double C7429 = C6090 * C2058;
    const double C7419 = C6092 * C2058;
    const double C59836 = C59433 * C2058;
    const double C74943 = C150531 * C2058;
    const double C7433 = C6084 * C1560;
    const double C7427 = C151795 * C1560;
    const double C25104 = C23123 * C1560;
    const double C25652 = C152232 * C1560;
    const double C52853 = C50872 * C1560;
    const double C53401 = C50871 * C1560;
    const double C60343 = C151790 * C1560;
    const double C74957 = C152145 * C1560;
    const double C74951 = C151795 * C1560;
    const double C9760 = C151795 * C1556;
    const double C15999 = C6084 * C1556;
    const double C25098 = C23123 * C1556;
    const double C26742 = C152232 * C1556;
    const double C52847 = C50872 * C1556;
    const double C54491 = C50871 * C1556;
    const double C65497 = C151790 * C1556;
    const double C77221 = C151795 * C1556;
    const double C82851 = C152145 * C1556;
    const double C2468 =
        (2 * C150964 + C150963 * C150985 + C151302 + C151302 +
         C150614 *
             (2 * ae * (2 * C150991 + C150963 * C151009) + C150614 * C151293)) /
        C150510;
    const double C9457 = C6092 * C2464;
    const double C15222 = C6090 * C2464;
    const double C65743 = C59433 * C2464;
    const double C76921 = C150531 * C2464;
    const double C150811 = C150802 + C150772;
    const double C150776 = C150774 + C150754;
    const double C150914 = ae * C150909;
    const double C151164 = C150860 * C150909;
    const double C151190 = 3 * C150909;
    const double C151224 = C150963 * C150909;
    const double C1553 = (C150883 + C150909 * C150976) / C150505;
    const double C151075 = C151066 + C150931;
    const double C151137 = ae * C151132;
    const double C151375 = 2 * C151132;
    const double C151212 = C150891 + C151209;
    const double C151017 = ae * C151012;
    const double C151290 = C150963 * C151012;
    const double C151316 = 3 * C151012;
    const double C151101 = C151092 + C151034;
    const double C151184 = C151182 + C151183;
    const double C151279 = ae * C151278;
    const double C8106 = C6092 * C8079;
    const double C9763 = C6090 * C8079;
    const double C59837 = C59433 * C8079;
    const double C75600 = C150531 * C8079;
    const double C1565 = (C150882 + C150907 * C150976 + C151238 + C151238 +
                          C150614 * (2 * ae * (C150906 + C150946 * C150976) +
                                     C150614 * (C150907 + C150947 * C150976))) /
                         C150510;
    const double C9450 = C6092 * C9437;
    const double C9978 = C6090 * C9437;
    const double C62018 = C59433 * C9437;
    const double C76914 = C150531 * C9437;
    const double C151371 = ae * C151370;
    const double C9440 = (3 * C151218 + C150963 * C151370) / C150505;
    const double C151310 = C151308 + C151309;
    const double C60619 = C59433 * C60611;
    const double C60789 = C59433 * C60774;
    const double C61283 = C59433 * C61278;
    const double C62159 = C59433 * C62150;
    const double C119855 = C59433 * C119850;
    const double C7832 = C151795 * C1374;
    const double C8343 = C6084 * C1374;
    const double C24850 = C152232 * C1374;
    const double C52599 = C50871 * C1374;
    const double C59619 = C151790 * C1374;
    const double C75344 = C151795 * C1374;
    const double C75834 = C152145 * C1374;
    const double C8104 = C151795 * C2062;
    const double C8650 = C6084 * C2062;
    const double C25864 = C152232 * C2062;
    const double C53613 = C50871 * C2062;
    const double C60338 = C151790 * C2062;
    const double C75598 = C151795 * C2062;
    const double C76138 = C152145 * C2062;
    const double C7838 = C6084 * C7824;
    const double C60615 = C151790 * C7824;
    const double C75350 = C152145 * C7824;
    const double C8110 = C6084 * C8086;
    const double C60782 = C151790 * C8086;
    const double C75604 = C152145 * C8086;
    const double C8864 = C6084 * C8088;
    const double C60784 = C151790 * C8088;
    const double C76346 = C152145 * C8088;
    const double C17821 = C151795 * C2472;
    const double C18350 = C6084 * C2472;
    const double C34752 = C152232 * C2472;
    const double C68852 = C151790 * C2472;
    const double C86235 = C151795 * C2472;
    const double C104449 = C50871 * C2472;
    const double C137671 = C152145 * C2472;
    const double C17827 = C6084 * C17813;
    const double C68346 = C151790 * C17813;
    const double C137174 = C152145 * C17813;
    const double C150837 = C150800 + C150834;
    const double C150843 = C150840 + C150818;
    const double C150956 = ae * C150950;
    const double C151192 = C150860 * C150950;
    const double C151241 = C150950 * C150976;
    const double C151266 = C150963 * C150950;
    const double C151059 = ae * C151053;
    const double C151318 = C150963 * C151053;
    const double C151154 = ae * C151147;
    const double C151342 = C150924 + C151337;
    const double C151204 = C151193 + C151201;
    const double C151285 = ae * C151283;
    const double C151412 = C151169 + C151411;
    const double C151417 = C151415 + C151416;
    const double C151330 = C151319 + C151327;
    const double C151383 = ae * C151381;
    const double C151427 = C150963 * C151381;
    const double C150961 = C150945 + C150960;
    const double C151202 = C151187 + C151199;
    const double C151261 = C151260 + C151251;
    const double C10178 =
        (2 * ae *
             (2 * C150963 * C151256 +
              C150963 * (C151256 + (2 * C151068 +
                                    C150860 * (C150749 + C150813 * C150873)) *
                                       C150976)) +
         C150614 *
             (2 * C151281 +
              C150963 * (C151196 +
                         (2 * C151069 +
                          C150860 * (C150820 +
                                     (C150792 * C150793 +
                                      C150618 * bs[9] * std::pow(C150620, 9)) *
                                         C150621 * C150873)) *
                             C150976))) /
        C150510;
    const double C61663 =
        (3 * (C151167 + C151196 * C150976) +
         C150963 *
             (2 * C151281 +
              C150963 * (C151196 +
                         (2 * C151069 +
                          C150860 * (C150820 +
                                     (C150792 * C150793 +
                                      C150618 * bs[9] * std::pow(C150620, 9)) *
                                         C150621 * C150873)) *
                             C150976))) /
        C150510;
    const double C8107 = C151795 * C8085;
    const double C61868 = C151790 * C8085;
    const double C75601 = C151795 * C8085;
    const double C62154 = C151790 * C10177;
    const double C10181 = C151795 * C9443;
    const double C67574 = C151790 * C9443;
    const double C77633 = C151795 * C9443;
    const double C67075 = C151790 * C9447;
    const double C151064 = C151048 + C151063;
    const double C151328 = C151313 + C151325;
    const double C151364 = C151363 + C151354;
    const double C151089 = C150614 * C151088;
    const double C151159 = C151149 + C151158;
    const double C9446 = (2 * ae *
                              (3 * (C150888 + C150920 * C150976) +
                               C150963 * (2 * C151129 + C150963 * C151339)) +
                          C150614 * (3 * C151211 + C150963 * C151379)) /
                         C150510;
    const double C18556 = (4 * (2 * C151123 + C150963 * C151211) +
                           C150963 * (3 * C151211 + C150963 * C151379)) /
                          C150510;
    const double C18557 =
        (2 * ae *
             (4 * (2 * C151129 + C150963 * C151339) +
              C150963 * (3 * C151339 +
                         C150963 * (2 * C151143 +
                                    C150963 * (C151068 +
                                               C150860 * C150813 * C150976)))) +
         C150614 *
             (4 * C151379 +
              C150963 * (3 * C151340 +
                         C150963 * (2 * C151144 +
                                    C150963 * (C151069 +
                                               C150860 *
                                                   (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                   C150621 * C150976))))) /
        C150510;
    const double C68337 =
        (5 * (3 * C151211 + C150963 * C151379) +
         C150963 *
             (4 * C151379 +
              C150963 * (3 * C151340 +
                         C150963 * (2 * C151144 +
                                    C150963 * (C151069 +
                                               C150860 *
                                                   (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                   C150621 * C150976))))) /
        C150510;
    const double C151115 = C150614 * C151114;
    const double C129 =
        (C152252 + 2 * C151826) / C151816 - (C152261 * C151817) / C151812;
    const double C130 = (C152235 + 2 * C151835 + C152261) / C151816 -
                        (C152254 * C151817) / C151812;
    const double C131 = (C152202 + C151832 / C151812 + C152254) / C151816 -
                        (C152237 * C151817) / C151812;
    const double C1347 =
        (C152255 + 2 * C151908) / C151816 - (C152262 * C151904) / C151812;
    const double C1348 = (C152239 + 2 * C151915 + C152262) / C151816 -
                         (C152258 * C151904) / C151812;
    const double C1349 = (C152208 + C151912 / C151812 + C152258) / C151816 -
                         (C152244 * C151904) / C151812;
    const double C2446 =
        (C152256 + 2 * C151950) / C151816 - (C152263 * C151946) / C151812;
    const double C2447 = (C152241 + 2 * C151957 + C152263) / C151816 -
                         (C152260 * C151946) / C151812;
    const double C2448 = (C152211 + C151954 / C151812 + C152260) / C151816 -
                         (C152247 * C151946) / C151812;
    const double C73641 = C150541 * C153;
    const double C73634 = C150541 * C356;
    const double C73632 = C150541 * C351;
    const double C73630 = C150541 * C152;
    const double C73629 = C150541 * C151;
    const double C73627 = C150541 * C352;
    const double C73625 = C150541 * C355;
    const double C73622 = C150541 * C354;
    const double C73620 = C150541 * C353;
    const double C73618 = C150541 * C150;
    const double C73897 = C150541 * C1366;
    const double C73891 = C150541 * C1363;
    const double C73880 = C150541 * C1365;
    const double C73878 = C150541 * C1364;
    const double C74224 = C150541 * C1544;
    const double C74222 = C150541 * C565;
    const double C74221 = C150541 * C560;
    const double C74219 = C150541 * C1091;
    const double C74215 = C150541 * C564;
    const double C74213 = C150541 * C1545;
    const double C74211 = C150541 * C1552;
    const double C74208 = C150541 * C1549;
    const double C74206 = C150541 * C1090;
    const double C74204 = C150541 * C561;
    const double C74202 = C150541 * C1551;
    const double C74200 = C150541 * C1546;
    const double C74198 = C150541 * C563;
    const double C74197 = C150541 * C562;
    const double C74195 = C150541 * C1089;
    const double C74193 = C150541 * C1550;
    const double C74953 = C150541 * C2058;
    const double C74942 = C150541 * C2057;
    const double C75351 = C150541 * C7821;
    const double C75349 = C150541 * C7820;
    const double C75607 = C150541 * C8083;
    const double C75606 = C150541 * C8082;
    const double C75603 = C150541 * C8080;
    const double C76347 = C150541 * C8855;
    const double C76924 = C150541 * C9441;
    const double C76922 = C150541 * C9439;
    const double C76920 = C150541 * C2463;
    const double C76919 = C150541 * C2462;
    const double C76917 = C150541 * C2959;
    const double C76915 = C150541 * C9438;
    const double C77224 = C150541 * C8079;
    const double C77436 = C150541 * C9437;
    const double C77434 = C150541 * C2960;
    const double C77432 = C150541 * C2461;
    const double C77640 = C150541 * C10175;
    const double C86240 = C150541 * C18554;
    const double C86238 = C150541 * C17809;
    const double C86920 = C150541 * C2464;
    const double C137175 = C150541 * C17810;
    const double C135 =
        ((((0 - (C150506 * C150504) / C150505) * ae) / C150505 -
          (0 * be) / C150520 + C150507 / C150505) /
             C150511 -
         ((C150506 * C150534 + 0) * be) / C150505) /
            C150511 +
        ((C150506 * (C150534 / C150511 -
                     ((C150506 * C150541 + C152145) * be) / C150505 + C150531) +
          C152231) *
         ae) /
            C150505 +
        C150541 / C150511 - ((C150506 * C150531 + C151795) * be) / C150505;
    const double C137 =
        (C150534 / C150511 - ((C150506 * C150541 + C152145) * be) / C150505 +
         C150531) /
            C150511 +
        ((C150506 * (C150541 / C150511 -
                     ((C150506 * C150531 + C151795) * be) / C150505) +
          C152232) *
         ae) /
            C150505 +
        2 * (C150531 / C150511 - (0 * be) / C150505);
    const double C139 =
        (C150541 / C150511 - ((C150506 * C150531 + C151795) * be) / C150505) /
            C150511 +
        ((C150506 * (C150531 / C150511 - (0 * be) / C150505) + C23123) * ae) /
            C150505;
    const double C23127 = C150534 / C150511 -
                          ((C150506 * C150541 + C152145) * be) / C150505 +
                          C150531;
    const double C23129 =
        C150541 / C150511 - ((C150506 * C150531 + C151795) * be) / C150505;
    const double C50876 = C150534 / C150511 +
                          ((C150506 * C150541 + C152145) * ae) / C150505 +
                          C150531;
    const double C50878 =
        C150541 / C150511 + ((C150506 * C150531 + C151795) * ae) / C150505;
    const double C150542 = C150529 - C150540;
    const double C6399 = C6364 + C6100;
    const double C6397 = C6360 + C6102;
    const double C6394 = C6350 + C6351;
    const double C6393 = C6348 + C6099;
    const double C6391 = C6344 + C6097;
    const double C7442 = C7414 + C6670;
    const double C7440 = C7410 + C6668;
    const double C8119 = C8099 + C6679;
    const double C8117 = C8095 + C6677;
    const double C10192 = C10184 + C9452;
    const double C15248 = C15215 + C6690;
    const double C15246 = C15211 + C6681;
    const double C15243 = C15205 + C9454;
    const double C15242 = C15203 + C6675;
    const double C15240 = C15199 + C6672;
    const double C23438 = C23387 + C23388;
    const double C23437 = C23385 + C23138;
    const double C32202 = C32166 + C23715;
    const double C32201 = C32164 + C23710;
    const double C51187 = C51136 + C51137;
    const double C51186 = C51134 + C50887;
    const double C101899 = C101863 + C51464;
    const double C101898 = C101861 + C51459;
    const double C59640 = C59623 + C59445;
    const double C59639 = C59621 + C59444;
    const double C59637 = C59615 + C59439;
    const double C59636 = C59613 + C59440;
    const double C59635 = C59611 + C59441;
    const double C59634 = C59607 + C59608;
    const double C59633 = C59605 + C59438;
    const double C59632 = C59603 + C59437;
    const double C59631 = C59601 + C59436;
    const double C60351 = C60335 + C59835;
    const double C60350 = C60333 + C59834;
    const double C60349 = C60330 + C59827;
    const double C60348 = C60328 + C59826;
    const double C60347 = C60326 + C59825;
    const double C60621 = C60616 + C60617;
    const double C60620 = C60614 + C59610;
    const double C60794 = C60785 + C60786;
    const double C60793 = C60783 + C60332;
    const double C60792 = C60781 + C59832;
    const double C60791 = C60779 + C59831;
    const double C60790 = C60777 + C59830;
    const double C61284 = C61281 + C60788;
    const double C61876 = C61871 + C59839;
    const double C61875 = C61869 + C59838;
    const double C62162 = C62157 + C61667;
    const double C62161 = C62155 + C61666;
    const double C62160 = C62153 + C61665;
    const double C65764 = C65746 + C59845;
    const double C65763 = C65744 + C59844;
    const double C65762 = C65740 + C62017;
    const double C65761 = C65738 + C62016;
    const double C65760 = C65736 + C59840;
    const double C65759 = C65734 + C59833;
    const double C65758 = C65732 + C61668;
    const double C65757 = C65730 + C59829;
    const double C65756 = C65728 + C59828;
    const double C67079 = C67074 + C61671;
    const double C67078 = C67069 + C61670;
    const double C68351 = C68344 + C68345;
    const double C68350 = C68341 + C68342;
    const double C68349 = C68339 + C61669;
    const double C119856 = C119853 + C68347;
    const double C73923 = C73888 + C73624;
    const double C73921 = C73884 + C73626;
    const double C73918 = C73874 + C73875;
    const double C73917 = C73872 + C73623;
    const double C73915 = C73868 + C73621;
    const double C74966 = C74938 + C74194;
    const double C74964 = C74934 + C74192;
    const double C75613 = C75593 + C74203;
    const double C75611 = C75589 + C74201;
    const double C77644 = C77636 + C76916;
    const double C82867 = C82842 + C74214;
    const double C82865 = C82838 + C74205;
    const double C82862 = C82832 + C74199;
    const double C82861 = C82830 + C74196;
    const double C86243 = C86228 + C76918;
    const double C150681 = ae * C150680;
    const double C154 = (3 * C150648 + C150614 * C150680 +
                         (2 * C150637 + C150614 * C150665) * ae) /
                        C150505;
    const double C350 = (C150860 * C150680) / C150505;
    const double C559 = (C150963 * C150680) / C150505;
    const double C6377 = C151795 * C362;
    const double C6899 = C6084 * C362;
    const double C23420 = C152232 * C362;
    const double C23404 = C23123 * C362;
    const double C23938 = C152231 * C362;
    const double C51169 = C50871 * C362;
    const double C51153 = C50872 * C362;
    const double C51687 = C50870 * C362;
    const double C59980 = C151790 * C362;
    const double C73901 = C151795 * C362;
    const double C74423 = C152145 * C362;
    const double C7445 = C7422 + C6683;
    const double C24472 = C24445 + C23707;
    const double C52221 = C52194 + C51456;
    const double C60355 = C60344 + C59843;
    const double C74969 = C74946 + C74207;
    const double C15226 = C151795 * C571;
    const double C15687 = C6084 * C571;
    const double C32187 = C152232 * C571;
    const double C32177 = C23123 * C571;
    const double C32642 = C152231 * C571;
    const double C66192 = C151790 * C571;
    const double C82847 = C151795 * C571;
    const double C83429 = C152145 * C571;
    const double C101884 = C50871 * C571;
    const double C101874 = C50872 * C571;
    const double C102339 = C50870 * C571;
    const double C150775 = C150747 + C150773;
    const double C150723 = ae * C150721;
    const double C150722 = C150614 * C150721;
    const double C150734 = 4 * C150721;
    const double C150890 = C150860 * C150721;
    const double C150993 = C150963 * C150721;
    const double C357 = (C150680 + C150721 * C150873) / C150505;
    const double C566 = (C150680 + C150721 * C150976) / C150505;
    const double C369 =
        (2 * (2 * ae * (C150639 + C150663 * C150873) + C150614 * C150882) +
         C150885 + C150885 +
         C150614 * (C150882 + C150886 + C150886 +
                    C150614 * (2 * ae * (C150663 + C150699 * C150873) +
                               C150614 * (C150706 + C150756 * C150873)))) /
        C150510;
    const double C6386 = C6090 * C1362;
    const double C6370 = C6092 * C1362;
    const double C23398 = C23131 * C1362;
    const double C51147 = C50880 * C1362;
    const double C59446 = C59433 * C1362;
    const double C73910 = C150541 * C1362;
    const double C73894 = C150531 * C1362;
    const double C6693 = C6090 * C1548;
    const double C6685 = C6092 * C1548;
    const double C24453 = C23131 * C1548;
    const double C52202 = C50880 * C1548;
    const double C59842 = C59433 * C1548;
    const double C74217 = C150541 * C1548;
    const double C74209 = C150531 * C1548;
    const double C1098 = (2 * (2 * ae * C150963 * C150888 + C150614 * C151123) +
                          C151126 + C151126 +
                          C150614 * (C151123 + C151127 + C151127 +
                                     C150614 * (2 * ae * C150963 * C150920 +
                                                C150614 * C150963 * C150921))) /
                         C150510;
    const double C9767 = C9759 + C6688;
    const double C25122 = C25097 + C23718;
    const double C52871 = C52846 + C51467;
    const double C65502 = C65496 + C59846;
    const double C77228 = C77220 + C74212;
    const double C578 =
        (2 * (2 * ae * (C150639 + C150663 * C150976) + C150614 * C150985) +
         C150988 + C150988 +
         C150614 * (C150985 + C150989 + C150989 +
                    C150614 * (2 * ae * (C150663 + C150699 * C150976) +
                               C150614 * (C150706 + C150756 * C150976)))) /
        C150510;
    const double C9975 = C6092 * C2460;
    const double C15235 = C6090 * C2460;
    const double C26440 = C23131 * C2460;
    const double C54189 = C50880 * C2460;
    const double C65752 = C59433 * C2460;
    const double C77433 = C150531 * C2460;
    const double C82856 = C150541 * C2460;
    const double C6387 = C6084 * C1370;
    const double C6371 = C151795 * C1370;
    const double C24844 = C23123 * C1370;
    const double C25344 = C152232 * C1370;
    const double C52593 = C50872 * C1370;
    const double C53093 = C50871 * C1370;
    const double C59626 = C151790 * C1370;
    const double C73911 = C152145 * C1370;
    const double C73895 = C151795 * C1370;
    const double C7843 = C7831 + C6357;
    const double C59638 = C59617 + C59618;
    const double C75355 = C75343 + C73881;
    const double C8121 = C8103 + C7419;
    const double C60352 = C60337 + C59836;
    const double C75615 = C75597 + C74943;
    const double C15236 = C6084 * C2468;
    const double C15220 = C151795 * C2468;
    const double C34748 = C23123 * C2468;
    const double C35263 = C152232 * C2468;
    const double C65753 = C151790 * C2468;
    const double C86917 = C151795 * C2468;
    const double C104445 = C50872 * C2468;
    const double C104960 = C50871 * C2468;
    const double C134676 = C152145 * C2468;
    const double C17831 = C17820 + C9457;
    const double C68855 = C68851 + C65743;
    const double C86246 = C86234 + C76921;
    const double C150842 = C150811 + C150839;
    const double C150778 = ae * C150776;
    const double C150777 = C150614 * C150776;
    const double C150795 = 4 * C150776;
    const double C150903 = C150776 * C150873;
    const double C150923 = C150860 * C150776;
    const double C151006 = C150776 * C150976;
    const double C151026 = C150963 * C150776;
    const double C151168 = C151163 + C151164;
    const double C151226 = ae * C151224;
    const double C6702 = C6090 * C1553;
    const double C6686 = C6092 * C1553;
    const double C25106 = C23131 * C1553;
    const double C52855 = C50880 * C1553;
    const double C59847 = C59433 * C1553;
    const double C74226 = C150541 * C1553;
    const double C74210 = C150531 * C1553;
    const double C151084 = C151075 + C150931;
    const double C151214 = ae * C151212;
    const double C2961 = (2 * C151124 + C150963 * C151212) / C150505;
    const double C151294 = C151289 + C151290;
    const double C151110 = C151101 + C151034;
    const double C151185 = ae * C151184;
    const double C7819 = (4 * C151175 + C150860 * C151184) / C150505;
    const double C8081 = (C150963 * C151184) / C150505;
    const double C2063 =
        (C150963 * C151167 + C151279 + C151279 +
         C150614 * (2 * ae * C150963 * C151256 + C150614 * C150963 * C151196)) /
        C150510;
    const double C8122 = C8105 + C8106;
    const double C61874 = C61867 + C59837;
    const double C75616 = C75599 + C75600;
    const double C9756 = C151795 * C1565;
    const double C25107 = C23123 * C1565;
    const double C52856 = C50872 * C1565;
    const double C65499 = C151790 * C1565;
    const double C77217 = C151795 * C1565;
    const double C10190 = C10180 + C9450;
    const double C67577 = C67573 + C62018;
    const double C77642 = C77632 + C76914;
    const double C2965 =
        (2 * C151123 + C150963 * C151211 + C151371 + C151371 +
         C150614 * (2 * ae * (2 * C151129 + C150963 * C151339) +
                    C150614 * (2 * C151130 + C150963 * C151340))) /
        C150510;
    const double C9459 = C6092 * C9440;
    const double C18141 = C6090 * C9440;
    const double C65742 = C59433 * C9440;
    const double C76923 = C150531 * C9440;
    const double C86922 = C150541 * C9440;
    const double C151311 = ae * C151310;
    const double C17808 = (4 * C151301 + C150963 * C151310) / C150505;
    const double C150841 = C150837 * ae;
    const double C149 = 6 * (4 * C150708 + C150614 * C150766) +
                        C150614 * (5 * C150766 + C150614 * C150837);
    const double C349 = 4 * C150708 + C150614 * C150766 + C150837 * C150873;
    const double C558 = 4 * C150708 + C150614 * C150766 + C150837 * C150976;
    const double C743 = C150860 * (5 * C150766 + C150614 * C150837);
    const double C882 = C150963 * (5 * C150766 + C150614 * C150837);
    const double C1088 = C150963 * C150860 * C150837;
    const double C150846 = ae * C150843;
    const double C150845 = C150614 * C150843;
    const double C150942 = C150843 * C150873;
    const double C151045 = C150843 * C150976;
    const double C151072 = C150860 * C150843;
    const double C151098 = C150963 * C150843;
    const double C151197 = C151191 + C151192;
    const double C151244 = C150909 + C151241;
    const double C151271 = ae * C151266;
    const double C151323 = C151317 + C151318;
    const double C151347 = ae * C151342;
    const double C151376 = C150963 * C151342;
    const double C151206 = ae * C151204;
    const double C151396 = C150860 * C151204;
    const double C151400 = C150963 * C151204;
    const double C8084 = (C151184 + C151204 * C150976) / C150505;
    const double C151413 = ae * C151412;
    const double C10176 = (2 * C151278 + C150963 * C151412) / C150505;
    const double C151418 = ae * C151417;
    const double C9442 = (3 * C151237 + C150963 * C151417) / C150505;
    const double C151332 = ae * C151330;
    const double C151432 = C150963 * C151330;
    const double C151428 = C151426 + C151427;
    const double C7823 = (2 * ae *
                              (4 * (2 * C150888 + C150860 * C150906) +
                               C150860 * (3 * C150906 + C150860 * C151256)) +
                          C150614 * (4 * C151167 + C150860 * C151202)) /
                         C150510;
    const double C7825 = (5 * (3 * C150882 + C150860 * C151167) +
                          C150860 * (4 * C151167 + C150860 * C151202)) /
                         C150510;
    const double C7826 =
        (2 * ae *
             (5 * (3 * C150906 + C150860 * C151256) +
              C150860 *
                  (4 * C151256 +
                   C150860 *
                       (3 * C150946 +
                        C150860 * (2 * C151068 +
                                   C150860 * (C150749 + C150813 * C150873))))) +
         C150614 *
             (5 * C151202 +
              C150860 *
                  (4 * C151196 +
                   C150860 *
                       (3 * C150947 +
                        C150860 *
                            (2 * C151069 +
                             C150860 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150873)))))) /
        C150510;
    const double C8087 = (2 * ae * C150963 * (3 * C150906 + C150860 * C151256) +
                          C150614 * C150963 * C151202) /
                         C150510;
    const double C8089 =
        (3 * C150882 + C150860 * C151167 + C151202 * C150976) / C150510;
    const double C8090 =
        (2 * ae *
             (3 * C150906 + C150860 * C151256 +
              (3 * C150946 +
               C150860 *
                   (2 * C151068 + C150860 * (C150749 + C150813 * C150873))) *
                  C150976) +
         C150614 *
             (C151202 +
              (3 * C150947 +
               C150860 * (2 * C151069 +
                          C150860 * (C150820 +
                                     (C150792 * C150793 +
                                      C150618 * bs[9] * std::pow(C150620, 9)) *
                                         C150621 * C150873))) *
                  C150976)) /
        C150510;
    const double C8857 =
        (C150963 * (4 * C151167 + C150860 * C151202)) / C150510;
    const double C60612 =
        (6 * (4 * C151167 + C150860 * C151202) +
         C150860 *
             (5 * C151202 +
              C150860 *
                  (4 * C151196 +
                   C150860 *
                       (3 * C150947 +
                        C150860 *
                            (2 * C151069 +
                             C150860 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150873)))))) /
        C150510;
    const double C60775 =
        (4 * C151167 + C150860 * C151202 +
         (4 * C151196 +
          C150860 *
              (3 * C150947 +
               C150860 * (2 * C151069 +
                          C150860 * (C150820 +
                                     (C150792 * C150793 +
                                      C150618 * bs[9] * std::pow(C150620, 9)) *
                                         C150621 * C150873)))) *
             C150976) /
        C150510;
    const double C61279 =
        (C150963 *
         (5 * C151202 +
          C150860 *
              (4 * C151196 +
               C150860 * (3 * C150947 +
                          C150860 * (2 * C151069 +
                                     C150860 * (C150820 +
                                                (C150792 * C150793 +
                                                 C150618 * bs[9] *
                                                     std::pow(C150620, 9)) *
                                                    C150621 * C150873)))))) /
        C150510;
    const double C62151 =
        (2 * C150963 * C151202 +
         C150963 *
             (C151202 +
              (3 * C150947 +
               C150860 * (2 * C151069 +
                          C150860 * (C150820 +
                                     (C150792 * C150793 +
                                      C150618 * bs[9] * std::pow(C150620, 9)) *
                                         C150621 * C150873))) *
                  C150976)) /
        C150510;
    const double C17812 = (2 * ae *
                               (4 * (2 * C150991 + C150963 * C151009) +
                                C150963 * (3 * C151009 + C150963 * C151359)) +
                           C150614 * (4 * C151293 + C150963 * C151328)) /
                          C150510;
    const double C17814 = (5 * (3 * C150985 + C150963 * C151293) +
                           C150963 * (4 * C151293 + C150963 * C151328)) /
                          C150510;
    const double C17815 =
        (2 * ae *
             (5 * (3 * C151009 + C150963 * C151359) +
              C150963 *
                  (4 * C151359 +
                   C150963 *
                       (3 * C151049 +
                        C150963 * (2 * C151094 +
                                   C150963 * (C150749 + C150813 * C150976))))) +
         C150614 *
             (5 * C151328 +
              C150963 *
                  (4 * C151322 +
                   C150963 *
                       (3 * C151050 +
                        C150963 *
                            (2 * C151095 +
                             C150963 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150976)))))) /
        C150510;
    const double C119851 =
        (6 * (4 * C151293 + C150963 * C151328) +
         C150963 *
             (5 * C151328 +
              C150963 *
                  (4 * C151322 +
                   C150963 *
                       (3 * C151050 +
                        C150963 *
                            (2 * C151095 +
                             C150963 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150976)))))) /
        C150510;
    const double C18561 = C151795 * C9446;
    const double C68649 = C151790 * C9446;
    const double C86231 = C151795 * C9446;
    const double C68343 = C151790 * C18556;
    const double C182 = C135 * C153;
    const double C175 = C135 * C152;
    const double C174 = C135 * C151;
    const double C167 = C135 * C150;
    const double C395 = C135 * C356;
    const double C394 = C135 * C351;
    const double C390 = C135 * C355;
    const double C383 = C135 * C352;
    const double C379 = C135 * C354;
    const double C378 = C135 * C353;
    const double C604 = C135 * C565;
    const double C603 = C135 * C560;
    const double C599 = C135 * C564;
    const double C592 = C135 * C561;
    const double C588 = C135 * C563;
    const double C587 = C135 * C562;
    const double C1110 = C135 * C1091;
    const double C1109 = C135 * C1090;
    const double C1102 = C135 * C1089;
    const double C1382 = C135 * C1365;
    const double C1381 = C135 * C1364;
    const double C1576 = C135 * C1551;
    const double C1575 = C135 * C1550;
    const double C1571 = C135 * C1546;
    const double C1719 = C135 * C1363;
    const double C1920 = C135 * C1549;
    const double C2066 = C135 * C2057;
    const double C2480 = C135 * C2463;
    const double C2479 = C135 * C2462;
    const double C2681 = C135 * C1545;
    const double C2822 = C135 * C2461;
    const double C2968 = C135 * C2959;
    const double C176 = C137 * C153;
    const double C173 = C137 * C152;
    const double C168 = C137 * C151;
    const double C389 = C137 * C356;
    const double C384 = C137 * C351;
    const double C380 = C137 * C355;
    const double C377 = C137 * C352;
    const double C598 = C137 * C565;
    const double C593 = C137 * C560;
    const double C589 = C137 * C564;
    const double C586 = C137 * C561;
    const double C1108 = C137 * C1091;
    const double C1103 = C137 * C1090;
    const double C1383 = C137 * C1366;
    const double C1380 = C137 * C1363;
    const double C1577 = C137 * C1552;
    const double C1574 = C137 * C1549;
    const double C1570 = C137 * C1545;
    const double C1720 = C137 * C1362;
    const double C1921 = C137 * C1548;
    const double C2067 = C137 * C2058;
    const double C2481 = C137 * C2464;
    const double C2478 = C137 * C2461;
    const double C2682 = C137 * C1544;
    const double C2823 = C137 * C2460;
    const double C2969 = C137 * C2960;
    const double C172 = C139 * C153;
    const double C169 = C139 * C152;
    const double C381 = C139 * C356;
    const double C376 = C139 * C351;
    const double C590 = C139 * C565;
    const double C585 = C139 * C560;
    const double C1104 = C139 * C1091;
    const double C1379 = C139 * C1362;
    const double C1578 = C139 * C1553;
    const double C1573 = C139 * C1548;
    const double C1569 = C139 * C1544;
    const double C2477 = C139 * C2460;
    const double C23156 = C23127 * C153;
    const double C23148 = C23127 * C351;
    const double C23145 = C23127 * C152;
    const double C23144 = C23127 * C151;
    const double C23141 = C23127 * C352;
    const double C23136 = C23127 * C353;
    const double C23133 = C23127 * C150;
    const double C23432 = C23127 * C1362;
    const double C23430 = C23127 * C356;
    const double C23416 = C23127 * C1363;
    const double C23406 = C23127 * C355;
    const double C23396 = C23127 * C1364;
    const double C23394 = C23127 * C354;
    const double C23740 = C23127 * C1544;
    const double C23737 = C23127 * C565;
    const double C23736 = C23127 * C560;
    const double C23733 = C23127 * C1091;
    const double C23730 = C23127 * C564;
    const double C23727 = C23127 * C1545;
    const double C23722 = C23127 * C1090;
    const double C23719 = C23127 * C561;
    const double C23716 = C23127 * C1546;
    const double C23713 = C23127 * C563;
    const double C23712 = C23127 * C562;
    const double C23709 = C23127 * C1089;
    const double C24469 = C23127 * C1548;
    const double C24462 = C23127 * C1549;
    const double C24451 = C23127 * C1550;
    const double C24854 = C23127 * C7820;
    const double C24852 = C23127 * C1365;
    const double C25117 = C23127 * C8080;
    const double C25116 = C23127 * C2057;
    const double C25112 = C23127 * C1551;
    const double C25347 = C23127 * C1366;
    const double C25655 = C23127 * C2058;
    const double C25867 = C23127 * C8082;
    const double C26446 = C23127 * C9439;
    const double C26443 = C23127 * C2463;
    const double C26442 = C23127 * C2462;
    const double C26439 = C23127 * C2959;
    const double C26745 = C23127 * C1552;
    const double C26954 = C23127 * C2960;
    const double C26951 = C23127 * C2461;
    const double C27157 = C23127 * C9438;
    const double C32196 = C23127 * C2460;
    const double C34755 = C23127 * C17809;
    const double C35266 = C23127 * C2464;
    const double C23146 = C23129 * C153;
    const double C23143 = C23129 * C152;
    const double C23140 = C23129 * C351;
    const double C23137 = C23129 * C352;
    const double C23134 = C23129 * C151;
    const double C23415 = C23129 * C1362;
    const double C23409 = C23129 * C356;
    const double C23397 = C23129 * C1363;
    const double C23391 = C23129 * C355;
    const double C23729 = C23129 * C565;
    const double C23726 = C23129 * C1544;
    const double C23723 = C23129 * C1091;
    const double C23720 = C23129 * C560;
    const double C23717 = C23129 * C1545;
    const double C23714 = C23129 * C564;
    const double C23711 = C23129 * C561;
    const double C23708 = C23129 * C1090;
    const double C24461 = C23129 * C1548;
    const double C24452 = C23129 * C1549;
    const double C24849 = C23129 * C1366;
    const double C25118 = C23129 * C8079;
    const double C25115 = C23129 * C2058;
    const double C25109 = C23129 * C1552;
    const double C26447 = C23129 * C9440;
    const double C26444 = C23129 * C2464;
    const double C26441 = C23129 * C2461;
    const double C26438 = C23129 * C2960;
    const double C26746 = C23129 * C1553;
    const double C26952 = C23129 * C2460;
    const double C27158 = C23129 * C9437;
    const double C50905 = C50876 * C153;
    const double C50897 = C50876 * C351;
    const double C50894 = C50876 * C152;
    const double C50893 = C50876 * C151;
    const double C50890 = C50876 * C352;
    const double C50885 = C50876 * C353;
    const double C50882 = C50876 * C150;
    const double C51181 = C50876 * C1362;
    const double C51179 = C50876 * C356;
    const double C51165 = C50876 * C1363;
    const double C51155 = C50876 * C355;
    const double C51145 = C50876 * C1364;
    const double C51143 = C50876 * C354;
    const double C51489 = C50876 * C1544;
    const double C51486 = C50876 * C565;
    const double C51485 = C50876 * C560;
    const double C51482 = C50876 * C1091;
    const double C51479 = C50876 * C564;
    const double C51476 = C50876 * C1545;
    const double C51471 = C50876 * C1090;
    const double C51468 = C50876 * C561;
    const double C51465 = C50876 * C1546;
    const double C51462 = C50876 * C563;
    const double C51461 = C50876 * C562;
    const double C51458 = C50876 * C1089;
    const double C52218 = C50876 * C1548;
    const double C52211 = C50876 * C1549;
    const double C52200 = C50876 * C1550;
    const double C52603 = C50876 * C7820;
    const double C52601 = C50876 * C1365;
    const double C52866 = C50876 * C8080;
    const double C52865 = C50876 * C2057;
    const double C52861 = C50876 * C1551;
    const double C53096 = C50876 * C1366;
    const double C53404 = C50876 * C2058;
    const double C53616 = C50876 * C8082;
    const double C54195 = C50876 * C9439;
    const double C54192 = C50876 * C2463;
    const double C54191 = C50876 * C2462;
    const double C54188 = C50876 * C2959;
    const double C54494 = C50876 * C1552;
    const double C54703 = C50876 * C2960;
    const double C54700 = C50876 * C2461;
    const double C54906 = C50876 * C9438;
    const double C101893 = C50876 * C2460;
    const double C104452 = C50876 * C17809;
    const double C104963 = C50876 * C2464;
    const double C50895 = C50878 * C153;
    const double C50892 = C50878 * C152;
    const double C50889 = C50878 * C351;
    const double C50886 = C50878 * C352;
    const double C50883 = C50878 * C151;
    const double C51164 = C50878 * C1362;
    const double C51158 = C50878 * C356;
    const double C51146 = C50878 * C1363;
    const double C51140 = C50878 * C355;
    const double C51478 = C50878 * C565;
    const double C51475 = C50878 * C1544;
    const double C51472 = C50878 * C1091;
    const double C51469 = C50878 * C560;
    const double C51466 = C50878 * C1545;
    const double C51463 = C50878 * C564;
    const double C51460 = C50878 * C561;
    const double C51457 = C50878 * C1090;
    const double C52210 = C50878 * C1548;
    const double C52201 = C50878 * C1549;
    const double C52598 = C50878 * C1366;
    const double C52867 = C50878 * C8079;
    const double C52864 = C50878 * C2058;
    const double C52858 = C50878 * C1552;
    const double C54196 = C50878 * C9440;
    const double C54193 = C50878 * C2464;
    const double C54190 = C50878 * C2461;
    const double C54187 = C50878 * C2960;
    const double C54495 = C50878 * C1553;
    const double C54701 = C50878 * C2460;
    const double C54907 = C50878 * C9437;
    const double C150543 = C150542 * ae;
    const double C6089 = -(C150542 * be) / C150505;
    const double C6417 = C6399 + C6100;
    const double C6415 = C6397 + C6102;
    const double C6412 = C6394 + C6351;
    const double C6411 = C6393 + C6099;
    const double C6409 = C6391 + C6097;
    const double C7454 = C7442 + C6670;
    const double C7452 = C7440 + C6668;
    const double C8127 = C8119 + C6679;
    const double C8125 = C8117 + C6677;
    const double C10196 = C10192 + C9452;
    const double C15266 = C15248 + C6690;
    const double C15264 = C15246 + C6681;
    const double C15261 = C15243 + C9454;
    const double C15260 = C15242 + C6675;
    const double C15258 = C15240 + C6672;
    const double C23456 = C23438 + C23388;
    const double C23455 = C23437 + C23138;
    const double C32220 = C32202 + C23715;
    const double C32219 = C32201 + C23710;
    const double C51205 = C51187 + C51137;
    const double C51204 = C51186 + C50887;
    const double C101917 = C101899 + C51464;
    const double C101916 = C101898 + C51459;
    const double C59652 = C59640 + C59445;
    const double C59651 = C59639 + C59444;
    const double C59649 = C59637 + C59439;
    const double C59648 = C59636 + C59440;
    const double C59647 = C59635 + C59441;
    const double C59646 = C59634 + C59608;
    const double C59645 = C59633 + C59438;
    const double C59644 = C59632 + C59437;
    const double C59643 = C59631 + C59436;
    const double C60360 = C60351 + C59835;
    const double C60359 = C60350 + C59834;
    const double C60358 = C60349 + C59827;
    const double C60357 = C60348 + C59826;
    const double C60356 = C60347 + C59825;
    const double C60623 = C60621 + C60617;
    const double C60622 = C60620 + C59610;
    const double C60799 = C60794 + C60786;
    const double C60798 = C60793 + C60332;
    const double C60797 = C60792 + C59832;
    const double C60796 = C60791 + C59831;
    const double C60795 = C60790 + C59830;
    const double C61285 = C61284 + C60788;
    const double C61879 = C61876 + C59839;
    const double C61878 = C61875 + C59838;
    const double C62165 = C62162 + C61667;
    const double C62164 = C62161 + C61666;
    const double C62163 = C62160 + C61665;
    const double C65775 = C65764 + C59845;
    const double C65774 = C65763 + C59844;
    const double C65773 = C65762 + C62017;
    const double C65772 = C65761 + C62016;
    const double C65771 = C65760 + C59840;
    const double C65770 = C65759 + C59833;
    const double C65769 = C65758 + C61668;
    const double C65768 = C65757 + C59829;
    const double C65767 = C65756 + C59828;
    const double C67081 = C67079 + C61671;
    const double C67080 = C67078 + C61670;
    const double C68354 = C68351 + C68345;
    const double C68353 = C68350 + C68342;
    const double C68352 = C68349 + C61669;
    const double C119857 = C119856 + C68347;
    const double C73941 = C73923 + C73624;
    const double C73939 = C73921 + C73626;
    const double C73936 = C73918 + C73875;
    const double C73935 = C73917 + C73623;
    const double C73933 = C73915 + C73621;
    const double C74978 = C74966 + C74194;
    const double C74976 = C74964 + C74192;
    const double C75621 = C75613 + C74203;
    const double C75619 = C75611 + C74201;
    const double C77648 = C77644 + C76916;
    const double C82881 = C82867 + C74214;
    const double C82879 = C82865 + C74205;
    const double C82876 = C82862 + C74199;
    const double C82875 = C82861 + C74196;
    const double C86249 = C86243 + C76918;
    const double C162 =
        (3 * (C150643 + C150646 + C150646 + C150614 * C150674) + C150681 +
         C150681 +
         C150614 * (2 * C150674 + C150678 + C150678 +
                    C150614 * (C150669 + C150673 + C150673 +
                               C150614 * (2 * ae * C150663 +
                                          C150614 *
                                              (C150653 * C150654 +
                                               C150618 * bs[6] *
                                                   std::pow(C150612, 6)) *
                                              C150621)))) /
        C150510;
    const double C183 = C135 * C154;
    const double C181 = C137 * C154;
    const double C177 = C139 * C154;
    const double C171 = C141 * C154;
    const double C6118 = C6090 * C154;
    const double C6116 = C6092 * C154;
    const double C23157 = C23127 * C154;
    const double C23155 = C23129 * C154;
    const double C23147 = C23131 * C154;
    const double C50906 = C50876 * C154;
    const double C50904 = C50878 * C154;
    const double C50896 = C50880 * C154;
    const double C59451 = C59433 * C154;
    const double C73642 = C150541 * C154;
    const double C73640 = C150531 * C154;
    const double C393 = C137 * C350;
    const double C385 = C139 * C350;
    const double C375 = C141 * C350;
    const double C747 = C135 * C350;
    const double C6115 = C6090 * C350;
    const double C6109 = C6092 * C350;
    const double C23153 = C23127 * C350;
    const double C23149 = C23129 * C350;
    const double C23139 = C23131 * C350;
    const double C50902 = C50876 * C350;
    const double C50898 = C50878 * C350;
    const double C50888 = C50880 * C350;
    const double C59449 = C59433 * C350;
    const double C73639 = C150541 * C350;
    const double C73633 = C150531 * C350;
    const double C602 = C137 * C559;
    const double C594 = C139 * C559;
    const double C584 = C141 * C559;
    const double C886 = C135 * C559;
    const double C6696 = C6092 * C559;
    const double C7114 = C6090 * C559;
    const double C23735 = C23129 * C559;
    const double C23721 = C23131 * C559;
    const double C24149 = C23127 * C559;
    const double C51484 = C50878 * C559;
    const double C51470 = C50880 * C559;
    const double C51898 = C50876 * C559;
    const double C60128 = C59433 * C559;
    const double C74220 = C150531 * C559;
    const double C74638 = C150541 * C559;
    const double C7457 = C7445 + C6683;
    const double C24481 = C24472 + C23707;
    const double C52230 = C52221 + C51456;
    const double C60364 = C60355 + C59843;
    const double C74981 = C74969 + C74207;
    const double C150724 = C150688 + C150722;
    const double C150895 = ae * C150890;
    const double C1092 = (C150963 * C150890) / C150505;
    const double C150998 = ae * C150993;
    const double C396 = C137 * C357;
    const double C388 = C139 * C357;
    const double C382 = C141 * C357;
    const double C6113 = C6090 * C357;
    const double C6111 = C6092 * C357;
    const double C23427 = C23129 * C357;
    const double C23412 = C23131 * C357;
    const double C23943 = C23127 * C357;
    const double C51176 = C50878 * C357;
    const double C51161 = C50880 * C357;
    const double C51692 = C50876 * C357;
    const double C59448 = C59433 * C357;
    const double C73637 = C150541 * C357;
    const double C73635 = C150531 * C357;
    const double C605 = C137 * C566;
    const double C597 = C139 * C566;
    const double C591 = C141 * C566;
    const double C6699 = C6092 * C566;
    const double C14756 = C6090 * C566;
    const double C23738 = C23129 * C566;
    const double C23728 = C23131 * C566;
    const double C32647 = C23127 * C566;
    const double C51487 = C50878 * C566;
    const double C51477 = C50880 * C566;
    const double C65259 = C59433 * C566;
    const double C74223 = C150531 * C566;
    const double C83432 = C150541 * C566;
    const double C102344 = C50876 * C566;
    const double C6381 = C151795 * C369;
    const double C6903 = C6084 * C369;
    const double C23428 = C152232 * C369;
    const double C23413 = C23123 * C369;
    const double C51177 = C50871 * C369;
    const double C51162 = C50872 * C369;
    const double C59982 = C151790 * C369;
    const double C73905 = C151795 * C369;
    const double C74427 = C152145 * C369;
    const double C6401 = C6369 + C6370;
    const double C24859 = C24843 + C23398;
    const double C52608 = C52592 + C51147;
    const double C59641 = C59625 + C59446;
    const double C73925 = C73893 + C73894;
    const double C7447 = C7426 + C6685;
    const double C25125 = C25103 + C24453;
    const double C52874 = C52852 + C52202;
    const double C60354 = C60342 + C59842;
    const double C74971 = C74950 + C74209;
    const double C7435 = C151795 * C1098;
    const double C24466 = C152232 * C1098;
    const double C24459 = C23123 * C1098;
    const double C40903 = C6084 * C1098;
    const double C52215 = C50871 * C1098;
    const double C52208 = C50872 * C1098;
    const double C65985 = C151790 * C1098;
    const double C74959 = C151795 * C1098;
    const double C83161 = C152145 * C1098;
    const double C9771 = C9767 + C6688;
    const double C25131 = C25122 + C23718;
    const double C52880 = C52871 + C51467;
    const double C65504 = C65502 + C59846;
    const double C77232 = C77228 + C74212;
    const double C15230 = C151795 * C578;
    const double C15691 = C6084 * C578;
    const double C32193 = C152232 * C578;
    const double C32183 = C23123 * C578;
    const double C66194 = C151790 * C578;
    const double C82853 = C151795 * C578;
    const double C101890 = C50871 * C578;
    const double C101880 = C50872 * C578;
    const double C135074 = C152145 * C578;
    const double C15250 = C15219 + C9975;
    const double C34760 = C34747 + C26440;
    const double C104457 = C104444 + C54189;
    const double C65766 = C65751 + C65752;
    const double C86924 = C86916 + C77433;
    const double C7847 = C7843 + C6357;
    const double C59650 = C59638 + C59618;
    const double C75359 = C75355 + C73881;
    const double C8129 = C8121 + C7419;
    const double C60361 = C60352 + C59836;
    const double C75623 = C75615 + C74943;
    const double C17835 = C17831 + C9457;
    const double C68856 = C68855 + C65743;
    const double C86252 = C86246 + C76921;
    const double C150844 = C150614 * C150842;
    const double C150801 = C150787 + C150778;
    const double C150779 = C150735 + C150777;
    const double C150908 = C150721 + C150903;
    const double C150930 = ae * C150923;
    const double C151131 = C150963 * C150923;
    const double C151252 = 2 * C150923;
    const double C1543 = (C150890 + C150923 * C150976) / C150505;
    const double C151011 = C150721 + C151006;
    const double C151033 = ae * C151026;
    const double C151355 = 2 * C151026;
    const double C151170 = ae * C151168;
    const double C1367 = (3 * C150883 + C150860 * C151168) / C150505;
    const double C2059 = (C150963 * C151168) / C150505;
    const double C1559 = (2 * (2 * ae * C150963 * C150906 + C150614 * C151223) +
                          C151226 + C151226 +
                          C150614 * (C151223 + C151227 + C151227 +
                                     C150614 * (2 * ae * C150963 * C150946 +
                                                C150614 * C150963 * C150947))) /
                         C150510;
    const double C9765 = C9755 + C6686;
    const double C25126 = C25105 + C25106;
    const double C52875 = C52854 + C52855;
    const double C65503 = C65498 + C59847;
    const double C77226 = C77216 + C74210;
    const double C151090 = C151084 + C151089;
    const double C1555 =
        (2 * (2 * ae * (C150888 + C150920 * C150976) + C150614 * C151211) +
         C151214 + C151214 +
         C150614 * (C151211 + C151215 + C151215 +
                    C150614 * (2 * ae * (C150920 + C151068 * C150976) +
                               C150614 * (C150921 + C151069 * C150976)))) /
        C150510;
    const double C2970 = C139 * C2961;
    const double C9977 = C6092 * C2961;
    const double C16002 = C6090 * C2961;
    const double C26437 = C23131 * C2961;
    const double C26955 = C23129 * C2961;
    const double C54186 = C50880 * C2961;
    const double C54704 = C50878 * C2961;
    const double C65749 = C59433 * C2961;
    const double C77435 = C150531 * C2961;
    const double C82858 = C150541 * C2961;
    const double C151296 = ae * C151294;
    const double C2465 = (3 * C150986 + C150963 * C151294) / C150505;
    const double C151116 = C151110 + C151115;
    const double C1375 =
        (3 * C150882 + C150860 * C151167 + C151185 + C151185 +
         C150614 *
             (2 * ae *
                  (3 * C150906 + C150860 * (2 * C150920 + C150860 * C150946)) +
              C150614 * (3 * C150907 +
                         C150860 * (2 * C150921 + C150860 * C150947)))) /
        C150510;
    const double C7834 = C6092 * C7819;
    const double C8344 = C6090 * C7819;
    const double C24855 = C23129 * C7819;
    const double C52604 = C50878 * C7819;
    const double C59620 = C59433 * C7819;
    const double C75346 = C150531 * C7819;
    const double C75835 = C150541 * C7819;
    const double C8111 = C6092 * C8081;
    const double C8651 = C6090 * C8081;
    const double C25868 = C23129 * C8081;
    const double C53617 = C50878 * C8081;
    const double C60339 = C59433 * C8081;
    const double C75605 = C150531 * C8081;
    const double C76139 = C150541 * C8081;
    const double C8648 = C151795 * C2063;
    const double C25862 = C23123 * C2063;
    const double C53611 = C50872 * C2063;
    const double C60341 = C151790 * C2063;
    const double C76136 = C151795 * C2063;
    const double C8130 = C8122 + C8106;
    const double C61877 = C61874 + C59837;
    const double C75624 = C75616 + C75600;
    const double C10194 = C10190 + C9450;
    const double C67578 = C67577 + C62018;
    const double C77646 = C77642 + C76914;
    const double C18138 = C151795 * C2965;
    const double C27152 = C23123 * C2965;
    const double C54901 = C50872 * C2965;
    const double C65750 = C151790 * C2965;
    const double C86648 = C151795 * C2965;
    const double C18566 = C18560 + C9459;
    const double C68653 = C68648 + C65742;
    const double C86244 = C86230 + C76923;
    const double C2473 =
        (3 * C150985 + C150963 * C151293 + C151311 + C151311 +
         C150614 *
             (2 * ae *
                  (3 * C151009 + C150963 * (2 * C151023 + C150963 * C151049)) +
              C150614 * (3 * C151010 +
                         C150963 * (2 * C151024 + C150963 * C151050)))) /
        C150510;
    const double C17823 = C6092 * C17808;
    const double C18351 = C6090 * C17808;
    const double C34756 = C23129 * C17808;
    const double C68853 = C59433 * C17808;
    const double C86239 = C150531 * C17808;
    const double C104453 = C50878 * C17808;
    const double C137672 = C150541 * C17808;
    const double C150848 = C150796 + C150845;
    const double C150949 = C150776 + C150942;
    const double C151052 = C150776 + C151045;
    const double C151081 = ae * C151072;
    const double C151146 = C150963 * C151072;
    const double C151336 = C151072 * C150976;
    const double C151107 = ae * C151098;
    const double C151200 = C150860 * C151197;
    const double C151254 = ae * C151197;
    const double C151282 = C150963 * C151197;
    const double C9752 = (C151168 + C151197 * C150976) / C150505;
    const double C151246 = ae * C151244;
    const double C9971 = (2 * C151224 + C150963 * C151244) / C150505;
    const double C151326 = C150963 * C151323;
    const double C151357 = ae * C151323;
    const double C151380 = C151375 + C151376;
    const double C151397 = C151395 + C151396;
    const double C151401 = ae * C151400;
    const double C8114 = C6092 * C8084;
    const double C61873 = C59433 * C8084;
    const double C75608 = C150531 * C8084;
    const double C9753 =
        (C151167 + C151196 * C150976 + C151413 + C151413 +
         C150614 *
             (2 * ae *
                  (C151256 +
                   (2 * C151068 + C150860 * (C150749 + C150813 * C150873)) *
                       C150976) +
              C150614 * (C151196 +
                         (2 * C151069 +
                          C150860 * (C150820 +
                                     (C150792 * C150793 +
                                      C150618 * bs[9] * std::pow(C150620, 9)) *
                                         C150621 * C150873)) *
                             C150976))) /
        C150510;
    const double C10189 = C6092 * C10176;
    const double C62019 = C59433 * C10176;
    const double C77641 = C150531 * C10176;
    const double C9972 =
        (2 * C151223 + C150963 * C151243 + C151418 + C151418 +
         C150614 *
             (2 * ae *
                  (2 * C151263 +
                   C150963 *
                       (C150946 + (C150749 + C150813 * C150873) * C150976)) +
              C150614 *
                  (2 * C151264 +
                   C150963 * (C150947 + (C150820 + (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                       C150621 * C150873) *
                                            C150976)))) /
        C150510;
    const double C9461 = C6092 * C9442;
    const double C68652 = C59433 * C9442;
    const double C76925 = C150531 * C9442;
    const double C151433 = C151431 + C151432;
    const double C151429 = ae * C151428;
    const double C18555 = (4 * C151370 + C150963 * C151428) / C150505;
    const double C7835 = C151795 * C7823;
    const double C60941 = C151790 * C7823;
    const double C75347 = C151795 * C7823;
    const double C60618 = C151790 * C7825;
    const double C8862 = C151795 * C8087;
    const double C61142 = C151790 * C8087;
    const double C76344 = C151795 * C8087;
    const double C60787 = C151790 * C8089;
    const double C61282 = C151790 * C8857;
    const double C17824 = C151795 * C17812;
    const double C120184 = C151790 * C17812;
    const double C137172 = C151795 * C17812;
    const double C119854 = C151790 * C17814;
    const double C134 =
        ((ae * -2 * C150504) / C150517 -
         (((C150506 * C150518) / C150510 + 2 * C150534) * be) / C150505) /
            C150511 +
        ((C150506 *
              (C150518 / C150517 -
               (((C150506 * C150543) / C150505 + 2 * C150541) * be) / C150505 -
               C150536 / C150520) +
          2 * (C150534 / C150511 -
               ((C150506 * C150541 + C152145) * be) / C150505 + C150531)) *
         ae) /
            C150505 +
        C150543 / C150520 - ((2 * C150531 - C150538 / C150520) * be) / C150505;
    const double C136 =
        (C150518 / C150517 -
         (((C150506 * C150543) / C150505 + 2 * C150541) * be) / C150505 -
         C150536 / C150520) /
            C150511 +
        ((C150506 * (C150543 / C150520 -
                     ((2 * C150531 - C150538 / C150520) * be) / C150505) +
          2 * (C150541 / C150511 -
               ((C150506 * C150531 + C151795) * be) / C150505)) *
         ae) /
            C150505 +
        (-2 * C150536) / (C150505 * 4 * C150510);
    const double C138 = (C150543 / C150520 -
                         ((2 * C150531 - C150538 / C150520) * be) / C150505) /
                            C150511 +
                        ((2 * (C150531 / C150511 - (0 * be) / C150505) -
                          C150538 / (C150505 * 4 * C150510)) *
                         ae) /
                            C150505;
    const double C23126 =
        C150518 / C150517 -
        (((C150506 * C150543) / C150505 + 2 * C150541) * be) / C150505 -
        C150536 / C150520;
    const double C23128 =
        C150543 / C150520 - ((2 * C150531 - C150538 / C150520) * be) / C150505;
    const double C50875 =
        C150518 / C150517 +
        (((C150506 * C150543) / C150505 + 2 * C150541) * ae) / C150505 -
        C150536 / C150520;
    const double C50877 =
        C150543 / C150520 + ((2 * C150531 - C150538 / C150520) * ae) / C150505;
    const double C73613 = C150543 / C150505;
    const double C6385 = C6089 * C1354;
    const double C6378 = C6089 * C344;
    const double C6374 = C6089 * C339;
    const double C6366 = C6089 * C1355;
    const double C6362 = C6089 * C343;
    const double C6358 = C6089 * C340;
    const double C6353 = C6089 * C1356;
    const double C6346 = C6089 * C342;
    const double C6342 = C6089 * C341;
    const double C6902 = C6089 * C345;
    const double C6898 = C6089 * C338;
    const double C7436 = C6089 * C1085;
    const double C7432 = C6089 * C1536;
    const double C7424 = C6089 * C1537;
    const double C7420 = C6089 * C1084;
    const double C7416 = C6089 * C1083;
    const double C7412 = C6089 * C1538;
    const double C7836 = C6089 * C7816;
    const double C7829 = C6089 * C1357;
    const double C8108 = C6089 * C8074;
    const double C8101 = C6089 * C2053;
    const double C8097 = C6089 * C1539;
    const double C8093 = C6089 * C1534;
    const double C8342 = C6089 * C1358;
    const double C8649 = C6089 * C2054;
    const double C8863 = C6089 * C8076;
    const double C9761 = C6089 * C1533;
    const double C9757 = C6089 * C1540;
    const double C10186 = C6089 * C2955;
    const double C10182 = C6089 * C9432;
    const double C15234 = C6089 * C2452;
    const double C15227 = C6089 * C553;
    const double C15223 = C6089 * C548;
    const double C15217 = C6089 * C2453;
    const double C15213 = C6089 * C552;
    const double C15209 = C6089 * C549;
    const double C15207 = C6089 * C2454;
    const double C15201 = C6089 * C551;
    const double C15197 = C6089 * C550;
    const double C15690 = C6089 * C554;
    const double C15686 = C6089 * C547;
    const double C15998 = C6089 * C1532;
    const double C17825 = C6089 * C17805;
    const double C17818 = C6089 * C2455;
    const double C18139 = C6089 * C2956;
    const double C18349 = C6089 * C2456;
    const double C18562 = C6089 * C9433;
    const double C40902 = C6089 * C1086;
    const double C6435 = C6417 + C6365;
    const double C6433 = C6415 + C6361;
    const double C6430 = C6412 + C6352;
    const double C6429 = C6411 + C6349;
    const double C6427 = C6409 + C6345;
    const double C7466 = C7454 + C7415;
    const double C7464 = C7452 + C7411;
    const double C8135 = C8127 + C8100;
    const double C8133 = C8125 + C8096;
    const double C10200 = C10196 + C10185;
    const double C15284 = C15266 + C15216;
    const double C15282 = C15264 + C15212;
    const double C15279 = C15261 + C15206;
    const double C15278 = C15260 + C15204;
    const double C15276 = C15258 + C15200;
    const double C23474 = C23456 + C23389;
    const double C23473 = C23455 + C23386;
    const double C32238 = C32220 + C32167;
    const double C32237 = C32219 + C32165;
    const double C51223 = C51205 + C51138;
    const double C51222 = C51204 + C51135;
    const double C101935 = C101917 + C101864;
    const double C101934 = C101916 + C101862;
    const double C59664 = C59652 + C59624;
    const double C59663 = C59651 + C59622;
    const double C59661 = C59649 + C59616;
    const double C59660 = C59648 + C59614;
    const double C59659 = C59647 + C59612;
    const double C59658 = C59646 + C59609;
    const double C59657 = C59645 + C59606;
    const double C59656 = C59644 + C59604;
    const double C59655 = C59643 + C59602;
    const double C60369 = C60360 + C60336;
    const double C60368 = C60359 + C60334;
    const double C60367 = C60358 + C60331;
    const double C60366 = C60357 + C60329;
    const double C60365 = C60356 + C60327;
    const double C60624 = C60622 + C60615;
    const double C60803 = C60798 + C60784;
    const double C60802 = C60797 + C60782;
    const double C60801 = C60796 + C60780;
    const double C60800 = C60795 + C60778;
    const double C61882 = C61879 + C61872;
    const double C61881 = C61878 + C61870;
    const double C62168 = C62165 + C62158;
    const double C62167 = C62164 + C62156;
    const double C62166 = C62163 + C62154;
    const double C65786 = C65775 + C65747;
    const double C65785 = C65774 + C65745;
    const double C65784 = C65773 + C65741;
    const double C65783 = C65772 + C65739;
    const double C65782 = C65771 + C65737;
    const double C65781 = C65770 + C65735;
    const double C65780 = C65769 + C65733;
    const double C65779 = C65768 + C65731;
    const double C65778 = C65767 + C65729;
    const double C67083 = C67081 + C67075;
    const double C67082 = C67080 + C67070;
    const double C68357 = C68354 + C68346;
    const double C68356 = C68353 + C68343;
    const double C68355 = C68352 + C68340;
    const double C73959 = C73941 + C73889;
    const double C73957 = C73939 + C73885;
    const double C73954 = C73936 + C73876;
    const double C73953 = C73935 + C73873;
    const double C73951 = C73933 + C73869;
    const double C74990 = C74978 + C74939;
    const double C74988 = C74976 + C74935;
    const double C75629 = C75621 + C75594;
    const double C75627 = C75619 + C75590;
    const double C77652 = C77648 + C77637;
    const double C82895 = C82881 + C82843;
    const double C82893 = C82879 + C82839;
    const double C82890 = C82876 + C82833;
    const double C82889 = C82875 + C82831;
    const double C86255 = C86249 + C86229;
    const double C6403 = C6376 + C6109;
    const double C23443 = C23403 + C23139;
    const double C51192 = C51152 + C50888;
    const double C59986 = C59979 + C59449;
    const double C73927 = C73900 + C73633;
    const double C15252 = C15225 + C6696;
    const double C32207 = C32176 + C23721;
    const double C101904 = C101873 + C51470;
    const double C66197 = C66191 + C60128;
    const double C82869 = C82846 + C74220;
    const double C7469 = C7457 + C7423;
    const double C24490 = C24481 + C24446;
    const double C52239 = C52230 + C52195;
    const double C60373 = C60364 + C60345;
    const double C74993 = C74981 + C74947;
    const double C150725 = C150724 + C150711;
    const double C370 =
        (3 * (C150861 + C150865 + C150865 + C150614 * C150899) + C150895 +
         C150895 +
         C150614 * (2 * C150899 + C150896 + C150896 +
                    C150614 * (C150889 + C150897 + C150897 +
                               C150614 * (2 * ae * C150860 * C150699 +
                                          C150614 * C150860 * C150756)))) /
        C150510;
    const double C1111 = C137 * C1092;
    const double C1107 = C139 * C1092;
    const double C1105 = C141 * C1092;
    const double C6694 = C6092 * C1092;
    const double C7116 = C6090 * C1092;
    const double C23732 = C23129 * C1092;
    const double C23724 = C23131 * C1092;
    const double C24152 = C23127 * C1092;
    const double C51481 = C50878 * C1092;
    const double C51473 = C50880 * C1092;
    const double C51901 = C50876 * C1092;
    const double C60129 = C59433 * C1092;
    const double C74218 = C150531 * C1092;
    const double C74640 = C150541 * C1092;
    const double C579 =
        (3 * (C150964 + C150968 + C150968 + C150614 * C151002) + C150998 +
         C150998 +
         C150614 * (2 * C151002 + C150999 + C150999 +
                    C150614 * (C150992 + C151000 + C151000 +
                               C150614 * (2 * ae * C150963 * C150699 +
                                          C150614 * C150963 * C150756)))) /
        C150510;
    const double C6405 = C6380 + C6111;
    const double C23446 = C23411 + C23412;
    const double C51195 = C51160 + C51161;
    const double C59987 = C59981 + C59448;
    const double C73929 = C73904 + C73635;
    const double C15254 = C15229 + C6699;
    const double C32210 = C32182 + C23728;
    const double C101907 = C101879 + C51477;
    const double C66198 = C66193 + C65259;
    const double C82872 = C82852 + C74223;
    const double C6419 = C6401 + C6370;
    const double C24865 = C24859 + C23398;
    const double C52614 = C52608 + C51147;
    const double C59653 = C59641 + C59446;
    const double C73943 = C73925 + C73894;
    const double C7459 = C7447 + C6685;
    const double C25134 = C25125 + C24453;
    const double C52883 = C52874 + C52202;
    const double C60363 = C60354 + C59842;
    const double C74983 = C74971 + C74209;
    const double C9775 = C9771 + C9760;
    const double C25140 = C25131 + C25098;
    const double C52889 = C52880 + C52847;
    const double C65506 = C65504 + C65497;
    const double C77236 = C77232 + C77221;
    const double C15268 = C15250 + C9975;
    const double C34766 = C34760 + C26440;
    const double C104463 = C104457 + C54189;
    const double C65777 = C65766 + C65752;
    const double C86926 = C86924 + C77433;
    const double C7851 = C7847 + C7832;
    const double C59662 = C59650 + C59619;
    const double C75363 = C75359 + C75344;
    const double C8137 = C8129 + C8104;
    const double C60370 = C60361 + C60338;
    const double C75631 = C75623 + C75598;
    const double C17839 = C17835 + C17821;
    const double C68857 = C68856 + C68852;
    const double C86258 = C86252 + C86235;
    const double C150810 = C150801 + C150778;
    const double C150780 = C150779 + C150761;
    const double C150913 = ae * C150908;
    const double C1361 = (2 * C150890 + C150860 * C150908) / C150505;
    const double C1547 = (C150963 * C150908) / C150505;
    const double C151136 = ae * C151131;
    const double C1568 = C141 * C1543;
    const double C2683 = C139 * C1543;
    const double C6701 = C6092 * C1543;
    const double C15490 = C6090 * C1543;
    const double C23741 = C23129 * C1543;
    const double C23725 = C23131 * C1543;
    const double C51490 = C50878 * C1543;
    const double C51474 = C50880 * C1543;
    const double C65258 = C59433 * C1543;
    const double C74225 = C150531 * C1543;
    const double C83434 = C150541 * C1543;
    const double C151016 = ae * C151011;
    const double C2459 = (2 * C150993 + C150963 * C151011) / C150505;
    const double C1369 =
        (2 * (2 * ae * (2 * C150888 + C150860 * C150906) + C150614 * C151167) +
         C151170 + C151170 +
         C150614 * (C151167 + C151171 + C151171 +
                    C150614 * (2 * ae * (2 * C150920 + C150860 * C150946) +
                               C150614 * (2 * C150921 + C150860 * C150947)))) /
        C150510;
    const double C1384 = C139 * C1367;
    const double C6388 = C6090 * C1367;
    const double C6372 = C6092 * C1367;
    const double C24846 = C23131 * C1367;
    const double C25348 = C23129 * C1367;
    const double C52595 = C50880 * C1367;
    const double C53097 = C50878 * C1367;
    const double C59628 = C59433 * C1367;
    const double C73912 = C150541 * C1367;
    const double C73896 = C150531 * C1367;
    const double C2068 = C139 * C2059;
    const double C7438 = C6090 * C2059;
    const double C7428 = C6092 * C2059;
    const double C25114 = C23131 * C2059;
    const double C25656 = C23129 * C2059;
    const double C52863 = C50880 * C2059;
    const double C53405 = C50878 * C2059;
    const double C59841 = C59433 * C2059;
    const double C74962 = C150541 * C2059;
    const double C74952 = C150531 * C2059;
    const double C7431 = C151795 * C1559;
    const double C25650 = C23123 * C1559;
    const double C53399 = C50872 * C1559;
    const double C74955 = C151795 * C1559;
    const double C93860 = C151790 * C1559;
    const double C9769 = C9765 + C6686;
    const double C25135 = C25126 + C25106;
    const double C52884 = C52875 + C52855;
    const double C65505 = C65503 + C59847;
    const double C77230 = C77226 + C74210;
    const double C16001 = C151795 * C1555;
    const double C26740 = C23123 * C1555;
    const double C54489 = C50872 * C1555;
    const double C65987 = C151790 * C1555;
    const double C82849 = C151795 * C1555;
    const double C18143 = C18137 + C9977;
    const double C27160 = C27151 + C26437;
    const double C54909 = C54900 + C54186;
    const double C65765 = C65748 + C65749;
    const double C86652 = C86647 + C77435;
    const double C2467 =
        (2 * (2 * ae * (2 * C150991 + C150963 * C151009) + C150614 * C151293) +
         C151296 + C151296 +
         C150614 * (C151293 + C151297 + C151297 +
                    C150614 * (2 * ae * (2 * C151023 + C150963 * C151049) +
                               C150614 * (2 * C151024 + C150963 * C151050)))) /
        C150510;
    const double C2482 = C139 * C2465;
    const double C15237 = C6090 * C2465;
    const double C15221 = C6092 * C2465;
    const double C26445 = C23131 * C2465;
    const double C35267 = C23129 * C2465;
    const double C54194 = C50880 * C2465;
    const double C65754 = C59433 * C2465;
    const double C86921 = C150531 * C2465;
    const double C104964 = C50878 * C2465;
    const double C134677 = C150541 * C2465;
    const double C8341 = C151795 * C1375;
    const double C24847 = C23123 * C1375;
    const double C52596 = C50872 * C1375;
    const double C59629 = C151790 * C1375;
    const double C75832 = C151795 * C1375;
    const double C7844 = C7833 + C7834;
    const double C60943 = C60940 + C59620;
    const double C75356 = C75345 + C75346;
    const double C8868 = C8861 + C8111;
    const double C61144 = C61141 + C60339;
    const double C76350 = C76343 + C75605;
    const double C8138 = C8130 + C8107;
    const double C61880 = C61877 + C61868;
    const double C75632 = C75624 + C75601;
    const double C10198 = C10194 + C10181;
    const double C67579 = C67578 + C67574;
    const double C77650 = C77646 + C77633;
    const double C18568 = C18566 + C9459;
    const double C68654 = C68653 + C65742;
    const double C86250 = C86244 + C76923;
    const double C18348 = C151795 * C2473;
    const double C34750 = C23123 * C2473;
    const double C104447 = C50872 * C2473;
    const double C118183 = C151790 * C2473;
    const double C137669 = C151795 * C2473;
    const double C17832 = C17822 + C17823;
    const double C120186 = C120183 + C68853;
    const double C137177 = C137171 + C86239;
    const double C150849 = C150848 + C150825;
    const double C150955 = ae * C150949;
    const double C151253 = C150860 * C150949;
    const double C151265 = C150963 * C150949;
    const double C1554 = (C150908 + C150949 * C150976) / C150505;
    const double C151058 = ae * C151052;
    const double C151356 = C150963 * C151052;
    const double C151153 = ae * C151146;
    const double C151341 = C150923 + C151336;
    const double C151203 = C151190 + C151200;
    const double C151284 = ae * C151282;
    const double C9764 = C6092 * C9752;
    const double C25119 = C23131 * C9752;
    const double C52868 = C50880 * C9752;
    const double C59848 = C59433 * C9752;
    const double C77225 = C150531 * C9752;
    const double C1566 =
        (2 * (2 * ae * (C150906 + C150946 * C150976) + C150614 * C151243) +
         C151246 + C151246 +
         C150614 *
             (C151243 + C151247 + C151247 +
              C150614 *
                  (2 * ae *
                       (C150946 + (C150749 + C150813 * C150873) * C150976) +
                   C150614 * (C150947 + (C150820 + (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                       C150621 * C150873) *
                                            C150976)))) /
        C150510;
    const double C9979 = C6092 * C9971;
    const double C27159 = C23131 * C9971;
    const double C54908 = C50880 * C9971;
    const double C66502 = C59433 * C9971;
    const double C77437 = C150531 * C9971;
    const double C151329 = C151316 + C151326;
    const double C151382 = ae * C151380;
    const double C18133 = (3 * C151212 + C150963 * C151380) / C150505;
    const double C151398 = ae * C151397;
    const double C7822 = (5 * C151184 + C150860 * C151397) / C150505;
    const double C8856 = (C150963 * C151397) / C150505;
    const double C8644 =
        (C150963 * C151202 + C151401 + C151401 +
         C150614 *
             (2 * ae * C150963 *
                  (3 * C150946 +
                   C150860 * (2 * C151068 +
                              C150860 * (C150749 + C150813 * C150873))) +
              C150614 * C150963 *
                  (3 * C150947 +
                   C150860 * (2 * C151069 +
                              C150860 * (C150820 + (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                       C150621 * C150873))))) /
        C150510;
    const double C151434 = ae * C151433;
    const double C17811 = (5 * C151310 + C150963 * C151433) / C150505;
    const double C18134 =
        (3 * C151211 + C150963 * C151379 + C151429 + C151429 +
         C150614 *
             (2 * ae *
                  (3 * C151339 +
                   C150963 *
                       (2 * C151143 +
                        C150963 * (C151068 + C150860 * C150813 * C150976))) +
              C150614 * (3 * C151340 +
                         C150963 * (2 * C151144 +
                                    C150963 * (C151069 +
                                               C150860 *
                                                   (C150792 * C150793 +
                                                    C150618 * bs[9] *
                                                        std::pow(C150620, 9)) *
                                                   C150621 * C150976))))) /
        C150510;
    const double C18565 = C6092 * C18555;
    const double C68854 = C59433 * C18555;
    const double C86241 = C150531 * C18555;
    const double C60625 = C60623 + C60618;
    const double C60804 = C60799 + C60787;
    const double C61286 = C61285 + C61282;
    const double C119858 = C119857 + C119854;
    const double C23429 = C23126 * C344;
    const double C23417 = C23126 * C339;
    const double C23405 = C23126 * C343;
    const double C23399 = C23126 * C340;
    const double C23393 = C23126 * C342;
    const double C23381 = C23126 * C341;
    const double C23937 = C23126 * C338;
    const double C24467 = C23126 * C1085;
    const double C24454 = C23126 * C1084;
    const double C24449 = C23126 * C1083;
    const double C24851 = C23126 * C1357;
    const double C24839 = C23126 * C1356;
    const double C25111 = C23126 * C1539;
    const double C25099 = C23126 * C1538;
    const double C25093 = C23126 * C1534;
    const double C25345 = C23126 * C1355;
    const double C25653 = C23126 * C1537;
    const double C25865 = C23126 * C2053;
    const double C26743 = C23126 * C1533;
    const double C27155 = C23126 * C2955;
    const double C32194 = C23126 * C553;
    const double C32184 = C23126 * C548;
    const double C32178 = C23126 * C552;
    const double C32172 = C23126 * C549;
    const double C32170 = C23126 * C551;
    const double C32160 = C23126 * C550;
    const double C32641 = C23126 * C547;
    const double C34753 = C23126 * C2455;
    const double C34743 = C23126 * C2454;
    const double C35264 = C23126 * C2453;
    const double C23426 = C23128 * C345;
    const double C23419 = C23128 * C338;
    const double C23408 = C23128 * C344;
    const double C23401 = C23128 * C339;
    const double C23390 = C23128 * C343;
    const double C23383 = C23128 * C340;
    const double C23939 = C23128 * C346;
    const double C24465 = C23128 * C1086;
    const double C24456 = C23128 * C1085;
    const double C24447 = C23128 * C1084;
    const double C24848 = C23128 * C1358;
    const double C24841 = C23128 * C1355;
    const double C25108 = C23128 * C1540;
    const double C25101 = C23128 * C1537;
    const double C25095 = C23128 * C1533;
    const double C25343 = C23128 * C1354;
    const double C25651 = C23128 * C1536;
    const double C25863 = C23128 * C2054;
    const double C26741 = C23128 * C1532;
    const double C27153 = C23128 * C2956;
    const double C32192 = C23128 * C554;
    const double C32186 = C23128 * C547;
    const double C32180 = C23128 * C553;
    const double C32174 = C23128 * C548;
    const double C32168 = C23128 * C552;
    const double C32162 = C23128 * C549;
    const double C32643 = C23128 * C555;
    const double C34751 = C23128 * C2456;
    const double C34745 = C23128 * C2453;
    const double C35262 = C23128 * C2452;
    const double C51178 = C50875 * C344;
    const double C51166 = C50875 * C339;
    const double C51154 = C50875 * C343;
    const double C51148 = C50875 * C340;
    const double C51142 = C50875 * C342;
    const double C51130 = C50875 * C341;
    const double C51686 = C50875 * C338;
    const double C52216 = C50875 * C1085;
    const double C52203 = C50875 * C1084;
    const double C52198 = C50875 * C1083;
    const double C52600 = C50875 * C1357;
    const double C52588 = C50875 * C1356;
    const double C52860 = C50875 * C1539;
    const double C52848 = C50875 * C1538;
    const double C52842 = C50875 * C1534;
    const double C53094 = C50875 * C1355;
    const double C53402 = C50875 * C1537;
    const double C53614 = C50875 * C2053;
    const double C54492 = C50875 * C1533;
    const double C54904 = C50875 * C2955;
    const double C101891 = C50875 * C553;
    const double C101881 = C50875 * C548;
    const double C101875 = C50875 * C552;
    const double C101869 = C50875 * C549;
    const double C101867 = C50875 * C551;
    const double C101857 = C50875 * C550;
    const double C102338 = C50875 * C547;
    const double C104450 = C50875 * C2455;
    const double C104440 = C50875 * C2454;
    const double C104961 = C50875 * C2453;
    const double C51175 = C50877 * C345;
    const double C51168 = C50877 * C338;
    const double C51157 = C50877 * C344;
    const double C51150 = C50877 * C339;
    const double C51139 = C50877 * C343;
    const double C51132 = C50877 * C340;
    const double C51688 = C50877 * C346;
    const double C52214 = C50877 * C1086;
    const double C52205 = C50877 * C1085;
    const double C52196 = C50877 * C1084;
    const double C52597 = C50877 * C1358;
    const double C52590 = C50877 * C1355;
    const double C52857 = C50877 * C1540;
    const double C52850 = C50877 * C1537;
    const double C52844 = C50877 * C1533;
    const double C53092 = C50877 * C1354;
    const double C53400 = C50877 * C1536;
    const double C53612 = C50877 * C2054;
    const double C54490 = C50877 * C1532;
    const double C54902 = C50877 * C2956;
    const double C101889 = C50877 * C554;
    const double C101883 = C50877 * C547;
    const double C101877 = C50877 * C553;
    const double C101871 = C50877 * C548;
    const double C101865 = C50877 * C552;
    const double C101859 = C50877 * C549;
    const double C102340 = C50877 * C555;
    const double C104448 = C50877 * C2456;
    const double C104442 = C50877 * C2453;
    const double C104959 = C50877 * C2452;
    const double C73909 = C73613 * C1354;
    const double C73902 = C73613 * C344;
    const double C73898 = C73613 * C339;
    const double C73890 = C73613 * C1355;
    const double C73886 = C73613 * C343;
    const double C73882 = C73613 * C340;
    const double C73877 = C73613 * C1356;
    const double C73870 = C73613 * C342;
    const double C73866 = C73613 * C341;
    const double C74426 = C73613 * C345;
    const double C74422 = C73613 * C338;
    const double C74960 = C73613 * C1085;
    const double C74956 = C73613 * C1536;
    const double C74948 = C73613 * C1537;
    const double C74944 = C73613 * C1084;
    const double C74940 = C73613 * C1083;
    const double C74936 = C73613 * C1538;
    const double C75348 = C73613 * C7816;
    const double C75341 = C73613 * C1357;
    const double C75602 = C73613 * C8074;
    const double C75595 = C73613 * C2053;
    const double C75591 = C73613 * C1539;
    const double C75587 = C73613 * C1534;
    const double C75833 = C73613 * C1358;
    const double C76137 = C73613 * C2054;
    const double C76345 = C73613 * C8076;
    const double C77222 = C73613 * C1533;
    const double C77218 = C73613 * C1540;
    const double C77638 = C73613 * C2955;
    const double C77634 = C73613 * C9432;
    const double C82854 = C73613 * C553;
    const double C82850 = C73613 * C1532;
    const double C82844 = C73613 * C548;
    const double C82840 = C73613 * C552;
    const double C82836 = C73613 * C549;
    const double C82834 = C73613 * C551;
    const double C82828 = C73613 * C550;
    const double C83160 = C73613 * C1086;
    const double C83428 = C73613 * C547;
    const double C86236 = C73613 * C2455;
    const double C86232 = C73613 * C9433;
    const double C86226 = C73613 * C2454;
    const double C86649 = C73613 * C2956;
    const double C86918 = C73613 * C2453;
    const double C134675 = C73613 * C2452;
    const double C135073 = C73613 * C554;
    const double C137173 = C73613 * C17805;
    const double C137670 = C73613 * C2456;
    const double C6407 = C6385 + C6386;
    const double C6404 = C6378 + C6110;
    const double C6402 = C6374 + C6108;
    const double C6400 = C6366 + C6367;
    const double C6398 = C6362 + C6101;
    const double C6396 = C6358 + C6103;
    const double C6395 = C6353 + C6354;
    const double C6392 = C6346 + C6098;
    const double C6390 = C6342 + C6096;
    const double C6910 = C6902 + C6113;
    const double C6908 = C6898 + C6115;
    const double C7451 = C7436 + C6695;
    const double C7449 = C7432 + C6693;
    const double C7446 = C7424 + C6684;
    const double C7444 = C7420 + C6682;
    const double C7443 = C7416 + C6671;
    const double C7441 = C7412 + C6669;
    const double C7845 = C7836 + C7837;
    const double C7842 = C7829 + C6356;
    const double C8123 = C8108 + C8109;
    const double C8120 = C8101 + C7418;
    const double C8118 = C8097 + C6678;
    const double C8116 = C8093 + C6676;
    const double C8348 = C8342 + C6373;
    const double C8655 = C8649 + C7429;
    const double C8869 = C8863 + C8112;
    const double C9768 = C9761 + C6689;
    const double C9766 = C9757 + C6687;
    const double C10193 = C10186 + C9453;
    const double C10191 = C10182 + C9451;
    const double C15256 = C15234 + C15235;
    const double C15253 = C15227 + C6698;
    const double C15251 = C15223 + C6697;
    const double C15249 = C15217 + C9974;
    const double C15247 = C15213 + C6691;
    const double C15245 = C15209 + C6680;
    const double C15244 = C15207 + C9455;
    const double C15241 = C15201 + C6674;
    const double C15239 = C15197 + C6673;
    const double C15698 = C15690 + C14756;
    const double C15696 = C15686 + C7114;
    const double C16004 = C15998 + C6700;
    const double C17833 = C17825 + C17826;
    const double C17830 = C17818 + C9456;
    const double C18144 = C18139 + C9976;
    const double C18354 = C18349 + C15222;
    const double C18567 = C18562 + C9458;
    const double C59676 = C59664 * C152049;
    const double C65501 = C59664 * C14751;
    const double C93437 = C59664 * C152184;
    const double C109951 = C59664 * C101415;
    const double C142659 = C59664 * C152250;
    const double C59675 = C59663 * C152049;
    const double C65494 = C59663 * C14751;
    const double C93435 = C59663 * C152184;
    const double C109949 = C59663 * C101415;
    const double C142654 = C59663 * C152250;
    const double C59673 = C59661 * C152049;
    const double C67282 = C59661 * C14751;
    const double C93433 = C59661 * C152184;
    const double C109947 = C59661 * C101415;
    const double C144337 = C59661 * C152250;
    const double C59672 = C59660 * C152049;
    const double C65491 = C59660 * C14751;
    const double C93431 = C59660 * C152184;
    const double C109945 = C59660 * C101415;
    const double C142651 = C59660 * C152250;
    const double C59671 = C59659 * C152049;
    const double C65488 = C59659 * C14751;
    const double C93429 = C59659 * C152184;
    const double C109943 = C59659 * C101415;
    const double C142648 = C59659 * C152250;
    const double C59670 = C59658 * C152049;
    const double C66848 = C59658 * C14751;
    const double C94702 = C59658 * C152184;
    const double C111211 = C59658 * C101415;
    const double C143913 = C59658 * C152250;
    const double C59669 = C59657 * C152049;
    const double C66843 = C59657 * C14751;
    const double C93428 = C59657 * C152184;
    const double C109942 = C59657 * C101415;
    const double C143908 = C59657 * C152250;
    const double C59668 = C59656 * C152049;
    const double C65487 = C59656 * C14751;
    const double C93425 = C59656 * C152184;
    const double C109939 = C59656 * C101415;
    const double C142647 = C59656 * C152250;
    const double C59667 = C59655 * C152049;
    const double C65482 = C59655 * C14751;
    const double C93423 = C59655 * C152184;
    const double C109937 = C59655 * C101415;
    const double C142642 = C59655 * C152250;
    const double C60378 = C60369 * C152049;
    const double C65492 = C60369 * C14752;
    const double C67576 = C60369 * C14751;
    const double C93432 = C60369 * C152113;
    const double C94355 = C60369 * C152184;
    const double C109946 = C60369 * C152113;
    const double C110864 = C60369 * C101415;
    const double C142652 = C60369 * C152251;
    const double C144630 = C60369 * C152250;
    const double C60377 = C60368 * C152049;
    const double C65489 = C60368 * C14752;
    const double C66496 = C60368 * C14751;
    const double C93430 = C60368 * C152113;
    const double C94353 = C60368 * C152184;
    const double C109944 = C60368 * C152113;
    const double C110862 = C60368 * C101415;
    const double C142649 = C60368 * C152251;
    const double C143562 = C60368 * C152250;
    const double C60376 = C60367 * C152049;
    const double C65483 = C60367 * C14752;
    const double C66495 = C60367 * C14751;
    const double C93424 = C60367 * C152113;
    const double C94352 = C60367 * C152184;
    const double C109938 = C60367 * C152113;
    const double C110861 = C60367 * C101415;
    const double C142643 = C60367 * C152251;
    const double C143561 = C60367 * C152250;
    const double C60375 = C60366 * C152049;
    const double C65486 = C60366 * C14752;
    const double C67071 = C60366 * C14751;
    const double C93426 = C60366 * C152113;
    const double C94350 = C60366 * C152184;
    const double C109940 = C60366 * C152113;
    const double C110859 = C60366 * C101415;
    const double C142646 = C60366 * C152251;
    const double C144135 = C60366 * C152250;
    const double C60374 = C60365 * C152049;
    const double C66844 = C60365 * C14752;
    const double C67777 = C60365 * C14751;
    const double C93427 = C60365 * C152113;
    const double C94930 = C60365 * C152184;
    const double C109941 = C60365 * C152113;
    const double C111439 = C60365 * C101415;
    const double C143909 = C60365 * C152251;
    const double C144827 = C60365 * C152250;
    const double C60626 = C60624 * C152049;
    const double C94705 = C60624 * C152184;
    const double C111214 = C60624 * C101415;
    const double C60808 = C60803 * C152049;
    const double C66847 = C60803 * C14752;
    const double C94703 = C60803 * C152113;
    const double C95621 = C60803 * C152184;
    const double C111212 = C60803 * C152113;
    const double C112130 = C60803 * C101415;
    const double C143912 = C60803 * C152251;
    const double C60807 = C60802 * C152049;
    const double C66845 = C60802 * C14753;
    const double C67776 = C60802 * C14752;
    const double C94933 = C60802 * C152184;
    const double C94931 = C60802 * C152113;
    const double C111442 = C60802 * C101415;
    const double C111440 = C60802 * C152113;
    const double C143910 = C60802 * C134230;
    const double C144826 = C60802 * C152251;
    const double C60806 = C60801 * C152049;
    const double C65485 = C60801 * C14753;
    const double C67077 = C60801 * C14751;
    const double C67072 = C60801 * C14752;
    const double C94349 = C60801 * C152113;
    const double C94928 = C60801 * C152184;
    const double C110858 = C60801 * C152113;
    const double C111437 = C60801 * C101415;
    const double C142645 = C60801 * C134230;
    const double C144140 = C60801 * C152250;
    const double C144136 = C60801 * C152251;
    const double C60805 = C60800 * C152049;
    const double C65484 = C60800 * C14753;
    const double C66494 = C60800 * C14752;
    const double C67067 = C60800 * C14751;
    const double C94351 = C60800 * C152113;
    const double C94926 = C60800 * C152184;
    const double C110860 = C60800 * C152113;
    const double C111435 = C60800 * C101415;
    const double C142644 = C60800 * C134230;
    const double C143560 = C60800 * C152251;
    const double C144132 = C60800 * C152250;
    const double C61885 = C61882 * C152049;
    const double C65490 = C61882 * C14753;
    const double C66497 = C61882 * C14752;
    const double C68651 = C61882 * C14751;
    const double C94354 = C61882 * C152113;
    const double C96473 = C61882 * C152184;
    const double C110863 = C61882 * C152113;
    const double C112982 = C61882 * C101415;
    const double C142650 = C61882 * C134230;
    const double C143563 = C61882 * C152251;
    const double C145678 = C61882 * C152250;
    const double C61884 = C61881 * C152049;
    const double C65493 = C61881 * C14753;
    const double C67575 = C61881 * C14752;
    const double C94356 = C61881 * C152113;
    const double C96471 = C61881 * C152184;
    const double C110865 = C61881 * C152113;
    const double C112980 = C61881 * C101415;
    const double C142653 = C61881 * C134230;
    const double C144629 = C61881 * C152251;
    const double C62171 = C62168 * C152049;
    const double C66493 = C62168 * C14753;
    const double C67068 = C62168 * C14752;
    const double C69057 = C62168 * C14751;
    const double C94927 = C62168 * C152113;
    const double C96865 = C62168 * C152184;
    const double C111436 = C62168 * C152113;
    const double C113374 = C62168 * C101415;
    const double C143559 = C62168 * C134230;
    const double C144133 = C62168 * C152251;
    const double C146069 = C62168 * C152250;
    const double C62170 = C62167 * C152049;
    const double C67076 = C62167 * C14752;
    const double C67073 = C62167 * C14753;
    const double C94929 = C62167 * C152113;
    const double C96863 = C62167 * C152184;
    const double C111438 = C62167 * C152113;
    const double C113372 = C62167 * C101415;
    const double C144139 = C62167 * C152251;
    const double C144137 = C62167 * C134230;
    const double C62169 = C62166 * C152049;
    const double C67775 = C62166 * C14753;
    const double C94932 = C62166 * C152113;
    const double C111441 = C62166 * C152113;
    const double C144825 = C62166 * C134230;
    const double C66498 = C65784 * C14753;
    const double C68650 = C65784 * C14752;
    const double C96472 = C65784 * C152113;
    const double C112981 = C65784 * C152113;
    const double C143564 = C65784 * C134230;
    const double C145677 = C65784 * C152251;
    const double C67085 = C67083 * C14753;
    const double C96862 = C67083 * C152113;
    const double C113371 = C67083 * C152113;
    const double C144138 = C67083 * C134230;
    const double C67084 = C67082 * C14753;
    const double C69056 = C67082 * C14752;
    const double C96864 = C67082 * C152113;
    const double C113373 = C67082 * C152113;
    const double C144134 = C67082 * C134230;
    const double C146068 = C67082 * C152251;
    const double C69055 = C68356 * C14753;
    const double C146067 = C68356 * C134230;
    const double C6421 = C6403 + C6109;
    const double C23461 = C23443 + C23139;
    const double C51210 = C51192 + C50888;
    const double C59989 = C59986 + C59449;
    const double C73945 = C73927 + C73633;
    const double C15270 = C15252 + C6696;
    const double C32225 = C32207 + C23721;
    const double C101922 = C101904 + C51470;
    const double C66199 = C66197 + C60128;
    const double C82883 = C82869 + C74220;
    const double C60382 = C60373 * C152049;
    const double C65495 = C60373 * C14752;
    const double C66501 = C60373 * C14751;
    const double C93436 = C60373 * C152113;
    const double C94360 = C60373 * C152184;
    const double C109950 = C60373 * C152113;
    const double C110869 = C60373 * C101415;
    const double C142655 = C60373 * C152251;
    const double C143567 = C60373 * C152250;
    const double C150726 = ae * C150725;
    const double C155 = (4 * C150680 + C150614 * C150725 +
                         (3 * C150665 + C150614 * C150708) * ae) /
                        C150505;
    const double C358 = (C150860 * C150725) / C150505;
    const double C567 = (C150963 * C150725) / C150505;
    const double C6901 = C151795 * C370;
    const double C23422 = C23123 * C370;
    const double C23940 = C152232 * C370;
    const double C51171 = C50872 * C370;
    const double C51689 = C50871 * C370;
    const double C74425 = C151795 * C370;
    const double C7450 = C7434 + C6694;
    const double C40906 = C40902 + C7116;
    const double C24477 = C24458 + C23724;
    const double C52226 = C52207 + C51473;
    const double C65989 = C65984 + C60129;
    const double C74974 = C74958 + C74218;
    const double C15689 = C151795 * C579;
    const double C32189 = C23123 * C579;
    const double C32644 = C152232 * C579;
    const double C83431 = C151795 * C579;
    const double C101886 = C50872 * C579;
    const double C102341 = C50871 * C579;
    const double C6423 = C6405 + C6111;
    const double C23464 = C23446 + C23412;
    const double C51213 = C51195 + C51161;
    const double C59990 = C59987 + C59448;
    const double C73947 = C73929 + C73635;
    const double C15272 = C15254 + C6699;
    const double C32228 = C32210 + C23728;
    const double C101925 = C101907 + C51477;
    const double C66200 = C66198 + C65259;
    const double C82886 = C82872 + C74223;
    const double C6437 = C6419 + C6371;
    const double C24871 = C24865 + C24844;
    const double C52620 = C52614 + C52593;
    const double C59665 = C59653 + C59626;
    const double C73961 = C73943 + C73895;
    const double C7471 = C7459 + C7427;
    const double C25143 = C25134 + C25104;
    const double C52892 = C52883 + C52853;
    const double C60372 = C60363 + C60343;
    const double C74995 = C74983 + C74951;
    const double C65508 = C65506 * C14753;
    const double C66500 = C65506 * C14752;
    const double C94359 = C65506 * C152113;
    const double C110868 = C65506 * C152113;
    const double C142656 = C65506 * C134230;
    const double C143566 = C65506 * C152251;
    const double C15286 = C15268 + C15220;
    const double C34772 = C34766 + C34748;
    const double C104469 = C104463 + C104445;
    const double C65788 = C65777 + C65753;
    const double C86928 = C86926 + C86917;
    const double C59674 = C59662 * C152049;
    const double C95131 = C59662 * C152184;
    const double C111640 = C59662 * C101415;
    const double C60379 = C60370 * C152049;
    const double C67281 = C60370 * C14752;
    const double C93434 = C60370 * C152113;
    const double C95424 = C60370 * C152184;
    const double C109948 = C60370 * C152113;
    const double C111933 = C60370 * C101415;
    const double C144336 = C60370 * C152251;
    const double C150847 = C150810 + C150844;
    const double C150782 = ae * C150780;
    const double C150781 = C150614 * C150780;
    const double C150794 = 5 * C150780;
    const double C150922 = C150860 * C150780;
    const double C151025 = C150963 * C150780;
    const double C359 = (C150725 + C150780 * C150873) / C150505;
    const double C568 = (C150725 + C150780 * C150976) / C150505;
    const double C371 =
        (3 * (C150882 + C150886 + C150886 + C150614 * C150917) + C150913 +
         C150913 +
         C150614 *
             (2 * C150917 + C150914 + C150914 +
              C150614 *
                  (C150907 + C150915 + C150915 +
                   C150614 * (2 * ae * (C150699 + C150749 * C150873) +
                              C150614 * (C150756 + C150820 * C150873))))) /
        C150510;
    const double C1378 = C141 * C1361;
    const double C1721 = C139 * C1361;
    const double C6383 = C6092 * C1361;
    const double C6906 = C6090 * C1361;
    const double C23433 = C23129 * C1361;
    const double C23414 = C23131 * C1361;
    const double C51182 = C50878 * C1361;
    const double C51163 = C50880 * C1361;
    const double C59447 = C59433 * C1361;
    const double C73907 = C150531 * C1361;
    const double C74430 = C150541 * C1361;
    const double C1572 = C141 * C1547;
    const double C1922 = C139 * C1547;
    const double C6692 = C6092 * C1547;
    const double C7118 = C6090 * C1547;
    const double C24470 = C23129 * C1547;
    const double C24460 = C23131 * C1547;
    const double C52219 = C50878 * C1547;
    const double C52209 = C50880 * C1547;
    const double C60130 = C59433 * C1547;
    const double C74216 = C150531 * C1547;
    const double C74642 = C150541 * C1547;
    const double C1099 =
        (3 * (C151123 + C151127 + C151127 + C150614 * C151140) + C151136 +
         C151136 +
         C150614 * (2 * C151140 + C151137 + C151137 +
                    C150614 * (C151130 + C151138 + C151138 +
                               C150614 * (2 * ae * C150963 * C151068 +
                                          C150614 * C150963 * C151069)))) /
        C150510;
    const double C16005 = C16000 + C6701;
    const double C26748 = C26739 + C23725;
    const double C54497 = C54488 + C51474;
    const double C65990 = C65986 + C65258;
    const double C82870 = C82848 + C74225;
    const double C580 =
        (3 * (C150985 + C150989 + C150989 + C150614 * C151020) + C151016 +
         C151016 +
         C150614 *
             (2 * C151020 + C151017 + C151017 +
              C150614 *
                  (C151010 + C151018 + C151018 +
                   C150614 * (2 * ae * (C150699 + C150749 * C150976) +
                              C150614 * (C150756 + C150820 * C150976))))) /
        C150510;
    const double C2476 = C141 * C2459;
    const double C2824 = C139 * C2459;
    const double C15232 = C6092 * C2459;
    const double C15694 = C6090 * C2459;
    const double C26953 = C23131 * C2459;
    const double C32197 = C23129 * C2459;
    const double C54702 = C50880 * C2459;
    const double C66195 = C59433 * C2459;
    const double C82857 = C150531 * C2459;
    const double C101894 = C50878 * C2459;
    const double C135077 = C150541 * C2459;
    const double C6384 = C151795 * C1369;
    const double C25342 = C23123 * C1369;
    const double C53091 = C50872 * C1369;
    const double C59984 = C151790 * C1369;
    const double C73908 = C151795 * C1369;
    const double C8347 = C8340 + C6372;
    const double C24860 = C24845 + C24846;
    const double C52609 = C52594 + C52595;
    const double C59642 = C59627 + C59628;
    const double C75838 = C75831 + C73896;
    const double C8654 = C8647 + C7428;
    const double C25870 = C25861 + C25114;
    const double C53619 = C53610 + C52863;
    const double C60353 = C60340 + C59841;
    const double C76142 = C76135 + C74952;
    const double C9773 = C9769 + C9756;
    const double C25144 = C25135 + C25107;
    const double C52893 = C52884 + C52856;
    const double C65507 = C65505 + C65499;
    const double C77234 = C77230 + C77217;
    const double C18145 = C18143 + C9977;
    const double C27163 = C27160 + C26437;
    const double C54912 = C54909 + C54186;
    const double C65776 = C65765 + C65749;
    const double C86654 = C86652 + C77435;
    const double C15233 = C151795 * C2467;
    const double C35261 = C23123 * C2467;
    const double C104958 = C50872 * C2467;
    const double C118449 = C151790 * C2467;
    const double C134674 = C151795 * C2467;
    const double C18353 = C18347 + C15221;
    const double C34761 = C34749 + C26445;
    const double C104458 = C104446 + C54194;
    const double C118185 = C118182 + C65754;
    const double C137674 = C137668 + C86921;
    const double C7848 = C7844 + C7834;
    const double C60944 = C60943 + C59620;
    const double C75360 = C75356 + C75346;
    const double C8870 = C8868 + C8111;
    const double C61145 = C61144 + C60339;
    const double C76352 = C76350 + C75605;
    const double C61883 = C61880 * C152049;
    const double C67280 = C61880 * C14753;
    const double C95423 = C61880 * C152113;
    const double C111932 = C61880 * C152113;
    const double C144335 = C61880 * C134230;
    const double C67580 = C67579 * C14753;
    const double C96470 = C67579 * C152113;
    const double C112979 = C67579 * C152113;
    const double C144628 = C67579 * C134230;
    const double C18570 = C18568 + C18561;
    const double C68655 = C68654 + C68649;
    const double C86256 = C86250 + C86231;
    const double C17836 = C17832 + C17823;
    const double C120187 = C120186 + C68853;
    const double C137179 = C137177 + C86239;
    const double C150851 = ae * C150849;
    const double C150850 = C150614 * C150849;
    const double C150941 = C150849 * C150873;
    const double C151044 = C150849 * C150976;
    const double C151071 = C150860 * C150849;
    const double C151097 = C150963 * C150849;
    const double C151257 = C151252 + C151253;
    const double C151270 = ae * C151265;
    const double C1579 = C141 * C1554;
    const double C6703 = C6092 * C1554;
    const double C26747 = C23131 * C1554;
    const double C54496 = C50880 * C1554;
    const double C65988 = C59433 * C1554;
    const double C74227 = C150531 * C1554;
    const double C151360 = C151355 + C151356;
    const double C151346 = ae * C151341;
    const double C2962 = (2 * C151131 + C150963 * C151341) / C150505;
    const double C151205 = ae * C151203;
    const double C8336 = (4 * C151168 + C150860 * C151203) / C150505;
    const double C8643 = (C150963 * C151203) / C150505;
    const double C2064 =
        (2 * (2 * ae * C150963 * C151256 + C150614 * C151281) + C151284 +
         C151284 +
         C150614 *
             (C151281 + C151285 + C151285 +
              C150614 *
                  (2 * ae * C150963 *
                       (2 * C151068 + C150860 * (C150749 + C150813 * C150873)) +
                   C150614 * C150963 *
                       (2 * C151069 +
                        C150860 * (C150820 +
                                   (C150792 * C150793 +
                                    C150618 * bs[9] * std::pow(C150620, 9)) *
                                       C150621 * C150873))))) /
        C150510;
    const double C151331 = ae * C151329;
    const double C18343 = (4 * C151294 + C150963 * C151329) / C150505;
    const double C2966 =
        (2 * (2 * ae * (2 * C151129 + C150963 * C151339) + C150614 * C151379) +
         C151382 + C151382 +
         C150614 *
             (C151379 + C151383 + C151383 +
              C150614 *
                  (2 * ae *
                       (2 * C151143 +
                        C150963 * (C151068 + C150860 * C150813 * C150976)) +
                   C150614 *
                       (2 * C151144 +
                        C150963 * (C151069 + C150860 *
                                                 (C150792 * C150793 +
                                                  C150618 * bs[9] *
                                                      std::pow(C150620, 9)) *
                                                 C150621 * C150976))))) /
        C150510;
    const double C18142 = C6092 * C18133;
    const double C26448 = C23131 * C18133;
    const double C54197 = C50880 * C18133;
    const double C65755 = C59433 * C18133;
    const double C86923 = C150531 * C18133;
    const double C8337 =
        (4 * C151167 + C150860 * C151202 + C151398 + C151398 +
         C150614 *
             (2 * ae *
                  (4 * C151256 +
                   C150860 *
                       (3 * C150946 +
                        C150860 * (2 * C151068 +
                                   C150860 * (C150749 + C150813 * C150873)))) +
              C150614 *
                  (4 * C151196 +
                   C150860 *
                       (3 * C150947 +
                        C150860 *
                            (2 * C151069 +
                             C150860 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150873)))))) /
        C150510;
    const double C7840 = C6092 * C7822;
    const double C60942 = C59433 * C7822;
    const double C75352 = C150531 * C7822;
    const double C8866 = C6092 * C8856;
    const double C61143 = C59433 * C8856;
    const double C76348 = C150531 * C8856;
    const double C18344 =
        (4 * C151293 + C150963 * C151328 + C151434 + C151434 +
         C150614 *
             (2 * ae *
                  (4 * C151359 +
                   C150963 *
                       (3 * C151049 +
                        C150963 * (2 * C151094 +
                                   C150963 * (C150749 + C150813 * C150976)))) +
              C150614 *
                  (4 * C151322 +
                   C150963 *
                       (3 * C151050 +
                        C150963 *
                            (2 * C151095 +
                             C150963 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150976)))))) /
        C150510;
    const double C17829 = C6092 * C17811;
    const double C120185 = C59433 * C17811;
    const double C137176 = C150531 * C17811;
    const double C60627 = C60625 * C152049;
    const double C60809 = C60804 * C152049;
    const double C66846 = C60804 * C14753;
    const double C95620 = C60804 * C152113;
    const double C112129 = C60804 * C152113;
    const double C143911 = C60804 * C134230;
    const double C61287 = C61286 * C152049;
    const double C94704 = C61286 * C152113;
    const double C111213 = C61286 * C152113;
    const double C23452 = C23429 + C23430;
    const double C23447 = C23417 + C23148;
    const double C23444 = C23405 + C23406;
    const double C23441 = C23399 + C23141;
    const double C23440 = C23393 + C23394;
    const double C23435 = C23381 + C23136;
    const double C23946 = C23937 + C23153;
    const double C24480 = C24467 + C23733;
    const double C24475 = C24454 + C23722;
    const double C24474 = C24449 + C23709;
    const double C24862 = C24851 + C24852;
    const double C24857 = C24839 + C23396;
    const double C25128 = C25111 + C25112;
    const double C25123 = C25099 + C24451;
    const double C25120 = C25093 + C23716;
    const double C25352 = C25345 + C23416;
    const double C25660 = C25653 + C24462;
    const double C25872 = C25865 + C25116;
    const double C26750 = C26743 + C23727;
    const double C27162 = C27155 + C26439;
    const double C32216 = C32194 + C23737;
    const double C32211 = C32184 + C23736;
    const double C32208 = C32178 + C23730;
    const double C32205 = C32172 + C23719;
    const double C32204 = C32170 + C23713;
    const double C32199 = C32160 + C23712;
    const double C32650 = C32641 + C24149;
    const double C34763 = C34753 + C26443;
    const double C34758 = C34743 + C26442;
    const double C35271 = C35264 + C26951;
    const double C23451 = C23426 + C23427;
    const double C23448 = C23419 + C23149;
    const double C23445 = C23408 + C23409;
    const double C23442 = C23401 + C23140;
    const double C23439 = C23390 + C23391;
    const double C23436 = C23383 + C23137;
    const double C24479 = C24465 + C23732;
    const double C24476 = C24456 + C23723;
    const double C24473 = C24447 + C23708;
    const double C24861 = C24848 + C24849;
    const double C24858 = C24841 + C23397;
    const double C25127 = C25108 + C25109;
    const double C25124 = C25101 + C24452;
    const double C25121 = C25095 + C23717;
    const double C25351 = C25343 + C23415;
    const double C25659 = C25651 + C24461;
    const double C25871 = C25863 + C25115;
    const double C26749 = C26741 + C23726;
    const double C27161 = C27153 + C26438;
    const double C32215 = C32192 + C23738;
    const double C32212 = C32186 + C23735;
    const double C32209 = C32180 + C23729;
    const double C32206 = C32174 + C23720;
    const double C32203 = C32168 + C23714;
    const double C32200 = C32162 + C23711;
    const double C34762 = C34751 + C26444;
    const double C34759 = C34745 + C26441;
    const double C35270 = C35262 + C26952;
    const double C51201 = C51178 + C51179;
    const double C51196 = C51166 + C50897;
    const double C51193 = C51154 + C51155;
    const double C51190 = C51148 + C50890;
    const double C51189 = C51142 + C51143;
    const double C51184 = C51130 + C50885;
    const double C51695 = C51686 + C50902;
    const double C52229 = C52216 + C51482;
    const double C52224 = C52203 + C51471;
    const double C52223 = C52198 + C51458;
    const double C52611 = C52600 + C52601;
    const double C52606 = C52588 + C51145;
    const double C52877 = C52860 + C52861;
    const double C52872 = C52848 + C52200;
    const double C52869 = C52842 + C51465;
    const double C53101 = C53094 + C51165;
    const double C53409 = C53402 + C52211;
    const double C53621 = C53614 + C52865;
    const double C54499 = C54492 + C51476;
    const double C54911 = C54904 + C54188;
    const double C101913 = C101891 + C51486;
    const double C101908 = C101881 + C51485;
    const double C101905 = C101875 + C51479;
    const double C101902 = C101869 + C51468;
    const double C101901 = C101867 + C51462;
    const double C101896 = C101857 + C51461;
    const double C102347 = C102338 + C51898;
    const double C104460 = C104450 + C54192;
    const double C104455 = C104440 + C54191;
    const double C104968 = C104961 + C54700;
    const double C51200 = C51175 + C51176;
    const double C51197 = C51168 + C50898;
    const double C51194 = C51157 + C51158;
    const double C51191 = C51150 + C50889;
    const double C51188 = C51139 + C51140;
    const double C51185 = C51132 + C50886;
    const double C52228 = C52214 + C51481;
    const double C52225 = C52205 + C51472;
    const double C52222 = C52196 + C51457;
    const double C52610 = C52597 + C52598;
    const double C52607 = C52590 + C51146;
    const double C52876 = C52857 + C52858;
    const double C52873 = C52850 + C52201;
    const double C52870 = C52844 + C51466;
    const double C53100 = C53092 + C51164;
    const double C53408 = C53400 + C52210;
    const double C53620 = C53612 + C52864;
    const double C54498 = C54490 + C51475;
    const double C54910 = C54902 + C54187;
    const double C101912 = C101889 + C51487;
    const double C101909 = C101883 + C51484;
    const double C101906 = C101877 + C51478;
    const double C101903 = C101871 + C51469;
    const double C101900 = C101865 + C51463;
    const double C101897 = C101859 + C51460;
    const double C104459 = C104448 + C54193;
    const double C104456 = C104442 + C54190;
    const double C104967 = C104959 + C54701;
    const double C73931 = C73909 + C73910;
    const double C73928 = C73902 + C73634;
    const double C73926 = C73898 + C73632;
    const double C73924 = C73890 + C73891;
    const double C73922 = C73886 + C73625;
    const double C73920 = C73882 + C73627;
    const double C73919 = C73877 + C73878;
    const double C73916 = C73870 + C73622;
    const double C73914 = C73866 + C73620;
    const double C74434 = C74426 + C73637;
    const double C74432 = C74422 + C73639;
    const double C74975 = C74960 + C74219;
    const double C74973 = C74956 + C74217;
    const double C74970 = C74948 + C74208;
    const double C74968 = C74944 + C74206;
    const double C74967 = C74940 + C74195;
    const double C74965 = C74936 + C74193;
    const double C75357 = C75348 + C75349;
    const double C75354 = C75341 + C73880;
    const double C75617 = C75602 + C75603;
    const double C75614 = C75595 + C74942;
    const double C75612 = C75591 + C74202;
    const double C75610 = C75587 + C74200;
    const double C75839 = C75833 + C73897;
    const double C76143 = C76137 + C74953;
    const double C76351 = C76345 + C75606;
    const double C77229 = C77222 + C74213;
    const double C77227 = C77218 + C74211;
    const double C77645 = C77638 + C76917;
    const double C77643 = C77634 + C76915;
    const double C82873 = C82854 + C74222;
    const double C82871 = C82850 + C74224;
    const double C82868 = C82844 + C74221;
    const double C82866 = C82840 + C74215;
    const double C82864 = C82836 + C74204;
    const double C82863 = C82834 + C74198;
    const double C82860 = C82828 + C74197;
    const double C83164 = C83160 + C74640;
    const double C83436 = C83428 + C74638;
    const double C86247 = C86236 + C76920;
    const double C86245 = C86232 + C76922;
    const double C86242 = C86226 + C76919;
    const double C86653 = C86649 + C77434;
    const double C86925 = C86918 + C77432;
    const double C134680 = C134675 + C82856;
    const double C135079 = C135073 + C83432;
    const double C137178 = C137173 + C86238;
    const double C137675 = C137670 + C86920;
    const double C6425 = C6407 + C6386;
    const double C6422 = C6404 + C6110;
    const double C6420 = C6402 + C6108;
    const double C6418 = C6400 + C6367;
    const double C6416 = C6398 + C6101;
    const double C6414 = C6396 + C6103;
    const double C6413 = C6395 + C6354;
    const double C6410 = C6392 + C6098;
    const double C6408 = C6390 + C6096;
    const double C6914 = C6910 + C6113;
    const double C6912 = C6908 + C6115;
    const double C7463 = C7451 + C6695;
    const double C7461 = C7449 + C6693;
    const double C7458 = C7446 + C6684;
    const double C7456 = C7444 + C6682;
    const double C7455 = C7443 + C6671;
    const double C7453 = C7441 + C6669;
    const double C7849 = C7845 + C7837;
    const double C7846 = C7842 + C6356;
    const double C8131 = C8123 + C8109;
    const double C8128 = C8120 + C7418;
    const double C8126 = C8118 + C6678;
    const double C8124 = C8116 + C6676;
    const double C8350 = C8348 + C6373;
    const double C8657 = C8655 + C7429;
    const double C8871 = C8869 + C8112;
    const double C9772 = C9768 + C6689;
    const double C9770 = C9766 + C6687;
    const double C10197 = C10193 + C9453;
    const double C10195 = C10191 + C9451;
    const double C15274 = C15256 + C15235;
    const double C15271 = C15253 + C6698;
    const double C15269 = C15251 + C6697;
    const double C15267 = C15249 + C9974;
    const double C15265 = C15247 + C6691;
    const double C15263 = C15245 + C6680;
    const double C15262 = C15244 + C9455;
    const double C15259 = C15241 + C6674;
    const double C15257 = C15239 + C6673;
    const double C15702 = C15698 + C14756;
    const double C15700 = C15696 + C7114;
    const double C16006 = C16004 + C6700;
    const double C17837 = C17833 + C17826;
    const double C17834 = C17830 + C9456;
    const double C18146 = C18144 + C9976;
    const double C18356 = C18354 + C15222;
    const double C18569 = C18567 + C9458;
    const double C93442 = C93432 + C93431;
    const double C109956 = C109946 + C109945;
    const double C93441 = C93425 + C93426;
    const double C109955 = C109939 + C109940;
    const double C94701 = C93427 + C93428;
    const double C111210 = C109941 + C109942;
    const double C94706 = C94702 + C94703;
    const double C111215 = C111211 + C111212;
    const double C95619 = C94930 + C94931;
    const double C112128 = C111439 + C111440;
    const double C94925 = C94349 + C94350;
    const double C111434 = C110858 + C110859;
    const double C95422 = C94355 + C94356;
    const double C111931 = C110864 + C110865;
    const double C94934 = C94928 + C94929;
    const double C111443 = C111437 + C111438;
    const double C6439 = C6421 + C6377;
    const double C23479 = C23461 + C23404;
    const double C51228 = C51210 + C51153;
    const double C59992 = C59989 + C59980;
    const double C73963 = C73945 + C73901;
    const double C15288 = C15270 + C15226;
    const double C32243 = C32225 + C32177;
    const double C101940 = C101922 + C101874;
    const double C66201 = C66199 + C66192;
    const double C82897 = C82883 + C82847;
    const double C163 =
        (4 * (2 * C150674 + C150678 + C150678 + C150614 * C150717) + C150726 +
         C150726 +
         C150614 *
             (3 * C150717 + C150723 + C150723 +
              C150614 * (2 * C150713 + C150719 + C150719 +
                         C150614 * (C150706 + C150712 + C150712 +
                                    C150614 * (2 * ae * C150699 +
                                               C150614 *
                                                   (C150686 * C150687 +
                                                    C150618 * bs[7] *
                                                        std::pow(C150620, 7)) *
                                                   C150621))))) /
        C150510;
    const double C184 = C137 * C155;
    const double C180 = C139 * C155;
    const double C178 = C141 * C155;
    const double C6119 = C6092 * C155;
    const double C23158 = C23129 * C155;
    const double C23154 = C23131 * C155;
    const double C50907 = C50878 * C155;
    const double C50903 = C50880 * C155;
    const double C73643 = C150531 * C155;
    const double C392 = C139 * C358;
    const double C386 = C141 * C358;
    const double C748 = C137 * C358;
    const double C6120 = C6090 * C358;
    const double C6114 = C6092 * C358;
    const double C23160 = C23127 * C358;
    const double C23152 = C23129 * C358;
    const double C23150 = C23131 * C358;
    const double C50909 = C50876 * C358;
    const double C50901 = C50878 * C358;
    const double C50899 = C50880 * C358;
    const double C59452 = C59433 * C358;
    const double C73644 = C150541 * C358;
    const double C73638 = C150531 * C358;
    const double C601 = C139 * C567;
    const double C595 = C141 * C567;
    const double C887 = C137 * C567;
    const double C7115 = C6092 * C567;
    const double C14757 = C6090 * C567;
    const double C23734 = C23131 * C567;
    const double C24150 = C23129 * C567;
    const double C31721 = C23127 * C567;
    const double C51483 = C50880 * C567;
    const double C51899 = C50878 * C567;
    const double C65260 = C59433 * C567;
    const double C74639 = C150531 * C567;
    const double C82244 = C150541 * C567;
    const double C101418 = C50876 * C567;
    const double C7462 = C7450 + C6694;
    const double C40908 = C40906 + C7116;
    const double C24486 = C24477 + C23724;
    const double C52235 = C52226 + C51473;
    const double C65991 = C65989 + C60129;
    const double C74986 = C74974 + C74218;
    const double C6441 = C6423 + C6381;
    const double C23482 = C23464 + C23413;
    const double C51231 = C51213 + C51162;
    const double C59993 = C59990 + C59982;
    const double C73965 = C73947 + C73905;
    const double C15290 = C15272 + C15230;
    const double C32246 = C32228 + C32183;
    const double C101943 = C101925 + C101880;
    const double C66202 = C66200 + C66194;
    const double C82900 = C82886 + C82853;
    const double C59677 = C59665 * C152049;
    const double C93440 = C59665 * C152184;
    const double C109954 = C59665 * C101415;
    const double C60381 = C60372 * C152049;
    const double C65500 = C60372 * C14752;
    const double C93438 = C60372 * C152113;
    const double C94358 = C60372 * C152184;
    const double C109952 = C60372 * C152113;
    const double C110867 = C60372 * C101415;
    const double C142658 = C60372 * C152251;
    const double C95129 = C93433 + C93434;
    const double C111638 = C109947 + C109948;
    const double C150783 = C150734 + C150781;
    const double C150929 = ae * C150922;
    const double C1093 = (C150963 * C150922) / C150505;
    const double C151032 = ae * C151025;
    const double C397 = C139 * C359;
    const double C387 = C141 * C359;
    const double C6122 = C6090 * C359;
    const double C6112 = C6092 * C359;
    const double C23424 = C23131 * C359;
    const double C23944 = C23129 * C359;
    const double C51173 = C50880 * C359;
    const double C51693 = C50878 * C359;
    const double C59453 = C59433 * C359;
    const double C73646 = C150541 * C359;
    const double C73636 = C150531 * C359;
    const double C606 = C139 * C568;
    const double C596 = C141 * C568;
    const double C14759 = C6090 * C568;
    const double C14755 = C6092 * C568;
    const double C23739 = C23131 * C568;
    const double C32648 = C23129 * C568;
    const double C51488 = C50880 * C568;
    const double C65261 = C59433 * C568;
    const double C83433 = C150531 * C568;
    const double C102345 = C50878 * C568;
    const double C134232 = C150541 * C568;
    const double C6905 = C151795 * C371;
    const double C23425 = C23123 * C371;
    const double C51174 = C50872 * C371;
    const double C74429 = C151795 * C371;
    const double C6406 = C6382 + C6383;
    const double C25350 = C25341 + C23414;
    const double C53099 = C53090 + C51163;
    const double C59988 = C59983 + C59447;
    const double C73930 = C73906 + C73907;
    const double C7448 = C7430 + C6692;
    const double C25658 = C25649 + C24460;
    const double C53407 = C53398 + C52209;
    const double C93861 = C93859 + C60130;
    const double C74972 = C74954 + C74216;
    const double C24464 = C23123 * C1099;
    const double C40905 = C151795 * C1099;
    const double C52213 = C50872 * C1099;
    const double C83163 = C151795 * C1099;
    const double C16007 = C16005 + C6701;
    const double C26751 = C26748 + C23725;
    const double C54500 = C54497 + C51474;
    const double C65992 = C65990 + C65258;
    const double C82884 = C82870 + C74225;
    const double C15693 = C151795 * C580;
    const double C32191 = C23123 * C580;
    const double C101888 = C50872 * C580;
    const double C135076 = C151795 * C580;
    const double C15255 = C15231 + C15232;
    const double C35269 = C35260 + C26953;
    const double C104966 = C104957 + C54702;
    const double C118451 = C118448 + C66195;
    const double C134679 = C134673 + C82857;
    const double C8349 = C8347 + C6372;
    const double C24866 = C24860 + C24846;
    const double C52615 = C52609 + C52595;
    const double C59654 = C59642 + C59628;
    const double C75840 = C75838 + C73896;
    const double C8656 = C8654 + C7428;
    const double C25873 = C25870 + C25114;
    const double C53622 = C53619 + C52863;
    const double C60362 = C60353 + C59841;
    const double C76144 = C76142 + C74952;
    const double C65509 = C65507 * C14753;
    const double C94357 = C65507 * C152113;
    const double C110866 = C65507 * C152113;
    const double C142657 = C65507 * C134230;
    const double C18147 = C18145 + C18138;
    const double C27166 = C27163 + C27152;
    const double C54915 = C54912 + C54901;
    const double C65787 = C65776 + C65750;
    const double C86656 = C86654 + C86648;
    const double C18355 = C18353 + C15221;
    const double C34767 = C34761 + C26445;
    const double C104464 = C104458 + C54194;
    const double C118186 = C118185 + C65754;
    const double C137676 = C137674 + C86921;
    const double C7852 = C7848 + C7835;
    const double C60945 = C60944 + C60941;
    const double C75364 = C75360 + C75347;
    const double C8872 = C8870 + C8862;
    const double C61146 = C61145 + C61142;
    const double C76354 = C76352 + C76344;
    const double C68656 = C68655 * C14753;
    const double C145676 = C68655 * C134230;
    const double C17840 = C17836 + C17824;
    const double C120188 = C120187 + C120184;
    const double C137181 = C137179 + C137172;
    const double C150852 = C150795 + C150850;
    const double C150948 = C150780 + C150941;
    const double C151051 = C150780 + C151044;
    const double C151080 = ae * C151071;
    const double C151145 = C150963 * C151071;
    const double C2678 = (C150922 + C151071 * C150976) / C150505;
    const double C151106 = ae * C151097;
    const double C151259 = ae * C151257;
    const double C1368 = (3 * C150908 + C150860 * C151257) / C150505;
    const double C2060 = (C150963 * C151257) / C150505;
    const double C1918 =
        (3 * (C151223 + C151227 + C151227 + C150614 * C151274) + C151270 +
         C151270 +
         C150614 *
             (2 * C151274 + C151271 + C151271 +
              C150614 *
                  (C151264 + C151272 + C151272 +
                   C150614 * (2 * ae * C150963 * (C150749 + C150813 * C150873) +
                              C150614 * C150963 *
                                  (C150820 +
                                   (C150792 * C150793 +
                                    C150618 * bs[9] * std::pow(C150620, 9)) *
                                       C150621 * C150873))))) /
        C150510;
    const double C151362 = ae * C151360;
    const double C2466 = (3 * C151011 + C150963 * C151360) / C150505;
    const double C2679 =
        (3 * (C151211 + C151215 + C151215 + C150614 * C151350) + C151346 +
         C151346 +
         C150614 *
             (2 * C151350 + C151347 + C151347 +
              C150614 *
                  (C151340 + C151348 + C151348 +
                   C150614 *
                       (2 * ae * (C151068 + C150860 * C150813 * C150976) +
                        C150614 * (C151069 + C150860 *
                                                 (C150792 * C150793 +
                                                  C150618 * bs[9] *
                                                      std::pow(C150620, 9)) *
                                                 C150621 * C150976))))) /
        C150510;
    const double C2971 = C141 * C2962;
    const double C16003 = C6092 * C2962;
    const double C26956 = C23131 * C2962;
    const double C54705 = C50880 * C2962;
    const double C66196 = C59433 * C2962;
    const double C82859 = C150531 * C2962;
    const double C1376 =
        (2 * (2 * ae *
                  (3 * C150906 + C150860 * (2 * C150920 + C150860 * C150946)) +
              C150614 * C151202) +
         C151205 + C151205 +
         C150614 *
             (C151202 + C151206 + C151206 +
              C150614 *
                  (2 * ae *
                       (3 * C150946 +
                        C150860 * (2 * C151068 +
                                   C150860 * (C150749 + C150813 * C150873))) +
                   C150614 *
                       (3 * C150947 +
                        C150860 *
                            (2 * C151069 +
                             C150860 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150873)))))) /
        C150510;
    const double C8345 = C6092 * C8336;
    const double C24856 = C23131 * C8336;
    const double C52605 = C50880 * C8336;
    const double C59630 = C59433 * C8336;
    const double C75836 = C150531 * C8336;
    const double C8652 = C6092 * C8643;
    const double C25869 = C23131 * C8643;
    const double C53618 = C50880 * C8643;
    const double C60346 = C59433 * C8643;
    const double C76140 = C150531 * C8643;
    const double C2474 =
        (2 * (2 * ae *
                  (3 * C151009 + C150963 * (2 * C151023 + C150963 * C151049)) +
              C150614 * C151328) +
         C151331 + C151331 +
         C150614 *
             (C151328 + C151332 + C151332 +
              C150614 *
                  (2 * ae *
                       (3 * C151049 +
                        C150963 * (2 * C151094 +
                                   C150963 * (C150749 + C150813 * C150976))) +
                   C150614 *
                       (3 * C151050 +
                        C150963 *
                            (2 * C151095 +
                             C150963 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150976)))))) /
        C150510;
    const double C18352 = C6092 * C18343;
    const double C34757 = C23131 * C18343;
    const double C104454 = C50880 * C18343;
    const double C118184 = C59433 * C18343;
    const double C137673 = C150531 * C18343;
    const double C23470 = C23452 + C23430;
    const double C23465 = C23447 + C23148;
    const double C23462 = C23444 + C23406;
    const double C23459 = C23441 + C23141;
    const double C23458 = C23440 + C23394;
    const double C23453 = C23435 + C23136;
    const double C23949 = C23946 + C23153;
    const double C24489 = C24480 + C23733;
    const double C24484 = C24475 + C23722;
    const double C24483 = C24474 + C23709;
    const double C24868 = C24862 + C24852;
    const double C24863 = C24857 + C23396;
    const double C25137 = C25128 + C25112;
    const double C25132 = C25123 + C24451;
    const double C25129 = C25120 + C23716;
    const double C25355 = C25352 + C23416;
    const double C25663 = C25660 + C24462;
    const double C25875 = C25872 + C25116;
    const double C26753 = C26750 + C23727;
    const double C27165 = C27162 + C26439;
    const double C32234 = C32216 + C23737;
    const double C32229 = C32211 + C23736;
    const double C32226 = C32208 + C23730;
    const double C32223 = C32205 + C23719;
    const double C32222 = C32204 + C23713;
    const double C32217 = C32199 + C23712;
    const double C32653 = C32650 + C24149;
    const double C34769 = C34763 + C26443;
    const double C34764 = C34758 + C26442;
    const double C35274 = C35271 + C26951;
    const double C23469 = C23451 + C23427;
    const double C23466 = C23448 + C23149;
    const double C23463 = C23445 + C23409;
    const double C23460 = C23442 + C23140;
    const double C23457 = C23439 + C23391;
    const double C23454 = C23436 + C23137;
    const double C24488 = C24479 + C23732;
    const double C24485 = C24476 + C23723;
    const double C24482 = C24473 + C23708;
    const double C24867 = C24861 + C24849;
    const double C24864 = C24858 + C23397;
    const double C25136 = C25127 + C25109;
    const double C25133 = C25124 + C24452;
    const double C25130 = C25121 + C23717;
    const double C25354 = C25351 + C23415;
    const double C25662 = C25659 + C24461;
    const double C25874 = C25871 + C25115;
    const double C26752 = C26749 + C23726;
    const double C27164 = C27161 + C26438;
    const double C32233 = C32215 + C23738;
    const double C32230 = C32212 + C23735;
    const double C32227 = C32209 + C23729;
    const double C32224 = C32206 + C23720;
    const double C32221 = C32203 + C23714;
    const double C32218 = C32200 + C23711;
    const double C34768 = C34762 + C26444;
    const double C34765 = C34759 + C26441;
    const double C35273 = C35270 + C26952;
    const double C51219 = C51201 + C51179;
    const double C51214 = C51196 + C50897;
    const double C51211 = C51193 + C51155;
    const double C51208 = C51190 + C50890;
    const double C51207 = C51189 + C51143;
    const double C51202 = C51184 + C50885;
    const double C51698 = C51695 + C50902;
    const double C52238 = C52229 + C51482;
    const double C52233 = C52224 + C51471;
    const double C52232 = C52223 + C51458;
    const double C52617 = C52611 + C52601;
    const double C52612 = C52606 + C51145;
    const double C52886 = C52877 + C52861;
    const double C52881 = C52872 + C52200;
    const double C52878 = C52869 + C51465;
    const double C53104 = C53101 + C51165;
    const double C53412 = C53409 + C52211;
    const double C53624 = C53621 + C52865;
    const double C54502 = C54499 + C51476;
    const double C54914 = C54911 + C54188;
    const double C101931 = C101913 + C51486;
    const double C101926 = C101908 + C51485;
    const double C101923 = C101905 + C51479;
    const double C101920 = C101902 + C51468;
    const double C101919 = C101901 + C51462;
    const double C101914 = C101896 + C51461;
    const double C102350 = C102347 + C51898;
    const double C104466 = C104460 + C54192;
    const double C104461 = C104455 + C54191;
    const double C104971 = C104968 + C54700;
    const double C51218 = C51200 + C51176;
    const double C51215 = C51197 + C50898;
    const double C51212 = C51194 + C51158;
    const double C51209 = C51191 + C50889;
    const double C51206 = C51188 + C51140;
    const double C51203 = C51185 + C50886;
    const double C52237 = C52228 + C51481;
    const double C52234 = C52225 + C51472;
    const double C52231 = C52222 + C51457;
    const double C52616 = C52610 + C52598;
    const double C52613 = C52607 + C51146;
    const double C52885 = C52876 + C52858;
    const double C52882 = C52873 + C52201;
    const double C52879 = C52870 + C51466;
    const double C53103 = C53100 + C51164;
    const double C53411 = C53408 + C52210;
    const double C53623 = C53620 + C52864;
    const double C54501 = C54498 + C51475;
    const double C54913 = C54910 + C54187;
    const double C101930 = C101912 + C51487;
    const double C101927 = C101909 + C51484;
    const double C101924 = C101906 + C51478;
    const double C101921 = C101903 + C51469;
    const double C101918 = C101900 + C51463;
    const double C101915 = C101897 + C51460;
    const double C104465 = C104459 + C54193;
    const double C104462 = C104456 + C54190;
    const double C104970 = C104967 + C54701;
    const double C73949 = C73931 + C73910;
    const double C73946 = C73928 + C73634;
    const double C73944 = C73926 + C73632;
    const double C73942 = C73924 + C73891;
    const double C73940 = C73922 + C73625;
    const double C73938 = C73920 + C73627;
    const double C73937 = C73919 + C73878;
    const double C73934 = C73916 + C73622;
    const double C73932 = C73914 + C73620;
    const double C74438 = C74434 + C73637;
    const double C74436 = C74432 + C73639;
    const double C74987 = C74975 + C74219;
    const double C74985 = C74973 + C74217;
    const double C74982 = C74970 + C74208;
    const double C74980 = C74968 + C74206;
    const double C74979 = C74967 + C74195;
    const double C74977 = C74965 + C74193;
    const double C75361 = C75357 + C75349;
    const double C75358 = C75354 + C73880;
    const double C75625 = C75617 + C75603;
    const double C75622 = C75614 + C74942;
    const double C75620 = C75612 + C74202;
    const double C75618 = C75610 + C74200;
    const double C75841 = C75839 + C73897;
    const double C76145 = C76143 + C74953;
    const double C76353 = C76351 + C75606;
    const double C77233 = C77229 + C74213;
    const double C77231 = C77227 + C74211;
    const double C77649 = C77645 + C76917;
    const double C77647 = C77643 + C76915;
    const double C82887 = C82873 + C74222;
    const double C82885 = C82871 + C74224;
    const double C82882 = C82868 + C74221;
    const double C82880 = C82866 + C74215;
    const double C82878 = C82864 + C74204;
    const double C82877 = C82863 + C74198;
    const double C82874 = C82860 + C74197;
    const double C83166 = C83164 + C74640;
    const double C83438 = C83436 + C74638;
    const double C86253 = C86247 + C76920;
    const double C86251 = C86245 + C76922;
    const double C86248 = C86242 + C76919;
    const double C86655 = C86653 + C77434;
    const double C86927 = C86925 + C77432;
    const double C134682 = C134680 + C82856;
    const double C135081 = C135079 + C83432;
    const double C137180 = C137178 + C86238;
    const double C137677 = C137675 + C86920;
    const double C6443 = C6425 + C6387;
    const double C6440 = C6422 + C6379;
    const double C6438 = C6420 + C6375;
    const double C6436 = C6418 + C6368;
    const double C6434 = C6416 + C6363;
    const double C6432 = C6414 + C6359;
    const double C6431 = C6413 + C6355;
    const double C6428 = C6410 + C6347;
    const double C6426 = C6408 + C6343;
    const double C6918 = C6914 + C6903;
    const double C6916 = C6912 + C6899;
    const double C7475 = C7463 + C7437;
    const double C7473 = C7461 + C7433;
    const double C7470 = C7458 + C7425;
    const double C7468 = C7456 + C7421;
    const double C7467 = C7455 + C7417;
    const double C7465 = C7453 + C7413;
    const double C7853 = C7849 + C7838;
    const double C7850 = C7846 + C7830;
    const double C8139 = C8131 + C8110;
    const double C8136 = C8128 + C8102;
    const double C8134 = C8126 + C8098;
    const double C8132 = C8124 + C8094;
    const double C8352 = C8350 + C8343;
    const double C8659 = C8657 + C8650;
    const double C8873 = C8871 + C8864;
    const double C9776 = C9772 + C9762;
    const double C9774 = C9770 + C9758;
    const double C10201 = C10197 + C10187;
    const double C10199 = C10195 + C10183;
    const double C15292 = C15274 + C15236;
    const double C15289 = C15271 + C15228;
    const double C15287 = C15269 + C15224;
    const double C15285 = C15267 + C15218;
    const double C15283 = C15265 + C15214;
    const double C15281 = C15263 + C15210;
    const double C15280 = C15262 + C15208;
    const double C15277 = C15259 + C15202;
    const double C15275 = C15257 + C15198;
    const double C15706 = C15702 + C15691;
    const double C15704 = C15700 + C15687;
    const double C16008 = C16006 + C15999;
    const double C17841 = C17837 + C17827;
    const double C17838 = C17834 + C17819;
    const double C18148 = C18146 + C18140;
    const double C18358 = C18356 + C18350;
    const double C18571 = C18569 + C18563;
    const double C59995 = C59992 * C152049;
    const double C65983 = C59992 * C14751;
    const double C93856 = C59992 * C152184;
    const double C110370 = C59992 * C101415;
    const double C143072 = C59992 * C152250;
    const double C6909 = C6900 + C6114;
    const double C23947 = C23939 + C23152;
    const double C23449 = C23421 + C23150;
    const double C51696 = C51688 + C50901;
    const double C51198 = C51170 + C50899;
    const double C74433 = C74424 + C73638;
    const double C15697 = C15688 + C7115;
    const double C32213 = C32188 + C23734;
    const double C32651 = C32643 + C24150;
    const double C101910 = C101885 + C51483;
    const double C102348 = C102340 + C51899;
    const double C83437 = C83430 + C74639;
    const double C7474 = C7462 + C7435;
    const double C40910 = C40908 + C40903;
    const double C24495 = C24486 + C24459;
    const double C52244 = C52235 + C52208;
    const double C65993 = C65991 + C65985;
    const double C74998 = C74986 + C74959;
    const double C59996 = C59993 * C152049;
    const double C93858 = C59993 * C152184;
    const double C110372 = C59993 * C101415;
    const double C93443 = C93437 + C93438;
    const double C109957 = C109951 + C109952;
    const double C150784 = C150783 + C150769;
    const double C372 =
        (4 * (2 * C150899 + C150896 + C150896 + C150614 * C150936) + C150929 +
         C150929 +
         C150614 *
             (3 * C150936 + C150930 + C150930 +
              C150614 *
                  (2 * C150934 + C150931 + C150931 +
                   C150614 * (C150921 + C150932 + C150932 +
                              C150614 * (2 * ae * C150860 * C150749 +
                                         C150614 * C150860 * C150820))))) /
        C150510;
    const double C1112 = C139 * C1093;
    const double C1106 = C141 * C1093;
    const double C7117 = C6092 * C1093;
    const double C23731 = C23131 * C1093;
    const double C24153 = C23129 * C1093;
    const double C40062 = C6090 * C1093;
    const double C51480 = C50880 * C1093;
    const double C51902 = C50878 * C1093;
    const double C65262 = C59433 * C1093;
    const double C74641 = C150531 * C1093;
    const double C82246 = C150541 * C1093;
    const double C581 =
        (4 * (2 * C151002 + C150999 + C150999 + C150614 * C151039) + C151032 +
         C151032 +
         C150614 *
             (3 * C151039 + C151033 + C151033 +
              C150614 *
                  (2 * C151037 + C151034 + C151034 +
                   C150614 * (C151024 + C151035 + C151035 +
                              C150614 * (2 * ae * C150963 * C150749 +
                                         C150614 * C150963 * C150820))))) /
        C150510;
    const double C6911 = C6904 + C6112;
    const double C23450 = C23423 + C23424;
    const double C51199 = C51172 + C51173;
    const double C74435 = C74428 + C73636;
    const double C15699 = C15692 + C14755;
    const double C32214 = C32190 + C23739;
    const double C101911 = C101887 + C51488;
    const double C135080 = C135075 + C83433;
    const double C6424 = C6406 + C6383;
    const double C25353 = C25350 + C23414;
    const double C53102 = C53099 + C51163;
    const double C59991 = C59988 + C59447;
    const double C73948 = C73930 + C73907;
    const double C7460 = C7448 + C6692;
    const double C25661 = C25658 + C24460;
    const double C53410 = C53407 + C52209;
    const double C93862 = C93861 + C60130;
    const double C74984 = C74972 + C74216;
    const double C16009 = C16007 + C16001;
    const double C26754 = C26751 + C26740;
    const double C54503 = C54500 + C54489;
    const double C65994 = C65992 + C65987;
    const double C82898 = C82884 + C82849;
    const double C15273 = C15255 + C15232;
    const double C35272 = C35269 + C26953;
    const double C104969 = C104966 + C54702;
    const double C118452 = C118451 + C66195;
    const double C134681 = C134679 + C82857;
    const double C8351 = C8349 + C8341;
    const double C24872 = C24866 + C24847;
    const double C52621 = C52615 + C52596;
    const double C59666 = C59654 + C59629;
    const double C75842 = C75840 + C75832;
    const double C8658 = C8656 + C8648;
    const double C25876 = C25873 + C25862;
    const double C53625 = C53622 + C53611;
    const double C60371 = C60362 + C60341;
    const double C76146 = C76144 + C76136;
    const double C66499 = C65787 * C14753;
    const double C143565 = C65787 * C134230;
    const double C18357 = C18355 + C18348;
    const double C34773 = C34767 + C34750;
    const double C104470 = C104464 + C104447;
    const double C118187 = C118186 + C118183;
    const double C137678 = C137676 + C137669;
    const double C60946 = C60945 * C152049;
    const double C61147 = C61146 * C152049;
    const double C95130 = C61146 * C152113;
    const double C111639 = C61146 * C152113;
    const double C150853 = C150852 + C150833;
    const double C150954 = ae * C150948;
    const double C1716 = (2 * C150922 + C150860 * C150948) / C150505;
    const double C1917 = (C150963 * C150948) / C150505;
    const double C151057 = ae * C151051;
    const double C2819 = (2 * C151025 + C150963 * C151051) / C150505;
    const double C151152 = ae * C151145;
    const double C2684 = C141 * C2678;
    const double C15491 = C6092 * C2678;
    const double C23742 = C23131 * C2678;
    const double C51491 = C50880 * C2678;
    const double C65263 = C59433 * C2678;
    const double C83435 = C150531 * C2678;
    const double C1717 =
        (3 * (C151167 + C151171 + C151171 + C150614 * C151261) + C151259 +
         C151259 +
         C150614 *
             (2 * C151261 + C151254 + C151254 +
              C150614 *
                  (C151196 + C151255 + C151255 +
                   C150614 *
                       (2 * ae *
                            (2 * C151068 +
                             C150860 * (C150749 + C150813 * C150873)) +
                        C150614 *
                            (2 * C151069 +
                             C150860 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150873)))))) /
        C150510;
    const double C1385 = C141 * C1368;
    const double C6389 = C6092 * C1368;
    const double C25349 = C23131 * C1368;
    const double C53098 = C50880 * C1368;
    const double C59985 = C59433 * C1368;
    const double C73913 = C150531 * C1368;
    const double C2069 = C141 * C2060;
    const double C7439 = C6092 * C2060;
    const double C25657 = C23131 * C2060;
    const double C53406 = C50880 * C2060;
    const double C60131 = C59433 * C2060;
    const double C74963 = C150531 * C2060;
    const double C2820 =
        (3 * (C151293 + C151297 + C151297 + C150614 * C151364) + C151362 +
         C151362 +
         C150614 *
             (2 * C151364 + C151357 + C151357 +
              C150614 *
                  (C151322 + C151358 + C151358 +
                   C150614 *
                       (2 * ae *
                            (2 * C151094 +
                             C150963 * (C150749 + C150813 * C150976)) +
                        C150614 *
                            (2 * C151095 +
                             C150963 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150976)))))) /
        C150510;
    const double C2483 = C141 * C2466;
    const double C15238 = C6092 * C2466;
    const double C35268 = C23131 * C2466;
    const double C104965 = C50880 * C2466;
    const double C118450 = C59433 * C2466;
    const double C134678 = C150531 * C2466;
    const double C23488 = C23470 + C23431;
    const double C23483 = C23465 + C23418;
    const double C23480 = C23462 + C23407;
    const double C23477 = C23459 + C23400;
    const double C23476 = C23458 + C23395;
    const double C23471 = C23453 + C23382;
    const double C23952 = C23949 + C23938;
    const double C24498 = C24489 + C24468;
    const double C24493 = C24484 + C24455;
    const double C24492 = C24483 + C24450;
    const double C24874 = C24868 + C24853;
    const double C24869 = C24863 + C24840;
    const double C25146 = C25137 + C25113;
    const double C25141 = C25132 + C25100;
    const double C25138 = C25129 + C25094;
    const double C25358 = C25355 + C25346;
    const double C25666 = C25663 + C25654;
    const double C25878 = C25875 + C25866;
    const double C26756 = C26753 + C26744;
    const double C27168 = C27165 + C27156;
    const double C32252 = C32234 + C32195;
    const double C32247 = C32229 + C32185;
    const double C32244 = C32226 + C32179;
    const double C32241 = C32223 + C32173;
    const double C32240 = C32222 + C32171;
    const double C32235 = C32217 + C32161;
    const double C32656 = C32653 + C32642;
    const double C34775 = C34769 + C34754;
    const double C34770 = C34764 + C34744;
    const double C35277 = C35274 + C35265;
    const double C23487 = C23469 + C23428;
    const double C23484 = C23466 + C23420;
    const double C23481 = C23463 + C23410;
    const double C23478 = C23460 + C23402;
    const double C23475 = C23457 + C23392;
    const double C23472 = C23454 + C23384;
    const double C24497 = C24488 + C24466;
    const double C24494 = C24485 + C24457;
    const double C24491 = C24482 + C24448;
    const double C24873 = C24867 + C24850;
    const double C24870 = C24864 + C24842;
    const double C25145 = C25136 + C25110;
    const double C25142 = C25133 + C25102;
    const double C25139 = C25130 + C25096;
    const double C25357 = C25354 + C25344;
    const double C25665 = C25662 + C25652;
    const double C25877 = C25874 + C25864;
    const double C26755 = C26752 + C26742;
    const double C27167 = C27164 + C27154;
    const double C32251 = C32233 + C32193;
    const double C32248 = C32230 + C32187;
    const double C32245 = C32227 + C32181;
    const double C32242 = C32224 + C32175;
    const double C32239 = C32221 + C32169;
    const double C32236 = C32218 + C32163;
    const double C34774 = C34768 + C34752;
    const double C34771 = C34765 + C34746;
    const double C35276 = C35273 + C35263;
    const double C51237 = C51219 + C51180;
    const double C51232 = C51214 + C51167;
    const double C51229 = C51211 + C51156;
    const double C51226 = C51208 + C51149;
    const double C51225 = C51207 + C51144;
    const double C51220 = C51202 + C51131;
    const double C51701 = C51698 + C51687;
    const double C52247 = C52238 + C52217;
    const double C52242 = C52233 + C52204;
    const double C52241 = C52232 + C52199;
    const double C52623 = C52617 + C52602;
    const double C52618 = C52612 + C52589;
    const double C52895 = C52886 + C52862;
    const double C52890 = C52881 + C52849;
    const double C52887 = C52878 + C52843;
    const double C53107 = C53104 + C53095;
    const double C53415 = C53412 + C53403;
    const double C53627 = C53624 + C53615;
    const double C54505 = C54502 + C54493;
    const double C54917 = C54914 + C54905;
    const double C101949 = C101931 + C101892;
    const double C101944 = C101926 + C101882;
    const double C101941 = C101923 + C101876;
    const double C101938 = C101920 + C101870;
    const double C101937 = C101919 + C101868;
    const double C101932 = C101914 + C101858;
    const double C102353 = C102350 + C102339;
    const double C104472 = C104466 + C104451;
    const double C104467 = C104461 + C104441;
    const double C104974 = C104971 + C104962;
    const double C51236 = C51218 + C51177;
    const double C51233 = C51215 + C51169;
    const double C51230 = C51212 + C51159;
    const double C51227 = C51209 + C51151;
    const double C51224 = C51206 + C51141;
    const double C51221 = C51203 + C51133;
    const double C52246 = C52237 + C52215;
    const double C52243 = C52234 + C52206;
    const double C52240 = C52231 + C52197;
    const double C52622 = C52616 + C52599;
    const double C52619 = C52613 + C52591;
    const double C52894 = C52885 + C52859;
    const double C52891 = C52882 + C52851;
    const double C52888 = C52879 + C52845;
    const double C53106 = C53103 + C53093;
    const double C53414 = C53411 + C53401;
    const double C53626 = C53623 + C53613;
    const double C54504 = C54501 + C54491;
    const double C54916 = C54913 + C54903;
    const double C101948 = C101930 + C101890;
    const double C101945 = C101927 + C101884;
    const double C101942 = C101924 + C101878;
    const double C101939 = C101921 + C101872;
    const double C101936 = C101918 + C101866;
    const double C101933 = C101915 + C101860;
    const double C104471 = C104465 + C104449;
    const double C104468 = C104462 + C104443;
    const double C104973 = C104970 + C104960;
    const double C73967 = C73949 + C73911;
    const double C73964 = C73946 + C73903;
    const double C73962 = C73944 + C73899;
    const double C73960 = C73942 + C73892;
    const double C73958 = C73940 + C73887;
    const double C73956 = C73938 + C73883;
    const double C73955 = C73937 + C73879;
    const double C73952 = C73934 + C73871;
    const double C73950 = C73932 + C73867;
    const double C74442 = C74438 + C74427;
    const double C74440 = C74436 + C74423;
    const double C74999 = C74987 + C74961;
    const double C74997 = C74985 + C74957;
    const double C74994 = C74982 + C74949;
    const double C74992 = C74980 + C74945;
    const double C74991 = C74979 + C74941;
    const double C74989 = C74977 + C74937;
    const double C75365 = C75361 + C75350;
    const double C75362 = C75358 + C75342;
    const double C75633 = C75625 + C75604;
    const double C75630 = C75622 + C75596;
    const double C75628 = C75620 + C75592;
    const double C75626 = C75618 + C75588;
    const double C75843 = C75841 + C75834;
    const double C76147 = C76145 + C76138;
    const double C76355 = C76353 + C76346;
    const double C77237 = C77233 + C77223;
    const double C77235 = C77231 + C77219;
    const double C77653 = C77649 + C77639;
    const double C77651 = C77647 + C77635;
    const double C82901 = C82887 + C82855;
    const double C82899 = C82885 + C82851;
    const double C82896 = C82882 + C82845;
    const double C82894 = C82880 + C82841;
    const double C82892 = C82878 + C82837;
    const double C82891 = C82877 + C82835;
    const double C82888 = C82874 + C82829;
    const double C83168 = C83166 + C83161;
    const double C83440 = C83438 + C83429;
    const double C86259 = C86253 + C86237;
    const double C86257 = C86251 + C86233;
    const double C86254 = C86248 + C86227;
    const double C86657 = C86655 + C86650;
    const double C86929 = C86927 + C86919;
    const double C134684 = C134682 + C134676;
    const double C135083 = C135081 + C135074;
    const double C137182 = C137180 + C137174;
    const double C137679 = C137677 + C137671;
    const double C6446 = C6440 + C6441;
    const double C8339 = C6436 + C6437;
    const double C6445 = C6435 + C6434;
    const double C7828 = C6430 + C6431;
    const double C6444 = C6428 + C6429;
    const double C8646 = C7470 + C7471;
    const double C42951 = C7471 + C7470;
    const double C41559 = C7469 + C7468;
    const double C41558 = C7468 + C7469;
    const double C41557 = C7466 + C7467;
    const double C41556 = C7467 + C7466;
    const double C8092 = C7464 + C7465;
    const double C42305 = C7465 + C7464;
    const double C7854 = C7850 + C7851;
    const double C8860 = C8136 + C8137;
    const double C43210 = C8137 + C8136;
    const double C8140 = C8134 + C8135;
    const double C42306 = C8135 + C8134;
    const double C16568 = C8133 + C8132;
    const double C42304 = C8132 + C8133;
    const double C18136 = C9776 + C9775;
    const double C44339 = C9775 + C9776;
    const double C18559 = C10201 + C10200;
    const double C44856 = C10200 + C10201;
    const double C15295 = C15289 + C15290;
    const double C18346 = C15285 + C15286;
    const double C15294 = C15284 + C15283;
    const double C17817 = C15279 + C15280;
    const double C15293 = C15277 + C15278;
    const double C17842 = C17838 + C17839;
    const double C6913 = C6909 + C6114;
    const double C23950 = C23947 + C23152;
    const double C23467 = C23449 + C23150;
    const double C51699 = C51696 + C50901;
    const double C51216 = C51198 + C50899;
    const double C74437 = C74433 + C73638;
    const double C15701 = C15697 + C7115;
    const double C32231 = C32213 + C23734;
    const double C32654 = C32651 + C24150;
    const double C101928 = C101910 + C51483;
    const double C102351 = C102348 + C51899;
    const double C83439 = C83437 + C74639;
    const double C41561 = C7474 + C7475;
    const double C41560 = C7475 + C7474;
    const double C65995 = C65993 * C14752;
    const double C93857 = C65993 * C152113;
    const double C110371 = C65993 * C152113;
    const double C143073 = C65993 * C152251;
    const double C150785 = ae * C150784;
    const double C156 = (5 * C150725 + C150614 * C150784 +
                         (4 * C150708 + C150614 * C150766) * ae) /
                        C150505;
    const double C360 = (C150860 * C150784) / C150505;
    const double C569 = (C150963 * C150784) / C150505;
    const double C23942 = C23123 * C372;
    const double C51691 = C50872 * C372;
    const double C40907 = C40904 + C7117;
    const double C24478 = C24463 + C23731;
    const double C52227 = C52212 + C51480;
    const double C83165 = C83162 + C74641;
    const double C32646 = C23123 * C581;
    const double C102343 = C50872 * C581;
    const double C6915 = C6911 + C6112;
    const double C23468 = C23450 + C23424;
    const double C51217 = C51199 + C51173;
    const double C74439 = C74435 + C73636;
    const double C15703 = C15699 + C14755;
    const double C32232 = C32214 + C23739;
    const double C101929 = C101911 + C51488;
    const double C135082 = C135080 + C83433;
    const double C6442 = C6424 + C6384;
    const double C25356 = C25353 + C25342;
    const double C53105 = C53102 + C53091;
    const double C59994 = C59991 + C59984;
    const double C73966 = C73948 + C73908;
    const double C7472 = C7460 + C7431;
    const double C25664 = C25661 + C25650;
    const double C53413 = C53410 + C53399;
    const double C93863 = C93862 + C93860;
    const double C74996 = C74984 + C74955;
    const double C65996 = C65994 * C14753;
    const double C143074 = C65994 * C134230;
    const double C15291 = C15273 + C15233;
    const double C35275 = C35272 + C35261;
    const double C104972 = C104969 + C104958;
    const double C118453 = C118452 + C118449;
    const double C134683 = C134681 + C134674;
    const double C59678 = C59666 * C152049;
    const double C60380 = C60371 * C152049;
    const double C93439 = C60371 * C152113;
    const double C109953 = C60371 * C152113;
    const double C150855 = ae * C150853;
    const double C150854 = C150614 * C150853;
    const double C151070 = C150860 * C150853;
    const double C151096 = C150963 * C150853;
    const double C361 = (C150784 + C150853 * C150873) / C150505;
    const double C570 = (C150784 + C150853 * C150976) / C150505;
    const double C373 =
        (4 * (2 * C150917 + C150914 + C150914 + C150614 * C150961) + C150954 +
         C150954 +
         C150614 *
             (3 * C150961 + C150955 + C150955 +
              C150614 *
                  (2 * C150959 + C150956 + C150956 +
                   C150614 *
                       (C150947 + C150957 + C150957 +
                        C150614 *
                            (2 * ae * (C150749 + C150813 * C150873) +
                             C150614 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150873)))))) /
        C150510;
    const double C1722 = C141 * C1716;
    const double C6907 = C6092 * C1716;
    const double C23434 = C23131 * C1716;
    const double C51183 = C50880 * C1716;
    const double C59454 = C59433 * C1716;
    const double C74431 = C150531 * C1716;
    const double C1923 = C141 * C1917;
    const double C7119 = C6092 * C1917;
    const double C24471 = C23131 * C1917;
    const double C52220 = C50880 * C1917;
    const double C74643 = C150531 * C1917;
    const double C93204 = C59433 * C1917;
    const double C582 =
        (4 * (2 * C151020 + C151017 + C151017 + C150614 * C151064) + C151057 +
         C151057 +
         C150614 *
             (3 * C151064 + C151058 + C151058 +
              C150614 *
                  (2 * C151062 + C151059 + C151059 +
                   C150614 *
                       (C151050 + C151060 + C151060 +
                        C150614 *
                            (2 * ae * (C150749 + C150813 * C150976) +
                             C150614 * (C150820 + (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                      C150621 * C150976)))))) /
        C150510;
    const double C2825 = C141 * C2819;
    const double C15695 = C6092 * C2819;
    const double C32198 = C23131 * C2819;
    const double C101895 = C50880 * C2819;
    const double C117889 = C59433 * C2819;
    const double C135078 = C150531 * C2819;
    const double C1100 =
        (4 * (2 * C151140 + C151137 + C151137 + C150614 * C151159) + C151152 +
         C151152 +
         C150614 *
             (3 * C151159 + C151153 + C151153 +
              C150614 *
                  (2 * C151157 + C151154 + C151154 +
                   C150614 * (C151144 + C151155 + C151155 +
                              C150614 * (2 * ae * C150963 * C150860 * C150813 +
                                         C150614 * C150963 * C150860 *
                                             (C150792 * C150793 +
                                              C150618 * bs[9] *
                                                  std::pow(C150620, 9)) *
                                             C150621))))) /
        C150510;
    const double C73970 = C73964 + C73965;
    const double C75830 = C73960 + C73961;
    const double C73969 = C73959 + C73958;
    const double C75340 = C73954 + C73955;
    const double C73968 = C73952 + C73953;
    const double C83833 = C74998 + C74999;
    const double C83832 = C74999 + C74998;
    const double C76134 = C74994 + C74995;
    const double C85224 = C74995 + C74994;
    const double C83831 = C74993 + C74992;
    const double C83830 = C74992 + C74993;
    const double C83829 = C74990 + C74991;
    const double C83828 = C74991 + C74990;
    const double C75586 = C74988 + C74989;
    const double C84578 = C74989 + C74988;
    const double C75366 = C75362 + C75363;
    const double C76342 = C75630 + C75631;
    const double C85483 = C75631 + C75630;
    const double C75634 = C75628 + C75629;
    const double C84579 = C75629 + C75628;
    const double C84577 = C75626 + C75627;
    const double C84576 = C75627 + C75626;
    const double C86651 = C77236 + C77237;
    const double C86646 = C77237 + C77236;
    const double C87189 = C77652 + C77653;
    const double C87188 = C77653 + C77652;
    const double C134672 = C82901 + C82900;
    const double C134671 = C82895 + C82894;
    const double C134670 = C82891 + C82890;
    const double C137170 = C86259 + C86258;
    const double C137169 = C86255 + C86254;
    const double C137667 = C86929 + C86928;
    const double C6449 = C6446 * C152049;
    const double C8346 = C8339 * C152049;
    const double C6448 = C6445 * C152049;
    const double C7841 = C7828 * C152049;
    const double C6447 = C6444 * C152049;
    const double C8653 = C8646 * C152049;
    const double C8115 = C8092 * C152049;
    const double C7855 = C7854 * C152049;
    const double C8867 = C8860 * C152049;
    const double C8141 = C8140 * C152049;
    const double C6917 = C6913 + C6901;
    const double C23953 = C23950 + C23940;
    const double C23485 = C23467 + C23422;
    const double C51702 = C51699 + C51689;
    const double C51234 = C51216 + C51171;
    const double C74441 = C74437 + C74425;
    const double C15705 = C15701 + C15689;
    const double C32249 = C32231 + C32189;
    const double C32657 = C32654 + C32644;
    const double C101946 = C101928 + C101886;
    const double C102354 = C102351 + C102341;
    const double C83441 = C83439 + C83431;
    const double C164 =
        (5 * (3 * C150717 + C150723 + C150723 + C150614 * C150775) + C150785 +
         C150785 +
         C150614 *
             (4 * C150775 + C150782 + C150782 +
              C150614 *
                  (3 * C150770 + C150778 + C150778 +
                   C150614 *
                       (2 * C150764 + C150772 + C150772 +
                        C150614 * (C150756 + C150763 + C150763 +
                                   C150614 * (2 * ae * C150749 +
                                              C150614 *
                                                  (C150732 * C150733 +
                                                   C150618 * bs[8] *
                                                       std::pow(C150612, 8)) *
                                                  C150621)))))) /
        C150510;
    const double C185 = C139 * C156;
    const double C179 = C141 * C156;
    const double C23159 = C23131 * C156;
    const double C50908 = C50880 * C156;
    const double C391 = C141 * C360;
    const double C749 = C139 * C360;
    const double C6121 = C6092 * C360;
    const double C23161 = C23129 * C360;
    const double C23151 = C23131 * C360;
    const double C50910 = C50878 * C360;
    const double C50900 = C50880 * C360;
    const double C73645 = C150531 * C360;
    const double C600 = C141 * C569;
    const double C888 = C139 * C569;
    const double C14758 = C6092 * C569;
    const double C24151 = C23131 * C569;
    const double C31722 = C23129 * C569;
    const double C51900 = C50880 * C569;
    const double C82245 = C150531 * C569;
    const double C101419 = C50878 * C569;
    const double C40909 = C40907 + C7117;
    const double C24487 = C24478 + C23731;
    const double C52236 = C52227 + C51480;
    const double C83167 = C83165 + C74641;
    const double C6919 = C6915 + C6905;
    const double C23486 = C23468 + C23425;
    const double C51235 = C51217 + C51174;
    const double C74443 = C74439 + C74429;
    const double C15707 = C15703 + C15693;
    const double C32250 = C32232 + C32191;
    const double C101947 = C101929 + C101888;
    const double C135084 = C135082 + C135076;
    const double C59997 = C59994 * C152049;
    const double C93864 = C93863 * C152113;
    const double C110373 = C93863 * C152113;
    const double C150856 = C150794 + C150854;
    const double C151079 = ae * C151070;
    const double C1094 = (C150963 * C151070) / C150505;
    const double C151105 = ae * C151096;
    const double C398 = C141 * C361;
    const double C6123 = C6092 * C361;
    const double C23945 = C23131 * C361;
    const double C51694 = C50880 * C361;
    const double C73647 = C150531 * C361;
    const double C607 = C141 * C570;
    const double C14760 = C6092 * C570;
    const double C32649 = C23131 * C570;
    const double C102346 = C50880 * C570;
    const double C134233 = C150531 * C570;
    const double C73973 = C73970 * C152049;
    const double C75837 = C75830 * C152049;
    const double C73972 = C73969 * C152049;
    const double C75353 = C75340 * C152049;
    const double C73971 = C73968 * C152049;
    const double C76141 = C76134 * C152049;
    const double C75609 = C75586 * C152049;
    const double C75367 = C75366 * C152049;
    const double C76349 = C76342 * C152049;
    const double C75635 = C75634 * C152049;
    const double C23948 = C23941 + C23151;
    const double C51697 = C51690 + C50900;
    const double C32652 = C32645 + C24151;
    const double C102349 = C102342 + C51900;
    const double C40911 = C40909 + C40905;
    const double C24496 = C24487 + C24464;
    const double C52245 = C52236 + C52213;
    const double C83169 = C83167 + C83163;
    const double C150857 = C150856 + C150841;
    const double C745 =
        (5 * (3 * C150936 + C150930 + C150930 + C150614 * C151090) + C151079 +
         C151079 +
         C150614 *
             (4 * C151090 + C151080 + C151080 +
              C150614 *
                  (3 * C151088 + C151081 + C151081 +
                   C150614 *
                       (2 * C151086 + C151082 + C151082 +
                        C150614 * (C151069 + C151083 + C151083 +
                                   C150614 * (2 * ae * C150860 * C150813 +
                                              C150614 * C150860 *
                                                  (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                  C150621)))))) /
        C150510;
    const double C1113 = C141 * C1094;
    const double C24154 = C23131 * C1094;
    const double C40063 = C6092 * C1094;
    const double C51903 = C50880 * C1094;
    const double C82247 = C150531 * C1094;
    const double C884 =
        (5 * (3 * C151039 + C151033 + C151033 + C150614 * C151116) + C151105 +
         C151105 +
         C150614 *
             (4 * C151116 + C151106 + C151106 +
              C150614 *
                  (3 * C151114 + C151107 + C151107 +
                   C150614 *
                       (2 * C151112 + C151108 + C151108 +
                        C150614 * (C151095 + C151109 + C151109 +
                                   C150614 * (2 * ae * C150963 * C150813 +
                                              C150614 * C150963 *
                                                  (C150792 * C150793 +
                                                   C150618 * bs[9] *
                                                       std::pow(C150620, 9)) *
                                                  C150621)))))) /
        C150510;
    const double C23951 = C23948 + C23151;
    const double C51700 = C51697 + C50900;
    const double C32655 = C32652 + C24151;
    const double C102352 = C102349 + C51900;
    const double C150858 = ae * C150857;
    const double C157 = (6 * C150784 + C150614 * C150857 +
                         (5 * C150766 + C150614 * C150837) * ae) /
                        C150505;
    const double C744 = (C150860 * C150857) / C150505;
    const double C883 = (C150963 * C150857) / C150505;
    const double C23954 = C23951 + C23942;
    const double C51703 = C51700 + C51691;
    const double C32658 = C32655 + C32646;
    const double C102355 = C102352 + C102343;
    const double C165 =
        (6 * (4 * C150775 + C150782 + C150782 + C150614 * C150847) + C150858 +
         C150858 +
         C150614 *
             (5 * C150847 + C150855 + C150855 +
              C150614 *
                  (4 * C150842 + C150851 + C150851 +
                   C150614 *
                       (3 * C150835 + C150846 + C150846 +
                        C150614 *
                            (2 * C150828 + C150838 + C150838 +
                             C150614 *
                                 (C150820 + C150827 + C150827 +
                                  C150614 * (2 * ae * C150813 +
                                             C150614 *
                                                 (C150792 * C150793 +
                                                  C150618 * bs[9] *
                                                      std::pow(C150620, 9)) *
                                                 C150621))))))) /
        C150510;
    const double C186 = C141 * C157;
    const double C750 = C141 * C744;
    const double C23162 = C23131 * C744;
    const double C50911 = C50880 * C744;
    const double C889 = C141 * C883;
    const double C31723 = C23131 * C883;
    const double C101420 = C50880 * C883;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C151908 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C151915 +
                  ((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151867 * C3585) *
                     C151826 +
                 (((C23477 + C23478 + C23479) * C152049 * C152183 +
                   (C23480 + C23481 + C23482) * C152049 * C152087) *
                      C151867 * C151915 -
                  ((C23479 + C23478 + C23477) * C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C151908 -
                  ((C25356 + C25357 + C25358) * C152049 * C152087 +
                   (C23482 + C23481 + C23480) * C152049 * C152183) *
                      C151867 * C3585) *
                     C151835 +
                 (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152049 * C152183 +
                   (C23483 + C23484 + C23485) * C152049 * C152087) *
                      C151867 * C151908 -
                  ((C23486 + C23487 + C23488) * C152049 * C152087 +
                   (C23485 + C23484 + C23483) * C152049 * C152183) *
                      C151867 * C151915 +
                  ((C23488 + C23487 + C23486) * C152049 * C152183 +
                   (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                    C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                    C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                       C152049 * C152087) *
                      C151867 * C3585) *
                     C3588)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152167 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C151908 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151954 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C152167) *
                      C151915 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C152167 -
                   ((C25876 + C25877 + C25878) * C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C151954) *
                      C3585) *
                     C3241 +
                 ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152167) *
                      C151908 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C152167 -
                   ((C25664 + C25665 + C25666) * C152049 * C152087 +
                    (C24495 + C24494 + C24493) * C152049 * C152183) *
                       C151954) *
                      C151915 +
                  (((C25666 + C25665 + C25664) * C152049 * C152183 +
                    (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                     C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                     C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                        C152049 * C152087) *
                       C151954 -
                   ((C25356 + C25357 + C25358) * C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C152167) *
                      C3585) *
                     C151832)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C152262 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C152258 +
                  ((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151867 * C152244 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C151867 * C152218) *
                     C3241 +
                 (((C23477 + C23478 + C23479) * C152049 * C152183 +
                   (C23480 + C23481 + C23482) * C152049 * C152087) *
                      C151867 * C152258 -
                  ((C23479 + C23478 + C23477) * C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C152262 -
                  ((C25356 + C25357 + C25358) * C152049 * C152087 +
                   (C23482 + C23481 + C23480) * C152049 * C152183) *
                      C151867 * C152244 +
                  ((C25358 + C25357 + C25356) * C152049 * C152183 +
                   (C23126 * C1358 + C25347 + C25347 + C152231 * C1374 +
                    C23128 * C1359 + C25348 + C25348 + C152232 * C1375 +
                    C23130 * C1360 + C25349 + C25349 + C23123 * C1376) *
                       C152049 * C152087) *
                      C151867 * C152218) *
                     C151832)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C3101 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C151912) *
                     C152261 +
                 (((C23477 + C23478 + C23479) * C152049 * C152183 +
                   (C23480 + C23481 + C23482) * C152049 * C152087) *
                      C151867 * C151912 -
                  ((C23479 + C23478 + C23477) * C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C3101) *
                     C152254 +
                 (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152049 * C152183 +
                   (C23483 + C23484 + C23485) * C152049 * C152087) *
                      C151867 * C3101 -
                  ((C23486 + C23487 + C23488) * C152049 * C152087 +
                   (C23485 + C23484 + C23483) * C152049 * C152183) *
                      C151867 * C151912) *
                     C152237 +
                 (((C23952 + C23953 + C23954) * C152049 * C152183 +
                   (C23126 * C345 + C23943 + C23943 + C152231 * C369 +
                    C23128 * C347 + C23944 + C23944 + C152232 * C371 +
                    C23130 * C349 + C23945 + C23945 + C23123 * C373) *
                       C152049 * C152087) *
                      C151867 * C151912 -
                  ((C23954 + C23953 + C23952) * C152049 * C152087 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152049 * C152183) *
                      C151867 * C3101) *
                     C152212)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152256 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C152241 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152211) *
                      C3101 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C152241 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C152256 -
                   ((C25144 + C25145 + C25146) * C152049 * C152087 +
                    (C25140 + C25139 + C25138) * C152049 * C152183) *
                       C152211) *
                      C151912) *
                     C3241 +
                 ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C152241 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152256 -
                   ((C26754 + C26755 + C26756) * C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C152211) *
                      C3101 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C152256 -
                   ((C25664 + C25665 + C25666) * C152049 * C152087 +
                    (C24495 + C24494 + C24493) * C152049 * C152183) *
                       C152241 +
                   ((C26756 + C26755 + C26754) * C152049 * C152183 +
                    (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                     C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                     C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                        C152049 * C152087) *
                       C152211) *
                      C151912) *
                     C151832)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152167 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C3101 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151954 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C152167) *
                      C151912) *
                     C151826 +
                 ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152167) *
                      C3101 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C152167 -
                   ((C25664 + C25665 + C25666) * C152049 * C152087 +
                    (C24495 + C24494 + C24493) * C152049 * C152183) *
                       C151954) *
                      C151912) *
                     C151835 +
                 ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C152167 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151954) *
                      C3101 +
                  (((C24498 + C24497 + C24496) * C152049 * C152183 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C152167) *
                      C151912) *
                     C3588)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C3101 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C151912) *
                     C152261 +
                 (((C23477 + C23478 + C23479) * C152049 * C152183 +
                   (C23480 + C23481 + C23482) * C152049 * C152087) *
                      C151867 * C151912 -
                  ((C23479 + C23478 + C23477) * C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C3101) *
                     C152254 +
                 (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152049 * C152183 +
                   (C23483 + C23484 + C23485) * C152049 * C152087) *
                      C151867 * C3101 -
                  ((C23486 + C23487 + C23488) * C152049 * C152087 +
                   (C23485 + C23484 + C23483) * C152049 * C152183) *
                      C151867 * C151912) *
                     C152237 +
                 (((C23952 + C23953 + C23954) * C152049 * C152183 +
                   (C23126 * C345 + C23943 + C23943 + C152231 * C369 +
                    C23128 * C347 + C23944 + C23944 + C152232 * C371 +
                    C23130 * C349 + C23945 + C23945 + C23123 * C373) *
                       C152049 * C152087) *
                      C151867 * C151912 -
                  ((C23954 + C23953 + C23952) * C152049 * C152087 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152049 * C152183) *
                      C151867 * C3101) *
                     C152212)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C152262 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C152258 +
                  ((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151867 * C152244 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C151867 * C152218) *
                     C3241 +
                 (((C23477 + C23478 + C23479) * C152049 * C152183 +
                   (C23480 + C23481 + C23482) * C152049 * C152087) *
                      C151867 * C152258 -
                  ((C23479 + C23478 + C23477) * C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C152262 -
                  ((C25356 + C25357 + C25358) * C152049 * C152087 +
                   (C23482 + C23481 + C23480) * C152049 * C152183) *
                      C151867 * C152244 +
                  ((C25358 + C25357 + C25356) * C152049 * C152183 +
                   (C23126 * C1358 + C25347 + C25347 + C152231 * C1374 +
                    C23128 * C1359 + C25348 + C25348 + C152232 * C1375 +
                    C23130 * C1360 + C25349 + C25349 + C23123 * C1376) *
                       C152049 * C152087) *
                      C151867 * C152218) *
                     C151832)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C4107 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C151908 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151954 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C4107) *
                      C151915 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C4107 -
                   ((C25876 + C25877 + C25878) * C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C151954) *
                      C3585) *
                     C152152 +
                 ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C4107) *
                      C151908 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C4107 -
                   ((C25664 + C25665 + C25666) * C152049 * C152087 +
                    (C24495 + C24494 + C24493) * C152049 * C152183) *
                       C151954) *
                      C151915 +
                  (((C25666 + C25665 + C25664) * C152049 * C152183 +
                    (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                     C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                     C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                        C152049 * C152087) *
                       C151954 -
                   ((C25356 + C25357 + C25358) * C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C4107) *
                      C3585) *
                     C151832)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151950 -
                  ((C24490 + C24491 + C24492) * C152049 * C152087 +
                   (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                       C152049 * C152183) *
                      C151957 +
                  ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                    C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                    C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                       C152049 * C152183 +
                   (C25138 + C25139 + C25140) * C152049 * C152087) *
                      C4779) *
                     C151908 +
                 (((C24492 + C24491 + C24490) * C152049 * C152183 +
                   (C25141 + C25142 + C25143) * C152049 * C152087) *
                      C151957 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151950 -
                  ((C25144 + C25145 + C25146) * C152049 * C152087 +
                   (C25140 + C25139 + C25138) * C152049 * C152183) *
                      C4779) *
                     C151915 +
                 (((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151950 -
                  ((C25876 + C25877 + C25878) * C152049 * C152087 +
                   (C25143 + C25142 + C25141) * C152049 * C152183) *
                      C151957 +
                  ((C25146 + C25145 + C25144) * C152049 * C152183 +
                   (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                    C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                    C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                       C152049 * C152087) *
                      C4779) *
                     C3585) *
                C151821) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C4107 -
                  ((C24490 + C24491 + C24492) * C152049 * C152087 +
                   (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                       C152049 * C152183) *
                      C151954) *
                     C152262 +
                 (((C24492 + C24491 + C24490) * C152049 * C152183 +
                   (C25141 + C25142 + C25143) * C152049 * C152087) *
                      C151954 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C4107) *
                     C152258 +
                 (((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C4107 -
                  ((C25876 + C25877 + C25878) * C152049 * C152087 +
                   (C25143 + C25142 + C25141) * C152049 * C152183) *
                      C151954) *
                     C152244 +
                 (((C25878 + C25877 + C25876) * C152049 * C152183 +
                   (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                    C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                    C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                       C152049 * C152087) *
                      C151954 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C4107) *
                     C152218) *
                C151821) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C4107 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C3101 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151954 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C4107) *
                      C151912) *
                     C152252 +
                 ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C4107) *
                      C3101 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C4107 -
                   ((C25664 + C25665 + C25666) * C152049 * C152087 +
                    (C24495 + C24494 + C24493) * C152049 * C152183) *
                       C151954) *
                      C151912) *
                     C152235 +
                 ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C4107 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151954) *
                      C3101 +
                  (((C24498 + C24497 + C24496) * C152049 * C152183 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C4107) *
                      C151912) *
                     C152202)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C152263 -
                  ((C24490 + C24491 + C24492) * C152049 * C152087 +
                   (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                       C152049 * C152183) *
                      C152260 +
                  ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                    C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                    C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                       C152049 * C152183 +
                   (C25138 + C25139 + C25140) * C152049 * C152087) *
                      C152247 -
                  ((C27166 + C27167 + C27168) * C152049 * C152087 +
                   (C23130 * C2452 + C26440 + C26440 + C23123 * C2468 +
                    C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                    C23126 * C2454 + C26442 + C26442 + C152231 * C2470) *
                       C152049 * C152183) *
                      C152224) *
                     C3101 +
                 (((C24492 + C24491 + C24490) * C152049 * C152183 +
                   (C25141 + C25142 + C25143) * C152049 * C152087) *
                      C152260 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C152263 -
                  ((C25144 + C25145 + C25146) * C152049 * C152087 +
                   (C25140 + C25139 + C25138) * C152049 * C152183) *
                      C152247 +
                  ((C27168 + C27167 + C27166) * C152049 * C152183 +
                   (C23126 * C9432 + C27157 + C27157 + C152231 * C9444 +
                    C23128 * C9431 + C27158 + C27158 + C152232 * C9443 +
                    C23130 * C9970 + C27159 + C27159 + C23123 * C9972) *
                       C152049 * C152087) *
                      C152224) *
                     C151912) *
                C151821) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151950 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151957 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C4779) *
                      C3101 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151957 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151950 -
                   ((C25144 + C25145 + C25146) * C152049 * C152087 +
                    (C25140 + C25139 + C25138) * C152049 * C152183) *
                       C4779) *
                      C151912) *
                     C152152 +
                 ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151957 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151950 -
                   ((C26754 + C26755 + C26756) * C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C4779) *
                      C3101 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151950 -
                   ((C25664 + C25665 + C25666) * C152049 * C152087 +
                    (C24495 + C24494 + C24493) * C152049 * C152183) *
                       C151957 +
                   ((C26756 + C26755 + C26754) * C152049 * C152183 +
                    (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                     C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                     C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                        C152049 * C152087) *
                       C4779) *
                      C151912) *
                     C151832)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C4107 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C3101 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151954 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C4107) *
                      C151912) *
                     C152252 +
                 ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C4107) *
                      C3101 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C4107 -
                   ((C25664 + C25665 + C25666) * C152049 * C152087 +
                    (C24495 + C24494 + C24493) * C152049 * C152183) *
                       C151954) *
                      C151912) *
                     C152235 +
                 ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C4107 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151954) *
                      C3101 +
                  (((C24498 + C24497 + C24496) * C152049 * C152183 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C4107) *
                      C151912) *
                     C152202)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C4107 -
                  ((C24490 + C24491 + C24492) * C152049 * C152087 +
                   (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                       C152049 * C152183) *
                      C151954) *
                     C152262 +
                 (((C24492 + C24491 + C24490) * C152049 * C152183 +
                   (C25141 + C25142 + C25143) * C152049 * C152087) *
                      C151954 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C4107) *
                     C152258 +
                 (((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C4107 -
                  ((C25876 + C25877 + C25878) * C152049 * C152087 +
                   (C25143 + C25142 + C25141) * C152049 * C152183) *
                      C151954) *
                     C152244 +
                 (((C25878 + C25877 + C25876) * C152049 * C152183 +
                   (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                    C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                    C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                       C152049 * C152087) *
                      C151954 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C4107) *
                     C152218) *
                C151821) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C1709 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C1710 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C151867 * C1711 -
                   ((C24872 + C24873 + C24874) * C152049 * C152087 +
                    (C24871 + C24870 + C24869) * C152049 * C152183) *
                       C151867 * C152218) *
                      C152152 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C1710 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C1709 -
                   ((C25356 + C25357 + C25358) * C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C1711 +
                   ((C25358 + C25357 + C25356) * C152049 * C152183 +
                    (C23126 * C1358 + C25347 + C25347 + C152231 * C1374 +
                     C23128 * C1359 + C25348 + C25348 + C152232 * C1375 +
                     C23130 * C1360 + C25349 + C25349 + C23123 * C1376) *
                        C152049 * C152087) *
                       C151867 * C152218) *
                      C151832)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C152166 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C151912) *
                      C739 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C151912 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C152166) *
                      C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C152166 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C151912) *
                      C741 +
                  (((C23952 + C23953 + C23954) * C152049 * C152183 +
                    (C23126 * C345 + C23943 + C23943 + C152231 * C369 +
                     C23128 * C347 + C23944 + C23944 + C152232 * C371 +
                     C23130 * C349 + C23945 + C23945 + C23123 * C373) *
                        C152049 * C152087) *
                       C151867 * C151912 -
                   ((C23954 + C23953 + C23952) * C152049 * C152087 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152049 * C152183) *
                       C151867 * C152166) *
                      C152212)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C2215 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C2216 +
                    ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                      C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                      C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                         C152049 * C152183 +
                     (C25138 + C25139 + C25140) * C152049 * C152087) *
                        C152211) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C25141 + C25142 + C25143) * C152049 * C152087) *
                        C2216 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C2215 -
                    ((C25144 + C25145 + C25146) * C152049 * C152087 +
                     (C25140 + C25139 + C25138) * C152049 * C152183) *
                        C152211) *
                       C151912) *
                      C152152 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C2216 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C2215 -
                    ((C26754 + C26755 + C26756) * C152049 * C152087 +
                     (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                      C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                      C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                         C152049 * C152183) *
                        C152211) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C2215 -
                    ((C25664 + C25665 + C25666) * C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C2216 +
                    ((C26756 + C26755 + C26754) * C152049 * C152183 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152049 * C152087) *
                        C152211) *
                       C151912) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[11] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152167 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C1709 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151954 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C152167) *
                      C1710 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C152167 -
                   ((C25876 + C25877 + C25878) * C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C151954) *
                      C1711 +
                  (((C25878 + C25877 + C25876) * C152049 * C152183 +
                    (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                     C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                     C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                        C152049 * C152087) *
                       C151954 -
                   ((C24872 + C24873 + C24874) * C152049 * C152087 +
                    (C24871 + C24870 + C24869) * C152049 * C152183) *
                       C152167) *
                      C152218) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C152167 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151954) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C23126 * C1538 + C24451 + C24451 + C152231 * C1562 +
                      C23128 * C1537 + C24452 + C24452 + C152232 * C1561 +
                      C23130 * C1536 + C24453 + C24453 + C23123 * C1560) *
                         C152049 * C152087) *
                        C151954 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C152167) *
                       C151912) *
                      C335 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151954 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C152167) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C152167 -
                    ((C23130 * C1535 + C24460 + C24460 + C23123 * C1559 +
                      C23128 * C1536 + C24461 + C24461 + C152232 * C1560 +
                      C23126 * C1537 + C24462 + C24462 + C152231 * C1561) *
                         C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151954) *
                       C151912) *
                      C336 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152049 * C152183 +
                     (C23483 + C23484 + C23485) * C152049 * C152087) *
                        C152167 -
                    ((C24496 + C24497 + C24498) * C152049 * C152087 +
                     (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                      C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                      C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                         C152049 * C152183) *
                        C151954) *
                       C152166 +
                   (((C24498 + C24497 + C24496) * C152049 * C152183 +
                     (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                      C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                      C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                         C152049 * C152087) *
                        C151954 -
                    ((C23486 + C23487 + C23488) * C152049 * C152087 +
                     (C23485 + C23484 + C23483) * C152049 * C152183) *
                        C152167) *
                       C151912) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C2814 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C2815 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C2816 -
                   ((C27166 + C27167 + C27168) * C152049 * C152087 +
                    (C23130 * C2452 + C26440 + C26440 + C23123 * C2468 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23126 * C2454 + C26442 + C26442 + C152231 * C2470) *
                        C152049 * C152183) *
                       C152224) *
                      C152166 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C2815 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C2814 -
                   ((C25144 + C25145 + C25146) * C152049 * C152087 +
                    (C25140 + C25139 + C25138) * C152049 * C152183) *
                       C2816 +
                   ((C27168 + C27167 + C27166) * C152049 * C152183 +
                    (C23126 * C9432 + C27157 + C27157 + C152231 * C9444 +
                     C23128 * C9431 + C27158 + C27158 + C152232 * C9443 +
                     C23130 * C9970 + C27159 + C27159 + C23123 * C9972) *
                        C152049 * C152087) *
                       C152224) *
                      C151912) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[12] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                        C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                        C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                           C152049 * C152183 +
                       (C23126 * C341 + C23136 + C23136 + C152231 * C365 +
                        C23128 * C340 + C23137 + C23137 + C152232 * C364 +
                        C23130 * C339 + C23138 + C23138 + C23123 * C363) *
                           C152049 * C152087) *
                          C151867 * C151849 * C129 -
                      ((C23130 * C338 + C23139 + C23139 + C23123 * C362 +
                        C23128 * C339 + C23140 + C23140 + C152232 * C363 +
                        C23126 * C340 + C23141 + C23141 + C152231 * C364) *
                           C152049 * C152087 +
                       (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                        C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                        C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                           C152049 * C152183) *
                          C151867 * C151849 * C130 +
                      ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                        C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                        C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                           C152049 * C152183 +
                       (C23126 * C339 + C23148 + C23148 + C152231 * C363 +
                        C23128 * C338 + C23149 + C23149 + C152232 * C362 +
                        C23130 * C346 + C23150 + C23150 + C23123 * C370) *
                           C152049 * C152087) *
                          C151867 * C151849 * C131 -
                      ((C23130 * C348 + C23151 + C23151 + C23123 * C372 +
                        C23128 * C346 + C23152 + C23152 + C152232 * C370 +
                        C23126 * C338 + C23153 + C23153 + C152231 * C362) *
                           C152049 * C152087 +
                       (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                        C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                        C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                           C152049 * C152183) *
                          C151867 * C151849 * C132 +
                      ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                        C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                        C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                           C152049 * C152183 +
                       (C23126 * C346 + C23160 + C23160 + C152231 * C370 +
                        C23128 * C348 + C23161 + C23161 + C152232 * C372 +
                        C23130 * C743 + C23162 + C23162 + C23123 * C745) *
                           C152049 * C152087) *
                          C151867 * C151849 * C133) +
                 std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                         C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                         C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                            C152049 * C152183 +
                        (C23471 + C23472 + C23473) * C152049 * C152087) *
                           C151867 * C152255 -
                       ((C23474 + C23475 + C23476) * C152049 * C152087 +
                        (C23473 + C23472 + C23471) * C152049 * C152183) *
                           C151867 * C152239 +
                       ((C23476 + C23475 + C23474) * C152049 * C152183 +
                        (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                         C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                         C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                            C152049 * C152087) *
                           C151867 * C152208) *
                          C335 +
                      (((C23477 + C23478 + C23479) * C152049 * C152183 +
                        (C23480 + C23481 + C23482) * C152049 * C152087) *
                           C151867 * C152239 -
                       ((C23479 + C23478 + C23477) * C152049 * C152087 +
                        (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                         C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                         C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                            C152049 * C152183) *
                           C151867 * C152255 -
                       ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                         C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                         C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                            C152049 * C152087 +
                        (C23482 + C23481 + C23480) * C152049 * C152183) *
                           C151867 * C152208) *
                          C336 +
                      (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                         C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                         C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                            C152049 * C152183 +
                        (C23483 + C23484 + C23485) * C152049 * C152087) *
                           C151867 * C152255 -
                       ((C23486 + C23487 + C23488) * C152049 * C152087 +
                        (C23485 + C23484 + C23483) * C152049 * C152183) *
                           C151867 * C152239 +
                       ((C23488 + C23487 + C23486) * C152049 * C152183 +
                        (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                         C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                         C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                            C152049 * C152087) *
                           C151867 * C152208) *
                          C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152256 -
                   ((C23130 * C1085 + C23707 + C23707 + C23123 * C1097 +
                     C23128 * C1084 + C23708 + C23708 + C152232 * C1096 +
                     C23126 * C1083 + C23709 + C23709 + C152231 * C1095) *
                        C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C152241 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C23126 * C1534 + C23716 + C23716 + C152231 * C1558 +
                     C23128 * C1533 + C23717 + C23717 + C152232 * C1557 +
                     C23130 * C1532 + C23718 + C23718 + C23123 * C1556) *
                        C152049 * C152087) *
                       C152211) *
                      C151849 * C335 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C23126 * C1084 + C23722 + C23722 + C152231 * C1096 +
                     C23128 * C1085 + C23723 + C23723 + C152232 * C1097 +
                     C23130 * C1086 + C23724 + C23724 + C23123 * C1098) *
                        C152049 * C152087) *
                       C152241 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152256 -
                   ((C23130 * C1531 + C23725 + C23725 + C23123 * C1555 +
                     C23128 * C1532 + C23726 + C23726 + C152232 * C1556 +
                     C23126 * C1533 + C23727 + C23727 + C152231 * C1557) *
                        C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C152211) *
                      C151849 * C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C152256 -
                   ((C23130 * C1087 + C23731 + C23731 + C23123 * C1099 +
                     C23128 * C1086 + C23732 + C23732 + C152232 * C1098 +
                     C23126 * C1085 + C23733 + C23733 + C152231 * C1097) *
                        C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C152241 +
                   ((C23126 * C553 + C23737 + C23737 + C152231 * C577 +
                     C23128 * C554 + C23738 + C23738 + C152232 * C578 +
                     C23130 * C556 + C23739 + C23739 + C23123 * C580) *
                        C152049 * C152183 +
                    (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                     C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                     C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                        C152049 * C152087) *
                       C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                     C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                     C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C1260 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C1259 -
                   ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                     C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                     C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                        C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152049 * C152183 +
                    (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                     C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                     C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C1347 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151867 * C1349 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152049 * C152183 +
                   (C23126 * C7816 + C24854 + C24854 + C152231 * C7824 +
                    C23128 * C7815 + C24855 + C24855 + C152232 * C7823 +
                    C23130 * C8335 + C24856 + C24856 + C23123 * C8337) *
                       C152049 * C152087) *
                      C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152256 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C152241 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152211) *
                      C1259 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C152241 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C152256 -
                   ((C25144 + C25145 + C25146) * C152049 * C152087 +
                    (C25140 + C25139 + C25138) * C152049 * C152183) *
                       C152211) *
                      C1260 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C152256 -
                   ((C23130 * C2055 + C25114 + C25114 + C23123 * C2063 +
                     C23128 * C2054 + C25115 + C25115 + C152232 * C2062 +
                     C23126 * C2053 + C25116 + C25116 + C152231 * C2061) *
                        C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C152241 +
                   ((C25146 + C25145 + C25144) * C152049 * C152183 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152049 * C152087) *
                       C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C2215 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C2216 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152211) *
                      C151849 * C152252 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C2216 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C2215 -
                   ((C23130 * C1531 + C23725 + C23725 + C23123 * C1555 +
                     C23128 * C1532 + C23726 + C23726 + C152232 * C1556 +
                     C23126 * C1533 + C23727 + C23727 + C152231 * C1557) *
                        C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C152211) *
                      C151849 * C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C2215 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C2216 +
                   ((C23126 * C553 + C23737 + C23737 + C152231 * C577 +
                     C23128 * C554 + C23738 + C23738 + C152232 * C578 +
                     C23130 * C556 + C23739 + C23739 + C23123 * C580) *
                        C152049 * C152183 +
                    (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                     C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                     C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                        C152049 * C152087) *
                       C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C2215 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C2216 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152211) *
                      C152255 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C2216 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C2215 -
                   ((C25144 + C25145 + C25146) * C152049 * C152087 +
                    (C25140 + C25139 + C25138) * C152049 * C152183) *
                       C152211) *
                      C152239 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C2215 -
                   ((C25876 + C25877 + C25878) * C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C2216 +
                   ((C25146 + C25145 + C25144) * C152049 * C152183 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152049 * C152087) *
                       C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C2446 -
                  ((C24490 + C24491 + C24492) * C152049 * C152087 +
                   (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                       C152049 * C152183) *
                      C2447 +
                  ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                    C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                    C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                       C152049 * C152183 +
                   (C25138 + C25139 + C25140) * C152049 * C152087) *
                      C2448 -
                  ((C23130 * C2957 + C26437 + C26437 + C23123 * C2965 +
                    C23128 * C2956 + C26438 + C26438 + C152232 * C2964 +
                    C23126 * C2955 + C26439 + C26439 + C152231 * C2963) *
                       C152049 * C152087 +
                   (C23130 * C2452 + C26440 + C26440 + C23123 * C2468 +
                    C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                    C23126 * C2454 + C26442 + C26442 + C152231 * C2470) *
                       C152049 * C152183) *
                      C2449 +
                  ((C23126 * C2455 + C26443 + C26443 + C152231 * C2471 +
                    C23128 * C2456 + C26444 + C26444 + C152232 * C2472 +
                    C23130 * C2457 + C26445 + C26445 + C23123 * C2473) *
                       C152049 * C152183 +
                   (C23126 * C9433 + C26446 + C26446 + C152231 * C9445 +
                    C23128 * C9434 + C26447 + C26447 + C152232 * C9446 +
                    C23130 * C18132 + C26448 + C26448 + C23123 * C18134) *
                       C152049 * C152087) *
                      C2450) *
                 C151849 * C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C152167 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151954) *
                       C1259 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C25141 + C25142 + C25143) * C152049 * C152087) *
                        C151954 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C152167) *
                       C1260 +
                   (((C23476 + C23475 + C23474) * C152049 * C152183 +
                     (C24869 + C24870 + C24871) * C152049 * C152087) *
                        C152167 -
                    ((C23130 * C2055 + C25114 + C25114 + C23123 * C2063 +
                      C23128 * C2054 + C25115 + C25115 + C152232 * C2062 +
                      C23126 * C2053 + C25116 + C25116 + C152231 * C2061) *
                         C152049 * C152087 +
                     (C25143 + C25142 + C25141) * C152049 * C152183) *
                        C151954) *
                       C152208) *
                      C152152 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151954 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C152167) *
                       C1259 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C152167 -
                    ((C25664 + C25665 + C25666) * C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151954) *
                       C1260 +
                   (((C25666 + C25665 + C25664) * C152049 * C152183 +
                     (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                      C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                      C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                         C152049 * C152087) *
                        C151954 -
                    ((C25356 + C25357 + C25358) * C152049 * C152087 +
                     (C23482 + C23481 + C23480) * C152049 * C152183) *
                        C152167) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152167 -
                   ((C23130 * C1085 + C23707 + C23707 + C23123 * C1097 +
                     C23128 * C1084 + C23708 + C23708 + C152232 * C1096 +
                     C23126 * C1083 + C23709 + C23709 + C152231 * C1095) *
                        C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C739 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C23126 * C1084 + C23722 + C23722 + C152231 * C1096 +
                     C23128 * C1085 + C23723 + C23723 + C152232 * C1097 +
                     C23130 * C1086 + C23724 + C23724 + C23123 * C1098) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152167) *
                      C151849 * C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C152167 -
                   ((C23130 * C1087 + C23731 + C23731 + C23123 * C1099 +
                     C23128 * C1086 + C23732 + C23732 + C152232 * C1098 +
                     C23126 * C1085 + C23733 + C23733 + C152231 * C1097) *
                        C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C741 +
                  (((C23126 * C547 + C24149 + C24149 + C152231 * C571 +
                     C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                     C23130 * C557 + C24151 + C24151 + C23123 * C581) *
                        C152049 * C152183 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23954 + C23953 + C23952) * C152049 * C152087 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152049 * C152183) *
                       C152167) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C2814 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C2815 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C2816 -
                   ((C23130 * C2957 + C26437 + C26437 + C23123 * C2965 +
                     C23128 * C2956 + C26438 + C26438 + C152232 * C2964 +
                     C23126 * C2955 + C26439 + C26439 + C152231 * C2963) *
                        C152049 * C152087 +
                    (C23130 * C2452 + C26440 + C26440 + C23123 * C2468 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23126 * C2454 + C26442 + C26442 + C152231 * C2470) *
                        C152049 * C152183) *
                       C152224) *
                      C151849 * C152152 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C2815 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C2814 -
                   ((C26754 + C26755 + C26756) * C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C2816 +
                   ((C23126 * C2453 + C26951 + C26951 + C152231 * C2469 +
                     C23128 * C2452 + C26952 + C26952 + C152232 * C2468 +
                     C23130 * C2451 + C26953 + C26953 + C23123 * C2467) *
                        C152049 * C152183 +
                    (C23126 * C2956 + C26954 + C26954 + C152231 * C2964 +
                     C23128 * C2957 + C26955 + C26955 + C152232 * C2965 +
                     C23130 * C2958 + C26956 + C26956 + C23123 * C2966) *
                        C152049 * C152087) *
                       C152224) *
                      C151849 * C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C152255 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C152239 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                     C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                     C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C335 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C152239 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C152255 -
                   ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                     C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                     C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                        C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C152208) *
                      C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C152255 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C152239 +
                   ((C23488 + C23487 + C23486) * C152049 * C152183 +
                    (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                     C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                     C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23126 * C341 + C23136 + C23136 + C152231 * C365 +
                    C23128 * C340 + C23137 + C23137 + C152232 * C364 +
                    C23130 * C339 + C23138 + C23138 + C23123 * C363) *
                       C152049 * C152087) *
                      C151867 * C151849 * C129 -
                  ((C23130 * C338 + C23139 + C23139 + C23123 * C362 +
                    C23128 * C339 + C23140 + C23140 + C152232 * C363 +
                    C23126 * C340 + C23141 + C23141 + C152231 * C364) *
                       C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C151849 * C130 +
                  ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152049 * C152183 +
                   (C23126 * C339 + C23148 + C23148 + C152231 * C363 +
                    C23128 * C338 + C23149 + C23149 + C152232 * C362 +
                    C23130 * C346 + C23150 + C23150 + C23123 * C370) *
                       C152049 * C152087) *
                      C151867 * C151849 * C131 -
                  ((C23130 * C348 + C23151 + C23151 + C23123 * C372 +
                    C23128 * C346 + C23152 + C23152 + C152232 * C370 +
                    C23126 * C338 + C23153 + C23153 + C152231 * C362) *
                       C152049 * C152087 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152049 * C152183) *
                      C151867 * C151849 * C132 +
                  ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                    C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                    C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                       C152049 * C152183 +
                   (C23126 * C346 + C23160 + C23160 + C152231 * C370 +
                    C23128 * C348 + C23161 + C23161 + C152232 * C372 +
                    C23130 * C743 + C23162 + C23162 + C23123 * C745) *
                       C152049 * C152087) *
                      C151867 * C151849 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                     C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                     C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C1260 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C1259 -
                   ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                     C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                     C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                        C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152049 * C152183 +
                    (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                     C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                     C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C1347 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151867 * C1349 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152049 * C152183 +
                   (C23126 * C7816 + C24854 + C24854 + C152231 * C7824 +
                    C23128 * C7815 + C24855 + C24855 + C152232 * C7823 +
                    C23130 * C8335 + C24856 + C24856 + C23123 * C8337) *
                       C152049 * C152087) *
                      C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C2215 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C2216 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152211) *
                      C151849 * C152252 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C2216 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C2215 -
                   ((C23130 * C1531 + C23725 + C23725 + C23123 * C1555 +
                     C23128 * C1532 + C23726 + C23726 + C152232 * C1556 +
                     C23126 * C1533 + C23727 + C23727 + C152231 * C1557) *
                        C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C152211) *
                      C151849 * C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C2215 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C2216 +
                   ((C23126 * C553 + C23737 + C23737 + C152231 * C577 +
                     C23128 * C554 + C23738 + C23738 + C152232 * C578 +
                     C23130 * C556 + C23739 + C23739 + C23123 * C580) *
                        C152049 * C152183 +
                    (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                     C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                     C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                        C152049 * C152087) *
                       C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C2215 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C2216 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152211) *
                      C152255 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C2216 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C2215 -
                   ((C25144 + C25145 + C25146) * C152049 * C152087 +
                    (C25140 + C25139 + C25138) * C152049 * C152183) *
                       C152211) *
                      C152239 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C2215 -
                   ((C25876 + C25877 + C25878) * C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C2216 +
                   ((C25146 + C25145 + C25144) * C152049 * C152183 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152049 * C152087) *
                       C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C4107 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151954) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C25141 + C25142 + C25143) * C152049 * C152087) *
                        C151954 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C4107) *
                       C151912) *
                      C151826 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151954 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C4107) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C4107 -
                    ((C25664 + C25665 + C25666) * C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151954) *
                       C151912) *
                      C151835 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152049 * C152183 +
                     (C23483 + C23484 + C23485) * C152049 * C152087) *
                        C4107 -
                    ((C24496 + C24497 + C24498) * C152049 * C152087 +
                     (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                      C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                      C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                         C152049 * C152183) *
                        C151954) *
                       C152166 +
                   (((C24498 + C24497 + C24496) * C152049 * C152183 +
                     (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                      C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                      C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                         C152049 * C152087) *
                        C151954 -
                    ((C23486 + C23487 + C23488) * C152049 * C152087 +
                     (C23485 + C23484 + C23483) * C152049 * C152183) *
                        C4107) *
                       C151912) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C151950 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151957 +
                    ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                      C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                      C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                         C152049 * C152183 +
                     (C25138 + C25139 + C25140) * C152049 * C152087) *
                        C4779) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C25141 + C25142 + C25143) * C152049 * C152087) *
                        C151957 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C151950 -
                    ((C25144 + C25145 + C25146) * C152049 * C152087 +
                     (C25140 + C25139 + C25138) * C152049 * C152183) *
                        C4779) *
                       C151912) *
                      C3241 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151957 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C151950 -
                    ((C26754 + C26755 + C26756) * C152049 * C152087 +
                     (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                      C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                      C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                         C152049 * C152183) *
                        C4779) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C151950 -
                    ((C25664 + C25665 + C25666) * C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151957 +
                    ((C26756 + C26755 + C26754) * C152049 * C152183 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152049 * C152087) *
                        C4779) *
                       C151912) *
                      C151832)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C4107 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151954) *
                       C152255 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C25141 + C25142 + C25143) * C152049 * C152087) *
                        C151954 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C4107) *
                       C152239 +
                   (((C23476 + C23475 + C23474) * C152049 * C152183 +
                     (C24869 + C24870 + C24871) * C152049 * C152087) *
                        C4107 -
                    ((C25876 + C25877 + C25878) * C152049 * C152087 +
                     (C25143 + C25142 + C25141) * C152049 * C152183) *
                        C151954) *
                       C152208) *
                      C3241 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151954 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C4107) *
                       C152255 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C4107 -
                    ((C25664 + C25665 + C25666) * C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151954) *
                       C152239 +
                   (((C25666 + C25665 + C25664) * C152049 * C152183 +
                     (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                      C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                      C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                         C152049 * C152087) *
                        C151954 -
                    ((C25356 + C25357 + C25358) * C152049 * C152087 +
                     (C23482 + C23481 + C23480) * C152049 * C152183) *
                        C4107) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C4107 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C152261 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C4107) *
                      C151849 * C152254 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C4107 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C152237 +
                  (((C23126 * C547 + C24149 + C24149 + C152231 * C571 +
                     C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                     C23130 * C557 + C24151 + C24151 + C23123 * C581) *
                        C152049 * C152183 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23954 + C23953 + C23952) * C152049 * C152087 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152049 * C152183) *
                       C4107) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152263 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C152260 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152247 -
                   ((C27166 + C27167 + C27168) * C152049 * C152087 +
                    (C23130 * C2452 + C26440 + C26440 + C23123 * C2468 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23126 * C2454 + C26442 + C26442 + C152231 * C2470) *
                        C152049 * C152183) *
                       C152224) *
                      C151849 * C3241 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C152260 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152263 -
                   ((C26754 + C26755 + C26756) * C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C152247 +
                   ((C23126 * C2453 + C26951 + C26951 + C152231 * C2469 +
                     C23128 * C2452 + C26952 + C26952 + C152232 * C2468 +
                     C23130 * C2451 + C26953 + C26953 + C23123 * C2467) *
                        C152049 * C152183 +
                    (C23126 * C2956 + C26954 + C26954 + C152231 * C2964 +
                     C23128 * C2957 + C26955 + C26955 + C152232 * C2965 +
                     C23130 * C2958 + C26956 + C26956 + C23123 * C2966) *
                        C152049 * C152087) *
                       C152224) *
                      C151849 * C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151950 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151957 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C4779) *
                      C151849 * C151826 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151957 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151950 -
                   ((C26754 + C26755 + C26756) * C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C4779) *
                      C151849 * C151835 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151950 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151957 +
                   ((C23126 * C553 + C23737 + C23737 + C152231 * C577 +
                     C23128 * C554 + C23738 + C23738 + C152232 * C578 +
                     C23130 * C556 + C23739 + C23739 + C23123 * C580) *
                        C152049 * C152183 +
                    (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                     C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                     C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                        C152049 * C152087) *
                       C4779) *
                      C151849 * C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C4107 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C152261 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C24493 + C24494 + C24495) * C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C4107) *
                      C151849 * C152254 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C4107 -
                   ((C24496 + C24497 + C24498) * C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C152237 +
                  (((C23126 * C547 + C24149 + C24149 + C152231 * C571 +
                     C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                     C23130 * C557 + C24151 + C24151 + C23123 * C581) *
                        C152049 * C152183 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23954 + C23953 + C23952) * C152049 * C152087 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152049 * C152183) *
                       C4107) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C4107 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151954) *
                       C152255 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C25141 + C25142 + C25143) * C152049 * C152087) *
                        C151954 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C4107) *
                       C152239 +
                   (((C23476 + C23475 + C23474) * C152049 * C152183 +
                     (C24869 + C24870 + C24871) * C152049 * C152087) *
                        C4107 -
                    ((C25876 + C25877 + C25878) * C152049 * C152087 +
                     (C25143 + C25142 + C25141) * C152049 * C152183) *
                        C151954) *
                       C152208) *
                      C3241 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151954 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C4107) *
                       C152255 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C4107 -
                    ((C25664 + C25665 + C25666) * C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151954) *
                       C152239 +
                   (((C25666 + C25665 + C25664) * C152049 * C152183 +
                     (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                      C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                      C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                         C152049 * C152087) *
                        C151954 -
                    ((C25356 + C25357 + C25358) * C152049 * C152087 +
                     (C23482 + C23481 + C23480) * C152049 * C152183) *
                        C4107) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C152166 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C151912) *
                      C739 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C151912 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C152166) *
                      C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C152166 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C151912) *
                      C741 +
                  (((C23952 + C23953 + C23954) * C152049 * C152183 +
                    (C23126 * C345 + C23943 + C23943 + C152231 * C369 +
                     C23128 * C347 + C23944 + C23944 + C152232 * C371 +
                     C23130 * C349 + C23945 + C23945 + C23123 * C373) *
                        C152049 * C152087) *
                       C151867 * C151912 -
                   ((C23954 + C23953 + C23952) * C152049 * C152087 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152049 * C152183) *
                       C151867 * C152166) *
                      C152212)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C1709 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C1710 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C151867 * C1711 -
                   ((C24872 + C24873 + C24874) * C152049 * C152087 +
                    (C24871 + C24870 + C24869) * C152049 * C152183) *
                       C151867 * C152218) *
                      C152152 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C1710 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C1709 -
                   ((C25356 + C25357 + C25358) * C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C1711 +
                   ((C25358 + C25357 + C25356) * C152049 * C152183 +
                    (C23126 * C1358 + C25347 + C25347 + C152231 * C1374 +
                     C23128 * C1359 + C25348 + C25348 + C152232 * C1375 +
                     C23130 * C1360 + C25349 + C25349 + C23123 * C1376) *
                        C152049 * C152087) *
                       C151867 * C152218) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C152167 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151954) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C23126 * C1538 + C24451 + C24451 + C152231 * C1562 +
                      C23128 * C1537 + C24452 + C24452 + C152232 * C1561 +
                      C23130 * C1536 + C24453 + C24453 + C23123 * C1560) *
                         C152049 * C152087) *
                        C151954 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C152167) *
                       C151912) *
                      C335 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151954 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C152167) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C152167 -
                    ((C23130 * C1535 + C24460 + C24460 + C23123 * C1559 +
                      C23128 * C1536 + C24461 + C24461 + C152232 * C1560 +
                      C23126 * C1537 + C24462 + C24462 + C152231 * C1561) *
                         C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151954) *
                       C151912) *
                      C336 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152049 * C152183 +
                     (C23483 + C23484 + C23485) * C152049 * C152087) *
                        C152167 -
                    ((C24496 + C24497 + C24498) * C152049 * C152087 +
                     (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                      C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                      C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                         C152049 * C152183) *
                        C151954) *
                       C152166 +
                   (((C24498 + C24497 + C24496) * C152049 * C152183 +
                     (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                      C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                      C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                         C152049 * C152087) *
                        C151954 -
                    ((C23486 + C23487 + C23488) * C152049 * C152087 +
                     (C23485 + C23484 + C23483) * C152049 * C152183) *
                        C152167) *
                       C151912) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152167 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C1709 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C151954 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C152167) *
                      C1710 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C152167 -
                   ((C25876 + C25877 + C25878) * C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C151954) *
                      C1711 +
                  (((C25878 + C25877 + C25876) * C152049 * C152183 +
                    (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                     C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                     C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                        C152049 * C152087) *
                       C151954 -
                   ((C24872 + C24873 + C24874) * C152049 * C152087 +
                    (C24871 + C24870 + C24869) * C152049 * C152183) *
                       C152167) *
                      C152218) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C152255 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C152239 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                     C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                     C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C335 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C152239 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C152255 -
                   ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                     C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                     C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                        C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C152208) *
                      C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C152255 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C152239 +
                   ((C23488 + C23487 + C23486) * C152049 * C152183 +
                    (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                     C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                     C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23126 * C341 + C23136 + C23136 + C152231 * C365 +
                    C23128 * C340 + C23137 + C23137 + C152232 * C364 +
                    C23130 * C339 + C23138 + C23138 + C23123 * C363) *
                       C152049 * C152087) *
                      C151867 * C151849 * C129 -
                  ((C23130 * C338 + C23139 + C23139 + C23123 * C362 +
                    C23128 * C339 + C23140 + C23140 + C152232 * C363 +
                    C23126 * C340 + C23141 + C23141 + C152231 * C364) *
                       C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C151849 * C130 +
                  ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152049 * C152183 +
                   (C23126 * C339 + C23148 + C23148 + C152231 * C363 +
                    C23128 * C338 + C23149 + C23149 + C152232 * C362 +
                    C23130 * C346 + C23150 + C23150 + C23123 * C370) *
                       C152049 * C152087) *
                      C151867 * C151849 * C131 -
                  ((C23130 * C348 + C23151 + C23151 + C23123 * C372 +
                    C23128 * C346 + C23152 + C23152 + C152232 * C370 +
                    C23126 * C338 + C23153 + C23153 + C152231 * C362) *
                       C152049 * C152087 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152049 * C152183) *
                      C151867 * C151849 * C132 +
                  ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                    C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                    C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                       C152049 * C152183 +
                   (C23126 * C346 + C23160 + C23160 + C152231 * C370 +
                    C23128 * C348 + C23161 + C23161 + C152232 * C372 +
                    C23130 * C743 + C23162 + C23162 + C23123 * C745) *
                       C152049 * C152087) *
                      C151867 * C151849 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152256 -
                   ((C23130 * C1085 + C23707 + C23707 + C23123 * C1097 +
                     C23128 * C1084 + C23708 + C23708 + C152232 * C1096 +
                     C23126 * C1083 + C23709 + C23709 + C152231 * C1095) *
                        C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C152241 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C23126 * C1534 + C23716 + C23716 + C152231 * C1558 +
                     C23128 * C1533 + C23717 + C23717 + C152232 * C1557 +
                     C23130 * C1532 + C23718 + C23718 + C23123 * C1556) *
                        C152049 * C152087) *
                       C152211) *
                      C151849 * C335 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C23126 * C1084 + C23722 + C23722 + C152231 * C1096 +
                     C23128 * C1085 + C23723 + C23723 + C152232 * C1097 +
                     C23130 * C1086 + C23724 + C23724 + C23123 * C1098) *
                        C152049 * C152087) *
                       C152241 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152256 -
                   ((C23130 * C1531 + C23725 + C23725 + C23123 * C1555 +
                     C23128 * C1532 + C23726 + C23726 + C152232 * C1556 +
                     C23126 * C1533 + C23727 + C23727 + C152231 * C1557) *
                        C152049 * C152087 +
                    (C23130 * C554 + C23728 + C23728 + C23123 * C578 +
                     C23128 * C553 + C23729 + C23729 + C152232 * C577 +
                     C23126 * C552 + C23730 + C23730 + C152231 * C576) *
                        C152049 * C152183) *
                       C152211) *
                      C151849 * C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C152256 -
                   ((C23130 * C1087 + C23731 + C23731 + C23123 * C1099 +
                     C23128 * C1086 + C23732 + C23732 + C152232 * C1098 +
                     C23126 * C1085 + C23733 + C23733 + C152231 * C1097) *
                        C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C152241 +
                   ((C23126 * C553 + C23737 + C23737 + C152231 * C577 +
                     C23128 * C554 + C23738 + C23738 + C152232 * C578 +
                     C23130 * C556 + C23739 + C23739 + C23123 * C580) *
                        C152049 * C152183 +
                    (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                     C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                     C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                        C152049 * C152087) *
                       C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                     C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                     C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C1260 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C1259 -
                   ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                     C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                     C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                        C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152049 * C152183 +
                    (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                     C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                     C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C1347 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151867 * C1349 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152049 * C152183 +
                   (C23126 * C7816 + C24854 + C24854 + C152231 * C7824 +
                    C23128 * C7815 + C24855 + C24855 + C152232 * C7823 +
                    C23130 * C8335 + C24856 + C24856 + C23123 * C8337) *
                       C152049 * C152087) *
                      C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152256 -
                   ((C24490 + C24491 + C24492) * C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C152241 +
                   ((C23126 * C551 + C23713 + C23713 + C152231 * C575 +
                     C23128 * C552 + C23714 + C23714 + C152232 * C576 +
                     C23130 * C553 + C23715 + C23715 + C23123 * C577) *
                        C152049 * C152183 +
                    (C25138 + C25139 + C25140) * C152049 * C152087) *
                       C152211) *
                      C1259 +
                  (((C24492 + C24491 + C24490) * C152049 * C152183 +
                    (C25141 + C25142 + C25143) * C152049 * C152087) *
                       C152241 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C152256 -
                   ((C25144 + C25145 + C25146) * C152049 * C152087 +
                    (C25140 + C25139 + C25138) * C152049 * C152183) *
                       C152211) *
                      C1260 +
                  (((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C24869 + C24870 + C24871) * C152049 * C152087) *
                       C152256 -
                   ((C23130 * C2055 + C25114 + C25114 + C23123 * C2063 +
                     C23128 * C2054 + C25115 + C25115 + C152232 * C2062 +
                     C23126 * C2053 + C25116 + C25116 + C152231 * C2061) *
                        C152049 * C152087 +
                    (C25143 + C25142 + C25141) * C152049 * C152183) *
                       C152241 +
                   ((C25146 + C25145 + C25144) * C152049 * C152183 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152049 * C152087) *
                       C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C152167 -
                   ((C23130 * C1085 + C23707 + C23707 + C23123 * C1097 +
                     C23128 * C1084 + C23708 + C23708 + C152232 * C1096 +
                     C23126 * C1083 + C23709 + C23709 + C152231 * C1095) *
                        C152049 * C152087 +
                    (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C739 +
                  (((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                        C152049 * C152183 +
                    (C23126 * C1084 + C23722 + C23722 + C152231 * C1096 +
                     C23128 * C1085 + C23723 + C23723 + C152232 * C1097 +
                     C23130 * C1086 + C23724 + C23724 + C23123 * C1098) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C152167) *
                      C151849 * C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C152167 -
                   ((C23130 * C1087 + C23731 + C23731 + C23123 * C1099 +
                     C23128 * C1086 + C23732 + C23732 + C152232 * C1098 +
                     C23126 * C1085 + C23733 + C23733 + C152231 * C1097) *
                        C152049 * C152087 +
                    (C23130 * C555 + C23734 + C23734 + C23123 * C579 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23126 * C548 + C23736 + C23736 + C152231 * C572) *
                        C152049 * C152183) *
                       C151954) *
                      C151849 * C741 +
                  (((C23126 * C547 + C24149 + C24149 + C152231 * C571 +
                     C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                     C23130 * C557 + C24151 + C24151 + C23123 * C581) *
                        C152049 * C152183 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152049 * C152087) *
                       C151954 -
                   ((C23954 + C23953 + C23952) * C152049 * C152087 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152049 * C152183) *
                       C152167) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152049 * C152183 +
                     (C23471 + C23472 + C23473) * C152049 * C152087) *
                        C152167 -
                    ((C24490 + C24491 + C24492) * C152049 * C152087 +
                     (C23130 * C548 + C23710 + C23710 + C23123 * C572 +
                      C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                      C23126 * C550 + C23712 + C23712 + C152231 * C574) *
                         C152049 * C152183) *
                        C151954) *
                       C1259 +
                   (((C24492 + C24491 + C24490) * C152049 * C152183 +
                     (C25141 + C25142 + C25143) * C152049 * C152087) *
                        C151954 -
                    ((C23474 + C23475 + C23476) * C152049 * C152087 +
                     (C23473 + C23472 + C23471) * C152049 * C152183) *
                        C152167) *
                       C1260 +
                   (((C23476 + C23475 + C23474) * C152049 * C152183 +
                     (C24869 + C24870 + C24871) * C152049 * C152087) *
                        C152167 -
                    ((C23130 * C2055 + C25114 + C25114 + C23123 * C2063 +
                      C23128 * C2054 + C25115 + C25115 + C152232 * C2062 +
                      C23126 * C2053 + C25116 + C25116 + C152231 * C2061) *
                         C152049 * C152087 +
                     (C25143 + C25142 + C25141) * C152049 * C152183) *
                        C151954) *
                       C152208) *
                      C152152 +
                  ((((C23126 * C549 + C23719 + C23719 + C152231 * C573 +
                      C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                      C23130 * C547 + C23721 + C23721 + C23123 * C571) *
                         C152049 * C152183 +
                     (C24493 + C24494 + C24495) * C152049 * C152087) *
                        C151954 -
                    ((C23479 + C23478 + C23477) * C152049 * C152087 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152049 * C152183) *
                        C152167) *
                       C1259 +
                   (((C23477 + C23478 + C23479) * C152049 * C152183 +
                     (C23480 + C23481 + C23482) * C152049 * C152087) *
                        C152167 -
                    ((C25664 + C25665 + C25666) * C152049 * C152087 +
                     (C24495 + C24494 + C24493) * C152049 * C152183) *
                        C151954) *
                       C1260 +
                   (((C25666 + C25665 + C25664) * C152049 * C152183 +
                     (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                      C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                      C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                         C152049 * C152087) *
                        C151954 -
                    ((C25356 + C25357 + C25358) * C152049 * C152087 +
                     (C23482 + C23481 + C23480) * C152049 * C152183) *
                        C152167) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23126 * C341 + C23136 + C23136 + C152231 * C365 +
                    C23128 * C340 + C23137 + C23137 + C152232 * C364 +
                    C23130 * C339 + C23138 + C23138 + C23123 * C363) *
                       C152049 * C152087) *
                      C151867 * C151849 * C129 -
                  ((C23130 * C338 + C23139 + C23139 + C23123 * C362 +
                    C23128 * C339 + C23140 + C23140 + C152232 * C363 +
                    C23126 * C340 + C23141 + C23141 + C152231 * C364) *
                       C152049 * C152087 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152049 * C152183) *
                      C151867 * C151849 * C130 +
                  ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152049 * C152183 +
                   (C23126 * C339 + C23148 + C23148 + C152231 * C363 +
                    C23128 * C338 + C23149 + C23149 + C152232 * C362 +
                    C23130 * C346 + C23150 + C23150 + C23123 * C370) *
                       C152049 * C152087) *
                      C151867 * C151849 * C131 -
                  ((C23130 * C348 + C23151 + C23151 + C23123 * C372 +
                    C23128 * C346 + C23152 + C23152 + C152232 * C370 +
                    C23126 * C338 + C23153 + C23153 + C152231 * C362) *
                       C152049 * C152087 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152049 * C152183) *
                      C151867 * C151849 * C132 +
                  ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                    C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                    C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                       C152049 * C152183 +
                   (C23126 * C346 + C23160 + C23160 + C152231 * C370 +
                    C23128 * C348 + C23161 + C23161 + C152232 * C372 +
                    C23130 * C743 + C23162 + C23162 + C23123 * C745) *
                       C152049 * C152087) *
                      C151867 * C151849 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C152255 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C152239 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                     C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                     C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C335 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C152239 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C152255 -
                   ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                     C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                     C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                        C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C152208) *
                      C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C152255 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C152239 +
                   ((C23488 + C23487 + C23486) * C152049 * C152183 +
                    (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                     C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                     C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152049 * C152183 +
                    (C23471 + C23472 + C23473) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23474 + C23475 + C23476) * C152049 * C152087 +
                    (C23473 + C23472 + C23471) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152049 * C152183 +
                    (C23126 * C1356 + C23396 + C23396 + C152231 * C1372 +
                     C23128 * C1355 + C23397 + C23397 + C152232 * C1371 +
                     C23130 * C1354 + C23398 + C23398 + C23123 * C1370) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152049 * C152183 +
                    (C23480 + C23481 + C23482) * C152049 * C152087) *
                       C151867 * C1260 -
                   ((C23479 + C23478 + C23477) * C152049 * C152087 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152049 * C152183) *
                       C151867 * C1259 -
                   ((C23130 * C1353 + C23414 + C23414 + C23123 * C1369 +
                     C23128 * C1354 + C23415 + C23415 + C152232 * C1370 +
                     C23126 * C1355 + C23416 + C23416 + C152231 * C1371) *
                        C152049 * C152087 +
                    (C23482 + C23481 + C23480) * C152049 * C152183) *
                       C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152049 * C152183 +
                    (C23483 + C23484 + C23485) * C152049 * C152087) *
                       C151867 * C1259 -
                   ((C23486 + C23487 + C23488) * C152049 * C152087 +
                    (C23485 + C23484 + C23483) * C152049 * C152183) *
                       C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152049 * C152183 +
                    (C23126 * C1354 + C23432 + C23432 + C152231 * C1370 +
                     C23128 * C1353 + C23433 + C23433 + C152232 * C1369 +
                     C23130 * C1715 + C23434 + C23434 + C23123 * C1717) *
                        C152049 * C152087) *
                       C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152049 * C152183 +
                   (C23471 + C23472 + C23473) * C152049 * C152087) *
                      C151867 * C1347 -
                  ((C23474 + C23475 + C23476) * C152049 * C152087 +
                   (C23473 + C23472 + C23471) * C152049 * C152183) *
                      C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152049 * C152183 +
                   (C24869 + C24870 + C24871) * C152049 * C152087) *
                      C151867 * C1349 -
                  ((C24872 + C24873 + C24874) * C152049 * C152087 +
                   (C24871 + C24870 + C24869) * C152049 * C152183) *
                      C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152049 * C152183 +
                   (C23126 * C7816 + C24854 + C24854 + C152231 * C7824 +
                    C23128 * C7815 + C24855 + C24855 + C152232 * C7823 +
                    C23130 * C8335 + C24856 + C24856 + C23123 * C8337) *
                       C152049 * C152087) *
                      C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C151908 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C151915 +
           ((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C3585) *
              C151826 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C151915 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C151908 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            (C42951 * C152113 + C6445 * C152184) * C152183) *
               C151867 * C3585) *
              C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151867 * C151908 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C151915 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C152167 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C151908 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C152167) *
               C151915 +
           (((C6444 * C152184 + C42305 * C152113) * C152183 +
             ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
                C152167 -
            (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
             (C42306 * C152113 + C8092 * C152184) * C152183) *
                C151954) *
               C3585) *
              C3241 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C152167) *
               C151908 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C152167 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151915 +
           (((C8646 * C152184 + (C9774 + C9773) * C152113) * C152183 +
             ((C8659 + C8658) * C152184 +
              (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
               C9764 + C9764 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
             (C42951 * C152113 + C6445 * C152184) * C152183) *
                C152167) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C152262 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C152258 +
           ((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152244 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            (C43210 * C152113 + C7828 * C152184) * C152183) *
               C151867 * C152218) *
              C3241 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C152258 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C152262 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            (C42951 * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152244 +
           ((C8339 * C152184 + (C8659 + C8658) * C152113) * C152183 +
            ((C8352 + C8351) * C152184 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C3101 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C151912) *
              C152261 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C151912 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C3101) *
              C152254 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151867 * C3101 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C151912) *
              C152237 +
          ((((C6916 + C6917) * C152184 + (C40910 + C40911) * C152113) *
                C152183 +
            ((C6918 + C6919) * C152184 +
             (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
              C7119 + C7119 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C152256 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C152241 +
            ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
             (C42304 * C152184 + C18559 * C152113) * C152087) *
                C152211) *
               C3101 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C152241 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C152256 -
            (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
             (C44856 * C152113 + C16568 * C152184) * C152183) *
                C152211) *
               C151912) *
              C3241 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C152241 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C152256 -
            (((C18147 + C18148) * C152113 + C44339 * C152184) * C152087 +
             ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
                C152211) *
               C3101 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C152256 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C152241 +
            ((C18136 * C152184 + (C18148 + C18147) * C152113) * C152183 +
             ((C9774 + C9773) * C152184 +
              (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
               C9979 + C9979 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C152167 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C3101 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C152167) *
               C151912) *
              C151826 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C152167) *
               C3101 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C152167 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151912) *
              C151835 +
          (((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
               C6107 + C6107 + C151795 * C161) *
                  C152184 +
              (C15287 + C15288) * C152113) *
                 C152183 +
             ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
                C152167 -
            (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
             ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                 C152183) *
                C151954) *
               C3101 +
           (((C41560 * C152184 + (C16008 + C16009) * C152113) * C152183 +
             ((C7473 + C7472) * C152184 +
              (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
               C6703 + C6703 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
             (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
                C152167) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C3101 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C151912) *
              C152261 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C151912 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C3101) *
              C152254 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151867 * C3101 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C151912) *
              C152237 +
          ((((C6916 + C6917) * C152184 + (C40910 + C40911) * C152113) *
                C152183 +
            ((C6918 + C6919) * C152184 +
             (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
              C7119 + C7119 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C152262 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C152258 +
           ((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152244 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            (C43210 * C152113 + C7828 * C152184) * C152183) *
               C151867 * C152218) *
              C3241 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C152258 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C152262 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            (C42951 * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152244 +
           ((C8339 * C152184 + (C8659 + C8658) * C152113) * C152183 +
            ((C8352 + C8351) * C152184 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C4107 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C151908 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C4107) *
               C151915 +
           (((C6444 * C152184 + C42305 * C152113) * C152183 +
             ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
                C4107 -
            (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
             (C42306 * C152113 + C8092 * C152184) * C152183) *
                C151954) *
               C3585) *
              C152152 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C4107) *
               C151908 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C4107 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151915 +
           (((C8646 * C152184 + (C9774 + C9773) * C152113) * C152183 +
             ((C8659 + C8658) * C152184 +
              (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
               C9764 + C9764 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
             (C42951 * C152113 + C6445 * C152184) * C152183) *
                C4107) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151950 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151957 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C4779) *
              C151908 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C151957 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151950 -
           (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
            (C44856 * C152113 + C16568 * C152184) * C152183) *
               C4779) *
              C151915 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151950 -
           (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C151957 +
           ((C8140 * C152184 + (C10199 + C10198) * C152113) * C152183 +
            ((C8139 + C8138) * C152184 +
             (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
              C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C4779) *
              C3585) *
         C151821) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C4107 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C152262 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C151954 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C4107) *
              C152258 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C4107 -
           (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C151954) *
              C152244 +
          (((C8860 * C152184 + (C8139 + C8138) * C152113) * C152183 +
            ((C8873 + C8872) * C152184 +
             (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
              C8114 + C8114 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            (C43210 * C152113 + C7828 * C152184) * C152183) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C4107 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C3101 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C4107) *
               C151912) *
              C152252 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C4107) *
               C3101 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C4107 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151912) *
              C152235 +
          (((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
               C6107 + C6107 + C151795 * C161) *
                  C152184 +
              (C15287 + C15288) * C152113) *
                 C152183 +
             ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
                C4107 -
            (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
             ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                 C152183) *
                C151954) *
               C3101 +
           (((C41560 * C152184 + (C16008 + C16009) * C152113) * C152183 +
             ((C7473 + C7472) * C152184 +
              (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
               C6703 + C6703 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
             (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C152263 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C152260 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152247 -
           (((C18570 + C18571) * C152113 + C44856 * C152184) * C152087 +
            ((C17839 + C17838) * C152113 + C17817 * C152184) * C152183) *
               C152224) *
              C3101 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C152260 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C152263 -
           (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
            (C44856 * C152113 + C16568 * C152184) * C152183) *
               C152247 +
           ((C18559 * C152184 + (C18571 + C18570) * C152113) * C152183 +
            ((C10199 + C10198) * C152184 +
             (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
              C9461 + C9461 + C151795 * C9448) *
                 C152113) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C151950 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151957 +
            ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
             (C42304 * C152184 + C18559 * C152113) * C152087) *
                C4779) *
               C3101 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151957 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C151950 -
            (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
             (C44856 * C152113 + C16568 * C152184) * C152183) *
                C4779) *
               C151912) *
              C152152 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151957 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C151950 -
            (((C18147 + C18148) * C152113 + C44339 * C152184) * C152087 +
             ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
                C4779) *
               C3101 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C151950 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151957 +
            ((C18136 * C152184 + (C18148 + C18147) * C152113) * C152183 +
             ((C9774 + C9773) * C152184 +
              (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
               C9979 + C9979 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C4107 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C3101 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C4107) *
               C151912) *
              C152252 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C4107) *
               C3101 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C4107 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151912) *
              C152235 +
          (((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
               C6107 + C6107 + C151795 * C161) *
                  C152184 +
              (C15287 + C15288) * C152113) *
                 C152183 +
             ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
                C4107 -
            (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
             ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                 C152183) *
                C151954) *
               C3101 +
           (((C41560 * C152184 + (C16008 + C16009) * C152113) * C152183 +
             ((C7473 + C7472) * C152184 +
              (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
               C6703 + C6703 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
             (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C4107 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C152262 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C151954 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C4107) *
              C152258 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C4107 -
           (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C151954) *
              C152244 +
          (((C8860 * C152184 + (C8139 + C8138) * C152113) * C152183 +
            ((C8873 + C8872) * C152184 +
             (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
              C8114 + C8114 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            (C43210 * C152113 + C7828 * C152184) * C152183) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C1709 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C1710 +
           ((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C1711 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            ((C8137 + C8136) * C152113 + C7828 * C152184) * C152183) *
               C151867 * C152218) *
              C152152 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C1710 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C1709 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C1711 +
           ((C8339 * C152184 + (C8659 + C8658) * C152113) * C152183 +
            ((C8352 + C8351) * C152184 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C151867 * C152166 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            ((C7466 + C7467) * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C151912) *
              C739 +
          ((((C6432 + C6433) * C152184 + (C7468 + C7469) * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C151912 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C152166) *
              C740 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C151867 * C152166 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            ((C7474 + C7475) * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C151912) *
              C741 +
          ((((C6916 + C6917) * C152184 + (C40910 + C40911) * C152113) *
                C152183 +
            ((C6918 + C6919) * C152184 +
             (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
              C7119 + C7119 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C2215 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C2216 +
            ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
             (C42304 * C152184 + C18559 * C152113) * C152087) *
                C152211) *
               C152166 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C2216 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C2215 -
            (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
             ((C10200 + C10201) * C152113 + C16568 * C152184) * C152183) *
                C152211) *
               C151912) *
              C152152 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C2216 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C2215 -
            (((C18147 + C18148) * C152113 + C44339 * C152184) * C152087 +
             ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
                C152211) *
               C152166 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C2215 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C2216 +
            ((C18136 * C152184 + (C18148 + C18147) * C152113) * C152183 +
             ((C9774 + C9773) * C152184 +
              (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
               C9979 + C9979 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C152167 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C1709 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C151954 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C152167) *
              C1710 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C152167 -
           (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C151954) *
              C1711 +
          (((C8860 * C152184 + (C8139 + C8138) * C152113) * C152183 +
            ((C8873 + C8872) * C152184 +
             (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
              C8114 + C8114 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            (C43210 * C152113 + C7828 * C152184) * C152183) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C152167 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C152166 +
           (((C41556 * C152184 + (C8132 + C8133) * C152113) * C152183 +
             ((C7465 + C7464) * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C152167) *
               C151912) *
              C335 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C152167) *
               C152166 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C152167 -
            (((C9773 + C9774) * C152113 + (C7471 + C7470) * C152184) * C152087 +
             ((C9775 + C9776) * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151912) *
              C336 +
          (((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
               C6107 + C6107 + C151795 * C161) *
                  C152184 +
              (C15287 + C15288) * C152113) *
                 C152183 +
             ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
                C152167 -
            (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
             ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                 C152183) *
                C151954) *
               C152166 +
           (((C41560 * C152184 + (C16008 + C16009) * C152113) * C152183 +
             ((C7473 + C7472) * C152184 +
              (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
               C6703 + C6703 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
             (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C2814 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C2815 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C2816 -
           (((C18570 + C18571) * C152113 + C44856 * C152184) * C152087 +
            ((C17839 + C17838) * C152113 + C17817 * C152184) * C152183) *
               C152224) *
              C152166 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C2815 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C2814 -
           (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
            (C44856 * C152113 + C16568 * C152184) * C152183) *
               C2816 +
           ((C18559 * C152184 + (C18571 + C18570) * C152113) * C152183 +
            ((C10199 + C10198) * C152184 +
             (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
              C9461 + C9461 + C151795 * C9448) *
                 C152113) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
                 C6095 + C6095 + C151795 * C159) *
                    C152184 +
                (C15275 + C15276) * C152113) *
                   C152183 +
               ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) *
                   C152087) *
                  C151867 * C151849 * C129 -
              (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) *
                   C152087 +
               ((C15282 + C15281) * C152113 +
                (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
                 C6105 + C6105 + C6084 * C159) *
                    C152184) *
                   C152183) *
                  C151867 * C151849 * C130 +
              (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
                 C6107 + C6107 + C151795 * C161) *
                    C152184 +
                (C15287 + C15288) * C152113) *
                   C152183 +
               ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) *
                   C152087) *
                  C151867 * C151849 * C131 -
              (((C6091 * C1087 + C7117 + C7117 + C151795 * C1099 +
                 C6089 * C1086 + C7116 + C7116 + C6084 * C1098) *
                    C152113 +
                (C6917 + C6916) * C152184) *
                   C152087 +
               ((C15705 + C15704) * C152113 +
                (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
                 C6117 + C6117 + C6084 * C161) *
                    C152184) *
                   C152183) *
                  C151867 * C151849 * C132 +
              (((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 +
                 C6119 + C6119 + C151795 * C163) *
                    C152184 +
                (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
                 C14758 + C14758 + C151795 * C581) *
                    C152113) *
                   C152183 +
               ((C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 +
                 C6121 + C6121 + C151795 * C372) *
                    C152184 +
                (C6089 * C1087 + C40062 + C40062 + C6084 * C1099 +
                 C6091 * C1088 + C40063 + C40063 + C151795 * C1100) *
                    C152113) *
                   C152087) *
                  C151867 * C151849 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
                  C6095 + C6095 + C151795 * C159) *
                     C152184 +
                 (C15275 + C15276) * C152113) *
                    C152183 +
                ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) *
                    C152087) *
                   C151867 * C152255 -
               ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
                ((C7466 + C7467) * C152113 + (C6427 + C6426) * C152184) *
                    C152183) *
                   C151867 * C152239 +
               ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
                ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
                   C151867 * C152208) *
                  C335 +
              ((((C6432 + C6433) * C152184 + (C7468 + C7469) * C152113) *
                    C152183 +
                ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                   C151867 * C152239 -
               (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) *
                    C152087 +
                ((C15282 + C15281) * C152113 +
                 (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
                  C6105 + C6105 + C6084 * C159) *
                     C152184) *
                    C152183) *
                   C151867 * C152255 -
               (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) *
                    C152087 +
                ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
                   C151867 * C152208) *
                  C336 +
              ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
                  C6107 + C6107 + C151795 * C161) *
                     C152184 +
                 (C15287 + C15288) * C152113) *
                    C152183 +
                ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) *
                    C152087) *
                   C151867 * C152255 -
               (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) *
                    C152087 +
                ((C7474 + C7475) * C152113 + (C6439 + C6438) * C152184) *
                    C152183) *
                   C151867 * C152239 +
               ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
                ((C6443 + C6442) * C152184 +
                 (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 +
                  C6091 * C2056 + C7439 + C7439 + C151795 * C2064) *
                     C152113) *
                    C152087) *
                   C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C152256 -
           ((C16568 * C152113 + (C7466 + C7467) * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C152241 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            ((C8132 + C8133) * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C151849 * C335 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            ((C7468 + C7469) * C152184 + C18136 * C152113) * C152087) *
               C152241 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C152256 -
           (((C18147 + C18148) * C152113 + (C9775 + C9776) * C152184) *
                C152087 +
            ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
               C152211) *
              C151849 * C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C152256 -
           (((C16009 + C16008) * C152113 + (C7474 + C7475) * C152184) *
                C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C152241 +
           ((C15295 * C152184 + (C15292 + C15291) * C152113) * C152183 +
            ((C16008 + C16009) * C152184 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C1259 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C1260 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C1259 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151867 * C1259 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
              C151867 * C1347 -
          ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
           (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
              C151867 * C1348 +
          ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
           ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
              C151867 * C1349 -
          (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
           ((C8137 + C8136) * C152113 + C7828 * C152184) * C152183) *
              C151867 * C1350 +
          ((C7854 * C152184 + (C8873 + C8872) * C152113) * C152183 +
           ((C7853 + C7852) * C152184 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C152256 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C152241 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C1259 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C152241 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C152256 -
           (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
            ((C10200 + C10201) * C152113 + C16568 * C152184) * C152183) *
               C152211) *
              C1260 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C152256 -
           (((C8138 + C8139) * C152113 + (C8137 + C8136) * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C152241 +
           ((C8140 * C152184 + (C10199 + C10198) * C152113) * C152183 +
            ((C8139 + C8138) * C152184 +
             (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
              C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C2215 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C2216 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C151849 * C152252 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            (C41558 * C152184 + C18136 * C152113) * C152087) *
               C2216 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C2215 -
           (((C18147 + C18148) * C152113 + (C9775 + C9776) * C152184) *
                C152087 +
            ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
               C152211) *
              C151849 * C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C2215 -
           (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C2216 +
           ((C15295 * C152184 + (C15292 + C15291) * C152113) * C152183 +
            ((C16008 + C16009) * C152184 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C2215 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C2216 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C152255 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C2216 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C2215 -
           (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
            ((C10200 + C10201) * C152113 + C16568 * C152184) * C152183) *
               C152211) *
              C152239 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C2215 -
           (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C2216 +
           ((C8140 * C152184 + (C10199 + C10198) * C152113) * C152183 +
            ((C8139 + C8138) * C152184 +
             (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
              C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
              C2446 -
          ((C16568 * C152113 + C41557 * C152184) * C152087 +
           ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
               C152183) *
              C2447 +
          ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
           (C42304 * C152184 + C18559 * C152113) * C152087) *
              C2448 -
          (((C18570 + C18571) * C152113 + (C10200 + C10201) * C152184) *
               C152087 +
           ((C17839 + C17838) * C152113 + C17817 * C152184) * C152183) *
              C2449 +
          ((C17842 * C152184 + (C17841 + C17840) * C152113) * C152183 +
           ((C18571 + C18570) * C152184 +
            (C6089 * C18552 + C18564 + C18564 + C6084 * C18556 +
             C6091 * C18553 + C18565 + C18565 + C151795 * C18557) *
                C152113) *
               C152087) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C152167 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C1259 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C152167) *
               C1260 +
           (((C6444 * C152184 + C42305 * C152113) * C152183 +
             ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
                C152167 -
            (((C8138 + C8139) * C152113 + (C8137 + C8136) * C152184) * C152087 +
             (C42306 * C152113 + C8092 * C152184) * C152183) *
                C151954) *
               C152208) *
              C152152 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C152167) *
               C1259 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C152167 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             ((C9775 + C9776) * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C1260 +
           (((C8646 * C152184 + (C9774 + C9773) * C152113) * C152183 +
             ((C8659 + C8658) * C152184 +
              (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
               C9764 + C9764 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
             (C42951 * C152113 + C6445 * C152184) * C152183) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C152167 -
           ((C16568 * C152113 + (C7466 + C7467) * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C151849 * C739 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            ((C7468 + C7469) * C152184 + C18136 * C152113) * C152087) *
               C151954 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C152167) *
              C151849 * C740 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C152167 -
           (((C16009 + C16008) * C152113 + (C7474 + C7475) * C152184) *
                C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C151954) *
              C151849 * C741 +
          ((((C15704 + C15705) * C152184 + (C15706 + C15707) * C152113) *
                C152183 +
            ((C40910 + C40911) * C152184 +
             (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
              C15491 + C15491 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C2814 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C2815 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C2816 -
           (((C18570 + C18571) * C152113 + (C10200 + C10201) * C152184) *
                C152087 +
            ((C17839 + C17838) * C152113 + C17817 * C152184) * C152183) *
               C152224) *
              C151849 * C152152 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            (C41558 * C152184 + C18136 * C152113) * C152087) *
               C2815 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C2814 -
           (((C18147 + C18148) * C152113 + C44339 * C152184) * C152087 +
            ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
               C2816 +
           ((C18346 * C152184 + (C18358 + C18357) * C152113) * C152183 +
            ((C18148 + C18147) * C152184 +
             (C6089 * C9434 + C18141 + C18141 + C6084 * C9446 + C6091 * C18132 +
              C18142 + C18142 + C151795 * C18134) *
                 C152113) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C151867 * C152255 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            ((C7466 + C7467) * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C152239 +
           ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C6432 + C6433) * C152184 + (C7468 + C7469) * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C152239 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C152255 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C151867 * C152255 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            ((C7474 + C7475) * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C152239 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
              C151867 * C151849 * C129 -
          (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
           ((C15282 + C15281) * C152113 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152184) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152184 +
            (C15287 + C15288) * C152113) *
               C152183 +
           ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
              C151867 * C151849 * C131 -
          (((C6091 * C1087 + C7117 + C7117 + C151795 * C1099 + C6089 * C1086 +
             C7116 + C7116 + C6084 * C1098) *
                C152113 +
            (C6917 + C6916) * C152184) *
               C152087 +
           ((C15705 + C15704) * C152113 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152184) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 +
             C6119 + C6119 + C151795 * C163) *
                C152184 +
            (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
             C14758 + C14758 + C151795 * C581) *
                C152113) *
               C152183 +
           ((C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 +
             C6121 + C6121 + C151795 * C372) *
                C152184 +
            (C6089 * C1087 + C40062 + C40062 + C6084 * C1099 + C6091 * C1088 +
             C40063 + C40063 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C1259 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C1260 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C1259 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151867 * C1259 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
              C151867 * C1347 -
          ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
           (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
              C151867 * C1348 +
          ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
           ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
              C151867 * C1349 -
          (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
           ((C8137 + C8136) * C152113 + C7828 * C152184) * C152183) *
              C151867 * C1350 +
          ((C7854 * C152184 + (C8873 + C8872) * C152113) * C152183 +
           ((C7853 + C7852) * C152184 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C2215 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C2216 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C151849 * C152252 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            (C41558 * C152184 + C18136 * C152113) * C152087) *
               C2216 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C2215 -
           (((C18147 + C18148) * C152113 + (C9775 + C9776) * C152184) *
                C152087 +
            ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
               C152211) *
              C151849 * C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C2215 -
           (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C2216 +
           ((C15295 * C152184 + (C15292 + C15291) * C152113) * C152183 +
            ((C16008 + C16009) * C152184 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C2215 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C2216 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C152255 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C2216 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C2215 -
           (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
            ((C10200 + C10201) * C152113 + C16568 * C152184) * C152183) *
               C152211) *
              C152239 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C2215 -
           (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C2216 +
           ((C8140 * C152184 + (C10199 + C10198) * C152113) * C152183 +
            ((C8139 + C8138) * C152184 +
             (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
              C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C4107 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C152166 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C4107) *
               C151912) *
              C151826 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C4107) *
               C152166 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C4107 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151912) *
              C151835 +
          (((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
               C6107 + C6107 + C151795 * C161) *
                  C152184 +
              (C15287 + C15288) * C152113) *
                 C152183 +
             ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
                C4107 -
            (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
             ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                 C152183) *
                C151954) *
               C152166 +
           (((C41560 * C152184 + (C16008 + C16009) * C152113) * C152183 +
             ((C7473 + C7472) * C152184 +
              (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
               C6703 + C6703 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
             (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
                C4107) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C151950 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151957 +
            ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
             (C42304 * C152184 + C18559 * C152113) * C152087) *
                C4779) *
               C152166 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151957 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C151950 -
            (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
             (C44856 * C152113 + C16568 * C152184) * C152183) *
                C4779) *
               C151912) *
              C3241 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151957 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C151950 -
            (((C18147 + C18148) * C152113 + C44339 * C152184) * C152087 +
             ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
                C4779) *
               C152166 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C151950 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151957 +
            ((C18136 * C152184 + (C18148 + C18147) * C152113) * C152183 +
             ((C9774 + C9773) * C152184 +
              (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
               C9979 + C9979 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C4107 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C152255 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C4107) *
               C152239 +
           (((C6444 * C152184 + C42305 * C152113) * C152183 +
             ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
                C4107 -
            (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
             (C42306 * C152113 + C8092 * C152184) * C152183) *
                C151954) *
               C152208) *
              C3241 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C4107) *
               C152255 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C4107 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C152239 +
           (((C8646 * C152184 + (C9774 + C9773) * C152113) * C152183 +
             ((C8659 + C8658) * C152184 +
              (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
               C9764 + C9764 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
             (C42951 * C152113 + C6445 * C152184) * C152183) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C4107 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C151849 * C152261 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            (C41558 * C152184 + C18136 * C152113) * C152087) *
               C151954 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C4107) *
              C151849 * C152254 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C4107 -
           (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C151954) *
              C151849 * C152237 +
          ((((C15704 + C15705) * C152184 + (C15706 + C15707) * C152113) *
                C152183 +
            ((C40910 + C40911) * C152184 +
             (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
              C15491 + C15491 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C152263 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C152260 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152247 -
           (((C18570 + C18571) * C152113 + C44856 * C152184) * C152087 +
            ((C17839 + C17838) * C152113 + C17817 * C152184) * C152183) *
               C152224) *
              C151849 * C3241 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            (C41558 * C152184 + C18136 * C152113) * C152087) *
               C152260 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C152263 -
           (((C18147 + C18148) * C152113 + C44339 * C152184) * C152087 +
            ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
               C152247 +
           ((C18346 * C152184 + (C18358 + C18357) * C152113) * C152183 +
            ((C18148 + C18147) * C152184 +
             (C6089 * C9434 + C18141 + C18141 + C6084 * C9446 + C6091 * C18132 +
              C18142 + C18142 + C151795 * C18134) *
                 C152113) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151950 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151957 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C4779) *
              C151849 * C151826 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            (C41558 * C152184 + C18136 * C152113) * C152087) *
               C151957 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151950 -
           (((C18147 + C18148) * C152113 + C44339 * C152184) * C152087 +
            ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
               C4779) *
              C151849 * C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151950 -
           (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C151957 +
           ((C15295 * C152184 + (C15292 + C15291) * C152113) * C152183 +
            ((C16008 + C16009) * C152184 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C4779) *
              C151849 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C4107 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C151849 * C152261 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            (C41558 * C152184 + C18136 * C152113) * C152087) *
               C151954 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C4107) *
              C151849 * C152254 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C4107 -
           (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C151954) *
              C151849 * C152237 +
          ((((C15704 + C15705) * C152184 + (C15706 + C15707) * C152113) *
                C152183 +
            ((C40910 + C40911) * C152184 +
             (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
              C15491 + C15491 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C4107 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C152255 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C4107) *
               C152239 +
           (((C6444 * C152184 + C42305 * C152113) * C152183 +
             ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
                C4107 -
            (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
             (C42306 * C152113 + C8092 * C152184) * C152183) *
                C151954) *
               C152208) *
              C3241 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C4107) *
               C152255 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C4107 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             (C44339 * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C152239 +
           (((C8646 * C152184 + (C9774 + C9773) * C152113) * C152183 +
             ((C8659 + C8658) * C152184 +
              (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
               C9764 + C9764 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
             (C42951 * C152113 + C6445 * C152184) * C152183) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C151867 * C152166 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            ((C7466 + C7467) * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C151912) *
              C739 +
          ((((C6432 + C6433) * C152184 + (C7468 + C7469) * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C151912 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C152166) *
              C740 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C151867 * C152166 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            ((C7474 + C7475) * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C151912) *
              C741 +
          ((((C6916 + C6917) * C152184 + (C40910 + C40911) * C152113) *
                C152183 +
            ((C6918 + C6919) * C152184 +
             (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
              C7119 + C7119 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C1709 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C1710 +
           ((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C1711 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            ((C8137 + C8136) * C152113 + C7828 * C152184) * C152183) *
               C151867 * C152218) *
              C152152 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C1710 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C1709 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C1711 +
           ((C8339 * C152184 + (C8659 + C8658) * C152113) * C152183 +
            ((C8352 + C8351) * C152184 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C152167 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C152166 +
           (((C41556 * C152184 + (C8132 + C8133) * C152113) * C152183 +
             ((C7465 + C7464) * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C152167) *
               C151912) *
              C335 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C152167) *
               C152166 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C152167 -
            (((C9773 + C9774) * C152113 + (C7471 + C7470) * C152184) * C152087 +
             ((C9775 + C9776) * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C151912) *
              C336 +
          (((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
               C6107 + C6107 + C151795 * C161) *
                  C152184 +
              (C15287 + C15288) * C152113) *
                 C152183 +
             ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
                C152167 -
            (((C16009 + C16008) * C152113 + C41561 * C152184) * C152087 +
             ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                 C152183) *
                C151954) *
               C152166 +
           (((C41560 * C152184 + (C16008 + C16009) * C152113) * C152183 +
             ((C7473 + C7472) * C152184 +
              (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
               C6703 + C6703 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
             (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C152167 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C1709 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C151954 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C152167) *
              C1710 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C152167 -
           (((C8138 + C8139) * C152113 + C43210 * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C151954) *
              C1711 +
          (((C8860 * C152184 + (C8139 + C8138) * C152113) * C152183 +
            ((C8873 + C8872) * C152184 +
             (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
              C8114 + C8114 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
            (C43210 * C152113 + C7828 * C152184) * C152183) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C151867 * C152255 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            ((C7466 + C7467) * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C152239 +
           ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C6432 + C6433) * C152184 + (C7468 + C7469) * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C152239 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C152255 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C151867 * C152255 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            ((C7474 + C7475) * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C152239 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
              C151867 * C151849 * C129 -
          (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
           ((C15282 + C15281) * C152113 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152184) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152184 +
            (C15287 + C15288) * C152113) *
               C152183 +
           ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
              C151867 * C151849 * C131 -
          (((C6091 * C1087 + C7117 + C7117 + C151795 * C1099 + C6089 * C1086 +
             C7116 + C7116 + C6084 * C1098) *
                C152113 +
            (C6917 + C6916) * C152184) *
               C152087 +
           ((C15705 + C15704) * C152113 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152184) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 +
             C6119 + C6119 + C151795 * C163) *
                C152184 +
            (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
             C14758 + C14758 + C151795 * C581) *
                C152113) *
               C152183 +
           ((C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 +
             C6121 + C6121 + C151795 * C372) *
                C152184 +
            (C6089 * C1087 + C40062 + C40062 + C6084 * C1099 + C6091 * C1088 +
             C40063 + C40063 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C152256 -
           ((C16568 * C152113 + (C7466 + C7467) * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C152241 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            ((C8132 + C8133) * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C151849 * C335 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            ((C7468 + C7469) * C152184 + C18136 * C152113) * C152087) *
               C152241 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C152256 -
           (((C18147 + C18148) * C152113 + (C9775 + C9776) * C152184) *
                C152087 +
            ((C15286 + C15285) * C152113 + C15294 * C152184) * C152183) *
               C152211) *
              C151849 * C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C152256 -
           (((C16009 + C16008) * C152113 + (C7474 + C7475) * C152184) *
                C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C152241 +
           ((C15295 * C152184 + (C15292 + C15291) * C152113) * C152183 +
            ((C16008 + C16009) * C152184 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C1259 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C1260 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C1259 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151867 * C1259 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
              C151867 * C1347 -
          ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
           (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
              C151867 * C1348 +
          ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
           ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
              C151867 * C1349 -
          (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
           ((C8137 + C8136) * C152113 + C7828 * C152184) * C152183) *
              C151867 * C1350 +
          ((C7854 * C152184 + (C8873 + C8872) * C152113) * C152183 +
           ((C7853 + C7852) * C152184 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C152256 -
           ((C16568 * C152113 + C41557 * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C152241 +
           ((C15293 * C152184 + (C15280 + C15279) * C152113) * C152183 +
            (C42304 * C152184 + C18559 * C152113) * C152087) *
               C152211) *
              C1259 +
          (((C41556 * C152184 + C42304 * C152113) * C152183 +
            (C42305 * C152184 + C8140 * C152113) * C152087) *
               C152241 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C152256 -
           (((C10198 + C10199) * C152113 + C42306 * C152184) * C152087 +
            ((C10200 + C10201) * C152113 + C16568 * C152184) * C152183) *
               C152211) *
              C1260 +
          (((C6444 * C152184 + C42305 * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C152256 -
           (((C8138 + C8139) * C152113 + (C8137 + C8136) * C152184) * C152087 +
            (C42306 * C152113 + C8092 * C152184) * C152183) *
               C152241 +
           ((C8140 * C152184 + (C10199 + C10198) * C152113) * C152183 +
            ((C8139 + C8138) * C152184 +
             (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
              C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C152167 -
           ((C16568 * C152113 + (C7466 + C7467) * C152184) * C152087 +
            ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                C152183) *
               C151954) *
              C151849 * C739 +
          ((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                C152183 +
            ((C7468 + C7469) * C152184 + C18136 * C152113) * C152087) *
               C151954 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C152167) *
              C151849 * C740 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C152167 -
           (((C16009 + C16008) * C152113 + (C7474 + C7475) * C152184) *
                C152087 +
            ((C15290 + C15289) * C152113 + (C15288 + C15287) * C152184) *
                C152183) *
               C151954) *
              C151849 * C741 +
          ((((C15704 + C15705) * C152184 + (C15706 + C15707) * C152113) *
                C152183 +
            ((C40910 + C40911) * C152184 +
             (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
              C15491 + C15491 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C40911 + C40910) * C152113 + (C6917 + C6916) * C152184) *
                C152087 +
            ((C15705 + C15704) * C152113 +
             (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
              C6117 + C6117 + C6084 * C161) *
                 C152184) *
                C152183) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
               C6095 + C6095 + C151795 * C159) *
                  C152184 +
              (C15275 + C15276) * C152113) *
                 C152183 +
             ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
                C152167 -
            ((C16568 * C152113 + C41557 * C152184) * C152087 +
             ((C15278 + C15277) * C152113 + (C15276 + C15275) * C152184) *
                 C152183) *
                C151954) *
               C1259 +
           (((C41556 * C152184 + C42304 * C152113) * C152183 +
             (C42305 * C152184 + C8140 * C152113) * C152087) *
                C151954 -
            ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
             (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
                C152167) *
               C1260 +
           (((C6444 * C152184 + C42305 * C152113) * C152183 +
             ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
                C152167 -
            (((C8138 + C8139) * C152113 + (C8137 + C8136) * C152184) * C152087 +
             (C42306 * C152113 + C8092 * C152184) * C152183) *
                C151954) *
               C152208) *
              C152152 +
          (((((C15281 + C15282) * C152184 + (C15283 + C15284) * C152113) *
                 C152183 +
             (C41558 * C152184 + C18136 * C152113) * C152087) *
                C151954 -
            ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
             ((C15282 + C15281) * C152113 +
              (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
               C6105 + C6105 + C6084 * C159) *
                  C152184) *
                 C152183) *
                C152167) *
               C1259 +
           ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
             ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
                C152167 -
            (((C9773 + C9774) * C152113 + C42951 * C152184) * C152087 +
             ((C9775 + C9776) * C152113 + C41559 * C152184) * C152183) *
                C151954) *
               C1260 +
           (((C8646 * C152184 + (C9774 + C9773) * C152113) * C152183 +
             ((C8659 + C8658) * C152184 +
              (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
               C9764 + C9764 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
             (C42951 * C152113 + C6445 * C152184) * C152183) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
              C151867 * C151849 * C129 -
          (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
           ((C15282 + C15281) * C152113 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152184) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152184 +
            (C15287 + C15288) * C152113) *
               C152183 +
           ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
              C151867 * C151849 * C131 -
          (((C6091 * C1087 + C7117 + C7117 + C151795 * C1099 + C6089 * C1086 +
             C7116 + C7116 + C6084 * C1098) *
                C152113 +
            (C6917 + C6916) * C152184) *
               C152087 +
           ((C15705 + C15704) * C152113 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152184) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 +
             C6119 + C6119 + C151795 * C163) *
                C152184 +
            (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
             C14758 + C14758 + C151795 * C581) *
                C152113) *
               C152183 +
           ((C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 +
             C6121 + C6121 + C151795 * C372) *
                C152184 +
            (C6089 * C1087 + C40062 + C40062 + C6084 * C1099 + C6091 * C1088 +
             C40063 + C40063 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + (C7467 + C7466) * C152113) * C152087) *
               C151867 * C152255 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            ((C7466 + C7467) * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C152239 +
           ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C6432 + C6433) * C152184 + (C7468 + C7469) * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C152239 -
           (((C7469 + C7468) * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C152255 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + (C7475 + C7474) * C152113) * C152087) *
               C151867 * C152255 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            ((C7474 + C7475) * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C152239 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152184 +
             (C15275 + C15276) * C152113) *
                C152183 +
            ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
               C151867 * C1259 -
           ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
            (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
            ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C6432 + C6433) * C152184 + C41558 * C152113) * C152183 +
            ((C6434 + C6435) * C152184 + C8646 * C152113) * C152087) *
               C151867 * C1260 -
           ((C41559 * C152113 + (C6433 + C6432) * C152184) * C152087 +
            ((C15282 + C15281) * C152113 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152184) *
                C152183) *
               C151867 * C1259 -
           (((C8658 + C8659) * C152113 + (C6437 + C6436) * C152184) * C152087 +
            ((C7471 + C7470) * C152113 + C6445 * C152184) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152184 +
             (C15287 + C15288) * C152113) *
                C152183 +
            ((C6438 + C6439) * C152184 + C41560 * C152113) * C152087) *
               C151867 * C1259 -
           (((C7472 + C7473) * C152113 + (C6441 + C6440) * C152184) * C152087 +
            (C41561 * C152113 + (C6439 + C6438) * C152184) * C152183) *
               C151867 * C1260 +
           ((C6446 * C152184 + (C7473 + C7472) * C152113) * C152183 +
            ((C6443 + C6442) * C152184 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152184 +
            (C15275 + C15276) * C152113) *
               C152183 +
           ((C6426 + C6427) * C152184 + C41556 * C152113) * C152087) *
              C151867 * C1347 -
          ((C8092 * C152113 + (C6429 + C6428) * C152184) * C152087 +
           (C41557 * C152113 + (C6427 + C6426) * C152184) * C152183) *
              C151867 * C1348 +
          ((C6444 * C152184 + (C7465 + C7464) * C152113) * C152183 +
           ((C6431 + C6430) * C152184 + C8860 * C152113) * C152087) *
              C151867 * C1349 -
          (((C8872 + C8873) * C152113 + (C7851 + C7850) * C152184) * C152087 +
           ((C8137 + C8136) * C152113 + C7828 * C152184) * C152183) *
              C151867 * C1350 +
          ((C7854 * C152184 + (C8873 + C8872) * C152113) * C152183 +
           ((C7853 + C7852) * C152184 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C151908 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151915 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C3585) *
              C151826 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C151915 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C151908 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C3585) *
              C151835 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C151908 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151915 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C151908 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151915 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C3585) *
              C151826 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151915 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C151908 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C3585) *
              C151835 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C151908 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151915 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C151908 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C151915 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C3585) *
              C151826 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            C18136 * C14753) *
               C152037 * C151867 * C151915 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C151908 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C3585) *
              C151835 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C151908 -
           ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
            (C6439 + C6438) * C14751) *
               C152037 * C151867 * C151915 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C151908 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151915 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C152167 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C3585) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C151908 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151915 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C151908 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C151915 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C152167 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C3585) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C151908 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151915 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C152167 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C151908 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C152167) *
               C151915 +
           ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
                C152037 * C152167 -
            ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
             C8092 * C14751) *
                C152037 * C151954) *
               C3585) *
              C3241 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C152167) *
               C151908 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C152167 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151915 +
           ((C8646 * C14751 + (C9774 + C9773) * C14752 +
             (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
              C9979 + C9979 + C151795 * C9972) *
                 C14753) *
                C152037 * C151954 -
            ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
             C6445 * C14751) *
                C152037 * C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C3101 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C151912) *
                  C152261 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C151912 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C3101) *
                  C152254 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C151867 * C3101 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152049 * C152037 * C151867 * C151912) *
                  C152237 +
              ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
                C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
                C140 * C743 + C750 + C750 + C124 * C745) *
                   C152049 * C152037 * C151867 * C151912 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152049 * C152037 * C151867 * C3101) *
                  C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C152262 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C152258 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C151867 * C152244 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152049 * C152037 * C151867 * C152218) *
                  C3241 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C152258 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C152262 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152049 * C152037 * C151867 * C152244 +
               (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 +
                C1720 + C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 +
                C123 * C1369 + C140 * C1715 + C1722 + C1722 + C124 * C1717) *
                   C152049 * C152037 * C151867 * C152218) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152256 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C152241 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C152211) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C152241 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152256 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C152211) *
               C151912) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C152241 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152256 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C152211) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152256 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C152241 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C3101 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C3101 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152262 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152258 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C152244 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C152258 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152262 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152244 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152256 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C152241 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C152211) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C152241 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152256 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C152211) *
               C151912) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C152241 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152256 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C152211) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152256 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C152241 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C3101 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C151912) *
              C152261 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            C18136 * C14753) *
               C152037 * C151867 * C151912 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C3101 -
           ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
            (C6439 + C6438) * C14751) *
               C152037 * C151867 * C151912) *
              C152237 +
          (((C6916 + C6917) * C14751 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C14752 +
            (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
             C15491 + C15491 + C151795 * C2679) *
                C14753) *
               C152037 * C151867 * C151912 -
           ((C15707 + C15706) * C14753 + (C15705 + C15704) * C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C152262 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C152258 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152244 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C151867 * C152218) *
              C3241 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            C18136 * C14753) *
               C152037 * C151867 * C152258 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152262 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152244 +
           (C8339 * C14751 + (C8659 + C8658) * C14752 +
            (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
             C9764 + C9764 + C151795 * C9753) *
                C14753) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C152256 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C152241 +
            (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
                C152037 * C152211) *
               C3101 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C152241 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C152256 -
            ((C18570 + C18571) * C14753 + (C10200 + C10201) * C14752 +
             C16568 * C14751) *
                C152037 * C152211) *
               C151912) *
              C3241 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C152241 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C152256 -
            ((C18357 + C18358) * C14753 + (C15286 + C15285) * C14752 +
             C15294 * C14751) *
                C152037 * C152211) *
               C3101 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C152256 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C152241 +
            (C18136 * C14751 + (C18148 + C18147) * C14752 +
             (C6089 * C9434 + C18141 + C18141 + C6084 * C9446 + C6091 * C18132 +
              C18142 + C18142 + C151795 * C18134) *
                 C14753) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151912) *
              C151826 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C152167 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C151912) *
              C151826 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C151835 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C152167 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C152167 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C3101 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C152167) *
               C151912) *
              C151826 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C152167) *
               C3101 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C152167 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C14751 +
             (C15287 + C15288) * C14752 + C15295 * C14753) *
                C152037 * C152167 -
            ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
             (C15288 + C15287) * C14751) *
                C152037 * C151954) *
               C3101 +
           (((C7475 + C7474) * C14751 + (C16008 + C16009) * C14752 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C14753) *
                C152037 * C151954 -
            ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
             (C6439 + C6438) * C14751) *
                C152037 * C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152262 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152258 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152244 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C151867 * C152218) *
              C3241 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152258 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152262 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152244 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152049 * C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C3101 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151912) *
              C152261 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C3101) *
              C152254 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C3101 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151912) *
              C152237 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C3101 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C3101 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152262 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152258 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C152244 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C152258 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152262 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152244 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C3101 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C151912) *
              C152261 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            C18136 * C14753) *
               C152037 * C151867 * C151912 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C3101 -
           ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
            (C6439 + C6438) * C14751) *
               C152037 * C151867 * C151912) *
              C152237 +
          (((C6916 + C6917) * C14751 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C14752 +
            (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
             C15491 + C15491 + C151795 * C2679) *
                C14753) *
               C152037 * C151867 * C151912 -
           ((C15707 + C15706) * C14753 + (C15705 + C15704) * C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C152262 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C152258 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152244 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C151867 * C152218) *
              C3241 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            C18136 * C14753) *
               C152037 * C151867 * C152258 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152262 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152244 +
           (C8339 * C14751 + (C8659 + C8658) * C14752 +
            (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
             C9764 + C9764 + C151795 * C9753) *
                C14753) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C151908 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151915 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C4107 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C3585) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C151908 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151915 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C151908 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C151915 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C3585) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C151908 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151915 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C4107 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C151908 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C4107) *
               C151915 +
           ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
                C152037 * C4107 -
            ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
             C8092 * C14751) *
                C152037 * C151954) *
               C3585) *
              C152152 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C4107) *
               C151908 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C4107 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151915 +
           ((C8646 * C14751 + (C9774 + C9773) * C14752 +
             (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
              C9979 + C9979 + C151795 * C9972) *
                 C14753) *
                C152037 * C151954 -
            ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
             C6445 * C14751) *
                C152037 * C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151950 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151957 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C4779) *
              C151908 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151957 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151950 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C4779) *
              C151915 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151950 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151957 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151950 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151957 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C4779) *
              C151908 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151957 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151950 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C4779) *
              C151915 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151950 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151957 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151950 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151957 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
               C152037 * C4779) *
              C151908 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            C18559 * C14753) *
               C152037 * C151957 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151950 -
           ((C18570 + C18571) * C14753 + (C10200 + C10201) * C14752 +
            C16568 * C14751) *
               C152037 * C4779) *
              C151915 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151950 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C151957 +
           (C8140 * C14751 + (C10199 + C10198) * C14752 +
            (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
             C9461 + C9461 + C151795 * C9448) *
                C14753) *
               C152037 * C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152049 * C152037 * C4107 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152049 * C152037 * C151954) *
                   C3101 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152049 * C152037 * C151954 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152049 * C152037 * C4107) *
                   C151912) *
                  C152252 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152049 * C152037 * C151954 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152049 * C152037 * C4107) *
                   C3101 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152049 * C152037 * C4107 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152049 * C152037 * C151954) *
                   C151912) *
                  C152235 +
              (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                 C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                 C140 * C147 + C178 + C178 + C124 * C163) *
                    C152049 * C152037 * C4107 -
                (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                 C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                 C134 * C548 + C603 + C603 + C121 * C572) *
                    C152049 * C152037 * C151954) *
                   C3101 +
               ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
                 C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
                 C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                    C152049 * C152037 * C151954 -
                (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                 C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                 C134 * C339 + C394 + C394 + C121 * C363) *
                    C152049 * C152037 * C4107) *
                   C151912) *
                  C152202) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C4107 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C151954) *
                  C152262 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152049 * C152037 * C151954 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C4107) *
                  C152258 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C4107 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152049 * C152037 * C151954) *
                  C152244 +
              ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 +
                C2067 + C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 +
                C123 * C2063 + C140 * C2056 + C2069 + C2069 + C124 * C2064) *
                   C152049 * C152037 * C151954 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152049 * C152037 * C4107) *
                  C152218) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152263 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152260 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152247 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C3101 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C152260 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152263 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152247 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152049 * C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C4107 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C152262 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C4107) *
              C152258 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C4107 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C152244 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152263 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152260 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152247 -
           ((C10198 + C10199) * C152049 * C6088 +
            (C10200 + C10201) * C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C3101 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C152260 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152263 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152247 +
           ((C10201 + C10200) * C152049 * C6086 +
            (C10199 + C10198) * C152049 * C6087 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C152049 * C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C4107 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C3101 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C4107) *
               C3101 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C4107 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C14751 +
             (C15287 + C15288) * C14752 + C15295 * C14753) *
                C152037 * C4107 -
            ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
             (C15288 + C15287) * C14751) *
                C152037 * C151954) *
               C3101 +
           (((C7475 + C7474) * C14751 + (C16008 + C16009) * C14752 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C14753) *
                C152037 * C151954 -
            ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
             (C6439 + C6438) * C14751) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C4107 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C152262 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            C18559 * C14753) *
               C152037 * C151954 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C4107) *
              C152258 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C4107 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C151954) *
              C152244 +
          ((C8860 * C14751 + (C8139 + C8138) * C14752 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C14753) *
               C152037 * C151954 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152263 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C152260 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
               C152037 * C152247 -
           ((C17840 + C17841) * C14753 + (C17839 + C17838) * C14752 +
            C17817 * C14751) *
               C152037 * C152224) *
              C3101 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            C18559 * C14753) *
               C152037 * C152260 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C152263 -
           ((C18570 + C18571) * C14753 + (C10200 + C10201) * C14752 +
            C16568 * C14751) *
               C152037 * C152247 +
           (C18559 * C14751 + (C18571 + C18570) * C14752 +
            (C6089 * C18552 + C18564 + C18564 + C6084 * C18556 +
             C6091 * C18553 + C18565 + C18565 + C151795 * C18557) *
                C14753) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C151950 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151957 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C4779) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151957 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C151950 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C4779) *
               C151912) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151957 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C151950 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C4779) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C151950 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151957 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C151950 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151957 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C4779) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151957 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C151950 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C4779) *
               C151912) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151957 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C151950 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C4779) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C151950 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151957 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C151950 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151957 +
            (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
                C152037 * C4779) *
               C3101 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151957 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C151950 -
            ((C18570 + C18571) * C14753 + (C10200 + C10201) * C14752 +
             C16568 * C14751) *
                C152037 * C4779) *
               C151912) *
              C152152 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151957 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C151950 -
            ((C18357 + C18358) * C14753 + (C15286 + C15285) * C14752 +
             C15294 * C14751) *
                C152037 * C4779) *
               C3101 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C151950 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151957 +
            (C18136 * C14751 + (C18148 + C18147) * C14752 +
             (C6089 * C9434 + C18141 + C18141 + C6084 * C9446 + C6091 * C18132 +
              C18142 + C18142 + C151795 * C18134) *
                 C14753) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C152262 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151954 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C4107) *
              C152258 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C4107 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151954) *
              C152244 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152049 * C152037 * C151954 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C151912) *
              C152252 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C152235 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C4107 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C152262 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C4107) *
              C152258 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C4107 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C152244 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C4107 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C3101 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C4107) *
               C3101 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C4107 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C14751 +
             (C15287 + C15288) * C14752 + C15295 * C14753) *
                C152037 * C4107 -
            ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
             (C15288 + C15287) * C14751) *
                C152037 * C151954) *
               C3101 +
           (((C7475 + C7474) * C14751 + (C16008 + C16009) * C14752 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C14753) *
                C152037 * C151954 -
            ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
             (C6439 + C6438) * C14751) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C4107 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C152262 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            C18559 * C14753) *
               C152037 * C151954 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C4107) *
              C152258 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C4107 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C151954) *
              C152244 +
          ((C8860 * C14751 + (C8139 + C8138) * C14752 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C14753) *
               C152037 * C151954 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C152166 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C151912) *
                  C739 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C151912 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C152166) *
                  C740 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C151867 * C152166 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152049 * C152037 * C151867 * C151912) *
                  C741 +
              ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
                C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
                C140 * C743 + C750 + C750 + C124 * C745) *
                   C152049 * C152037 * C151867 * C151912 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152049 * C152037 * C151867 * C152166) *
                  C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C1709 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C1710 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C151867 * C1711 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152049 * C152037 * C151867 * C152218) *
                  C152152 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C1710 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C1709 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152049 * C152037 * C151867 * C1711 +
               (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 +
                C1720 + C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 +
                C123 * C1369 + C140 * C1715 + C1722 + C1722 + C124 * C1717) *
                   C152049 * C152037 * C151867 * C152218) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C2215 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C2216 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C152211) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C2216 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C2215 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C152211) *
               C151912) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C2216 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C2215 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C152211) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C2215 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C2216 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152166 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C739 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152166) *
              C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152166 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C741 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1709 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1710 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C1711 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C1710 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1709 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C1711 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C2215 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C2216 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C152211) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C2216 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C2215 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C152211) *
               C151912) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C2216 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C2215 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C152211) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C2215 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C2216 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C152166 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C151912) *
              C739 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C151912 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C152166 -
           ((C6091 * C1531 + C6701 + C6701 + C151795 * C1555 + C6089 * C1532 +
             C6700 + C6700 + C6084 * C1556) *
                C14753 +
            (C7474 + C7475) * C14752 + (C6439 + C6438) * C14751) *
               C152037 * C151867 * C151912) *
              C741 +
          (((C6916 + C6917) * C14751 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C14752 +
            (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
             C15491 + C15491 + C151795 * C2679) *
                C14753) *
               C152037 * C151867 * C151912 -
           ((C6091 * C556 + C14755 + C14755 + C151795 * C580 + C6089 * C554 +
             C14756 + C14756 + C6084 * C578) *
                C14753 +
            (C6091 * C555 + C7115 + C7115 + C151795 * C579 + C6089 * C547 +
             C7114 + C7114 + C6084 * C571) *
                C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C1709 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C1710 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C1711 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C151867 * C152218) *
              C152152 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C1710 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C1709 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C1711 +
           (C8339 * C14751 + (C8659 + C8658) * C14752 +
            (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
             C9764 + C9764 + C151795 * C9753) *
                C14753) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C2215 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C2216 +
            (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
                C152037 * C152211) *
               C152166 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             (C10201 + C10200) * C14753) *
                C152037 * C2216 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C2215 -
            ((C6091 * C9434 + C9459 + C9459 + C151795 * C9446 + C6089 * C9433 +
              C9458 + C9458 + C6084 * C9445) *
                 C14753 +
             (C10200 + C10201) * C14752 + C16568 * C14751) *
                C152037 * C152211) *
               C151912) *
              C152152 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             (C15285 + C15286) * C14753) *
                C152037 * C2216 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C2215 -
            ((C6091 * C2457 + C15221 + C15221 + C151795 * C2473 +
              C6089 * C2456 + C15222 + C15222 + C6084 * C2472) *
                 C14753 +
             (C15286 + C15285) * C14752 + C15294 * C14751) *
                C152037 * C152211) *
               C152166 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C2215 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C2216 +
            (C18136 * C14751 + (C18148 + C18147) * C14752 +
             (C6089 * C9434 + C18141 + C18141 + C6084 * C9446 + C6091 * C18132 +
              C18142 + C18142 + C151795 * C18134) *
                 C14753) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152049 * C152037 * C152167 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152049 * C152037 * C151954) *
                   C152166 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152049 * C152037 * C151954 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152049 * C152037 * C152167) *
                   C151912) *
                  C335 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152049 * C152037 * C151954 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152049 * C152037 * C152167) *
                   C152166 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152049 * C152037 * C152167 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152049 * C152037 * C151954) *
                   C151912) *
                  C336 +
              (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                 C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                 C140 * C147 + C178 + C178 + C124 * C163) *
                    C152049 * C152037 * C152167 -
                (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                 C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                 C134 * C548 + C603 + C603 + C121 * C572) *
                    C152049 * C152037 * C151954) *
                   C152166 +
               ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
                 C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
                 C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                    C152049 * C152037 * C151954 -
                (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                 C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                 C134 * C339 + C394 + C394 + C121 * C363) *
                    C152049 * C152037 * C152167) *
                   C151912) *
                  C152202) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C152167 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C151954) *
                  C1709 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152049 * C152037 * C151954 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C152167) *
                  C1710 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C152167 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152049 * C152037 * C151954) *
                  C1711 +
              ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 +
                C2067 + C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 +
                C123 * C2063 + C140 * C2056 + C2069 + C2069 + C124 * C2064) *
                   C152049 * C152037 * C151954 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152049 * C152037 * C152167) *
                  C152218) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C152166 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C2815 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C2814 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C2816 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152049 * C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            ((C7464 + C7465) * C152049 * C6088 +
             (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C6089 * C2053 + C7418 + C7418 + C6084 * C2061 + C6091 * C2054 +
              C7419 + C7419 + C151795 * C2062) *
                 C152049 * C6088) *
                C151954 -
            ((C6430 + C6431) * C152049 * C6088 +
             (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 +
             (C7470 + C7471) * C152049 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 +
             (C6436 + C6437) * C152049 * C6088) *
                C152167 -
            ((C6091 * C2055 + C7428 + C7428 + C151795 * C2063 + C6089 * C2054 +
              C7429 + C7429 + C6084 * C2062) *
                 C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C152167 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C1709 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152167) *
              C1710 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152167 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C1711 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2814 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2815 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C2816 -
           ((C10198 + C10199) * C152049 * C6088 +
            (C10200 + C10201) * C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C152166 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C2815 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C2814 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C2816 +
           ((C10201 + C10200) * C152049 * C6086 +
            (C10199 + C10198) * C152049 * C6087 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C152049 * C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C152167 -
            ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C152166 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             (C10201 + C10200) * C14753) *
                C152037 * C151954 -
            ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C152167) *
               C151912) *
              C335 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             (C15285 + C15286) * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C152167) *
               C152166 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             (C9776 + C9775) * C14753) *
                C152037 * C152167 -
            ((C6091 * C2957 + C9977 + C9977 + C151795 * C2965 + C6089 * C2956 +
              C9976 + C9976 + C6084 * C2964) *
                 C14753 +
             (C9775 + C9776) * C14752 + (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C14751 +
             (C15287 + C15288) * C14752 + C15295 * C14753) *
                C152037 * C152167 -
            ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
             (C15288 + C15287) * C14751) *
                C152037 * C151954) *
               C152166 +
           (((C7475 + C7474) * C14751 + (C16008 + C16009) * C14752 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C14753) *
                C152037 * C151954 -
            ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
             (C6439 + C6438) * C14751) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152167 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C1709 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            (C10201 + C10200) * C14753) *
               C152037 * C151954 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C152167) *
              C1710 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C152167 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C151954) *
              C1711 +
          ((C8860 * C14751 + (C8139 + C8138) * C14752 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C14753) *
               C152037 * C151954 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C2814 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C2815 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
               C152037 * C2816 -
           ((C17840 + C17841) * C14753 + (C17839 + C17838) * C14752 +
            C17817 * C14751) *
               C152037 * C152224) *
              C152166 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            C18559 * C14753) *
               C152037 * C2815 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C2814 -
           ((C18570 + C18571) * C14753 + (C10200 + C10201) * C14752 +
            C16568 * C14751) *
               C152037 * C2816 +
           (C18559 * C14751 + (C18571 + C18570) * C14752 +
            (C6089 * C18552 + C18564 + C18564 + C6084 * C18556 +
             C6091 * C18553 + C18565 + C18565 + C151795 * C18557) *
                C14753) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152049 * C152037 * C151867 * C151849 * C129 -
              (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
               C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
               C134 * C143 + C174 + C174 + C121 * C159) *
                  C152049 * C152037 * C151867 * C151849 * C130 +
              (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
               C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
               C140 * C147 + C178 + C178 + C124 * C163) *
                  C152049 * C152037 * C151867 * C151849 * C131 -
              (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
               C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
               C134 * C145 + C182 + C182 + C121 * C161) *
                  C152049 * C152037 * C151867 * C151849 * C132 +
              (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 +
               C184 + C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 +
               C140 * C149 + C186 + C186 + C124 * C165) *
                  C152049 * C152037 * C151867 * C151849 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C152239 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C151867 * C152208) *
                  C335 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C152239 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152049 * C152037 * C151867 * C152208) *
                  C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152049 * C152037 * C151867 * C152239 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152049 * C152037 * C151867 * C152208) *
                  C152202) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C152256 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C152241 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152049 * C152037 * C152211) *
                  C151849 * C335 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152049 * C152037 * C152241 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C152256 -
               (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
                C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
                C134 * C552 + C599 + C599 + C121 * C576) *
                   C152049 * C152037 * C152211) *
                  C151849 * C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C152256 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152049 * C152037 * C152241 +
               (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
                C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
                C140 * C558 + C607 + C607 + C124 * C582) *
                   C152049 * C152037 * C152211) *
                  C151849 * C152202) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C1259 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C1260 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C151867 * C152208) *
                  C152252 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C1260 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C1259 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152049 * C152037 * C151867 * C152208) *
                  C152235 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C151867 * C1259 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152049 * C152037 * C151867 * C1260 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152049 * C152037 * C151867 * C152208) *
                  C152202) -
         0.25 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152049 * C152037 * C151867 * C1347 -
              (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
               C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
               C134 * C341 + C378 + C378 + C121 * C365) *
                  C152049 * C152037 * C151867 * C1348 +
              (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
               C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
               C140 * C345 + C382 + C382 + C124 * C369) *
                  C152049 * C152037 * C151867 * C1349 -
              (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
               C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
               C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                  C152049 * C152037 * C151867 * C1350 +
              (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 +
               C1383 + C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 +
               C123 * C1375 + C140 * C1360 + C1385 + C1385 + C124 * C1376) *
                  C152049 * C152037 * C151867 * C1351) *
             C151821 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C152256 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C152241 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152049 * C152037 * C152211) *
                  C1259 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152049 * C152037 * C152241 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C152256 -
               (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
                C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
                C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                   C152049 * C152037 * C152211) *
                  C1260 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C152256 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152049 * C152037 * C152241 +
               (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 +
                C1577 + C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 +
                C123 * C1565 + C140 * C1542 + C1579 + C1579 + C124 * C1566) *
                   C152049 * C152037 * C152211) *
                  C152208) *
             C151821 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C2215 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C2216 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152049 * C152037 * C152211) *
                  C151849 * C152252 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152049 * C152037 * C2216 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C2215 -
               (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
                C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
                C134 * C552 + C599 + C599 + C121 * C576) *
                   C152049 * C152037 * C152211) *
                  C151849 * C152235 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C2215 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152049 * C152037 * C2216 +
               (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
                C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
                C140 * C558 + C607 + C607 + C124 * C582) *
                   C152049 * C152037 * C152211) *
                  C151849 * C152202) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C2215 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C2216 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152049 * C152037 * C152211) *
                  C152255 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152049 * C152037 * C2216 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C2215 -
               (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
                C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
                C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                   C152049 * C152037 * C152211) *
                  C152239 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C2215 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152049 * C152037 * C2216 +
               (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 +
                C1577 + C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 +
                C123 * C1565 + C140 * C1542 + C1579 + C1579 + C124 * C1566) *
                   C152049 * C152037 * C152211) *
                  C152208) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C2446 -
          (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 + C585 +
           C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 + C134 * C550 +
           C587 + C587 + C121 * C574) *
              C152049 * C152037 * C2447 +
          (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 + C589 +
           C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 + C140 * C554 +
           C591 + C591 + C124 * C578) *
              C152049 * C152037 * C2448 -
          (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
           C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
           C134 * C2454 + C2479 + C2479 + C121 * C2470) *
              C152049 * C152037 * C2449 +
          (C134 * C2455 + C2480 + C2480 + C121 * C2471 + C136 * C2456 + C2481 +
           C2481 + C122 * C2472 + C138 * C2457 + C2482 + C2482 + C123 * C2473 +
           C140 * C2458 + C2483 + C2483 + C124 * C2474) *
              C152049 * C152037 * C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C6089 * C1534 + C6676 + C6676 + C6084 * C1558 + C6091 * C1533 +
             C6677 + C6677 + C151795 * C1557) *
                C152049 * C6087 +
            (C6089 * C1539 + C6678 + C6678 + C6084 * C1563 + C6091 * C1540 +
             C6679 + C6679 + C151795 * C1564) *
                C152049 * C6088) *
               C152211) *
              C151849 * C335 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C152241 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152256 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152256 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C1259 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 +
            (C8136 + C8137) * C152049 * C6088) *
               C152241 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152256 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C1260 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152256 -
           ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
             C8112 + C8112 + C6084 * C8088) *
                C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C152241 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C2216 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C2215 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C2215 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C152255 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C2216 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C2215 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C152239 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C2215 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C2216 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C2446 -
          (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
           (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
            C6673 + C6673 + C6084 * C574) *
               C152049 * C6086) *
              C2447 +
          ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 + C6675 +
            C6675 + C151795 * C576) *
               C152049 * C6086 +
           (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
              C2448 -
          ((C6091 * C9431 + C9450 + C9450 + C151795 * C9443 + C6089 * C9432 +
            C9451 + C9451 + C6084 * C9444) *
               C152049 * C6088 +
           (C6091 * C2956 + C9452 + C9452 + C151795 * C2964 + C6089 * C2955 +
            C9453 + C9453 + C6084 * C2963) *
               C152049 * C6087 +
           (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
            C9455 + C9455 + C6084 * C2470) *
               C152049 * C6086) *
              C2449 +
          ((C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
            C9457 + C9457 + C151795 * C2472) *
               C152049 * C6086 +
           (C6089 * C9433 + C9458 + C9458 + C6084 * C9445 + C6091 * C9434 +
            C9459 + C9459 + C151795 * C9446) *
               C152049 * C6087 +
           (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
            C9461 + C9461 + C151795 * C9448) *
               C152049 * C6088) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 + C6672 +
            C6672 + C151795 * C573) *
               C14752 +
           (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 + C6675 +
            C6675 + C151795 * C576) *
               C14753) *
              C152037 * C151867 * C151849 * C129 -
          ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
            C6691 + C6691 + C6084 * C576) *
               C14753 +
           (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
            C6680 + C6680 + C6084 * C573) *
               C14752 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C14751) *
              C152037 * C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C14751 +
           (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 + C6696 +
            C6696 + C151795 * C571) *
               C14752 +
           (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 + C6699 +
            C6699 + C151795 * C578) *
               C14753) *
              C152037 * C151867 * C151849 * C131 -
          ((C6091 * C556 + C14755 + C14755 + C151795 * C580 + C6089 * C554 +
            C14756 + C14756 + C6084 * C578) *
               C14753 +
           (C6091 * C555 + C7115 + C7115 + C151795 * C579 + C6089 * C547 +
            C7114 + C7114 + C6084 * C571) *
               C14752 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C14751) *
              C152037 * C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C14751 +
           (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
            C14758 + C14758 + C151795 * C581) *
               C14752 +
           (C6089 * C556 + C14759 + C14759 + C6084 * C580 + C6091 * C558 +
            C14760 + C14760 + C151795 * C582) *
               C14753) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 +
             C6672 + C6672 + C151795 * C573) *
                C14752 +
            (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C152239 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C152239 -
           ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C14753 +
            (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
             C6680 + C6680 + C6084 * C573) *
                C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152255 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 +
             C6696 + C6696 + C151795 * C571) *
                C14752 +
            (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C6091 * C1531 + C6701 + C6701 + C151795 * C1555 + C6089 * C1532 +
             C6700 + C6700 + C6084 * C1556) *
                C14753 +
            (C7474 + C7475) * C14752 + (C6439 + C6438) * C14751) *
               C152037 * C151867 * C152239 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152256 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C152241 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C151849 * C335 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            (C15285 + C15286) * C14753) *
               C152037 * C152241 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C152256 -
           ((C6091 * C2457 + C15221 + C15221 + C151795 * C2473 + C6089 * C2456 +
             C15222 + C15222 + C6084 * C2472) *
                C14753 +
            (C15286 + C15285) * C14752 + C15294 * C14751) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C152256 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C152241 +
           (C15295 * C14751 + (C15292 + C15291) * C14752 +
            (C6089 * C2457 + C15237 + C15237 + C6084 * C2473 + C6091 * C2458 +
             C15238 + C15238 + C151795 * C2474) *
                C14753) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C1259 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C1260 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C1260 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C1259 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C1259 -
           ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
            (C6439 + C6438) * C14751) *
               C152037 * C151867 * C1260 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C15275 + C15276) * C14752 + C15293 * C14753) *
              C152037 * C151867 * C1347 -
          ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
           (C6427 + C6426) * C14751) *
              C152037 * C151867 * C1348 +
          (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
              C152037 * C151867 * C1349 -
          ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
           C7828 * C14751) *
              C152037 * C151867 * C1350 +
          (C7854 * C14751 + (C8873 + C8872) * C14752 +
           (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
            C8114 + C8114 + C151795 * C8090) *
               C14753) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152256 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C152241 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C1259 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            (C10201 + C10200) * C14753) *
               C152037 * C152241 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C152256 -
           ((C6091 * C9434 + C9459 + C9459 + C151795 * C9446 + C6089 * C9433 +
             C9458 + C9458 + C6084 * C9445) *
                C14753 +
            (C10200 + C10201) * C14752 + C16568 * C14751) *
               C152037 * C152211) *
              C1260 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C152256 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C152241 +
           (C8140 * C14751 + (C10199 + C10198) * C14752 +
            (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
             C9461 + C9461 + C151795 * C9448) *
                C14753) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C2215 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C2216 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C151849 * C152252 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            (C15285 + C15286) * C14753) *
               C152037 * C2216 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C2215 -
           ((C6091 * C2457 + C15221 + C15221 + C151795 * C2473 + C6089 * C2456 +
             C15222 + C15222 + C6084 * C2472) *
                C14753 +
            (C15286 + C15285) * C14752 + C15294 * C14751) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C2215 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C2216 +
           (C15295 * C14751 + (C15292 + C15291) * C14752 +
            (C6089 * C2457 + C15237 + C15237 + C6084 * C2473 + C6091 * C2458 +
             C15238 + C15238 + C151795 * C2474) *
                C14753) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C2215 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C2216 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C152255 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            (C10201 + C10200) * C14753) *
               C152037 * C2216 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C2215 -
           ((C6091 * C9434 + C9459 + C9459 + C151795 * C9446 + C6089 * C9433 +
             C9458 + C9458 + C6084 * C9445) *
                C14753 +
            (C10200 + C10201) * C14752 + C16568 * C14751) *
               C152037 * C152211) *
              C152239 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C2215 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C2216 +
           (C8140 * C14751 + (C10199 + C10198) * C14752 +
            (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
             C9461 + C9461 + C151795 * C9448) *
                C14753) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C15275 + C15276) * C14752 + C15293 * C14753) *
              C152037 * C2446 -
          (C17817 * C14753 + (C15278 + C15277) * C14752 +
           (C15276 + C15275) * C14751) *
              C152037 * C2447 +
          (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
              C152037 * C2448 -
          ((C17840 + C17841) * C14753 + (C17839 + C17838) * C14752 +
           C17817 * C14751) *
              C152037 * C2449 +
          (C17842 * C14751 + (C17841 + C17840) * C14752 +
           (C6089 * C17806 + C17828 + C17828 + C6084 * C17814 + C6091 * C17807 +
            C17829 + C17829 + C151795 * C17815) *
               C14753) *
              C152037 * C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C152167 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C151954) *
                  C151849 * C739 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152049 * C152037 * C151954 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C152167) *
                  C151849 * C740 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C152167 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152049 * C152037 * C151954) *
                  C151849 * C741 +
              ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
                C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
                C140 * C882 + C889 + C889 + C124 * C884) *
                   C152049 * C152037 * C151954 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152049 * C152037 * C152167) *
                  C151849 * C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152049 * C152037 * C152167 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152049 * C152037 * C151954) *
                   C1259 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152049 * C152037 * C151954 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152049 * C152037 * C152167) *
                   C1260 +
               ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                 C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                 C140 * C345 + C382 + C382 + C124 * C369) *
                    C152049 * C152037 * C152167 -
                (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                 C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                 C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                    C152049 * C152037 * C151954) *
                   C152208) *
                  C152152 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152049 * C152037 * C151954 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152049 * C152037 * C152167) *
                   C1259 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152049 * C152037 * C152167 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152049 * C152037 * C151954) *
                   C1260 +
               ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
                 C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
                 C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                    C152049 * C152037 * C151954 -
                (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                 C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                 C134 * C343 + C390 + C390 + C121 * C367) *
                    C152049 * C152037 * C152167) *
                   C152208) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C151849 * C152152 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C2815 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C2814 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C2816 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152049 * C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C739 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152167) *
              C151849 * C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152167 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C741 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C1259 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C8136 + C8137) * C152049 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C1260 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C152167 -
            ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
              C8112 + C8112 + C6084 * C8088) *
                 C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C1259 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C1260 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2814 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2815 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C2816 -
           ((C6091 * C9431 + C9450 + C9450 + C151795 * C9443 + C6089 * C9432 +
             C9451 + C9451 + C6084 * C9444) *
                C152049 * C6088 +
            (C6091 * C2956 + C9452 + C9452 + C151795 * C2964 + C6089 * C2955 +
             C9453 + C9453 + C6084 * C2963) *
                C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C151849 * C152152 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C2815 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C2814 -
           ((C9773 + C9774) * C152049 * C6088 +
            (C9775 + C9776) * C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C2816 +
           ((C6089 * C2453 + C9974 + C9974 + C6084 * C2469 + C6091 * C2452 +
             C9975 + C9975 + C151795 * C2468) *
                C152049 * C6086 +
            (C6089 * C2956 + C9976 + C9976 + C6084 * C2964 + C6091 * C2957 +
             C9977 + C9977 + C151795 * C2965) *
                C152049 * C6087 +
            (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
             C9979 + C9979 + C151795 * C9972) *
                C152049 * C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152167 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C151849 * C739 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            (C15285 + C15286) * C14753) *
               C152037 * C151954 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C152167 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C151954) *
              C151849 * C741 +
          (((C15704 + C15705) * C14751 + (C15706 + C15707) * C14752 +
            (C6089 * C2451 + C15694 + C15694 + C6084 * C2467 + C6091 * C2818 +
             C15695 + C15695 + C151795 * C2820) *
                C14753) *
               C152037 * C151954 -
           ((C15707 + C15706) * C14753 + (C15705 + C15704) * C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C152167 -
            ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C1259 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             (C10201 + C10200) * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C152167) *
               C1260 +
           ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
                C152037 * C152167 -
            ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
             C8092 * C14751) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             (C15285 + C15286) * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C152167) *
               C1259 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             (C9776 + C9775) * C14753) *
                C152037 * C152167 -
            ((C6091 * C2957 + C9977 + C9977 + C151795 * C2965 + C6089 * C2956 +
              C9976 + C9976 + C6084 * C2964) *
                 C14753 +
             (C9775 + C9776) * C14752 + (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C1260 +
           ((C8646 * C14751 + (C9774 + C9773) * C14752 +
             (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
              C9979 + C9979 + C151795 * C9972) *
                 C14753) *
                C152037 * C151954 -
            ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
             C6445 * C14751) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C2814 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C2815 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
               C152037 * C2816 -
           ((C17840 + C17841) * C14753 + (C17839 + C17838) * C14752 +
            C17817 * C14751) *
               C152037 * C152224) *
              C151849 * C152152 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            C18346 * C14753) *
               C152037 * C2815 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C2814 -
           ((C18357 + C18358) * C14753 + (C15286 + C15285) * C14752 +
            C15294 * C14751) *
               C152037 * C2816 +
           (C18346 * C14751 + (C18358 + C18357) * C14752 +
            (C6089 * C17804 + C18351 + C18351 + C6084 * C17812 +
             C6091 * C18342 + C18352 + C18352 + C151795 * C18344) *
                C14753) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C151849 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152049 * C152037 * C151867 * C151849 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152049 * C152037 * C151867 * C151849 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152049 * C152037 * C151867 * C151849 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152049 * C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152239 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C152252 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152049 * C152037 * C151867 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152049 * C152037 * C151867 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152049 * C152037 * C151867 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152049 * C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C151849 * C152252 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C2216 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C2215 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152211) *
              C151849 * C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C2215 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C2216 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152049 * C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C152255 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C2216 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C2215 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152211) *
              C152239 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C2215 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C2216 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C2216 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C2215 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C2215 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C152255 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C2216 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C2215 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C152239 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C2215 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C2216 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 + C6672 +
            C6672 + C151795 * C573) *
               C14752 +
           (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 + C6675 +
            C6675 + C151795 * C576) *
               C14753) *
              C152037 * C151867 * C151849 * C129 -
          ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
            C6691 + C6691 + C6084 * C576) *
               C14753 +
           (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
            C6680 + C6680 + C6084 * C573) *
               C14752 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C14751) *
              C152037 * C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C14751 +
           (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 + C6696 +
            C6696 + C151795 * C571) *
               C14752 +
           (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 + C6699 +
            C6699 + C151795 * C578) *
               C14753) *
              C152037 * C151867 * C151849 * C131 -
          ((C6091 * C556 + C14755 + C14755 + C151795 * C580 + C6089 * C554 +
            C14756 + C14756 + C6084 * C578) *
               C14753 +
           (C6091 * C555 + C7115 + C7115 + C151795 * C579 + C6089 * C547 +
            C7114 + C7114 + C6084 * C571) *
               C14752 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C14751) *
              C152037 * C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C14751 +
           (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
            C14758 + C14758 + C151795 * C581) *
               C14752 +
           (C6089 * C556 + C14759 + C14759 + C6084 * C580 + C6091 * C558 +
            C14760 + C14760 + C151795 * C582) *
               C14753) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 +
             C6672 + C6672 + C151795 * C573) *
                C14752 +
            (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C152239 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C152239 -
           ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C14753 +
            (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
             C6680 + C6680 + C6084 * C573) *
                C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152255 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 +
             C6696 + C6696 + C151795 * C571) *
                C14752 +
            (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C6091 * C1531 + C6701 + C6701 + C151795 * C1555 + C6089 * C1532 +
             C6700 + C6700 + C6084 * C1556) *
                C14753 +
            (C7474 + C7475) * C14752 + (C6439 + C6438) * C14751) *
               C152037 * C151867 * C152239 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C1259 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C1260 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C1260 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C1259 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C1259 -
           ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
            (C6439 + C6438) * C14751) *
               C152037 * C151867 * C1260 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C15275 + C15276) * C14752 + C15293 * C14753) *
              C152037 * C151867 * C1347 -
          ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
           (C6427 + C6426) * C14751) *
              C152037 * C151867 * C1348 +
          (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
              C152037 * C151867 * C1349 -
          ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
           C7828 * C14751) *
              C152037 * C151867 * C1350 +
          (C7854 * C14751 + (C8873 + C8872) * C14752 +
           (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
            C8114 + C8114 + C151795 * C8090) *
               C14753) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C2215 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C2216 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C151849 * C152252 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            (C15285 + C15286) * C14753) *
               C152037 * C2216 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C2215 -
           ((C6091 * C2457 + C15221 + C15221 + C151795 * C2473 + C6089 * C2456 +
             C15222 + C15222 + C6084 * C2472) *
                C14753 +
            (C15286 + C15285) * C14752 + C15294 * C14751) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C2215 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C2216 +
           (C15295 * C14751 + (C15292 + C15291) * C14752 +
            (C6089 * C2457 + C15237 + C15237 + C6084 * C2473 + C6091 * C2458 +
             C15238 + C15238 + C151795 * C2474) *
                C14753) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C2215 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C2216 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C152255 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            (C10201 + C10200) * C14753) *
               C152037 * C2216 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C2215 -
           ((C6091 * C9434 + C9459 + C9459 + C151795 * C9446 + C6089 * C9433 +
             C9458 + C9458 + C6084 * C9445) *
                C14753 +
            (C10200 + C10201) * C14752 + C16568 * C14751) *
               C152037 * C152211) *
              C152239 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C2215 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C2216 +
           (C8140 * C14751 + (C10199 + C10198) * C14752 +
            (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
             C9461 + C9461 + C151795 * C9448) *
                C14753) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151912) *
              C151826 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C4107 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C151912) *
              C151826 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C151835 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C4107 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C152166 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C4107) *
               C151912) *
              C151826 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C4107) *
               C152166 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C4107 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C14751 +
             (C15287 + C15288) * C14752 + C15295 * C14753) *
                C152037 * C4107 -
            ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
             (C15288 + C15287) * C14751) *
                C152037 * C151954) *
               C152166 +
           (((C7475 + C7474) * C14751 + (C16008 + C16009) * C14752 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C14753) *
                C152037 * C151954 -
            ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
             (C6439 + C6438) * C14751) *
                C152037 * C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C151950 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151957 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C4779) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151957 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C151950 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C4779) *
               C151912) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151957 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C151950 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C4779) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C151950 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151957 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C151950 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151957 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C4779) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151957 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C151950 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C4779) *
               C151912) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151957 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C151950 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C4779) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C151950 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151957 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C151950 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151957 +
            (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
                C152037 * C4779) *
               C152166 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151957 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C151950 -
            ((C18570 + C18571) * C14753 + (C10200 + C10201) * C14752 +
             C16568 * C14751) *
                C152037 * C4779) *
               C151912) *
              C3241 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151957 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C151950 -
            ((C18357 + C18358) * C14753 + (C15286 + C15285) * C14752 +
             C15294 * C14751) *
                C152037 * C4779) *
               C152166 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C151950 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151957 +
            (C18136 * C14751 + (C18148 + C18147) * C14752 +
             (C6089 * C9434 + C18141 + C18141 + C6084 * C9446 + C6091 * C18132 +
              C18142 + C18142 + C151795 * C18134) *
                 C14753) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C4107 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152049 * C152037 * C151954) *
                  C151849 * C152261 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152049 * C152037 * C151954 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C4107) *
                  C151849 * C152254 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C4107 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152049 * C152037 * C151954) *
                  C151849 * C152237 +
              ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
                C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
                C140 * C882 + C889 + C889 + C124 * C884) *
                   C152049 * C152037 * C151954 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152049 * C152037 * C4107) *
                  C151849 * C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152049 * C152037 * C4107 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152049 * C152037 * C151954) *
                   C152255 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152049 * C152037 * C151954 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152049 * C152037 * C4107) *
                   C152239 +
               ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                 C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                 C140 * C345 + C382 + C382 + C124 * C369) *
                    C152049 * C152037 * C4107 -
                (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                 C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                 C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                    C152049 * C152037 * C151954) *
                   C152208) *
                  C3241 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152049 * C152037 * C151954 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152049 * C152037 * C4107) *
                   C152255 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152049 * C152037 * C4107 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152049 * C152037 * C151954) *
                   C152239 +
               ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
                 C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
                 C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                    C152049 * C152037 * C151954 -
                (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                 C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                 C134 * C343 + C390 + C390 + C121 * C367) *
                    C152049 * C152037 * C4107) *
                   C152208) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152263 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152260 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152247 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C151849 * C3241 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C152260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152263 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152247 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152049 * C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C4107 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152255 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C152239 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C4107 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C152255 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C152239 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152263 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152260 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152247 -
           ((C10198 + C10199) * C152049 * C6088 +
            (C10200 + C10201) * C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C151849 * C3241 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C152260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152263 -
           ((C9773 + C9774) * C152049 * C6088 +
            (C9775 + C9776) * C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152247 +
           ((C6089 * C2453 + C9974 + C9974 + C6084 * C2469 + C6091 * C2452 +
             C9975 + C9975 + C151795 * C2468) *
                C152049 * C6086 +
            (C6089 * C2956 + C9976 + C9976 + C6084 * C2964 + C6091 * C2957 +
             C9977 + C9977 + C151795 * C2965) *
                C152049 * C6087 +
            (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
             C9979 + C9979 + C151795 * C9972) *
                C152049 * C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C4107 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C151849 * C152261 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            C18346 * C14753) *
               C152037 * C151954 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C4107 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C151954) *
              C151849 * C152237 +
          (((C15704 + C15705) * C14751 + (C15706 + C15707) * C14752 +
            (C6089 * C2451 + C15694 + C15694 + C6084 * C2467 + C6091 * C2818 +
             C15695 + C15695 + C151795 * C2820) *
                C14753) *
               C152037 * C151954 -
           ((C15707 + C15706) * C14753 + (C15705 + C15704) * C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C4107 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C152255 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C4107) *
               C152239 +
           ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
                C152037 * C4107 -
            ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
             C8092 * C14751) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C4107) *
               C152255 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C4107 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C152239 +
           ((C8646 * C14751 + (C9774 + C9773) * C14752 +
             (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
              C9979 + C9979 + C151795 * C9972) *
                 C14753) *
                C152037 * C151954 -
            ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
             C6445 * C14751) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152263 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C152260 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
               C152037 * C152247 -
           ((C17840 + C17841) * C14753 + (C17839 + C17838) * C14752 +
            C17817 * C14751) *
               C152037 * C152224) *
              C151849 * C3241 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            C18346 * C14753) *
               C152037 * C152260 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C152263 -
           ((C18357 + C18358) * C14753 + (C15286 + C15285) * C14752 +
            C15294 * C14751) *
               C152037 * C152247 +
           (C18346 * C14751 + (C18358 + C18357) * C14752 +
            (C6089 * C17804 + C18351 + C18351 + C6084 * C17812 +
             C6091 * C18342 + C18352 + C18352 + C151795 * C18344) *
                C14753) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151950 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151957 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C4779) *
              C151849 * C151826 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C151957 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151950 -
           ((C9773 + C9774) * C152049 * C6088 +
            (C9775 + C9776) * C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C4779) *
              C151849 * C151835 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151950 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151957 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151950 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151957 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C4779) *
              C151849 * C151826 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C151957 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151950 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C4779) *
              C151849 * C151835 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151950 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C151957 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152049 * C152037 * C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151950 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151957 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 + C17842 * C14753) *
               C152037 * C4779) *
              C151849 * C151826 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            C18346 * C14753) *
               C152037 * C151957 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151950 -
           ((C18357 + C18358) * C14753 + (C15286 + C15285) * C14752 +
            C15294 * C14751) *
               C152037 * C4779) *
              C151849 * C151835 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151950 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C151957 +
           (C15295 * C14751 + (C15292 + C15291) * C14752 +
            (C6089 * C2457 + C15237 + C15237 + C6084 * C2473 + C6091 * C2458 +
             C15238 + C15238 + C151795 * C2474) *
                C14753) *
               C152037 * C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152255 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C152239 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C152208) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C152255 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C152239 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C151849 * C152261 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C151954 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C4107) *
              C151849 * C152254 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C4107 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C151954) *
              C151849 * C152237 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152049 * C152037 * C151954 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C4107 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152255 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C152239 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C4107 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C152255 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C152239 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C4107 -
           (C17817 * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C151849 * C152261 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            C18346 * C14753) *
               C152037 * C151954 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C4107 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C151954) *
              C151849 * C152237 +
          (((C15704 + C15705) * C14751 + (C15706 + C15707) * C14752 +
            (C6089 * C2451 + C15694 + C15694 + C6084 * C2467 + C6091 * C2818 +
             C15695 + C15695 + C151795 * C2820) *
                C14753) *
               C152037 * C151954 -
           ((C15707 + C15706) * C14753 + (C15705 + C15704) * C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C4107 -
            (C17817 * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C152255 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             C18559 * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C4107) *
               C152239 +
           ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
                C152037 * C4107 -
            ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
             C8092 * C14751) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             C18346 * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C4107) *
               C152255 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             C18136 * C14753) *
                C152037 * C4107 -
            ((C18147 + C18148) * C14753 + (C9775 + C9776) * C14752 +
             (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C152239 +
           ((C8646 * C14751 + (C9774 + C9773) * C14752 +
             (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
              C9979 + C9979 + C151795 * C9972) *
                 C14753) *
                C152037 * C151954 -
            ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
             C6445 * C14751) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1709 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1710 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C1711 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C151867 * C152218) *
              C152152 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1710 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1709 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C1711 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152049 * C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152166 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151912) *
              C739 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152166) *
              C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152166 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151912) *
              C741 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152166 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C739 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152166) *
              C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152166 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C741 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1709 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1710 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C1711 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C1710 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1709 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C1711 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C152166 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C151912) *
              C739 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C151912 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C152166 -
           ((C6091 * C1531 + C6701 + C6701 + C151795 * C1555 + C6089 * C1532 +
             C6700 + C6700 + C6084 * C1556) *
                C14753 +
            (C7474 + C7475) * C14752 + (C6439 + C6438) * C14751) *
               C152037 * C151867 * C151912) *
              C741 +
          (((C6916 + C6917) * C14751 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C14752 +
            (C6089 * C1531 + C15490 + C15490 + C6084 * C1555 + C6091 * C2677 +
             C15491 + C15491 + C151795 * C2679) *
                C14753) *
               C152037 * C151867 * C151912 -
           ((C6091 * C556 + C14755 + C14755 + C151795 * C580 + C6089 * C554 +
             C14756 + C14756 + C6084 * C578) *
                C14753 +
            (C6091 * C555 + C7115 + C7115 + C151795 * C579 + C6089 * C547 +
             C7114 + C7114 + C6084 * C571) *
                C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C1709 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C1710 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C1711 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C151867 * C152218) *
              C152152 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C1710 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C1709 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C1711 +
           (C8339 * C14751 + (C8659 + C8658) * C14752 +
            (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
             C9764 + C9764 + C151795 * C9753) *
                C14753) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152167 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C1709 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151954 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152167) *
              C1710 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C152167 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151954) *
              C1711 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152049 * C152037 * C151954 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C151912) *
              C335 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C336 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C152167 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            ((C7464 + C7465) * C152049 * C6088 +
             (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C6089 * C2053 + C7418 + C7418 + C6084 * C2061 + C6091 * C2054 +
              C7419 + C7419 + C151795 * C2062) *
                 C152049 * C6088) *
                C151954 -
            ((C6430 + C6431) * C152049 * C6088 +
             (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 +
             (C7470 + C7471) * C152049 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 +
             (C6436 + C6437) * C152049 * C6088) *
                C152167 -
            ((C6091 * C2055 + C7428 + C7428 + C151795 * C2063 + C6089 * C2054 +
              C7429 + C7429 + C6084 * C2062) *
                 C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C152167 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C1709 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152167) *
              C1710 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152167 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C1711 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C152167 -
            ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C152166 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             (C10201 + C10200) * C14753) *
                C152037 * C151954 -
            ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C152167) *
               C151912) *
              C335 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             (C15285 + C15286) * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C152167) *
               C152166 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             (C9776 + C9775) * C14753) *
                C152037 * C152167 -
            ((C6091 * C2957 + C9977 + C9977 + C151795 * C2965 + C6089 * C2956 +
              C9976 + C9976 + C6084 * C2964) *
                 C14753 +
             (C9775 + C9776) * C14752 + (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C14751 +
             (C15287 + C15288) * C14752 + C15295 * C14753) *
                C152037 * C152167 -
            ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
             (C15288 + C15287) * C14751) *
                C152037 * C151954) *
               C152166 +
           (((C7475 + C7474) * C14751 + (C16008 + C16009) * C14752 +
             (C6089 * C2957 + C16002 + C16002 + C6084 * C2965 + C6091 * C2958 +
              C16003 + C16003 + C151795 * C2966) *
                 C14753) *
                C152037 * C151954 -
            ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
             (C6439 + C6438) * C14751) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152167 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C1709 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            (C10201 + C10200) * C14753) *
               C152037 * C151954 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C152167) *
              C1710 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C152167 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C151954) *
              C1711 +
          ((C8860 * C14751 + (C8139 + C8138) * C14752 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C14753) *
               C152037 * C151954 -
           ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
            C7828 * C14751) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152049 * C152037 * C151867 * C151849 * C129 -
              (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
               C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
               C134 * C143 + C174 + C174 + C121 * C159) *
                  C152049 * C152037 * C151867 * C151849 * C130 +
              (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
               C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
               C140 * C147 + C178 + C178 + C124 * C163) *
                  C152049 * C152037 * C151867 * C151849 * C131 -
              (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
               C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
               C134 * C145 + C182 + C182 + C121 * C161) *
                  C152049 * C152037 * C151867 * C151849 * C132 +
              (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 +
               C184 + C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 +
               C140 * C149 + C186 + C186 + C124 * C165) *
                  C152049 * C152037 * C151867 * C151849 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C152239 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C151867 * C152208) *
                  C335 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C152239 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152049 * C152037 * C151867 * C152208) *
                  C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152049 * C152037 * C151867 * C152239 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152049 * C152037 * C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152256 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152241 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C151849 * C335 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C152241 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152256 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152211) *
              C151849 * C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C152256 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C152241 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152049 * C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C152252 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152049 * C152037 * C151867 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152049 * C152037 * C151867 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152049 * C152037 * C151867 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152049 * C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152256 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152241 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C1259 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C152241 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152256 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152211) *
              C1260 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C152256 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C152241 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C6089 * C1534 + C6676 + C6676 + C6084 * C1558 + C6091 * C1533 +
             C6677 + C6677 + C151795 * C1557) *
                C152049 * C6087 +
            (C6089 * C1539 + C6678 + C6678 + C6084 * C1563 + C6091 * C1540 +
             C6679 + C6679 + C151795 * C1564) *
                C152049 * C6088) *
               C152211) *
              C151849 * C335 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C152241 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152256 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152256 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C1259 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 +
            (C8136 + C8137) * C152049 * C6088) *
               C152241 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152256 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C1260 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152256 -
           ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
             C8112 + C8112 + C6084 * C8088) *
                C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C152241 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 + C6672 +
            C6672 + C151795 * C573) *
               C14752 +
           (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 + C6675 +
            C6675 + C151795 * C576) *
               C14753) *
              C152037 * C151867 * C151849 * C129 -
          ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
            C6691 + C6691 + C6084 * C576) *
               C14753 +
           (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
            C6680 + C6680 + C6084 * C573) *
               C14752 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C14751) *
              C152037 * C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C14751 +
           (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 + C6696 +
            C6696 + C151795 * C571) *
               C14752 +
           (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 + C6699 +
            C6699 + C151795 * C578) *
               C14753) *
              C152037 * C151867 * C151849 * C131 -
          ((C6091 * C556 + C14755 + C14755 + C151795 * C580 + C6089 * C554 +
            C14756 + C14756 + C6084 * C578) *
               C14753 +
           (C6091 * C555 + C7115 + C7115 + C151795 * C579 + C6089 * C547 +
            C7114 + C7114 + C6084 * C571) *
               C14752 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C14751) *
              C152037 * C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C14751 +
           (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
            C14758 + C14758 + C151795 * C581) *
               C14752 +
           (C6089 * C556 + C14759 + C14759 + C6084 * C580 + C6091 * C558 +
            C14760 + C14760 + C151795 * C582) *
               C14753) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 +
             C6672 + C6672 + C151795 * C573) *
                C14752 +
            (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C152239 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C152239 -
           ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C14753 +
            (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
             C6680 + C6680 + C6084 * C573) *
                C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152255 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 +
             C6696 + C6696 + C151795 * C571) *
                C14752 +
            (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C6091 * C1531 + C6701 + C6701 + C151795 * C1555 + C6089 * C1532 +
             C6700 + C6700 + C6084 * C1556) *
                C14753 +
            (C7474 + C7475) * C14752 + (C6439 + C6438) * C14751) *
               C152037 * C151867 * C152239 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152256 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C152241 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C151849 * C335 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            (C15285 + C15286) * C14753) *
               C152037 * C152241 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C152256 -
           ((C6091 * C2457 + C15221 + C15221 + C151795 * C2473 + C6089 * C2456 +
             C15222 + C15222 + C6084 * C2472) *
                C14753 +
            (C15286 + C15285) * C14752 + C15294 * C14751) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C152256 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C152241 +
           (C15295 * C14751 + (C15292 + C15291) * C14752 +
            (C6089 * C2457 + C15237 + C15237 + C6084 * C2473 + C6091 * C2458 +
             C15238 + C15238 + C151795 * C2474) *
                C14753) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C1259 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C1260 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C1260 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C1259 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C1259 -
           ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
            (C6439 + C6438) * C14751) *
               C152037 * C151867 * C1260 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C15275 + C15276) * C14752 + C15293 * C14753) *
              C152037 * C151867 * C1347 -
          ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
           (C6427 + C6426) * C14751) *
              C152037 * C151867 * C1348 +
          (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
              C152037 * C151867 * C1349 -
          ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
           C7828 * C14751) *
              C152037 * C151867 * C1350 +
          (C7854 * C14751 + (C8873 + C8872) * C14752 +
           (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
            C8114 + C8114 + C151795 * C8090) *
               C14753) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152256 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C152241 +
           (C15293 * C14751 + (C15280 + C15279) * C14752 +
            (C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
             C9457 + C9457 + C151795 * C2472) *
                C14753) *
               C152037 * C152211) *
              C1259 +
          (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
            (C10201 + C10200) * C14753) *
               C152037 * C152241 -
           (C16568 * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C152256 -
           ((C6091 * C9434 + C9459 + C9459 + C151795 * C9446 + C6089 * C9433 +
             C9458 + C9458 + C6084 * C9445) *
                C14753 +
            (C10200 + C10201) * C14752 + C16568 * C14751) *
               C152037 * C152211) *
              C1260 +
          ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C152256 -
           ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
            C8092 * C14751) *
               C152037 * C152241 +
           (C8140 * C14751 + (C10199 + C10198) * C14752 +
            (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
             C9461 + C9461 + C151795 * C9448) *
                C14753) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C1259 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C1260 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C152167 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C152208) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C1259 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C1260 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152167 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C151849 * C739 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C151954 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152167) *
              C151849 * C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C152167 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C151954) *
              C151849 * C741 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152049 * C152037 * C151954 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C739 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152167) *
              C151849 * C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152167 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C741 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C1259 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C8136 + C8137) * C152049 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C1260 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C152167 -
            ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
              C8112 + C8112 + C6084 * C8088) *
                 C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C1259 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C1260 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C152167 -
           ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
            (C15276 + C15275) * C14751) *
               C152037 * C151954) *
              C151849 * C739 +
          (((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
            (C15285 + C15286) * C14753) *
               C152037 * C151954 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C152167 -
           ((C15291 + C15292) * C14753 + (C15290 + C15289) * C14752 +
            (C15288 + C15287) * C14751) *
               C152037 * C151954) *
              C151849 * C741 +
          (((C15704 + C15705) * C14751 + (C15706 + C15707) * C14752 +
            (C6089 * C2451 + C15694 + C15694 + C6084 * C2467 + C6091 * C2818 +
             C15695 + C15695 + C151795 * C2820) *
                C14753) *
               C152037 * C151954 -
           ((C15707 + C15706) * C14753 + (C15705 + C15704) * C14752 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C14751) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C14751 +
             (C15275 + C15276) * C14752 + C15293 * C14753) *
                C152037 * C152167 -
            ((C15279 + C15280) * C14753 + (C15278 + C15277) * C14752 +
             (C15276 + C15275) * C14751) *
                C152037 * C151954) *
               C1259 +
           (((C7467 + C7466) * C14751 + (C8132 + C8133) * C14752 +
             (C10201 + C10200) * C14753) *
                C152037 * C151954 -
            (C16568 * C14753 + (C7466 + C7467) * C14752 +
             (C6427 + C6426) * C14751) *
                C152037 * C152167) *
               C1260 +
           ((C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
                C152037 * C152167 -
            ((C10198 + C10199) * C14753 + (C8135 + C8134) * C14752 +
             C8092 * C14751) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          ((((C15281 + C15282) * C14751 + (C15283 + C15284) * C14752 +
             (C15285 + C15286) * C14753) *
                C152037 * C151954 -
            (C15294 * C14753 + (C15282 + C15281) * C14752 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C14751) *
                C152037 * C152167) *
               C1259 +
           (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
             (C9776 + C9775) * C14753) *
                C152037 * C152167 -
            ((C6091 * C2957 + C9977 + C9977 + C151795 * C2965 + C6089 * C2956 +
              C9976 + C9976 + C6084 * C2964) *
                 C14753 +
             (C9775 + C9776) * C14752 + (C7469 + C7468) * C14751) *
                C152037 * C151954) *
               C1260 +
           ((C8646 * C14751 + (C9774 + C9773) * C14752 +
             (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
              C9979 + C9979 + C151795 * C9972) *
                 C14753) *
                C152037 * C151954 -
            ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
             C6445 * C14751) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152239 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C151849 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152049 * C152037 * C151867 * C151849 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152049 * C152037 * C151867 * C151849 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152049 * C152037 * C151867 * C151849 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152049 * C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C152252 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152049 * C152037 * C151867 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152049 * C152037 * C151867 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152049 * C152037 * C151867 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152049 * C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 + C6672 +
            C6672 + C151795 * C573) *
               C14752 +
           (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 + C6675 +
            C6675 + C151795 * C576) *
               C14753) *
              C152037 * C151867 * C151849 * C129 -
          ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
            C6691 + C6691 + C6084 * C576) *
               C14753 +
           (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
            C6680 + C6680 + C6084 * C573) *
               C14752 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C14751) *
              C152037 * C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C14751 +
           (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 + C6696 +
            C6696 + C151795 * C571) *
               C14752 +
           (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 + C6699 +
            C6699 + C151795 * C578) *
               C14753) *
              C152037 * C151867 * C151849 * C131 -
          ((C6091 * C556 + C14755 + C14755 + C151795 * C580 + C6089 * C554 +
            C14756 + C14756 + C6084 * C578) *
               C14753 +
           (C6091 * C555 + C7115 + C7115 + C151795 * C579 + C6089 * C547 +
            C7114 + C7114 + C6084 * C571) *
               C14752 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C14751) *
              C152037 * C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C14751 +
           (C6089 * C555 + C14757 + C14757 + C6084 * C579 + C6091 * C557 +
            C14758 + C14758 + C151795 * C581) *
               C14752 +
           (C6089 * C556 + C14759 + C14759 + C6084 * C580 + C6091 * C558 +
            C14760 + C14760 + C151795 * C582) *
               C14753) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C6089 * C550 + C6673 + C6673 + C6084 * C574 + C6091 * C549 +
             C6672 + C6672 + C151795 * C573) *
                C14752 +
            (C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C152239 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C152239 -
           ((C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C14753 +
            (C6091 * C548 + C6681 + C6681 + C151795 * C572 + C6089 * C549 +
             C6680 + C6680 + C6084 * C573) *
                C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C152255 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C6089 * C548 + C6697 + C6697 + C6084 * C572 + C6091 * C547 +
             C6696 + C6696 + C151795 * C571) *
                C14752 +
            (C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C14753) *
               C152037 * C151867 * C152255 -
           ((C6091 * C1531 + C6701 + C6701 + C151795 * C1555 + C6089 * C1532 +
             C6700 + C6700 + C6084 * C1556) *
                C14753 +
            (C7474 + C7475) * C14752 + (C6439 + C6438) * C14751) *
               C152037 * C151867 * C152239 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C14751 +
            (C15275 + C15276) * C14752 + C15293 * C14753) *
               C152037 * C151867 * C1259 -
           ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
            (C6427 + C6426) * C14751) *
               C152037 * C151867 * C1260 +
           (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C14751 + (C7468 + C7469) * C14752 +
            (C9776 + C9775) * C14753) *
               C152037 * C151867 * C1260 -
           (C15294 * C14753 + (C15282 + C15281) * C14752 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C14751) *
               C152037 * C151867 * C1259 -
           ((C9773 + C9774) * C14753 + (C7471 + C7470) * C14752 +
            C6445 * C14751) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C14751 +
            (C15287 + C15288) * C14752 + C15295 * C14753) *
               C152037 * C151867 * C1259 -
           ((C16009 + C16008) * C14753 + (C7474 + C7475) * C14752 +
            (C6439 + C6438) * C14751) *
               C152037 * C151867 * C1260 +
           (C6446 * C14751 + (C7473 + C7472) * C14752 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C14753) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C14751 +
           (C15275 + C15276) * C14752 + C15293 * C14753) *
              C152037 * C151867 * C1347 -
          ((C8133 + C8132) * C14753 + (C7466 + C7467) * C14752 +
           (C6427 + C6426) * C14751) *
              C152037 * C151867 * C1348 +
          (C6444 * C14751 + (C7465 + C7464) * C14752 + C8140 * C14753) *
              C152037 * C151867 * C1349 -
          ((C8138 + C8139) * C14753 + (C8137 + C8136) * C14752 +
           C7828 * C14751) *
              C152037 * C151867 * C1350 +
          (C7854 * C14751 + (C8873 + C8872) * C14752 +
           (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
            C8114 + C8114 + C151795 * C8090) *
               C14753) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C151908 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C151915 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C3585) *
                      C151826 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C151915 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C151908 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C3585) *
                      C151835 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C151908 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C151915 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C3585) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C152167 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C151908 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C152167) *
                       C151915 +
                   (((C23476 + C23475 + C23474) * C152184 +
                     (C25141 + C25142 + C25143) * C152113) *
                        C152037 * C152167 -
                    ((C25144 + C25145 + C25146) * C152113 +
                     (C25143 + C25142 + C25141) * C152184) *
                        C152037 * C151954) *
                       C3585) *
                      C3241 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C152167) *
                       C151908 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C152167 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151915 +
                   (((C25666 + C25665 + C25664) * C152184 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152113) *
                        C152037 * C151954 -
                    ((C25664 + C25665 + C25666) * C152113 +
                     (C23482 + C23481 + C23480) * C152184) *
                        C152037 * C152167) *
                       C3585) *
                      C151832)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C152262 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C152258 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152244 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C151867 * C152218) *
                      C3241 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C152258 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C152262 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152244 +
                   ((C25358 + C25357 + C25356) * C152184 +
                    (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                     C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                     C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                        C152113) *
                       C152037 * C151867 * C152218) *
                      C151832)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C3101 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C151912) *
                      C152261 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C151912 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C3101) *
                      C152254 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C3101 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C151912) *
                      C152237 +
                  (((C23952 + C23953 + C23954) * C152184 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152113) *
                       C152037 * C151867 * C151912 -
                   ((C32658 + C32657 + C32656) * C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C151867 * C3101) *
                      C152212)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C152256 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C152241 +
                    ((C32240 + C32239 + C32238) * C152184 +
                     (C34770 + C34771 + C34772) * C152113) *
                        C152037 * C152211) *
                       C3101 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C152241 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C152256 -
                    ((C27166 + C27167 + C27168) * C152113 +
                     (C25140 + C25139 + C25138) * C152184) *
                        C152037 * C152211) *
                       C151912) *
                      C3241 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C152241 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C152256 -
                    ((C35275 + C35276 + C35277) * C152113 +
                     (C32246 + C32245 + C32244) * C152184) *
                        C152037 * C152211) *
                       C3101 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C152256 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C152241 +
                    ((C26756 + C26755 + C26754) * C152184 +
                     (C23126 * C2956 + C26954 + C26954 + C152231 * C2964 +
                      C23128 * C2957 + C26955 + C26955 + C152232 * C2965 +
                      C23130 * C2958 + C26956 + C26956 + C23123 * C2966) *
                         C152113) *
                        C152037 * C152211) *
                       C151912) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C152167 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C3101 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C152167) *
                       C151912) *
                      C151826 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C152167) *
                       C3101 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C152167 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151912) *
                      C151835 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152184 +
                     (C32247 + C32248 + C32249) * C152113) *
                        C152037 * C152167 -
                    ((C32250 + C32251 + C32252) * C152113 +
                     (C32249 + C32248 + C32247) * C152184) *
                        C152037 * C151954) *
                       C3101 +
                   (((C24498 + C24497 + C24496) * C152184 +
                     (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                      C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                      C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                         C152113) *
                        C152037 * C151954 -
                    ((C24496 + C24497 + C24498) * C152113 +
                     (C23485 + C23484 + C23483) * C152184) *
                        C152037 * C152167) *
                       C151912) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C3101 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C151912) *
                      C152261 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C151912 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C3101) *
                      C152254 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C3101 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C151912) *
                      C152237 +
                  (((C23952 + C23953 + C23954) * C152184 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152113) *
                       C152037 * C151867 * C151912 -
                   ((C32658 + C32657 + C32656) * C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C151867 * C3101) *
                      C152212)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C152262 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C152258 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152244 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C151867 * C152218) *
                      C3241 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C152258 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C152262 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152244 +
                   ((C25358 + C25357 + C25356) * C152184 +
                    (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                     C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                     C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                        C152113) *
                       C152037 * C151867 * C152218) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C4107 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C151908 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C4107) *
                       C151915 +
                   (((C23476 + C23475 + C23474) * C152184 +
                     (C25141 + C25142 + C25143) * C152113) *
                        C152037 * C4107 -
                    ((C25144 + C25145 + C25146) * C152113 +
                     (C25143 + C25142 + C25141) * C152184) *
                        C152037 * C151954) *
                       C3585) *
                      C152152 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C4107) *
                       C151908 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C4107 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151915 +
                   (((C25666 + C25665 + C25664) * C152184 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152113) *
                        C152037 * C151954 -
                    ((C25664 + C25665 + C25666) * C152113 +
                     (C23482 + C23481 + C23480) * C152184) *
                        C152037 * C4107) *
                       C3585) *
                      C151832)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151950 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151957 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C34770 + C34771 + C34772) * C152113) *
                       C152037 * C4779) *
                      C151908 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C151957 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151950 -
                   ((C27166 + C27167 + C27168) * C152113 +
                    (C25140 + C25139 + C25138) * C152184) *
                       C152037 * C4779) *
                      C151915 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151950 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C151957 +
                   ((C25146 + C25145 + C25144) * C152184 +
                    (C23126 * C9432 + C27157 + C27157 + C152231 * C9444 +
                     C23128 * C9431 + C27158 + C27158 + C152232 * C9443 +
                     C23130 * C9970 + C27159 + C27159 + C23123 * C9972) *
                        C152113) *
                       C152037 * C4779) *
                      C3585) *
                 C151821) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C4107 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C152262 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C151954 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C4107) *
                      C152258 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C4107 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C151954) *
                      C152244 +
                  (((C25878 + C25877 + C25876) * C152184 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152113) *
                       C152037 * C151954 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C4107) *
                      C152218) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C4107 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C3101 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C4107) *
                       C151912) *
                      C152252 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C4107) *
                       C3101 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C4107 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151912) *
                      C152235 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152184 +
                     (C32247 + C32248 + C32249) * C152113) *
                        C152037 * C4107 -
                    ((C32250 + C32251 + C32252) * C152113 +
                     (C32249 + C32248 + C32247) * C152184) *
                        C152037 * C151954) *
                       C3101 +
                   (((C24498 + C24497 + C24496) * C152184 +
                     (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                      C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                      C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                         C152113) *
                        C152037 * C151954 -
                    ((C24496 + C24497 + C24498) * C152113 +
                     (C23485 + C23484 + C23483) * C152184) *
                        C152037 * C4107) *
                       C151912) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152263 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C152260 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C34770 + C34771 + C34772) * C152113) *
                       C152037 * C152247 -
                   ((C34773 + C34774 + C34775) * C152113 +
                    (C34772 + C34771 + C34770) * C152184) *
                       C152037 * C152224) *
                      C3101 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C152260 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C152263 -
                   ((C27166 + C27167 + C27168) * C152113 +
                    (C25140 + C25139 + C25138) * C152184) *
                       C152037 * C152247 +
                   ((C27168 + C27167 + C27166) * C152184 +
                    (C23126 * C9433 + C26446 + C26446 + C152231 * C9445 +
                     C23128 * C9434 + C26447 + C26447 + C152232 * C9446 +
                     C23130 * C18132 + C26448 + C26448 + C23123 * C18134) *
                        C152113) *
                       C152037 * C152224) *
                      C151912) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C151950 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151957 +
                    ((C32240 + C32239 + C32238) * C152184 +
                     (C34770 + C34771 + C34772) * C152113) *
                        C152037 * C4779) *
                       C3101 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151957 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C151950 -
                    ((C27166 + C27167 + C27168) * C152113 +
                     (C25140 + C25139 + C25138) * C152184) *
                        C152037 * C4779) *
                       C151912) *
                      C152152 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151957 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C151950 -
                    ((C35275 + C35276 + C35277) * C152113 +
                     (C32246 + C32245 + C32244) * C152184) *
                        C152037 * C4779) *
                       C3101 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C151950 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151957 +
                    ((C26756 + C26755 + C26754) * C152184 +
                     (C23126 * C2956 + C26954 + C26954 + C152231 * C2964 +
                      C23128 * C2957 + C26955 + C26955 + C152232 * C2965 +
                      C23130 * C2958 + C26956 + C26956 + C23123 * C2966) *
                         C152113) *
                        C152037 * C4779) *
                       C151912) *
                      C151832)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C4107 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C3101 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C4107) *
                       C151912) *
                      C152252 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C4107) *
                       C3101 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C4107 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151912) *
                      C152235 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152184 +
                     (C32247 + C32248 + C32249) * C152113) *
                        C152037 * C4107 -
                    ((C32250 + C32251 + C32252) * C152113 +
                     (C32249 + C32248 + C32247) * C152184) *
                        C152037 * C151954) *
                       C3101 +
                   (((C24498 + C24497 + C24496) * C152184 +
                     (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                      C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                      C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                         C152113) *
                        C152037 * C151954 -
                    ((C24496 + C24497 + C24498) * C152113 +
                     (C23485 + C23484 + C23483) * C152184) *
                        C152037 * C4107) *
                       C151912) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C4107 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C152262 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C151954 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C4107) *
                      C152258 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C4107 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C151954) *
                      C152244 +
                  (((C25878 + C25877 + C25876) * C152184 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152113) *
                       C152037 * C151954 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C4107) *
                      C152218) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C1709 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C1710 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C1711 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C151867 * C152218) *
                      C152152 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C1710 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C1709 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C1711 +
                   ((C25358 + C25357 + C25356) * C152184 +
                    (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                     C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                     C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                        C152113) *
                       C152037 * C151867 * C152218) *
                      C151832)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C152166 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C151912) *
                      C739 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C151912 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C152166) *
                      C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C152166 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C151912) *
                      C741 +
                  (((C23952 + C23953 + C23954) * C152184 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152113) *
                       C152037 * C151867 * C151912 -
                   ((C23130 * C557 + C24151 + C24151 + C23123 * C581 +
                     C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                     C23126 * C547 + C24149 + C24149 + C152231 * C571) *
                        C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C151867 * C152166) *
                      C152212)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C2215 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C2216 +
                    ((C32240 + C32239 + C32238) * C152184 +
                     (C34770 + C34771 + C34772) * C152113) *
                        C152037 * C152211) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C2216 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C2215 -
                    ((C27166 + C27167 + C27168) * C152113 +
                     (C25140 + C25139 + C25138) * C152184) *
                        C152037 * C152211) *
                       C151912) *
                      C152152 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C2216 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C2215 -
                    ((C23130 * C2451 + C26953 + C26953 + C23123 * C2467 +
                      C23128 * C2452 + C26952 + C26952 + C152232 * C2468 +
                      C23126 * C2453 + C26951 + C26951 + C152231 * C2469) *
                         C152113 +
                     (C32246 + C32245 + C32244) * C152184) *
                        C152037 * C152211) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C2215 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C2216 +
                    ((C26756 + C26755 + C26754) * C152184 +
                     (C23126 * C2956 + C26954 + C26954 + C152231 * C2964 +
                      C23128 * C2957 + C26955 + C26955 + C152232 * C2965 +
                      C23130 * C2958 + C26956 + C26956 + C23123 * C2966) *
                         C152113) *
                        C152037 * C152211) *
                       C151912) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[86] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152167 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C1709 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C151954 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C152167) *
                      C1710 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C152167 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C151954) *
                      C1711 +
                  (((C25878 + C25877 + C25876) * C152184 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152113) *
                       C152037 * C151954 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C152167) *
                      C152218) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C152167 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C152167) *
                       C151912) *
                      C335 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C152167) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C152167 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151912) *
                      C336 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152184 +
                     (C32247 + C32248 + C32249) * C152113) *
                        C152037 * C152167 -
                    ((C32250 + C32251 + C32252) * C152113 +
                     (C32249 + C32248 + C32247) * C152184) *
                        C152037 * C151954) *
                       C152166 +
                   (((C24498 + C24497 + C24496) * C152184 +
                     (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                      C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                      C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                         C152113) *
                        C152037 * C151954 -
                    ((C24496 + C24497 + C24498) * C152113 +
                     (C23485 + C23484 + C23483) * C152184) *
                        C152037 * C152167) *
                       C151912) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C2814 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C2815 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C34770 + C34771 + C34772) * C152113) *
                       C152037 * C2816 -
                   ((C34773 + C34774 + C34775) * C152113 +
                    (C34772 + C34771 + C34770) * C152184) *
                       C152037 * C152224) *
                      C152166 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C2815 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C2814 -
                   ((C27166 + C27167 + C27168) * C152113 +
                    (C25140 + C25139 + C25138) * C152184) *
                       C152037 * C2816 +
                   ((C27168 + C27167 + C27166) * C152184 +
                    (C23126 * C9433 + C26446 + C26446 + C152231 * C9445 +
                     C23128 * C9434 + C26447 + C26447 + C152232 * C9446 +
                     C23130 * C18132 + C26448 + C26448 + C23123 * C18134) *
                        C152113) *
                       C152037 * C152224) *
                      C151912) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[87] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                        C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                        C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                           C152184 +
                       (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                        C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                        C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                           C152113) *
                          C152037 * C151867 * C151849 * C129 -
                      ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                        C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                        C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                           C152113 +
                       (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                        C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                        C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                           C152184) *
                          C152037 * C151867 * C151849 * C130 +
                      ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                        C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                        C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                           C152184 +
                       (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                        C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                        C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                           C152113) *
                          C152037 * C151867 * C151849 * C131 -
                      ((C23130 * C557 + C24151 + C24151 + C23123 * C581 +
                        C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                        C23126 * C547 + C24149 + C24149 + C152231 * C571) *
                           C152113 +
                       (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                        C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                        C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                           C152184) *
                          C152037 * C151867 * C151849 * C132 +
                      ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                        C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                        C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                           C152184 +
                       (C23126 * C555 + C31721 + C31721 + C152231 * C579 +
                        C23128 * C557 + C31722 + C31722 + C152232 * C581 +
                        C23130 * C882 + C31723 + C31723 + C23123 * C884) *
                           C152113) *
                          C152037 * C151867 * C151849 * C133) +
                 std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                         C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                         C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                            C152184 +
                        (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                         C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                         C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                            C152113) *
                           C152037 * C151867 * C152255 -
                       ((C24490 + C24491 + C24492) * C152113 +
                        (C23473 + C23472 + C23471) * C152184) *
                           C152037 * C151867 * C152239 +
                       ((C23476 + C23475 + C23474) * C152184 +
                        (C25141 + C25142 + C25143) * C152113) *
                           C152037 * C151867 * C152208) *
                          C335 +
                      (((C23477 + C23478 + C23479) * C152184 +
                        (C24493 + C24494 + C24495) * C152113) *
                           C152037 * C151867 * C152239 -
                       ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                         C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                         C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                            C152113 +
                        (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                         C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                         C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                            C152184) *
                           C152037 * C151867 * C152255 -
                       ((C25664 + C25665 + C25666) * C152113 +
                        (C23482 + C23481 + C23480) * C152184) *
                           C152037 * C151867 * C152208) *
                          C336 +
                      (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                         C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                         C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                            C152184 +
                        (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                         C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                         C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                            C152113) *
                           C152037 * C151867 * C152255 -
                       ((C24496 + C24497 + C24498) * C152113 +
                        (C23485 + C23484 + C23483) * C152184) *
                           C152037 * C151867 * C152239 +
                       ((C23488 + C23487 + C23486) * C152184 +
                        (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                         C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                         C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                            C152113) *
                           C152037 * C151867 * C152208) *
                          C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152256 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C152241 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C335 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C152241 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C152256 -
                   ((C23130 * C2451 + C26953 + C26953 + C23123 * C2467 +
                     C23128 * C2452 + C26952 + C26952 + C152232 * C2468 +
                     C23126 * C2453 + C26951 + C26951 + C152231 * C2469) *
                        C152113 +
                    (C32246 + C32245 + C32244) * C152184) *
                       C152037 * C152211) *
                      C151849 * C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C152256 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C152241 +
                   ((C32252 + C32251 + C32250) * C152184 +
                    (C23126 * C2452 + C32196 + C32196 + C152231 * C2468 +
                     C23128 * C2451 + C32197 + C32197 + C152232 * C2467 +
                     C23130 * C2818 + C32198 + C32198 + C23123 * C2820) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C1260 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C1259 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C32235 + C32236 + C32237) * C152113) *
                      C152037 * C151867 * C1347 -
                  ((C24490 + C24491 + C24492) * C152113 +
                   (C23473 + C23472 + C23471) * C152184) *
                      C152037 * C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152184 +
                   (C25141 + C25142 + C25143) * C152113) *
                      C152037 * C151867 * C1349 -
                  ((C25876 + C25877 + C25878) * C152113 +
                   (C24871 + C24870 + C24869) * C152184) *
                      C152037 * C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152184 +
                   (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                    C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                    C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                       C152113) *
                      C152037 * C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152256 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C152241 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C1259 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C152241 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C152256 -
                   ((C27166 + C27167 + C27168) * C152113 +
                    (C25140 + C25139 + C25138) * C152184) *
                       C152037 * C152211) *
                      C1260 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C152256 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C152241 +
                   ((C25146 + C25145 + C25144) * C152184 +
                    (C23126 * C9432 + C27157 + C27157 + C152231 * C9444 +
                     C23128 * C9431 + C27158 + C27158 + C152232 * C9443 +
                     C23130 * C9970 + C27159 + C27159 + C23123 * C9972) *
                        C152113) *
                       C152037 * C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C2215 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C2216 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C152252 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C2216 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C2215 -
                   ((C23130 * C2451 + C26953 + C26953 + C23123 * C2467 +
                     C23128 * C2452 + C26952 + C26952 + C152232 * C2468 +
                     C23126 * C2453 + C26951 + C26951 + C152231 * C2469) *
                        C152113 +
                    (C32246 + C32245 + C32244) * C152184) *
                       C152037 * C152211) *
                      C151849 * C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C2215 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C2216 +
                   ((C32252 + C32251 + C32250) * C152184 +
                    (C23126 * C2452 + C32196 + C32196 + C152231 * C2468 +
                     C23128 * C2451 + C32197 + C32197 + C152232 * C2467 +
                     C23130 * C2818 + C32198 + C32198 + C23123 * C2820) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C2215 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C2216 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C152255 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C2216 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C2215 -
                   ((C27166 + C27167 + C27168) * C152113 +
                    (C25140 + C25139 + C25138) * C152184) *
                       C152037 * C152211) *
                      C152239 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C2215 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C2216 +
                   ((C25146 + C25145 + C25144) * C152184 +
                    (C23126 * C9432 + C27157 + C27157 + C152231 * C9444 +
                     C23128 * C9431 + C27158 + C27158 + C152232 * C9443 +
                     C23130 * C9970 + C27159 + C27159 + C23123 * C9972) *
                        C152113) *
                       C152037 * C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C32235 + C32236 + C32237) * C152113) *
                      C152037 * C2446 -
                  ((C32238 + C32239 + C32240) * C152113 +
                   (C32237 + C32236 + C32235) * C152184) *
                      C152037 * C2447 +
                  ((C32240 + C32239 + C32238) * C152184 +
                   (C34770 + C34771 + C34772) * C152113) *
                      C152037 * C2448 -
                  ((C34773 + C34774 + C34775) * C152113 +
                   (C34772 + C34771 + C34770) * C152184) *
                      C152037 * C2449 +
                  ((C34775 + C34774 + C34773) * C152184 +
                   (C23126 * C17805 + C34755 + C34755 + C152231 * C17813 +
                    C23128 * C17804 + C34756 + C34756 + C152232 * C17812 +
                    C23130 * C18342 + C34757 + C34757 + C23123 * C18344) *
                       C152113) *
                      C152037 * C2450) *
                 C151849 * C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C152167 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C1259 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C152167) *
                       C1260 +
                   (((C23476 + C23475 + C23474) * C152184 +
                     (C25141 + C25142 + C25143) * C152113) *
                        C152037 * C152167 -
                    ((C25144 + C25145 + C25146) * C152113 +
                     (C25143 + C25142 + C25141) * C152184) *
                        C152037 * C151954) *
                       C152208) *
                      C152152 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C152167) *
                       C1259 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C152167 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C1260 +
                   (((C25666 + C25665 + C25664) * C152184 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152113) *
                        C152037 * C151954 -
                    ((C25664 + C25665 + C25666) * C152113 +
                     (C23482 + C23481 + C23480) * C152184) *
                        C152037 * C152167) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152167 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C151849 * C739 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C151954 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C152167) *
                      C151849 * C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C152167 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C151954) *
                      C151849 * C741 +
                  (((C32656 + C32657 + C32658) * C152184 +
                    (C23126 * C554 + C32647 + C32647 + C152231 * C578 +
                     C23128 * C556 + C32648 + C32648 + C152232 * C580 +
                     C23130 * C558 + C32649 + C32649 + C23123 * C582) *
                        C152113) *
                       C152037 * C151954 -
                   ((C32658 + C32657 + C32656) * C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C152167) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C2814 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C2815 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C34770 + C34771 + C34772) * C152113) *
                       C152037 * C2816 -
                   ((C34773 + C34774 + C34775) * C152113 +
                    (C34772 + C34771 + C34770) * C152184) *
                       C152037 * C152224) *
                      C151849 * C152152 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C2815 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C2814 -
                   ((C35275 + C35276 + C35277) * C152113 +
                    (C32246 + C32245 + C32244) * C152184) *
                       C152037 * C2816 +
                   ((C35277 + C35276 + C35275) * C152184 +
                    (C23126 * C2456 + C35266 + C35266 + C152231 * C2472 +
                     C23128 * C2457 + C35267 + C35267 + C152232 * C2473 +
                     C23130 * C2458 + C35268 + C35268 + C23123 * C2474) *
                        C152113) *
                       C152037 * C152224) *
                      C151849 * C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                        C152113) *
                       C152037 * C151867 * C152255 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C152239 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152208) *
                      C335 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C152239 -
                   ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                        C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C152255 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152208) *
                      C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                        C152113) *
                       C152037 * C151867 * C152255 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C152239 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                       C152113) *
                      C152037 * C151867 * C151849 * C129 -
                  ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                    C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                    C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                       C152113 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152184) *
                      C152037 * C151867 * C151849 * C130 +
                  ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152184 +
                   (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                    C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                    C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                       C152113) *
                      C152037 * C151867 * C151849 * C131 -
                  ((C23130 * C557 + C24151 + C24151 + C23123 * C581 +
                    C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                    C23126 * C547 + C24149 + C24149 + C152231 * C571) *
                       C152113 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152184) *
                      C152037 * C151867 * C151849 * C132 +
                  ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                    C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                    C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                       C152184 +
                   (C23126 * C555 + C31721 + C31721 + C152231 * C579 +
                    C23128 * C557 + C31722 + C31722 + C152232 * C581 +
                    C23130 * C882 + C31723 + C31723 + C23123 * C884) *
                       C152113) *
                      C152037 * C151867 * C151849 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C1260 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C1259 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C32235 + C32236 + C32237) * C152113) *
                      C152037 * C151867 * C1347 -
                  ((C24490 + C24491 + C24492) * C152113 +
                   (C23473 + C23472 + C23471) * C152184) *
                      C152037 * C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152184 +
                   (C25141 + C25142 + C25143) * C152113) *
                      C152037 * C151867 * C1349 -
                  ((C25876 + C25877 + C25878) * C152113 +
                   (C24871 + C24870 + C24869) * C152184) *
                      C152037 * C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152184 +
                   (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                    C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                    C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                       C152113) *
                      C152037 * C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C2215 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C2216 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C152252 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C2216 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C2215 -
                   ((C23130 * C2451 + C26953 + C26953 + C23123 * C2467 +
                     C23128 * C2452 + C26952 + C26952 + C152232 * C2468 +
                     C23126 * C2453 + C26951 + C26951 + C152231 * C2469) *
                        C152113 +
                    (C32246 + C32245 + C32244) * C152184) *
                       C152037 * C152211) *
                      C151849 * C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C2215 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C2216 +
                   ((C32252 + C32251 + C32250) * C152184 +
                    (C23126 * C2452 + C32196 + C32196 + C152231 * C2468 +
                     C23128 * C2451 + C32197 + C32197 + C152232 * C2467 +
                     C23130 * C2818 + C32198 + C32198 + C23123 * C2820) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C2215 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C2216 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C152255 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C2216 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C2215 -
                   ((C27166 + C27167 + C27168) * C152113 +
                    (C25140 + C25139 + C25138) * C152184) *
                       C152037 * C152211) *
                      C152239 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C2215 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C2216 +
                   ((C25146 + C25145 + C25144) * C152184 +
                    (C23126 * C9432 + C27157 + C27157 + C152231 * C9444 +
                     C23128 * C9431 + C27158 + C27158 + C152232 * C9443 +
                     C23130 * C9970 + C27159 + C27159 + C23123 * C9972) *
                        C152113) *
                       C152037 * C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C4107 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C4107) *
                       C151912) *
                      C151826 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C4107) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C4107 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151912) *
                      C151835 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152184 +
                     (C32247 + C32248 + C32249) * C152113) *
                        C152037 * C4107 -
                    ((C32250 + C32251 + C32252) * C152113 +
                     (C32249 + C32248 + C32247) * C152184) *
                        C152037 * C151954) *
                       C152166 +
                   (((C24498 + C24497 + C24496) * C152184 +
                     (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                      C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                      C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                         C152113) *
                        C152037 * C151954 -
                    ((C24496 + C24497 + C24498) * C152113 +
                     (C23485 + C23484 + C23483) * C152184) *
                        C152037 * C4107) *
                       C151912) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C151950 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151957 +
                    ((C32240 + C32239 + C32238) * C152184 +
                     (C34770 + C34771 + C34772) * C152113) *
                        C152037 * C4779) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151957 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C151950 -
                    ((C27166 + C27167 + C27168) * C152113 +
                     (C25140 + C25139 + C25138) * C152184) *
                        C152037 * C4779) *
                       C151912) *
                      C3241 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151957 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C151950 -
                    ((C35275 + C35276 + C35277) * C152113 +
                     (C32246 + C32245 + C32244) * C152184) *
                        C152037 * C4779) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C151950 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151957 +
                    ((C26756 + C26755 + C26754) * C152184 +
                     (C23126 * C2956 + C26954 + C26954 + C152231 * C2964 +
                      C23128 * C2957 + C26955 + C26955 + C152232 * C2965 +
                      C23130 * C2958 + C26956 + C26956 + C23123 * C2966) *
                         C152113) *
                        C152037 * C4779) *
                       C151912) *
                      C151832)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C4107 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C152255 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C4107) *
                       C152239 +
                   (((C23476 + C23475 + C23474) * C152184 +
                     (C25141 + C25142 + C25143) * C152113) *
                        C152037 * C4107 -
                    ((C25144 + C25145 + C25146) * C152113 +
                     (C25143 + C25142 + C25141) * C152184) *
                        C152037 * C151954) *
                       C152208) *
                      C3241 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C4107) *
                       C152255 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C4107 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C152239 +
                   (((C25666 + C25665 + C25664) * C152184 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152113) *
                        C152037 * C151954 -
                    ((C25664 + C25665 + C25666) * C152113 +
                     (C23482 + C23481 + C23480) * C152184) *
                        C152037 * C4107) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C4107 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C151849 * C152261 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C151954 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C4107) *
                      C151849 * C152254 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C4107 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C151954) *
                      C151849 * C152237 +
                  (((C32656 + C32657 + C32658) * C152184 +
                    (C23126 * C554 + C32647 + C32647 + C152231 * C578 +
                     C23128 * C556 + C32648 + C32648 + C152232 * C580 +
                     C23130 * C558 + C32649 + C32649 + C23123 * C582) *
                        C152113) *
                       C152037 * C151954 -
                   ((C32658 + C32657 + C32656) * C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C4107) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152263 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C152260 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C34770 + C34771 + C34772) * C152113) *
                       C152037 * C152247 -
                   ((C34773 + C34774 + C34775) * C152113 +
                    (C34772 + C34771 + C34770) * C152184) *
                       C152037 * C152224) *
                      C151849 * C3241 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C152260 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C152263 -
                   ((C35275 + C35276 + C35277) * C152113 +
                    (C32246 + C32245 + C32244) * C152184) *
                       C152037 * C152247 +
                   ((C35277 + C35276 + C35275) * C152184 +
                    (C23126 * C2456 + C35266 + C35266 + C152231 * C2472 +
                     C23128 * C2457 + C35267 + C35267 + C152232 * C2473 +
                     C23130 * C2458 + C35268 + C35268 + C23123 * C2474) *
                        C152113) *
                       C152037 * C152224) *
                      C151849 * C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151950 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151957 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C34770 + C34771 + C34772) * C152113) *
                       C152037 * C4779) *
                      C151849 * C151826 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C151957 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151950 -
                   ((C35275 + C35276 + C35277) * C152113 +
                    (C32246 + C32245 + C32244) * C152184) *
                       C152037 * C4779) *
                      C151849 * C151835 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151950 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C151957 +
                   ((C32252 + C32251 + C32250) * C152184 +
                    (C23126 * C2452 + C32196 + C32196 + C152231 * C2468 +
                     C23128 * C2451 + C32197 + C32197 + C152232 * C2467 +
                     C23130 * C2818 + C32198 + C32198 + C23123 * C2820) *
                        C152113) *
                       C152037 * C4779) *
                      C151849 * C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C4107 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C151849 * C152261 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C151954 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C4107) *
                      C151849 * C152254 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C4107 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C151954) *
                      C151849 * C152237 +
                  (((C32656 + C32657 + C32658) * C152184 +
                    (C23126 * C554 + C32647 + C32647 + C152231 * C578 +
                     C23128 * C556 + C32648 + C32648 + C152232 * C580 +
                     C23130 * C558 + C32649 + C32649 + C23123 * C582) *
                        C152113) *
                       C152037 * C151954 -
                   ((C32658 + C32657 + C32656) * C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C4107) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C4107 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C152255 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C4107) *
                       C152239 +
                   (((C23476 + C23475 + C23474) * C152184 +
                     (C25141 + C25142 + C25143) * C152113) *
                        C152037 * C4107 -
                    ((C25144 + C25145 + C25146) * C152113 +
                     (C25143 + C25142 + C25141) * C152184) *
                        C152037 * C151954) *
                       C152208) *
                      C3241 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C4107) *
                       C152255 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C4107 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C152239 +
                   (((C25666 + C25665 + C25664) * C152184 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152113) *
                        C152037 * C151954 -
                    ((C25664 + C25665 + C25666) * C152113 +
                     (C23482 + C23481 + C23480) * C152184) *
                        C152037 * C4107) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C152166 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C151912) *
                      C739 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C151912 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C152166) *
                      C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C152166 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C151912) *
                      C741 +
                  (((C23952 + C23953 + C23954) * C152184 +
                    (C23126 * C1086 + C24152 + C24152 + C152231 * C1098 +
                     C23128 * C1087 + C24153 + C24153 + C152232 * C1099 +
                     C23130 * C1088 + C24154 + C24154 + C23123 * C1100) *
                        C152113) *
                       C152037 * C151867 * C151912 -
                   ((C23130 * C557 + C24151 + C24151 + C23123 * C581 +
                     C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                     C23126 * C547 + C24149 + C24149 + C152231 * C571) *
                        C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C151867 * C152166) *
                      C152212)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C1709 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C1710 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C1711 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C151867 * C152218) *
                      C152152 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C1710 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C1709 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C1711 +
                   ((C25358 + C25357 + C25356) * C152184 +
                    (C23126 * C2054 + C25655 + C25655 + C152231 * C2062 +
                     C23128 * C2055 + C25656 + C25656 + C152232 * C2063 +
                     C23130 * C2056 + C25657 + C25657 + C23123 * C2064) *
                        C152113) *
                       C152037 * C151867 * C152218) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C152167 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C152166 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C152167) *
                       C151912) *
                      C335 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C152167) *
                       C152166 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C152167 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C151912) *
                      C336 +
                  ((((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                      C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                      C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                         C152184 +
                     (C32247 + C32248 + C32249) * C152113) *
                        C152037 * C152167 -
                    ((C32250 + C32251 + C32252) * C152113 +
                     (C32249 + C32248 + C32247) * C152184) *
                        C152037 * C151954) *
                       C152166 +
                   (((C24498 + C24497 + C24496) * C152184 +
                     (C23126 * C1532 + C23740 + C23740 + C152231 * C1556 +
                      C23128 * C1531 + C23741 + C23741 + C152232 * C1555 +
                      C23130 * C2677 + C23742 + C23742 + C23123 * C2679) *
                         C152113) *
                        C152037 * C151954 -
                    ((C24496 + C24497 + C24498) * C152113 +
                     (C23485 + C23484 + C23483) * C152184) *
                        C152037 * C152167) *
                       C151912) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152167 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C1709 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C151954 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C152167) *
                      C1710 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C152167 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C151954) *
                      C1711 +
                  (((C25878 + C25877 + C25876) * C152184 +
                    (C23126 * C8074 + C25117 + C25117 + C152231 * C8086 +
                     C23128 * C8073 + C25118 + C25118 + C152232 * C8085 +
                     C23130 * C9751 + C25119 + C25119 + C23123 * C9753) *
                        C152113) *
                       C152037 * C151954 -
                   ((C25876 + C25877 + C25878) * C152113 +
                    (C24871 + C24870 + C24869) * C152184) *
                       C152037 * C152167) *
                      C152218) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                        C152113) *
                       C152037 * C151867 * C152255 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C152239 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152208) *
                      C335 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C152239 -
                   ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                        C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C152255 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152208) *
                      C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                        C152113) *
                       C152037 * C151867 * C152255 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C152239 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                       C152113) *
                      C152037 * C151867 * C151849 * C129 -
                  ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                    C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                    C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                       C152113 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152184) *
                      C152037 * C151867 * C151849 * C130 +
                  ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152184 +
                   (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                    C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                    C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                       C152113) *
                      C152037 * C151867 * C151849 * C131 -
                  ((C23130 * C557 + C24151 + C24151 + C23123 * C581 +
                    C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                    C23126 * C547 + C24149 + C24149 + C152231 * C571) *
                       C152113 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152184) *
                      C152037 * C151867 * C151849 * C132 +
                  ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                    C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                    C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                       C152184 +
                   (C23126 * C555 + C31721 + C31721 + C152231 * C579 +
                    C23128 * C557 + C31722 + C31722 + C152232 * C581 +
                    C23130 * C882 + C31723 + C31723 + C23123 * C884) *
                       C152113) *
                      C152037 * C151867 * C151849 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152256 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C152241 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C335 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C152241 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C152256 -
                   ((C23130 * C2451 + C26953 + C26953 + C23123 * C2467 +
                     C23128 * C2452 + C26952 + C26952 + C152232 * C2468 +
                     C23126 * C2453 + C26951 + C26951 + C152231 * C2469) *
                        C152113 +
                    (C32246 + C32245 + C32244) * C152184) *
                       C152037 * C152211) *
                      C151849 * C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C152256 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C152241 +
                   ((C32252 + C32251 + C32250) * C152184 +
                    (C23126 * C2452 + C32196 + C32196 + C152231 * C2468 +
                     C23128 * C2451 + C32197 + C32197 + C152232 * C2467 +
                     C23130 * C2818 + C32198 + C32198 + C23123 * C2820) *
                        C152113) *
                       C152037 * C152211) *
                      C151849 * C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C1260 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C1259 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C32235 + C32236 + C32237) * C152113) *
                      C152037 * C151867 * C1347 -
                  ((C24490 + C24491 + C24492) * C152113 +
                   (C23473 + C23472 + C23471) * C152184) *
                      C152037 * C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152184 +
                   (C25141 + C25142 + C25143) * C152113) *
                      C152037 * C151867 * C1349 -
                  ((C25876 + C25877 + C25878) * C152113 +
                   (C24871 + C24870 + C24869) * C152184) *
                      C152037 * C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152184 +
                   (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                    C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                    C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                       C152113) *
                      C152037 * C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152256 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C152241 +
                   ((C32240 + C32239 + C32238) * C152184 +
                    (C23126 * C2454 + C26442 + C26442 + C152231 * C2470 +
                     C23128 * C2453 + C26441 + C26441 + C152232 * C2469 +
                     C23130 * C2452 + C26440 + C26440 + C23123 * C2468) *
                        C152113) *
                       C152037 * C152211) *
                      C1259 +
                  (((C24492 + C24491 + C24490) * C152184 +
                    (C25138 + C25139 + C25140) * C152113) *
                       C152037 * C152241 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C152256 -
                   ((C27166 + C27167 + C27168) * C152113 +
                    (C25140 + C25139 + C25138) * C152184) *
                       C152037 * C152211) *
                      C1260 +
                  (((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C152256 -
                   ((C25144 + C25145 + C25146) * C152113 +
                    (C25143 + C25142 + C25141) * C152184) *
                       C152037 * C152241 +
                   ((C25146 + C25145 + C25144) * C152184 +
                    (C23126 * C9432 + C27157 + C27157 + C152231 * C9444 +
                     C23128 * C9431 + C27158 + C27158 + C152232 * C9443 +
                     C23130 * C9970 + C27159 + C27159 + C23123 * C9972) *
                        C152113) *
                       C152037 * C152211) *
                      C152208) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C152167 -
                   ((C32238 + C32239 + C32240) * C152113 +
                    (C32237 + C32236 + C32235) * C152184) *
                       C152037 * C151954) *
                      C151849 * C739 +
                  (((C32241 + C32242 + C32243) * C152184 +
                    (C32244 + C32245 + C32246) * C152113) *
                       C152037 * C151954 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C152167) *
                      C151849 * C740 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C152167 -
                   ((C32250 + C32251 + C32252) * C152113 +
                    (C32249 + C32248 + C32247) * C152184) *
                       C152037 * C151954) *
                      C151849 * C741 +
                  (((C32656 + C32657 + C32658) * C152184 +
                    (C23126 * C554 + C32647 + C32647 + C152231 * C578 +
                     C23128 * C556 + C32648 + C32648 + C152232 * C580 +
                     C23130 * C558 + C32649 + C32649 + C23123 * C582) *
                        C152113) *
                       C152037 * C151954 -
                   ((C32658 + C32657 + C32656) * C152113 +
                    (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                     C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                     C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                        C152184) *
                       C152037 * C152167) *
                      C151849 * C152212)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                      C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                      C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                         C152184 +
                     (C32235 + C32236 + C32237) * C152113) *
                        C152037 * C152167 -
                    ((C32238 + C32239 + C32240) * C152113 +
                     (C32237 + C32236 + C32235) * C152184) *
                        C152037 * C151954) *
                       C1259 +
                   (((C24492 + C24491 + C24490) * C152184 +
                     (C25138 + C25139 + C25140) * C152113) *
                        C152037 * C151954 -
                    ((C24490 + C24491 + C24492) * C152113 +
                     (C23473 + C23472 + C23471) * C152184) *
                        C152037 * C152167) *
                       C1260 +
                   (((C23476 + C23475 + C23474) * C152184 +
                     (C25141 + C25142 + C25143) * C152113) *
                        C152037 * C152167 -
                    ((C25144 + C25145 + C25146) * C152113 +
                     (C25143 + C25142 + C25141) * C152184) *
                        C152037 * C151954) *
                       C152208) *
                      C152152 +
                  ((((C32241 + C32242 + C32243) * C152184 +
                     (C32244 + C32245 + C32246) * C152113) *
                        C152037 * C151954 -
                    ((C32243 + C32242 + C32241) * C152113 +
                     (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                      C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                      C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                         C152184) *
                        C152037 * C152167) *
                       C1259 +
                   (((C23477 + C23478 + C23479) * C152184 +
                     (C24493 + C24494 + C24495) * C152113) *
                        C152037 * C152167 -
                    ((C26754 + C26755 + C26756) * C152113 +
                     (C24495 + C24494 + C24493) * C152184) *
                        C152037 * C151954) *
                       C1260 +
                   (((C25666 + C25665 + C25664) * C152184 +
                     (C23126 * C1540 + C26745 + C26745 + C152231 * C1564 +
                      C23128 * C1541 + C26746 + C26746 + C152232 * C1565 +
                      C23130 * C1542 + C26747 + C26747 + C23123 * C1566) *
                         C152113) *
                        C152037 * C151954 -
                    ((C25664 + C25665 + C25666) * C152113 +
                     (C23482 + C23481 + C23480) * C152184) *
                        C152037 * C152167) *
                       C152208) *
                      C151832)) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                    C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                    C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                       C152113) *
                      C152037 * C151867 * C151849 * C129 -
                  ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                    C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                    C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                       C152113 +
                   (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                    C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                    C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                       C152184) *
                      C152037 * C151867 * C151849 * C130 +
                  ((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                    C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                    C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                       C152184 +
                   (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                    C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                    C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                       C152113) *
                      C152037 * C151867 * C151849 * C131 -
                  ((C23130 * C557 + C24151 + C24151 + C23123 * C581 +
                    C23128 * C555 + C24150 + C24150 + C152232 * C579 +
                    C23126 * C547 + C24149 + C24149 + C152231 * C571) *
                       C152113 +
                   (C23130 * C147 + C23154 + C23154 + C23123 * C163 +
                    C23128 * C146 + C23155 + C23155 + C152232 * C162 +
                    C23126 * C145 + C23156 + C23156 + C152231 * C161) *
                       C152184) *
                      C152037 * C151867 * C151849 * C132 +
                  ((C23126 * C146 + C23157 + C23157 + C152231 * C162 +
                    C23128 * C147 + C23158 + C23158 + C152232 * C163 +
                    C23130 * C148 + C23159 + C23159 + C23123 * C164) *
                       C152184 +
                   (C23126 * C555 + C31721 + C31721 + C152231 * C579 +
                    C23128 * C557 + C31722 + C31722 + C152232 * C581 +
                    C23130 * C882 + C31723 + C31723 + C23123 * C884) *
                       C152113) *
                      C152037 * C151867 * C151849 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C23126 * C550 + C23712 + C23712 + C152231 * C574 +
                     C23128 * C549 + C23711 + C23711 + C152232 * C573 +
                     C23130 * C548 + C23710 + C23710 + C23123 * C572) *
                        C152113) *
                       C152037 * C151867 * C152255 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C152239 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152208) *
                      C335 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C152239 -
                   ((C23130 * C547 + C23721 + C23721 + C23123 * C571 +
                     C23128 * C548 + C23720 + C23720 + C152232 * C572 +
                     C23126 * C549 + C23719 + C23719 + C152231 * C573) *
                        C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C152255 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152208) *
                      C336 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C23126 * C548 + C23736 + C23736 + C152231 * C572 +
                     C23128 * C547 + C23735 + C23735 + C152232 * C571 +
                     C23130 * C555 + C23734 + C23734 + C23123 * C579) *
                        C152113) *
                       C152037 * C151867 * C152255 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C152239 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                     C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                     C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                        C152184 +
                    (C32235 + C32236 + C32237) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24490 + C24491 + C24492) * C152113 +
                    (C23473 + C23472 + C23471) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23476 + C23475 + C23474) * C152184 +
                    (C25141 + C25142 + C25143) * C152113) *
                       C152037 * C151867 * C152208) *
                      C152252 +
                  (((C23477 + C23478 + C23479) * C152184 +
                    (C24493 + C24494 + C24495) * C152113) *
                       C152037 * C151867 * C1260 -
                   ((C32243 + C32242 + C32241) * C152113 +
                    (C23130 * C145 + C23142 + C23142 + C23123 * C161 +
                     C23128 * C144 + C23143 + C23143 + C152232 * C160 +
                     C23126 * C143 + C23144 + C23144 + C152231 * C159) *
                        C152184) *
                       C152037 * C151867 * C1259 -
                   ((C25664 + C25665 + C25666) * C152113 +
                    (C23482 + C23481 + C23480) * C152184) *
                       C152037 * C151867 * C152208) *
                      C152235 +
                  (((C23126 * C144 + C23145 + C23145 + C152231 * C160 +
                     C23128 * C145 + C23146 + C23146 + C152232 * C161 +
                     C23130 * C146 + C23147 + C23147 + C23123 * C162) *
                        C152184 +
                    (C32247 + C32248 + C32249) * C152113) *
                       C152037 * C151867 * C1259 -
                   ((C24496 + C24497 + C24498) * C152113 +
                    (C23485 + C23484 + C23483) * C152184) *
                       C152037 * C151867 * C1260 +
                   ((C23488 + C23487 + C23486) * C152184 +
                    (C23126 * C1536 + C24469 + C24469 + C152231 * C1560 +
                     C23128 * C1535 + C24470 + C24470 + C152232 * C1559 +
                     C23130 * C1916 + C24471 + C24471 + C23123 * C1918) *
                        C152113) *
                       C152037 * C151867 * C152208) *
                      C152202)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C23126 * C142 + C23133 + C23133 + C152231 * C158 +
                    C23128 * C143 + C23134 + C23134 + C152232 * C159 +
                    C23130 * C144 + C23135 + C23135 + C23123 * C160) *
                       C152184 +
                   (C32235 + C32236 + C32237) * C152113) *
                      C152037 * C151867 * C1347 -
                  ((C24490 + C24491 + C24492) * C152113 +
                   (C23473 + C23472 + C23471) * C152184) *
                      C152037 * C151867 * C1348 +
                  ((C23476 + C23475 + C23474) * C152184 +
                   (C25141 + C25142 + C25143) * C152113) *
                      C152037 * C151867 * C1349 -
                  ((C25876 + C25877 + C25878) * C152113 +
                   (C24871 + C24870 + C24869) * C152184) *
                      C152037 * C151867 * C1350 +
                  ((C24874 + C24873 + C24872) * C152184 +
                   (C23126 * C8076 + C25867 + C25867 + C152231 * C8088 +
                    C23128 * C8075 + C25868 + C25868 + C152232 * C8087 +
                    C23130 * C8642 + C25869 + C25869 + C23123 * C8644) *
                       C152113) *
                      C152037 * C151867 * C1351) *
                 C151821) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C151908 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151915 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C3585) *
              C151826 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151915 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C151908 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C3585) *
              C151835 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C151908 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151915 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C151908 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151915 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C3585) *
              C151826 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C151915 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C151908 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C3585) *
              C151835 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C151908 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151915 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C151908 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C151915 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C152167 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C3585) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C151908 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151915 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C151908 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151915 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C152167 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C3585) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C151908 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151915 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152262 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152258 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152244 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C151867 * C152218) *
              C3241 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152258 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152262 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152244 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152049 * C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C3101 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151912) *
              C152261 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C3101) *
              C152254 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C3101 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151912) *
              C152237 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152256 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C152241 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C152211) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C152241 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152256 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C152211) *
               C151912) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C152241 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152256 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C152211) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152256 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C152241 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C3101 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C3101 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152262 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152258 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C152244 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C152258 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152262 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152244 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152256 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C152241 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C152211) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C152241 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152256 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C152211) *
               C151912) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C152241 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152256 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C152211) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152256 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C152241 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C151912) *
              C151826 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C151835 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C152167 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151912) *
              C151826 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C152167 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C3101 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151912) *
              C152261 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C3101) *
              C152254 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C3101 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151912) *
              C152237 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152262 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152258 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152244 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C151867 * C152218) *
              C3241 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152258 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152262 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152244 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152049 * C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C3101 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C3101 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152262 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152258 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C152244 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C152258 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152262 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152244 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C151908 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C151915 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C3585) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C151908 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151915 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C151908 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151915 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C4107 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C3585) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C151908 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151915 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151950 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151957 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C4779) *
              C151908 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151957 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151950 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C4779) *
              C151915 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151950 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151957 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151950 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151957 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C4779) *
              C151908 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151957 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151950 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C4779) *
              C151915 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151950 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151957 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C152262 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151954 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C4107) *
              C152258 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C4107 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151954) *
              C152244 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152049 * C152037 * C151954 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C151912) *
              C152252 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C152235 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152263 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152260 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152247 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C3101 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C152260 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152263 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152247 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152049 * C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C4107 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C152262 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C4107) *
              C152258 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C4107 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C152244 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152263 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152260 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152247 -
           ((C10198 + C10199) * C152049 * C6088 +
            (C10200 + C10201) * C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C3101 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C152260 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152263 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152247 +
           ((C10201 + C10200) * C152049 * C6086 +
            (C10199 + C10198) * C152049 * C6087 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C152049 * C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C151950 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151957 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C4779) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151957 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C151950 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C4779) *
               C151912) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151957 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C151950 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C4779) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C151950 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151957 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C151950 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151957 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C4779) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151957 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C151950 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C4779) *
               C151912) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151957 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C151950 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C4779) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C151950 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151957 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C151912) *
              C152252 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C152235 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C152262 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151954 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C4107) *
              C152258 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C4107 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151954) *
              C152244 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152049 * C152037 * C151954 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C3101 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C152235 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C4107 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C3101 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C152262 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C4107) *
              C152258 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C4107 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C152244 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1709 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1710 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C1711 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C151867 * C152218) *
              C152152 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1710 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1709 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C1711 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152049 * C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152166 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151912) *
              C739 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152166) *
              C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152166 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151912) *
              C741 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C2215 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C2216 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C152211) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C2216 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C2215 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C152211) *
               C151912) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C2216 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C2215 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C152211) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C2215 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C2216 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152166 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C739 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152166) *
              C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152166 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C741 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1709 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1710 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C1711 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C1710 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1709 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C1711 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C2215 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C2216 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C152211) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C2216 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C2215 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C152211) *
               C151912) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C2216 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C2215 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C152211) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C2215 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C2216 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152167 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C1709 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151954 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152167) *
              C1710 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C152167 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151954) *
              C1711 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152049 * C152037 * C151954 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C151912) *
              C335 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C336 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C152167 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C152166 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C2815 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C2814 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C2816 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152049 * C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            ((C7464 + C7465) * C152049 * C6088 +
             (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C6089 * C2053 + C7418 + C7418 + C6084 * C2061 + C6091 * C2054 +
              C7419 + C7419 + C151795 * C2062) *
                 C152049 * C6088) *
                C151954 -
            ((C6430 + C6431) * C152049 * C6088 +
             (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 +
             (C7470 + C7471) * C152049 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 +
             (C6436 + C6437) * C152049 * C6088) *
                C152167 -
            ((C6091 * C2055 + C7428 + C7428 + C151795 * C2063 + C6089 * C2054 +
              C7429 + C7429 + C6084 * C2062) *
                 C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C152167 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C1709 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152167) *
              C1710 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152167 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C1711 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2814 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2815 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C2816 -
           ((C10198 + C10199) * C152049 * C6088 +
            (C10200 + C10201) * C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C152166 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C2815 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C2814 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C2816 +
           ((C10201 + C10200) * C152049 * C6086 +
            (C10199 + C10198) * C152049 * C6087 +
            (C6089 * C10173 + C10188 + C10188 + C6084 * C10177 +
             C6091 * C10174 + C10189 + C10189 + C151795 * C10178) *
                C152049 * C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152049 * C152037 * C151867 * C151849 * C129 -
              (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
               C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
               C134 * C143 + C174 + C174 + C121 * C159) *
                  C152049 * C152037 * C151867 * C151849 * C130 +
              (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
               C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
               C140 * C147 + C178 + C178 + C124 * C163) *
                  C152049 * C152037 * C151867 * C151849 * C131 -
              (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
               C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
               C134 * C145 + C182 + C182 + C121 * C161) *
                  C152049 * C152037 * C151867 * C151849 * C132 +
              (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 +
               C184 + C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 +
               C140 * C149 + C186 + C186 + C124 * C165) *
                  C152049 * C152037 * C151867 * C151849 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152049 * C152037 * C151867 * C152239 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152049 * C152037 * C151867 * C152208) *
                  C335 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152049 * C152037 * C151867 * C152239 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152049 * C152037 * C151867 * C152208) *
                  C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152049 * C152037 * C151867 * C152255 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152049 * C152037 * C151867 * C152239 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152049 * C152037 * C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152256 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152241 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C151849 * C335 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C152241 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152256 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152211) *
              C151849 * C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C152256 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C152241 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152049 * C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C152252 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152049 * C152037 * C151867 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152049 * C152037 * C151867 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152049 * C152037 * C151867 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152049 * C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152256 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152241 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C1259 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C152241 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152256 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152211) *
              C1260 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C152256 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C152241 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C151849 * C152252 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C2216 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C2215 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152211) *
              C151849 * C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C2215 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C2216 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152049 * C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C152255 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C2216 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C2215 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152211) *
              C152239 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C2215 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C2216 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C2446 -
          (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 + C585 +
           C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 + C134 * C550 +
           C587 + C587 + C121 * C574) *
              C152049 * C152037 * C2447 +
          (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 + C589 +
           C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 + C140 * C554 +
           C591 + C591 + C124 * C578) *
              C152049 * C152037 * C2448 -
          (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
           C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
           C134 * C2454 + C2479 + C2479 + C121 * C2470) *
              C152049 * C152037 * C2449 +
          (C134 * C2455 + C2480 + C2480 + C121 * C2471 + C136 * C2456 + C2481 +
           C2481 + C122 * C2472 + C138 * C2457 + C2482 + C2482 + C123 * C2473 +
           C140 * C2458 + C2483 + C2483 + C124 * C2474) *
              C152049 * C152037 * C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C6089 * C1534 + C6676 + C6676 + C6084 * C1558 + C6091 * C1533 +
             C6677 + C6677 + C151795 * C1557) *
                C152049 * C6087 +
            (C6089 * C1539 + C6678 + C6678 + C6084 * C1563 + C6091 * C1540 +
             C6679 + C6679 + C151795 * C1564) *
                C152049 * C6088) *
               C152211) *
              C151849 * C335 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C152241 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152256 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152256 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C1259 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 +
            (C8136 + C8137) * C152049 * C6088) *
               C152241 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152256 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C1260 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152256 -
           ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
             C8112 + C8112 + C6084 * C8088) *
                C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C152241 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C2216 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C2215 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C2215 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C152255 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C2216 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C2215 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C152239 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C2215 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C2216 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C2446 -
          (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
           (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
            C6673 + C6673 + C6084 * C574) *
               C152049 * C6086) *
              C2447 +
          ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 + C6675 +
            C6675 + C151795 * C576) *
               C152049 * C6086 +
           (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
              C2448 -
          ((C6091 * C9431 + C9450 + C9450 + C151795 * C9443 + C6089 * C9432 +
            C9451 + C9451 + C6084 * C9444) *
               C152049 * C6088 +
           (C6091 * C2956 + C9452 + C9452 + C151795 * C2964 + C6089 * C2955 +
            C9453 + C9453 + C6084 * C2963) *
               C152049 * C6087 +
           (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
            C9455 + C9455 + C6084 * C2470) *
               C152049 * C6086) *
              C2449 +
          ((C6089 * C2455 + C9456 + C9456 + C6084 * C2471 + C6091 * C2456 +
            C9457 + C9457 + C151795 * C2472) *
               C152049 * C6086 +
           (C6089 * C9433 + C9458 + C9458 + C6084 * C9445 + C6091 * C9434 +
            C9459 + C9459 + C151795 * C9446) *
               C152049 * C6087 +
           (C6089 * C9435 + C9460 + C9460 + C6084 * C9447 + C6091 * C9436 +
            C9461 + C9461 + C151795 * C9448) *
               C152049 * C6088) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C1259 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C1260 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C152167 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C152208) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C1259 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C1260 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152167 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C151849 * C739 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C151954 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152167) *
              C151849 * C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C152167 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C151954) *
              C151849 * C741 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152049 * C152037 * C151954 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C151849 * C152152 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C2815 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C2814 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C2816 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152049 * C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C739 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152167) *
              C151849 * C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152167 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C741 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C1259 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C8136 + C8137) * C152049 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C1260 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C152167 -
            ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
              C8112 + C8112 + C6084 * C8088) *
                 C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C1259 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C1260 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2814 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2815 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C2816 -
           ((C6091 * C9431 + C9450 + C9450 + C151795 * C9443 + C6089 * C9432 +
             C9451 + C9451 + C6084 * C9444) *
                C152049 * C6088 +
            (C6091 * C2956 + C9452 + C9452 + C151795 * C2964 + C6089 * C2955 +
             C9453 + C9453 + C6084 * C2963) *
                C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C151849 * C152152 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C2815 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C2814 -
           ((C9773 + C9774) * C152049 * C6088 +
            (C9775 + C9776) * C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C2816 +
           ((C6089 * C2453 + C9974 + C9974 + C6084 * C2469 + C6091 * C2452 +
             C9975 + C9975 + C151795 * C2468) *
                C152049 * C6086 +
            (C6089 * C2956 + C9976 + C9976 + C6084 * C2964 + C6091 * C2957 +
             C9977 + C9977 + C151795 * C2965) *
                C152049 * C6087 +
            (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
             C9979 + C9979 + C151795 * C9972) *
                C152049 * C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152239 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C151849 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152049 * C152037 * C151867 * C151849 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152049 * C152037 * C151867 * C151849 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152049 * C152037 * C151867 * C151849 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152049 * C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C152252 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152049 * C152037 * C151867 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152049 * C152037 * C151867 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152049 * C152037 * C151867 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152049 * C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C151849 * C152252 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C2216 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C2215 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152211) *
              C151849 * C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C2215 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C2216 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152049 * C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C152255 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C2216 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C2215 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152211) *
              C152239 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C2215 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C2216 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C2216 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C2215 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C2215 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C2215 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C2216 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C152255 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C2216 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C2215 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C152239 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C2215 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C2216 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C151912) *
              C151826 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C151835 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C151912) *
              C151826 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C151835 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C4107 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C151950 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151957 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152049 * C152037 * C4779) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151957 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C151950 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152049 * C152037 * C4779) *
               C151912) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151957 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C151950 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152049 * C152037 * C4779) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C151950 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151957 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152049 * C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C151950 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151957 +
            ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
              C6675 + C6675 + C151795 * C576) *
                 C152049 * C6086 +
             (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                C4779) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151957 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C151950 -
            ((C8138 + C8139) * C152049 * C6088 +
             (C8135 + C8134) * C152049 * C6087 +
             (C8133 + C8132) * C152049 * C6086) *
                C4779) *
               C151912) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151957 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C151950 -
            ((C9773 + C9774) * C152049 * C6088 +
             (C9775 + C9776) * C152049 * C6087 +
             (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
              C6691 + C6691 + C6084 * C576) *
                 C152049 * C6086) *
                C4779) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C151950 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151957 +
            ((C9776 + C9775) * C152049 * C6086 +
             (C9774 + C9773) * C152049 * C6087 +
             (C6089 * C8073 + C9763 + C9763 + C6084 * C8085 + C6091 * C9751 +
              C9764 + C9764 + C151795 * C9753) *
                 C152049 * C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152255 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C152239 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C152208) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C152255 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C152239 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C151849 * C152261 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C151954 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C4107) *
              C151849 * C152254 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C4107 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C151954) *
              C151849 * C152237 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152049 * C152037 * C151954 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152263 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152260 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152247 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152049 * C152037 * C152224) *
              C151849 * C3241 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C152260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152263 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152247 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152049 * C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C4107 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152255 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C152239 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C4107 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C152255 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C152239 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152263 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152260 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152247 -
           ((C10198 + C10199) * C152049 * C6088 +
            (C10200 + C10201) * C152049 * C6087 +
            (C6091 * C2453 + C9454 + C9454 + C151795 * C2469 + C6089 * C2454 +
             C9455 + C9455 + C6084 * C2470) *
                C152049 * C6086) *
               C152224) *
              C151849 * C3241 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C152260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152263 -
           ((C9773 + C9774) * C152049 * C6088 +
            (C9775 + C9776) * C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152247 +
           ((C6089 * C2453 + C9974 + C9974 + C6084 * C2469 + C6091 * C2452 +
             C9975 + C9975 + C151795 * C2468) *
                C152049 * C6086 +
            (C6089 * C2956 + C9976 + C9976 + C6084 * C2964 + C6091 * C2957 +
             C9977 + C9977 + C151795 * C2965) *
                C152049 * C6087 +
            (C6089 * C9431 + C9978 + C9978 + C6084 * C9443 + C6091 * C9970 +
             C9979 + C9979 + C151795 * C9972) *
                C152049 * C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 +
                     C168 + C168 + C122 * C159 + C138 * C144 + C169 + C169 +
                     C123 * C160 + C140 * C145 + C170 + C170 + C124 * C161) *
                        C152049 * C152037 * C151950 -
                    (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 +
                     C585 + C585 + C123 * C572 + C136 * C549 + C586 + C586 +
                     C122 * C573 + C134 * C550 + C587 + C587 + C121 * C574) *
                        C152049 * C152037 * C151957 +
                    (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 +
                     C589 + C589 + C122 * C576 + C138 * C553 + C590 + C590 +
                     C123 * C577 + C140 * C554 + C591 + C591 + C124 * C578) *
                        C152049 * C152037 * C4779) *
                       C151849 * C151826 +
                   ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 +
                     C593 + C593 + C122 * C572 + C138 * C547 + C594 + C594 +
                     C123 * C571 + C140 * C555 + C595 + C595 + C124 * C579) *
                        C152049 * C152037 * C151957 -
                    (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 +
                     C172 + C172 + C123 * C161 + C136 * C144 + C173 + C173 +
                     C122 * C160 + C134 * C143 + C174 + C174 + C121 * C159) *
                        C152049 * C152037 * C151950 -
                    (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 +
                     C597 + C597 + C123 * C578 + C136 * C553 + C598 + C598 +
                     C122 * C577 + C134 * C552 + C599 + C599 + C121 * C576) *
                        C152049 * C152037 * C4779) *
                       C151849 * C151835 +
                   ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 +
                     C176 + C176 + C122 * C161 + C138 * C146 + C177 + C177 +
                     C123 * C162 + C140 * C147 + C178 + C178 + C124 * C163) *
                        C152049 * C152037 * C151950 -
                    (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 +
                     C601 + C601 + C123 * C579 + C136 * C547 + C602 + C602 +
                     C122 * C571 + C134 * C548 + C603 + C603 + C121 * C572) *
                        C152049 * C152037 * C151957 +
                    (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 +
                     C605 + C605 + C122 * C578 + C138 * C556 + C606 + C606 +
                     C123 * C580 + C140 * C558 + C607 + C607 + C124 * C582) *
                        C152049 * C152037 * C4779) *
                       C151849 * C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 +
                      C6091 * C143 + C6095 + C6095 + C151795 * C159) *
                         C152049 * C6086 +
                     (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                        C151950 -
                    (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
                     (C6091 * C549 + C6672 + C6672 + C151795 * C573 +
                      C6089 * C550 + C6673 + C6673 + C6084 * C574) *
                         C152049 * C6086) *
                        C151957 +
                    ((C6089 * C551 + C6674 + C6674 + C6084 * C575 +
                      C6091 * C552 + C6675 + C6675 + C151795 * C576) *
                         C152049 * C6086 +
                     (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
                        C4779) *
                       C151849 * C151826 +
                   (((C6089 * C549 + C6680 + C6680 + C6084 * C573 +
                      C6091 * C548 + C6681 + C6681 + C151795 * C572) *
                         C152049 * C6086 +
                     (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                        C151957 -
                    (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
                     (C6091 * C144 + C6104 + C6104 + C151795 * C160 +
                      C6089 * C143 + C6105 + C6105 + C6084 * C159) *
                         C152049 * C6086) *
                        C151950 -
                    ((C9773 + C9774) * C152049 * C6088 +
                     (C9775 + C9776) * C152049 * C6087 +
                     (C6091 * C553 + C6690 + C6690 + C151795 * C577 +
                      C6089 * C552 + C6691 + C6691 + C6084 * C576) *
                         C152049 * C6086) *
                        C4779) *
                       C151849 * C151835 +
                   (((C6089 * C144 + C6106 + C6106 + C6084 * C160 +
                      C6091 * C145 + C6107 + C6107 + C151795 * C161) *
                         C152049 * C6086 +
                     (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                        C151950 -
                    ((C7472 + C7473) * C152049 * C6088 +
                     (C7474 + C7475) * C152049 * C6087 +
                     (C6091 * C547 + C6696 + C6696 + C151795 * C571 +
                      C6089 * C548 + C6697 + C6697 + C6084 * C572) *
                         C152049 * C6086) *
                        C151957 +
                    ((C6089 * C553 + C6698 + C6698 + C6084 * C577 +
                      C6091 * C554 + C6699 + C6699 + C151795 * C578) *
                         C152049 * C6086 +
                     (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 +
                      C6091 * C1531 + C6701 + C6701 + C151795 * C1555) *
                         C152049 * C6087 +
                     (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 +
                      C6091 * C1542 + C6703 + C6703 + C151795 * C1566) *
                         C152049 * C6088) *
                        C4779) *
                       C151849 * C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C151849 * C152261 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C151954 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C4107) *
              C151849 * C152254 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C4107 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C151954) *
              C151849 * C152237 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152049 * C152037 * C151954 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152255 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C4107) *
               C152239 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C152208) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C4107) *
               C152255 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C152239 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C4107 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152254 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C4107 -
           ((C7472 + C7473) * C152049 * C6088 +
            (C7474 + C7475) * C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C4107 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152255 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C4107) *
               C152239 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C4107 -
            ((C8872 + C8873) * C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C4107) *
               C152255 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C4107 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C152239 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152166 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C151912) *
              C739 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152166) *
              C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152166 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C151912) *
              C741 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152049 * C152037 * C151867 * C151912 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1709 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1710 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C1711 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C151867 * C152218) *
              C152152 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1710 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1709 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C1711 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152049 * C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152166 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C151912) *
              C739 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C151912 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152166) *
              C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152166 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C151912) *
              C741 +
          (((C6916 + C6917) * C152049 * C6086 +
            (C6918 + C6919) * C152049 * C6087 +
            (C6089 * C1353 + C6906 + C6906 + C6084 * C1369 + C6091 * C1715 +
             C6907 + C6907 + C151795 * C1717) *
                C152049 * C6088) *
               C151867 * C151912 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1709 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1710 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C151867 * C1711 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
               C151867 * C1710 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1709 -
           ((C8351 + C8352) * C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C1711 +
           (C8346 * C6086 + (C8352 + C8351) * C152049 * C6087 +
            (C6089 * C7815 + C8344 + C8344 + C6084 * C7823 + C6091 * C8335 +
             C8345 + C8345 + C151795 * C8337) *
                C152049 * C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C151912) *
              C335 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C152166 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C151912) *
              C336 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152049 * C152037 * C152167 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152049 * C152037 * C151954) *
               C152166 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152049 * C152037 * C151954 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152049 * C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152167 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C1709 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C151954 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152167) *
              C1710 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C152167 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C151954) *
              C1711 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152049 * C152037 * C151954 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152049 * C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            ((C7464 + C7465) * C152049 * C6088 +
             (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C6089 * C2053 + C7418 + C7418 + C6084 * C2061 + C6091 * C2054 +
              C7419 + C7419 + C151795 * C2062) *
                 C152049 * C6088) *
                C151954 -
            ((C6430 + C6431) * C152049 * C6088 +
             (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 +
             (C7470 + C7471) * C152049 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C152166 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 +
             (C6436 + C6437) * C152049 * C6088) *
                C152167 -
            ((C6091 * C2055 + C7428 + C7428 + C151795 * C2063 + C6089 * C2054 +
              C7429 + C7429 + C6084 * C2062) *
                 C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C151912) *
              C336 +
          ((((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
              C6107 + C6107 + C151795 * C161) *
                 C152049 * C6086 +
             (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
                C152167 -
            ((C7472 + C7473) * C152049 * C6088 +
             (C7474 + C7475) * C152049 * C6087 +
             (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
              C6697 + C6697 + C6084 * C572) *
                 C152049 * C6086) *
                C151954) *
               C152166 +
           (((C7475 + C7474) * C152049 * C6086 +
             (C7473 + C7472) * C152049 * C6087 +
             (C6089 * C2055 + C7438 + C7438 + C6084 * C2063 + C6091 * C2056 +
              C7439 + C7439 + C151795 * C2064) *
                 C152049 * C6088) *
                C151954 -
            ((C6442 + C6443) * C152049 * C6088 +
             (C6441 + C6440) * C152049 * C6087 +
             (C6439 + C6438) * C152049 * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C1709 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 + C8867 * C6088) *
               C151954 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152167) *
              C1710 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152167 -
           ((C8872 + C8873) * C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C151954) *
              C1711 +
          ((C8867 * C6086 + (C8873 + C8872) * C152049 * C6087 +
            (C6089 * C8853 + C8865 + C8865 + C6084 * C8857 + C6091 * C8854 +
             C8866 + C8866 + C151795 * C8858) *
                C152049 * C6088) *
               C151954 -
           ((C7852 + C7853) * C152049 * C6088 +
            (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152239 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C151849 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152049 * C152037 * C151867 * C151849 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152049 * C152037 * C151867 * C151849 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152049 * C152037 * C151867 * C151849 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152049 * C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152256 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152241 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C151849 * C335 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C152241 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152256 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152049 * C152037 * C152211) *
              C151849 * C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C152256 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C152241 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152049 * C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C152252 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152049 * C152037 * C151867 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152049 * C152037 * C151867 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152049 * C152037 * C151867 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152049 * C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152256 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C152241 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152049 * C152037 * C152211) *
              C1259 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152049 * C152037 * C152241 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C152256 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152049 * C152037 * C152211) *
              C1260 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C152256 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152049 * C152037 * C152241 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152049 * C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C6089 * C1534 + C6676 + C6676 + C6084 * C1558 + C6091 * C1533 +
             C6677 + C6677 + C151795 * C1557) *
                C152049 * C6087 +
            (C6089 * C1539 + C6678 + C6678 + C6084 * C1563 + C6091 * C1540 +
             C6679 + C6679 + C151795 * C1564) *
                C152049 * C6088) *
               C152211) *
              C151849 * C335 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C152241 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152256 -
           ((C6091 * C1541 + C6686 + C6686 + C151795 * C1565 + C6089 * C1540 +
             C6687 + C6687 + C6084 * C1564) *
                C152049 * C6088 +
            (C6091 * C1532 + C6688 + C6688 + C151795 * C1556 + C6089 * C1533 +
             C6689 + C6689 + C6084 * C1557) *
                C152049 * C6087 +
            (C6091 * C553 + C6690 + C6690 + C151795 * C577 + C6089 * C552 +
             C6691 + C6691 + C6084 * C576) *
                C152049 * C6086) *
               C152211) *
              C151849 * C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152256 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C553 + C6698 + C6698 + C6084 * C577 + C6091 * C554 +
             C6699 + C6699 + C151795 * C578) *
                C152049 * C6086 +
            (C6089 * C1532 + C6700 + C6700 + C6084 * C1556 + C6091 * C1531 +
             C6701 + C6701 + C151795 * C1555) *
                C152049 * C6087 +
            (C6089 * C1541 + C6702 + C6702 + C6084 * C1565 + C6091 * C1542 +
             C6703 + C6703 + C151795 * C1566) *
                C152049 * C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152256 -
           (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C152241 +
           ((C6089 * C551 + C6674 + C6674 + C6084 * C575 + C6091 * C552 +
             C6675 + C6675 + C151795 * C576) *
                C152049 * C6086 +
            (C8132 + C8133) * C152049 * C6087 + C8141 * C6088) *
               C152211) *
              C1259 +
          (((C7467 + C7466) * C152049 * C6086 +
            (C7465 + C7464) * C152049 * C6087 +
            (C8136 + C8137) * C152049 * C6088) *
               C152241 -
           (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C152256 -
           ((C8138 + C8139) * C152049 * C6088 +
            (C8135 + C8134) * C152049 * C6087 +
            (C8133 + C8132) * C152049 * C6086) *
               C152211) *
              C1260 +
          ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
               C152256 -
           ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
             C8112 + C8112 + C6084 * C8088) *
                C152049 * C6088 +
            (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
               C152241 +
           (C8141 * C6086 + (C8139 + C8138) * C152049 * C6087 +
            (C6089 * C8077 + C8113 + C8113 + C6084 * C8089 + C6091 * C8078 +
             C8114 + C8114 + C151795 * C8090) *
                C152049 * C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C152167 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152049 * C152037 * C151954) *
              C151849 * C739 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152049 * C152037 * C151954 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C152167) *
              C151849 * C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C152167 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152049 * C152037 * C151954) *
              C151849 * C741 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152049 * C152037 * C151954 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152049 * C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152049 * C152037 * C152167 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152049 * C152037 * C151954) *
               C1259 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152049 * C152037 * C151954 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152049 * C152037 * C152167) *
               C1260 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152049 * C152037 * C152167 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152049 * C152037 * C151954) *
               C152208) *
              C152152 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152049 * C152037 * C151954 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152049 * C152037 * C152167) *
               C1259 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152049 * C152037 * C152167 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152049 * C152037 * C151954) *
               C1260 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152049 * C152037 * C151954 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152049 * C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C152167 -
           ((C6091 * C1537 + C6668 + C6668 + C151795 * C1561 + C6089 * C1538 +
             C6669 + C6669 + C6084 * C1562) *
                C152049 * C6088 +
            (C6091 * C1084 + C6670 + C6670 + C151795 * C1096 + C6089 * C1083 +
             C6671 + C6671 + C6084 * C1095) *
                C152049 * C6087 +
            (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
             C6673 + C6673 + C6084 * C574) *
                C152049 * C6086) *
               C151954) *
              C151849 * C739 +
          (((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
             C6681 + C6681 + C151795 * C572) *
                C152049 * C6086 +
            (C6089 * C1084 + C6682 + C6682 + C6084 * C1096 + C6091 * C1085 +
             C6683 + C6683 + C151795 * C1097) *
                C152049 * C6087 +
            (C6089 * C1537 + C6684 + C6684 + C6084 * C1561 + C6091 * C1536 +
             C6685 + C6685 + C151795 * C1560) *
                C152049 * C6088) *
               C151954 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C152167) *
              C151849 * C740 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C152167 -
           ((C6091 * C1535 + C6692 + C6692 + C151795 * C1559 + C6089 * C1536 +
             C6693 + C6693 + C6084 * C1560) *
                C152049 * C6088 +
            (C6091 * C1086 + C6694 + C6694 + C151795 * C1098 + C6089 * C1085 +
             C6695 + C6695 + C6084 * C1097) *
                C152049 * C6087 +
            (C6091 * C547 + C6696 + C6696 + C151795 * C571 + C6089 * C548 +
             C6697 + C6697 + C6084 * C572) *
                C152049 * C6086) *
               C151954) *
              C151849 * C741 +
          (((C6089 * C547 + C7114 + C7114 + C6084 * C571 + C6091 * C555 +
             C7115 + C7115 + C151795 * C579) *
                C152049 * C6086 +
            (C6089 * C1086 + C7116 + C7116 + C6084 * C1098 + C6091 * C1087 +
             C7117 + C7117 + C151795 * C1099) *
                C152049 * C6087 +
            (C6089 * C1535 + C7118 + C7118 + C6084 * C1559 + C6091 * C1916 +
             C7119 + C7119 + C151795 * C1918) *
                C152049 * C6088) *
               C151954 -
           ((C6919 + C6918) * C152049 * C6088 +
            (C6917 + C6916) * C152049 * C6087 +
            (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
             C6117 + C6117 + C6084 * C161) *
                C152049 * C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
              C6095 + C6095 + C151795 * C159) *
                 C152049 * C6086 +
             (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
                C152167 -
            (C8115 * C6088 + (C7466 + C7467) * C152049 * C6087 +
             (C6091 * C549 + C6672 + C6672 + C151795 * C573 + C6089 * C550 +
              C6673 + C6673 + C6084 * C574) *
                 C152049 * C6086) *
                C151954) *
               C1259 +
           (((C7467 + C7466) * C152049 * C6086 +
             (C7465 + C7464) * C152049 * C6087 +
             (C8136 + C8137) * C152049 * C6088) *
                C151954 -
            (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
             (C6427 + C6426) * C152049 * C6086) *
                C152167) *
               C1260 +
           ((C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
             C7855 * C6088) *
                C152167 -
            ((C6091 * C8075 + C8111 + C8111 + C151795 * C8087 + C6089 * C8076 +
              C8112 + C8112 + C6084 * C8088) *
                 C152049 * C6088 +
             (C8137 + C8136) * C152049 * C6087 + C8115 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C6089 * C549 + C6680 + C6680 + C6084 * C573 + C6091 * C548 +
              C6681 + C6681 + C151795 * C572) *
                 C152049 * C6086 +
             (C7468 + C7469) * C152049 * C6087 + C8653 * C6088) *
                C151954 -
            (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
             (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
              C6105 + C6105 + C6084 * C159) *
                 C152049 * C6086) *
                C152167) *
               C1259 +
           (((C6432 + C6433) * C152049 * C6086 +
             (C6434 + C6435) * C152049 * C6087 + C8346 * C6088) *
                C152167 -
            ((C8658 + C8659) * C152049 * C6088 +
             (C7471 + C7470) * C152049 * C6087 +
             (C7469 + C7468) * C152049 * C6086) *
                C151954) *
               C1260 +
           ((C8653 * C6086 + (C8659 + C8658) * C152049 * C6087 +
             (C6089 * C8075 + C8651 + C8651 + C6084 * C8087 + C6091 * C8642 +
              C8652 + C8652 + C151795 * C8644) *
                 C152049 * C6088) *
                C151954 -
            ((C8351 + C8352) * C152049 * C6088 +
             (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C151849 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152049 * C152037 * C151867 * C151849 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152049 * C152037 * C151867 * C151849 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152049 * C152037 * C151867 * C151849 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152049 * C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C152239 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C152255 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C152239 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152049 * C152037 * C151867 * C152208) *
              C152252 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152049 * C152037 * C151867 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152049 * C152037 * C151867 * C152208) *
              C152235 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152049 * C152037 * C151867 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152049 * C152037 * C151867 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152049 * C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152049 * C152037 * C151867 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152049 * C152037 * C151867 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152049 * C152037 * C151867 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152049 * C152037 * C151867 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152049 * C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6089 * C341 + C6096 + C6096 + C6084 * C365 + C6091 * C340 + C6097 +
            C6097 + C151795 * C364) *
               C152049 * C6087 +
           (C6089 * C342 + C6098 + C6098 + C6084 * C366 + C6091 * C343 + C6099 +
            C6099 + C151795 * C367) *
               C152049 * C6088) *
              C151867 * C151849 * C129 -
          ((C6091 * C344 + C6100 + C6100 + C151795 * C368 + C6089 * C343 +
            C6101 + C6101 + C6084 * C367) *
               C152049 * C6088 +
           (C6091 * C339 + C6102 + C6102 + C151795 * C363 + C6089 * C340 +
            C6103 + C6103 + C6084 * C364) *
               C152049 * C6087 +
           (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
            C6105 + C6105 + C6084 * C159) *
               C152049 * C6086) *
              C151867 * C151849 * C130 +
          ((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 + C6107 +
            C6107 + C151795 * C161) *
               C152049 * C6086 +
           (C6089 * C339 + C6108 + C6108 + C6084 * C363 + C6091 * C338 + C6109 +
            C6109 + C151795 * C362) *
               C152049 * C6087 +
           (C6089 * C344 + C6110 + C6110 + C6084 * C368 + C6091 * C345 + C6111 +
            C6111 + C151795 * C369) *
               C152049 * C6088) *
              C151867 * C151849 * C131 -
          ((C6091 * C347 + C6112 + C6112 + C151795 * C371 + C6089 * C345 +
            C6113 + C6113 + C6084 * C369) *
               C152049 * C6088 +
           (C6091 * C346 + C6114 + C6114 + C151795 * C370 + C6089 * C338 +
            C6115 + C6115 + C6084 * C362) *
               C152049 * C6087 +
           (C6091 * C146 + C6116 + C6116 + C151795 * C162 + C6089 * C145 +
            C6117 + C6117 + C6084 * C161) *
               C152049 * C6086) *
              C151867 * C151849 * C132 +
          ((C6089 * C146 + C6118 + C6118 + C6084 * C162 + C6091 * C147 + C6119 +
            C6119 + C151795 * C163) *
               C152049 * C6086 +
           (C6089 * C346 + C6120 + C6120 + C6084 * C370 + C6091 * C348 + C6121 +
            C6121 + C151795 * C372) *
               C152049 * C6087 +
           (C6089 * C347 + C6122 + C6122 + C6084 * C371 + C6091 * C349 + C6123 +
            C6123 + C151795 * C373) *
               C152049 * C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C152255 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C152239 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C335 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C152239 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C152255 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C336 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C152255 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C152239 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 +
             C6095 + C6095 + C151795 * C159) *
                C152049 * C6086 +
            (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
               C151867 * C1259 -
           ((C6430 + C6431) * C152049 * C6088 +
            (C6429 + C6428) * C152049 * C6087 +
            (C6427 + C6426) * C152049 * C6086) *
               C151867 * C1260 +
           (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 +
            (C6089 * C1357 + C6356 + C6356 + C6084 * C1373 + C6091 * C1358 +
             C6357 + C6357 + C151795 * C1374) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C6432 + C6433) * C152049 * C6086 +
            (C6434 + C6435) * C152049 * C6087 +
            (C6436 + C6437) * C152049 * C6088) *
               C151867 * C1260 -
           (C6448 * C6088 + (C6433 + C6432) * C152049 * C6087 +
            (C6091 * C144 + C6104 + C6104 + C151795 * C160 + C6089 * C143 +
             C6105 + C6105 + C6084 * C159) *
                C152049 * C6086) *
               C151867 * C1259 -
           ((C6091 * C1359 + C6372 + C6372 + C151795 * C1375 + C6089 * C1358 +
             C6373 + C6373 + C6084 * C1374) *
                C152049 * C6088 +
            (C6437 + C6436) * C152049 * C6087 + C6448 * C6086) *
               C151867 * C152208) *
              C152235 +
          (((C6089 * C144 + C6106 + C6106 + C6084 * C160 + C6091 * C145 +
             C6107 + C6107 + C151795 * C161) *
                C152049 * C6086 +
            (C6438 + C6439) * C152049 * C6087 + C6449 * C6088) *
               C151867 * C1259 -
           ((C6442 + C6443) * C152049 * C6088 +
            (C6441 + C6440) * C152049 * C6087 +
            (C6439 + C6438) * C152049 * C6086) *
               C151867 * C1260 +
           (C6449 * C6086 + (C6443 + C6442) * C152049 * C6087 +
            (C6089 * C1359 + C6388 + C6388 + C6084 * C1375 + C6091 * C1360 +
             C6389 + C6389 + C151795 * C1376) *
                C152049 * C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6094 + C6094 + C6084 * C158 + C6091 * C143 + C6095 +
            C6095 + C151795 * C159) *
               C152049 * C6086 +
           (C6426 + C6427) * C152049 * C6087 + C6447 * C6088) *
              C151867 * C1347 -
          (C7841 * C6088 + (C6429 + C6428) * C152049 * C6087 +
           (C6427 + C6426) * C152049 * C6086) *
              C151867 * C1348 +
          (C6447 * C6086 + (C6431 + C6430) * C152049 * C6087 + C7855 * C6088) *
              C151867 * C1349 -
          ((C7852 + C7853) * C152049 * C6088 +
           (C7851 + C7850) * C152049 * C6087 + C7841 * C6086) *
              C151867 * C1350 +
          (C7855 * C6086 + (C7853 + C7852) * C152049 * C6087 +
           (C6089 * C7817 + C7839 + C7839 + C6084 * C7825 + C6091 * C7818 +
            C7840 + C7840 + C151795 * C7826) *
               C152049 * C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[125] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C151908 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C151915 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C151867 * C3585) *
                       C151826 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                        C151867 * C151915 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C151908 -
                    ((C75842 + C75843) * C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C3585) *
                       C151835 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C151908 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C151915 +
                    (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                     (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                      C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                         C152049 * C73612) *
                        C151867 * C3585) *
                       C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152049 * C152248 +
             (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                C152167 -
            (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
             (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
              C74197 + C74197 + C152145 * C574) *
                 C152049 * C152248) *
                C151954) *
               C151908 +
           (((C74991 + C74990) * C152049 * C152248 +
             (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                C151954 -
            (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
             (C73951 + C73950) * C152049 * C152248) *
                C152167) *
               C151915 +
           ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
             C75367 * C73612) *
                C152167 -
            ((C76354 + C76355) * C152049 * C73612 +
             (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                C151954) *
               C3585) *
              C3241 +
          ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
              C74205 + C74205 + C151795 * C572) *
                 C152049 * C152248 +
             (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                C151954 -
            (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152049 * C152248) *
                C152167) *
               C151908 +
           (((C73956 + C73957) * C152049 * C152248 +
             (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                C152167 -
            ((C76146 + C76147) * C152049 * C73612 +
             (C74995 + C74994) * C152049 * C152249 +
             (C74993 + C74992) * C152049 * C152248) *
                C151954) *
               C151915 +
           ((C76141 * C152248 + (C76147 + C76146) * C152049 * C152249 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152049 * C73612) *
                C151954 -
            ((C75842 + C75843) * C152049 * C73612 +
             (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                C152167) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C152262 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C152258 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C151867 * C152244 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C151867 * C152218) *
                       C3241 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                        C151867 * C152258 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C152262 -
                    ((C75842 + C75843) * C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152244 +
                    (C75837 * C152248 + (C75843 + C75842) * C152049 * C152249 +
                     (C73613 * C7815 + C75835 + C75835 + C152145 * C7823 +
                      C73615 * C8335 + C75836 + C75836 + C151795 * C8337) *
                         C152049 * C73612) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C3101 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C151912) *
                       C152261 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                        C151867 * C151912 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C3101) *
                       C152254 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C3101 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C151912) *
                       C152237 +
                   (((C74440 + C74441) * C152049 * C152248 +
                     (C74442 + C74443) * C152049 * C152249 +
                     (C73613 * C1353 + C74430 + C74430 + C152145 * C1369 +
                      C73615 * C1715 + C74431 + C74431 + C151795 * C1717) *
                         C152049 * C73612) *
                        C151867 * C151912 -
                    ((C74443 + C74442) * C152049 * C73612 +
                     (C74441 + C74440) * C152049 * C152249 +
                     (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                      C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                         C152049 * C152248) *
                        C151867 * C3101) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C152256 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C152241 +
                     ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                       C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                          C152049 * C152248 +
                      (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                         C152211) *
                        C3101 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C152241 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C152256 -
                     ((C75632 + C75633) * C152049 * C73612 +
                      (C75629 + C75628) * C152049 * C152249 +
                      (C75627 + C75626) * C152049 * C152248) *
                         C152211) *
                        C151912) *
                       C3241 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C152241 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C152256 -
                     ((C77234 + C77235) * C152049 * C73612 +
                      (C77236 + C77237) * C152049 * C152249 +
                      (C73615 * C553 + C74214 + C74214 + C151795 * C577 +
                       C73613 * C552 + C74215 + C74215 + C152145 * C576) *
                          C152049 * C152248) *
                         C152211) *
                        C3101 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C152256 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C152241 +
                     ((C77237 + C77236) * C152049 * C152248 +
                      (C77235 + C77234) * C152049 * C152249 +
                      (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
                       C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                          C152049 * C73612) *
                         C152211) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[128] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C152167 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151954) *
                        C3101 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C151954 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C152167) *
                        C151912) *
                       C151826 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C151954 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C152167) *
                        C3101 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C152167 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151954) *
                        C151912) *
                       C151835 +
                   ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                       C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                          C152049 * C152248 +
                      (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                         C152167 -
                     ((C74996 + C74997) * C152049 * C73612 +
                      (C74998 + C74999) * C152049 * C152249 +
                      (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                       C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                          C152049 * C152248) *
                         C151954) *
                        C3101 +
                    (((C74999 + C74998) * C152049 * C152248 +
                      (C74997 + C74996) * C152049 * C152249 +
                      (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                       C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73966 + C73967) * C152049 * C73612 +
                      (C73965 + C73964) * C152049 * C152249 +
                      (C73963 + C73962) * C152049 * C152248) *
                         C152167) *
                        C151912) *
                       C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[129] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C3101 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C151912) *
                       C152261 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                        C151867 * C151912 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C3101) *
                       C152254 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C3101 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C151912) *
                       C152237 +
                   (((C74440 + C74441) * C152049 * C152248 +
                     (C74442 + C74443) * C152049 * C152249 +
                     (C73613 * C1353 + C74430 + C74430 + C152145 * C1369 +
                      C73615 * C1715 + C74431 + C74431 + C151795 * C1717) *
                         C152049 * C73612) *
                        C151867 * C151912 -
                    ((C74443 + C74442) * C152049 * C73612 +
                     (C74441 + C74440) * C152049 * C152249 +
                     (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                      C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                         C152049 * C152248) *
                        C151867 * C3101) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C152262 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C152258 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C151867 * C152244 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C151867 * C152218) *
                       C3241 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                        C151867 * C152258 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C152262 -
                    ((C75842 + C75843) * C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152244 +
                    (C75837 * C152248 + (C75843 + C75842) * C152049 * C152249 +
                     (C73613 * C7815 + C75835 + C75835 + C152145 * C7823 +
                      C73615 * C8335 + C75836 + C75836 + C151795 * C8337) *
                         C152049 * C73612) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152049 * C152248 +
             (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                C4107 -
            (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
             (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
              C74197 + C74197 + C152145 * C574) *
                 C152049 * C152248) *
                C151954) *
               C151908 +
           (((C74991 + C74990) * C152049 * C152248 +
             (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                C151954 -
            (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
             (C73951 + C73950) * C152049 * C152248) *
                C4107) *
               C151915 +
           ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
             C75367 * C73612) *
                C4107 -
            ((C76354 + C76355) * C152049 * C73612 +
             (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                C151954) *
               C3585) *
              C152152 +
          ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
              C74205 + C74205 + C151795 * C572) *
                 C152049 * C152248 +
             (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                C151954 -
            (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152049 * C152248) *
                C4107) *
               C151908 +
           (((C73956 + C73957) * C152049 * C152248 +
             (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                C4107 -
            ((C76146 + C76147) * C152049 * C73612 +
             (C74995 + C74994) * C152049 * C152249 +
             (C74993 + C74992) * C152049 * C152248) *
                C151954) *
               C151915 +
           ((C76141 * C152248 + (C76147 + C76146) * C152049 * C152249 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152049 * C73612) *
                C151954 -
            ((C75842 + C75843) * C152049 * C73612 +
             (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                C4107) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151950 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C151957 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                        C4779) *
                       C151908 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C151957 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151950 -
                    ((C75632 + C75633) * C152049 * C73612 +
                     (C75629 + C75628) * C152049 * C152249 +
                     (C75627 + C75626) * C152049 * C152248) *
                        C4779) *
                       C151915 +
                   ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C151950 -
                    ((C76354 + C76355) * C152049 * C73612 +
                     (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                        C151957 +
                    (C75635 * C152248 + (C75633 + C75632) * C152049 * C152249 +
                     (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
                      C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                         C152049 * C73612) *
                        C4779) *
                       C3585) *
                  C151821) /
                 (p * q * std::sqrt(p + q));
    d2ee[132] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C4107 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C151954) *
                       C152262 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C151954 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C4107) *
                       C152258 +
                   ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C4107 -
                    ((C76354 + C76355) * C152049 * C73612 +
                     (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                        C151954) *
                       C152244 +
                   ((C76349 * C152248 + (C76355 + C76354) * C152049 * C152249 +
                     (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
                      C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                         C152049 * C73612) *
                        C151954 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C4107) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C4107 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151954) *
                        C3101 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C151954 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C4107) *
                        C151912) *
                       C152252 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C151954 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C4107) *
                        C3101 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C4107 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151954) *
                        C151912) *
                       C152235 +
                   ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                       C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                          C152049 * C152248 +
                      (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                         C4107 -
                     ((C74996 + C74997) * C152049 * C73612 +
                      (C74998 + C74999) * C152049 * C152249 +
                      (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                       C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                          C152049 * C152248) *
                         C151954) *
                        C3101 +
                    (((C74999 + C74998) * C152049 * C152248 +
                      (C74997 + C74996) * C152049 * C152249 +
                      (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                       C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73966 + C73967) * C152049 * C73612 +
                      (C73965 + C73964) * C152049 * C152249 +
                      (C73963 + C73962) * C152049 * C152248) *
                         C4107) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C152263 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C152260 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                        C152247 -
                    ((C77650 + C77651) * C152049 * C73612 +
                     (C77652 + C77653) * C152049 * C152249 +
                     (C73615 * C2453 + C76918 + C76918 + C151795 * C2469 +
                      C73613 * C2454 + C76919 + C76919 + C152145 * C2470) *
                         C152049 * C152248) *
                        C152224) *
                       C3101 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C152260 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C152263 -
                    ((C75632 + C75633) * C152049 * C73612 +
                     (C75629 + C75628) * C152049 * C152249 +
                     (C75627 + C75626) * C152049 * C152248) *
                        C152247 +
                    ((C77653 + C77652) * C152049 * C152248 +
                     (C77651 + C77650) * C152049 * C152249 +
                     (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
                      C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                         C152049 * C73612) *
                        C152224) *
                       C151912) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[133] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C151950 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151957 +
                     ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                       C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                          C152049 * C152248 +
                      (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                         C4779) *
                        C3101 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C151957 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C151950 -
                     ((C75632 + C75633) * C152049 * C73612 +
                      (C75629 + C75628) * C152049 * C152249 +
                      (C75627 + C75626) * C152049 * C152248) *
                         C4779) *
                        C151912) *
                       C152152 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C151957 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C151950 -
                     ((C77234 + C77235) * C152049 * C73612 +
                      (C77236 + C77237) * C152049 * C152249 +
                      (C73615 * C553 + C74214 + C74214 + C151795 * C577 +
                       C73613 * C552 + C74215 + C74215 + C152145 * C576) *
                          C152049 * C152248) *
                         C4779) *
                        C3101 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C151950 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151957 +
                     ((C77237 + C77236) * C152049 * C152248 +
                      (C77235 + C77234) * C152049 * C152249 +
                      (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
                       C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                          C152049 * C73612) *
                         C4779) *
                        C151912) *
                       C151832)) /
                 (p * q * std::sqrt(p + q));
    d2ee[134] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C4107 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151954) *
                        C3101 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C151954 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C4107) *
                        C151912) *
                       C152252 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C151954 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C4107) *
                        C3101 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C4107 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151954) *
                        C151912) *
                       C152235 +
                   ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                       C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                          C152049 * C152248 +
                      (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                         C4107 -
                     ((C74996 + C74997) * C152049 * C73612 +
                      (C74998 + C74999) * C152049 * C152249 +
                      (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                       C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                          C152049 * C152248) *
                         C151954) *
                        C3101 +
                    (((C74999 + C74998) * C152049 * C152248 +
                      (C74997 + C74996) * C152049 * C152249 +
                      (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                       C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73966 + C73967) * C152049 * C73612 +
                      (C73965 + C73964) * C152049 * C152249 +
                      (C73963 + C73962) * C152049 * C152248) *
                         C4107) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C4107 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C151954) *
                       C152262 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C151954 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C4107) *
                       C152258 +
                   ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C4107 -
                    ((C76354 + C76355) * C152049 * C73612 +
                     (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                        C151954) *
                       C152244 +
                   ((C76349 * C152248 + (C76355 + C76354) * C152049 * C152249 +
                     (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
                      C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                         C152049 * C73612) *
                        C151954 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C4107) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[135] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C1709 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C1710 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C151867 * C1711 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C151867 * C152218) *
                       C152152 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                        C151867 * C1710 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C1709 -
                    ((C75842 + C75843) * C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C1711 +
                    (C75837 * C152248 + (C75843 + C75842) * C152049 * C152249 +
                     (C73613 * C7815 + C75835 + C75835 + C152145 * C7823 +
                      C73615 * C8335 + C75836 + C75836 + C151795 * C8337) *
                         C152049 * C73612) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C152166 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C151912) *
                       C739 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C151912 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C152166) *
                       C740 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C152166 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C151912) *
                       C741 +
                   (((C74440 + C74441) * C152049 * C152248 +
                     (C74442 + C74443) * C152049 * C152249 +
                     (C73613 * C1353 + C74430 + C74430 + C152145 * C1369 +
                      C73615 * C1715 + C74431 + C74431 + C151795 * C1717) *
                         C152049 * C73612) *
                        C151867 * C151912 -
                    ((C74443 + C74442) * C152049 * C73612 +
                     (C74441 + C74440) * C152049 * C152249 +
                     (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                      C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                         C152049 * C152248) *
                        C151867 * C152166) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C2215 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C2216 +
                     ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                       C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                          C152049 * C152248 +
                      (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                         C152211) *
                        C152166 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C2216 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C2215 -
                     ((C75632 + C75633) * C152049 * C73612 +
                      (C75629 + C75628) * C152049 * C152249 +
                      (C75627 + C75626) * C152049 * C152248) *
                         C152211) *
                        C151912) *
                       C152152 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C2216 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C2215 -
                     ((C77234 + C77235) * C152049 * C73612 +
                      (C77236 + C77237) * C152049 * C152249 +
                      (C73615 * C553 + C74214 + C74214 + C151795 * C577 +
                       C73613 * C552 + C74215 + C74215 + C152145 * C576) *
                          C152049 * C152248) *
                         C152211) *
                        C152166 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C2215 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C2216 +
                     ((C77237 + C77236) * C152049 * C152248 +
                      (C77235 + C77234) * C152049 * C152249 +
                      (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
                       C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                          C152049 * C73612) *
                         C152211) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[136] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C152167 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C151954) *
                       C1709 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C151954 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C152167) *
                       C1710 +
                   ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C152167 -
                    ((C76354 + C76355) * C152049 * C73612 +
                     (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                        C151954) *
                       C1711 +
                   ((C76349 * C152248 + (C76355 + C76354) * C152049 * C152249 +
                     (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
                      C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                         C152049 * C73612) *
                        C151954 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C152167) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C152167 -
                     ((C74988 + C74989) * C152049 * C73612 +
                      (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151954) *
                        C152166 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 +
                      (C73613 * C2053 + C74942 + C74942 + C152145 * C2061 +
                       C73615 * C2054 + C74943 + C74943 + C151795 * C2062) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73954 + C73955) * C152049 * C73612 +
                      (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C152167) *
                        C151912) *
                       C335 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 +
                      (C74994 + C74995) * C152049 * C73612) *
                         C151954 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C152167) *
                        C152166 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 +
                      (C73960 + C73961) * C152049 * C73612) *
                         C152167 -
                     ((C73615 * C2055 + C74952 + C74952 + C151795 * C2063 +
                       C73613 * C2054 + C74953 + C74953 + C152145 * C2062) *
                          C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151954) *
                        C151912) *
                       C336 +
                   ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                       C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                          C152049 * C152248 +
                      (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                         C152167 -
                     ((C74996 + C74997) * C152049 * C73612 +
                      (C74998 + C74999) * C152049 * C152249 +
                      (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                       C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                          C152049 * C152248) *
                         C151954) *
                        C152166 +
                    (((C74999 + C74998) * C152049 * C152248 +
                      (C74997 + C74996) * C152049 * C152249 +
                      (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                       C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73966 + C73967) * C152049 * C73612 +
                      (C73965 + C73964) * C152049 * C152249 +
                      (C73963 + C73962) * C152049 * C152248) *
                         C152167) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C2814 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C2815 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                        C2816 -
                    ((C77650 + C77651) * C152049 * C73612 +
                     (C77652 + C77653) * C152049 * C152249 +
                     (C73615 * C2453 + C76918 + C76918 + C151795 * C2469 +
                      C73613 * C2454 + C76919 + C76919 + C152145 * C2470) *
                         C152049 * C152248) *
                        C152224) *
                       C152166 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C2815 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C2814 -
                    ((C75632 + C75633) * C152049 * C73612 +
                     (C75629 + C75628) * C152049 * C152249 +
                     (C75627 + C75626) * C152049 * C152248) *
                        C2816 +
                    ((C77653 + C77652) * C152049 * C152248 +
                     (C77651 + C77650) * C152049 * C152249 +
                     (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
                      C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                         C152049 * C73612) *
                        C152224) *
                       C151912) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                   C152049 * C152248 +
               (C73613 * C341 + C73620 + C73620 + C152145 * C365 +
                C73615 * C340 + C73621 + C73621 + C151795 * C364) *
                   C152049 * C152249 +
               (C73613 * C342 + C73622 + C73622 + C152145 * C366 +
                C73615 * C343 + C73623 + C73623 + C151795 * C367) *
                   C152049 * C73612) *
                  C151867 * C151849 * C129 -
              ((C73615 * C344 + C73624 + C73624 + C151795 * C368 +
                C73613 * C343 + C73625 + C73625 + C152145 * C367) *
                   C152049 * C73612 +
               (C73615 * C339 + C73626 + C73626 + C151795 * C363 +
                C73613 * C340 + C73627 + C73627 + C152145 * C364) *
                   C152049 * C152249 +
               (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                   C152049 * C152248) *
                  C151867 * C151849 * C130 +
              ((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                   C152049 * C152248 +
               (C73613 * C339 + C73632 + C73632 + C152145 * C363 +
                C73615 * C338 + C73633 + C73633 + C151795 * C362) *
                   C152049 * C152249 +
               (C73613 * C344 + C73634 + C73634 + C152145 * C368 +
                C73615 * C345 + C73635 + C73635 + C151795 * C369) *
                   C152049 * C73612) *
                  C151867 * C151849 * C131 -
              ((C73615 * C347 + C73636 + C73636 + C151795 * C371 +
                C73613 * C345 + C73637 + C73637 + C152145 * C369) *
                   C152049 * C73612 +
               (C73615 * C346 + C73638 + C73638 + C151795 * C370 +
                C73613 * C338 + C73639 + C73639 + C152145 * C362) *
                   C152049 * C152249 +
               (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                   C152049 * C152248) *
                  C151867 * C151849 * C132 +
              ((C73613 * C146 + C73642 + C73642 + C152145 * C162 +
                C73615 * C147 + C73643 + C73643 + C151795 * C163) *
                   C152049 * C152248 +
               (C73613 * C346 + C73644 + C73644 + C152145 * C370 +
                C73615 * C348 + C73645 + C73645 + C151795 * C372) *
                   C152049 * C152249 +
               (C73613 * C347 + C73646 + C73646 + C152145 * C371 +
                C73615 * C349 + C73647 + C73647 + C151795 * C373) *
                   C152049 * C73612) *
                  C151867 * C151849 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                 C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                    C152049 * C152248 +
                (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                   C151867 * C152255 -
               ((C73954 + C73955) * C152049 * C73612 +
                (C73953 + C73952) * C152049 * C152249 +
                (C73951 + C73950) * C152049 * C152248) *
                   C151867 * C152239 +
               (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
                 C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                    C152049 * C73612) *
                   C151867 * C152208) *
                  C335 +
              (((C73956 + C73957) * C152049 * C152248 +
                (C73958 + C73959) * C152049 * C152249 +
                (C73960 + C73961) * C152049 * C73612) *
                   C151867 * C152239 -
               (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                 C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                    C152049 * C152248) *
                   C151867 * C152255 -
               ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
                 C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                    C152049 * C73612 +
                (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                   C151867 * C152208) *
                  C336 +
              (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                 C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                    C152049 * C152248 +
                (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                   C151867 * C152255 -
               ((C73966 + C73967) * C152049 * C73612 +
                (C73965 + C73964) * C152049 * C152249 +
                (C73963 + C73962) * C152049 * C152248) *
                   C151867 * C152239 +
               (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                 C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                    C152049 * C73612) *
                   C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C152256 -
           ((C73615 * C1537 + C74192 + C74192 + C151795 * C1561 +
             C73613 * C1538 + C74193 + C74193 + C152145 * C1562) *
                C152049 * C73612 +
            (C73615 * C1084 + C74194 + C74194 + C151795 * C1096 +
             C73613 * C1083 + C74195 + C74195 + C152145 * C1095) *
                C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C152241 +
           ((C73613 * C551 + C74198 + C74198 + C152145 * C575 + C73615 * C552 +
             C74199 + C74199 + C151795 * C576) *
                C152049 * C152248 +
            (C73613 * C1534 + C74200 + C74200 + C152145 * C1558 +
             C73615 * C1533 + C74201 + C74201 + C151795 * C1557) *
                C152049 * C152249 +
            (C73613 * C1539 + C74202 + C74202 + C152145 * C1563 +
             C73615 * C1540 + C74203 + C74203 + C151795 * C1564) *
                C152049 * C73612) *
               C152211) *
              C151849 * C335 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C73613 * C1084 + C74206 + C74206 + C152145 * C1096 +
             C73615 * C1085 + C74207 + C74207 + C151795 * C1097) *
                C152049 * C152249 +
            (C73613 * C1537 + C74208 + C74208 + C152145 * C1561 +
             C73615 * C1536 + C74209 + C74209 + C151795 * C1560) *
                C152049 * C73612) *
               C152241 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C152256 -
           ((C73615 * C1541 + C74210 + C74210 + C151795 * C1565 +
             C73613 * C1540 + C74211 + C74211 + C152145 * C1564) *
                C152049 * C73612 +
            (C73615 * C1532 + C74212 + C74212 + C151795 * C1556 +
             C73613 * C1533 + C74213 + C74213 + C152145 * C1557) *
                C152049 * C152249 +
            (C73615 * C553 + C74214 + C74214 + C151795 * C577 + C73613 * C552 +
             C74215 + C74215 + C152145 * C576) *
                C152049 * C152248) *
               C152211) *
              C151849 * C336 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152049 * C152248 +
            (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
               C152256 -
           ((C73615 * C1535 + C74216 + C74216 + C151795 * C1559 +
             C73613 * C1536 + C74217 + C74217 + C152145 * C1560) *
                C152049 * C73612 +
            (C73615 * C1086 + C74218 + C74218 + C151795 * C1098 +
             C73613 * C1085 + C74219 + C74219 + C152145 * C1097) *
                C152049 * C152249 +
            (C73615 * C547 + C74220 + C74220 + C151795 * C571 + C73613 * C548 +
             C74221 + C74221 + C152145 * C572) *
                C152049 * C152248) *
               C152241 +
           ((C73613 * C553 + C74222 + C74222 + C152145 * C577 + C73615 * C554 +
             C74223 + C74223 + C151795 * C578) *
                C152049 * C152248 +
            (C73613 * C1532 + C74224 + C74224 + C152145 * C1556 +
             C73615 * C1531 + C74225 + C74225 + C151795 * C1555) *
                C152049 * C152249 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C152049 * C73612) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C151867 * C1259 -
           ((C73954 + C73955) * C152049 * C73612 +
            (C73953 + C73952) * C152049 * C152249 +
            (C73951 + C73950) * C152049 * C152248) *
               C151867 * C1260 +
           (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
            (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
             C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                C152049 * C73612) *
               C151867 * C152208) *
              C152252 +
          (((C73956 + C73957) * C152049 * C152248 +
            (C73958 + C73959) * C152049 * C152249 +
            (C73960 + C73961) * C152049 * C73612) *
               C151867 * C1260 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C151867 * C1259 -
           ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
             C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                C152049 * C73612 +
            (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
               C151867 * C152208) *
              C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152049 * C152248 +
            (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
               C151867 * C1259 -
           ((C73966 + C73967) * C152049 * C73612 +
            (C73965 + C73964) * C152049 * C152249 +
            (C73963 + C73962) * C152049 * C152248) *
               C151867 * C1260 +
           (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
            (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
             C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                C152049 * C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152049 * C152248 +
           (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
              C151867 * C1347 -
          (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
           (C73951 + C73950) * C152049 * C152248) *
              C151867 * C1348 +
          (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
           C75367 * C73612) *
              C151867 * C1349 -
          ((C75364 + C75365) * C152049 * C73612 +
           (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
              C151867 * C1350 +
          (C75367 * C152248 + (C75365 + C75364) * C152049 * C152249 +
           (C73613 * C7817 + C75351 + C75351 + C152145 * C7825 +
            C73615 * C7818 + C75352 + C75352 + C151795 * C7826) *
               C152049 * C73612) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C152256 -
           (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C152241 +
           ((C73613 * C551 + C74198 + C74198 + C152145 * C575 + C73615 * C552 +
             C74199 + C74199 + C151795 * C576) *
                C152049 * C152248 +
            (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
               C152211) *
              C1259 +
          (((C74991 + C74990) * C152049 * C152248 +
            (C74989 + C74988) * C152049 * C152249 +
            (C75630 + C75631) * C152049 * C73612) *
               C152241 -
           (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
            (C73951 + C73950) * C152049 * C152248) *
               C152256 -
           ((C75632 + C75633) * C152049 * C73612 +
            (C75629 + C75628) * C152049 * C152249 +
            (C75627 + C75626) * C152049 * C152248) *
               C152211) *
              C1260 +
          ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
            C75367 * C73612) *
               C152256 -
           ((C73615 * C8075 + C75605 + C75605 + C151795 * C8087 +
             C73613 * C8076 + C75606 + C75606 + C152145 * C8088) *
                C152049 * C73612 +
            (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
               C152241 +
           (C75635 * C152248 + (C75633 + C75632) * C152049 * C152249 +
            (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
             C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                C152049 * C73612) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C2215 -
           (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C2216 +
           ((C73613 * C551 + C74198 + C74198 + C152145 * C575 + C73615 * C552 +
             C74199 + C74199 + C151795 * C576) *
                C152049 * C152248 +
            (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
               C152211) *
              C151849 * C152252 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
               C2216 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C2215 -
           ((C73615 * C1541 + C74210 + C74210 + C151795 * C1565 +
             C73613 * C1540 + C74211 + C74211 + C152145 * C1564) *
                C152049 * C73612 +
            (C73615 * C1532 + C74212 + C74212 + C151795 * C1556 +
             C73613 * C1533 + C74213 + C74213 + C152145 * C1557) *
                C152049 * C152249 +
            (C73615 * C553 + C74214 + C74214 + C151795 * C577 + C73613 * C552 +
             C74215 + C74215 + C152145 * C576) *
                C152049 * C152248) *
               C152211) *
              C151849 * C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152049 * C152248 +
            (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
               C2215 -
           ((C74996 + C74997) * C152049 * C73612 +
            (C74998 + C74999) * C152049 * C152249 +
            (C73615 * C547 + C74220 + C74220 + C151795 * C571 + C73613 * C548 +
             C74221 + C74221 + C152145 * C572) *
                C152049 * C152248) *
               C2216 +
           ((C73613 * C553 + C74222 + C74222 + C152145 * C577 + C73615 * C554 +
             C74223 + C74223 + C151795 * C578) *
                C152049 * C152248 +
            (C73613 * C1532 + C74224 + C74224 + C152145 * C1556 +
             C73615 * C1531 + C74225 + C74225 + C151795 * C1555) *
                C152049 * C152249 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C152049 * C73612) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C2215 -
           (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C2216 +
           ((C73613 * C551 + C74198 + C74198 + C152145 * C575 + C73615 * C552 +
             C74199 + C74199 + C151795 * C576) *
                C152049 * C152248 +
            (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
               C152211) *
              C152255 +
          (((C74991 + C74990) * C152049 * C152248 +
            (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
               C2216 -
           (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
            (C73951 + C73950) * C152049 * C152248) *
               C2215 -
           ((C75632 + C75633) * C152049 * C73612 +
            (C75629 + C75628) * C152049 * C152249 +
            (C75627 + C75626) * C152049 * C152248) *
               C152211) *
              C152239 +
          ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
            C75367 * C73612) *
               C2215 -
           ((C76354 + C76355) * C152049 * C73612 +
            (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
               C2216 +
           (C75635 * C152248 + (C75633 + C75632) * C152049 * C152249 +
            (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
             C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                C152049 * C73612) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152049 * C152248 +
           (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
              C2446 -
          (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
           (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
            C74197 + C74197 + C152145 * C574) *
               C152049 * C152248) *
              C2447 +
          ((C73613 * C551 + C74198 + C74198 + C152145 * C575 + C73615 * C552 +
            C74199 + C74199 + C151795 * C576) *
               C152049 * C152248 +
           (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
              C2448 -
          ((C73615 * C9431 + C76914 + C76914 + C151795 * C9443 +
            C73613 * C9432 + C76915 + C76915 + C152145 * C9444) *
               C152049 * C73612 +
           (C73615 * C2956 + C76916 + C76916 + C151795 * C2964 +
            C73613 * C2955 + C76917 + C76917 + C152145 * C2963) *
               C152049 * C152249 +
           (C73615 * C2453 + C76918 + C76918 + C151795 * C2469 +
            C73613 * C2454 + C76919 + C76919 + C152145 * C2470) *
               C152049 * C152248) *
              C2449 +
          ((C73613 * C2455 + C76920 + C76920 + C152145 * C2471 +
            C73615 * C2456 + C76921 + C76921 + C151795 * C2472) *
               C152049 * C152248 +
           (C73613 * C9433 + C76922 + C76922 + C152145 * C9445 +
            C73615 * C9434 + C76923 + C76923 + C151795 * C9446) *
               C152049 * C152249 +
           (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
            C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
               C152049 * C73612) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152049 * C152248 +
             (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                C152167 -
            (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
             (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
              C74197 + C74197 + C152145 * C574) *
                 C152049 * C152248) *
                C151954) *
               C1259 +
           (((C74991 + C74990) * C152049 * C152248 +
             (C74989 + C74988) * C152049 * C152249 +
             (C75630 + C75631) * C152049 * C73612) *
                C151954 -
            (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
             (C73951 + C73950) * C152049 * C152248) *
                C152167) *
               C1260 +
           ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
             C75367 * C73612) *
                C152167 -
            ((C73615 * C8075 + C75605 + C75605 + C151795 * C8087 +
              C73613 * C8076 + C75606 + C75606 + C152145 * C8088) *
                 C152049 * C73612 +
             (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                C151954) *
               C152208) *
              C152152 +
          ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
              C74205 + C74205 + C151795 * C572) *
                 C152049 * C152248 +
             (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                C151954 -
            (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152049 * C152248) *
                C152167) *
               C1259 +
           (((C73956 + C73957) * C152049 * C152248 +
             (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                C152167 -
            ((C76146 + C76147) * C152049 * C73612 +
             (C74995 + C74994) * C152049 * C152249 +
             (C74993 + C74992) * C152049 * C152248) *
                C151954) *
               C1260 +
           ((C76141 * C152248 + (C76147 + C76146) * C152049 * C152249 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152049 * C73612) *
                C151954 -
            ((C75842 + C75843) * C152049 * C73612 +
             (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C152167 -
           ((C73615 * C1537 + C74192 + C74192 + C151795 * C1561 +
             C73613 * C1538 + C74193 + C74193 + C152145 * C1562) *
                C152049 * C73612 +
            (C73615 * C1084 + C74194 + C74194 + C151795 * C1096 +
             C73613 * C1083 + C74195 + C74195 + C152145 * C1095) *
                C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C151954) *
              C151849 * C739 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C73613 * C1084 + C74206 + C74206 + C152145 * C1096 +
             C73615 * C1085 + C74207 + C74207 + C151795 * C1097) *
                C152049 * C152249 +
            (C73613 * C1537 + C74208 + C74208 + C152145 * C1561 +
             C73615 * C1536 + C74209 + C74209 + C151795 * C1560) *
                C152049 * C73612) *
               C151954 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C152167) *
              C151849 * C740 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152049 * C152248 +
            (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
               C152167 -
           ((C73615 * C1535 + C74216 + C74216 + C151795 * C1559 +
             C73613 * C1536 + C74217 + C74217 + C152145 * C1560) *
                C152049 * C73612 +
            (C73615 * C1086 + C74218 + C74218 + C151795 * C1098 +
             C73613 * C1085 + C74219 + C74219 + C152145 * C1097) *
                C152049 * C152249 +
            (C73615 * C547 + C74220 + C74220 + C151795 * C571 + C73613 * C548 +
             C74221 + C74221 + C152145 * C572) *
                C152049 * C152248) *
               C151954) *
              C151849 * C741 +
          (((C73613 * C547 + C74638 + C74638 + C152145 * C571 + C73615 * C555 +
             C74639 + C74639 + C151795 * C579) *
                C152049 * C152248 +
            (C73613 * C1086 + C74640 + C74640 + C152145 * C1098 +
             C73615 * C1087 + C74641 + C74641 + C151795 * C1099) *
                C152049 * C152249 +
            (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
             C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                C152049 * C73612) *
               C151954 -
           ((C74443 + C74442) * C152049 * C73612 +
            (C74441 + C74440) * C152049 * C152249 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152049 * C152248) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C2814 -
           (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C2815 +
           ((C73613 * C551 + C74198 + C74198 + C152145 * C575 + C73615 * C552 +
             C74199 + C74199 + C151795 * C576) *
                C152049 * C152248 +
            (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
               C2816 -
           ((C73615 * C9431 + C76914 + C76914 + C151795 * C9443 +
             C73613 * C9432 + C76915 + C76915 + C152145 * C9444) *
                C152049 * C73612 +
            (C73615 * C2956 + C76916 + C76916 + C151795 * C2964 +
             C73613 * C2955 + C76917 + C76917 + C152145 * C2963) *
                C152049 * C152249 +
            (C73615 * C2453 + C76918 + C76918 + C151795 * C2469 +
             C73613 * C2454 + C76919 + C76919 + C152145 * C2470) *
                C152049 * C152248) *
               C152224) *
              C151849 * C152152 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
               C2815 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C2814 -
           ((C77234 + C77235) * C152049 * C73612 +
            (C77236 + C77237) * C152049 * C152249 +
            (C73615 * C553 + C74214 + C74214 + C151795 * C577 + C73613 * C552 +
             C74215 + C74215 + C152145 * C576) *
                C152049 * C152248) *
               C2816 +
           ((C73613 * C2453 + C77432 + C77432 + C152145 * C2469 +
             C73615 * C2452 + C77433 + C77433 + C151795 * C2468) *
                C152049 * C152248 +
            (C73613 * C2956 + C77434 + C77434 + C152145 * C2964 +
             C73615 * C2957 + C77435 + C77435 + C151795 * C2965) *
                C152049 * C152249 +
            (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
             C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                C152049 * C73612) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C152255 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C152239 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
                      C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C335 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C152239 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C152255 -
                    ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
                      C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                         C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152208) *
                       C336 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C152255 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C152239 +
                    (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                     (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                      C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                     C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                        C152049 * C152248 +
                    (C73613 * C341 + C73620 + C73620 + C152145 * C365 +
                     C73615 * C340 + C73621 + C73621 + C151795 * C364) *
                        C152049 * C152249 +
                    (C73613 * C342 + C73622 + C73622 + C152145 * C366 +
                     C73615 * C343 + C73623 + C73623 + C151795 * C367) *
                        C152049 * C73612) *
                       C151867 * C151849 * C129 -
                   ((C73615 * C344 + C73624 + C73624 + C151795 * C368 +
                     C73613 * C343 + C73625 + C73625 + C152145 * C367) *
                        C152049 * C73612 +
                    (C73615 * C339 + C73626 + C73626 + C151795 * C363 +
                     C73613 * C340 + C73627 + C73627 + C152145 * C364) *
                        C152049 * C152249 +
                    (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                     C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                        C152049 * C152248) *
                       C151867 * C151849 * C130 +
                   ((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                     C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                        C152049 * C152248 +
                    (C73613 * C339 + C73632 + C73632 + C152145 * C363 +
                     C73615 * C338 + C73633 + C73633 + C151795 * C362) *
                        C152049 * C152249 +
                    (C73613 * C344 + C73634 + C73634 + C152145 * C368 +
                     C73615 * C345 + C73635 + C73635 + C151795 * C369) *
                        C152049 * C73612) *
                       C151867 * C151849 * C131 -
                   ((C73615 * C347 + C73636 + C73636 + C151795 * C371 +
                     C73613 * C345 + C73637 + C73637 + C152145 * C369) *
                        C152049 * C73612 +
                    (C73615 * C346 + C73638 + C73638 + C151795 * C370 +
                     C73613 * C338 + C73639 + C73639 + C152145 * C362) *
                        C152049 * C152249 +
                    (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                     C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                        C152049 * C152248) *
                       C151867 * C151849 * C132 +
                   ((C73613 * C146 + C73642 + C73642 + C152145 * C162 +
                     C73615 * C147 + C73643 + C73643 + C151795 * C163) *
                        C152049 * C152248 +
                    (C73613 * C346 + C73644 + C73644 + C152145 * C370 +
                     C73615 * C348 + C73645 + C73645 + C151795 * C372) *
                        C152049 * C152249 +
                    (C73613 * C347 + C73646 + C73646 + C152145 * C371 +
                     C73615 * C349 + C73647 + C73647 + C151795 * C373) *
                        C152049 * C73612) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C1259 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C1260 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
                      C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152252 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C1260 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C1259 -
                    ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
                      C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                         C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152208) *
                       C152235 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C1259 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C1260 +
                    (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                     (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                      C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                     C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                        C152049 * C152248 +
                    (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                       C151867 * C1347 -
                   (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                    (C73951 + C73950) * C152049 * C152248) *
                       C151867 * C1348 +
                   (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                    C75367 * C73612) *
                       C151867 * C1349 -
                   ((C75364 + C75365) * C152049 * C73612 +
                    (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                       C151867 * C1350 +
                   (C75367 * C152248 + (C75365 + C75364) * C152049 * C152249 +
                    (C73613 * C7817 + C75351 + C75351 + C152145 * C7825 +
                     C73615 * C7818 + C75352 + C75352 + C151795 * C7826) *
                        C152049 * C73612) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C2215 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C2216 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                        C152211) *
                       C151849 * C152252 +
                   (((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                      C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                         C152049 * C152248 +
                     (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                        C2216 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C2215 -
                    ((C73615 * C1541 + C74210 + C74210 + C151795 * C1565 +
                      C73613 * C1540 + C74211 + C74211 + C152145 * C1564) *
                         C152049 * C73612 +
                     (C73615 * C1532 + C74212 + C74212 + C151795 * C1556 +
                      C73613 * C1533 + C74213 + C74213 + C152145 * C1557) *
                         C152049 * C152249 +
                     (C73615 * C553 + C74214 + C74214 + C151795 * C577 +
                      C73613 * C552 + C74215 + C74215 + C152145 * C576) *
                         C152049 * C152248) *
                        C152211) *
                       C151849 * C152235 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C2215 -
                    ((C74996 + C74997) * C152049 * C73612 +
                     (C74998 + C74999) * C152049 * C152249 +
                     (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                      C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                         C152049 * C152248) *
                        C2216 +
                    ((C73613 * C553 + C74222 + C74222 + C152145 * C577 +
                      C73615 * C554 + C74223 + C74223 + C151795 * C578) *
                         C152049 * C152248 +
                     (C73613 * C1532 + C74224 + C74224 + C152145 * C1556 +
                      C73615 * C1531 + C74225 + C74225 + C151795 * C1555) *
                         C152049 * C152249 +
                     (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
                      C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                         C152049 * C73612) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C2215 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C2216 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                        C152211) *
                       C152255 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C2216 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C2215 -
                    ((C75632 + C75633) * C152049 * C73612 +
                     (C75629 + C75628) * C152049 * C152249 +
                     (C75627 + C75626) * C152049 * C152248) *
                        C152211) *
                       C152239 +
                   ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C2215 -
                    ((C76354 + C76355) * C152049 * C73612 +
                     (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                        C2216 +
                    (C75635 * C152248 + (C75633 + C75632) * C152049 * C152249 +
                     (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
                      C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                         C152049 * C73612) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C4107 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151954) *
                        C152166 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C151954 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C4107) *
                        C151912) *
                       C151826 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C151954 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C4107) *
                        C152166 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C4107 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151954) *
                        C151912) *
                       C151835 +
                   ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                       C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                          C152049 * C152248 +
                      (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                         C4107 -
                     ((C74996 + C74997) * C152049 * C73612 +
                      (C74998 + C74999) * C152049 * C152249 +
                      (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                       C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                          C152049 * C152248) *
                         C151954) *
                        C152166 +
                    (((C74999 + C74998) * C152049 * C152248 +
                      (C74997 + C74996) * C152049 * C152249 +
                      (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                       C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73966 + C73967) * C152049 * C73612 +
                      (C73965 + C73964) * C152049 * C152249 +
                      (C73963 + C73962) * C152049 * C152248) *
                         C4107) *
                        C151912) *
                       C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C151950 -
                     (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151957 +
                     ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                       C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                          C152049 * C152248 +
                      (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                         C4779) *
                        C152166 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                         C151957 -
                     (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C151950 -
                     ((C75632 + C75633) * C152049 * C73612 +
                      (C75629 + C75628) * C152049 * C152249 +
                      (C75627 + C75626) * C152049 * C152248) *
                         C4779) *
                        C151912) *
                       C3241 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                         C151957 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C151950 -
                     ((C77234 + C77235) * C152049 * C73612 +
                      (C77236 + C77237) * C152049 * C152249 +
                      (C73615 * C553 + C74214 + C74214 + C151795 * C577 +
                       C73613 * C552 + C74215 + C74215 + C152145 * C576) *
                          C152049 * C152248) *
                         C4779) *
                        C152166 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                         C151950 -
                     ((C76146 + C76147) * C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151957 +
                     ((C77237 + C77236) * C152049 * C152248 +
                      (C77235 + C77234) * C152049 * C152249 +
                      (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
                       C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                          C152049 * C73612) *
                         C4779) *
                        C151912) *
                       C151832)) /
                 (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152049 * C152248 +
             (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                C4107 -
            (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
             (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
              C74197 + C74197 + C152145 * C574) *
                 C152049 * C152248) *
                C151954) *
               C152255 +
           (((C74991 + C74990) * C152049 * C152248 +
             (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                C151954 -
            (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
             (C73951 + C73950) * C152049 * C152248) *
                C4107) *
               C152239 +
           ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
             C75367 * C73612) *
                C4107 -
            ((C76354 + C76355) * C152049 * C73612 +
             (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                C151954) *
               C152208) *
              C3241 +
          ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
              C74205 + C74205 + C151795 * C572) *
                 C152049 * C152248 +
             (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                C151954 -
            (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152049 * C152248) *
                C4107) *
               C152255 +
           (((C73956 + C73957) * C152049 * C152248 +
             (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                C4107 -
            ((C76146 + C76147) * C152049 * C73612 +
             (C74995 + C74994) * C152049 * C152249 +
             (C74993 + C74992) * C152049 * C152248) *
                C151954) *
               C152239 +
           ((C76141 * C152248 + (C76147 + C76146) * C152049 * C152249 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152049 * C73612) *
                C151954 -
            ((C75842 + C75843) * C152049 * C73612 +
             (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C4107 -
           (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C151954) *
              C151849 * C152261 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
               C151954 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C4107) *
              C151849 * C152254 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152049 * C152248 +
            (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
               C4107 -
           ((C74996 + C74997) * C152049 * C73612 +
            (C74998 + C74999) * C152049 * C152249 +
            (C73615 * C547 + C74220 + C74220 + C151795 * C571 + C73613 * C548 +
             C74221 + C74221 + C152145 * C572) *
                C152049 * C152248) *
               C151954) *
              C151849 * C152237 +
          (((C73613 * C547 + C74638 + C74638 + C152145 * C571 + C73615 * C555 +
             C74639 + C74639 + C151795 * C579) *
                C152049 * C152248 +
            (C73613 * C1086 + C74640 + C74640 + C152145 * C1098 +
             C73615 * C1087 + C74641 + C74641 + C151795 * C1099) *
                C152049 * C152249 +
            (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
             C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                C152049 * C73612) *
               C151954 -
           ((C74443 + C74442) * C152049 * C73612 +
            (C74441 + C74440) * C152049 * C152249 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152049 * C152248) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C152263 -
           (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C152260 +
           ((C73613 * C551 + C74198 + C74198 + C152145 * C575 + C73615 * C552 +
             C74199 + C74199 + C151795 * C576) *
                C152049 * C152248 +
            (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
               C152247 -
           ((C77650 + C77651) * C152049 * C73612 +
            (C77652 + C77653) * C152049 * C152249 +
            (C73615 * C2453 + C76918 + C76918 + C151795 * C2469 +
             C73613 * C2454 + C76919 + C76919 + C152145 * C2470) *
                C152049 * C152248) *
               C152224) *
              C151849 * C3241 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
               C152260 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C152263 -
           ((C77234 + C77235) * C152049 * C73612 +
            (C77236 + C77237) * C152049 * C152249 +
            (C73615 * C553 + C74214 + C74214 + C151795 * C577 + C73613 * C552 +
             C74215 + C74215 + C152145 * C576) *
                C152049 * C152248) *
               C152247 +
           ((C73613 * C2453 + C77432 + C77432 + C152145 * C2469 +
             C73615 * C2452 + C77433 + C77433 + C151795 * C2468) *
                C152049 * C152248 +
            (C73613 * C2956 + C77434 + C77434 + C152145 * C2964 +
             C73615 * C2957 + C77435 + C77435 + C151795 * C2965) *
                C152049 * C152249 +
            (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
             C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                C152049 * C73612) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151950 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C151957 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                        C4779) *
                       C151849 * C151826 +
                   (((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                      C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                         C152049 * C152248 +
                     (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                        C151957 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151950 -
                    ((C77234 + C77235) * C152049 * C73612 +
                     (C77236 + C77237) * C152049 * C152249 +
                     (C73615 * C553 + C74214 + C74214 + C151795 * C577 +
                      C73613 * C552 + C74215 + C74215 + C152145 * C576) *
                         C152049 * C152248) *
                        C4779) *
                       C151849 * C151835 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151950 -
                    ((C74996 + C74997) * C152049 * C73612 +
                     (C74998 + C74999) * C152049 * C152249 +
                     (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                      C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                         C152049 * C152248) *
                        C151957 +
                    ((C73613 * C553 + C74222 + C74222 + C152145 * C577 +
                      C73615 * C554 + C74223 + C74223 + C151795 * C578) *
                         C152049 * C152248 +
                     (C73613 * C1532 + C74224 + C74224 + C152145 * C1556 +
                      C73615 * C1531 + C74225 + C74225 + C151795 * C1555) *
                         C152049 * C152249 +
                     (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
                      C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                         C152049 * C73612) *
                        C4779) *
                       C151849 * C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C4107 -
           (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C151954) *
              C151849 * C152261 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
               C151954 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C4107) *
              C151849 * C152254 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152049 * C152248 +
            (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
               C4107 -
           ((C74996 + C74997) * C152049 * C73612 +
            (C74998 + C74999) * C152049 * C152249 +
            (C73615 * C547 + C74220 + C74220 + C151795 * C571 + C73613 * C548 +
             C74221 + C74221 + C152145 * C572) *
                C152049 * C152248) *
               C151954) *
              C151849 * C152237 +
          (((C73613 * C547 + C74638 + C74638 + C152145 * C571 + C73615 * C555 +
             C74639 + C74639 + C151795 * C579) *
                C152049 * C152248 +
            (C73613 * C1086 + C74640 + C74640 + C152145 * C1098 +
             C73615 * C1087 + C74641 + C74641 + C151795 * C1099) *
                C152049 * C152249 +
            (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
             C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                C152049 * C73612) *
               C151954 -
           ((C74443 + C74442) * C152049 * C73612 +
            (C74441 + C74440) * C152049 * C152249 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152049 * C152248) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152049 * C152248 +
             (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                C4107 -
            (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
             (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
              C74197 + C74197 + C152145 * C574) *
                 C152049 * C152248) *
                C151954) *
               C152255 +
           (((C74991 + C74990) * C152049 * C152248 +
             (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                C151954 -
            (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
             (C73951 + C73950) * C152049 * C152248) *
                C4107) *
               C152239 +
           ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
             C75367 * C73612) *
                C4107 -
            ((C76354 + C76355) * C152049 * C73612 +
             (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                C151954) *
               C152208) *
              C3241 +
          ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
              C74205 + C74205 + C151795 * C572) *
                 C152049 * C152248 +
             (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                C151954 -
            (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152049 * C152248) *
                C4107) *
               C152255 +
           (((C73956 + C73957) * C152049 * C152248 +
             (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                C4107 -
            ((C76146 + C76147) * C152049 * C73612 +
             (C74995 + C74994) * C152049 * C152249 +
             (C74993 + C74992) * C152049 * C152248) *
                C151954) *
               C152239 +
           ((C76141 * C152248 + (C76147 + C76146) * C152049 * C152249 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152049 * C73612) *
                C151954 -
            ((C75842 + C75843) * C152049 * C73612 +
             (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C152166 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C151912) *
                       C739 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C151912 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C152166) *
                       C740 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C152166 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C151912) *
                       C741 +
                   (((C74440 + C74441) * C152049 * C152248 +
                     (C74442 + C74443) * C152049 * C152249 +
                     (C73613 * C1353 + C74430 + C74430 + C152145 * C1369 +
                      C73615 * C1715 + C74431 + C74431 + C151795 * C1717) *
                         C152049 * C73612) *
                        C151867 * C151912 -
                    ((C74443 + C74442) * C152049 * C73612 +
                     (C74441 + C74440) * C152049 * C152249 +
                     (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                      C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                         C152049 * C152248) *
                        C151867 * C152166) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C1709 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C1710 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C151867 * C1711 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C151867 * C152218) *
                       C152152 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                        C151867 * C1710 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C1709 -
                    ((C75842 + C75843) * C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C1711 +
                    (C75837 * C152248 + (C75843 + C75842) * C152049 * C152249 +
                     (C73613 * C7815 + C75835 + C75835 + C152145 * C7823 +
                      C73615 * C8335 + C75836 + C75836 + C151795 * C8337) *
                         C152049 * C73612) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152049 * C152248 +
                      (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                         C152167 -
                     ((C74988 + C74989) * C152049 * C73612 +
                      (C74990 + C74991) * C152049 * C152249 +
                      (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                       C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                          C152049 * C152248) *
                         C151954) *
                        C152166 +
                    (((C74991 + C74990) * C152049 * C152248 +
                      (C74989 + C74988) * C152049 * C152249 +
                      (C73613 * C2053 + C74942 + C74942 + C152145 * C2061 +
                       C73615 * C2054 + C74943 + C74943 + C151795 * C2062) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73954 + C73955) * C152049 * C73612 +
                      (C73953 + C73952) * C152049 * C152249 +
                      (C73951 + C73950) * C152049 * C152248) *
                         C152167) *
                        C151912) *
                       C335 +
                   ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                       C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                          C152049 * C152248 +
                      (C74992 + C74993) * C152049 * C152249 +
                      (C74994 + C74995) * C152049 * C73612) *
                         C151954 -
                     (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152049 * C152248) *
                         C152167) *
                        C152166 +
                    (((C73956 + C73957) * C152049 * C152248 +
                      (C73958 + C73959) * C152049 * C152249 +
                      (C73960 + C73961) * C152049 * C73612) *
                         C152167 -
                     ((C73615 * C2055 + C74952 + C74952 + C151795 * C2063 +
                       C73613 * C2054 + C74953 + C74953 + C152145 * C2062) *
                          C152049 * C73612 +
                      (C74995 + C74994) * C152049 * C152249 +
                      (C74993 + C74992) * C152049 * C152248) *
                         C151954) *
                        C151912) *
                       C336 +
                   ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                       C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                          C152049 * C152248 +
                      (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                         C152167 -
                     ((C74996 + C74997) * C152049 * C73612 +
                      (C74998 + C74999) * C152049 * C152249 +
                      (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                       C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                          C152049 * C152248) *
                         C151954) *
                        C152166 +
                    (((C74999 + C74998) * C152049 * C152248 +
                      (C74997 + C74996) * C152049 * C152249 +
                      (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                       C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                          C152049 * C73612) *
                         C151954 -
                     ((C73966 + C73967) * C152049 * C73612 +
                      (C73965 + C73964) * C152049 * C152249 +
                      (C73963 + C73962) * C152049 * C152248) *
                         C152167) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C152167 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C151954) *
                       C1709 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 + C76349 * C73612) *
                        C151954 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C152167) *
                       C1710 +
                   ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C152167 -
                    ((C76354 + C76355) * C152049 * C73612 +
                     (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                        C151954) *
                       C1711 +
                   ((C76349 * C152248 + (C76355 + C76354) * C152049 * C152249 +
                     (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
                      C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                         C152049 * C73612) *
                        C151954 -
                    ((C75364 + C75365) * C152049 * C73612 +
                     (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                        C152167) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C152255 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C152239 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
                      C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C335 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C152239 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C152255 -
                    ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
                      C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                         C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152208) *
                       C336 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C152255 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C152239 +
                    (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                     (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                      C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                     C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                        C152049 * C152248 +
                    (C73613 * C341 + C73620 + C73620 + C152145 * C365 +
                     C73615 * C340 + C73621 + C73621 + C151795 * C364) *
                        C152049 * C152249 +
                    (C73613 * C342 + C73622 + C73622 + C152145 * C366 +
                     C73615 * C343 + C73623 + C73623 + C151795 * C367) *
                        C152049 * C73612) *
                       C151867 * C151849 * C129 -
                   ((C73615 * C344 + C73624 + C73624 + C151795 * C368 +
                     C73613 * C343 + C73625 + C73625 + C152145 * C367) *
                        C152049 * C73612 +
                    (C73615 * C339 + C73626 + C73626 + C151795 * C363 +
                     C73613 * C340 + C73627 + C73627 + C152145 * C364) *
                        C152049 * C152249 +
                    (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                     C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                        C152049 * C152248) *
                       C151867 * C151849 * C130 +
                   ((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                     C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                        C152049 * C152248 +
                    (C73613 * C339 + C73632 + C73632 + C152145 * C363 +
                     C73615 * C338 + C73633 + C73633 + C151795 * C362) *
                        C152049 * C152249 +
                    (C73613 * C344 + C73634 + C73634 + C152145 * C368 +
                     C73615 * C345 + C73635 + C73635 + C151795 * C369) *
                        C152049 * C73612) *
                       C151867 * C151849 * C131 -
                   ((C73615 * C347 + C73636 + C73636 + C151795 * C371 +
                     C73613 * C345 + C73637 + C73637 + C152145 * C369) *
                        C152049 * C73612 +
                    (C73615 * C346 + C73638 + C73638 + C151795 * C370 +
                     C73613 * C338 + C73639 + C73639 + C152145 * C362) *
                        C152049 * C152249 +
                    (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                     C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                        C152049 * C152248) *
                       C151867 * C151849 * C132 +
                   ((C73613 * C146 + C73642 + C73642 + C152145 * C162 +
                     C73615 * C147 + C73643 + C73643 + C151795 * C163) *
                        C152049 * C152248 +
                    (C73613 * C346 + C73644 + C73644 + C152145 * C370 +
                     C73615 * C348 + C73645 + C73645 + C151795 * C372) *
                        C152049 * C152249 +
                    (C73613 * C347 + C73646 + C73646 + C152145 * C371 +
                     C73615 * C349 + C73647 + C73647 + C151795 * C373) *
                        C152049 * C73612) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C152256 -
                    ((C73615 * C1537 + C74192 + C74192 + C151795 * C1561 +
                      C73613 * C1538 + C74193 + C74193 + C152145 * C1562) *
                         C152049 * C73612 +
                     (C73615 * C1084 + C74194 + C74194 + C151795 * C1096 +
                      C73613 * C1083 + C74195 + C74195 + C152145 * C1095) *
                         C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C152241 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C73613 * C1534 + C74200 + C74200 + C152145 * C1558 +
                      C73615 * C1533 + C74201 + C74201 + C151795 * C1557) *
                         C152049 * C152249 +
                     (C73613 * C1539 + C74202 + C74202 + C152145 * C1563 +
                      C73615 * C1540 + C74203 + C74203 + C151795 * C1564) *
                         C152049 * C73612) *
                        C152211) *
                       C151849 * C335 +
                   (((C73613 * C549 + C74204 + C74204 + C152145 * C573 +
                      C73615 * C548 + C74205 + C74205 + C151795 * C572) *
                         C152049 * C152248 +
                     (C73613 * C1084 + C74206 + C74206 + C152145 * C1096 +
                      C73615 * C1085 + C74207 + C74207 + C151795 * C1097) *
                         C152049 * C152249 +
                     (C73613 * C1537 + C74208 + C74208 + C152145 * C1561 +
                      C73615 * C1536 + C74209 + C74209 + C151795 * C1560) *
                         C152049 * C73612) *
                        C152241 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C152256 -
                    ((C73615 * C1541 + C74210 + C74210 + C151795 * C1565 +
                      C73613 * C1540 + C74211 + C74211 + C152145 * C1564) *
                         C152049 * C73612 +
                     (C73615 * C1532 + C74212 + C74212 + C151795 * C1556 +
                      C73613 * C1533 + C74213 + C74213 + C152145 * C1557) *
                         C152049 * C152249 +
                     (C73615 * C553 + C74214 + C74214 + C151795 * C577 +
                      C73613 * C552 + C74215 + C74215 + C152145 * C576) *
                         C152049 * C152248) *
                        C152211) *
                       C151849 * C336 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C152256 -
                    ((C73615 * C1535 + C74216 + C74216 + C151795 * C1559 +
                      C73613 * C1536 + C74217 + C74217 + C152145 * C1560) *
                         C152049 * C73612 +
                     (C73615 * C1086 + C74218 + C74218 + C151795 * C1098 +
                      C73613 * C1085 + C74219 + C74219 + C152145 * C1097) *
                         C152049 * C152249 +
                     (C73615 * C547 + C74220 + C74220 + C151795 * C571 +
                      C73613 * C548 + C74221 + C74221 + C152145 * C572) *
                         C152049 * C152248) *
                        C152241 +
                    ((C73613 * C553 + C74222 + C74222 + C152145 * C577 +
                      C73615 * C554 + C74223 + C74223 + C151795 * C578) *
                         C152049 * C152248 +
                     (C73613 * C1532 + C74224 + C74224 + C152145 * C1556 +
                      C73615 * C1531 + C74225 + C74225 + C151795 * C1555) *
                         C152049 * C152249 +
                     (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
                      C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                         C152049 * C73612) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C1259 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C1260 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
                      C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152252 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C1260 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C1259 -
                    ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
                      C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                         C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152208) *
                       C152235 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C1259 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C1260 +
                    (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                     (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                      C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                     C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                        C152049 * C152248 +
                    (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                       C151867 * C1347 -
                   (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                    (C73951 + C73950) * C152049 * C152248) *
                       C151867 * C1348 +
                   (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                    C75367 * C73612) *
                       C151867 * C1349 -
                   ((C75364 + C75365) * C152049 * C73612 +
                    (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                       C151867 * C1350 +
                   (C75367 * C152248 + (C75365 + C75364) * C152049 * C152249 +
                    (C73613 * C7817 + C75351 + C75351 + C152145 * C7825 +
                     C73615 * C7818 + C75352 + C75352 + C151795 * C7826) *
                        C152049 * C73612) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C152256 -
                    (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
                     (C73615 * C549 + C74196 + C74196 + C151795 * C573 +
                      C73613 * C550 + C74197 + C74197 + C152145 * C574) *
                         C152049 * C152248) *
                        C152241 +
                    ((C73613 * C551 + C74198 + C74198 + C152145 * C575 +
                      C73615 * C552 + C74199 + C74199 + C151795 * C576) *
                         C152049 * C152248 +
                     (C75626 + C75627) * C152049 * C152249 + C75635 * C73612) *
                        C152211) *
                       C1259 +
                   (((C74991 + C74990) * C152049 * C152248 +
                     (C74989 + C74988) * C152049 * C152249 +
                     (C75630 + C75631) * C152049 * C73612) *
                        C152241 -
                    (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C152256 -
                    ((C75632 + C75633) * C152049 * C73612 +
                     (C75629 + C75628) * C152049 * C152249 +
                     (C75627 + C75626) * C152049 * C152248) *
                        C152211) *
                       C1260 +
                   ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     C75367 * C73612) *
                        C152256 -
                    ((C73615 * C8075 + C75605 + C75605 + C151795 * C8087 +
                      C73613 * C8076 + C75606 + C75606 + C152145 * C8088) *
                         C152049 * C73612 +
                     (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                        C152241 +
                    (C75635 * C152248 + (C75633 + C75632) * C152049 * C152249 +
                     (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
                      C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                         C152049 * C73612) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152049 * C152248 +
            (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
               C152167 -
           ((C73615 * C1537 + C74192 + C74192 + C151795 * C1561 +
             C73613 * C1538 + C74193 + C74193 + C152145 * C1562) *
                C152049 * C73612 +
            (C73615 * C1084 + C74194 + C74194 + C151795 * C1096 +
             C73613 * C1083 + C74195 + C74195 + C152145 * C1095) *
                C152049 * C152249 +
            (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
             C74197 + C74197 + C152145 * C574) *
                C152049 * C152248) *
               C151954) *
              C151849 * C739 +
          (((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
             C74205 + C74205 + C151795 * C572) *
                C152049 * C152248 +
            (C73613 * C1084 + C74206 + C74206 + C152145 * C1096 +
             C73615 * C1085 + C74207 + C74207 + C151795 * C1097) *
                C152049 * C152249 +
            (C73613 * C1537 + C74208 + C74208 + C152145 * C1561 +
             C73615 * C1536 + C74209 + C74209 + C151795 * C1560) *
                C152049 * C73612) *
               C151954 -
           (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152049 * C152248) *
               C152167) *
              C151849 * C740 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152049 * C152248 +
            (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
               C152167 -
           ((C73615 * C1535 + C74216 + C74216 + C151795 * C1559 +
             C73613 * C1536 + C74217 + C74217 + C152145 * C1560) *
                C152049 * C73612 +
            (C73615 * C1086 + C74218 + C74218 + C151795 * C1098 +
             C73613 * C1085 + C74219 + C74219 + C152145 * C1097) *
                C152049 * C152249 +
            (C73615 * C547 + C74220 + C74220 + C151795 * C571 + C73613 * C548 +
             C74221 + C74221 + C152145 * C572) *
                C152049 * C152248) *
               C151954) *
              C151849 * C741 +
          (((C73613 * C547 + C74638 + C74638 + C152145 * C571 + C73615 * C555 +
             C74639 + C74639 + C151795 * C579) *
                C152049 * C152248 +
            (C73613 * C1086 + C74640 + C74640 + C152145 * C1098 +
             C73615 * C1087 + C74641 + C74641 + C151795 * C1099) *
                C152049 * C152249 +
            (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
             C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                C152049 * C73612) *
               C151954 -
           ((C74443 + C74442) * C152049 * C73612 +
            (C74441 + C74440) * C152049 * C152249 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152049 * C152248) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152049 * C152248 +
             (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                C152167 -
            (C75609 * C73612 + (C74990 + C74991) * C152049 * C152249 +
             (C73615 * C549 + C74196 + C74196 + C151795 * C573 + C73613 * C550 +
              C74197 + C74197 + C152145 * C574) *
                 C152049 * C152248) *
                C151954) *
               C1259 +
           (((C74991 + C74990) * C152049 * C152248 +
             (C74989 + C74988) * C152049 * C152249 +
             (C75630 + C75631) * C152049 * C73612) *
                C151954 -
            (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
             (C73951 + C73950) * C152049 * C152248) *
                C152167) *
               C1260 +
           ((C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
             C75367 * C73612) *
                C152167 -
            ((C73615 * C8075 + C75605 + C75605 + C151795 * C8087 +
              C73613 * C8076 + C75606 + C75606 + C152145 * C8088) *
                 C152049 * C73612 +
             (C75631 + C75630) * C152049 * C152249 + C75609 * C152248) *
                C151954) *
               C152208) *
              C152152 +
          ((((C73613 * C549 + C74204 + C74204 + C152145 * C573 + C73615 * C548 +
              C74205 + C74205 + C151795 * C572) *
                 C152049 * C152248 +
             (C74992 + C74993) * C152049 * C152249 + C76141 * C73612) *
                C151954 -
            (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152049 * C152248) *
                C152167) *
               C1259 +
           (((C73956 + C73957) * C152049 * C152248 +
             (C73958 + C73959) * C152049 * C152249 + C75837 * C73612) *
                C152167 -
            ((C76146 + C76147) * C152049 * C73612 +
             (C74995 + C74994) * C152049 * C152249 +
             (C74993 + C74992) * C152049 * C152248) *
                C151954) *
               C1260 +
           ((C76141 * C152248 + (C76147 + C76146) * C152049 * C152249 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152049 * C73612) *
                C151954 -
            ((C75842 + C75843) * C152049 * C73612 +
             (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                     C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                        C152049 * C152248 +
                    (C73613 * C341 + C73620 + C73620 + C152145 * C365 +
                     C73615 * C340 + C73621 + C73621 + C151795 * C364) *
                        C152049 * C152249 +
                    (C73613 * C342 + C73622 + C73622 + C152145 * C366 +
                     C73615 * C343 + C73623 + C73623 + C151795 * C367) *
                        C152049 * C73612) *
                       C151867 * C151849 * C129 -
                   ((C73615 * C344 + C73624 + C73624 + C151795 * C368 +
                     C73613 * C343 + C73625 + C73625 + C152145 * C367) *
                        C152049 * C73612 +
                    (C73615 * C339 + C73626 + C73626 + C151795 * C363 +
                     C73613 * C340 + C73627 + C73627 + C152145 * C364) *
                        C152049 * C152249 +
                    (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                     C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                        C152049 * C152248) *
                       C151867 * C151849 * C130 +
                   ((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                     C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                        C152049 * C152248 +
                    (C73613 * C339 + C73632 + C73632 + C152145 * C363 +
                     C73615 * C338 + C73633 + C73633 + C151795 * C362) *
                        C152049 * C152249 +
                    (C73613 * C344 + C73634 + C73634 + C152145 * C368 +
                     C73615 * C345 + C73635 + C73635 + C151795 * C369) *
                        C152049 * C73612) *
                       C151867 * C151849 * C131 -
                   ((C73615 * C347 + C73636 + C73636 + C151795 * C371 +
                     C73613 * C345 + C73637 + C73637 + C152145 * C369) *
                        C152049 * C73612 +
                    (C73615 * C346 + C73638 + C73638 + C151795 * C370 +
                     C73613 * C338 + C73639 + C73639 + C152145 * C362) *
                        C152049 * C152249 +
                    (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                     C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                        C152049 * C152248) *
                       C151867 * C151849 * C132 +
                   ((C73613 * C146 + C73642 + C73642 + C152145 * C162 +
                     C73615 * C147 + C73643 + C73643 + C151795 * C163) *
                        C152049 * C152248 +
                    (C73613 * C346 + C73644 + C73644 + C152145 * C370 +
                     C73615 * C348 + C73645 + C73645 + C151795 * C372) *
                        C152049 * C152249 +
                    (C73613 * C347 + C73646 + C73646 + C152145 * C371 +
                     C73615 * C349 + C73647 + C73647 + C151795 * C373) *
                        C152049 * C73612) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C152255 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C152239 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
                      C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C335 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C152239 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C152255 -
                    ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
                      C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                         C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152208) *
                       C336 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C152255 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C152239 +
                    (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                     (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                      C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                      C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                         C152049 * C152248 +
                     (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                        C151867 * C1259 -
                    ((C73954 + C73955) * C152049 * C73612 +
                     (C73953 + C73952) * C152049 * C152249 +
                     (C73951 + C73950) * C152049 * C152248) *
                        C151867 * C1260 +
                    (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                     (C73613 * C1357 + C73880 + C73880 + C152145 * C1373 +
                      C73615 * C1358 + C73881 + C73881 + C151795 * C1374) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152252 +
                   (((C73956 + C73957) * C152049 * C152248 +
                     (C73958 + C73959) * C152049 * C152249 +
                     (C73960 + C73961) * C152049 * C73612) *
                        C151867 * C1260 -
                    (C73972 * C73612 + (C73957 + C73956) * C152049 * C152249 +
                     (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                      C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                         C152049 * C152248) *
                        C151867 * C1259 -
                    ((C73615 * C1359 + C73896 + C73896 + C151795 * C1375 +
                      C73613 * C1358 + C73897 + C73897 + C152145 * C1374) *
                         C152049 * C73612 +
                     (C73961 + C73960) * C152049 * C152249 + C73972 * C152248) *
                        C151867 * C152208) *
                       C152235 +
                   (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                      C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                         C152049 * C152248 +
                     (C73962 + C73963) * C152049 * C152249 + C73973 * C73612) *
                        C151867 * C1259 -
                    ((C73966 + C73967) * C152049 * C73612 +
                     (C73965 + C73964) * C152049 * C152249 +
                     (C73963 + C73962) * C152049 * C152248) *
                        C151867 * C1260 +
                    (C73973 * C152248 + (C73967 + C73966) * C152049 * C152249 +
                     (C73613 * C1359 + C73912 + C73912 + C152145 * C1375 +
                      C73615 * C1360 + C73913 + C73913 + C151795 * C1376) *
                         C152049 * C73612) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                     C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                        C152049 * C152248 +
                    (C73950 + C73951) * C152049 * C152249 + C73971 * C73612) *
                       C151867 * C1347 -
                   (C75353 * C73612 + (C73953 + C73952) * C152049 * C152249 +
                    (C73951 + C73950) * C152049 * C152248) *
                       C151867 * C1348 +
                   (C73971 * C152248 + (C73955 + C73954) * C152049 * C152249 +
                    C75367 * C73612) *
                       C151867 * C1349 -
                   ((C75364 + C75365) * C152049 * C73612 +
                    (C75363 + C75362) * C152049 * C152249 + C75353 * C152248) *
                       C151867 * C1350 +
                   (C75367 * C152248 + (C75365 + C75364) * C152049 * C152249 +
                    (C73613 * C7817 + C75351 + C75351 + C152145 * C7825 +
                     C73615 * C7818 + C75352 + C75352 + C151795 * C7826) *
                        C152049 * C73612) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C151908 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C151915 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C151867 * C3585) *
              C151826 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            C95129 * C73612) *
               C151867 * C151915 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C151908 -
           ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
            C93442 * C152248) *
               C151867 * C3585) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C151908 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C151915 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C152167 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C151908 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C152167) *
               C151915 +
           ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
                C152167 -
            ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
             C94925 * C152248) *
                C151954) *
               C3585) *
              C3241 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C152167) *
               C151908 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C152167 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C151915 +
           ((C95422 * C152248 + (C95424 + C95423) * C152249 +
             (C61146 * C152184 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C73612) *
                C151954 -
            ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
             C93442 * C152248) *
                C152167) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C152262 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C152258 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C151867 * C152244 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C151867 * C152218) *
              C3241 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            C95129 * C73612) *
               C151867 * C152258 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C152262 -
           ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
            C93442 * C152248) *
               C151867 * C152244 +
           (C95129 * C152248 + (C95131 + C95130) * C152249 +
            (C60945 * C152184 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C73612) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C3101 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C151912) *
              C152261 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            C95129 * C73612) *
               C151867 * C151912 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C3101 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C151912) *
              C152237 +
          (((C93856 + C93857) * C152248 + (C93858 + C93864) * C152249 +
            (C59994 * C152184 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C73612) *
               C151867 * C151912 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C152256 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C152241 +
            ((C65779 * C152184 + C65780 * C152113) * C152248 +
             (C94926 + C94927) * C152249 + C94934 * C73612) *
                C152211) *
               C3101 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C152241 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C152256 -
            ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
             (C94927 + C94926) * C152248) *
                C152211) *
               C151912) *
              C3241 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C152241 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C152256 -
            ((C96470 + C96471) * C73612 + (C96472 + C96473) * C152249 +
             (C65783 * C152113 + C65782 * C152184) * C152248) *
                C152211) *
               C3101 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C152256 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C152241 +
            ((C96473 + C96472) * C152248 + (C96471 + C96470) * C152249 +
             (C61880 * C152184 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C73612) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C152167 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C3101 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C152167) *
               C151912) *
              C151826 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C152167) *
               C3101 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C152167 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
              C65785 * C152113) *
                 C152248 +
             (C93435 + C93436) * C152249 + C93443 * C73612) *
                C152167 -
            ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
             (C65786 * C152113 + C65785 * C152184) * C152248) *
                C151954) *
               C3101 +
           (((C94360 + C94359) * C152248 + (C94358 + C94357) * C152249 +
             (C60371 * C152184 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C73612) *
                C151954 -
            ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
             (C93436 + C93435) * C152248) *
                C152167) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C3101 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C151912) *
              C152261 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            C95129 * C73612) *
               C151867 * C151912 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C3101 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C151912) *
              C152237 +
          (((C93856 + C93857) * C152248 + (C93858 + C93864) * C152249 +
            (C59994 * C152184 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C73612) *
               C151867 * C151912 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C152262 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C152258 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C151867 * C152244 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C151867 * C152218) *
              C3241 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            C95129 * C73612) *
               C151867 * C152258 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C152262 -
           ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
            C93442 * C152248) *
               C151867 * C152244 +
           (C95129 * C152248 + (C95131 + C95130) * C152249 +
            (C60945 * C152184 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C73612) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C4107 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C151908 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C4107) *
               C151915 +
           ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
                C4107 -
            ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
             C94925 * C152248) *
                C151954) *
               C3585) *
              C152152 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C4107) *
               C151908 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C4107 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C151915 +
           ((C95422 * C152248 + (C95424 + C95423) * C152249 +
             (C61146 * C152184 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C73612) *
                C151954 -
            ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
             C93442 * C152248) *
                C4107) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151950 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151957 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C4779) *
              C151908 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C151957 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151950 -
           ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
            (C94927 + C94926) * C152248) *
               C4779) *
              C151915 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C151950 -
           ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
            C94925 * C152248) *
               C151957 +
           (C94934 * C152248 + (C94933 + C94932) * C152249 +
            (C60804 * C152184 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C73612) *
               C4779) *
              C3585) *
         C151821) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C4107 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C152262 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C151954 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C4107) *
              C152258 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C4107 -
           ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
            C94925 * C152248) *
               C151954) *
              C152244 +
          ((C95619 * C152248 + (C95621 + C95620) * C152249 +
            (C61286 * C152184 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C73612) *
               C151954 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C4107 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C3101 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C4107) *
               C3101 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C4107 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
              C65785 * C152113) *
                 C152248 +
             (C93435 + C93436) * C152249 + C93443 * C73612) *
                C4107 -
            ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
             (C65786 * C152113 + C65785 * C152184) * C152248) *
                C151954) *
               C3101 +
           (((C94360 + C94359) * C152248 + (C94358 + C94357) * C152249 +
             (C60371 * C152184 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C73612) *
                C151954 -
            ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
             (C93436 + C93435) * C152248) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152263 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C152260 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152247 -
           ((C96862 + C96863) * C73612 + (C96864 + C96865) * C152249 +
            (C68355 * C152113 + C65780 * C152184) * C152248) *
               C152224) *
              C3101 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C152260 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C152263 -
           ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
            (C94927 + C94926) * C152248) *
               C152247 +
           ((C96865 + C96864) * C152248 + (C96863 + C96862) * C152249 +
            (C62166 * C152184 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C152113) *
                C73612) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C151950 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151957 +
            ((C65779 * C152184 + C65780 * C152113) * C152248 +
             (C94926 + C94927) * C152249 + C94934 * C73612) *
                C4779) *
               C3101 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151957 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C151950 -
            ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
             (C94927 + C94926) * C152248) *
                C4779) *
               C151912) *
              C152152 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151957 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C151950 -
            ((C96470 + C96471) * C73612 + (C96472 + C96473) * C152249 +
             (C65783 * C152113 + C65782 * C152184) * C152248) *
                C4779) *
               C3101 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C151950 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151957 +
            ((C96473 + C96472) * C152248 + (C96471 + C96470) * C152249 +
             (C61880 * C152184 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C73612) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C4107 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C3101 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C4107) *
               C3101 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C4107 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
              C65785 * C152113) *
                 C152248 +
             (C93435 + C93436) * C152249 + C93443 * C73612) *
                C4107 -
            ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
             (C65786 * C152113 + C65785 * C152184) * C152248) *
                C151954) *
               C3101 +
           (((C94360 + C94359) * C152248 + (C94358 + C94357) * C152249 +
             (C60371 * C152184 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C73612) *
                C151954 -
            ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
             (C93436 + C93435) * C152248) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C4107 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C152262 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C151954 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C4107) *
              C152258 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C4107 -
           ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
            C94925 * C152248) *
               C151954) *
              C152244 +
          ((C95619 * C152248 + (C95621 + C95620) * C152249 +
            (C61286 * C152184 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C73612) *
               C151954 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C1709 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C1710 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C151867 * C1711 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C151867 * C152218) *
              C152152 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            C95129 * C73612) *
               C151867 * C1710 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C1709 -
           ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
            C93442 * C152248) *
               C151867 * C1711 +
           (C95129 * C152248 + (C95131 + C95130) * C152249 +
            (C60945 * C152184 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C73612) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C152166 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C151912) *
              C739 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C151912 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C152166 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C151912) *
              C741 +
          (((C93856 + C93857) * C152248 + (C93858 + C93864) * C152249 +
            (C59994 * C152184 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C73612) *
               C151867 * C151912 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C2215 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C2216 +
            ((C65779 * C152184 + C65780 * C152113) * C152248 +
             (C94926 + C94927) * C152249 + C94934 * C73612) *
                C152211) *
               C152166 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C2216 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C2215 -
            ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
             (C94927 + C94926) * C152248) *
                C152211) *
               C151912) *
              C152152 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C2216 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C2215 -
            ((C96470 + C96471) * C73612 + (C96472 + C96473) * C152249 +
             (C65783 * C152113 + C65782 * C152184) * C152248) *
                C152211) *
               C152166 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C2215 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C2216 +
            ((C96473 + C96472) * C152248 + (C96471 + C96470) * C152249 +
             (C61880 * C152184 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C73612) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152167 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C1709 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C151954 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C152167) *
              C1710 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C152167 -
           ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
            C94925 * C152248) *
               C151954) *
              C1711 +
          ((C95619 * C152248 + (C95621 + C95620) * C152249 +
            (C61286 * C152184 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C73612) *
               C151954 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C152167 -
            ((C94349 + C94350) * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C152166 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             (C60365 * C152184 + C60802 * C152113) * C73612) *
                C151954 -
            ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + (C94355 + C94356) * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C152167) *
               C152166 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             (C93433 + C93434) * C73612) *
                C152167 -
            ((C61880 * C152113 + C60370 * C152184) * C73612 +
             (C94356 + C94355) * C152249 + (C94354 + C94353) * C152248) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
              C65785 * C152113) *
                 C152248 +
             (C93435 + C93436) * C152249 + C93443 * C73612) *
                C152167 -
            ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
             (C65786 * C152113 + C65785 * C152184) * C152248) *
                C151954) *
               C152166 +
           (((C94360 + C94359) * C152248 + (C94358 + C94357) * C152249 +
             (C60371 * C152184 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C73612) *
                C151954 -
            ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
             (C93436 + C93435) * C152248) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C2814 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C2815 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C2816 -
           ((C96862 + C96863) * C73612 + (C96864 + C96865) * C152249 +
            (C68355 * C152113 + C65780 * C152184) * C152248) *
               C152224) *
              C152166 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C2815 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C2814 -
           ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
            (C94927 + C94926) * C152248) *
               C2816 +
           ((C96865 + C96864) * C152248 + (C96863 + C96862) * C152249 +
            (C62166 * C152184 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C152113) *
                C73612) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
                C65778 * C152113) *
                   C152248 +
               (C59655 * C152184 + C60367 * C152113) * C152249 +
               (C59656 * C152184 + C60366 * C152113) * C73612) *
                  C151867 * C151849 * C129 -
              ((C60369 * C152113 + C59660 * C152184) * C73612 +
               (C60368 * C152113 + C59659 * C152184) * C152249 +
               (C65781 * C152113 +
                (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                   C152248) *
                  C151867 * C151849 * C130 +
              (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
                C65785 * C152113) *
                   C152248 +
               (C59663 * C152184 + C60373 * C152113) * C152249 +
               (C59664 * C152184 + C60372 * C152113) * C73612) *
                  C151867 * C151849 * C131 -
              (((C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152113 +
                C59993 * C152184) *
                   C73612 +
               (C65993 * C152113 + C59992 * C152184) * C152249 +
               (C66201 * C152113 +
                (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                   C152248) *
                  C151867 * C151849 * C132 +
              (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152184 +
                (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
                   C152248 +
               ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152184 +
                (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) *
                    C152113) *
                   C152249 +
               ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152184 +
                (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) *
                    C152113) *
                   C73612) *
                  C151867 * C151849 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
                 C65778 * C152113) *
                    C152248 +
                (C93423 + C93424) * C152249 + C93441 * C73612) *
                   C151867 * C152255 -
               ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
                (C93424 + C93423) * C152248) *
                   C151867 * C152239 +
               (C93441 * C152248 + (C93428 + C93427) * C152249 +
                (C59658 * C152184 + C60803 * C152113) * C73612) *
                   C151867 * C152208) *
                  C335 +
              (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
                (C93433 + C93434) * C73612) *
                   C151867 * C152239 -
               (C93442 * C73612 + (C93430 + C93429) * C152249 +
                (C65781 * C152113 +
                 (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                    C152248) *
                   C151867 * C152255 -
               ((C61146 * C152113 + C59662 * C152184) * C73612 +
                (C93434 + C93433) * C152249 + C93442 * C152248) *
                   C151867 * C152208) *
                  C336 +
              ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
                 C65785 * C152113) *
                    C152248 +
                (C93435 + C93436) * C152249 + C93443 * C73612) *
                   C151867 * C152255 -
               ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
                (C93436 + C93435) * C152248) *
                   C151867 * C152239 +
               (C93443 * C152248 + (C93440 + C93439) * C152249 +
                (C59666 * C152184 +
                 (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) *
                     C152113) *
                    C73612) *
                   C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152256 -
           ((C60801 * C152113 + C60366 * C152184) * C73612 +
            (C60800 * C152113 + C60367 * C152184) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C152241 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C60800 * C152184 + C62168 * C152113) * C152249 +
            (C60801 * C152184 + C62167 * C152113) * C73612) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C60368 * C152184 + C61882 * C152113) * C152249 +
            (C60369 * C152184 + C61881 * C152113) * C73612) *
               C152241 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C152256 -
           ((C67579 * C152113 + C61881 * C152184) * C73612 +
            (C65784 * C152113 + C61882 * C152184) * C152249 +
            (C65783 * C152113 + C65782 * C152184) * C152248) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C152256 -
           ((C65507 * C152113 + C60372 * C152184) * C73612 +
            (C65506 * C152113 + C60373 * C152184) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C152241 +
           ((C65786 * C152184 + C65788 * C152113) * C152248 +
            (C65506 * C152184 + C65787 * C152113) * C152249 +
            (C65507 * C152184 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C73612) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C1259 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C1260 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 +
            (C59658 * C152184 + C60803 * C152113) * C73612) *
               C151867 * C152208) *
              C152252 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C1260 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C152184) * C73612 +
            (C93434 + C93433) * C152249 + C93442 * C152248) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C1259 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C1260 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C93423 + C93424) * C152249 + C93441 * C73612) *
              C151867 * C1347 -
          (C94701 * C73612 + (C93426 + C93425) * C152249 +
           (C93424 + C93423) * C152248) *
              C151867 * C1348 +
          (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
              C151867 * C1349 -
          ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
           C94701 * C152248) *
              C151867 * C1350 +
          (C94706 * C152248 + (C94705 + C94704) * C152249 +
           (C60625 * C152184 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C73612) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152256 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C152241 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152211) *
              C1259 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            (C94930 + C94931) * C73612) *
               C152241 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C152256 -
           ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
            (C94927 + C94926) * C152248) *
               C152211) *
              C1260 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C152256 -
           ((C60804 * C152113 + C60803 * C152184) * C73612 +
            (C94931 + C94930) * C152249 + C94925 * C152248) *
               C152241 +
           (C94934 * C152248 + (C94933 + C94932) * C152249 +
            (C60804 * C152184 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C73612) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C2215 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C2216 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C94353 + C94354) * C152249 + C95422 * C73612) *
               C2216 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C2215 -
           ((C67579 * C152113 + C61881 * C152184) * C73612 +
            (C65784 * C152113 + C61882 * C152184) * C152249 +
            (C65783 * C152113 + C65782 * C152184) * C152248) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C2215 -
           ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C2216 +
           ((C65786 * C152184 + C65788 * C152113) * C152248 +
            (C65506 * C152184 + C65787 * C152113) * C152249 +
            (C65507 * C152184 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C73612) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C2215 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C2216 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152211) *
              C152255 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C2216 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C2215 -
           ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
            (C94927 + C94926) * C152248) *
               C152211) *
              C152239 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C2215 -
           ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
            C94925 * C152248) *
               C2216 +
           (C94934 * C152248 + (C94933 + C94932) * C152249 +
            (C60804 * C152184 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C73612) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C93423 + C93424) * C152249 + C93441 * C73612) *
              C2446 -
          (C94925 * C73612 + (C94351 + C94352) * C152249 +
           (C65779 * C152113 + C65778 * C152184) * C152248) *
              C2447 +
          ((C65779 * C152184 + C65780 * C152113) * C152248 +
           (C94926 + C94927) * C152249 + C94934 * C73612) *
              C2448 -
          ((C67083 * C152113 + C62167 * C152184) * C73612 +
           (C67082 * C152113 + C62168 * C152184) * C152249 +
           (C68355 * C152113 + C65780 * C152184) * C152248) *
              C2449 +
          ((C68355 * C152184 + C68357 * C152113) * C152248 +
           (C67082 * C152184 + C68356 * C152113) * C152249 +
           (C67083 * C152184 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C152113) *
               C73612) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C152167 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C1259 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             (C94930 + C94931) * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C152167) *
               C1260 +
           ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
                C152167 -
            ((C60804 * C152113 + C60803 * C152184) * C73612 +
             (C94931 + C94930) * C152249 + C94925 * C152248) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C152167) *
               C1259 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C152167 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C1260 +
           ((C95422 * C152248 + (C95424 + C95423) * C152249 +
             (C61146 * C152184 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C73612) *
                C151954 -
            ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
             C93442 * C152248) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152167 -
           ((C60801 * C152113 + C60366 * C152184) * C73612 +
            (C60800 * C152113 + C60367 * C152184) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C60368 * C152184 + C61882 * C152113) * C152249 +
            (C60369 * C152184 + C61881 * C152113) * C73612) *
               C151954 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C152167 -
           ((C65507 * C152113 + C60372 * C152184) * C73612 +
            (C65506 * C152113 + C60373 * C152184) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C152184 + C66202 * C152113) * C152248 +
            (C65993 * C152184 + C65994 * C152113) * C152249 +
            (C93863 * C152184 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C73612) *
               C151954 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C2814 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C2815 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C2816 -
           ((C67083 * C152113 + C62167 * C152184) * C73612 +
            (C67082 * C152113 + C62168 * C152184) * C152249 +
            (C68355 * C152113 + C65780 * C152184) * C152248) *
               C152224) *
              C151849 * C152152 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C94353 + C94354) * C152249 + C95422 * C73612) *
               C2815 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C2814 -
           ((C96470 + C96471) * C73612 + (C96472 + C96473) * C152249 +
            (C65783 * C152113 + C65782 * C152184) * C152248) *
               C2816 +
           ((C65783 * C152184 + C68857 * C152113) * C152248 +
            (C65784 * C152184 + C68655 * C152113) * C152249 +
            (C67579 * C152184 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C152113) *
                C73612) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C152255 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C152239 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 +
            (C59658 * C152184 + C60803 * C152113) * C73612) *
               C151867 * C152208) *
              C335 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C152239 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C152184) * C73612 +
            (C93434 + C93433) * C152249 + C93442 * C152248) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C152255 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C152239 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C59655 * C152184 + C60367 * C152113) * C152249 +
           (C59656 * C152184 + C60366 * C152113) * C73612) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C152184) * C73612 +
           (C60368 * C152113 + C59659 * C152184) * C152249 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
               C152248) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
            C65785 * C152113) *
               C152248 +
           (C59663 * C152184 + C60373 * C152113) * C152249 +
           (C59664 * C152184 + C60372 * C152113) * C73612) *
              C151867 * C151849 * C131 -
          (((C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152113 +
            C59993 * C152184) *
               C73612 +
           (C65993 * C152113 + C59992 * C152184) * C152249 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
               C152248) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152184 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C152248 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152184 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C152249 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152184 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C73612) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C1259 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C1260 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 +
            (C59658 * C152184 + C60803 * C152113) * C73612) *
               C151867 * C152208) *
              C152252 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C1260 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C152184) * C73612 +
            (C93434 + C93433) * C152249 + C93442 * C152248) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C1259 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C1260 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C93423 + C93424) * C152249 + C93441 * C73612) *
              C151867 * C1347 -
          (C94701 * C73612 + (C93426 + C93425) * C152249 +
           (C93424 + C93423) * C152248) *
              C151867 * C1348 +
          (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
              C151867 * C1349 -
          ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
           C94701 * C152248) *
              C151867 * C1350 +
          (C94706 * C152248 + (C94705 + C94704) * C152249 +
           (C60625 * C152184 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C73612) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C2215 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C2216 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C94353 + C94354) * C152249 + C95422 * C73612) *
               C2216 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C2215 -
           ((C67579 * C152113 + C61881 * C152184) * C73612 +
            (C65784 * C152113 + C61882 * C152184) * C152249 +
            (C65783 * C152113 + C65782 * C152184) * C152248) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C2215 -
           ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C2216 +
           ((C65786 * C152184 + C65788 * C152113) * C152248 +
            (C65506 * C152184 + C65787 * C152113) * C152249 +
            (C65507 * C152184 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C73612) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C2215 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C2216 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152211) *
              C152255 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C2216 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C2215 -
           ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
            (C94927 + C94926) * C152248) *
               C152211) *
              C152239 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C2215 -
           ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
            C94925 * C152248) *
               C2216 +
           (C94934 * C152248 + (C94933 + C94932) * C152249 +
            (C60804 * C152184 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C73612) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C4107 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C152166 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C4107) *
               C151912) *
              C151826 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C4107) *
               C152166 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C4107 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
              C65785 * C152113) *
                 C152248 +
             (C93435 + C93436) * C152249 + C93443 * C73612) *
                C4107 -
            ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
             (C65786 * C152113 + C65785 * C152184) * C152248) *
                C151954) *
               C152166 +
           (((C94360 + C94359) * C152248 + (C94358 + C94357) * C152249 +
             (C60371 * C152184 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C73612) *
                C151954 -
            ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
             (C93436 + C93435) * C152248) *
                C4107) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C151950 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151957 +
            ((C65779 * C152184 + C65780 * C152113) * C152248 +
             (C94926 + C94927) * C152249 + C94934 * C73612) *
                C4779) *
               C152166 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151957 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C151950 -
            ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
             (C94927 + C94926) * C152248) *
                C4779) *
               C151912) *
              C3241 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151957 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C151950 -
            ((C96470 + C96471) * C73612 + (C96472 + C96473) * C152249 +
             (C65783 * C152113 + C65782 * C152184) * C152248) *
                C4779) *
               C152166 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C151950 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151957 +
            ((C96473 + C96472) * C152248 + (C96471 + C96470) * C152249 +
             (C61880 * C152184 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C73612) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C4107 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C152255 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C4107) *
               C152239 +
           ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
                C4107 -
            ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
             C94925 * C152248) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C4107) *
               C152255 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C4107 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C152239 +
           ((C95422 * C152248 + (C95424 + C95423) * C152249 +
             (C61146 * C152184 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C73612) *
                C151954 -
            ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
             C93442 * C152248) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C4107 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C94353 + C94354) * C152249 + C95422 * C73612) *
               C151954 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C4107 -
           ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C152184 + C66202 * C152113) * C152248 +
            (C65993 * C152184 + C65994 * C152113) * C152249 +
            (C93863 * C152184 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C73612) *
               C151954 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152263 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C152260 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152247 -
           ((C96862 + C96863) * C73612 + (C96864 + C96865) * C152249 +
            (C68355 * C152113 + C65780 * C152184) * C152248) *
               C152224) *
              C151849 * C3241 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C94353 + C94354) * C152249 + C95422 * C73612) *
               C152260 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C152263 -
           ((C96470 + C96471) * C73612 + (C96472 + C96473) * C152249 +
            (C65783 * C152113 + C65782 * C152184) * C152248) *
               C152247 +
           ((C65783 * C152184 + C68857 * C152113) * C152248 +
            (C65784 * C152184 + C68655 * C152113) * C152249 +
            (C67579 * C152184 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C152113) *
                C73612) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151950 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151957 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C4779) *
              C151849 * C151826 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C94353 + C94354) * C152249 + C95422 * C73612) *
               C151957 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151950 -
           ((C96470 + C96471) * C73612 + (C96472 + C96473) * C152249 +
            (C65783 * C152113 + C65782 * C152184) * C152248) *
               C4779) *
              C151849 * C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151950 -
           ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C151957 +
           ((C65786 * C152184 + C65788 * C152113) * C152248 +
            (C65506 * C152184 + C65787 * C152113) * C152249 +
            (C65507 * C152184 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C73612) *
               C4779) *
              C151849 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C4107 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C94353 + C94354) * C152249 + C95422 * C73612) *
               C151954 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C4107 -
           ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C152184 + C66202 * C152113) * C152248 +
            (C65993 * C152184 + C65994 * C152113) * C152249 +
            (C93863 * C152184 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C73612) *
               C151954 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C4107 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C152255 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             C95619 * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C4107) *
               C152239 +
           ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
                C4107 -
            ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
             C94925 * C152248) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C4107) *
               C152255 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C4107 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C152239 +
           ((C95422 * C152248 + (C95424 + C95423) * C152249 +
             (C61146 * C152184 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C73612) *
                C151954 -
            ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
             C93442 * C152248) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C152166 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C151912) *
              C739 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C151912 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C152166 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C151912) *
              C741 +
          (((C93856 + C93857) * C152248 + (C93858 + C93864) * C152249 +
            (C59994 * C152184 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C73612) *
               C151867 * C151912 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C1709 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C1710 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C151867 * C1711 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C151867 * C152218) *
              C152152 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            C95129 * C73612) *
               C151867 * C1710 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C1709 -
           ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
            C93442 * C152248) *
               C151867 * C1711 +
           (C95129 * C152248 + (C95131 + C95130) * C152249 +
            (C60945 * C152184 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C73612) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C152167 -
            ((C94349 + C94350) * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C152166 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             (C60365 * C152184 + C60802 * C152113) * C73612) *
                C151954 -
            ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + (C94355 + C94356) * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C152167) *
               C152166 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             (C93433 + C93434) * C73612) *
                C152167 -
            ((C61880 * C152113 + C60370 * C152184) * C73612 +
             (C94356 + C94355) * C152249 + (C94354 + C94353) * C152248) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
              C65785 * C152113) *
                 C152248 +
             (C93435 + C93436) * C152249 + C93443 * C73612) *
                C152167 -
            ((C94357 + C94358) * C73612 + (C94359 + C94360) * C152249 +
             (C65786 * C152113 + C65785 * C152184) * C152248) *
                C151954) *
               C152166 +
           (((C94360 + C94359) * C152248 + (C94358 + C94357) * C152249 +
             (C60371 * C152184 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C73612) *
                C151954 -
            ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
             (C93436 + C93435) * C152248) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152167 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C1709 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            C95619 * C73612) *
               C151954 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C152167) *
              C1710 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C152167 -
           ((C95620 + C95621) * C73612 + (C94931 + C94930) * C152249 +
            C94925 * C152248) *
               C151954) *
              C1711 +
          ((C95619 * C152248 + (C95621 + C95620) * C152249 +
            (C61286 * C152184 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C73612) *
               C151954 -
           ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
            C94701 * C152248) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C152255 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C152239 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 +
            (C59658 * C152184 + C60803 * C152113) * C73612) *
               C151867 * C152208) *
              C335 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C152239 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C152184) * C73612 +
            (C93434 + C93433) * C152249 + C93442 * C152248) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C152255 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C152239 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C59655 * C152184 + C60367 * C152113) * C152249 +
           (C59656 * C152184 + C60366 * C152113) * C73612) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C152184) * C73612 +
           (C60368 * C152113 + C59659 * C152184) * C152249 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
               C152248) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
            C65785 * C152113) *
               C152248 +
           (C59663 * C152184 + C60373 * C152113) * C152249 +
           (C59664 * C152184 + C60372 * C152113) * C73612) *
              C151867 * C151849 * C131 -
          (((C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152113 +
            C59993 * C152184) *
               C73612 +
           (C65993 * C152113 + C59992 * C152184) * C152249 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
               C152248) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152184 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C152248 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152184 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C152249 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152184 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C73612) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152256 -
           ((C60801 * C152113 + C60366 * C152184) * C73612 +
            (C60800 * C152113 + C60367 * C152184) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C152241 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C60800 * C152184 + C62168 * C152113) * C152249 +
            (C60801 * C152184 + C62167 * C152113) * C73612) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C60368 * C152184 + C61882 * C152113) * C152249 +
            (C60369 * C152184 + C61881 * C152113) * C73612) *
               C152241 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C152256 -
           ((C67579 * C152113 + C61881 * C152184) * C73612 +
            (C65784 * C152113 + C61882 * C152184) * C152249 +
            (C65783 * C152113 + C65782 * C152184) * C152248) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C152256 -
           ((C65507 * C152113 + C60372 * C152184) * C73612 +
            (C65506 * C152113 + C60373 * C152184) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C152241 +
           ((C65786 * C152184 + C65788 * C152113) * C152248 +
            (C65506 * C152184 + C65787 * C152113) * C152249 +
            (C65507 * C152184 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C73612) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C1259 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C1260 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 +
            (C59658 * C152184 + C60803 * C152113) * C73612) *
               C151867 * C152208) *
              C152252 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C1260 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C152184) * C73612 +
            (C93434 + C93433) * C152249 + C93442 * C152248) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C1259 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C1260 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C93423 + C93424) * C152249 + C93441 * C73612) *
              C151867 * C1347 -
          (C94701 * C73612 + (C93426 + C93425) * C152249 +
           (C93424 + C93423) * C152248) *
              C151867 * C1348 +
          (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
              C151867 * C1349 -
          ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
           C94701 * C152248) *
              C151867 * C1350 +
          (C94706 * C152248 + (C94705 + C94704) * C152249 +
           (C60625 * C152184 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C73612) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152256 -
           (C94925 * C73612 + (C94351 + C94352) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C152241 +
           ((C65779 * C152184 + C65780 * C152113) * C152248 +
            (C94926 + C94927) * C152249 + C94934 * C73612) *
               C152211) *
              C1259 +
          (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
            (C94930 + C94931) * C73612) *
               C152241 -
           (C94701 * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C152256 -
           ((C94932 + C94933) * C73612 + (C94929 + C94928) * C152249 +
            (C94927 + C94926) * C152248) *
               C152211) *
              C1260 +
          ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
               C152256 -
           ((C60804 * C152113 + C60803 * C152184) * C73612 +
            (C94931 + C94930) * C152249 + C94925 * C152248) *
               C152241 +
           (C94934 * C152248 + (C94933 + C94932) * C152249 +
            (C60804 * C152184 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C73612) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C152167 -
           ((C60801 * C152113 + C60366 * C152184) * C73612 +
            (C60800 * C152113 + C60367 * C152184) * C152249 +
            (C65779 * C152113 + C65778 * C152184) * C152248) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C152184 + C65782 * C152113) * C152248 +
            (C60368 * C152184 + C61882 * C152113) * C152249 +
            (C60369 * C152184 + C61881 * C152113) * C73612) *
               C151954 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C152167 -
           ((C65507 * C152113 + C60372 * C152184) * C73612 +
            (C65506 * C152113 + C60373 * C152184) * C152249 +
            (C65786 * C152113 + C65785 * C152184) * C152248) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C152184 + C66202 * C152113) * C152248 +
            (C65993 * C152184 + C65994 * C152113) * C152249 +
            (C93863 * C152184 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C73612) *
               C151954 -
           ((C93864 + C93858) * C73612 + (C93857 + C93856) * C152249 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
                C152248) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
              C65778 * C152113) *
                 C152248 +
             (C93423 + C93424) * C152249 + C93441 * C73612) *
                C152167 -
            (C94925 * C73612 + (C94351 + C94352) * C152249 +
             (C65779 * C152113 + C65778 * C152184) * C152248) *
                C151954) *
               C1259 +
           (((C94352 + C94351) * C152248 + (C94350 + C94349) * C152249 +
             (C94930 + C94931) * C73612) *
                C151954 -
            (C94701 * C73612 + (C93426 + C93425) * C152249 +
             (C93424 + C93423) * C152248) *
                C152167) *
               C1260 +
           ((C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
                C152167 -
            ((C60804 * C152113 + C60803 * C152184) * C73612 +
             (C94931 + C94930) * C152249 + C94925 * C152248) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C152184 + C65782 * C152113) * C152248 +
             (C94353 + C94354) * C152249 + C95422 * C73612) *
                C151954 -
            (C93442 * C73612 + (C93430 + C93429) * C152249 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                 C152248) *
                C152167) *
               C1259 +
           (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
             C95129 * C73612) *
                C152167 -
            ((C95423 + C95424) * C73612 + (C94356 + C94355) * C152249 +
             (C94354 + C94353) * C152248) *
                C151954) *
               C1260 +
           ((C95422 * C152248 + (C95424 + C95423) * C152249 +
             (C61146 * C152184 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C73612) *
                C151954 -
            ((C95130 + C95131) * C73612 + (C93434 + C93433) * C152249 +
             C93442 * C152248) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C59655 * C152184 + C60367 * C152113) * C152249 +
           (C59656 * C152184 + C60366 * C152113) * C73612) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C152184) * C73612 +
           (C60368 * C152113 + C59659 * C152184) * C152249 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
               C152248) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
            C65785 * C152113) *
               C152248 +
           (C59663 * C152184 + C60373 * C152113) * C152249 +
           (C59664 * C152184 + C60372 * C152113) * C73612) *
              C151867 * C151849 * C131 -
          (((C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152113 +
            C59993 * C152184) *
               C73612 +
           (C65993 * C152113 + C59992 * C152184) * C152249 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152184) *
               C152248) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152184 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C152248 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152184 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C152249 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152184 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C73612) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C152255 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C152239 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 +
            (C59658 * C152184 + C60803 * C152113) * C73612) *
               C151867 * C152208) *
              C335 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C152239 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C152184) * C73612 +
            (C93434 + C93433) * C152249 + C93442 * C152248) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C152255 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C152239 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
             C65778 * C152113) *
                C152248 +
            (C93423 + C93424) * C152249 + C93441 * C73612) *
               C151867 * C1259 -
           ((C93427 + C93428) * C73612 + (C93426 + C93425) * C152249 +
            (C93424 + C93423) * C152248) *
               C151867 * C1260 +
           (C93441 * C152248 + (C93428 + C93427) * C152249 +
            (C59658 * C152184 + C60803 * C152113) * C73612) *
               C151867 * C152208) *
              C152252 +
          (((C93429 + C93430) * C152248 + (C93431 + C93432) * C152249 +
            (C93433 + C93434) * C73612) *
               C151867 * C1260 -
           (C93442 * C73612 + (C93430 + C93429) * C152249 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152184) *
                C152248) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C152184) * C73612 +
            (C93434 + C93433) * C152249 + C93442 * C152248) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152184 +
             C65785 * C152113) *
                C152248 +
            (C93435 + C93436) * C152249 + C93443 * C73612) *
               C151867 * C1259 -
           ((C93439 + C93440) * C73612 + (C93438 + C93437) * C152249 +
            (C93436 + C93435) * C152248) *
               C151867 * C1260 +
           (C93443 * C152248 + (C93440 + C93439) * C152249 +
            (C59666 * C152184 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C73612) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152184 +
            C65778 * C152113) *
               C152248 +
           (C93423 + C93424) * C152249 + C93441 * C73612) *
              C151867 * C1347 -
          (C94701 * C73612 + (C93426 + C93425) * C152249 +
           (C93424 + C93423) * C152248) *
              C151867 * C1348 +
          (C93441 * C152248 + (C93428 + C93427) * C152249 + C94706 * C73612) *
              C151867 * C1349 -
          ((C94704 + C94705) * C73612 + (C94703 + C94702) * C152249 +
           C94701 * C152248) *
              C151867 * C1350 +
          (C94706 * C152248 + (C94705 + C94704) * C152249 +
           (C60625 * C152184 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C73612) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C151908 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C151915 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C151867 * C3585) *
              C151826 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C151915 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C151908 -
           (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
            C59672 * C59428) *
               C151867 * C3585) *
              C151835 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C151908 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C151915 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C151908 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C151915 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C151867 * C3585) *
              C151826 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C151915 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C151908 -
           ((C53105 + C53106 + C53107) * C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C3585) *
              C151835 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C151908 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C151915 +
           ((C51237 + C51236 + C51235) * C152049 * C50873 +
            (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
             C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
             C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                C152049 * C152087) *
               C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C151908 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C151915 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C151867 * C3585) *
              C151826 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C151915 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C151908 -
           ((C67280 + C67281 + C67282) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C3585) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C151908 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C151915 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C152167 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C151908 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C152167) *
               C151915 +
           ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
             C60626 * C59431) *
                C152167 -
            (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
             C60375 * C59428) *
                C151954) *
               C3585) *
              C3241 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C152167) *
               C151908 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C152167 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C151915 +
           ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152049 *
                 C59431) *
                C151954 -
            (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
             C59672 * C59428) *
                C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C152167 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C151908 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C152167) *
               C151915 +
           (((C51225 + C51224 + C51223) * C152049 * C50873 +
             (C52618 + C52619 + C52620) * C152049 * C152087) *
                C152167 -
            ((C53625 + C53626 + C53627) * C152049 * C152087 +
             (C52892 + C52891 + C52890) * C152049 * C50873) *
                C151954) *
               C3585) *
              C3241 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C152167) *
               C151908 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C152167 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C151915 +
           (((C53415 + C53414 + C53413) * C152049 * C50873 +
             (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
              C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
              C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                 C152049 * C152087) *
                C151954 -
            ((C53105 + C53106 + C53107) * C152049 * C152087 +
             (C51231 + C51230 + C51229) * C152049 * C50873) *
                C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C152167 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C151908 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C152167) *
               C151915 +
           (((C65487 + C65486 + C65485) * C50873 +
             (C66843 + C66844 + C66845) * C152087) *
                C152167 -
            ((C67775 + C67776 + C67777) * C152087 +
             (C67073 + C67072 + C67071) * C50873) *
                C151954) *
               C3585) *
              C3241 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C152167) *
               C151908 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C152167 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151915 +
           (((C67576 + C67575 + C67580) * C50873 +
             (C60370 * C14751 + C61880 * C14752 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C14753) *
                 C152087) *
                C151954 -
            ((C67280 + C67281 + C67282) * C152087 +
             (C65493 + C65492 + C65491) * C50873) *
                C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C151867 * C3101 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C151867 * C151912) *
                  C152261 +
              (((C51226 + C51227 + C51228) * C152049 * C50873 +
                (C51229 + C51230 + C51231) * C152049 * C152087) *
                   C151867 * C151912 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C151867 * C3101) *
                  C152254 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C151867 * C3101 -
               ((C51235 + C51236 + C51237) * C152049 * C152087 +
                (C51234 + C51233 + C51232) * C152049 * C50873) *
                   C151867 * C151912) *
                  C152237 +
              (((C51701 + C51702 + C51703) * C152049 * C50873 +
                (C50875 * C345 + C51692 + C51692 + C50870 * C369 +
                 C50877 * C347 + C51693 + C51693 + C50871 * C371 +
                 C50879 * C349 + C51694 + C51694 + C50872 * C373) *
                    C152049 * C152087) *
                   C151867 * C151912 -
               ((C51703 + C51702 + C51701) * C152049 * C152087 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C152049 * C50873) *
                   C151867 * C3101) *
                  C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C151867 * C152262 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C151867 * C152258 +
               ((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C52618 + C52619 + C52620) * C152049 * C152087) *
                   C151867 * C152244 -
               ((C52621 + C52622 + C52623) * C152049 * C152087 +
                (C52620 + C52619 + C52618) * C152049 * C50873) *
                   C151867 * C152218) *
                  C3241 +
              (((C51226 + C51227 + C51228) * C152049 * C50873 +
                (C51229 + C51230 + C51231) * C152049 * C152087) *
                   C151867 * C152258 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C151867 * C152262 -
               ((C53105 + C53106 + C53107) * C152049 * C152087 +
                (C51231 + C51230 + C51229) * C152049 * C50873) *
                   C151867 * C152244 +
               ((C53107 + C53106 + C53105) * C152049 * C50873 +
                (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
                 C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
                 C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                    C152049 * C152087) *
                   C151867 * C152218) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C152256 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C152241 +
            ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
              C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 +
              C51464 + C50872 * C577) *
                 C152049 * C50873 +
             (C52887 + C52888 + C52889) * C152049 * C152087) *
                C152211) *
               C3101 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C152241 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C152256 -
            ((C52893 + C52894 + C52895) * C152049 * C152087 +
             (C52889 + C52888 + C52887) * C152049 * C50873) *
                C152211) *
               C151912) *
              C3241 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C152241 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C152256 -
            ((C54503 + C54504 + C54505) * C152049 * C152087 +
             (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
              C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 +
              C51479 + C50870 * C576) *
                 C152049 * C50873) *
                C152211) *
               C3101 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C152256 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C152241 +
            ((C54505 + C54504 + C54503) * C152049 * C50873 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152049 * C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C3101 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C151912) *
              C152261 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C151912 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C3101) *
              C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C3101 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C151912) *
              C152237 +
          ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
            (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) * C152049 *
                C59431) *
               C151867 * C151912 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152262 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C152258 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C151867 * C152244 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C151867 * C152218) *
              C3241 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C152258 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152262 -
           (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
            C59672 * C59428) *
               C151867 * C152244 +
           (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
            (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) * C152049 *
                C59431) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C152256 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C152241 +
            ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                 C59428 +
             C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                C152211) *
               C3101 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C152241 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C152256 -
            (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
             C60805 * C59428) *
                C152211) *
               C151912) *
              C3241 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C152241 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C152256 -
            (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
             (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                 C59428) *
                C152211) *
               C3101 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C152256 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C152241 +
            (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152049 *
                 C59431) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C3101 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C151912) *
              C152261 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C151912 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C3101 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C151912) *
              C152237 +
          (((C65983 + C65995 + C65996) * C50873 +
            (C59993 * C14751 +
             (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C14752 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C14753) *
                C152087) *
               C151867 * C151912 -
           ((C65996 + C65995 + C65983) * C152087 +
            (C66202 * C14753 + C66201 * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152262 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C152258 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C151867 * C152244 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C151867 * C152218) *
              C3241 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C152258 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152262 -
           ((C67280 + C67281 + C67282) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152244 +
           ((C67282 + C67281 + C67280) * C50873 +
            (C59662 * C14751 + C61146 * C14752 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C14753) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C152256 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C152241 +
            ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
             (C67067 + C67068 + C67084) * C152087) *
                C152211) *
               C3101 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C152241 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C152256 -
            ((C67085 + C67076 + C67077) * C152087 +
             (C67084 + C67068 + C67067) * C50873) *
                C152211) *
               C151912) *
              C3241 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C152241 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C152256 -
            ((C68656 + C68650 + C68651) * C152087 +
             (C68857 * C14753 + C65783 * C14752 + C65782 * C14751) * C50873) *
                C152211) *
               C3101 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C152256 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C152241 +
            ((C68651 + C68650 + C68656) * C50873 +
             (C61881 * C14751 + C67579 * C14752 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C14753) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C152167 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C3101 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C152167) *
               C151912) *
              C151826 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C152167) *
               C3101 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C152167 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C151912) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                 C59428 +
             C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                C152167 -
            (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                 C59428) *
                C151954) *
               C3101 +
           ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152049 *
                 C59431) *
                C151954 -
            (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
             C59675 * C59428) *
                C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C152167 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C3101 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C152167) *
               C151912) *
              C151826 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C152167) *
               C3101 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C152167 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C151912) *
              C151835 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C152049 * C50873 +
             (C51232 + C51233 + C51234) * C152049 * C152087) *
                C152167 -
            ((C52245 + C52246 + C52247) * C152049 * C152087 +
             (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
              C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 +
              C51485 + C50870 * C572) *
                 C152049 * C50873) *
                C151954) *
               C3101 +
           (((C52247 + C52246 + C52245) * C152049 * C50873 +
             (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
              C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
              C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                 C152049 * C152087) *
                C151954 -
            ((C51235 + C51236 + C51237) * C152049 * C152087 +
             (C51234 + C51233 + C51232) * C152049 * C50873) *
                C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C152167 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C3101 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C152167) *
               C151912) *
              C151826 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C152167) *
               C3101 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C152167 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
              C65785 * C14752 + C65786 * C14753) *
                 C50873 +
             (C65494 + C65495 + C65508) * C152087) *
                C152167 -
            ((C66499 + C66500 + C66501) * C152087 +
             (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
                C151954) *
               C3101 +
           (((C66501 + C66500 + C66499) * C50873 +
             (C60372 * C14751 + C65507 * C14752 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C14753) *
                 C152087) *
                C151954 -
            ((C65509 + C65500 + C65501) * C152087 +
             (C65508 + C65495 + C65494) * C50873) *
                C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C152262 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C152258 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C151867 * C152244 -
           ((C52621 + C52622 + C52623) * C152049 * C152087 +
            (C52620 + C52619 + C52618) * C152049 * C50873) *
               C151867 * C152218) *
              C3241 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C152258 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C152262 -
           ((C53105 + C53106 + C53107) * C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C152244 +
           ((C53107 + C53106 + C53105) * C152049 * C50873 +
            (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
             C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
             C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                C152049 * C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C3101 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C151912) *
              C152261 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C151912 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C3101) *
              C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C3101 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C151912) *
              C152237 +
          (((C51701 + C51702 + C51703) * C152049 * C50873 +
            (C50875 * C345 + C51692 + C51692 + C50870 * C369 + C50877 * C347 +
             C51693 + C51693 + C50871 * C371 + C50879 * C349 + C51694 + C51694 +
             C50872 * C373) *
                C152049 * C152087) *
               C151867 * C151912 -
           ((C51703 + C51702 + C51701) * C152049 * C152087 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C152049 * C50873) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C3101 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C151912) *
              C152261 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C151912 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C3101) *
              C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C3101 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C151912) *
              C152237 +
          ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
            (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) * C152049 *
                C59431) *
               C151867 * C151912 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152262 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C152258 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C151867 * C152244 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C151867 * C152218) *
              C3241 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C152258 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152262 -
           (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
            C59672 * C59428) *
               C151867 * C152244 +
           (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
            (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) * C152049 *
                C59431) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C3101 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C151912) *
              C152261 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C151912 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C3101 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C151912) *
              C152237 +
          (((C65983 + C65995 + C65996) * C50873 +
            (C59993 * C14751 +
             (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C14752 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C14753) *
                C152087) *
               C151867 * C151912 -
           ((C65996 + C65995 + C65983) * C152087 +
            (C66202 * C14753 + C66201 * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152262 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C152258 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C151867 * C152244 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C151867 * C152218) *
              C3241 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C152258 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152262 -
           ((C67280 + C67281 + C67282) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152244 +
           ((C67282 + C67281 + C67280) * C50873 +
            (C59662 * C14751 + C61146 * C14752 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C14753) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C4107 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C151908 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C4107) *
               C151915 +
           ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
             C60626 * C59431) *
                C4107 -
            (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
             C60375 * C59428) *
                C151954) *
               C3585) *
              C152152 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C4107) *
               C151908 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C4107 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C151915 +
           ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152049 *
                 C59431) *
                C151954 -
            (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
             C59672 * C59428) *
                C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C4107 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C151908 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C4107) *
               C151915 +
           (((C51225 + C51224 + C51223) * C152049 * C50873 +
             (C52618 + C52619 + C52620) * C152049 * C152087) *
                C4107 -
            ((C53625 + C53626 + C53627) * C152049 * C152087 +
             (C52892 + C52891 + C52890) * C152049 * C50873) *
                C151954) *
               C3585) *
              C152152 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C4107) *
               C151908 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C4107 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C151915 +
           (((C53415 + C53414 + C53413) * C152049 * C50873 +
             (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
              C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
              C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                 C152049 * C152087) *
                C151954 -
            ((C53105 + C53106 + C53107) * C152049 * C152087 +
             (C51231 + C51230 + C51229) * C152049 * C50873) *
                C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C4107 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C151908 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C4107) *
               C151915 +
           (((C65487 + C65486 + C65485) * C50873 +
             (C66843 + C66844 + C66845) * C152087) *
                C4107 -
            ((C67775 + C67776 + C67777) * C152087 +
             (C67073 + C67072 + C67071) * C50873) *
                C151954) *
               C3585) *
              C152152 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C4107) *
               C151908 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C4107 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151915 +
           (((C67576 + C67575 + C67580) * C50873 +
             (C60370 * C14751 + C61880 * C14752 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C14753) *
                 C152087) *
                C151954 -
            ((C67280 + C67281 + C67282) * C152087 +
             (C65493 + C65492 + C65491) * C50873) *
                C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151950 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151957 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C4779) *
              C151908 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C151957 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151950 -
           (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
            C60805 * C59428) *
               C4779) *
              C151915 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C151950 -
           (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
            C60375 * C59428) *
               C151957 +
           (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152049 *
                C59431) *
               C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151950 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C151957 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C4779) *
              C151908 +
          (((C52241 + C52240 + C52239) * C152049 * C50873 +
            (C52890 + C52891 + C52892) * C152049 * C152087) *
               C151957 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151950 -
           ((C52893 + C52894 + C52895) * C152049 * C152087 +
            (C52889 + C52888 + C52887) * C152049 * C50873) *
               C4779) *
              C151915 +
          (((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C151950 -
           ((C53625 + C53626 + C53627) * C152049 * C152087 +
            (C52892 + C52891 + C52890) * C152049 * C50873) *
               C151957 +
           ((C52895 + C52894 + C52893) * C152049 * C50873 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152049 * C152087) *
               C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151950 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151957 +
           ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C4779) *
              C151908 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C151957 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151950 -
           ((C67085 + C67076 + C67077) * C152087 +
            (C67084 + C67068 + C67067) * C50873) *
               C4779) *
              C151915 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C151950 -
           ((C67775 + C67776 + C67777) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C151957 +
           ((C67077 + C67076 + C67085) * C50873 +
            (C60802 * C14751 + C62166 * C14752 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C14753) *
                C152087) *
               C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C152049 * C50873 +
                 (C51220 + C51221 + C51222) * C152049 * C152087) *
                    C4107 -
                ((C52239 + C52240 + C52241) * C152049 * C152087 +
                 (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                  C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                  C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                     C152049 * C50873) *
                    C151954) *
                   C3101 +
               (((C52241 + C52240 + C52239) * C152049 * C50873 +
                 (C52890 + C52891 + C52892) * C152049 * C152087) *
                    C151954 -
                ((C51223 + C51224 + C51225) * C152049 * C152087 +
                 (C51222 + C51221 + C51220) * C152049 * C50873) *
                    C4107) *
                   C151912) *
                  C152252 +
              ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                  C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                  C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                     C152049 * C50873 +
                 (C52242 + C52243 + C52244) * C152049 * C152087) *
                    C151954 -
                ((C51228 + C51227 + C51226) * C152049 * C152087 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C152049 * C50873) *
                    C4107) *
                   C3101 +
               (((C51226 + C51227 + C51228) * C152049 * C50873 +
                 (C51229 + C51230 + C51231) * C152049 * C152087) *
                    C4107 -
                ((C53413 + C53414 + C53415) * C152049 * C152087 +
                 (C52244 + C52243 + C52242) * C152049 * C50873) *
                    C151954) *
                   C151912) *
                  C152235 +
              ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                  C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                  C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                     C152049 * C50873 +
                 (C51232 + C51233 + C51234) * C152049 * C152087) *
                    C4107 -
                ((C52245 + C52246 + C52247) * C152049 * C152087 +
                 (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                  C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                  C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                     C152049 * C50873) *
                    C151954) *
                   C3101 +
               (((C52247 + C52246 + C52245) * C152049 * C50873 +
                 (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                  C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                  C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                     C152049 * C152087) *
                    C151954 -
                ((C51235 + C51236 + C51237) * C152049 * C152087 +
                 (C51234 + C51233 + C51232) * C152049 * C50873) *
                    C4107) *
                   C151912) *
                  C152202) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C4107 -
               ((C52239 + C52240 + C52241) * C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C151954) *
                  C152262 +
              (((C52241 + C52240 + C52239) * C152049 * C50873 +
                (C52890 + C52891 + C52892) * C152049 * C152087) *
                   C151954 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C4107) *
                  C152258 +
              (((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C52618 + C52619 + C52620) * C152049 * C152087) *
                   C4107 -
               ((C53625 + C53626 + C53627) * C152049 * C152087 +
                (C52892 + C52891 + C52890) * C152049 * C50873) *
                   C151954) *
                  C152244 +
              (((C53627 + C53626 + C53625) * C152049 * C50873 +
                (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
                 C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
                 C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                    C152049 * C152087) *
                   C151954 -
               ((C52621 + C52622 + C52623) * C152049 * C152087 +
                (C52620 + C52619 + C52618) * C152049 * C50873) *
                   C4107) *
                  C152218) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C152263 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C152260 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C152247 -
           ((C54915 + C54916 + C54917) * C152049 * C152087 +
            (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                C152049 * C50873) *
               C152224) *
              C3101 +
          (((C52241 + C52240 + C52239) * C152049 * C50873 +
            (C52890 + C52891 + C52892) * C152049 * C152087) *
               C152260 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C152263 -
           ((C52893 + C52894 + C52895) * C152049 * C152087 +
            (C52889 + C52888 + C52887) * C152049 * C50873) *
               C152247 +
           ((C54917 + C54916 + C54915) * C152049 * C50873 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152049 * C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C4107 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C3101 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C4107) *
               C151912) *
              C152252 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C4107) *
               C3101 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C4107 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C151912) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                 C59428 +
             C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                C4107 -
            (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                 C59428) *
                C151954) *
               C3101 +
           ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152049 *
                 C59431) *
                C151954 -
            (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
             C59675 * C59428) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C4107 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C152262 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C151954 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C4107) *
              C152258 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C4107 -
           (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
            C60375 * C59428) *
               C151954) *
              C152244 +
          ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152049 *
                C59431) *
               C151954 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152263 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C152260 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152247 -
           (C62169 * C59431 + C62170 * C59430 + C62171 * C59429 +
            (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) * C152049 *
                C59428) *
               C152224) *
              C3101 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C152260 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C152263 -
           (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
            C60805 * C59428) *
               C152247 +
           (C62171 * C59428 + C62170 * C59429 + C62169 * C59430 +
            (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152049 *
                C59431) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C4107 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C3101 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C4107) *
               C3101 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C4107 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
              C65785 * C14752 + C65786 * C14753) *
                 C50873 +
             (C65494 + C65495 + C65508) * C152087) *
                C4107 -
            ((C66499 + C66500 + C66501) * C152087 +
             (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
                C151954) *
               C3101 +
           (((C66501 + C66500 + C66499) * C50873 +
             (C60372 * C14751 + C65507 * C14752 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C14753) *
                 C152087) *
                C151954 -
            ((C65509 + C65500 + C65501) * C152087 +
             (C65508 + C65495 + C65494) * C50873) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C4107 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C152262 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C151954 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C4107) *
              C152258 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C4107 -
           ((C67775 + C67776 + C67777) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C151954) *
              C152244 +
          (((C67777 + C67776 + C67775) * C50873 +
            (C60803 * C14751 + C60804 * C14752 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C14753) *
                C152087) *
               C151954 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152263 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C152260 +
           ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152247 -
           ((C69055 + C69056 + C69057) * C152087 +
            (C68357 * C14753 + C68355 * C14752 + C65780 * C14751) * C50873) *
               C152224) *
              C3101 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C152260 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C152263 -
           ((C67085 + C67076 + C67077) * C152087 +
            (C67084 + C67068 + C67067) * C50873) *
               C152247 +
           ((C69057 + C69056 + C69055) * C50873 +
            (C62167 * C14751 + C67083 * C14752 +
             (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C14753) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C151950 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151957 +
            ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                 C59428 +
             C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                C4779) *
               C3101 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151957 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C151950 -
            (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
             C60805 * C59428) *
                C4779) *
               C151912) *
              C152152 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151957 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C151950 -
            (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
             (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                 C59428) *
                C4779) *
               C3101 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C151950 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151957 +
            (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152049 *
                 C59431) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C151950 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151957 +
            ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
              C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 +
              C51464 + C50872 * C577) *
                 C152049 * C50873 +
             (C52887 + C52888 + C52889) * C152049 * C152087) *
                C4779) *
               C3101 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151957 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C151950 -
            ((C52893 + C52894 + C52895) * C152049 * C152087 +
             (C52889 + C52888 + C52887) * C152049 * C50873) *
                C4779) *
               C151912) *
              C152152 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151957 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C151950 -
            ((C54503 + C54504 + C54505) * C152049 * C152087 +
             (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
              C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 +
              C51479 + C50870 * C576) *
                 C152049 * C50873) *
                C4779) *
               C3101 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C151950 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151957 +
            ((C54505 + C54504 + C54503) * C152049 * C50873 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152049 * C152087) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C151950 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151957 +
            ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
             (C67067 + C67068 + C67084) * C152087) *
                C4779) *
               C3101 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151957 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C151950 -
            ((C67085 + C67076 + C67077) * C152087 +
             (C67084 + C67068 + C67067) * C50873) *
                C4779) *
               C151912) *
              C152152 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151957 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C151950 -
            ((C68656 + C68650 + C68651) * C152087 +
             (C68857 * C14753 + C65783 * C14752 + C65782 * C14751) * C50873) *
                C4779) *
               C3101 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C151950 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151957 +
            ((C68651 + C68650 + C68656) * C50873 +
             (C61881 * C14751 + C67579 * C14752 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C14753) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C4107 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C151954) *
              C152262 +
          (((C52241 + C52240 + C52239) * C152049 * C50873 +
            (C52890 + C52891 + C52892) * C152049 * C152087) *
               C151954 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C4107) *
              C152258 +
          (((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C4107 -
           ((C53625 + C53626 + C53627) * C152049 * C152087 +
            (C52892 + C52891 + C52890) * C152049 * C50873) *
               C151954) *
              C152244 +
          (((C53627 + C53626 + C53625) * C152049 * C50873 +
            (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
             C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
             C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                C152049 * C152087) *
               C151954 -
           ((C52621 + C52622 + C52623) * C152049 * C152087 +
            (C52620 + C52619 + C52618) * C152049 * C50873) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C4107 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C3101 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C4107) *
               C151912) *
              C152252 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C4107) *
               C3101 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C4107 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C151912) *
              C152235 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C152049 * C50873 +
             (C51232 + C51233 + C51234) * C152049 * C152087) *
                C4107 -
            ((C52245 + C52246 + C52247) * C152049 * C152087 +
             (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
              C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 +
              C51485 + C50870 * C572) *
                 C152049 * C50873) *
                C151954) *
               C3101 +
           (((C52247 + C52246 + C52245) * C152049 * C50873 +
             (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
              C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
              C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                 C152049 * C152087) *
                C151954 -
            ((C51235 + C51236 + C51237) * C152049 * C152087 +
             (C51234 + C51233 + C51232) * C152049 * C50873) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C4107 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C3101 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C4107) *
               C151912) *
              C152252 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C4107) *
               C3101 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C4107 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C151912) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                 C59428 +
             C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                C4107 -
            (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                 C59428) *
                C151954) *
               C3101 +
           ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152049 *
                 C59431) *
                C151954 -
            (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
             C59675 * C59428) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C4107 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C152262 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C151954 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C4107) *
              C152258 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C4107 -
           (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
            C60375 * C59428) *
               C151954) *
              C152244 +
          ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152049 *
                C59431) *
               C151954 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C4107 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C3101 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C4107) *
               C3101 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C4107 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
              C65785 * C14752 + C65786 * C14753) *
                 C50873 +
             (C65494 + C65495 + C65508) * C152087) *
                C4107 -
            ((C66499 + C66500 + C66501) * C152087 +
             (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
                C151954) *
               C3101 +
           (((C66501 + C66500 + C66499) * C50873 +
             (C60372 * C14751 + C65507 * C14752 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C14753) *
                 C152087) *
                C151954 -
            ((C65509 + C65500 + C65501) * C152087 +
             (C65508 + C65495 + C65494) * C50873) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C4107 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C152262 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C151954 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C4107) *
              C152258 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C4107 -
           ((C67775 + C67776 + C67777) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C151954) *
              C152244 +
          (((C67777 + C67776 + C67775) * C50873 +
            (C60803 * C14751 + C60804 * C14752 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C14753) *
                C152087) *
               C151954 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C151867 * C152166 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C151867 * C151912) *
                  C739 +
              (((C51226 + C51227 + C51228) * C152049 * C50873 +
                (C51229 + C51230 + C51231) * C152049 * C152087) *
                   C151867 * C151912 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C151867 * C152166) *
                  C740 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C151867 * C152166 -
               ((C51235 + C51236 + C51237) * C152049 * C152087 +
                (C51234 + C51233 + C51232) * C152049 * C50873) *
                   C151867 * C151912) *
                  C741 +
              (((C51701 + C51702 + C51703) * C152049 * C50873 +
                (C50875 * C345 + C51692 + C51692 + C50870 * C369 +
                 C50877 * C347 + C51693 + C51693 + C50871 * C371 +
                 C50879 * C349 + C51694 + C51694 + C50872 * C373) *
                    C152049 * C152087) *
                   C151867 * C151912 -
               ((C51703 + C51702 + C51701) * C152049 * C152087 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C152049 * C50873) *
                   C151867 * C152166) *
                  C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C151867 * C1709 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C151867 * C1710 +
               ((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C52618 + C52619 + C52620) * C152049 * C152087) *
                   C151867 * C1711 -
               ((C52621 + C52622 + C52623) * C152049 * C152087 +
                (C52620 + C52619 + C52618) * C152049 * C50873) *
                   C151867 * C152218) *
                  C152152 +
              (((C51226 + C51227 + C51228) * C152049 * C50873 +
                (C51229 + C51230 + C51231) * C152049 * C152087) *
                   C151867 * C1710 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C151867 * C1709 -
               ((C53105 + C53106 + C53107) * C152049 * C152087 +
                (C51231 + C51230 + C51229) * C152049 * C50873) *
                   C151867 * C1711 +
               ((C53107 + C53106 + C53105) * C152049 * C50873 +
                (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
                 C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
                 C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                    C152049 * C152087) *
                   C151867 * C152218) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C2215 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C2216 +
            ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
              C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 +
              C51464 + C50872 * C577) *
                 C152049 * C50873 +
             (C52887 + C52888 + C52889) * C152049 * C152087) *
                C152211) *
               C152166 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C2216 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C2215 -
            ((C52893 + C52894 + C52895) * C152049 * C152087 +
             (C52889 + C52888 + C52887) * C152049 * C50873) *
                C152211) *
               C151912) *
              C152152 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C2216 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C2215 -
            ((C54503 + C54504 + C54505) * C152049 * C152087 +
             (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
              C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 +
              C51479 + C50870 * C576) *
                 C152049 * C50873) *
                C152211) *
               C152166 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C2215 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C2216 +
            ((C54505 + C54504 + C54503) * C152049 * C50873 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152049 * C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152166 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C151912) *
              C739 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C151912 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152166) *
              C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C152166 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C151912) *
              C741 +
          ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
            (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) * C152049 *
                C59431) *
               C151867 * C151912 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C1709 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C1710 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C151867 * C1711 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C151867 * C152218) *
              C152152 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C1710 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C1709 -
           (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
            C59672 * C59428) *
               C151867 * C1711 +
           (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
            (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) * C152049 *
                C59431) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C2215 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C2216 +
            ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                 C59428 +
             C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                C152211) *
               C152166 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C2216 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C2215 -
            (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
             C60805 * C59428) *
                C152211) *
               C151912) *
              C152152 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C2216 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C2215 -
            (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
             (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                 C59428) *
                C152211) *
               C152166 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C2215 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C2216 +
            (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152049 *
                 C59431) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152166 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C151912) *
              C739 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C151912 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C152166 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C151912) *
              C741 +
          (((C65983 + C65995 + C65996) * C50873 +
            (C59993 * C14751 +
             (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C14752 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C14753) *
                C152087) *
               C151867 * C151912 -
           ((C65996 + C65995 + C65983) * C152087 +
            ((C59432 * C554 + C65259 + C65259 + C151790 * C578) * C14753 +
             (C59432 * C547 + C60128 + C60128 + C151790 * C571) * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C1709 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C1710 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C151867 * C1711 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C151867 * C152218) *
              C152152 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C1710 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C1709 -
           ((C67280 + C67281 + C67282) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C1711 +
           ((C67282 + C67281 + C67280) * C50873 +
            (C59662 * C14751 + C61146 * C14752 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C14753) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C2215 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C2216 +
            ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
             (C67067 + C67068 + C67084) * C152087) *
                C152211) *
               C152166 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C2216 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C2215 -
            ((C67085 + C67076 + C67077) * C152087 +
             (C67084 + C67068 + C67067) * C50873) *
                C152211) *
               C151912) *
              C152152 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C2216 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C2215 -
            ((C68656 + C68650 + C68651) * C152087 +
             ((C59432 * C2456 + C65743 + C65743 + C151790 * C2472) * C14753 +
              C65783 * C14752 + C65782 * C14751) *
                 C50873) *
                C152211) *
               C152166 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C2215 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C2216 +
            ((C68651 + C68650 + C68656) * C50873 +
             (C61881 * C14751 + C67579 * C14752 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C14753) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C152049 * C50873 +
                 (C51220 + C51221 + C51222) * C152049 * C152087) *
                    C152167 -
                ((C52239 + C52240 + C52241) * C152049 * C152087 +
                 (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                  C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                  C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                     C152049 * C50873) *
                    C151954) *
                   C152166 +
               (((C52241 + C52240 + C52239) * C152049 * C50873 +
                 (C50875 * C1538 + C52200 + C52200 + C50870 * C1562 +
                  C50877 * C1537 + C52201 + C52201 + C50871 * C1561 +
                  C50879 * C1536 + C52202 + C52202 + C50872 * C1560) *
                     C152049 * C152087) *
                    C151954 -
                ((C51223 + C51224 + C51225) * C152049 * C152087 +
                 (C51222 + C51221 + C51220) * C152049 * C50873) *
                    C152167) *
                   C151912) *
                  C335 +
              ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                  C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                  C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                     C152049 * C50873 +
                 (C52242 + C52243 + C52244) * C152049 * C152087) *
                    C151954 -
                ((C51228 + C51227 + C51226) * C152049 * C152087 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C152049 * C50873) *
                    C152167) *
                   C152166 +
               (((C51226 + C51227 + C51228) * C152049 * C50873 +
                 (C51229 + C51230 + C51231) * C152049 * C152087) *
                    C152167 -
                ((C50879 * C1535 + C52209 + C52209 + C50872 * C1559 +
                  C50877 * C1536 + C52210 + C52210 + C50871 * C1560 +
                  C50875 * C1537 + C52211 + C52211 + C50870 * C1561) *
                     C152049 * C152087 +
                 (C52244 + C52243 + C52242) * C152049 * C50873) *
                    C151954) *
                   C151912) *
                  C336 +
              ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                  C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                  C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                     C152049 * C50873 +
                 (C51232 + C51233 + C51234) * C152049 * C152087) *
                    C152167 -
                ((C52245 + C52246 + C52247) * C152049 * C152087 +
                 (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                  C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                  C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                     C152049 * C50873) *
                    C151954) *
                   C152166 +
               (((C52247 + C52246 + C52245) * C152049 * C50873 +
                 (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                  C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                  C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                     C152049 * C152087) *
                    C151954 -
                ((C51235 + C51236 + C51237) * C152049 * C152087 +
                 (C51234 + C51233 + C51232) * C152049 * C50873) *
                    C152167) *
                   C151912) *
                  C152202) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C152167 -
               ((C52239 + C52240 + C52241) * C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C151954) *
                  C1709 +
              (((C52241 + C52240 + C52239) * C152049 * C50873 +
                (C52890 + C52891 + C52892) * C152049 * C152087) *
                   C151954 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C152167) *
                  C1710 +
              (((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C52618 + C52619 + C52620) * C152049 * C152087) *
                   C152167 -
               ((C53625 + C53626 + C53627) * C152049 * C152087 +
                (C52892 + C52891 + C52890) * C152049 * C50873) *
                   C151954) *
                  C1711 +
              (((C53627 + C53626 + C53625) * C152049 * C50873 +
                (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
                 C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
                 C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                    C152049 * C152087) *
                   C151954 -
               ((C52621 + C52622 + C52623) * C152049 * C152087 +
                (C52620 + C52619 + C52618) * C152049 * C50873) *
                   C152167) *
                  C152218) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C2814 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C2815 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C2816 -
           ((C54915 + C54916 + C54917) * C152049 * C152087 +
            (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                C152049 * C50873) *
               C152224) *
              C152166 +
          (((C52241 + C52240 + C52239) * C152049 * C50873 +
            (C52890 + C52891 + C52892) * C152049 * C152087) *
               C2815 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C2814 -
           ((C52893 + C52894 + C52895) * C152049 * C152087 +
            (C52889 + C52888 + C52887) * C152049 * C50873) *
               C2816 +
           ((C54917 + C54916 + C54915) * C152049 * C50873 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152049 * C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C152167 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C152166 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             (C59432 * C8076 + C60332 + C60332 + C151790 * C8088) * C152049 *
                 C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C152167) *
               C151912) *
              C335 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C152167) *
               C152166 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C152167 -
            ((C59432 * C8075 + C60339 + C60339 + C151790 * C8087) * C152049 *
                 C59431 +
             C60379 * C59430 + C60378 * C59429 + C60377 * C59428) *
                C151954) *
               C151912) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                 C59428 +
             C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                C152167 -
            (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                 C59428) *
                C151954) *
               C152166 +
           ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152049 *
                 C59431) *
                C151954 -
            (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
             C59675 * C59428) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152167 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C1709 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C151954 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C152167) *
              C1710 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C152167 -
           (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
            C60375 * C59428) *
               C151954) *
              C1711 +
          ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152049 *
                C59431) *
               C151954 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C2814 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C2815 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C2816 -
           (C62169 * C59431 + C62170 * C59430 + C62171 * C59429 +
            (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) * C152049 *
                C59428) *
               C152224) *
              C152166 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C2815 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C2814 -
           (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
            C60805 * C59428) *
               C2816 +
           (C62171 * C59428 + C62170 * C59429 + C62169 * C59430 +
            (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152049 *
                C59431) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C152167 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C152166 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C60366 * C14751 + C60801 * C14752 + C62167 * C14753) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C152167) *
               C152166 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C152167 -
            (((C59432 * C9431 + C62018 + C62018 + C151790 * C9443) * C14753 +
              C61881 * C14752 + C60369 * C14751) *
                 C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
              C65785 * C14752 + C65786 * C14753) *
                 C50873 +
             (C65494 + C65495 + C65508) * C152087) *
                C152167 -
            ((C66499 + C66500 + C66501) * C152087 +
             (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
                C151954) *
               C152166 +
           (((C66501 + C66500 + C66499) * C50873 +
             (C60372 * C14751 + C65507 * C14752 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C14753) *
                 C152087) *
                C151954 -
            ((C65509 + C65500 + C65501) * C152087 +
             (C65508 + C65495 + C65494) * C50873) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152167 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C1709 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C151954 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C152167) *
              C1710 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C152167 -
           ((C67775 + C67776 + C67777) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C151954) *
              C1711 +
          (((C67777 + C67776 + C67775) * C50873 +
            (C60803 * C14751 + C60804 * C14752 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C14753) *
                C152087) *
               C151954 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C2814 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C2815 +
           ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C2816 -
           ((C69055 + C69056 + C69057) * C152087 +
            (C68357 * C14753 + C68355 * C14752 + C65780 * C14751) * C50873) *
               C152224) *
              C152166 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C2815 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C2814 -
           ((C67085 + C67076 + C67077) * C152087 +
            (C67084 + C67068 + C67067) * C50873) *
               C2816 +
           ((C69057 + C69056 + C69055) * C50873 +
            (C62167 * C14751 + C67083 * C14752 +
             (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C14753) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                   C152049 * C50873 +
               (C50875 * C341 + C50885 + C50885 + C50870 * C365 +
                C50877 * C340 + C50886 + C50886 + C50871 * C364 +
                C50879 * C339 + C50887 + C50887 + C50872 * C363) *
                   C152049 * C152087) *
                  C151867 * C151849 * C129 -
              ((C50879 * C338 + C50888 + C50888 + C50872 * C362 +
                C50877 * C339 + C50889 + C50889 + C50871 * C363 +
                C50875 * C340 + C50890 + C50890 + C50870 * C364) *
                   C152049 * C152087 +
               (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                   C152049 * C50873) *
                  C151867 * C151849 * C130 +
              ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                   C152049 * C50873 +
               (C50875 * C339 + C50897 + C50897 + C50870 * C363 +
                C50877 * C338 + C50898 + C50898 + C50871 * C362 +
                C50879 * C346 + C50899 + C50899 + C50872 * C370) *
                   C152049 * C152087) *
                  C151867 * C151849 * C131 -
              ((C50879 * C348 + C50900 + C50900 + C50872 * C372 +
                C50877 * C346 + C50901 + C50901 + C50871 * C370 +
                C50875 * C338 + C50902 + C50902 + C50870 * C362) *
                   C152049 * C152087 +
               (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                   C152049 * C50873) *
                  C151867 * C151849 * C132 +
              ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                   C152049 * C50873 +
               (C50875 * C346 + C50909 + C50909 + C50870 * C370 +
                C50877 * C348 + C50910 + C50910 + C50871 * C372 +
                C50879 * C743 + C50911 + C50911 + C50872 * C745) *
                   C152049 * C152087) *
                  C151867 * C151849 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C151867 * C152255 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C151867 * C152239 +
               ((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                 C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                 C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                    C152049 * C152087) *
                   C151867 * C152208) *
                  C335 +
              (((C51226 + C51227 + C51228) * C152049 * C50873 +
                (C51229 + C51230 + C51231) * C152049 * C152087) *
                   C151867 * C152239 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C151867 * C152255 -
               ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                 C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                 C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                    C152049 * C152087 +
                (C51231 + C51230 + C51229) * C152049 * C50873) *
                   C151867 * C152208) *
                  C336 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C151867 * C152255 -
               ((C51235 + C51236 + C51237) * C152049 * C152087 +
                (C51234 + C51233 + C51232) * C152049 * C50873) *
                   C151867 * C152239 +
               ((C51237 + C51236 + C51235) * C152049 * C50873 +
                (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                 C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                 C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                    C152049 * C152087) *
                   C151867 * C152208) *
                  C152202) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C152256 -
               ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
                 C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
                 C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                    C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C152241 +
               ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                 C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                 C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                    C152049 * C50873 +
                (C50875 * C1534 + C51465 + C51465 + C50870 * C1558 +
                 C50877 * C1533 + C51466 + C51466 + C50871 * C1557 +
                 C50879 * C1532 + C51467 + C51467 + C50872 * C1556) *
                    C152049 * C152087) *
                   C152211) *
                  C151849 * C335 +
              (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                 C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                 C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                    C152049 * C50873 +
                (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
                 C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
                 C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                    C152049 * C152087) *
                   C152241 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C152256 -
               ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
                 C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
                 C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                    C152049 * C152087 +
                (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                 C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                 C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                    C152049 * C50873) *
                   C152211) *
                  C151849 * C336 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C152256 -
               ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
                 C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
                 C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                    C152049 * C152087 +
                (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                 C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                 C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                    C152049 * C50873) *
                   C152241 +
               ((C50875 * C553 + C51486 + C51486 + C50870 * C577 +
                 C50877 * C554 + C51487 + C51487 + C50871 * C578 +
                 C50879 * C556 + C51488 + C51488 + C50872 * C580) *
                    C152049 * C50873 +
                (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                 C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                 C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                    C152049 * C152087) *
                   C152211) *
                  C151849 * C152202) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C151867 * C1259 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C151867 * C1260 +
               ((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                 C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                 C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                    C152049 * C152087) *
                   C151867 * C152208) *
                  C152252 +
              (((C51226 + C51227 + C51228) * C152049 * C50873 +
                (C51229 + C51230 + C51231) * C152049 * C152087) *
                   C151867 * C1260 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C151867 * C1259 -
               ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                 C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                 C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                    C152049 * C152087 +
                (C51231 + C51230 + C51229) * C152049 * C50873) *
                   C151867 * C152208) *
                  C152235 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C151867 * C1259 -
               ((C51235 + C51236 + C51237) * C152049 * C152087 +
                (C51234 + C51233 + C51232) * C152049 * C50873) *
                   C151867 * C1260 +
               ((C51237 + C51236 + C51235) * C152049 * C50873 +
                (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                 C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                 C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                    C152049 * C152087) *
                   C151867 * C152208) *
                  C152202) -
         0.25 * std::pow(Pi, 2.5) *
             (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                   C152049 * C50873 +
               (C51220 + C51221 + C51222) * C152049 * C152087) *
                  C151867 * C1347 -
              ((C51223 + C51224 + C51225) * C152049 * C152087 +
               (C51222 + C51221 + C51220) * C152049 * C50873) *
                  C151867 * C1348 +
              ((C51225 + C51224 + C51223) * C152049 * C50873 +
               (C52618 + C52619 + C52620) * C152049 * C152087) *
                  C151867 * C1349 -
              ((C52621 + C52622 + C52623) * C152049 * C152087 +
               (C52620 + C52619 + C52618) * C152049 * C50873) *
                  C151867 * C1350 +
              ((C52623 + C52622 + C52621) * C152049 * C50873 +
               (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 +
                C50877 * C7815 + C52604 + C52604 + C50871 * C7823 +
                C50879 * C8335 + C52605 + C52605 + C50872 * C8337) *
                   C152049 * C152087) *
                  C151867 * C1351) *
             C151821 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C152256 -
               ((C52239 + C52240 + C52241) * C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C152241 +
               ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                 C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                 C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                    C152049 * C50873 +
                (C52887 + C52888 + C52889) * C152049 * C152087) *
                   C152211) *
                  C1259 +
              (((C52241 + C52240 + C52239) * C152049 * C50873 +
                (C52890 + C52891 + C52892) * C152049 * C152087) *
                   C152241 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C152256 -
               ((C52893 + C52894 + C52895) * C152049 * C152087 +
                (C52889 + C52888 + C52887) * C152049 * C50873) *
                   C152211) *
                  C1260 +
              (((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C52618 + C52619 + C52620) * C152049 * C152087) *
                   C152256 -
               ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
                 C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
                 C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                    C152049 * C152087 +
                (C52892 + C52891 + C52890) * C152049 * C50873) *
                   C152241 +
               ((C52895 + C52894 + C52893) * C152049 * C50873 +
                (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                 C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                 C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                    C152049 * C152087) *
                   C152211) *
                  C152208) *
             C151821 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C2215 -
               ((C52239 + C52240 + C52241) * C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C2216 +
               ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                 C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                 C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                    C152049 * C50873 +
                (C52887 + C52888 + C52889) * C152049 * C152087) *
                   C152211) *
                  C151849 * C152252 +
              (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                 C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                 C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                    C152049 * C50873 +
                (C52242 + C52243 + C52244) * C152049 * C152087) *
                   C2216 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C2215 -
               ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
                 C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
                 C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                    C152049 * C152087 +
                (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                 C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                 C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                    C152049 * C50873) *
                   C152211) *
                  C151849 * C152235 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C2215 -
               ((C52245 + C52246 + C52247) * C152049 * C152087 +
                (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                 C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                 C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                    C152049 * C50873) *
                   C2216 +
               ((C50875 * C553 + C51486 + C51486 + C50870 * C577 +
                 C50877 * C554 + C51487 + C51487 + C50871 * C578 +
                 C50879 * C556 + C51488 + C51488 + C50872 * C580) *
                    C152049 * C50873 +
                (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                 C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                 C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                    C152049 * C152087) *
                   C152211) *
                  C151849 * C152202) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C2215 -
               ((C52239 + C52240 + C52241) * C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C2216 +
               ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                 C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                 C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                    C152049 * C50873 +
                (C52887 + C52888 + C52889) * C152049 * C152087) *
                   C152211) *
                  C152255 +
              (((C52241 + C52240 + C52239) * C152049 * C50873 +
                (C52890 + C52891 + C52892) * C152049 * C152087) *
                   C2216 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C2215 -
               ((C52893 + C52894 + C52895) * C152049 * C152087 +
                (C52889 + C52888 + C52887) * C152049 * C50873) *
                   C152211) *
                  C152239 +
              (((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C52618 + C52619 + C52620) * C152049 * C152087) *
                   C2215 -
               ((C53625 + C53626 + C53627) * C152049 * C152087 +
                (C52892 + C52891 + C52890) * C152049 * C50873) *
                   C2216 +
               ((C52895 + C52894 + C52893) * C152049 * C50873 +
                (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                 C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                 C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                    C152049 * C152087) *
                   C152211) *
                  C152208) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C152049 * C50873 +
           (C51220 + C51221 + C51222) * C152049 * C152087) *
              C2446 -
          ((C52239 + C52240 + C52241) * C152049 * C152087 +
           (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
            C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
            C50870 * C574) *
               C152049 * C50873) *
              C2447 +
          ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
            C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
            C50872 * C577) *
               C152049 * C50873 +
           (C52887 + C52888 + C52889) * C152049 * C152087) *
              C2448 -
          ((C50879 * C2957 + C54186 + C54186 + C50872 * C2965 + C50877 * C2956 +
            C54187 + C54187 + C50871 * C2964 + C50875 * C2955 + C54188 +
            C54188 + C50870 * C2963) *
               C152049 * C152087 +
           (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 + C50877 * C2453 +
            C54190 + C54190 + C50871 * C2469 + C50875 * C2454 + C54191 +
            C54191 + C50870 * C2470) *
               C152049 * C50873) *
              C2449 +
          ((C50875 * C2455 + C54192 + C54192 + C50870 * C2471 + C50877 * C2456 +
            C54193 + C54193 + C50871 * C2472 + C50879 * C2457 + C54194 +
            C54194 + C50872 * C2473) *
               C152049 * C50873 +
           (C50875 * C9433 + C54195 + C54195 + C50870 * C9445 + C50877 * C9434 +
            C54196 + C54196 + C50871 * C9446 + C50879 * C18132 + C54197 +
            C54197 + C50872 * C18134) *
               C152049 * C152087) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           (C59432 * C341 + C59436 + C59436 + C151790 * C365) * C152049 *
               C59429 +
           (C59432 * C342 + C59437 + C59437 + C151790 * C366) * C152049 *
               C59430 +
           (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) * C152049 *
               C59431) *
              C151867 * C151849 * C129 -
          ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) * C152049 *
               C59431 +
           (C59432 * C343 + C59440 + C59440 + C151790 * C367) * C152049 *
               C59430 +
           (C59432 * C340 + C59441 + C59441 + C151790 * C364) * C152049 *
               C59429 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
               C59428) *
              C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
               C59428 +
           (C59432 * C339 + C59444 + C59444 + C151790 * C363) * C152049 *
               C59429 +
           (C59432 * C344 + C59445 + C59445 + C151790 * C368) * C152049 *
               C59430 +
           (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) * C152049 *
               C59431) *
              C151867 * C151849 * C131 -
          ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) * C152049 *
               C59431 +
           (C59432 * C345 + C59448 + C59448 + C151790 * C369) * C152049 *
               C59430 +
           (C59432 * C338 + C59449 + C59449 + C151790 * C362) * C152049 *
               C59429 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
               C59428) *
              C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152049 *
               C59428 +
           (C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152049 *
               C59429 +
           (C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152049 *
               C59430 +
           (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) * C152049 *
               C59431) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152255 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C152239 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C335 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C152239 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152255 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C152255 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C152239 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152256 -
           ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) * C152049 *
                C59431 +
            (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) * C152049 *
                C59430 +
            (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) * C152049 *
                C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C152241 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            (C59432 * C1534 + C59830 + C59830 + C151790 * C1558) * C152049 *
                C59429 +
            (C59432 * C1539 + C59831 + C59831 + C151790 * C1563) * C152049 *
                C59430 +
            (C59432 * C8074 + C59832 + C59832 + C151790 * C8086) * C152049 *
                C59431) *
               C152211) *
              C151849 * C335 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) * C152049 *
                C59429 +
            (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) * C152049 *
                C59430 +
            (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) * C152049 *
                C59431) *
               C152241 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C152256 -
           ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) * C152049 *
                C59431 +
            (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) * C152049 *
                C59430 +
            (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) * C152049 *
                C59429 +
            (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                C59428) *
               C152211) *
              C151849 * C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C152256 -
           ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) * C152049 *
                C59431 +
            (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) * C152049 *
                C59430 +
            (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) * C152049 *
                C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C152241 +
           ((C59432 * C553 + C59845 + C59845 + C151790 * C577) * C152049 *
                C59428 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C152049 *
                C59429 +
            (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) * C152049 *
                C59430 +
            (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152049 *
                C59431) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C1259 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C1260 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152252 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C1260 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C1259 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C1259 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C1260 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
              C151867 * C1347 -
          (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
           C59667 * C59428) *
              C151867 * C1348 +
          (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
           C60626 * C59431) *
              C151867 * C1349 -
          (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
           C59669 * C59428) *
              C151867 * C1350 +
          (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
           (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) * C152049 *
               C59431) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152256 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C152241 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152211) *
              C1259 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C152241 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C152256 -
           (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
            C60805 * C59428) *
               C152211) *
              C1260 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C152256 -
           ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) * C152049 *
                C59431 +
            C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
               C152241 +
           (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152049 *
                C59431) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C2215 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C2216 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152211) *
              C151849 * C152252 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
               C2216 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C2215 -
           ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) * C152049 *
                C59431 +
            (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) * C152049 *
                C59430 +
            (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) * C152049 *
                C59429 +
            (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                C59428) *
               C152211) *
              C151849 * C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C2215 -
           (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C2216 +
           ((C59432 * C553 + C59845 + C59845 + C151790 * C577) * C152049 *
                C59428 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C152049 *
                C59429 +
            (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) * C152049 *
                C59430 +
            (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152049 *
                C59431) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C2215 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C2216 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152211) *
              C152255 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C2216 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C2215 -
           (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
            C60805 * C59428) *
               C152211) *
              C152239 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C2215 -
           (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
            C60375 * C59428) *
               C2216 +
           (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152049 *
                C59431) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
              C2446 -
          (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
           (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
               C59428) *
              C2447 +
          ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
               C59428 +
           C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
              C2448 -
          ((C59432 * C10173 + C61665 + C61665 + C151790 * C10177) * C152049 *
               C59431 +
           (C59432 * C9432 + C61666 + C61666 + C151790 * C9444) * C152049 *
               C59430 +
           (C59432 * C2955 + C61667 + C61667 + C151790 * C2963) * C152049 *
               C59429 +
           (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) * C152049 *
               C59428) *
              C2449 +
          ((C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C152049 *
               C59428 +
           (C59432 * C9433 + C61670 + C61670 + C151790 * C9445) * C152049 *
               C59429 +
           (C59432 * C9435 + C61671 + C61671 + C151790 * C9447) * C152049 *
               C59430 +
           (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C152049 *
               C59431) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
            (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
               C50873 +
           (C59655 * C14751 + C60367 * C14752 + C60800 * C14753) * C152087) *
              C151867 * C151849 * C129 -
          ((C61882 * C14753 + C60368 * C14752 + C59659 * C14751) * C152087 +
           ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
            (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
               C50873) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
            (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
               C50873 +
           (C59663 * C14751 + C60373 * C14752 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C14753) *
               C152087) *
              C151867 * C151849 * C131 -
          (((C59432 * C1531 + C65258 + C65258 + C151790 * C1555) * C14753 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C14752 +
            C59992 * C14751) *
               C152087 +
           ((C59432 * C554 + C65259 + C65259 + C151790 * C578) * C14753 +
            (C59432 * C547 + C60128 + C60128 + C151790 * C571) * C14752 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
               C50873) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C14751 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C14752 +
            (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C14753) *
               C50873 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C14751 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C14752 +
            (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) * C14753) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
             (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152255 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C152239 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C335 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C152239 -
           ((C65490 + C65489 + C65488) * C152087 +
            ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
             (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152255 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
             (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C152255 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C152239 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152256 -
           ((C62168 * C14753 + C60800 * C14752 + C60367 * C14751) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C152241 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C60800 * C14751 + C62168 * C14752 +
             (C59432 * C9433 + C61670 + C61670 + C151790 * C9445) * C14753) *
                C152087) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C60368 * C14751 + C61882 * C14752 + C65784 * C14753) * C152087) *
               C152241 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C152256 -
           (((C59432 * C9434 + C65742 + C65742 + C151790 * C9446) * C14753 +
             C65784 * C14752 + C61882 * C14751) *
                C152087 +
            ((C59432 * C2456 + C65743 + C65743 + C151790 * C2472) * C14753 +
             C65783 * C14752 + C65782 * C14751) *
                C50873) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C152256 -
           ((C65787 * C14753 + C65506 * C14752 + C60373 * C14751) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C152241 +
           ((C65786 * C14751 + C65788 * C14752 +
             (C59432 * C2457 + C65754 + C65754 + C151790 * C2473) * C14753) *
                C50873 +
            (C65506 * C14751 + C65787 * C14752 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C14753) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C1259 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C1260 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C152252 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C1260 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C1259 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C1259 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C1260 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            C65778 * C14752 + C65779 * C14753) *
               C50873 +
           (C65482 + C65483 + C65484) * C152087) *
              C151867 * C1347 -
          ((C65485 + C65486 + C65487) * C152087 +
           (C65484 + C65483 + C65482) * C50873) *
              C151867 * C1348 +
          ((C65487 + C65486 + C65485) * C50873 +
           (C66843 + C66844 + C66845) * C152087) *
              C151867 * C1349 -
          ((C66846 + C66847 + C66848) * C152087 +
           (C66845 + C66844 + C66843) * C50873) *
              C151867 * C1350 +
          ((C66848 + C66847 + C66846) * C50873 +
           (C60624 * C14751 + C61286 * C14752 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C14753) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152256 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C152241 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152211) *
              C1259 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C152241 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C152256 -
           ((C67085 + C67076 + C67077) * C152087 +
            (C67084 + C67068 + C67067) * C50873) *
               C152211) *
              C1260 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C152256 -
           ((C62166 * C14753 + C60802 * C14752 + C60365 * C14751) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C152241 +
           ((C67077 + C67076 + C67085) * C50873 +
            (C60802 * C14751 + C62166 * C14752 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C14753) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C2215 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C2216 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C66496 + C66497 + C66498) * C152087) *
               C2216 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C2215 -
           (((C59432 * C9434 + C65742 + C65742 + C151790 * C9446) * C14753 +
             C65784 * C14752 + C61882 * C14751) *
                C152087 +
            ((C59432 * C2456 + C65743 + C65743 + C151790 * C2472) * C14753 +
             C65783 * C14752 + C65782 * C14751) *
                C50873) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C2215 -
           ((C66499 + C66500 + C66501) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C2216 +
           ((C65786 * C14751 + C65788 * C14752 +
             (C59432 * C2457 + C65754 + C65754 + C151790 * C2473) * C14753) *
                C50873 +
            (C65506 * C14751 + C65787 * C14752 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C14753) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C2215 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C2216 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152211) *
              C152255 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C2216 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C2215 -
           ((C67085 + C67076 + C67077) * C152087 +
            (C67084 + C67068 + C67067) * C50873) *
               C152211) *
              C152239 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C2215 -
           ((C67775 + C67776 + C67777) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C2216 +
           ((C67077 + C67076 + C67085) * C50873 +
            (C60802 * C14751 + C62166 * C14752 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C14753) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            C65778 * C14752 + C65779 * C14753) *
               C50873 +
           (C65482 + C65483 + C65484) * C152087) *
              C2446 -
          ((C66493 + C66494 + C66495) * C152087 +
           (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
              C2447 +
          ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
           (C67067 + C67068 + C67084) * C152087) *
              C2448 -
          ((C68356 * C14753 + C67082 * C14752 + C62168 * C14751) * C152087 +
           (C68357 * C14753 + C68355 * C14752 + C65780 * C14751) * C50873) *
              C2449 +
          ((C68355 * C14751 + C68357 * C14752 +
            (C59432 * C17806 + C68347 + C68347 + C151790 * C17814) * C14753) *
               C50873 +
           (C67082 * C14751 + C68356 * C14752 +
            (C59432 * C68335 + C68348 + C68348 + C151790 * C68337) * C14753) *
               C152087) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C152167 -
               ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
                 C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
                 C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                    C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C151954) *
                  C151849 * C739 +
              (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                 C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                 C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                    C152049 * C50873 +
                (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
                 C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
                 C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                    C152049 * C152087) *
                   C151954 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C152167) *
                  C151849 * C740 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C152167 -
               ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
                 C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
                 C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                    C152049 * C152087 +
                (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                 C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                 C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                    C152049 * C50873) *
                   C151954) *
                  C151849 * C741 +
              (((C50875 * C547 + C51898 + C51898 + C50870 * C571 +
                 C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                 C50879 * C557 + C51900 + C51900 + C50872 * C581) *
                    C152049 * C50873 +
                (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                 C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                 C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                    C152049 * C152087) *
                   C151954 -
               ((C51703 + C51702 + C51701) * C152049 * C152087 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C152049 * C50873) *
                   C152167) *
                  C151849 * C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C152049 * C50873 +
                 (C51220 + C51221 + C51222) * C152049 * C152087) *
                    C152167 -
                ((C52239 + C52240 + C52241) * C152049 * C152087 +
                 (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                  C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                  C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                     C152049 * C50873) *
                    C151954) *
                   C1259 +
               (((C52241 + C52240 + C52239) * C152049 * C50873 +
                 (C52890 + C52891 + C52892) * C152049 * C152087) *
                    C151954 -
                ((C51223 + C51224 + C51225) * C152049 * C152087 +
                 (C51222 + C51221 + C51220) * C152049 * C50873) *
                    C152167) *
                   C1260 +
               (((C51225 + C51224 + C51223) * C152049 * C50873 +
                 (C52618 + C52619 + C52620) * C152049 * C152087) *
                    C152167 -
                ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
                  C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
                  C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                     C152049 * C152087 +
                 (C52892 + C52891 + C52890) * C152049 * C50873) *
                    C151954) *
                   C152208) *
                  C152152 +
              ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                  C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                  C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                     C152049 * C50873 +
                 (C52242 + C52243 + C52244) * C152049 * C152087) *
                    C151954 -
                ((C51228 + C51227 + C51226) * C152049 * C152087 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C152049 * C50873) *
                    C152167) *
                   C1259 +
               (((C51226 + C51227 + C51228) * C152049 * C50873 +
                 (C51229 + C51230 + C51231) * C152049 * C152087) *
                    C152167 -
                ((C53413 + C53414 + C53415) * C152049 * C152087 +
                 (C52244 + C52243 + C52242) * C152049 * C50873) *
                    C151954) *
                   C1260 +
               (((C53415 + C53414 + C53413) * C152049 * C50873 +
                 (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                  C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                  C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                     C152049 * C152087) *
                    C151954 -
                ((C53105 + C53106 + C53107) * C152049 * C152087 +
                 (C51231 + C51230 + C51229) * C152049 * C50873) *
                    C152167) *
                   C152208) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C2814 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C2815 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C2816 -
           ((C50879 * C2957 + C54186 + C54186 + C50872 * C2965 +
             C50877 * C2956 + C54187 + C54187 + C50871 * C2964 +
             C50875 * C2955 + C54188 + C54188 + C50870 * C2963) *
                C152049 * C152087 +
            (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                C152049 * C50873) *
               C152224) *
              C151849 * C152152 +
          (((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 + C51470 +
             C50872 * C571) *
                C152049 * C50873 +
            (C52242 + C52243 + C52244) * C152049 * C152087) *
               C2815 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C2814 -
           ((C54503 + C54504 + C54505) * C152049 * C152087 +
            (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
             C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 + C51479 +
             C50870 * C576) *
                C152049 * C50873) *
               C2816 +
           ((C50875 * C2453 + C54700 + C54700 + C50870 * C2469 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50879 * C2451 + C54702 + C54702 + C50872 * C2467) *
                C152049 * C50873 +
            (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
             C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
             C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                C152049 * C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152167 -
           ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) * C152049 *
                C59431 +
            (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) * C152049 *
                C59430 +
            (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) * C152049 *
                C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C151849 * C739 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) * C152049 *
                C59429 +
            (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) * C152049 *
                C59430 +
            (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) * C152049 *
                C59431) *
               C151954 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C152167) *
              C151849 * C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C152167 -
           ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) * C152049 *
                C59431 +
            (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) * C152049 *
                C59430 +
            (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) * C152049 *
                C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C151954) *
              C151849 * C741 +
          (((C59432 * C547 + C60128 + C60128 + C151790 * C571) * C152049 *
                C59428 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C152049 *
                C59429 +
            (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152049 *
                C59430 +
            (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152049 *
                C59431) *
               C151954 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C152167 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C1259 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C152167) *
               C1260 +
           ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
             C60626 * C59431) *
                C152167 -
            ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) * C152049 *
                 C59431 +
             C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
                C151954) *
               C152208) *
              C152152 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C152167) *
               C1259 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C152167 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C1260 +
           ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152049 *
                 C59431) *
                C151954 -
            (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
             C59672 * C59428) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C2814 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C2815 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C2816 -
           ((C59432 * C10173 + C61665 + C61665 + C151790 * C10177) * C152049 *
                C59431 +
            (C59432 * C9432 + C61666 + C61666 + C151790 * C9444) * C152049 *
                C59430 +
            (C59432 * C2955 + C61667 + C61667 + C151790 * C2963) * C152049 *
                C59429 +
            (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) * C152049 *
                C59428) *
               C152224) *
              C151849 * C152152 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
               C2815 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C2814 -
           (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
            (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                C59428) *
               C2816 +
           ((C59432 * C2453 + C62016 + C62016 + C151790 * C2469) * C152049 *
                C59428 +
            (C59432 * C2956 + C62017 + C62017 + C151790 * C2964) * C152049 *
                C59429 +
            (C59432 * C9431 + C62018 + C62018 + C151790 * C9443) * C152049 *
                C59430 +
            (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C152049 *
                C59431) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152167 -
           ((C62168 * C14753 + C60800 * C14752 + C60367 * C14751) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C60368 * C14751 + C61882 * C14752 + C65784 * C14753) * C152087) *
               C151954 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C152167 -
           ((C65787 * C14753 + C65506 * C14752 + C60373 * C14751) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C14751 + C66202 * C14752 +
             (C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C14753) *
                C50873 +
            (C65993 * C14751 + C65994 * C14752 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C14753) *
                C152087) *
               C151954 -
           ((C65996 + C65995 + C65983) * C152087 +
            (C66202 * C14753 + C66201 * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C152167 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C1259 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C152167) *
               C1260 +
           (((C65487 + C65486 + C65485) * C50873 +
             (C66843 + C66844 + C66845) * C152087) *
                C152167 -
            ((C62166 * C14753 + C60802 * C14752 + C60365 * C14751) * C152087 +
             (C67073 + C67072 + C67071) * C50873) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C152167) *
               C1259 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C152167 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C1260 +
           (((C67576 + C67575 + C67580) * C50873 +
             (C60370 * C14751 + C61880 * C14752 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C14753) *
                 C152087) *
                C151954 -
            ((C67280 + C67281 + C67282) * C152087 +
             (C65493 + C65492 + C65491) * C50873) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C2814 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C2815 +
           ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C2816 -
           ((C68356 * C14753 + C67082 * C14752 + C62168 * C14751) * C152087 +
            (C68357 * C14753 + C68355 * C14752 + C65780 * C14751) * C50873) *
               C152224) *
              C151849 * C152152 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C66496 + C66497 + C66498) * C152087) *
               C2815 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C2814 -
           ((C68656 + C68650 + C68651) * C152087 +
            (C68857 * C14753 + C65783 * C14752 + C65782 * C14751) * C50873) *
               C2816 +
           ((C65783 * C14751 + C68857 * C14752 +
             (C59432 * C17804 + C68853 + C68853 + C151790 * C17812) * C14753) *
                C50873 +
            (C65784 * C14751 + C68655 * C14752 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C14753) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C152049 * C50873 +
           (C50875 * C341 + C50885 + C50885 + C50870 * C365 + C50877 * C340 +
            C50886 + C50886 + C50871 * C364 + C50879 * C339 + C50887 + C50887 +
            C50872 * C363) *
               C152049 * C152087) *
              C151867 * C151849 * C129 -
          ((C50879 * C338 + C50888 + C50888 + C50872 * C362 + C50877 * C339 +
            C50889 + C50889 + C50871 * C363 + C50875 * C340 + C50890 + C50890 +
            C50870 * C364) *
               C152049 * C152087 +
           (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
            C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
            C50870 * C159) *
               C152049 * C50873) *
              C151867 * C151849 * C130 +
          ((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
            C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
            C50872 * C162) *
               C152049 * C50873 +
           (C50875 * C339 + C50897 + C50897 + C50870 * C363 + C50877 * C338 +
            C50898 + C50898 + C50871 * C362 + C50879 * C346 + C50899 + C50899 +
            C50872 * C370) *
               C152049 * C152087) *
              C151867 * C151849 * C131 -
          ((C50879 * C348 + C50900 + C50900 + C50872 * C372 + C50877 * C346 +
            C50901 + C50901 + C50871 * C370 + C50875 * C338 + C50902 + C50902 +
            C50870 * C362) *
               C152049 * C152087 +
           (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
            C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
            C50870 * C161) *
               C152049 * C50873) *
              C151867 * C151849 * C132 +
          ((C50875 * C146 + C50906 + C50906 + C50870 * C162 + C50877 * C147 +
            C50907 + C50907 + C50871 * C163 + C50879 * C148 + C50908 + C50908 +
            C50872 * C164) *
               C152049 * C50873 +
           (C50875 * C346 + C50909 + C50909 + C50870 * C370 + C50877 * C348 +
            C50910 + C50910 + C50871 * C372 + C50879 * C743 + C50911 + C50911 +
            C50872 * C745) *
               C152049 * C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C152255 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C152239 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
             C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
             C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                C152049 * C152087) *
               C151867 * C152208) *
              C335 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C152239 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C152255 -
           ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
             C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
             C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C152208) *
              C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C152255 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C152239 +
           ((C51237 + C51236 + C51235) * C152049 * C50873 +
            (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
             C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
             C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C1259 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
             C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
             C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C1260 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C1259 -
           ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
             C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
             C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C1259 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C152049 * C50873 +
            (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
             C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
             C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C152049 * C50873 +
           (C51220 + C51221 + C51222) * C152049 * C152087) *
              C151867 * C1347 -
          ((C51223 + C51224 + C51225) * C152049 * C152087 +
           (C51222 + C51221 + C51220) * C152049 * C50873) *
              C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C152049 * C50873 +
           (C52618 + C52619 + C52620) * C152049 * C152087) *
              C151867 * C1349 -
          ((C52621 + C52622 + C52623) * C152049 * C152087 +
           (C52620 + C52619 + C52618) * C152049 * C50873) *
              C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C152049 * C50873 +
           (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 + C50877 * C7815 +
            C52604 + C52604 + C50871 * C7823 + C50879 * C8335 + C52605 +
            C52605 + C50872 * C8337) *
               C152049 * C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C2215 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C2216 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C152211) *
              C151849 * C152252 +
          (((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 + C51470 +
             C50872 * C571) *
                C152049 * C50873 +
            (C52242 + C52243 + C52244) * C152049 * C152087) *
               C2216 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C2215 -
           ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
             C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
             C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                C152049 * C152087 +
            (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
             C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 + C51479 +
             C50870 * C576) *
                C152049 * C50873) *
               C152211) *
              C151849 * C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C2215 -
           ((C52245 + C52246 + C52247) * C152049 * C152087 +
            (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 + C51485 +
             C50870 * C572) *
                C152049 * C50873) *
               C2216 +
           ((C50875 * C553 + C51486 + C51486 + C50870 * C577 + C50877 * C554 +
             C51487 + C51487 + C50871 * C578 + C50879 * C556 + C51488 + C51488 +
             C50872 * C580) *
                C152049 * C50873 +
            (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
             C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
             C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                C152049 * C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C2215 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C2216 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C152211) *
              C152255 +
          (((C52241 + C52240 + C52239) * C152049 * C50873 +
            (C52890 + C52891 + C52892) * C152049 * C152087) *
               C2216 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C2215 -
           ((C52893 + C52894 + C52895) * C152049 * C152087 +
            (C52889 + C52888 + C52887) * C152049 * C50873) *
               C152211) *
              C152239 +
          (((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C2215 -
           ((C53625 + C53626 + C53627) * C152049 * C152087 +
            (C52892 + C52891 + C52890) * C152049 * C50873) *
               C2216 +
           ((C52895 + C52894 + C52893) * C152049 * C50873 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152049 * C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           (C59432 * C341 + C59436 + C59436 + C151790 * C365) * C152049 *
               C59429 +
           (C59432 * C342 + C59437 + C59437 + C151790 * C366) * C152049 *
               C59430 +
           (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) * C152049 *
               C59431) *
              C151867 * C151849 * C129 -
          ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) * C152049 *
               C59431 +
           (C59432 * C343 + C59440 + C59440 + C151790 * C367) * C152049 *
               C59430 +
           (C59432 * C340 + C59441 + C59441 + C151790 * C364) * C152049 *
               C59429 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
               C59428) *
              C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
               C59428 +
           (C59432 * C339 + C59444 + C59444 + C151790 * C363) * C152049 *
               C59429 +
           (C59432 * C344 + C59445 + C59445 + C151790 * C368) * C152049 *
               C59430 +
           (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) * C152049 *
               C59431) *
              C151867 * C151849 * C131 -
          ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) * C152049 *
               C59431 +
           (C59432 * C345 + C59448 + C59448 + C151790 * C369) * C152049 *
               C59430 +
           (C59432 * C338 + C59449 + C59449 + C151790 * C362) * C152049 *
               C59429 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
               C59428) *
              C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152049 *
               C59428 +
           (C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152049 *
               C59429 +
           (C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152049 *
               C59430 +
           (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) * C152049 *
               C59431) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152255 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C152239 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C335 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C152239 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152255 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C152255 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C152239 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C1259 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C1260 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152252 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C1260 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C1259 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C1259 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C1260 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
              C151867 * C1347 -
          (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
           C59667 * C59428) *
              C151867 * C1348 +
          (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
           C60626 * C59431) *
              C151867 * C1349 -
          (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
           C59669 * C59428) *
              C151867 * C1350 +
          (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
           (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) * C152049 *
               C59431) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C2215 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C2216 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152211) *
              C151849 * C152252 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
               C2216 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C2215 -
           ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) * C152049 *
                C59431 +
            (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) * C152049 *
                C59430 +
            (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) * C152049 *
                C59429 +
            (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                C59428) *
               C152211) *
              C151849 * C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C2215 -
           (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C2216 +
           ((C59432 * C553 + C59845 + C59845 + C151790 * C577) * C152049 *
                C59428 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C152049 *
                C59429 +
            (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) * C152049 *
                C59430 +
            (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152049 *
                C59431) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C2215 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C2216 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152211) *
              C152255 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C2216 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C2215 -
           (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
            C60805 * C59428) *
               C152211) *
              C152239 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C2215 -
           (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
            C60375 * C59428) *
               C2216 +
           (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152049 *
                C59431) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
            (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
               C50873 +
           (C59655 * C14751 + C60367 * C14752 + C60800 * C14753) * C152087) *
              C151867 * C151849 * C129 -
          ((C61882 * C14753 + C60368 * C14752 + C59659 * C14751) * C152087 +
           ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
            (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
               C50873) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
            (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
               C50873 +
           (C59663 * C14751 + C60373 * C14752 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C14753) *
               C152087) *
              C151867 * C151849 * C131 -
          (((C59432 * C1531 + C65258 + C65258 + C151790 * C1555) * C14753 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C14752 +
            C59992 * C14751) *
               C152087 +
           ((C59432 * C554 + C65259 + C65259 + C151790 * C578) * C14753 +
            (C59432 * C547 + C60128 + C60128 + C151790 * C571) * C14752 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
               C50873) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C14751 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C14752 +
            (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C14753) *
               C50873 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C14751 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C14752 +
            (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) * C14753) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
             (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152255 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C152239 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C335 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C152239 -
           ((C65490 + C65489 + C65488) * C152087 +
            ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
             (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152255 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
             (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C152255 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C152239 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C1259 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C1260 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C152252 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C1260 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C1259 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C1259 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C1260 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            C65778 * C14752 + C65779 * C14753) *
               C50873 +
           (C65482 + C65483 + C65484) * C152087) *
              C151867 * C1347 -
          ((C65485 + C65486 + C65487) * C152087 +
           (C65484 + C65483 + C65482) * C50873) *
              C151867 * C1348 +
          ((C65487 + C65486 + C65485) * C50873 +
           (C66843 + C66844 + C66845) * C152087) *
              C151867 * C1349 -
          ((C66846 + C66847 + C66848) * C152087 +
           (C66845 + C66844 + C66843) * C50873) *
              C151867 * C1350 +
          ((C66848 + C66847 + C66846) * C50873 +
           (C60624 * C14751 + C61286 * C14752 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C14753) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C2215 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C2216 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C66496 + C66497 + C66498) * C152087) *
               C2216 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C2215 -
           (((C59432 * C9434 + C65742 + C65742 + C151790 * C9446) * C14753 +
             C65784 * C14752 + C61882 * C14751) *
                C152087 +
            ((C59432 * C2456 + C65743 + C65743 + C151790 * C2472) * C14753 +
             C65783 * C14752 + C65782 * C14751) *
                C50873) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C2215 -
           ((C66499 + C66500 + C66501) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C2216 +
           ((C65786 * C14751 + C65788 * C14752 +
             (C59432 * C2457 + C65754 + C65754 + C151790 * C2473) * C14753) *
                C50873 +
            (C65506 * C14751 + C65787 * C14752 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C14753) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C2215 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C2216 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152211) *
              C152255 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C2216 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C2215 -
           ((C67085 + C67076 + C67077) * C152087 +
            (C67084 + C67068 + C67067) * C50873) *
               C152211) *
              C152239 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C2215 -
           ((C67775 + C67776 + C67777) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C2216 +
           ((C67077 + C67076 + C67085) * C50873 +
            (C60802 * C14751 + C62166 * C14752 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C14753) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C4107 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C152166 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C4107) *
               C151912) *
              C151826 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C4107) *
               C152166 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C4107 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C151912) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                 C59428 +
             C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                C4107 -
            (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                 C59428) *
                C151954) *
               C152166 +
           ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152049 *
                 C59431) *
                C151954 -
            (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
             C59675 * C59428) *
                C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C4107 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C152166 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C4107) *
               C151912) *
              C151826 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C4107) *
               C152166 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C4107 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C151912) *
              C151835 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C152049 * C50873 +
             (C51232 + C51233 + C51234) * C152049 * C152087) *
                C4107 -
            ((C52245 + C52246 + C52247) * C152049 * C152087 +
             (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
              C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 +
              C51485 + C50870 * C572) *
                 C152049 * C50873) *
                C151954) *
               C152166 +
           (((C52247 + C52246 + C52245) * C152049 * C50873 +
             (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
              C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
              C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                 C152049 * C152087) *
                C151954 -
            ((C51235 + C51236 + C51237) * C152049 * C152087 +
             (C51234 + C51233 + C51232) * C152049 * C50873) *
                C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C4107 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C152166 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C4107) *
               C151912) *
              C151826 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C4107) *
               C152166 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C4107 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
              C65785 * C14752 + C65786 * C14753) *
                 C50873 +
             (C65494 + C65495 + C65508) * C152087) *
                C4107 -
            ((C66499 + C66500 + C66501) * C152087 +
             (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
                C151954) *
               C152166 +
           (((C66501 + C66500 + C66499) * C50873 +
             (C60372 * C14751 + C65507 * C14752 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C14753) *
                 C152087) *
                C151954 -
            ((C65509 + C65500 + C65501) * C152087 +
             (C65508 + C65495 + C65494) * C50873) *
                C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C151950 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151957 +
            ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                 C59428 +
             C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                C4779) *
               C152166 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151957 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C151950 -
            (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
             C60805 * C59428) *
                C4779) *
               C151912) *
              C3241 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151957 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C151950 -
            (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
             (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                 C59428) *
                C4779) *
               C152166 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C151950 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151957 +
            (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152049 *
                 C59431) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C151950 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151957 +
            ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
              C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 +
              C51464 + C50872 * C577) *
                 C152049 * C50873 +
             (C52887 + C52888 + C52889) * C152049 * C152087) *
                C4779) *
               C152166 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151957 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C151950 -
            ((C52893 + C52894 + C52895) * C152049 * C152087 +
             (C52889 + C52888 + C52887) * C152049 * C50873) *
                C4779) *
               C151912) *
              C3241 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151957 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C151950 -
            ((C54503 + C54504 + C54505) * C152049 * C152087 +
             (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
              C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 +
              C51479 + C50870 * C576) *
                 C152049 * C50873) *
                C4779) *
               C152166 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C151950 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151957 +
            ((C54505 + C54504 + C54503) * C152049 * C50873 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152049 * C152087) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C151950 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151957 +
            ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
             (C67067 + C67068 + C67084) * C152087) *
                C4779) *
               C152166 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151957 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C151950 -
            ((C67085 + C67076 + C67077) * C152087 +
             (C67084 + C67068 + C67067) * C50873) *
                C4779) *
               C151912) *
              C3241 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151957 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C151950 -
            ((C68656 + C68650 + C68651) * C152087 +
             (C68857 * C14753 + C65783 * C14752 + C65782 * C14751) * C50873) *
                C4779) *
               C152166 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C151950 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151957 +
            ((C68651 + C68650 + C68656) * C50873 +
             (C61881 * C14751 + C67579 * C14752 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C14753) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C4107 -
               ((C52239 + C52240 + C52241) * C152049 * C152087 +
                (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                    C152049 * C50873) *
                   C151954) *
                  C151849 * C152261 +
              (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                 C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                 C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                    C152049 * C50873 +
                (C52242 + C52243 + C52244) * C152049 * C152087) *
                   C151954 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C4107) *
                  C151849 * C152254 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C4107 -
               ((C52245 + C52246 + C52247) * C152049 * C152087 +
                (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                 C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                 C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                    C152049 * C50873) *
                   C151954) *
                  C151849 * C152237 +
              (((C50875 * C547 + C51898 + C51898 + C50870 * C571 +
                 C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                 C50879 * C557 + C51900 + C51900 + C50872 * C581) *
                    C152049 * C50873 +
                (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                 C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                 C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                    C152049 * C152087) *
                   C151954 -
               ((C51703 + C51702 + C51701) * C152049 * C152087 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C152049 * C50873) *
                   C4107) *
                  C151849 * C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C152049 * C50873 +
                 (C51220 + C51221 + C51222) * C152049 * C152087) *
                    C4107 -
                ((C52239 + C52240 + C52241) * C152049 * C152087 +
                 (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                  C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                  C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                     C152049 * C50873) *
                    C151954) *
                   C152255 +
               (((C52241 + C52240 + C52239) * C152049 * C50873 +
                 (C52890 + C52891 + C52892) * C152049 * C152087) *
                    C151954 -
                ((C51223 + C51224 + C51225) * C152049 * C152087 +
                 (C51222 + C51221 + C51220) * C152049 * C50873) *
                    C4107) *
                   C152239 +
               (((C51225 + C51224 + C51223) * C152049 * C50873 +
                 (C52618 + C52619 + C52620) * C152049 * C152087) *
                    C4107 -
                ((C53625 + C53626 + C53627) * C152049 * C152087 +
                 (C52892 + C52891 + C52890) * C152049 * C50873) *
                    C151954) *
                   C152208) *
                  C3241 +
              ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                  C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                  C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                     C152049 * C50873 +
                 (C52242 + C52243 + C52244) * C152049 * C152087) *
                    C151954 -
                ((C51228 + C51227 + C51226) * C152049 * C152087 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C152049 * C50873) *
                    C4107) *
                   C152255 +
               (((C51226 + C51227 + C51228) * C152049 * C50873 +
                 (C51229 + C51230 + C51231) * C152049 * C152087) *
                    C4107 -
                ((C53413 + C53414 + C53415) * C152049 * C152087 +
                 (C52244 + C52243 + C52242) * C152049 * C50873) *
                    C151954) *
                   C152239 +
               (((C53415 + C53414 + C53413) * C152049 * C50873 +
                 (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                  C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                  C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                     C152049 * C152087) *
                    C151954 -
                ((C53105 + C53106 + C53107) * C152049 * C152087 +
                 (C51231 + C51230 + C51229) * C152049 * C50873) *
                    C4107) *
                   C152208) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C152263 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C152260 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C152247 -
           ((C54915 + C54916 + C54917) * C152049 * C152087 +
            (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                C152049 * C50873) *
               C152224) *
              C151849 * C3241 +
          (((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 + C51470 +
             C50872 * C571) *
                C152049 * C50873 +
            (C52242 + C52243 + C52244) * C152049 * C152087) *
               C152260 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C152263 -
           ((C54503 + C54504 + C54505) * C152049 * C152087 +
            (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
             C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 + C51479 +
             C50870 * C576) *
                C152049 * C50873) *
               C152247 +
           ((C50875 * C2453 + C54700 + C54700 + C50870 * C2469 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50879 * C2451 + C54702 + C54702 + C50872 * C2467) *
                C152049 * C50873 +
            (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
             C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
             C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                C152049 * C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C4107 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C151849 * C152261 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
               C151954 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C4107) *
              C151849 * C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C4107 -
           (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C151954) *
              C151849 * C152237 +
          (((C59432 * C547 + C60128 + C60128 + C151790 * C571) * C152049 *
                C59428 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C152049 *
                C59429 +
            (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152049 *
                C59430 +
            (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152049 *
                C59431) *
               C151954 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C4107 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C152255 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C4107) *
               C152239 +
           ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
             C60626 * C59431) *
                C4107 -
            (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
             C60375 * C59428) *
                C151954) *
               C152208) *
              C3241 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C4107) *
               C152255 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C4107 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C152239 +
           ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152049 *
                 C59431) *
                C151954 -
            (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
             C59672 * C59428) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152263 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C152260 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152247 -
           (C62169 * C59431 + C62170 * C59430 + C62171 * C59429 +
            (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) * C152049 *
                C59428) *
               C152224) *
              C151849 * C3241 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
               C152260 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C152263 -
           (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
            (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                C59428) *
               C152247 +
           ((C59432 * C2453 + C62016 + C62016 + C151790 * C2469) * C152049 *
                C59428 +
            (C59432 * C2956 + C62017 + C62017 + C151790 * C2964) * C152049 *
                C59429 +
            (C59432 * C9431 + C62018 + C62018 + C151790 * C9443) * C152049 *
                C59430 +
            (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C152049 *
                C59431) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C4107 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C66496 + C66497 + C66498) * C152087) *
               C151954 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C4107 -
           ((C66499 + C66500 + C66501) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C14751 + C66202 * C14752 +
             (C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C14753) *
                C50873 +
            (C65993 * C14751 + C65994 * C14752 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C14753) *
                C152087) *
               C151954 -
           ((C65996 + C65995 + C65983) * C152087 +
            (C66202 * C14753 + C66201 * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C4107 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C152255 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C4107) *
               C152239 +
           (((C65487 + C65486 + C65485) * C50873 +
             (C66843 + C66844 + C66845) * C152087) *
                C4107 -
            ((C67775 + C67776 + C67777) * C152087 +
             (C67073 + C67072 + C67071) * C50873) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C4107) *
               C152255 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C4107 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C152239 +
           (((C67576 + C67575 + C67580) * C50873 +
             (C60370 * C14751 + C61880 * C14752 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C14753) *
                 C152087) *
                C151954 -
            ((C67280 + C67281 + C67282) * C152087 +
             (C65493 + C65492 + C65491) * C50873) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152263 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C152260 +
           ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152247 -
           ((C69055 + C69056 + C69057) * C152087 +
            (C68357 * C14753 + C68355 * C14752 + C65780 * C14751) * C50873) *
               C152224) *
              C151849 * C3241 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C66496 + C66497 + C66498) * C152087) *
               C152260 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C152263 -
           ((C68656 + C68650 + C68651) * C152087 +
            (C68857 * C14753 + C65783 * C14752 + C65782 * C14751) * C50873) *
               C152247 +
           ((C65783 * C14751 + C68857 * C14752 +
             (C59432 * C17804 + C68853 + C68853 + C151790 * C17812) * C14753) *
                C50873 +
            (C65784 * C14751 + C68655 * C14752 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C14753) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151950 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151957 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C4779) *
              C151849 * C151826 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
               C151957 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151950 -
           (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
            (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                C59428) *
               C4779) *
              C151849 * C151835 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151950 -
           (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C151957 +
           ((C59432 * C553 + C59845 + C59845 + C151790 * C577) * C152049 *
                C59428 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C152049 *
                C59429 +
            (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) * C152049 *
                C59430 +
            (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152049 *
                C59431) *
               C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151950 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C151957 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C4779) *
              C151849 * C151826 +
          (((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 + C51470 +
             C50872 * C571) *
                C152049 * C50873 +
            (C52242 + C52243 + C52244) * C152049 * C152087) *
               C151957 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151950 -
           ((C54503 + C54504 + C54505) * C152049 * C152087 +
            (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
             C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 + C51479 +
             C50870 * C576) *
                C152049 * C50873) *
               C4779) *
              C151849 * C151835 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151950 -
           ((C52245 + C52246 + C52247) * C152049 * C152087 +
            (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 + C51485 +
             C50870 * C572) *
                C152049 * C50873) *
               C151957 +
           ((C50875 * C553 + C51486 + C51486 + C50870 * C577 + C50877 * C554 +
             C51487 + C51487 + C50871 * C578 + C50879 * C556 + C51488 + C51488 +
             C50872 * C580) *
                C152049 * C50873 +
            (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
             C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
             C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                C152049 * C152087) *
               C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151950 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151957 +
           ((C65779 * C14751 + C65780 * C14752 + C68355 * C14753) * C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C4779) *
              C151849 * C151826 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C66496 + C66497 + C66498) * C152087) *
               C151957 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151950 -
           ((C68656 + C68650 + C68651) * C152087 +
            (C68857 * C14753 + C65783 * C14752 + C65782 * C14751) * C50873) *
               C4779) *
              C151849 * C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151950 -
           ((C66499 + C66500 + C66501) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C151957 +
           ((C65786 * C14751 + C65788 * C14752 +
             (C59432 * C2457 + C65754 + C65754 + C151790 * C2473) * C14753) *
                C50873 +
            (C65506 * C14751 + C65787 * C14752 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C14753) *
                C152087) *
               C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C4107 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C152255 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C4107) *
               C152239 +
           (((C51225 + C51224 + C51223) * C152049 * C50873 +
             (C52618 + C52619 + C52620) * C152049 * C152087) *
                C4107 -
            ((C53625 + C53626 + C53627) * C152049 * C152087 +
             (C52892 + C52891 + C52890) * C152049 * C50873) *
                C151954) *
               C152208) *
              C3241 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C4107) *
               C152255 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C4107 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C152239 +
           (((C53415 + C53414 + C53413) * C152049 * C50873 +
             (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
              C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
              C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                 C152049 * C152087) *
                C151954 -
            ((C53105 + C53106 + C53107) * C152049 * C152087 +
             (C51231 + C51230 + C51229) * C152049 * C50873) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C4107 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C151954) *
              C151849 * C152261 +
          (((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 + C51470 +
             C50872 * C571) *
                C152049 * C50873 +
            (C52242 + C52243 + C52244) * C152049 * C152087) *
               C151954 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C4107) *
              C151849 * C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C4107 -
           ((C52245 + C52246 + C52247) * C152049 * C152087 +
            (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 + C51485 +
             C50870 * C572) *
                C152049 * C50873) *
               C151954) *
              C151849 * C152237 +
          (((C50875 * C547 + C51898 + C51898 + C50870 * C571 + C50877 * C555 +
             C51899 + C51899 + C50871 * C579 + C50879 * C557 + C51900 + C51900 +
             C50872 * C581) *
                C152049 * C50873 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152049 * C152087) *
               C151954 -
           ((C51703 + C51702 + C51701) * C152049 * C152087 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C152049 * C50873) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C4107 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C151849 * C152261 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
               C151954 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C4107) *
              C151849 * C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C4107 -
           (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C151954) *
              C151849 * C152237 +
          (((C59432 * C547 + C60128 + C60128 + C151790 * C571) * C152049 *
                C59428 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C152049 *
                C59429 +
            (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152049 *
                C59430 +
            (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152049 *
                C59431) *
               C151954 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C4107 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C152255 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C4107) *
               C152239 +
           ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
             C60626 * C59431) *
                C4107 -
            (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
             C60375 * C59428) *
                C151954) *
               C152208) *
              C3241 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C4107) *
               C152255 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C4107 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C152239 +
           ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152049 *
                 C59431) *
                C151954 -
            (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
             C59672 * C59428) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C4107 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C66496 + C66497 + C66498) * C152087) *
               C151954 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C4107 -
           ((C66499 + C66500 + C66501) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C14751 + C66202 * C14752 +
             (C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C14753) *
                C50873 +
            (C65993 * C14751 + C65994 * C14752 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C14753) *
                C152087) *
               C151954 -
           ((C65996 + C65995 + C65983) * C152087 +
            (C66202 * C14753 + C66201 * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C4107 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C152255 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C4107) *
               C152239 +
           (((C65487 + C65486 + C65485) * C50873 +
             (C66843 + C66844 + C66845) * C152087) *
                C4107 -
            ((C67775 + C67776 + C67777) * C152087 +
             (C67073 + C67072 + C67071) * C50873) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C4107) *
               C152255 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C4107 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C152239 +
           (((C67576 + C67575 + C67580) * C50873 +
             (C60370 * C14751 + C61880 * C14752 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C14753) *
                 C152087) *
                C151954 -
            ((C67280 + C67281 + C67282) * C152087 +
             (C65493 + C65492 + C65491) * C50873) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C1709 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C1710 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C151867 * C1711 -
           ((C52621 + C52622 + C52623) * C152049 * C152087 +
            (C52620 + C52619 + C52618) * C152049 * C50873) *
               C151867 * C152218) *
              C152152 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C1710 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C1709 -
           ((C53105 + C53106 + C53107) * C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C1711 +
           ((C53107 + C53106 + C53105) * C152049 * C50873 +
            (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
             C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
             C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                C152049 * C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C152166 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C151912) *
              C739 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C151912 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C152166) *
              C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C152166 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C151912) *
              C741 +
          (((C51701 + C51702 + C51703) * C152049 * C50873 +
            (C50875 * C345 + C51692 + C51692 + C50870 * C369 + C50877 * C347 +
             C51693 + C51693 + C50871 * C371 + C50879 * C349 + C51694 + C51694 +
             C50872 * C373) *
                C152049 * C152087) *
               C151867 * C151912 -
           ((C51703 + C51702 + C51701) * C152049 * C152087 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C152049 * C50873) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152166 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C151912) *
              C739 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C151912 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152166) *
              C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C152166 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C151912) *
              C741 +
          ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
            (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) * C152049 *
                C59431) *
               C151867 * C151912 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C1709 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C1710 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C151867 * C1711 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C151867 * C152218) *
              C152152 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C1710 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C1709 -
           (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
            C59672 * C59428) *
               C151867 * C1711 +
           (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
            (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) * C152049 *
                C59431) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152166 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C151912) *
              C739 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C151912 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C152166 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C151912) *
              C741 +
          (((C65983 + C65995 + C65996) * C50873 +
            (C59993 * C14751 +
             (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C14752 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C14753) *
                C152087) *
               C151867 * C151912 -
           ((C65996 + C65995 + C65983) * C152087 +
            ((C59432 * C554 + C65259 + C65259 + C151790 * C578) * C14753 +
             (C59432 * C547 + C60128 + C60128 + C151790 * C571) * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C1709 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C1710 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C151867 * C1711 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C151867 * C152218) *
              C152152 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C1710 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C1709 -
           ((C67280 + C67281 + C67282) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C1711 +
           ((C67282 + C67281 + C67280) * C50873 +
            (C59662 * C14751 + C61146 * C14752 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C14753) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C152167 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C151954) *
              C1709 +
          (((C52241 + C52240 + C52239) * C152049 * C50873 +
            (C52890 + C52891 + C52892) * C152049 * C152087) *
               C151954 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C152167) *
              C1710 +
          (((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C152167 -
           ((C53625 + C53626 + C53627) * C152049 * C152087 +
            (C52892 + C52891 + C52890) * C152049 * C50873) *
               C151954) *
              C1711 +
          (((C53627 + C53626 + C53625) * C152049 * C50873 +
            (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
             C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
             C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                C152049 * C152087) *
               C151954 -
           ((C52621 + C52622 + C52623) * C152049 * C152087 +
            (C52620 + C52619 + C52618) * C152049 * C50873) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C152167 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C152166 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C50875 * C1538 + C52200 + C52200 + C50870 * C1562 +
              C50877 * C1537 + C52201 + C52201 + C50871 * C1561 +
              C50879 * C1536 + C52202 + C52202 + C50872 * C1560) *
                 C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C152167) *
               C151912) *
              C335 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C152167) *
               C152166 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C152167 -
            ((C50879 * C1535 + C52209 + C52209 + C50872 * C1559 +
              C50877 * C1536 + C52210 + C52210 + C50871 * C1560 +
              C50875 * C1537 + C52211 + C52211 + C50870 * C1561) *
                 C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C151912) *
              C336 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C152049 * C50873 +
             (C51232 + C51233 + C51234) * C152049 * C152087) *
                C152167 -
            ((C52245 + C52246 + C52247) * C152049 * C152087 +
             (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
              C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 +
              C51485 + C50870 * C572) *
                 C152049 * C50873) *
                C151954) *
               C152166 +
           (((C52247 + C52246 + C52245) * C152049 * C50873 +
             (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
              C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
              C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                 C152049 * C152087) *
                C151954 -
            ((C51235 + C51236 + C51237) * C152049 * C152087 +
             (C51234 + C51233 + C51232) * C152049 * C50873) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C152167 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C152166 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             (C59432 * C8076 + C60332 + C60332 + C151790 * C8088) * C152049 *
                 C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C152167) *
               C151912) *
              C335 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C152167) *
               C152166 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C152167 -
            ((C59432 * C8075 + C60339 + C60339 + C151790 * C8087) * C152049 *
                 C59431 +
             C60379 * C59430 + C60378 * C59429 + C60377 * C59428) *
                C151954) *
               C151912) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                 C59428 +
             C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                C152167 -
            (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                 C59428) *
                C151954) *
               C152166 +
           ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152049 *
                 C59431) *
                C151954 -
            (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
             C59675 * C59428) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152167 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C1709 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C151954 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C152167) *
              C1710 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C152167 -
           (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
            C60375 * C59428) *
               C151954) *
              C1711 +
          ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152049 *
                C59431) *
               C151954 -
           (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
            C59669 * C59428) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C152167 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C152166 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C60366 * C14751 + C60801 * C14752 + C62167 * C14753) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C152167) *
               C152166 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C152167 -
            (((C59432 * C9431 + C62018 + C62018 + C151790 * C9443) * C14753 +
              C61881 * C14752 + C60369 * C14751) *
                 C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
              C65785 * C14752 + C65786 * C14753) *
                 C50873 +
             (C65494 + C65495 + C65508) * C152087) *
                C152167 -
            ((C66499 + C66500 + C66501) * C152087 +
             (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
                C151954) *
               C152166 +
           (((C66501 + C66500 + C66499) * C50873 +
             (C60372 * C14751 + C65507 * C14752 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C14753) *
                 C152087) *
                C151954 -
            ((C65509 + C65500 + C65501) * C152087 +
             (C65508 + C65495 + C65494) * C50873) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152167 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C1709 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C151954 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C152167) *
              C1710 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C152167 -
           ((C67775 + C67776 + C67777) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C151954) *
              C1711 +
          (((C67777 + C67776 + C67775) * C50873 +
            (C60803 * C14751 + C60804 * C14752 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C14753) *
                C152087) *
               C151954 -
           ((C66846 + C66847 + C66848) * C152087 +
            (C66845 + C66844 + C66843) * C50873) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                   C152049 * C50873 +
               (C50875 * C341 + C50885 + C50885 + C50870 * C365 +
                C50877 * C340 + C50886 + C50886 + C50871 * C364 +
                C50879 * C339 + C50887 + C50887 + C50872 * C363) *
                   C152049 * C152087) *
                  C151867 * C151849 * C129 -
              ((C50879 * C338 + C50888 + C50888 + C50872 * C362 +
                C50877 * C339 + C50889 + C50889 + C50871 * C363 +
                C50875 * C340 + C50890 + C50890 + C50870 * C364) *
                   C152049 * C152087 +
               (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                   C152049 * C50873) *
                  C151867 * C151849 * C130 +
              ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                   C152049 * C50873 +
               (C50875 * C339 + C50897 + C50897 + C50870 * C363 +
                C50877 * C338 + C50898 + C50898 + C50871 * C362 +
                C50879 * C346 + C50899 + C50899 + C50872 * C370) *
                   C152049 * C152087) *
                  C151867 * C151849 * C131 -
              ((C50879 * C348 + C50900 + C50900 + C50872 * C372 +
                C50877 * C346 + C50901 + C50901 + C50871 * C370 +
                C50875 * C338 + C50902 + C50902 + C50870 * C362) *
                   C152049 * C152087 +
               (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                   C152049 * C50873) *
                  C151867 * C151849 * C132 +
              ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                   C152049 * C50873 +
               (C50875 * C346 + C50909 + C50909 + C50870 * C370 +
                C50877 * C348 + C50910 + C50910 + C50871 * C372 +
                C50879 * C743 + C50911 + C50911 + C50872 * C745) *
                   C152049 * C152087) *
                  C151867 * C151849 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C152049 * C50873 +
                (C51220 + C51221 + C51222) * C152049 * C152087) *
                   C151867 * C152255 -
               ((C51223 + C51224 + C51225) * C152049 * C152087 +
                (C51222 + C51221 + C51220) * C152049 * C50873) *
                   C151867 * C152239 +
               ((C51225 + C51224 + C51223) * C152049 * C50873 +
                (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                 C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                 C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                    C152049 * C152087) *
                   C151867 * C152208) *
                  C335 +
              (((C51226 + C51227 + C51228) * C152049 * C50873 +
                (C51229 + C51230 + C51231) * C152049 * C152087) *
                   C151867 * C152239 -
               ((C51228 + C51227 + C51226) * C152049 * C152087 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C152049 * C50873) *
                   C151867 * C152255 -
               ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                 C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                 C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                    C152049 * C152087 +
                (C51231 + C51230 + C51229) * C152049 * C50873) *
                   C151867 * C152208) *
                  C336 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C152049 * C50873 +
                (C51232 + C51233 + C51234) * C152049 * C152087) *
                   C151867 * C152255 -
               ((C51235 + C51236 + C51237) * C152049 * C152087 +
                (C51234 + C51233 + C51232) * C152049 * C50873) *
                   C151867 * C152239 +
               ((C51237 + C51236 + C51235) * C152049 * C50873 +
                (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                 C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                 C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                    C152049 * C152087) *
                   C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C152256 -
           ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
             C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
             C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C152241 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C50875 * C1534 + C51465 + C51465 + C50870 * C1558 +
             C50877 * C1533 + C51466 + C51466 + C50871 * C1557 +
             C50879 * C1532 + C51467 + C51467 + C50872 * C1556) *
                C152049 * C152087) *
               C152211) *
              C151849 * C335 +
          (((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 + C51470 +
             C50872 * C571) *
                C152049 * C50873 +
            (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
             C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
             C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                C152049 * C152087) *
               C152241 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C152256 -
           ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
             C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
             C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                C152049 * C152087 +
            (C50879 * C554 + C51477 + C51477 + C50872 * C578 + C50877 * C553 +
             C51478 + C51478 + C50871 * C577 + C50875 * C552 + C51479 + C51479 +
             C50870 * C576) *
                C152049 * C50873) *
               C152211) *
              C151849 * C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C152256 -
           ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
             C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
             C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                C152049 * C152087 +
            (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 + C51485 +
             C50870 * C572) *
                C152049 * C50873) *
               C152241 +
           ((C50875 * C553 + C51486 + C51486 + C50870 * C577 + C50877 * C554 +
             C51487 + C51487 + C50871 * C578 + C50879 * C556 + C51488 + C51488 +
             C50872 * C580) *
                C152049 * C50873 +
            (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
             C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
             C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                C152049 * C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C1259 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
             C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
             C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C1260 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C1259 -
           ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
             C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
             C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C1259 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C152049 * C50873 +
            (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
             C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
             C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C152049 * C50873 +
           (C51220 + C51221 + C51222) * C152049 * C152087) *
              C151867 * C1347 -
          ((C51223 + C51224 + C51225) * C152049 * C152087 +
           (C51222 + C51221 + C51220) * C152049 * C50873) *
              C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C152049 * C50873 +
           (C52618 + C52619 + C52620) * C152049 * C152087) *
              C151867 * C1349 -
          ((C52621 + C52622 + C52623) * C152049 * C152087 +
           (C52620 + C52619 + C52618) * C152049 * C50873) *
              C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C152049 * C50873 +
           (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 + C50877 * C7815 +
            C52604 + C52604 + C50871 * C7823 + C50879 * C8335 + C52605 +
            C52605 + C50872 * C8337) *
               C152049 * C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C152256 -
           ((C52239 + C52240 + C52241) * C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C152241 +
           ((C50875 * C551 + C51462 + C51462 + C50870 * C575 + C50877 * C552 +
             C51463 + C51463 + C50871 * C576 + C50879 * C553 + C51464 + C51464 +
             C50872 * C577) *
                C152049 * C50873 +
            (C52887 + C52888 + C52889) * C152049 * C152087) *
               C152211) *
              C1259 +
          (((C52241 + C52240 + C52239) * C152049 * C50873 +
            (C52890 + C52891 + C52892) * C152049 * C152087) *
               C152241 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C152256 -
           ((C52893 + C52894 + C52895) * C152049 * C152087 +
            (C52889 + C52888 + C52887) * C152049 * C50873) *
               C152211) *
              C1260 +
          (((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C52618 + C52619 + C52620) * C152049 * C152087) *
               C152256 -
           ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
             C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
             C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                C152049 * C152087 +
            (C52892 + C52891 + C52890) * C152049 * C50873) *
               C152241 +
           ((C52895 + C52894 + C52893) * C152049 * C50873 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152049 * C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           (C59432 * C341 + C59436 + C59436 + C151790 * C365) * C152049 *
               C59429 +
           (C59432 * C342 + C59437 + C59437 + C151790 * C366) * C152049 *
               C59430 +
           (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) * C152049 *
               C59431) *
              C151867 * C151849 * C129 -
          ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) * C152049 *
               C59431 +
           (C59432 * C343 + C59440 + C59440 + C151790 * C367) * C152049 *
               C59430 +
           (C59432 * C340 + C59441 + C59441 + C151790 * C364) * C152049 *
               C59429 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
               C59428) *
              C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
               C59428 +
           (C59432 * C339 + C59444 + C59444 + C151790 * C363) * C152049 *
               C59429 +
           (C59432 * C344 + C59445 + C59445 + C151790 * C368) * C152049 *
               C59430 +
           (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) * C152049 *
               C59431) *
              C151867 * C151849 * C131 -
          ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) * C152049 *
               C59431 +
           (C59432 * C345 + C59448 + C59448 + C151790 * C369) * C152049 *
               C59430 +
           (C59432 * C338 + C59449 + C59449 + C151790 * C362) * C152049 *
               C59429 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
               C59428) *
              C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152049 *
               C59428 +
           (C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152049 *
               C59429 +
           (C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152049 *
               C59430 +
           (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) * C152049 *
               C59431) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152255 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C152239 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C335 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C152239 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152255 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C152255 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C152239 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152256 -
           ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) * C152049 *
                C59431 +
            (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) * C152049 *
                C59430 +
            (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) * C152049 *
                C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C152241 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            (C59432 * C1534 + C59830 + C59830 + C151790 * C1558) * C152049 *
                C59429 +
            (C59432 * C1539 + C59831 + C59831 + C151790 * C1563) * C152049 *
                C59430 +
            (C59432 * C8074 + C59832 + C59832 + C151790 * C8086) * C152049 *
                C59431) *
               C152211) *
              C151849 * C335 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) * C152049 *
                C59429 +
            (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) * C152049 *
                C59430 +
            (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) * C152049 *
                C59431) *
               C152241 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C152256 -
           ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) * C152049 *
                C59431 +
            (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) * C152049 *
                C59430 +
            (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) * C152049 *
                C59429 +
            (C59432 * C552 + C59840 + C59840 + C151790 * C576) * C152049 *
                C59428) *
               C152211) *
              C151849 * C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C152256 -
           ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) * C152049 *
                C59431 +
            (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) * C152049 *
                C59430 +
            (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) * C152049 *
                C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C152241 +
           ((C59432 * C553 + C59845 + C59845 + C151790 * C577) * C152049 *
                C59428 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C152049 *
                C59429 +
            (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) * C152049 *
                C59430 +
            (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152049 *
                C59431) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C1259 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C1260 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152252 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C1260 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C1259 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C1259 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C1260 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
              C151867 * C1347 -
          (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
           C59667 * C59428) *
              C151867 * C1348 +
          (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
           C60626 * C59431) *
              C151867 * C1349 -
          (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
           C59669 * C59428) *
              C151867 * C1350 +
          (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
           (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) * C152049 *
               C59431) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152256 -
           (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C152241 +
           ((C59432 * C551 + C59829 + C59829 + C151790 * C575) * C152049 *
                C59428 +
            C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
               C152211) *
              C1259 +
          ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
            C60808 * C59431) *
               C152241 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C152256 -
           (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
            C60805 * C59428) *
               C152211) *
              C1260 +
          ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            C60626 * C59431) *
               C152256 -
           ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) * C152049 *
                C59431 +
            C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
               C152241 +
           (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152049 *
                C59431) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
            (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
               C50873 +
           (C59655 * C14751 + C60367 * C14752 + C60800 * C14753) * C152087) *
              C151867 * C151849 * C129 -
          ((C61882 * C14753 + C60368 * C14752 + C59659 * C14751) * C152087 +
           ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
            (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
               C50873) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
            (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
               C50873 +
           (C59663 * C14751 + C60373 * C14752 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C14753) *
               C152087) *
              C151867 * C151849 * C131 -
          (((C59432 * C1531 + C65258 + C65258 + C151790 * C1555) * C14753 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C14752 +
            C59992 * C14751) *
               C152087 +
           ((C59432 * C554 + C65259 + C65259 + C151790 * C578) * C14753 +
            (C59432 * C547 + C60128 + C60128 + C151790 * C571) * C14752 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
               C50873) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C14751 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C14752 +
            (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C14753) *
               C50873 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C14751 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C14752 +
            (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) * C14753) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
             (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152255 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C152239 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C335 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C152239 -
           ((C65490 + C65489 + C65488) * C152087 +
            ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
             (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152255 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
             (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C152255 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C152239 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152256 -
           ((C62168 * C14753 + C60800 * C14752 + C60367 * C14751) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C152241 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C60800 * C14751 + C62168 * C14752 +
             (C59432 * C9433 + C61670 + C61670 + C151790 * C9445) * C14753) *
                C152087) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C60368 * C14751 + C61882 * C14752 + C65784 * C14753) * C152087) *
               C152241 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C152256 -
           (((C59432 * C9434 + C65742 + C65742 + C151790 * C9446) * C14753 +
             C65784 * C14752 + C61882 * C14751) *
                C152087 +
            ((C59432 * C2456 + C65743 + C65743 + C151790 * C2472) * C14753 +
             C65783 * C14752 + C65782 * C14751) *
                C50873) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C152256 -
           ((C65787 * C14753 + C65506 * C14752 + C60373 * C14751) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C152241 +
           ((C65786 * C14751 + C65788 * C14752 +
             (C59432 * C2457 + C65754 + C65754 + C151790 * C2473) * C14753) *
                C50873 +
            (C65506 * C14751 + C65787 * C14752 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C14753) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C1259 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C1260 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C152252 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C1260 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C1259 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C1259 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C1260 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            C65778 * C14752 + C65779 * C14753) *
               C50873 +
           (C65482 + C65483 + C65484) * C152087) *
              C151867 * C1347 -
          ((C65485 + C65486 + C65487) * C152087 +
           (C65484 + C65483 + C65482) * C50873) *
              C151867 * C1348 +
          ((C65487 + C65486 + C65485) * C50873 +
           (C66843 + C66844 + C66845) * C152087) *
              C151867 * C1349 -
          ((C66846 + C66847 + C66848) * C152087 +
           (C66845 + C66844 + C66843) * C50873) *
              C151867 * C1350 +
          ((C66848 + C66847 + C66846) * C50873 +
           (C60624 * C14751 + C61286 * C14752 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C14753) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152256 -
           ((C66493 + C66494 + C66495) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C152241 +
           ((C65779 * C14751 + C65780 * C14752 +
             (C59432 * C2455 + C61669 + C61669 + C151790 * C2471) * C14753) *
                C50873 +
            (C67067 + C67068 + C67084) * C152087) *
               C152211) *
              C1259 +
          (((C66495 + C66494 + C66493) * C50873 +
            (C67071 + C67072 + C67073) * C152087) *
               C152241 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C152256 -
           ((C67085 + C67076 + C67077) * C152087 +
            (C67084 + C67068 + C67067) * C50873) *
               C152211) *
              C1260 +
          (((C65487 + C65486 + C65485) * C50873 +
            (C66843 + C66844 + C66845) * C152087) *
               C152256 -
           ((C62166 * C14753 + C60802 * C14752 + C60365 * C14751) * C152087 +
            (C67073 + C67072 + C67071) * C50873) *
               C152241 +
           ((C67077 + C67076 + C67085) * C50873 +
            (C60802 * C14751 + C62166 * C14752 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C14753) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C152049 * C50873 +
             (C51220 + C51221 + C51222) * C152049 * C152087) *
                C152167 -
            ((C52239 + C52240 + C52241) * C152049 * C152087 +
             (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
              C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 +
              C51461 + C50870 * C574) *
                 C152049 * C50873) *
                C151954) *
               C1259 +
           (((C52241 + C52240 + C52239) * C152049 * C50873 +
             (C52890 + C52891 + C52892) * C152049 * C152087) *
                C151954 -
            ((C51223 + C51224 + C51225) * C152049 * C152087 +
             (C51222 + C51221 + C51220) * C152049 * C50873) *
                C152167) *
               C1260 +
           (((C51225 + C51224 + C51223) * C152049 * C50873 +
             (C52618 + C52619 + C52620) * C152049 * C152087) *
                C152167 -
            ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
              C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
              C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                 C152049 * C152087 +
             (C52892 + C52891 + C52890) * C152049 * C50873) *
                C151954) *
               C152208) *
              C152152 +
          ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
              C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 +
              C51470 + C50872 * C571) *
                 C152049 * C50873 +
             (C52242 + C52243 + C52244) * C152049 * C152087) *
                C151954 -
            ((C51228 + C51227 + C51226) * C152049 * C152087 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C152049 * C50873) *
                C152167) *
               C1259 +
           (((C51226 + C51227 + C51228) * C152049 * C50873 +
             (C51229 + C51230 + C51231) * C152049 * C152087) *
                C152167 -
            ((C53413 + C53414 + C53415) * C152049 * C152087 +
             (C52244 + C52243 + C52242) * C152049 * C50873) *
                C151954) *
               C1260 +
           (((C53415 + C53414 + C53413) * C152049 * C50873 +
             (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
              C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
              C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                 C152049 * C152087) *
                C151954 -
            ((C53105 + C53106 + C53107) * C152049 * C152087 +
             (C51231 + C51230 + C51229) * C152049 * C50873) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C152167 -
           ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
             C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
             C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                C152049 * C152087 +
            (C50879 * C548 + C51459 + C51459 + C50872 * C572 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50875 * C550 + C51461 + C51461 +
             C50870 * C574) *
                C152049 * C50873) *
               C151954) *
              C151849 * C739 +
          (((C50875 * C549 + C51468 + C51468 + C50870 * C573 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50879 * C547 + C51470 + C51470 +
             C50872 * C571) *
                C152049 * C50873 +
            (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
             C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
             C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                C152049 * C152087) *
               C151954 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C152167) *
              C151849 * C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C152167 -
           ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
             C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
             C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                C152049 * C152087 +
            (C50879 * C555 + C51483 + C51483 + C50872 * C579 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50875 * C548 + C51485 + C51485 +
             C50870 * C572) *
                C152049 * C50873) *
               C151954) *
              C151849 * C741 +
          (((C50875 * C547 + C51898 + C51898 + C50870 * C571 + C50877 * C555 +
             C51899 + C51899 + C50871 * C579 + C50879 * C557 + C51900 + C51900 +
             C50872 * C581) *
                C152049 * C50873 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152049 * C152087) *
               C151954 -
           ((C51703 + C51702 + C51701) * C152049 * C152087 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C152049 * C50873) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C152167 -
           ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) * C152049 *
                C59431 +
            (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) * C152049 *
                C59430 +
            (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) * C152049 *
                C59429 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                C59428) *
               C151954) *
              C151849 * C739 +
          (((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                C59428 +
            (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) * C152049 *
                C59429 +
            (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) * C152049 *
                C59430 +
            (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) * C152049 *
                C59431) *
               C151954 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C152167) *
              C151849 * C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C152167 -
           ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) * C152049 *
                C59431 +
            (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) * C152049 *
                C59430 +
            (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) * C152049 *
                C59429 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C152049 *
                C59428) *
               C151954) *
              C151849 * C741 +
          (((C59432 * C547 + C60128 + C60128 + C151790 * C571) * C152049 *
                C59428 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C152049 *
                C59429 +
            (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) * C152049 *
                C59430 +
            (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152049 *
                C59431) *
               C151954 -
           (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
                C59428) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                 C59428 +
             C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                C152167 -
            (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C152049 *
                 C59428) *
                C151954) *
               C1259 +
           ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
             C60808 * C59431) *
                C151954 -
            (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
             C59667 * C59428) *
                C152167) *
               C1260 +
           ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
             C60626 * C59431) *
                C152167 -
            ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) * C152049 *
                 C59431 +
             C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
                C151954) *
               C152208) *
              C152152 +
          ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) * C152049 *
                 C59428 +
             C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                C151954 -
            (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                 C59428) *
                C152167) *
               C1259 +
           ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
             C59674 * C59431) *
                C152167 -
            (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
             C60377 * C59428) *
                C151954) *
               C1260 +
           ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152049 *
                 C59431) *
                C151954 -
            (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
             C59672 * C59428) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C152167 -
           ((C62168 * C14753 + C60800 * C14752 + C60367 * C14751) * C152087 +
            (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
            (C60368 * C14751 + C61882 * C14752 + C65784 * C14753) * C152087) *
               C151954 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C152167 -
           ((C65787 * C14753 + C65506 * C14752 + C60373 * C14751) * C152087 +
            (C65788 * C14753 + C65786 * C14752 + C65785 * C14751) * C50873) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C14751 + C66202 * C14752 +
             (C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C14753) *
                C50873 +
            (C65993 * C14751 + C65994 * C14752 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C14753) *
                C152087) *
               C151954 -
           ((C65996 + C65995 + C65983) * C152087 +
            (C66202 * C14753 + C66201 * C14752 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
                C50873) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
              C65778 * C14752 + C65779 * C14753) *
                 C50873 +
             (C65482 + C65483 + C65484) * C152087) *
                C152167 -
            ((C66493 + C66494 + C66495) * C152087 +
             (C65780 * C14753 + C65779 * C14752 + C65778 * C14751) * C50873) *
                C151954) *
               C1259 +
           (((C66495 + C66494 + C66493) * C50873 +
             (C67071 + C67072 + C67073) * C152087) *
                C151954 -
            ((C65485 + C65486 + C65487) * C152087 +
             (C65484 + C65483 + C65482) * C50873) *
                C152167) *
               C1260 +
           (((C65487 + C65486 + C65485) * C50873 +
             (C66843 + C66844 + C66845) * C152087) *
                C152167 -
            ((C62166 * C14753 + C60802 * C14752 + C60365 * C14751) * C152087 +
             (C67073 + C67072 + C67071) * C50873) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C14751 + C65782 * C14752 + C65783 * C14753) * C50873 +
             (C66496 + C66497 + C66498) * C152087) *
                C151954 -
            ((C65490 + C65489 + C65488) * C152087 +
             (C65782 * C14753 + C65781 * C14752 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                 C50873) *
                C152167) *
               C1259 +
           (((C65488 + C65489 + C65490) * C50873 +
             (C65491 + C65492 + C65493) * C152087) *
                C152167 -
            ((C67580 + C67575 + C67576) * C152087 +
             (C66498 + C66497 + C66496) * C50873) *
                C151954) *
               C1260 +
           (((C67576 + C67575 + C67580) * C50873 +
             (C60370 * C14751 + C61880 * C14752 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C14753) *
                 C152087) *
                C151954 -
            ((C67280 + C67281 + C67282) * C152087 +
             (C65493 + C65492 + C65491) * C50873) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C152255 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C152239 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
             C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
             C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                C152049 * C152087) *
               C151867 * C152208) *
              C335 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C152239 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C152255 -
           ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
             C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
             C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C152208) *
              C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C152255 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C152239 +
           ((C51237 + C51236 + C51235) * C152049 * C50873 +
            (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
             C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
             C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C152049 * C50873 +
           (C50875 * C341 + C50885 + C50885 + C50870 * C365 + C50877 * C340 +
            C50886 + C50886 + C50871 * C364 + C50879 * C339 + C50887 + C50887 +
            C50872 * C363) *
               C152049 * C152087) *
              C151867 * C151849 * C129 -
          ((C50879 * C338 + C50888 + C50888 + C50872 * C362 + C50877 * C339 +
            C50889 + C50889 + C50871 * C363 + C50875 * C340 + C50890 + C50890 +
            C50870 * C364) *
               C152049 * C152087 +
           (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
            C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
            C50870 * C159) *
               C152049 * C50873) *
              C151867 * C151849 * C130 +
          ((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
            C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
            C50872 * C162) *
               C152049 * C50873 +
           (C50875 * C339 + C50897 + C50897 + C50870 * C363 + C50877 * C338 +
            C50898 + C50898 + C50871 * C362 + C50879 * C346 + C50899 + C50899 +
            C50872 * C370) *
               C152049 * C152087) *
              C151867 * C151849 * C131 -
          ((C50879 * C348 + C50900 + C50900 + C50872 * C372 + C50877 * C346 +
            C50901 + C50901 + C50871 * C370 + C50875 * C338 + C50902 + C50902 +
            C50870 * C362) *
               C152049 * C152087 +
           (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
            C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
            C50870 * C161) *
               C152049 * C50873) *
              C151867 * C151849 * C132 +
          ((C50875 * C146 + C50906 + C50906 + C50870 * C162 + C50877 * C147 +
            C50907 + C50907 + C50871 * C163 + C50879 * C148 + C50908 + C50908 +
            C50872 * C164) *
               C152049 * C50873 +
           (C50875 * C346 + C50909 + C50909 + C50870 * C370 + C50877 * C348 +
            C50910 + C50910 + C50871 * C372 + C50879 * C743 + C50911 + C50911 +
            C50872 * C745) *
               C152049 * C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C152049 * C50873 +
            (C51220 + C51221 + C51222) * C152049 * C152087) *
               C151867 * C1259 -
           ((C51223 + C51224 + C51225) * C152049 * C152087 +
            (C51222 + C51221 + C51220) * C152049 * C50873) *
               C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C152049 * C50873 +
            (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
             C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
             C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C152049 * C50873 +
            (C51229 + C51230 + C51231) * C152049 * C152087) *
               C151867 * C1260 -
           ((C51228 + C51227 + C51226) * C152049 * C152087 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C152049 * C50873) *
               C151867 * C1259 -
           ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
             C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
             C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                C152049 * C152087 +
            (C51231 + C51230 + C51229) * C152049 * C50873) *
               C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C152049 * C50873 +
            (C51232 + C51233 + C51234) * C152049 * C152087) *
               C151867 * C1259 -
           ((C51235 + C51236 + C51237) * C152049 * C152087 +
            (C51234 + C51233 + C51232) * C152049 * C50873) *
               C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C152049 * C50873 +
            (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
             C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
             C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                C152049 * C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C152049 * C50873 +
           (C51220 + C51221 + C51222) * C152049 * C152087) *
              C151867 * C1347 -
          ((C51223 + C51224 + C51225) * C152049 * C152087 +
           (C51222 + C51221 + C51220) * C152049 * C50873) *
              C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C152049 * C50873 +
           (C52618 + C52619 + C52620) * C152049 * C152087) *
              C151867 * C1349 -
          ((C52621 + C52622 + C52623) * C152049 * C152087 +
           (C52620 + C52619 + C52618) * C152049 * C50873) *
              C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C152049 * C50873 +
           (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 + C50877 * C7815 +
            C52604 + C52604 + C50871 * C7823 + C50879 * C8335 + C52605 +
            C52605 + C50872 * C8337) *
               C152049 * C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           (C59432 * C341 + C59436 + C59436 + C151790 * C365) * C152049 *
               C59429 +
           (C59432 * C342 + C59437 + C59437 + C151790 * C366) * C152049 *
               C59430 +
           (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) * C152049 *
               C59431) *
              C151867 * C151849 * C129 -
          ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) * C152049 *
               C59431 +
           (C59432 * C343 + C59440 + C59440 + C151790 * C367) * C152049 *
               C59430 +
           (C59432 * C340 + C59441 + C59441 + C151790 * C364) * C152049 *
               C59429 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
               C59428) *
              C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
               C59428 +
           (C59432 * C339 + C59444 + C59444 + C151790 * C363) * C152049 *
               C59429 +
           (C59432 * C344 + C59445 + C59445 + C151790 * C368) * C152049 *
               C59430 +
           (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) * C152049 *
               C59431) *
              C151867 * C151849 * C131 -
          ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) * C152049 *
               C59431 +
           (C59432 * C345 + C59448 + C59448 + C151790 * C369) * C152049 *
               C59430 +
           (C59432 * C338 + C59449 + C59449 + C151790 * C362) * C152049 *
               C59429 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152049 *
               C59428) *
              C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152049 *
               C59428 +
           (C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152049 *
               C59429 +
           (C59432 * C347 + C59453 + C59453 + C151790 * C371) * C152049 *
               C59430 +
           (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) * C152049 *
               C59431) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C152255 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C152239 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C335 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C152239 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C152255 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C152255 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C152239 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
                C59428 +
            C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
               C151867 * C1259 -
           (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
            C59667 * C59428) *
               C151867 * C1260 +
           (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
            (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152252 +
          ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
            C59674 * C59431) *
               C151867 * C1260 -
           (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152049 *
                C59428) *
               C151867 * C1259 -
           ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) * C152049 *
                C59431 +
            C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
               C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152049 *
                C59428 +
            C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
               C151867 * C1259 -
           (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
            C59675 * C59428) *
               C151867 * C1260 +
           (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
            (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) * C152049 *
                C59431) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152049 *
               C59428 +
           C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
              C151867 * C1347 -
          (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
           C59667 * C59428) *
              C151867 * C1348 +
          (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
           C60626 * C59431) *
              C151867 * C1349 -
          (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
           C59669 * C59428) *
              C151867 * C1350 +
          (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
           (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) * C152049 *
               C59431) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
            (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
               C50873 +
           (C59655 * C14751 + C60367 * C14752 + C60800 * C14753) * C152087) *
              C151867 * C151849 * C129 -
          ((C61882 * C14753 + C60368 * C14752 + C59659 * C14751) * C152087 +
           ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
            (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
               C50873) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
            (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
            (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
               C50873 +
           (C59663 * C14751 + C60373 * C14752 +
            (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) * C14753) *
               C152087) *
              C151867 * C151849 * C131 -
          (((C59432 * C1531 + C65258 + C65258 + C151790 * C1555) * C14753 +
            (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) * C14752 +
            C59992 * C14751) *
               C152087 +
           ((C59432 * C554 + C65259 + C65259 + C151790 * C578) * C14753 +
            (C59432 * C547 + C60128 + C60128 + C151790 * C571) * C14752 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C14751) *
               C50873) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C14751 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C14752 +
            (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C14753) *
               C50873 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C14751 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C14752 +
            (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) * C14753) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             (C59432 * C550 + C59828 + C59828 + C151790 * C574) * C14752 +
             (C59432 * C551 + C59829 + C59829 + C151790 * C575) * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C152255 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C152239 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C335 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C152239 -
           ((C65490 + C65489 + C65488) * C152087 +
            ((C59432 * C552 + C59840 + C59840 + C151790 * C576) * C14753 +
             (C59432 * C549 + C59833 + C59833 + C151790 * C573) * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C152255 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             (C59432 * C548 + C59844 + C59844 + C151790 * C572) * C14752 +
             (C59432 * C553 + C59845 + C59845 + C151790 * C577) * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C152255 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C152239 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
             C65778 * C14752 + C65779 * C14753) *
                C50873 +
            (C65482 + C65483 + C65484) * C152087) *
               C151867 * C1259 -
           ((C65485 + C65486 + C65487) * C152087 +
            (C65484 + C65483 + C65482) * C50873) *
               C151867 * C1260 +
           ((C65487 + C65486 + C65485) * C50873 +
            (C59657 * C14751 + C60365 * C14752 + C60802 * C14753) * C152087) *
               C151867 * C152208) *
              C152252 +
          (((C65488 + C65489 + C65490) * C50873 +
            (C65491 + C65492 + C65493) * C152087) *
               C151867 * C1260 -
           ((C65490 + C65489 + C65488) * C152087 +
            (C65782 * C14753 + C65781 * C14752 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C14751) *
                C50873) *
               C151867 * C1259 -
           ((C61880 * C14753 + C60370 * C14752 + C59661 * C14751) * C152087 +
            (C65493 + C65492 + C65491) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C14751 +
             C65785 * C14752 + C65786 * C14753) *
                C50873 +
            (C65494 + C65495 + C65508) * C152087) *
               C151867 * C1259 -
           ((C65509 + C65500 + C65501) * C152087 +
            (C65508 + C65495 + C65494) * C50873) *
               C151867 * C1260 +
           ((C65501 + C65500 + C65509) * C50873 +
            (C59665 * C14751 + C60371 * C14752 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C14753) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C14751 +
            C65778 * C14752 + C65779 * C14753) *
               C50873 +
           (C65482 + C65483 + C65484) * C152087) *
              C151867 * C1347 -
          ((C65485 + C65486 + C65487) * C152087 +
           (C65484 + C65483 + C65482) * C50873) *
              C151867 * C1348 +
          ((C65487 + C65486 + C65485) * C50873 +
           (C66843 + C66844 + C66845) * C152087) *
              C151867 * C1349 -
          ((C66846 + C66847 + C66848) * C152087 +
           (C66845 + C66844 + C66843) * C50873) *
              C151867 * C1350 +
          ((C66848 + C66847 + C66846) * C50873 +
           (C60624 * C14751 + C61286 * C14752 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C14753) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C151908 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C151915 +
           ((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C3585) *
              C151826 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C151915 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C151908 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            (C85224 * C152113 + C73969 * C152184) * C50873) *
               C151867 * C3585) *
              C151835 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151867 * C151908 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
               C151867 * C151915 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C151908 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C152167) *
               C151915 +
           (((C73968 * C152184 + C84578 * C152113) * C50873 +
             ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
                C152167 -
            (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
             (C84579 * C152113 + C75586 * C152184) * C50873) *
                C151954) *
               C3585) *
              C3241 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C152167) *
               C151908 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151915 +
           (((C76134 * C152184 + (C77235 + C77234) * C152113) * C50873 +
             ((C76147 + C76146) * C152184 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                 C152087 +
             (C85224 * C152113 + C73969 * C152184) * C50873) *
                C152167) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C152262 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C152258 +
           ((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152244 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            (C85483 * C152113 + C75340 * C152184) * C50873) *
               C151867 * C152218) *
              C3241 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C152258 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C152262 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            (C85224 * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152244 +
           ((C75830 * C152184 + (C76147 + C76146) * C152113) * C50873 +
            ((C75843 + C75842) * C152184 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C3101 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C151912) *
              C152261 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C3101) *
              C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151867 * C3101 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
               C151867 * C151912) *
              C152237 +
          ((((C74440 + C74441) * C152184 + (C83168 + C83169) * C152113) *
                C50873 +
            ((C74442 + C74443) * C152184 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C152256 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C152241 +
            (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                 C50873 +
             (C84577 * C152184 + C87188 * C152113) * C152087) *
                C152211) *
               C3101 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C152241 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C152256 -
            (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
             (C87189 * C152113 + C84576 * C152184) * C50873) *
                C152211) *
               C151912) *
              C3241 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C152241 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C152256 -
            (((C86656 + C86657) * C152113 + C86651 * C152184) * C152087 +
             ((C86928 + C86929) * C152113 + (C82895 + C82894) * C152184) *
                 C50873) *
                C152211) *
               C3101 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C152256 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C152241 +
            ((C86646 * C152184 + (C86657 + C86656) * C152113) * C50873 +
             ((C77235 + C77234) * C152184 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C3101 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C152167) *
               C151912) *
              C151826 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C152167) *
               C3101 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151912) *
              C151835 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C152184 +
              (C82896 + C82897) * C152113) *
                 C50873 +
             ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
                C152167 -
            (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                 C50873) *
                C151954) *
               C3101 +
           (((C83832 * C152184 + (C82899 + C82898) * C152113) * C50873 +
             ((C74997 + C74996) * C152184 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
                C152167) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C3101 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C151912) *
              C152261 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C3101) *
              C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151867 * C3101 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
               C151867 * C151912) *
              C152237 +
          ((((C74440 + C74441) * C152184 + (C83168 + C83169) * C152113) *
                C50873 +
            ((C74442 + C74443) * C152184 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C152262 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C152258 +
           ((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152244 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            (C85483 * C152113 + C75340 * C152184) * C50873) *
               C151867 * C152218) *
              C3241 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C152258 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C152262 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            (C85224 * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152244 +
           ((C75830 * C152184 + (C76147 + C76146) * C152113) * C50873 +
            ((C75843 + C75842) * C152184 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C151908 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C4107) *
               C151915 +
           (((C73968 * C152184 + C84578 * C152113) * C50873 +
             ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
                C4107 -
            (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
             (C84579 * C152113 + C75586 * C152184) * C50873) *
                C151954) *
               C3585) *
              C152152 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C4107) *
               C151908 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151915 +
           (((C76134 * C152184 + (C77235 + C77234) * C152113) * C50873 +
             ((C76147 + C76146) * C152184 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                 C152087 +
             (C85224 * C152113 + C73969 * C152184) * C50873) *
                C4107) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151950 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151957 +
           (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                C50873 +
            (C84577 * C152184 + C87188 * C152113) * C152087) *
               C4779) *
              C151908 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C151957 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151950 -
           (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
            (C87189 * C152113 + C84576 * C152184) * C50873) *
               C4779) *
              C151915 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151950 -
           (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C151957 +
           ((C75634 * C152184 + (C77651 + C77650) * C152113) * C50873 +
            ((C75633 + C75632) * C152184 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C4779) *
              C3585) *
         C151821) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C152262 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C4107) *
              C152258 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C4107 -
           (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C151954) *
              C152244 +
          (((C76342 * C152184 + (C75633 + C75632) * C152113) * C50873 +
            ((C76355 + C76354) * C152184 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            (C85483 * C152113 + C75340 * C152184) * C50873) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C3101 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C4107) *
               C151912) *
              C152252 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C4107) *
               C3101 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151912) *
              C152235 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C152184 +
              (C82896 + C82897) * C152113) *
                 C50873 +
             ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
                C4107 -
            (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                 C50873) *
                C151954) *
               C3101 +
           (((C83832 * C152184 + (C82899 + C82898) * C152113) * C50873 +
             ((C74997 + C74996) * C152184 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C152263 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C152260 +
           (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                C50873 +
            (C84577 * C152184 + C87188 * C152113) * C152087) *
               C152247 -
           (((C86256 + C86257) * C152113 + C87189 * C152184) * C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C152184) *
                C50873) *
               C152224) *
              C3101 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C152260 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C152263 -
           (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
            (C87189 * C152113 + C84576 * C152184) * C50873) *
               C152247 +
           ((C87188 * C152184 + (C86257 + C86256) * C152113) * C50873 +
            ((C77651 + C77650) * C152184 +
             (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
              C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                 C152113) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C151950 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151957 +
            (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                 C50873 +
             (C84577 * C152184 + C87188 * C152113) * C152087) *
                C4779) *
               C3101 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151957 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C151950 -
            (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
             (C87189 * C152113 + C84576 * C152184) * C50873) *
                C4779) *
               C151912) *
              C152152 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151957 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C151950 -
            (((C86656 + C86657) * C152113 + C86651 * C152184) * C152087 +
             ((C86928 + C86929) * C152113 + (C82895 + C82894) * C152184) *
                 C50873) *
                C4779) *
               C3101 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C151950 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151957 +
            ((C86646 * C152184 + (C86657 + C86656) * C152113) * C50873 +
             ((C77235 + C77234) * C152184 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C3101 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C4107) *
               C151912) *
              C152252 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C4107) *
               C3101 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151912) *
              C152235 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C152184 +
              (C82896 + C82897) * C152113) *
                 C50873 +
             ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
                C4107 -
            (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                 C50873) *
                C151954) *
               C3101 +
           (((C83832 * C152184 + (C82899 + C82898) * C152113) * C50873 +
             ((C74997 + C74996) * C152184 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C152262 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C4107) *
              C152258 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C4107 -
           (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C151954) *
              C152244 +
          (((C76342 * C152184 + (C75633 + C75632) * C152113) * C50873 +
            ((C76355 + C76354) * C152184 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            (C85483 * C152113 + C75340 * C152184) * C50873) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C1709 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C1710 +
           ((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C1711 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            ((C75631 + C75630) * C152113 + C75340 * C152184) * C50873) *
               C151867 * C152218) *
              C152152 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C1710 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C1709 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C1711 +
           ((C75830 * C152184 + (C76147 + C76146) * C152113) * C50873 +
            ((C75843 + C75842) * C152184 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C151867 * C152166 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            ((C74990 + C74991) * C152113 + (C73951 + C73950) * C152184) *
                C50873) *
               C151867 * C151912) *
              C739 +
          ((((C73956 + C73957) * C152184 + (C74992 + C74993) * C152113) *
                C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C152166) *
              C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C151867 * C152166 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            ((C74998 + C74999) * C152113 + (C73963 + C73962) * C152184) *
                C50873) *
               C151867 * C151912) *
              C741 +
          ((((C74440 + C74441) * C152184 + (C83168 + C83169) * C152113) *
                C50873 +
            ((C74442 + C74443) * C152184 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C73615 * C555 + C74639 + C74639 + C151795 * C579 + C73613 * C547 +
              C74638 + C74638 + C152145 * C571) *
                 C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C2215 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C2216 +
            (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                 C50873 +
             (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
                C152211) *
               C152166 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C2216 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C2215 -
            (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
             ((C77652 + C77653) * C152113 + C84576 * C152184) * C50873) *
                C152211) *
               C151912) *
              C152152 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C2216 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C2215 -
            (((C86656 + C86657) * C152113 + C86651 * C152184) * C152087 +
             ((C73615 * C2452 + C77433 + C77433 + C151795 * C2468 +
               C73613 * C2453 + C77432 + C77432 + C152145 * C2469) *
                  C152113 +
              (C82895 + C82894) * C152184) *
                 C50873) *
                C152211) *
               C152166 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C2215 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C2216 +
            ((C86646 * C152184 + (C86657 + C86656) * C152113) * C50873 +
             ((C77235 + C77234) * C152184 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C152167 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C1709 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C152167) *
              C1710 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C152167 -
           (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C151954) *
              C1711 +
          (((C76342 * C152184 + (C75633 + C75632) * C152113) * C50873 +
            ((C76355 + C76354) * C152184 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            (C85483 * C152113 + C75340 * C152184) * C50873) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C152167 -
            (((C75627 + C75626) * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C152166 +
           (((C83828 * C152184 + (C75626 + C75627) * C152113) * C50873 +
             ((C74989 + C74988) * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C152167) *
               C151912) *
              C335 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + (C77237 + C77236) * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C152167) *
               C152166 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + (C74995 + C74994) * C152184) *
                 C152087 +
             ((C77236 + C77237) * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151912) *
              C336 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C152184 +
              (C82896 + C82897) * C152113) *
                 C50873 +
             ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
                C152167 -
            (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                 C50873) *
                C151954) *
               C152166 +
           (((C83832 * C152184 + (C82899 + C82898) * C152113) * C50873 +
             ((C74997 + C74996) * C152184 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C2814 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C2815 +
           (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                C50873 +
            (C84577 * C152184 + C87188 * C152113) * C152087) *
               C2816 -
           (((C86256 + C86257) * C152113 + C87189 * C152184) * C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C152184) *
                C50873) *
               C152224) *
              C152166 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C2815 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C2814 -
           (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
            (C87189 * C152113 + C84576 * C152184) * C50873) *
               C2816 +
           ((C87188 * C152184 + (C86257 + C86256) * C152113) * C50873 +
            ((C77651 + C77650) * C152184 +
             (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
              C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                 C152113) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                 C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                    C152184 +
                (C73613 * C550 + C74197 + C74197 + C152145 * C574 +
                 C73615 * C549 + C74196 + C74196 + C151795 * C573) *
                    C152113) *
                   C50873 +
               ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                   C152087) *
                  C151867 * C151849 * C129 -
              (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                   C152087 +
               ((C73615 * C548 + C74205 + C74205 + C151795 * C572 +
                 C73613 * C549 + C74204 + C74204 + C152145 * C573) *
                    C152113 +
                (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                 C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                    C152184) *
                   C50873) *
                  C151867 * C151849 * C130 +
              (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                 C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                    C152184 +
                (C73613 * C548 + C74221 + C74221 + C152145 * C572 +
                 C73615 * C547 + C74220 + C74220 + C151795 * C571) *
                    C152113) *
                   C50873 +
               ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                   C152087) *
                  C151867 * C151849 * C131 -
              (((C73615 * C1087 + C74641 + C74641 + C151795 * C1099 +
                 C73613 * C1086 + C74640 + C74640 + C152145 * C1098) *
                    C152113 +
                (C74441 + C74440) * C152184) *
                   C152087 +
               ((C73615 * C555 + C74639 + C74639 + C151795 * C579 +
                 C73613 * C547 + C74638 + C74638 + C152145 * C571) *
                    C152113 +
                (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                 C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                    C152184) *
                   C50873) *
                  C151867 * C151849 * C132 +
              (((C73613 * C146 + C73642 + C73642 + C152145 * C162 +
                 C73615 * C147 + C73643 + C73643 + C151795 * C163) *
                    C152184 +
                (C73613 * C555 + C82244 + C82244 + C152145 * C579 +
                 C73615 * C557 + C82245 + C82245 + C151795 * C581) *
                    C152113) *
                   C50873 +
               ((C73613 * C346 + C73644 + C73644 + C152145 * C370 +
                 C73615 * C348 + C73645 + C73645 + C151795 * C372) *
                    C152184 +
                (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
                 C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                    C152113) *
                   C152087) *
                  C151867 * C151849 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                  C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                     C152184 +
                 (C73613 * C550 + C74197 + C74197 + C152145 * C574 +
                  C73615 * C549 + C74196 + C74196 + C151795 * C573) *
                     C152113) *
                    C50873 +
                ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                    C152087) *
                   C151867 * C152255 -
               ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
                ((C74990 + C74991) * C152113 + (C73951 + C73950) * C152184) *
                    C50873) *
                   C151867 * C152239 +
               ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
                ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
                   C151867 * C152208) *
                  C335 +
              ((((C73956 + C73957) * C152184 + (C74992 + C74993) * C152113) *
                    C50873 +
                ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                   C151867 * C152239 -
               (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                    C152087 +
                ((C73615 * C548 + C74205 + C74205 + C151795 * C572 +
                  C73613 * C549 + C74204 + C74204 + C152145 * C573) *
                     C152113 +
                 (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                  C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                     C152184) *
                    C50873) *
                   C151867 * C152255 -
               (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                    C152087 +
                ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
                   C151867 * C152208) *
                  C336 +
              ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                  C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                     C152184 +
                 (C73613 * C548 + C74221 + C74221 + C152145 * C572 +
                  C73615 * C547 + C74220 + C74220 + C151795 * C571) *
                     C152113) *
                    C50873 +
                ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                    C152087) *
                   C151867 * C152255 -
               (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                    C152087 +
                ((C74998 + C74999) * C152113 + (C73963 + C73962) * C152184) *
                    C50873) *
                   C151867 * C152239 +
               ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
                ((C73967 + C73966) * C152184 +
                 (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                  C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                     C152113) *
                    C152087) *
                   C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C152256 -
           (((C75627 + C75626) * C152113 + (C74990 + C74991) * C152184) *
                C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C152241 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            ((C75626 + C75627) * C152184 + (C77653 + C77652) * C152113) *
                C152087) *
               C152211) *
              C151849 * C335 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            ((C74992 + C74993) * C152184 + (C77237 + C77236) * C152113) *
                C152087) *
               C152241 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C152256 -
           (((C73615 * C2957 + C77435 + C77435 + C151795 * C2965 +
              C73613 * C2956 + C77434 + C77434 + C152145 * C2964) *
                 C152113 +
             (C77236 + C77237) * C152184) *
                C152087 +
            ((C73615 * C2452 + C77433 + C77433 + C151795 * C2468 +
              C73613 * C2453 + C77432 + C77432 + C152145 * C2469) *
                 C152113 +
             (C82895 + C82894) * C152184) *
                C50873) *
               C152211) *
              C151849 * C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C152256 -
           (((C82898 + C82899) * C152113 + (C74998 + C74999) * C152184) *
                C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C152241 +
           (((C82901 + C82900) * C152184 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C50873 +
            ((C82899 + C82898) * C152184 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C82888 + C82889) * C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
              C151867 * C1348 +
          ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
           ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
               C152087 +
           ((C75631 + C75630) * C152113 + C75340 * C152184) * C50873) *
              C151867 * C1350 +
          ((C75366 * C152184 + (C76355 + C76354) * C152113) * C50873 +
           ((C75365 + C75364) * C152184 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C152256 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C152241 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
               C152211) *
              C1259 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C152241 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C152256 -
           (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
            ((C77652 + C77653) * C152113 + C84576 * C152184) * C50873) *
               C152211) *
              C1260 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C152256 -
           (((C75632 + C75633) * C152113 + (C75631 + C75630) * C152184) *
                C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C152241 +
           ((C75634 * C152184 + (C77651 + C77650) * C152113) * C50873 +
            ((C75633 + C75632) * C152184 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C2216 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
               C152211) *
              C151849 * C152252 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            (C83830 * C152184 + (C77237 + C77236) * C152113) * C152087) *
               C2216 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C2215 -
           (((C73615 * C2957 + C77435 + C77435 + C151795 * C2965 +
              C73613 * C2956 + C77434 + C77434 + C152145 * C2964) *
                 C152113 +
             (C77236 + C77237) * C152184) *
                C152087 +
            ((C73615 * C2452 + C77433 + C77433 + C151795 * C2468 +
              C73613 * C2453 + C77432 + C77432 + C152145 * C2469) *
                 C152113 +
             (C82895 + C82894) * C152184) *
                C50873) *
               C152211) *
              C151849 * C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C2215 -
           (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C2216 +
           (((C82901 + C82900) * C152184 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C50873 +
            ((C82899 + C82898) * C152184 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C2216 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
               C152211) *
              C152255 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C2216 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C2215 -
           (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
            ((C77652 + C77653) * C152113 + C84576 * C152184) * C50873) *
               C152211) *
              C152239 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C2215 -
           (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C2216 +
           ((C75634 * C152184 + (C77651 + C77650) * C152113) * C50873 +
            ((C75633 + C75632) * C152184 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C82888 + C82889) * C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
              C2446 -
          ((C84576 * C152113 + C83829 * C152184) * C152087 +
           ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
               C50873) *
              C2447 +
          (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
               C50873 +
           (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
              C2448 -
          (((C86256 + C86257) * C152113 + (C77652 + C77653) * C152184) *
               C152087 +
           ((C86258 + C86259) * C152113 + (C86255 + C86254) * C152184) *
               C50873) *
              C2449 +
          (((C86259 + C86258) * C152184 +
            (C73613 * C17805 + C86238 + C86238 + C152145 * C17813 +
             C73615 * C17804 + C86239 + C86239 + C151795 * C17812) *
                C152113) *
               C50873 +
           ((C86257 + C86256) * C152184 +
            (C73613 * C18552 + C86240 + C86240 + C152145 * C18556 +
             C73615 * C18553 + C86241 + C86241 + C151795 * C18557) *
                C152113) *
               C152087) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C1259 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C152167) *
               C1260 +
           (((C73968 * C152184 + C84578 * C152113) * C50873 +
             ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
                C152167 -
            (((C75632 + C75633) * C152113 + (C75631 + C75630) * C152184) *
                 C152087 +
             (C84579 * C152113 + C75586 * C152184) * C50873) *
                C151954) *
               C152208) *
              C152152 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + (C77237 + C77236) * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C152167) *
               C1259 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             ((C77236 + C77237) * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C1260 +
           (((C76134 * C152184 + (C77235 + C77234) * C152113) * C50873 +
             ((C76147 + C76146) * C152184 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                 C152087 +
             (C85224 * C152113 + C73969 * C152184) * C50873) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C152167 -
           (((C75627 + C75626) * C152113 + (C74990 + C74991) * C152184) *
                C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C151849 * C739 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            ((C74992 + C74993) * C152184 + (C77237 + C77236) * C152113) *
                C152087) *
               C151954 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C152167) *
              C151849 * C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C152167 -
           (((C82898 + C82899) * C152113 + (C74998 + C74999) * C152184) *
                C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C151954) *
              C151849 * C741 +
          ((((C83440 + C83441) * C152184 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C50873 +
            ((C83168 + C83169) * C152184 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C2814 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C2815 +
           (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                C50873 +
            (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
               C2816 -
           (((C86256 + C86257) * C152113 + (C77652 + C77653) * C152184) *
                C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C152184) *
                C50873) *
               C152224) *
              C151849 * C152152 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            (C83830 * C152184 + C86646 * C152113) * C152087) *
               C2815 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C2814 -
           (((C86656 + C86657) * C152113 + C86651 * C152184) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C152184) *
                C50873) *
               C2816 +
           (((C86929 + C86928) * C152184 +
             (C73613 * C2456 + C86920 + C86920 + C152145 * C2472 +
              C73615 * C2457 + C86921 + C86921 + C151795 * C2473) *
                 C152113) *
                C50873 +
            ((C86657 + C86656) * C152184 +
             (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
              C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                 C152113) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C73613 * C550 + C74197 + C74197 + C152145 * C574 + C73615 * C549 +
              C74196 + C74196 + C151795 * C573) *
                 C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C151867 * C152255 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            ((C74990 + C74991) * C152113 + (C73951 + C73950) * C152184) *
                C50873) *
               C151867 * C152239 +
           ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C73956 + C73957) * C152184 + (C74992 + C74993) * C152113) *
                C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C152239 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C73615 * C548 + C74205 + C74205 + C151795 * C572 + C73613 * C549 +
              C74204 + C74204 + C152145 * C573) *
                 C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C152255 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152208) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C73613 * C548 + C74221 + C74221 + C152145 * C572 + C73615 * C547 +
              C74220 + C74220 + C151795 * C571) *
                 C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C151867 * C152255 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            ((C74998 + C74999) * C152113 + (C73963 + C73962) * C152184) *
                C50873) *
               C151867 * C152239 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C73613 * C550 + C74197 + C74197 + C152145 * C574 + C73615 * C549 +
             C74196 + C74196 + C151795 * C573) *
                C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
               C152087) *
              C151867 * C151849 * C129 -
          (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
               C152087 +
           ((C73615 * C548 + C74205 + C74205 + C151795 * C572 + C73613 * C549 +
             C74204 + C74204 + C152145 * C573) *
                C152113 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152184) *
               C50873) *
              C151867 * C151849 * C130 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152184 +
            (C73613 * C548 + C74221 + C74221 + C152145 * C572 + C73615 * C547 +
             C74220 + C74220 + C151795 * C571) *
                C152113) *
               C50873 +
           ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
               C152087) *
              C151867 * C151849 * C131 -
          (((C73615 * C1087 + C74641 + C74641 + C151795 * C1099 +
             C73613 * C1086 + C74640 + C74640 + C152145 * C1098) *
                C152113 +
            (C74441 + C74440) * C152184) *
               C152087 +
           ((C73615 * C555 + C74639 + C74639 + C151795 * C579 + C73613 * C547 +
             C74638 + C74638 + C152145 * C571) *
                C152113 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152184) *
               C50873) *
              C151867 * C151849 * C132 +
          (((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
             C73643 + C73643 + C151795 * C163) *
                C152184 +
            (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
             C82245 + C82245 + C151795 * C581) *
                C152113) *
               C50873 +
           ((C73613 * C346 + C73644 + C73644 + C152145 * C370 + C73615 * C348 +
             C73645 + C73645 + C151795 * C372) *
                C152184 +
            (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
             C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C82888 + C82889) * C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
              C151867 * C1348 +
          ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
           ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
               C152087 +
           ((C75631 + C75630) * C152113 + C75340 * C152184) * C50873) *
              C151867 * C1350 +
          ((C75366 * C152184 + (C76355 + C76354) * C152113) * C50873 +
           ((C75365 + C75364) * C152184 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C2216 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
               C152211) *
              C151849 * C152252 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            (C83830 * C152184 + (C77237 + C77236) * C152113) * C152087) *
               C2216 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C2215 -
           (((C73615 * C2957 + C77435 + C77435 + C151795 * C2965 +
              C73613 * C2956 + C77434 + C77434 + C152145 * C2964) *
                 C152113 +
             (C77236 + C77237) * C152184) *
                C152087 +
            ((C73615 * C2452 + C77433 + C77433 + C151795 * C2468 +
              C73613 * C2453 + C77432 + C77432 + C152145 * C2469) *
                 C152113 +
             (C82895 + C82894) * C152184) *
                C50873) *
               C152211) *
              C151849 * C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C2215 -
           (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C2216 +
           (((C82901 + C82900) * C152184 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C50873 +
            ((C82899 + C82898) * C152184 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C2216 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
               C152211) *
              C152255 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C2216 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C2215 -
           (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
            ((C77652 + C77653) * C152113 + C84576 * C152184) * C50873) *
               C152211) *
              C152239 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C2215 -
           (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C2216 +
           ((C75634 * C152184 + (C77651 + C77650) * C152113) * C50873 +
            ((C75633 + C75632) * C152184 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C152166 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C4107) *
               C151912) *
              C151826 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C4107) *
               C152166 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151912) *
              C151835 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C152184 +
              (C82896 + C82897) * C152113) *
                 C50873 +
             ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
                C4107 -
            (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                 C50873) *
                C151954) *
               C152166 +
           (((C83832 * C152184 + (C82899 + C82898) * C152113) * C50873 +
             ((C74997 + C74996) * C152184 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
                C4107) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C151950 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151957 +
            (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                 C50873 +
             (C84577 * C152184 + C87188 * C152113) * C152087) *
                C4779) *
               C152166 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151957 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C151950 -
            (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
             (C87189 * C152113 + C84576 * C152184) * C50873) *
                C4779) *
               C151912) *
              C3241 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151957 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C151950 -
            (((C86656 + C86657) * C152113 + C86651 * C152184) * C152087 +
             ((C86928 + C86929) * C152113 + (C82895 + C82894) * C152184) *
                 C50873) *
                C4779) *
               C152166 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C151950 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151957 +
            ((C86646 * C152184 + (C86657 + C86656) * C152113) * C50873 +
             ((C77235 + C77234) * C152184 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C152255 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C4107) *
               C152239 +
           (((C73968 * C152184 + C84578 * C152113) * C50873 +
             ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
                C4107 -
            (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
             (C84579 * C152113 + C75586 * C152184) * C50873) *
                C151954) *
               C152208) *
              C3241 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C4107) *
               C152255 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C152239 +
           (((C76134 * C152184 + (C77235 + C77234) * C152113) * C50873 +
             ((C76147 + C76146) * C152184 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                 C152087 +
             (C85224 * C152113 + C73969 * C152184) * C50873) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C151849 * C152261 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            (C83830 * C152184 + C86646 * C152113) * C152087) *
               C151954 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C4107) *
              C151849 * C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C4107 -
           (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C151954) *
              C151849 * C152237 +
          ((((C83440 + C83441) * C152184 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C50873 +
            ((C83168 + C83169) * C152184 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C152263 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C152260 +
           (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                C50873 +
            (C84577 * C152184 + C87188 * C152113) * C152087) *
               C152247 -
           (((C86256 + C86257) * C152113 + C87189 * C152184) * C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C152184) *
                C50873) *
               C152224) *
              C151849 * C3241 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            (C83830 * C152184 + C86646 * C152113) * C152087) *
               C152260 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C152263 -
           (((C86656 + C86657) * C152113 + C86651 * C152184) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C152184) *
                C50873) *
               C152247 +
           (((C86929 + C86928) * C152184 +
             (C73613 * C2456 + C86920 + C86920 + C152145 * C2472 +
              C73615 * C2457 + C86921 + C86921 + C151795 * C2473) *
                 C152113) *
                C50873 +
            ((C86657 + C86656) * C152184 +
             (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
              C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                 C152113) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151950 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151957 +
           (((C82891 + C82890) * C152184 + (C86254 + C86255) * C152113) *
                C50873 +
            (C84577 * C152184 + C87188 * C152113) * C152087) *
               C4779) *
              C151849 * C151826 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            (C83830 * C152184 + C86646 * C152113) * C152087) *
               C151957 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151950 -
           (((C86656 + C86657) * C152113 + C86651 * C152184) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C152184) *
                C50873) *
               C4779) *
              C151849 * C151835 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151950 -
           (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C151957 +
           (((C82901 + C82900) * C152184 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C50873 +
            ((C82899 + C82898) * C152184 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C4779) *
              C151849 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C151849 * C152261 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            (C83830 * C152184 + C86646 * C152113) * C152087) *
               C151954 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C4107) *
              C151849 * C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C4107 -
           (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C151954) *
              C151849 * C152237 +
          ((((C83440 + C83441) * C152184 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C50873 +
            ((C83168 + C83169) * C152184 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C152255 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C4107) *
               C152239 +
           (((C73968 * C152184 + C84578 * C152113) * C50873 +
             ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
                C4107 -
            (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
             (C84579 * C152113 + C75586 * C152184) * C50873) *
                C151954) *
               C152208) *
              C3241 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C4107) *
               C152255 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             (C86651 * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C152239 +
           (((C76134 * C152184 + (C77235 + C77234) * C152113) * C50873 +
             ((C76147 + C76146) * C152184 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                 C152087 +
             (C85224 * C152113 + C73969 * C152184) * C50873) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C151867 * C152166 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            ((C74990 + C74991) * C152113 + (C73951 + C73950) * C152184) *
                C50873) *
               C151867 * C151912) *
              C739 +
          ((((C73956 + C73957) * C152184 + (C74992 + C74993) * C152113) *
                C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C152166) *
              C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C151867 * C152166 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            ((C74998 + C74999) * C152113 + (C73963 + C73962) * C152184) *
                C50873) *
               C151867 * C151912) *
              C741 +
          ((((C74440 + C74441) * C152184 + (C83168 + C83169) * C152113) *
                C50873 +
            ((C74442 + C74443) * C152184 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C73615 * C555 + C74639 + C74639 + C151795 * C579 + C73613 * C547 +
              C74638 + C74638 + C152145 * C571) *
                 C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C1709 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C1710 +
           ((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C1711 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            ((C75631 + C75630) * C152113 + C75340 * C152184) * C50873) *
               C151867 * C152218) *
              C152152 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C1710 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C1709 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C1711 +
           ((C75830 * C152184 + (C76147 + C76146) * C152113) * C50873 +
            ((C75843 + C75842) * C152184 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C152167 -
            (((C75627 + C75626) * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C152166 +
           (((C83828 * C152184 + (C75626 + C75627) * C152113) * C50873 +
             ((C74989 + C74988) * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C152167) *
               C151912) *
              C335 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + (C77237 + C77236) * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C152167) *
               C152166 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + (C74995 + C74994) * C152184) *
                 C152087 +
             ((C77236 + C77237) * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C151912) *
              C336 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C152184 +
              (C82896 + C82897) * C152113) *
                 C50873 +
             ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
                C152167 -
            (((C82898 + C82899) * C152113 + C83833 * C152184) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                 C50873) *
                C151954) *
               C152166 +
           (((C83832 * C152184 + (C82899 + C82898) * C152113) * C50873 +
             ((C74997 + C74996) * C152184 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C152167 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C1709 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C152167) *
              C1710 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C152167 -
           (((C75632 + C75633) * C152113 + C85483 * C152184) * C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C151954) *
              C1711 +
          (((C76342 * C152184 + (C75633 + C75632) * C152113) * C50873 +
            ((C76355 + C76354) * C152184 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
                C152087 +
            (C85483 * C152113 + C75340 * C152184) * C50873) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C73613 * C550 + C74197 + C74197 + C152145 * C574 + C73615 * C549 +
              C74196 + C74196 + C151795 * C573) *
                 C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C151867 * C152255 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            ((C74990 + C74991) * C152113 + (C73951 + C73950) * C152184) *
                C50873) *
               C151867 * C152239 +
           ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C73956 + C73957) * C152184 + (C74992 + C74993) * C152113) *
                C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C152239 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C73615 * C548 + C74205 + C74205 + C151795 * C572 + C73613 * C549 +
              C74204 + C74204 + C152145 * C573) *
                 C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C152255 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152208) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C73613 * C548 + C74221 + C74221 + C152145 * C572 + C73615 * C547 +
              C74220 + C74220 + C151795 * C571) *
                 C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C151867 * C152255 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            ((C74998 + C74999) * C152113 + (C73963 + C73962) * C152184) *
                C50873) *
               C151867 * C152239 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C73613 * C550 + C74197 + C74197 + C152145 * C574 + C73615 * C549 +
             C74196 + C74196 + C151795 * C573) *
                C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
               C152087) *
              C151867 * C151849 * C129 -
          (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
               C152087 +
           ((C73615 * C548 + C74205 + C74205 + C151795 * C572 + C73613 * C549 +
             C74204 + C74204 + C152145 * C573) *
                C152113 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152184) *
               C50873) *
              C151867 * C151849 * C130 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152184 +
            (C73613 * C548 + C74221 + C74221 + C152145 * C572 + C73615 * C547 +
             C74220 + C74220 + C151795 * C571) *
                C152113) *
               C50873 +
           ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
               C152087) *
              C151867 * C151849 * C131 -
          (((C73615 * C1087 + C74641 + C74641 + C151795 * C1099 +
             C73613 * C1086 + C74640 + C74640 + C152145 * C1098) *
                C152113 +
            (C74441 + C74440) * C152184) *
               C152087 +
           ((C73615 * C555 + C74639 + C74639 + C151795 * C579 + C73613 * C547 +
             C74638 + C74638 + C152145 * C571) *
                C152113 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152184) *
               C50873) *
              C151867 * C151849 * C132 +
          (((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
             C73643 + C73643 + C151795 * C163) *
                C152184 +
            (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
             C82245 + C82245 + C151795 * C581) *
                C152113) *
               C50873 +
           ((C73613 * C346 + C73644 + C73644 + C152145 * C370 + C73615 * C348 +
             C73645 + C73645 + C151795 * C372) *
                C152184 +
            (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
             C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C152256 -
           (((C75627 + C75626) * C152113 + (C74990 + C74991) * C152184) *
                C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C152241 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            ((C75626 + C75627) * C152184 + (C77653 + C77652) * C152113) *
                C152087) *
               C152211) *
              C151849 * C335 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            ((C74992 + C74993) * C152184 + (C77237 + C77236) * C152113) *
                C152087) *
               C152241 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C152256 -
           (((C73615 * C2957 + C77435 + C77435 + C151795 * C2965 +
              C73613 * C2956 + C77434 + C77434 + C152145 * C2964) *
                 C152113 +
             (C77236 + C77237) * C152184) *
                C152087 +
            ((C73615 * C2452 + C77433 + C77433 + C151795 * C2468 +
              C73613 * C2453 + C77432 + C77432 + C152145 * C2469) *
                 C152113 +
             (C82895 + C82894) * C152184) *
                C50873) *
               C152211) *
              C151849 * C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C152256 -
           (((C82898 + C82899) * C152113 + (C74998 + C74999) * C152184) *
                C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C152241 +
           (((C82901 + C82900) * C152184 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C50873 +
            ((C82899 + C82898) * C152184 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C82888 + C82889) * C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
              C151867 * C1348 +
          ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
           ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
               C152087 +
           ((C75631 + C75630) * C152113 + C75340 * C152184) * C50873) *
              C151867 * C1350 +
          ((C75366 * C152184 + (C76355 + C76354) * C152113) * C50873 +
           ((C75365 + C75364) * C152184 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C152256 -
           ((C84576 * C152113 + C83829 * C152184) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C152241 +
           (((C82891 + C82890) * C152184 +
             (C73613 * C2454 + C76919 + C76919 + C152145 * C2470 +
              C73615 * C2453 + C76918 + C76918 + C151795 * C2469) *
                 C152113) *
                C50873 +
            (C84577 * C152184 + (C77653 + C77652) * C152113) * C152087) *
               C152211) *
              C1259 +
          (((C83828 * C152184 + C84577 * C152113) * C50873 +
            (C84578 * C152184 + C75634 * C152113) * C152087) *
               C152241 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C152256 -
           (((C77650 + C77651) * C152113 + C84579 * C152184) * C152087 +
            ((C77652 + C77653) * C152113 + C84576 * C152184) * C50873) *
               C152211) *
              C1260 +
          (((C73968 * C152184 + C84578 * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C152256 -
           (((C75632 + C75633) * C152113 + (C75631 + C75630) * C152184) *
                C152087 +
            (C84579 * C152113 + C75586 * C152184) * C50873) *
               C152241 +
           ((C75634 * C152184 + (C77651 + C77650) * C152113) * C50873 +
            ((C75633 + C75632) * C152184 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C152167 -
           (((C75627 + C75626) * C152113 + (C74990 + C74991) * C152184) *
                C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                C50873) *
               C151954) *
              C151849 * C739 +
          ((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                C50873 +
            ((C74992 + C74993) * C152184 + (C77237 + C77236) * C152113) *
                C152087) *
               C151954 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C152167) *
              C151849 * C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C152167 -
           (((C82898 + C82899) * C152113 + (C74998 + C74999) * C152184) *
                C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C152184) *
                C50873) *
               C151954) *
              C151849 * C741 +
          ((((C83440 + C83441) * C152184 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C50873 +
            ((C83168 + C83169) * C152184 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C152184) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C152184) *
                C50873) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C152184 +
              (C82888 + C82889) * C152113) *
                 C50873 +
             ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C152184) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C152184) *
                 C50873) *
                C151954) *
               C1259 +
           (((C83828 * C152184 + C84577 * C152113) * C50873 +
             (C84578 * C152184 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
                C152167) *
               C1260 +
           (((C73968 * C152184 + C84578 * C152113) * C50873 +
             ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
                C152167 -
            (((C75632 + C75633) * C152113 + (C75631 + C75630) * C152184) *
                 C152087 +
             (C84579 * C152113 + C75586 * C152184) * C50873) *
                C151954) *
               C152208) *
              C152152 +
          (((((C82892 + C82893) * C152184 + (C82894 + C82895) * C152113) *
                 C50873 +
             (C83830 * C152184 + (C77237 + C77236) * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C152184) *
                 C50873) *
                C152167) *
               C1259 +
           ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
             ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C152184) * C152087 +
             ((C77236 + C77237) * C152113 + C83831 * C152184) * C50873) *
                C151954) *
               C1260 +
           (((C76134 * C152184 + (C77235 + C77234) * C152113) * C50873 +
             ((C76147 + C76146) * C152184 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                 C152087 +
             (C85224 * C152113 + C73969 * C152184) * C50873) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C73613 * C550 + C74197 + C74197 + C152145 * C574 + C73615 * C549 +
             C74196 + C74196 + C151795 * C573) *
                C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
               C152087) *
              C151867 * C151849 * C129 -
          (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
               C152087 +
           ((C73615 * C548 + C74205 + C74205 + C151795 * C572 + C73613 * C549 +
             C74204 + C74204 + C152145 * C573) *
                C152113 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152184) *
               C50873) *
              C151867 * C151849 * C130 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152184 +
            (C73613 * C548 + C74221 + C74221 + C152145 * C572 + C73615 * C547 +
             C74220 + C74220 + C151795 * C571) *
                C152113) *
               C50873 +
           ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
               C152087) *
              C151867 * C151849 * C131 -
          (((C73615 * C1087 + C74641 + C74641 + C151795 * C1099 +
             C73613 * C1086 + C74640 + C74640 + C152145 * C1098) *
                C152113 +
            (C74441 + C74440) * C152184) *
               C152087 +
           ((C73615 * C555 + C74639 + C74639 + C151795 * C579 + C73613 * C547 +
             C74638 + C74638 + C152145 * C571) *
                C152113 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152184) *
               C50873) *
              C151867 * C151849 * C132 +
          (((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
             C73643 + C73643 + C151795 * C163) *
                C152184 +
            (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
             C82245 + C82245 + C151795 * C581) *
                C152113) *
               C50873 +
           ((C73613 * C346 + C73644 + C73644 + C152145 * C370 + C73615 * C348 +
             C73645 + C73645 + C151795 * C372) *
                C152184 +
            (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
             C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C73613 * C550 + C74197 + C74197 + C152145 * C574 + C73615 * C549 +
              C74196 + C74196 + C151795 * C573) *
                 C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + (C74991 + C74990) * C152113) *
                C152087) *
               C151867 * C152255 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            ((C74990 + C74991) * C152113 + (C73951 + C73950) * C152184) *
                C50873) *
               C151867 * C152239 +
           ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C73956 + C73957) * C152184 + (C74992 + C74993) * C152113) *
                C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C152239 -
           (((C74993 + C74992) * C152113 + (C73957 + C73956) * C152184) *
                C152087 +
            ((C73615 * C548 + C74205 + C74205 + C151795 * C572 + C73613 * C549 +
              C74204 + C74204 + C152145 * C573) *
                 C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C152255 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152208) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C73613 * C548 + C74221 + C74221 + C152145 * C572 + C73615 * C547 +
              C74220 + C74220 + C151795 * C571) *
                 C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + (C74999 + C74998) * C152113) *
                C152087) *
               C151867 * C152255 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            ((C74998 + C74999) * C152113 + (C73963 + C73962) * C152184) *
                C50873) *
               C151867 * C152239 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152184 +
             (C82888 + C82889) * C152113) *
                C50873 +
            ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
            ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C152184 + C83830 * C152113) * C50873 +
            ((C73958 + C73959) * C152184 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C152184) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152184) *
                C50873) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C152184) *
                C152087 +
            ((C74995 + C74994) * C152113 + C73969 * C152184) * C50873) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152184 +
             (C82896 + C82897) * C152113) *
                C50873 +
            ((C73962 + C73963) * C152184 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C152184) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C152184) * C50873) *
               C151867 * C1260 +
           ((C73970 * C152184 + (C74997 + C74996) * C152113) * C50873 +
            ((C73967 + C73966) * C152184 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152184 +
            (C82888 + C82889) * C152113) *
               C50873 +
           ((C73950 + C73951) * C152184 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C152184) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C152184) * C50873) *
              C151867 * C1348 +
          ((C73968 * C152184 + (C74989 + C74988) * C152113) * C50873 +
           ((C73955 + C73954) * C152184 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C152184) *
               C152087 +
           ((C75631 + C75630) * C152113 + C75340 * C152184) * C50873) *
              C151867 * C1350 +
          ((C75366 * C152184 + (C76355 + C76354) * C152113) * C50873 +
           ((C75365 + C75364) * C152184 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[225] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C151908 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C151915 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C151867 * C3585) *
                       C151826 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C151915 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C151908 -
                    ((C53105 + C53106 + C53107) * C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C3585) *
                       C151835 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C151908 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C151915 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C3585) *
                       C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C151908 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C151915 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C151867 * C3585) *
                       C151826 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C151915 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C151908 -
                    (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                     C59672 * C59428) *
                        C151867 * C3585) *
                       C151835 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C151908 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C151915 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C3585) *
                       C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[226] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C152167 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C151908 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C152167) *
                        C151915 +
                    (((C51225 + C51224 + C51223) * C152049 * C50873 +
                      (C52618 + C52619 + C52620) * C152049 * C152087) *
                         C152167 -
                     ((C53625 + C53626 + C53627) * C152049 * C152087 +
                      (C52892 + C52891 + C52890) * C152049 * C50873) *
                         C151954) *
                        C3585) *
                       C3241 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C152167) *
                        C151908 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C152167 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151915 +
                    (((C53415 + C53414 + C53413) * C152049 * C50873 +
                      (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                       C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                       C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                          C152049 * C152087) *
                         C151954 -
                     ((C53105 + C53106 + C53107) * C152049 * C152087 +
                      (C51231 + C51230 + C51229) * C152049 * C50873) *
                         C152167) *
                        C3585) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C152167 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C151908 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C152167) *
                        C151915 +
                    ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                      C60626 * C59431) *
                         C152167 -
                     (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                      C60375 * C59428) *
                         C151954) *
                        C3585) *
                       C3241 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C152167) *
                        C151908 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C152167 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C151915 +
                    ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
                      (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) *
                          C152049 * C59431) *
                         C151954 -
                     (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                      C59672 * C59428) *
                         C152167) *
                        C3585) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[227] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C152262 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C152258 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C151867 * C152244 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C151867 * C152218) *
                       C3241 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C152258 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C152262 -
                    ((C53105 + C53106 + C53107) * C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152244 +
                    ((C53107 + C53106 + C53105) * C152049 * C50873 +
                     (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
                      C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
                      C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                         C152049 * C152087) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C3101 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C151912) *
                       C152261 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C3101) *
                       C152254 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C3101 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C151912) *
                       C152237 +
                   (((C51701 + C51702 + C51703) * C152049 * C50873 +
                     (C50875 * C345 + C51692 + C51692 + C50870 * C369 +
                      C50877 * C347 + C51693 + C51693 + C50871 * C371 +
                      C50879 * C349 + C51694 + C51694 + C50872 * C373) *
                         C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C151867 * C3101) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C152256 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C152241 +
                     ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                       C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                       C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                          C152049 * C50873 +
                      (C52887 + C52888 + C52889) * C152049 * C152087) *
                         C152211) *
                        C3101 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C152241 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C152256 -
                     ((C52893 + C52894 + C52895) * C152049 * C152087 +
                      (C52889 + C52888 + C52887) * C152049 * C50873) *
                         C152211) *
                        C151912) *
                       C3241 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C152241 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C152256 -
                     ((C54503 + C54504 + C54505) * C152049 * C152087 +
                      (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                       C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                       C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                          C152049 * C50873) *
                         C152211) *
                        C3101 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C152256 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C152241 +
                     ((C54505 + C54504 + C54503) * C152049 * C50873 +
                      (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
                       C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
                       C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                          C152049 * C152087) *
                         C152211) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C3101 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C151912) *
                       C152261 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C151912 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C3101) *
                       C152254 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C3101 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C151912) *
                       C152237 +
                   ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
                     (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) *
                         C152049 * C59431) *
                        C151867 * C151912 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C151867 * C3101) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152262 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C152258 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C151867 * C152244 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C151867 * C152218) *
                       C3241 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C152258 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152262 -
                    (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                     C59672 * C59428) *
                        C151867 * C152244 +
                    (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
                     (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) *
                         C152049 * C59431) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C152256 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C152241 +
                     ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                          C152049 * C59428 +
                      C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                         C152211) *
                        C3101 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C152241 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C152256 -
                     (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                      C60805 * C59428) *
                         C152211) *
                        C151912) *
                       C3241 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C152241 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C152256 -
                     (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
                      (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                          C152049 * C59428) *
                         C152211) *
                        C3101 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C152256 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C152241 +
                     (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
                      (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) *
                          C152049 * C59431) *
                         C152211) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[228] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C152167 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C3101 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C152167) *
                        C151912) *
                       C151826 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C152167) *
                        C3101 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C152167 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151912) *
                       C151835 +
                   ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                       C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                       C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                          C152049 * C50873 +
                      (C51232 + C51233 + C51234) * C152049 * C152087) *
                         C152167 -
                     ((C52245 + C52246 + C52247) * C152049 * C152087 +
                      (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                       C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                       C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                          C152049 * C50873) *
                         C151954) *
                        C3101 +
                    (((C52247 + C52246 + C52245) * C152049 * C50873 +
                      (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                       C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                       C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51235 + C51236 + C51237) * C152049 * C152087 +
                      (C51234 + C51233 + C51232) * C152049 * C50873) *
                         C152167) *
                        C151912) *
                       C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C152167 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C3101 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C152167) *
                        C151912) *
                       C151826 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C152167) *
                        C3101 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C152167 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C151912) *
                       C151835 +
                   ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                          C152049 * C59428 +
                      C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                         C152167 -
                     (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                      (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                          C152049 * C59428) *
                         C151954) *
                        C3101 +
                    ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
                      (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) *
                          C152049 * C59431) *
                         C151954 -
                     (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                      C59675 * C59428) *
                         C152167) *
                        C151912) *
                       C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[229] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C3101 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C151912) *
                       C152261 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C3101) *
                       C152254 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C3101 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C151912) *
                       C152237 +
                   (((C51701 + C51702 + C51703) * C152049 * C50873 +
                     (C50875 * C345 + C51692 + C51692 + C50870 * C369 +
                      C50877 * C347 + C51693 + C51693 + C50871 * C371 +
                      C50879 * C349 + C51694 + C51694 + C50872 * C373) *
                         C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C151867 * C3101) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C152262 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C152258 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C151867 * C152244 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C151867 * C152218) *
                       C3241 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C152258 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C152262 -
                    ((C53105 + C53106 + C53107) * C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152244 +
                    ((C53107 + C53106 + C53105) * C152049 * C50873 +
                     (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
                      C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
                      C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                         C152049 * C152087) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C3101 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C151912) *
                       C152261 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C151912 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C3101) *
                       C152254 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C3101 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C151912) *
                       C152237 +
                   ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
                     (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) *
                         C152049 * C59431) *
                        C151867 * C151912 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C151867 * C3101) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152262 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C152258 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C151867 * C152244 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C151867 * C152218) *
                       C3241 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C152258 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152262 -
                    (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                     C59672 * C59428) *
                        C151867 * C152244 +
                    (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
                     (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) *
                         C152049 * C59431) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[230] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C4107 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C151908 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C4107) *
                        C151915 +
                    (((C51225 + C51224 + C51223) * C152049 * C50873 +
                      (C52618 + C52619 + C52620) * C152049 * C152087) *
                         C4107 -
                     ((C53625 + C53626 + C53627) * C152049 * C152087 +
                      (C52892 + C52891 + C52890) * C152049 * C50873) *
                         C151954) *
                        C3585) *
                       C152152 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C4107) *
                        C151908 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C4107 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151915 +
                    (((C53415 + C53414 + C53413) * C152049 * C50873 +
                      (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                       C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                       C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                          C152049 * C152087) *
                         C151954 -
                     ((C53105 + C53106 + C53107) * C152049 * C152087 +
                      (C51231 + C51230 + C51229) * C152049 * C50873) *
                         C4107) *
                        C3585) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C4107 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C151908 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C4107) *
                        C151915 +
                    ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                      C60626 * C59431) *
                         C4107 -
                     (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                      C60375 * C59428) *
                         C151954) *
                        C3585) *
                       C152152 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C4107) *
                        C151908 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C4107 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C151915 +
                    ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
                      (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) *
                          C152049 * C59431) *
                         C151954 -
                     (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                      C59672 * C59428) *
                         C4107) *
                        C3585) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[231] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151950 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151957 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C4779) *
                       C151908 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C151957 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151950 -
                    ((C52893 + C52894 + C52895) * C152049 * C152087 +
                     (C52889 + C52888 + C52887) * C152049 * C50873) *
                        C4779) *
                       C151915 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C151950 -
                    ((C53625 + C53626 + C53627) * C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C151957 +
                    ((C52895 + C52894 + C52893) * C152049 * C50873 +
                     (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                      C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                      C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                         C152049 * C152087) *
                        C4779) *
                       C3585) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151950 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151957 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C4779) *
                       C151908 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C151957 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151950 -
                    (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                     C60805 * C59428) *
                        C4779) *
                       C151915 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C151950 -
                    (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                     C60375 * C59428) *
                        C151957 +
                    (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
                     (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) *
                         C152049 * C59431) *
                        C4779) *
                       C3585) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[232] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C4107 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C152262 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C151954 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C4107) *
                       C152258 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C4107 -
                    ((C53625 + C53626 + C53627) * C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C151954) *
                       C152244 +
                   (((C53627 + C53626 + C53625) * C152049 * C50873 +
                     (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
                      C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
                      C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                         C152049 * C152087) *
                        C151954 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C4107) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C4107 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C3101 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C4107) *
                        C151912) *
                       C152252 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C4107) *
                        C3101 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C4107 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151912) *
                       C152235 +
                   ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                       C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                       C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                          C152049 * C50873 +
                      (C51232 + C51233 + C51234) * C152049 * C152087) *
                         C4107 -
                     ((C52245 + C52246 + C52247) * C152049 * C152087 +
                      (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                       C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                       C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                          C152049 * C50873) *
                         C151954) *
                        C3101 +
                    (((C52247 + C52246 + C52245) * C152049 * C50873 +
                      (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                       C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                       C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51235 + C51236 + C51237) * C152049 * C152087 +
                      (C51234 + C51233 + C51232) * C152049 * C50873) *
                         C4107) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152263 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C152260 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152247 -
                    ((C54915 + C54916 + C54917) * C152049 * C152087 +
                     (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
                      C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                      C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                         C152049 * C50873) *
                        C152224) *
                       C3101 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C152260 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C152263 -
                    ((C52893 + C52894 + C52895) * C152049 * C152087 +
                     (C52889 + C52888 + C52887) * C152049 * C50873) *
                        C152247 +
                    ((C54917 + C54916 + C54915) * C152049 * C50873 +
                     (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
                      C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
                      C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                         C152049 * C152087) *
                        C152224) *
                       C151912) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C4107 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C3101 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C4107) *
                        C151912) *
                       C152252 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C4107) *
                        C3101 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C4107 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C151912) *
                       C152235 +
                   ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                          C152049 * C59428 +
                      C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                         C4107 -
                     (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                      (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                          C152049 * C59428) *
                         C151954) *
                        C3101 +
                    ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
                      (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) *
                          C152049 * C59431) *
                         C151954 -
                     (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                      C59675 * C59428) *
                         C4107) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C4107 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C152262 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C151954 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C4107) *
                       C152258 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C4107 -
                    (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                     C60375 * C59428) *
                        C151954) *
                       C152244 +
                   ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
                     (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) *
                         C152049 * C59431) *
                        C151954 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C4107) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152263 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C152260 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152247 -
                    (C62169 * C59431 + C62170 * C59430 + C62171 * C59429 +
                     (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) *
                         C152049 * C59428) *
                        C152224) *
                       C3101 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C152260 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C152263 -
                    (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                     C60805 * C59428) *
                        C152247 +
                    (C62171 * C59428 + C62170 * C59429 + C62169 * C59430 +
                     (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) *
                         C152049 * C59431) *
                        C152224) *
                       C151912) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[233] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C151950 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151957 +
                     ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                       C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                       C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                          C152049 * C50873 +
                      (C52887 + C52888 + C52889) * C152049 * C152087) *
                         C4779) *
                        C3101 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151957 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C151950 -
                     ((C52893 + C52894 + C52895) * C152049 * C152087 +
                      (C52889 + C52888 + C52887) * C152049 * C50873) *
                         C4779) *
                        C151912) *
                       C152152 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151957 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C151950 -
                     ((C54503 + C54504 + C54505) * C152049 * C152087 +
                      (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                       C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                       C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                          C152049 * C50873) *
                         C4779) *
                        C3101 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C151950 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151957 +
                     ((C54505 + C54504 + C54503) * C152049 * C50873 +
                      (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
                       C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
                       C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                          C152049 * C152087) *
                         C4779) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C151950 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151957 +
                     ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                          C152049 * C59428 +
                      C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                         C4779) *
                        C3101 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151957 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C151950 -
                     (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                      C60805 * C59428) *
                         C4779) *
                        C151912) *
                       C152152 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151957 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C151950 -
                     (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
                      (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                          C152049 * C59428) *
                         C4779) *
                        C3101 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C151950 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151957 +
                     (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
                      (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) *
                          C152049 * C59431) *
                         C4779) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[234] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C4107 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C3101 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C4107) *
                        C151912) *
                       C152252 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C4107) *
                        C3101 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C4107 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151912) *
                       C152235 +
                   ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                       C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                       C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                          C152049 * C50873 +
                      (C51232 + C51233 + C51234) * C152049 * C152087) *
                         C4107 -
                     ((C52245 + C52246 + C52247) * C152049 * C152087 +
                      (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                       C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                       C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                          C152049 * C50873) *
                         C151954) *
                        C3101 +
                    (((C52247 + C52246 + C52245) * C152049 * C50873 +
                      (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                       C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                       C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51235 + C51236 + C51237) * C152049 * C152087 +
                      (C51234 + C51233 + C51232) * C152049 * C50873) *
                         C4107) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C4107 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C152262 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C151954 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C4107) *
                       C152258 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C4107 -
                    ((C53625 + C53626 + C53627) * C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C151954) *
                       C152244 +
                   (((C53627 + C53626 + C53625) * C152049 * C50873 +
                     (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
                      C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
                      C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                         C152049 * C152087) *
                        C151954 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C4107) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C4107 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C3101 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C4107) *
                        C151912) *
                       C152252 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C4107) *
                        C3101 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C4107 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C151912) *
                       C152235 +
                   ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                          C152049 * C59428 +
                      C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                         C4107 -
                     (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                      (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                          C152049 * C59428) *
                         C151954) *
                        C3101 +
                    ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
                      (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) *
                          C152049 * C59431) *
                         C151954 -
                     (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                      C59675 * C59428) *
                         C4107) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C4107 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C152262 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C151954 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C4107) *
                       C152258 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C4107 -
                    (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                     C60375 * C59428) *
                        C151954) *
                       C152244 +
                   ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
                     (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) *
                         C152049 * C59431) *
                        C151954 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C4107) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[235] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C1709 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C1710 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C151867 * C1711 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C151867 * C152218) *
                       C152152 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C1710 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C1709 -
                    ((C53105 + C53106 + C53107) * C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C1711 +
                    ((C53107 + C53106 + C53105) * C152049 * C50873 +
                     (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
                      C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
                      C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                         C152049 * C152087) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C152166 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C151912) *
                       C739 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C152166) *
                       C740 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C152166 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C151912) *
                       C741 +
                   (((C51701 + C51702 + C51703) * C152049 * C50873 +
                     (C50875 * C345 + C51692 + C51692 + C50870 * C369 +
                      C50877 * C347 + C51693 + C51693 + C50871 * C371 +
                      C50879 * C349 + C51694 + C51694 + C50872 * C373) *
                         C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C151867 * C152166) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C2215 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C2216 +
                     ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                       C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                       C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                          C152049 * C50873 +
                      (C52887 + C52888 + C52889) * C152049 * C152087) *
                         C152211) *
                        C152166 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C2216 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C2215 -
                     ((C52893 + C52894 + C52895) * C152049 * C152087 +
                      (C52889 + C52888 + C52887) * C152049 * C50873) *
                         C152211) *
                        C151912) *
                       C152152 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C2216 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C2215 -
                     ((C54503 + C54504 + C54505) * C152049 * C152087 +
                      (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                       C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                       C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                          C152049 * C50873) *
                         C152211) *
                        C152166 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C2215 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C2216 +
                     ((C54505 + C54504 + C54503) * C152049 * C50873 +
                      (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
                       C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
                       C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                          C152049 * C152087) *
                         C152211) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152166 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C151912) *
                       C739 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C151912 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152166) *
                       C740 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C152166 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C151912) *
                       C741 +
                   ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
                     (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) *
                         C152049 * C59431) *
                        C151867 * C151912 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C151867 * C152166) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C1709 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C1710 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C151867 * C1711 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C151867 * C152218) *
                       C152152 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C1710 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C1709 -
                    (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                     C59672 * C59428) *
                        C151867 * C1711 +
                    (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
                     (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) *
                         C152049 * C59431) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C2215 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C2216 +
                     ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                          C152049 * C59428 +
                      C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                         C152211) *
                        C152166 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C2216 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C2215 -
                     (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                      C60805 * C59428) *
                         C152211) *
                        C151912) *
                       C152152 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C2216 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C2215 -
                     (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
                      (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                          C152049 * C59428) *
                         C152211) *
                        C152166 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C2215 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C2216 +
                     (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
                      (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) *
                          C152049 * C59431) *
                         C152211) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[236] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152167 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C1709 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C151954 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C152167) *
                       C1710 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C152167 -
                    ((C53625 + C53626 + C53627) * C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C151954) *
                       C1711 +
                   (((C53627 + C53626 + C53625) * C152049 * C50873 +
                     (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
                      C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
                      C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                         C152049 * C152087) *
                        C151954 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C152167) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C152167 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C152166 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C50875 * C1538 + C52200 + C52200 + C50870 * C1562 +
                       C50877 * C1537 + C52201 + C52201 + C50871 * C1561 +
                       C50879 * C1536 + C52202 + C52202 + C50872 * C1560) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C152167) *
                        C151912) *
                       C335 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C152167) *
                        C152166 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C152167 -
                     ((C50879 * C1535 + C52209 + C52209 + C50872 * C1559 +
                       C50877 * C1536 + C52210 + C52210 + C50871 * C1560 +
                       C50875 * C1537 + C52211 + C52211 + C50870 * C1561) *
                          C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151912) *
                       C336 +
                   ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                       C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                       C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                          C152049 * C50873 +
                      (C51232 + C51233 + C51234) * C152049 * C152087) *
                         C152167 -
                     ((C52245 + C52246 + C52247) * C152049 * C152087 +
                      (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                       C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                       C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                          C152049 * C50873) *
                         C151954) *
                        C152166 +
                    (((C52247 + C52246 + C52245) * C152049 * C50873 +
                      (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                       C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                       C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51235 + C51236 + C51237) * C152049 * C152087 +
                      (C51234 + C51233 + C51232) * C152049 * C50873) *
                         C152167) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C2814 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C2815 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C2816 -
                    ((C54915 + C54916 + C54917) * C152049 * C152087 +
                     (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
                      C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                      C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                         C152049 * C50873) *
                        C152224) *
                       C152166 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C2815 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C2814 -
                    ((C52893 + C52894 + C52895) * C152049 * C152087 +
                     (C52889 + C52888 + C52887) * C152049 * C50873) *
                        C2816 +
                    ((C54917 + C54916 + C54915) * C152049 * C50873 +
                     (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
                      C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
                      C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                         C152049 * C152087) *
                        C152224) *
                       C151912) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C152167 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C152166 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      (C59432 * C8076 + C60332 + C60332 + C151790 * C8088) *
                          C152049 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C152167) *
                        C151912) *
                       C335 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C152167) *
                        C152166 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C152167 -
                     ((C59432 * C8075 + C60339 + C60339 + C151790 * C8087) *
                          C152049 * C59431 +
                      C60379 * C59430 + C60378 * C59429 + C60377 * C59428) *
                         C151954) *
                        C151912) *
                       C336 +
                   ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                          C152049 * C59428 +
                      C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                         C152167 -
                     (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                      (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                          C152049 * C59428) *
                         C151954) *
                        C152166 +
                    ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
                      (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) *
                          C152049 * C59431) *
                         C151954 -
                     (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                      C59675 * C59428) *
                         C152167) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152167 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C1709 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C151954 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C152167) *
                       C1710 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C152167 -
                    (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                     C60375 * C59428) *
                        C151954) *
                       C1711 +
                   ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
                     (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) *
                         C152049 * C59431) *
                        C151954 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C152167) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C2814 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C2815 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C2816 -
                    (C62169 * C59431 + C62170 * C59430 + C62171 * C59429 +
                     (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) *
                         C152049 * C59428) *
                        C152224) *
                       C152166 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C2815 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C2814 -
                    (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                     C60805 * C59428) *
                        C2816 +
                    (C62171 * C59428 + C62170 * C59429 + C62169 * C59430 +
                     (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) *
                         C152049 * C59431) *
                        C152224) *
                       C151912) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[237] += (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                      (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                         C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                         C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                            C152049 * C50873 +
                        (C50875 * C341 + C50885 + C50885 + C50870 * C365 +
                         C50877 * C340 + C50886 + C50886 + C50871 * C364 +
                         C50879 * C339 + C50887 + C50887 + C50872 * C363) *
                            C152049 * C152087) *
                           C151867 * C151849 * C129 -
                       ((C50879 * C338 + C50888 + C50888 + C50872 * C362 +
                         C50877 * C339 + C50889 + C50889 + C50871 * C363 +
                         C50875 * C340 + C50890 + C50890 + C50870 * C364) *
                            C152049 * C152087 +
                        (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                         C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                         C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                            C152049 * C50873) *
                           C151867 * C151849 * C130 +
                       ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                         C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                         C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                            C152049 * C50873 +
                        (C50875 * C339 + C50897 + C50897 + C50870 * C363 +
                         C50877 * C338 + C50898 + C50898 + C50871 * C362 +
                         C50879 * C346 + C50899 + C50899 + C50872 * C370) *
                            C152049 * C152087) *
                           C151867 * C151849 * C131 -
                       ((C50879 * C348 + C50900 + C50900 + C50872 * C372 +
                         C50877 * C346 + C50901 + C50901 + C50871 * C370 +
                         C50875 * C338 + C50902 + C50902 + C50870 * C362) *
                            C152049 * C152087 +
                        (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                         C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                         C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                            C152049 * C50873) *
                           C151867 * C151849 * C132 +
                       ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                         C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                         C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                            C152049 * C50873 +
                        (C50875 * C346 + C50909 + C50909 + C50870 * C370 +
                         C50877 * C348 + C50910 + C50910 + C50871 * C372 +
                         C50879 * C743 + C50911 + C50911 + C50872 * C745) *
                            C152049 * C152087) *
                           C151867 * C151849 * C133) +
                  std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                      ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                          C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                          C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                             C152049 * C50873 +
                         (C51220 + C51221 + C51222) * C152049 * C152087) *
                            C151867 * C152255 -
                        ((C51223 + C51224 + C51225) * C152049 * C152087 +
                         (C51222 + C51221 + C51220) * C152049 * C50873) *
                            C151867 * C152239 +
                        ((C51225 + C51224 + C51223) * C152049 * C50873 +
                         (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                          C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                          C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                             C152049 * C152087) *
                            C151867 * C152208) *
                           C335 +
                       (((C51226 + C51227 + C51228) * C152049 * C50873 +
                         (C51229 + C51230 + C51231) * C152049 * C152087) *
                            C151867 * C152239 -
                        ((C51228 + C51227 + C51226) * C152049 * C152087 +
                         (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                          C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                          C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                             C152049 * C50873) *
                            C151867 * C152255 -
                        ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                          C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                          C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                             C152049 * C152087 +
                         (C51231 + C51230 + C51229) * C152049 * C50873) *
                            C151867 * C152208) *
                           C336 +
                       (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                          C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                          C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                             C152049 * C50873 +
                         (C51232 + C51233 + C51234) * C152049 * C152087) *
                            C151867 * C152255 -
                        ((C51235 + C51236 + C51237) * C152049 * C152087 +
                         (C51234 + C51233 + C51232) * C152049 * C50873) *
                            C151867 * C152239 +
                        ((C51237 + C51236 + C51235) * C152049 * C50873 +
                         (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                          C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                          C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                             C152049 * C152087) *
                            C151867 * C152208) *
                           C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152256 -
                    ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
                      C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
                      C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                         C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C152241 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C50875 * C1534 + C51465 + C51465 + C50870 * C1558 +
                      C50877 * C1533 + C51466 + C51466 + C50871 * C1557 +
                      C50879 * C1532 + C51467 + C51467 + C50872 * C1556) *
                         C152049 * C152087) *
                        C152211) *
                       C151849 * C335 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
                      C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
                      C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                         C152049 * C152087) *
                        C152241 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C152256 -
                    ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
                      C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
                      C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                         C152049 * C152087 +
                     (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                      C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                      C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                         C152049 * C50873) *
                        C152211) *
                       C151849 * C336 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C152256 -
                    ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
                      C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
                      C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                         C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C152241 +
                    ((C50875 * C553 + C51486 + C51486 + C50870 * C577 +
                      C50877 * C554 + C51487 + C51487 + C50871 * C578 +
                      C50879 * C556 + C51488 + C51488 + C50872 * C580) *
                         C152049 * C50873 +
                     (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                      C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                      C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                         C152049 * C152087) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                      C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                      C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152252 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C1260 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C1259 -
                    ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                      C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                      C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                         C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152208) *
                       C152235 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C51220 + C51221 + C51222) * C152049 * C152087) *
                       C151867 * C1347 -
                   ((C51223 + C51224 + C51225) * C152049 * C152087 +
                    (C51222 + C51221 + C51220) * C152049 * C50873) *
                       C151867 * C1348 +
                   ((C51225 + C51224 + C51223) * C152049 * C50873 +
                    (C52618 + C52619 + C52620) * C152049 * C152087) *
                       C151867 * C1349 -
                   ((C52621 + C52622 + C52623) * C152049 * C152087 +
                    (C52620 + C52619 + C52618) * C152049 * C50873) *
                       C151867 * C1350 +
                   ((C52623 + C52622 + C52621) * C152049 * C50873 +
                    (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 +
                     C50877 * C7815 + C52604 + C52604 + C50871 * C7823 +
                     C50879 * C8335 + C52605 + C52605 + C50872 * C8337) *
                        C152049 * C152087) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152256 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C152241 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152211) *
                       C1259 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C152241 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C152256 -
                    ((C52893 + C52894 + C52895) * C152049 * C152087 +
                     (C52889 + C52888 + C52887) * C152049 * C50873) *
                        C152211) *
                       C1260 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C152256 -
                    ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
                      C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
                      C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                         C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C152241 +
                    ((C52895 + C52894 + C52893) * C152049 * C50873 +
                     (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                      C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                      C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                         C152049 * C152087) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C2215 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C2216 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152211) *
                       C151849 * C152252 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C52242 + C52243 + C52244) * C152049 * C152087) *
                        C2216 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C2215 -
                    ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
                      C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
                      C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                         C152049 * C152087 +
                     (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                      C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                      C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                         C152049 * C50873) *
                        C152211) *
                       C151849 * C152235 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C2215 -
                    ((C52245 + C52246 + C52247) * C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C2216 +
                    ((C50875 * C553 + C51486 + C51486 + C50870 * C577 +
                      C50877 * C554 + C51487 + C51487 + C50871 * C578 +
                      C50879 * C556 + C51488 + C51488 + C50872 * C580) *
                         C152049 * C50873 +
                     (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                      C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                      C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                         C152049 * C152087) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C2215 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C2216 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152211) *
                       C152255 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C2216 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C2215 -
                    ((C52893 + C52894 + C52895) * C152049 * C152087 +
                     (C52889 + C52888 + C52887) * C152049 * C50873) *
                        C152211) *
                       C152239 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C2215 -
                    ((C53625 + C53626 + C53627) * C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C2216 +
                    ((C52895 + C52894 + C52893) * C152049 * C50873 +
                     (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                      C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                      C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                         C152049 * C152087) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C51220 + C51221 + C51222) * C152049 * C152087) *
                       C2446 -
                   ((C52239 + C52240 + C52241) * C152049 * C152087 +
                    (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                     C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                     C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                        C152049 * C50873) *
                       C2447 +
                   ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                     C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                     C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                        C152049 * C50873 +
                    (C52887 + C52888 + C52889) * C152049 * C152087) *
                       C2448 -
                   ((C50879 * C2957 + C54186 + C54186 + C50872 * C2965 +
                     C50877 * C2956 + C54187 + C54187 + C50871 * C2964 +
                     C50875 * C2955 + C54188 + C54188 + C50870 * C2963) *
                        C152049 * C152087 +
                    (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
                     C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                     C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                        C152049 * C50873) *
                       C2449 +
                   ((C50875 * C2455 + C54192 + C54192 + C50870 * C2471 +
                     C50877 * C2456 + C54193 + C54193 + C50871 * C2472 +
                     C50879 * C2457 + C54194 + C54194 + C50872 * C2473) *
                        C152049 * C50873 +
                    (C50875 * C9433 + C54195 + C54195 + C50870 * C9445 +
                     C50877 * C9434 + C54196 + C54196 + C50871 * C9446 +
                     C50879 * C18132 + C54197 + C54197 + C50872 * C18134) *
                        C152049 * C152087) *
                       C2450) *
                  C151849 * C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    (C59432 * C341 + C59436 + C59436 + C151790 * C365) *
                        C152049 * C59429 +
                    (C59432 * C342 + C59437 + C59437 + C151790 * C366) *
                        C152049 * C59430 +
                    (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) *
                        C152049 * C59431) *
                       C151867 * C151849 * C129 -
                   ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) *
                        C152049 * C59431 +
                    (C59432 * C343 + C59440 + C59440 + C151790 * C367) *
                        C152049 * C59430 +
                    (C59432 * C340 + C59441 + C59441 + C151790 * C364) *
                        C152049 * C59429 +
                    (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                        C152049 * C59428) *
                       C151867 * C151849 * C130 +
                   ((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                        C152049 * C59428 +
                    (C59432 * C339 + C59444 + C59444 + C151790 * C363) *
                        C152049 * C59429 +
                    (C59432 * C344 + C59445 + C59445 + C151790 * C368) *
                        C152049 * C59430 +
                    (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) *
                        C152049 * C59431) *
                       C151867 * C151849 * C131 -
                   ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) *
                        C152049 * C59431 +
                    (C59432 * C345 + C59448 + C59448 + C151790 * C369) *
                        C152049 * C59430 +
                    (C59432 * C338 + C59449 + C59449 + C151790 * C362) *
                        C152049 * C59429 +
                    (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                        C152049 * C59428) *
                       C151867 * C151849 * C132 +
                   ((C59432 * C146 + C59451 + C59451 + C151790 * C162) *
                        C152049 * C59428 +
                    (C59432 * C346 + C59452 + C59452 + C151790 * C370) *
                        C152049 * C59429 +
                    (C59432 * C347 + C59453 + C59453 + C151790 * C371) *
                        C152049 * C59430 +
                    (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) *
                        C152049 * C59431) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152255 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C152239 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C335 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C152239 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152255 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C336 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C152255 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C152239 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152256 -
                    ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) *
                         C152049 * C59431 +
                     (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) *
                         C152049 * C59430 +
                     (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) *
                         C152049 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C152241 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     (C59432 * C1534 + C59830 + C59830 + C151790 * C1558) *
                         C152049 * C59429 +
                     (C59432 * C1539 + C59831 + C59831 + C151790 * C1563) *
                         C152049 * C59430 +
                     (C59432 * C8074 + C59832 + C59832 + C151790 * C8086) *
                         C152049 * C59431) *
                        C152211) *
                       C151849 * C335 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) *
                         C152049 * C59429 +
                     (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) *
                         C152049 * C59430 +
                     (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) *
                         C152049 * C59431) *
                        C152241 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C152256 -
                    ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) *
                         C152049 * C59431 +
                     (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) *
                         C152049 * C59430 +
                     (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) *
                         C152049 * C59429 +
                     (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                         C152049 * C59428) *
                        C152211) *
                       C151849 * C336 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C152256 -
                    ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) *
                         C152049 * C59431 +
                     (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) *
                         C152049 * C59430 +
                     (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) *
                         C152049 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C152241 +
                    ((C59432 * C553 + C59845 + C59845 + C151790 * C577) *
                         C152049 * C59428 +
                     (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) *
                         C152049 * C59429 +
                     (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) *
                         C152049 * C59430 +
                     (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) *
                         C152049 * C59431) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C1259 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C1260 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152252 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C1260 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C1259 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C152235 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C1259 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C1260 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                       C151867 * C1347 -
                   (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                    C59667 * C59428) *
                       C151867 * C1348 +
                   (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                    C60626 * C59431) *
                       C151867 * C1349 -
                   (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                    C59669 * C59428) *
                       C151867 * C1350 +
                   (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
                    (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) *
                        C152049 * C59431) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152256 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C152241 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152211) *
                       C1259 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C152241 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C152256 -
                    (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                     C60805 * C59428) *
                        C152211) *
                       C1260 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C152256 -
                    ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) *
                         C152049 * C59431 +
                     C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
                        C152241 +
                    (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
                     (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) *
                         C152049 * C59431) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C2215 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C2216 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152211) *
                       C151849 * C152252 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                        C2216 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C2215 -
                    ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) *
                         C152049 * C59431 +
                     (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) *
                         C152049 * C59430 +
                     (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) *
                         C152049 * C59429 +
                     (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                         C152049 * C59428) *
                        C152211) *
                       C151849 * C152235 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C2215 -
                    (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C2216 +
                    ((C59432 * C553 + C59845 + C59845 + C151790 * C577) *
                         C152049 * C59428 +
                     (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) *
                         C152049 * C59429 +
                     (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) *
                         C152049 * C59430 +
                     (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) *
                         C152049 * C59431) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C2215 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C2216 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152211) *
                       C152255 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C2216 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C2215 -
                    (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                     C60805 * C59428) *
                        C152211) *
                       C152239 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C2215 -
                    (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                     C60375 * C59428) *
                        C2216 +
                    (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
                     (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) *
                         C152049 * C59431) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                       C2446 -
                   (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                    (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                        C152049 * C59428) *
                       C2447 +
                   ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                        C152049 * C59428 +
                    C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                       C2448 -
                   ((C59432 * C10173 + C61665 + C61665 + C151790 * C10177) *
                        C152049 * C59431 +
                    (C59432 * C9432 + C61666 + C61666 + C151790 * C9444) *
                        C152049 * C59430 +
                    (C59432 * C2955 + C61667 + C61667 + C151790 * C2963) *
                        C152049 * C59429 +
                    (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) *
                        C152049 * C59428) *
                       C2449 +
                   ((C59432 * C2455 + C61669 + C61669 + C151790 * C2471) *
                        C152049 * C59428 +
                    (C59432 * C9433 + C61670 + C61670 + C151790 * C9445) *
                        C152049 * C59429 +
                    (C59432 * C9435 + C61671 + C61671 + C151790 * C9447) *
                        C152049 * C59430 +
                    (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) *
                        C152049 * C59431) *
                       C2450) *
                  C151849 * C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[238] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C152167 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C1259 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C152167) *
                        C1260 +
                    (((C51225 + C51224 + C51223) * C152049 * C50873 +
                      (C52618 + C52619 + C52620) * C152049 * C152087) *
                         C152167 -
                     ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
                       C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
                       C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                          C152049 * C152087 +
                      (C52892 + C52891 + C52890) * C152049 * C50873) *
                         C151954) *
                        C152208) *
                       C152152 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C152167) *
                        C1259 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C152167 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C1260 +
                    (((C53415 + C53414 + C53413) * C152049 * C50873 +
                      (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                       C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                       C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                          C152049 * C152087) *
                         C151954 -
                     ((C53105 + C53106 + C53107) * C152049 * C152087 +
                      (C51231 + C51230 + C51229) * C152049 * C50873) *
                         C152167) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152167 -
                    ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
                      C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
                      C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                         C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C739 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
                      C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
                      C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                         C152049 * C152087) *
                        C151954 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C152167) *
                       C151849 * C740 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C152167 -
                    ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
                      C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
                      C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                         C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C741 +
                   (((C50875 * C547 + C51898 + C51898 + C50870 * C571 +
                      C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                      C50879 * C557 + C51900 + C51900 + C50872 * C581) *
                         C152049 * C50873 +
                     (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                      C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                      C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                         C152049 * C152087) *
                        C151954 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C152167) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C2814 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C2815 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C2816 -
                    ((C50879 * C2957 + C54186 + C54186 + C50872 * C2965 +
                      C50877 * C2956 + C54187 + C54187 + C50871 * C2964 +
                      C50875 * C2955 + C54188 + C54188 + C50870 * C2963) *
                         C152049 * C152087 +
                     (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
                      C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                      C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                         C152049 * C50873) *
                        C152224) *
                       C151849 * C152152 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C52242 + C52243 + C52244) * C152049 * C152087) *
                        C2815 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C2814 -
                    ((C54503 + C54504 + C54505) * C152049 * C152087 +
                     (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                      C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                      C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                         C152049 * C50873) *
                        C2816 +
                    ((C50875 * C2453 + C54700 + C54700 + C50870 * C2469 +
                      C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
                      C50879 * C2451 + C54702 + C54702 + C50872 * C2467) *
                         C152049 * C50873 +
                     (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
                      C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
                      C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                         C152049 * C152087) *
                        C152224) *
                       C151849 * C151832)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152167 -
                    ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) *
                         C152049 * C59431 +
                     (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) *
                         C152049 * C59430 +
                     (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) *
                         C152049 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C739 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) *
                         C152049 * C59429 +
                     (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) *
                         C152049 * C59430 +
                     (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) *
                         C152049 * C59431) *
                        C151954 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C152167) *
                       C151849 * C740 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C152167 -
                    ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) *
                         C152049 * C59431 +
                     (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) *
                         C152049 * C59430 +
                     (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) *
                         C152049 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C741 +
                   (((C59432 * C547 + C60128 + C60128 + C151790 * C571) *
                         C152049 * C59428 +
                     (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) *
                         C152049 * C59429 +
                     (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) *
                         C152049 * C59430 +
                     (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) *
                         C152049 * C59431) *
                        C151954 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C152167) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C152167 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C1259 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C152167) *
                        C1260 +
                    ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                      C60626 * C59431) *
                         C152167 -
                     ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) *
                          C152049 * C59431 +
                      C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
                         C151954) *
                        C152208) *
                       C152152 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C152167) *
                        C1259 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C152167 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C1260 +
                    ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
                      (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) *
                          C152049 * C59431) *
                         C151954 -
                     (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                      C59672 * C59428) *
                         C152167) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C2814 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C2815 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C2816 -
                    ((C59432 * C10173 + C61665 + C61665 + C151790 * C10177) *
                         C152049 * C59431 +
                     (C59432 * C9432 + C61666 + C61666 + C151790 * C9444) *
                         C152049 * C59430 +
                     (C59432 * C2955 + C61667 + C61667 + C151790 * C2963) *
                         C152049 * C59429 +
                     (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) *
                         C152049 * C59428) *
                        C152224) *
                       C151849 * C152152 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                        C2815 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C2814 -
                    (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
                     (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                         C152049 * C59428) *
                        C2816 +
                    ((C59432 * C2453 + C62016 + C62016 + C151790 * C2469) *
                         C152049 * C59428 +
                     (C59432 * C2956 + C62017 + C62017 + C151790 * C2964) *
                         C152049 * C59429 +
                     (C59432 * C9431 + C62018 + C62018 + C151790 * C9443) *
                         C152049 * C59430 +
                     (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                         C152049 * C59431) *
                        C152224) *
                       C151849 * C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[239] += (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C152255 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C152239 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                      C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                      C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C335 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C152239 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C152255 -
                    ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                      C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                      C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                         C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152208) *
                       C336 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C152255 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C152239 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C50875 * C341 + C50885 + C50885 + C50870 * C365 +
                     C50877 * C340 + C50886 + C50886 + C50871 * C364 +
                     C50879 * C339 + C50887 + C50887 + C50872 * C363) *
                        C152049 * C152087) *
                       C151867 * C151849 * C129 -
                   ((C50879 * C338 + C50888 + C50888 + C50872 * C362 +
                     C50877 * C339 + C50889 + C50889 + C50871 * C363 +
                     C50875 * C340 + C50890 + C50890 + C50870 * C364) *
                        C152049 * C152087 +
                    (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                     C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                     C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                        C152049 * C50873) *
                       C151867 * C151849 * C130 +
                   ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                     C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                     C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                        C152049 * C50873 +
                    (C50875 * C339 + C50897 + C50897 + C50870 * C363 +
                     C50877 * C338 + C50898 + C50898 + C50871 * C362 +
                     C50879 * C346 + C50899 + C50899 + C50872 * C370) *
                        C152049 * C152087) *
                       C151867 * C151849 * C131 -
                   ((C50879 * C348 + C50900 + C50900 + C50872 * C372 +
                     C50877 * C346 + C50901 + C50901 + C50871 * C370 +
                     C50875 * C338 + C50902 + C50902 + C50870 * C362) *
                        C152049 * C152087 +
                    (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                     C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                     C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                        C152049 * C50873) *
                       C151867 * C151849 * C132 +
                   ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                     C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                     C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                        C152049 * C50873 +
                    (C50875 * C346 + C50909 + C50909 + C50870 * C370 +
                     C50877 * C348 + C50910 + C50910 + C50871 * C372 +
                     C50879 * C743 + C50911 + C50911 + C50872 * C745) *
                        C152049 * C152087) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                      C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                      C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152252 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C1260 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C1259 -
                    ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                      C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                      C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                         C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152208) *
                       C152235 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C51220 + C51221 + C51222) * C152049 * C152087) *
                       C151867 * C1347 -
                   ((C51223 + C51224 + C51225) * C152049 * C152087 +
                    (C51222 + C51221 + C51220) * C152049 * C50873) *
                       C151867 * C1348 +
                   ((C51225 + C51224 + C51223) * C152049 * C50873 +
                    (C52618 + C52619 + C52620) * C152049 * C152087) *
                       C151867 * C1349 -
                   ((C52621 + C52622 + C52623) * C152049 * C152087 +
                    (C52620 + C52619 + C52618) * C152049 * C50873) *
                       C151867 * C1350 +
                   ((C52623 + C52622 + C52621) * C152049 * C50873 +
                    (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 +
                     C50877 * C7815 + C52604 + C52604 + C50871 * C7823 +
                     C50879 * C8335 + C52605 + C52605 + C50872 * C8337) *
                        C152049 * C152087) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C2215 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C2216 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152211) *
                       C151849 * C152252 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C52242 + C52243 + C52244) * C152049 * C152087) *
                        C2216 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C2215 -
                    ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
                      C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
                      C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                         C152049 * C152087 +
                     (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                      C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                      C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                         C152049 * C50873) *
                        C152211) *
                       C151849 * C152235 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C2215 -
                    ((C52245 + C52246 + C52247) * C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C2216 +
                    ((C50875 * C553 + C51486 + C51486 + C50870 * C577 +
                      C50877 * C554 + C51487 + C51487 + C50871 * C578 +
                      C50879 * C556 + C51488 + C51488 + C50872 * C580) *
                         C152049 * C50873 +
                     (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                      C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                      C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                         C152049 * C152087) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C2215 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C2216 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152211) *
                       C152255 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C2216 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C2215 -
                    ((C52893 + C52894 + C52895) * C152049 * C152087 +
                     (C52889 + C52888 + C52887) * C152049 * C50873) *
                        C152211) *
                       C152239 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C2215 -
                    ((C53625 + C53626 + C53627) * C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C2216 +
                    ((C52895 + C52894 + C52893) * C152049 * C50873 +
                     (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                      C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                      C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                         C152049 * C152087) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    (C59432 * C341 + C59436 + C59436 + C151790 * C365) *
                        C152049 * C59429 +
                    (C59432 * C342 + C59437 + C59437 + C151790 * C366) *
                        C152049 * C59430 +
                    (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) *
                        C152049 * C59431) *
                       C151867 * C151849 * C129 -
                   ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) *
                        C152049 * C59431 +
                    (C59432 * C343 + C59440 + C59440 + C151790 * C367) *
                        C152049 * C59430 +
                    (C59432 * C340 + C59441 + C59441 + C151790 * C364) *
                        C152049 * C59429 +
                    (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                        C152049 * C59428) *
                       C151867 * C151849 * C130 +
                   ((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                        C152049 * C59428 +
                    (C59432 * C339 + C59444 + C59444 + C151790 * C363) *
                        C152049 * C59429 +
                    (C59432 * C344 + C59445 + C59445 + C151790 * C368) *
                        C152049 * C59430 +
                    (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) *
                        C152049 * C59431) *
                       C151867 * C151849 * C131 -
                   ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) *
                        C152049 * C59431 +
                    (C59432 * C345 + C59448 + C59448 + C151790 * C369) *
                        C152049 * C59430 +
                    (C59432 * C338 + C59449 + C59449 + C151790 * C362) *
                        C152049 * C59429 +
                    (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                        C152049 * C59428) *
                       C151867 * C151849 * C132 +
                   ((C59432 * C146 + C59451 + C59451 + C151790 * C162) *
                        C152049 * C59428 +
                    (C59432 * C346 + C59452 + C59452 + C151790 * C370) *
                        C152049 * C59429 +
                    (C59432 * C347 + C59453 + C59453 + C151790 * C371) *
                        C152049 * C59430 +
                    (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) *
                        C152049 * C59431) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152255 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C152239 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C335 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C152239 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152255 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C336 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C152255 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C152239 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C1259 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C1260 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152252 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C1260 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C1259 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C152235 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C1259 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C1260 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                       C151867 * C1347 -
                   (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                    C59667 * C59428) *
                       C151867 * C1348 +
                   (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                    C60626 * C59431) *
                       C151867 * C1349 -
                   (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                    C59669 * C59428) *
                       C151867 * C1350 +
                   (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
                    (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) *
                        C152049 * C59431) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C2215 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C2216 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152211) *
                       C151849 * C152252 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                        C2216 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C2215 -
                    ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) *
                         C152049 * C59431 +
                     (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) *
                         C152049 * C59430 +
                     (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) *
                         C152049 * C59429 +
                     (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                         C152049 * C59428) *
                        C152211) *
                       C151849 * C152235 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C2215 -
                    (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C2216 +
                    ((C59432 * C553 + C59845 + C59845 + C151790 * C577) *
                         C152049 * C59428 +
                     (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) *
                         C152049 * C59429 +
                     (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) *
                         C152049 * C59430 +
                     (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) *
                         C152049 * C59431) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C2215 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C2216 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152211) *
                       C152255 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C2216 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C2215 -
                    (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                     C60805 * C59428) *
                        C152211) *
                       C152239 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C2215 -
                    (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                     C60375 * C59428) *
                        C2216 +
                    (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
                     (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) *
                         C152049 * C59431) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[240] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C4107 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C152166 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C4107) *
                        C151912) *
                       C151826 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C4107) *
                        C152166 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C4107 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151912) *
                       C151835 +
                   ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                       C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                       C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                          C152049 * C50873 +
                      (C51232 + C51233 + C51234) * C152049 * C152087) *
                         C4107 -
                     ((C52245 + C52246 + C52247) * C152049 * C152087 +
                      (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                       C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                       C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                          C152049 * C50873) *
                         C151954) *
                        C152166 +
                    (((C52247 + C52246 + C52245) * C152049 * C50873 +
                      (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                       C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                       C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51235 + C51236 + C51237) * C152049 * C152087 +
                      (C51234 + C51233 + C51232) * C152049 * C50873) *
                         C4107) *
                        C151912) *
                       C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C4107 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C152166 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C4107) *
                        C151912) *
                       C151826 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C4107) *
                        C152166 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C4107 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C151912) *
                       C151835 +
                   ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                          C152049 * C59428 +
                      C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                         C4107 -
                     (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                      (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                          C152049 * C59428) *
                         C151954) *
                        C152166 +
                    ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
                      (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) *
                          C152049 * C59431) *
                         C151954 -
                     (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                      C59675 * C59428) *
                         C4107) *
                        C151912) *
                       C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[241] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C151950 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151957 +
                     ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                       C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                       C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                          C152049 * C50873 +
                      (C52887 + C52888 + C52889) * C152049 * C152087) *
                         C4779) *
                        C152166 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151957 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C151950 -
                     ((C52893 + C52894 + C52895) * C152049 * C152087 +
                      (C52889 + C52888 + C52887) * C152049 * C50873) *
                         C4779) *
                        C151912) *
                       C3241 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151957 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C151950 -
                     ((C54503 + C54504 + C54505) * C152049 * C152087 +
                      (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                       C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                       C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                          C152049 * C50873) *
                         C4779) *
                        C152166 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C151950 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151957 +
                     ((C54505 + C54504 + C54503) * C152049 * C50873 +
                      (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
                       C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
                       C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                          C152049 * C152087) *
                         C4779) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C151950 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151957 +
                     ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                          C152049 * C59428 +
                      C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                         C4779) *
                        C152166 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151957 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C151950 -
                     (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                      C60805 * C59428) *
                         C4779) *
                        C151912) *
                       C3241 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151957 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C151950 -
                     (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
                      (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                          C152049 * C59428) *
                         C4779) *
                        C152166 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C151950 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151957 +
                     (C61885 * C59428 + C61884 * C59429 + C61883 * C59430 +
                      (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) *
                          C152049 * C59431) *
                         C4779) *
                        C151912) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[242] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C4107 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C152255 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C4107) *
                        C152239 +
                    (((C51225 + C51224 + C51223) * C152049 * C50873 +
                      (C52618 + C52619 + C52620) * C152049 * C152087) *
                         C4107 -
                     ((C53625 + C53626 + C53627) * C152049 * C152087 +
                      (C52892 + C52891 + C52890) * C152049 * C50873) *
                         C151954) *
                        C152208) *
                       C3241 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C4107) *
                        C152255 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C4107 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C152239 +
                    (((C53415 + C53414 + C53413) * C152049 * C50873 +
                      (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                       C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                       C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                          C152049 * C152087) *
                         C151954 -
                     ((C53105 + C53106 + C53107) * C152049 * C152087 +
                      (C51231 + C51230 + C51229) * C152049 * C50873) *
                         C4107) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C4107 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C152261 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C52242 + C52243 + C52244) * C152049 * C152087) *
                        C151954 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C4107) *
                       C151849 * C152254 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C4107 -
                    ((C52245 + C52246 + C52247) * C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C152237 +
                   (((C50875 * C547 + C51898 + C51898 + C50870 * C571 +
                      C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                      C50879 * C557 + C51900 + C51900 + C50872 * C581) *
                         C152049 * C50873 +
                     (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                      C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                      C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                         C152049 * C152087) *
                        C151954 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C4107) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152263 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C152260 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152247 -
                    ((C54915 + C54916 + C54917) * C152049 * C152087 +
                     (C50879 * C2452 + C54189 + C54189 + C50872 * C2468 +
                      C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                      C50875 * C2454 + C54191 + C54191 + C50870 * C2470) *
                         C152049 * C50873) *
                        C152224) *
                       C151849 * C3241 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C52242 + C52243 + C52244) * C152049 * C152087) *
                        C152260 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C152263 -
                    ((C54503 + C54504 + C54505) * C152049 * C152087 +
                     (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                      C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                      C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                         C152049 * C50873) *
                        C152247 +
                    ((C50875 * C2453 + C54700 + C54700 + C50870 * C2469 +
                      C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
                      C50879 * C2451 + C54702 + C54702 + C50872 * C2467) *
                         C152049 * C50873 +
                     (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
                      C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
                      C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                         C152049 * C152087) *
                        C152224) *
                       C151849 * C151832)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C4107 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C152261 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                        C151954 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C4107) *
                       C151849 * C152254 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C4107 -
                    (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C152237 +
                   (((C59432 * C547 + C60128 + C60128 + C151790 * C571) *
                         C152049 * C59428 +
                     (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) *
                         C152049 * C59429 +
                     (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) *
                         C152049 * C59430 +
                     (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) *
                         C152049 * C59431) *
                        C151954 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C4107) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C4107 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C152255 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C4107) *
                        C152239 +
                    ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                      C60626 * C59431) *
                         C4107 -
                     (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                      C60375 * C59428) *
                         C151954) *
                        C152208) *
                       C3241 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C4107) *
                        C152255 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C4107 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C152239 +
                    ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
                      (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) *
                          C152049 * C59431) *
                         C151954 -
                     (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                      C59672 * C59428) *
                         C4107) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152263 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C152260 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152247 -
                    (C62169 * C59431 + C62170 * C59430 + C62171 * C59429 +
                     (C59432 * C2454 + C61668 + C61668 + C151790 * C2470) *
                         C152049 * C59428) *
                        C152224) *
                       C151849 * C3241 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                        C152260 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C152263 -
                    (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
                     (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                         C152049 * C59428) *
                        C152247 +
                    ((C59432 * C2453 + C62016 + C62016 + C151790 * C2469) *
                         C152049 * C59428 +
                     (C59432 * C2956 + C62017 + C62017 + C151790 * C2964) *
                         C152049 * C59429 +
                     (C59432 * C9431 + C62018 + C62018 + C151790 * C9443) *
                         C152049 * C59430 +
                     (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                         C152049 * C59431) *
                        C152224) *
                       C151849 * C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[243] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151950 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151957 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C4779) *
                       C151849 * C151826 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C52242 + C52243 + C52244) * C152049 * C152087) *
                        C151957 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151950 -
                    ((C54503 + C54504 + C54505) * C152049 * C152087 +
                     (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                      C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                      C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                         C152049 * C50873) *
                        C4779) *
                       C151849 * C151835 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151950 -
                    ((C52245 + C52246 + C52247) * C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C151957 +
                    ((C50875 * C553 + C51486 + C51486 + C50870 * C577 +
                      C50877 * C554 + C51487 + C51487 + C50871 * C578 +
                      C50879 * C556 + C51488 + C51488 + C50872 * C580) *
                         C152049 * C50873 +
                     (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                      C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                      C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                         C152049 * C152087) *
                        C4779) *
                       C151849 * C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151950 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151957 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C4779) *
                       C151849 * C151826 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                        C151957 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151950 -
                    (C61883 * C59431 + C61884 * C59430 + C61885 * C59429 +
                     (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                         C152049 * C59428) *
                        C4779) *
                       C151849 * C151835 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151950 -
                    (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C151957 +
                    ((C59432 * C553 + C59845 + C59845 + C151790 * C577) *
                         C152049 * C59428 +
                     (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) *
                         C152049 * C59429 +
                     (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) *
                         C152049 * C59430 +
                     (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) *
                         C152049 * C59431) *
                        C4779) *
                       C151849 * C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[244] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C4107 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C152261 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C52242 + C52243 + C52244) * C152049 * C152087) *
                        C151954 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C4107) *
                       C151849 * C152254 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C4107 -
                    ((C52245 + C52246 + C52247) * C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C152237 +
                   (((C50875 * C547 + C51898 + C51898 + C50870 * C571 +
                      C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                      C50879 * C557 + C51900 + C51900 + C50872 * C581) *
                         C152049 * C50873 +
                     (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                      C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                      C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                         C152049 * C152087) *
                        C151954 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C4107) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C4107 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C152255 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C4107) *
                        C152239 +
                    (((C51225 + C51224 + C51223) * C152049 * C50873 +
                      (C52618 + C52619 + C52620) * C152049 * C152087) *
                         C4107 -
                     ((C53625 + C53626 + C53627) * C152049 * C152087 +
                      (C52892 + C52891 + C52890) * C152049 * C50873) *
                         C151954) *
                        C152208) *
                       C3241 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C4107) *
                        C152255 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C4107 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C152239 +
                    (((C53415 + C53414 + C53413) * C152049 * C50873 +
                      (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                       C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                       C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                          C152049 * C152087) *
                         C151954 -
                     ((C53105 + C53106 + C53107) * C152049 * C152087 +
                      (C51231 + C51230 + C51229) * C152049 * C50873) *
                         C4107) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C4107 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C152261 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                        C151954 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C4107) *
                       C151849 * C152254 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C4107 -
                    (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C152237 +
                   (((C59432 * C547 + C60128 + C60128 + C151790 * C571) *
                         C152049 * C59428 +
                     (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) *
                         C152049 * C59429 +
                     (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) *
                         C152049 * C59430 +
                     (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) *
                         C152049 * C59431) *
                        C151954 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C4107) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C4107 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C152255 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C4107) *
                        C152239 +
                    ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                      C60626 * C59431) *
                         C4107 -
                     (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                      C60375 * C59428) *
                         C151954) *
                        C152208) *
                       C3241 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C4107) *
                        C152255 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C4107 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C152239 +
                    ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
                      (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) *
                          C152049 * C59431) *
                         C151954 -
                     (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                      C59672 * C59428) *
                         C4107) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[245] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C152166 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C151912) *
                       C739 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C152166) *
                       C740 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C152166 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C151912) *
                       C741 +
                   (((C51701 + C51702 + C51703) * C152049 * C50873 +
                     (C50875 * C345 + C51692 + C51692 + C50870 * C369 +
                      C50877 * C347 + C51693 + C51693 + C50871 * C371 +
                      C50879 * C349 + C51694 + C51694 + C50872 * C373) *
                         C152049 * C152087) *
                        C151867 * C151912 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C151867 * C152166) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C1709 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C1710 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C151867 * C1711 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C151867 * C152218) *
                       C152152 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C1710 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C1709 -
                    ((C53105 + C53106 + C53107) * C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C1711 +
                    ((C53107 + C53106 + C53105) * C152049 * C50873 +
                     (C50875 * C1358 + C53096 + C53096 + C50870 * C1374 +
                      C50877 * C1359 + C53097 + C53097 + C50871 * C1375 +
                      C50879 * C1360 + C53098 + C53098 + C50872 * C1376) *
                         C152049 * C152087) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152166 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C151912) *
                       C739 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C151912 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152166) *
                       C740 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C152166 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C151912) *
                       C741 +
                   ((C59995 * C59428 + C59996 * C59429 + C59997 * C59430 +
                     (C59432 * C1360 + C59985 + C59985 + C151790 * C1376) *
                         C152049 * C59431) *
                        C151867 * C151912 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C151867 * C152166) *
                       C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C1709 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C1710 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C151867 * C1711 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C151867 * C152218) *
                       C152152 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C1710 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C1709 -
                    (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                     C59672 * C59428) *
                        C151867 * C1711 +
                    (C59673 * C59428 + C59674 * C59429 + C60946 * C59430 +
                     (C59432 * C7818 + C60942 + C60942 + C151790 * C7826) *
                         C152049 * C59431) *
                        C151867 * C152218) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[246] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C152167 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C152166 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C50875 * C1538 + C52200 + C52200 + C50870 * C1562 +
                       C50877 * C1537 + C52201 + C52201 + C50871 * C1561 +
                       C50879 * C1536 + C52202 + C52202 + C50872 * C1560) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C152167) *
                        C151912) *
                       C335 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C152167) *
                        C152166 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C152167 -
                     ((C50879 * C1535 + C52209 + C52209 + C50872 * C1559 +
                       C50877 * C1536 + C52210 + C52210 + C50871 * C1560 +
                       C50875 * C1537 + C52211 + C52211 + C50870 * C1561) *
                          C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C151912) *
                       C336 +
                   ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                       C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                       C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                          C152049 * C50873 +
                      (C51232 + C51233 + C51234) * C152049 * C152087) *
                         C152167 -
                     ((C52245 + C52246 + C52247) * C152049 * C152087 +
                      (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                       C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                       C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                          C152049 * C50873) *
                         C151954) *
                        C152166 +
                    (((C52247 + C52246 + C52245) * C152049 * C50873 +
                      (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                       C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                       C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                          C152049 * C152087) *
                         C151954 -
                     ((C51235 + C51236 + C51237) * C152049 * C152087 +
                      (C51234 + C51233 + C51232) * C152049 * C50873) *
                         C152167) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152167 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C1709 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C151954 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C152167) *
                       C1710 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C152167 -
                    ((C53625 + C53626 + C53627) * C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C151954) *
                       C1711 +
                   (((C53627 + C53626 + C53625) * C152049 * C50873 +
                     (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
                      C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
                      C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                         C152049 * C152087) *
                        C151954 -
                    ((C52621 + C52622 + C52623) * C152049 * C152087 +
                     (C52620 + C52619 + C52618) * C152049 * C50873) *
                        C152167) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C152167 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C152166 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      (C59432 * C8076 + C60332 + C60332 + C151790 * C8088) *
                          C152049 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C152167) *
                        C151912) *
                       C335 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C152167) *
                        C152166 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C152167 -
                     ((C59432 * C8075 + C60339 + C60339 + C151790 * C8087) *
                          C152049 * C59431 +
                      C60379 * C59430 + C60378 * C59429 + C60377 * C59428) *
                         C151954) *
                        C151912) *
                       C336 +
                   ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                          C152049 * C59428 +
                      C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                         C152167 -
                     (C60380 * C59431 + C60381 * C59430 + C60382 * C59429 +
                      (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                          C152049 * C59428) *
                         C151954) *
                        C152166 +
                    ((C60382 * C59428 + C60381 * C59429 + C60380 * C59430 +
                      (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) *
                          C152049 * C59431) *
                         C151954 -
                     (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                      C59675 * C59428) *
                         C152167) *
                        C151912) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152167 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C1709 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C151954 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C152167) *
                       C1710 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C152167 -
                    (C61287 * C59431 + C60808 * C59430 + C60374 * C59429 +
                     C60375 * C59428) *
                        C151954) *
                       C1711 +
                   ((C60374 * C59428 + C60808 * C59429 + C61287 * C59430 +
                     (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) *
                         C152049 * C59431) *
                        C151954 -
                    (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                     C59669 * C59428) *
                        C152167) *
                       C152218) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[247] += (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C152255 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C152239 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                      C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                      C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C335 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C152239 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C152255 -
                    ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                      C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                      C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                         C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152208) *
                       C336 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C152255 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C152239 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C50875 * C341 + C50885 + C50885 + C50870 * C365 +
                     C50877 * C340 + C50886 + C50886 + C50871 * C364 +
                     C50879 * C339 + C50887 + C50887 + C50872 * C363) *
                        C152049 * C152087) *
                       C151867 * C151849 * C129 -
                   ((C50879 * C338 + C50888 + C50888 + C50872 * C362 +
                     C50877 * C339 + C50889 + C50889 + C50871 * C363 +
                     C50875 * C340 + C50890 + C50890 + C50870 * C364) *
                        C152049 * C152087 +
                    (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                     C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                     C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                        C152049 * C50873) *
                       C151867 * C151849 * C130 +
                   ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                     C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                     C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                        C152049 * C50873 +
                    (C50875 * C339 + C50897 + C50897 + C50870 * C363 +
                     C50877 * C338 + C50898 + C50898 + C50871 * C362 +
                     C50879 * C346 + C50899 + C50899 + C50872 * C370) *
                        C152049 * C152087) *
                       C151867 * C151849 * C131 -
                   ((C50879 * C348 + C50900 + C50900 + C50872 * C372 +
                     C50877 * C346 + C50901 + C50901 + C50871 * C370 +
                     C50875 * C338 + C50902 + C50902 + C50870 * C362) *
                        C152049 * C152087 +
                    (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                     C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                     C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                        C152049 * C50873) *
                       C151867 * C151849 * C132 +
                   ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                     C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                     C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                        C152049 * C50873 +
                    (C50875 * C346 + C50909 + C50909 + C50870 * C370 +
                     C50877 * C348 + C50910 + C50910 + C50871 * C372 +
                     C50879 * C743 + C50911 + C50911 + C50872 * C745) *
                        C152049 * C152087) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152256 -
                    ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
                      C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
                      C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                         C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C152241 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C50875 * C1534 + C51465 + C51465 + C50870 * C1558 +
                      C50877 * C1533 + C51466 + C51466 + C50871 * C1557 +
                      C50879 * C1532 + C51467 + C51467 + C50872 * C1556) *
                         C152049 * C152087) *
                        C152211) *
                       C151849 * C335 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
                      C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
                      C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                         C152049 * C152087) *
                        C152241 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C152256 -
                    ((C50879 * C1531 + C51474 + C51474 + C50872 * C1555 +
                      C50877 * C1532 + C51475 + C51475 + C50871 * C1556 +
                      C50875 * C1533 + C51476 + C51476 + C50870 * C1557) *
                         C152049 * C152087 +
                     (C50879 * C554 + C51477 + C51477 + C50872 * C578 +
                      C50877 * C553 + C51478 + C51478 + C50871 * C577 +
                      C50875 * C552 + C51479 + C51479 + C50870 * C576) *
                         C152049 * C50873) *
                        C152211) *
                       C151849 * C336 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C152256 -
                    ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
                      C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
                      C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                         C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C152241 +
                    ((C50875 * C553 + C51486 + C51486 + C50870 * C577 +
                      C50877 * C554 + C51487 + C51487 + C50871 * C578 +
                      C50879 * C556 + C51488 + C51488 + C50872 * C580) *
                         C152049 * C50873 +
                     (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                      C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                      C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                         C152049 * C152087) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                      C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                      C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152252 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C1260 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C1259 -
                    ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                      C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                      C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                         C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152208) *
                       C152235 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C51220 + C51221 + C51222) * C152049 * C152087) *
                       C151867 * C1347 -
                   ((C51223 + C51224 + C51225) * C152049 * C152087 +
                    (C51222 + C51221 + C51220) * C152049 * C50873) *
                       C151867 * C1348 +
                   ((C51225 + C51224 + C51223) * C152049 * C50873 +
                    (C52618 + C52619 + C52620) * C152049 * C152087) *
                       C151867 * C1349 -
                   ((C52621 + C52622 + C52623) * C152049 * C152087 +
                    (C52620 + C52619 + C52618) * C152049 * C50873) *
                       C151867 * C1350 +
                   ((C52623 + C52622 + C52621) * C152049 * C50873 +
                    (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 +
                     C50877 * C7815 + C52604 + C52604 + C50871 * C7823 +
                     C50879 * C8335 + C52605 + C52605 + C50872 * C8337) *
                        C152049 * C152087) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152256 -
                    ((C52239 + C52240 + C52241) * C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C152241 +
                    ((C50875 * C551 + C51462 + C51462 + C50870 * C575 +
                      C50877 * C552 + C51463 + C51463 + C50871 * C576 +
                      C50879 * C553 + C51464 + C51464 + C50872 * C577) *
                         C152049 * C50873 +
                     (C52887 + C52888 + C52889) * C152049 * C152087) *
                        C152211) *
                       C1259 +
                   (((C52241 + C52240 + C52239) * C152049 * C50873 +
                     (C52890 + C52891 + C52892) * C152049 * C152087) *
                        C152241 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C152256 -
                    ((C52893 + C52894 + C52895) * C152049 * C152087 +
                     (C52889 + C52888 + C52887) * C152049 * C50873) *
                        C152211) *
                       C1260 +
                   (((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C52618 + C52619 + C52620) * C152049 * C152087) *
                        C152256 -
                    ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
                      C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
                      C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                         C152049 * C152087 +
                     (C52892 + C52891 + C52890) * C152049 * C50873) *
                        C152241 +
                    ((C52895 + C52894 + C52893) * C152049 * C50873 +
                     (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                      C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                      C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                         C152049 * C152087) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    (C59432 * C341 + C59436 + C59436 + C151790 * C365) *
                        C152049 * C59429 +
                    (C59432 * C342 + C59437 + C59437 + C151790 * C366) *
                        C152049 * C59430 +
                    (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) *
                        C152049 * C59431) *
                       C151867 * C151849 * C129 -
                   ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) *
                        C152049 * C59431 +
                    (C59432 * C343 + C59440 + C59440 + C151790 * C367) *
                        C152049 * C59430 +
                    (C59432 * C340 + C59441 + C59441 + C151790 * C364) *
                        C152049 * C59429 +
                    (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                        C152049 * C59428) *
                       C151867 * C151849 * C130 +
                   ((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                        C152049 * C59428 +
                    (C59432 * C339 + C59444 + C59444 + C151790 * C363) *
                        C152049 * C59429 +
                    (C59432 * C344 + C59445 + C59445 + C151790 * C368) *
                        C152049 * C59430 +
                    (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) *
                        C152049 * C59431) *
                       C151867 * C151849 * C131 -
                   ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) *
                        C152049 * C59431 +
                    (C59432 * C345 + C59448 + C59448 + C151790 * C369) *
                        C152049 * C59430 +
                    (C59432 * C338 + C59449 + C59449 + C151790 * C362) *
                        C152049 * C59429 +
                    (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                        C152049 * C59428) *
                       C151867 * C151849 * C132 +
                   ((C59432 * C146 + C59451 + C59451 + C151790 * C162) *
                        C152049 * C59428 +
                    (C59432 * C346 + C59452 + C59452 + C151790 * C370) *
                        C152049 * C59429 +
                    (C59432 * C347 + C59453 + C59453 + C151790 * C371) *
                        C152049 * C59430 +
                    (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) *
                        C152049 * C59431) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152255 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C152239 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C335 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C152239 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152255 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C336 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C152255 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C152239 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152256 -
                    ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) *
                         C152049 * C59431 +
                     (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) *
                         C152049 * C59430 +
                     (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) *
                         C152049 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C152241 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     (C59432 * C1534 + C59830 + C59830 + C151790 * C1558) *
                         C152049 * C59429 +
                     (C59432 * C1539 + C59831 + C59831 + C151790 * C1563) *
                         C152049 * C59430 +
                     (C59432 * C8074 + C59832 + C59832 + C151790 * C8086) *
                         C152049 * C59431) *
                        C152211) *
                       C151849 * C335 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) *
                         C152049 * C59429 +
                     (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) *
                         C152049 * C59430 +
                     (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) *
                         C152049 * C59431) *
                        C152241 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C152256 -
                    ((C59432 * C8073 + C59837 + C59837 + C151790 * C8085) *
                         C152049 * C59431 +
                     (C59432 * C1540 + C59838 + C59838 + C151790 * C1564) *
                         C152049 * C59430 +
                     (C59432 * C1533 + C59839 + C59839 + C151790 * C1557) *
                         C152049 * C59429 +
                     (C59432 * C552 + C59840 + C59840 + C151790 * C576) *
                         C152049 * C59428) *
                        C152211) *
                       C151849 * C336 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C152256 -
                    ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) *
                         C152049 * C59431 +
                     (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) *
                         C152049 * C59430 +
                     (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) *
                         C152049 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C152241 +
                    ((C59432 * C553 + C59845 + C59845 + C151790 * C577) *
                         C152049 * C59428 +
                     (C59432 * C1532 + C59846 + C59846 + C151790 * C1556) *
                         C152049 * C59429 +
                     (C59432 * C1541 + C59847 + C59847 + C151790 * C1565) *
                         C152049 * C59430 +
                     (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) *
                         C152049 * C59431) *
                        C152211) *
                       C151849 * C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C1259 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C1260 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152252 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C1260 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C1259 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C152235 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C1259 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C1260 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                       C151867 * C1347 -
                   (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                    C59667 * C59428) *
                       C151867 * C1348 +
                   (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                    C60626 * C59431) *
                       C151867 * C1349 -
                   (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                    C59669 * C59428) *
                       C151867 * C1350 +
                   (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
                    (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) *
                        C152049 * C59431) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152256 -
                    (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C152241 +
                    ((C59432 * C551 + C59829 + C59829 + C151790 * C575) *
                         C152049 * C59428 +
                     C60805 * C59429 + C60806 * C59430 + C60807 * C59431) *
                        C152211) *
                       C1259 +
                   ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                     C60808 * C59431) *
                        C152241 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C152256 -
                    (C60809 * C59431 + C60807 * C59430 + C60806 * C59429 +
                     C60805 * C59428) *
                        C152211) *
                       C1260 +
                   ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     C60626 * C59431) *
                        C152256 -
                    ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) *
                         C152049 * C59431 +
                     C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
                        C152241 +
                    (C60806 * C59428 + C60807 * C59429 + C60809 * C59430 +
                     (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) *
                         C152049 * C59431) *
                        C152211) *
                       C152208) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[248] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C152167 -
                    ((C50879 * C1085 + C51456 + C51456 + C50872 * C1097 +
                      C50877 * C1084 + C51457 + C51457 + C50871 * C1096 +
                      C50875 * C1083 + C51458 + C51458 + C50870 * C1095) *
                         C152049 * C152087 +
                     (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                      C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                      C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C739 +
                   (((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                      C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                      C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                         C152049 * C50873 +
                     (C50875 * C1084 + C51471 + C51471 + C50870 * C1096 +
                      C50877 * C1085 + C51472 + C51472 + C50871 * C1097 +
                      C50879 * C1086 + C51473 + C51473 + C50872 * C1098) *
                         C152049 * C152087) *
                        C151954 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C152167) *
                       C151849 * C740 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C152167 -
                    ((C50879 * C1087 + C51480 + C51480 + C50872 * C1099 +
                      C50877 * C1086 + C51481 + C51481 + C50871 * C1098 +
                      C50875 * C1085 + C51482 + C51482 + C50870 * C1097) *
                         C152049 * C152087 +
                     (C50879 * C555 + C51483 + C51483 + C50872 * C579 +
                      C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                      C50875 * C548 + C51485 + C51485 + C50870 * C572) *
                         C152049 * C50873) *
                        C151954) *
                       C151849 * C741 +
                   (((C50875 * C547 + C51898 + C51898 + C50870 * C571 +
                      C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                      C50879 * C557 + C51900 + C51900 + C50872 * C581) *
                         C152049 * C50873 +
                     (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                      C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                      C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                         C152049 * C152087) *
                        C151954 -
                    ((C51703 + C51702 + C51701) * C152049 * C152087 +
                     (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                      C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                      C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                         C152049 * C50873) *
                        C152167) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                       C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                       C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                          C152049 * C50873 +
                      (C51220 + C51221 + C51222) * C152049 * C152087) *
                         C152167 -
                     ((C52239 + C52240 + C52241) * C152049 * C152087 +
                      (C50879 * C548 + C51459 + C51459 + C50872 * C572 +
                       C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                       C50875 * C550 + C51461 + C51461 + C50870 * C574) *
                          C152049 * C50873) *
                         C151954) *
                        C1259 +
                    (((C52241 + C52240 + C52239) * C152049 * C50873 +
                      (C52890 + C52891 + C52892) * C152049 * C152087) *
                         C151954 -
                     ((C51223 + C51224 + C51225) * C152049 * C152087 +
                      (C51222 + C51221 + C51220) * C152049 * C50873) *
                         C152167) *
                        C1260 +
                    (((C51225 + C51224 + C51223) * C152049 * C50873 +
                      (C52618 + C52619 + C52620) * C152049 * C152087) *
                         C152167 -
                     ((C50879 * C2055 + C52863 + C52863 + C50872 * C2063 +
                       C50877 * C2054 + C52864 + C52864 + C50871 * C2062 +
                       C50875 * C2053 + C52865 + C52865 + C50870 * C2061) *
                          C152049 * C152087 +
                      (C52892 + C52891 + C52890) * C152049 * C50873) *
                         C151954) *
                        C152208) *
                       C152152 +
                   ((((C50875 * C549 + C51468 + C51468 + C50870 * C573 +
                       C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                       C50879 * C547 + C51470 + C51470 + C50872 * C571) *
                          C152049 * C50873 +
                      (C52242 + C52243 + C52244) * C152049 * C152087) *
                         C151954 -
                     ((C51228 + C51227 + C51226) * C152049 * C152087 +
                      (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                       C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                       C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                          C152049 * C50873) *
                         C152167) *
                        C1259 +
                    (((C51226 + C51227 + C51228) * C152049 * C50873 +
                      (C51229 + C51230 + C51231) * C152049 * C152087) *
                         C152167 -
                     ((C53413 + C53414 + C53415) * C152049 * C152087 +
                      (C52244 + C52243 + C52242) * C152049 * C50873) *
                         C151954) *
                        C1260 +
                    (((C53415 + C53414 + C53413) * C152049 * C50873 +
                      (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                       C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                       C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                          C152049 * C152087) *
                         C151954 -
                     ((C53105 + C53106 + C53107) * C152049 * C152087 +
                      (C51231 + C51230 + C51229) * C152049 * C50873) *
                         C152167) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C152167 -
                    ((C59432 * C2053 + C59825 + C59825 + C151790 * C2061) *
                         C152049 * C59431 +
                     (C59432 * C1538 + C59826 + C59826 + C151790 * C1562) *
                         C152049 * C59430 +
                     (C59432 * C1083 + C59827 + C59827 + C151790 * C1095) *
                         C152049 * C59429 +
                     (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C739 +
                   (((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                         C152049 * C59428 +
                     (C59432 * C1084 + C59834 + C59834 + C151790 * C1096) *
                         C152049 * C59429 +
                     (C59432 * C1537 + C59835 + C59835 + C151790 * C1561) *
                         C152049 * C59430 +
                     (C59432 * C2054 + C59836 + C59836 + C151790 * C2062) *
                         C152049 * C59431) *
                        C151954 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C152167) *
                       C151849 * C740 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C152167 -
                    ((C59432 * C2055 + C59841 + C59841 + C151790 * C2063) *
                         C152049 * C59431 +
                     (C59432 * C1536 + C59842 + C59842 + C151790 * C1560) *
                         C152049 * C59430 +
                     (C59432 * C1085 + C59843 + C59843 + C151790 * C1097) *
                         C152049 * C59429 +
                     (C59432 * C548 + C59844 + C59844 + C151790 * C572) *
                         C152049 * C59428) *
                        C151954) *
                       C151849 * C741 +
                   (((C59432 * C547 + C60128 + C60128 + C151790 * C571) *
                         C152049 * C59428 +
                     (C59432 * C1086 + C60129 + C60129 + C151790 * C1098) *
                         C152049 * C59429 +
                     (C59432 * C1535 + C60130 + C60130 + C151790 * C1559) *
                         C152049 * C59430 +
                     (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) *
                         C152049 * C59431) *
                        C151954 -
                    (C59997 * C59431 + C59996 * C59430 + C59995 * C59429 +
                     (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                         C152049 * C59428) *
                        C152167) *
                       C151849 * C152212)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                          C152049 * C59428 +
                      C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                         C152167 -
                     (C60374 * C59431 + C60375 * C59430 + C60376 * C59429 +
                      (C59432 * C550 + C59828 + C59828 + C151790 * C574) *
                          C152049 * C59428) *
                         C151954) *
                        C1259 +
                    ((C60376 * C59428 + C60375 * C59429 + C60374 * C59430 +
                      C60808 * C59431) *
                         C151954 -
                     (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                      C59667 * C59428) *
                         C152167) *
                        C1260 +
                    ((C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                      C60626 * C59431) *
                         C152167 -
                     ((C59432 * C8853 + C60788 + C60788 + C151790 * C8857) *
                          C152049 * C59431 +
                      C60808 * C59430 + C60374 * C59429 + C60375 * C59428) *
                         C151954) *
                        C152208) *
                       C152152 +
                   ((((C59432 * C549 + C59833 + C59833 + C151790 * C573) *
                          C152049 * C59428 +
                      C60377 * C59429 + C60378 * C59430 + C60379 * C59431) *
                         C151954 -
                     (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                      (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                          C152049 * C59428) *
                         C152167) *
                        C1259 +
                    ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                      C59674 * C59431) *
                         C152167 -
                     (C61147 * C59431 + C60379 * C59430 + C60378 * C59429 +
                      C60377 * C59428) *
                         C151954) *
                        C1260 +
                    ((C60378 * C59428 + C60379 * C59429 + C61147 * C59430 +
                      (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) *
                          C152049 * C59431) *
                         C151954 -
                     (C60946 * C59431 + C59674 * C59430 + C59673 * C59429 +
                      C59672 * C59428) *
                         C152167) *
                        C152208) *
                       C151832)) /
                     (p * q * std::sqrt(p + q));
    d2ee[249] += (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C50875 * C341 + C50885 + C50885 + C50870 * C365 +
                     C50877 * C340 + C50886 + C50886 + C50871 * C364 +
                     C50879 * C339 + C50887 + C50887 + C50872 * C363) *
                        C152049 * C152087) *
                       C151867 * C151849 * C129 -
                   ((C50879 * C338 + C50888 + C50888 + C50872 * C362 +
                     C50877 * C339 + C50889 + C50889 + C50871 * C363 +
                     C50875 * C340 + C50890 + C50890 + C50870 * C364) *
                        C152049 * C152087 +
                    (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                     C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                     C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                        C152049 * C50873) *
                       C151867 * C151849 * C130 +
                   ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                     C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                     C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                        C152049 * C50873 +
                    (C50875 * C339 + C50897 + C50897 + C50870 * C363 +
                     C50877 * C338 + C50898 + C50898 + C50871 * C362 +
                     C50879 * C346 + C50899 + C50899 + C50872 * C370) *
                        C152049 * C152087) *
                       C151867 * C151849 * C131 -
                   ((C50879 * C348 + C50900 + C50900 + C50872 * C372 +
                     C50877 * C346 + C50901 + C50901 + C50871 * C370 +
                     C50875 * C338 + C50902 + C50902 + C50870 * C362) *
                        C152049 * C152087 +
                    (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                     C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                     C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                        C152049 * C50873) *
                       C151867 * C151849 * C132 +
                   ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                     C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                     C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                        C152049 * C50873 +
                    (C50875 * C346 + C50909 + C50909 + C50870 * C370 +
                     C50877 * C348 + C50910 + C50910 + C50871 * C372 +
                     C50879 * C743 + C50911 + C50911 + C50872 * C745) *
                        C152049 * C152087) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C152255 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C152239 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                      C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                      C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C335 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C152239 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C152255 -
                    ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                      C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                      C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                         C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152208) *
                       C336 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C152255 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C152239 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                      C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                      C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                         C152049 * C50873 +
                     (C51220 + C51221 + C51222) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51223 + C51224 + C51225) * C152049 * C152087 +
                     (C51222 + C51221 + C51220) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51225 + C51224 + C51223) * C152049 * C50873 +
                     (C50875 * C1356 + C51145 + C51145 + C50870 * C1372 +
                      C50877 * C1355 + C51146 + C51146 + C50871 * C1371 +
                      C50879 * C1354 + C51147 + C51147 + C50872 * C1370) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152252 +
                   (((C51226 + C51227 + C51228) * C152049 * C50873 +
                     (C51229 + C51230 + C51231) * C152049 * C152087) *
                        C151867 * C1260 -
                    ((C51228 + C51227 + C51226) * C152049 * C152087 +
                     (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                      C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                      C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                         C152049 * C50873) *
                        C151867 * C1259 -
                    ((C50879 * C1353 + C51163 + C51163 + C50872 * C1369 +
                      C50877 * C1354 + C51164 + C51164 + C50871 * C1370 +
                      C50875 * C1355 + C51165 + C51165 + C50870 * C1371) *
                         C152049 * C152087 +
                     (C51231 + C51230 + C51229) * C152049 * C50873) *
                        C151867 * C152208) *
                       C152235 +
                   (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                      C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                      C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                         C152049 * C50873 +
                     (C51232 + C51233 + C51234) * C152049 * C152087) *
                        C151867 * C1259 -
                    ((C51235 + C51236 + C51237) * C152049 * C152087 +
                     (C51234 + C51233 + C51232) * C152049 * C50873) *
                        C151867 * C1260 +
                    ((C51237 + C51236 + C51235) * C152049 * C50873 +
                     (C50875 * C1354 + C51181 + C51181 + C50870 * C1370 +
                      C50877 * C1353 + C51182 + C51182 + C50871 * C1369 +
                      C50879 * C1715 + C51183 + C51183 + C50872 * C1717) *
                         C152049 * C152087) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                     C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                     C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                        C152049 * C50873 +
                    (C51220 + C51221 + C51222) * C152049 * C152087) *
                       C151867 * C1347 -
                   ((C51223 + C51224 + C51225) * C152049 * C152087 +
                    (C51222 + C51221 + C51220) * C152049 * C50873) *
                       C151867 * C1348 +
                   ((C51225 + C51224 + C51223) * C152049 * C50873 +
                    (C52618 + C52619 + C52620) * C152049 * C152087) *
                       C151867 * C1349 -
                   ((C52621 + C52622 + C52623) * C152049 * C152087 +
                    (C52620 + C52619 + C52618) * C152049 * C50873) *
                       C151867 * C1350 +
                   ((C52623 + C52622 + C52621) * C152049 * C50873 +
                    (C50875 * C7816 + C52603 + C52603 + C50870 * C7824 +
                     C50877 * C7815 + C52604 + C52604 + C50871 * C7823 +
                     C50879 * C8335 + C52605 + C52605 + C50872 * C8337) *
                        C152049 * C152087) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    (C59432 * C341 + C59436 + C59436 + C151790 * C365) *
                        C152049 * C59429 +
                    (C59432 * C342 + C59437 + C59437 + C151790 * C366) *
                        C152049 * C59430 +
                    (C59432 * C1356 + C59438 + C59438 + C151790 * C1372) *
                        C152049 * C59431) *
                       C151867 * C151849 * C129 -
                   ((C59432 * C1355 + C59439 + C59439 + C151790 * C1371) *
                        C152049 * C59431 +
                    (C59432 * C343 + C59440 + C59440 + C151790 * C367) *
                        C152049 * C59430 +
                    (C59432 * C340 + C59441 + C59441 + C151790 * C364) *
                        C152049 * C59429 +
                    (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                        C152049 * C59428) *
                       C151867 * C151849 * C130 +
                   ((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                        C152049 * C59428 +
                    (C59432 * C339 + C59444 + C59444 + C151790 * C363) *
                        C152049 * C59429 +
                    (C59432 * C344 + C59445 + C59445 + C151790 * C368) *
                        C152049 * C59430 +
                    (C59432 * C1354 + C59446 + C59446 + C151790 * C1370) *
                        C152049 * C59431) *
                       C151867 * C151849 * C131 -
                   ((C59432 * C1353 + C59447 + C59447 + C151790 * C1369) *
                        C152049 * C59431 +
                    (C59432 * C345 + C59448 + C59448 + C151790 * C369) *
                        C152049 * C59430 +
                    (C59432 * C338 + C59449 + C59449 + C151790 * C362) *
                        C152049 * C59429 +
                    (C59432 * C145 + C59450 + C59450 + C151790 * C161) *
                        C152049 * C59428) *
                       C151867 * C151849 * C132 +
                   ((C59432 * C146 + C59451 + C59451 + C151790 * C162) *
                        C152049 * C59428 +
                    (C59432 * C346 + C59452 + C59452 + C151790 * C370) *
                        C152049 * C59429 +
                    (C59432 * C347 + C59453 + C59453 + C151790 * C371) *
                        C152049 * C59430 +
                    (C59432 * C1715 + C59454 + C59454 + C151790 * C1717) *
                        C152049 * C59431) *
                       C151867 * C151849 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C152255 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C152239 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C335 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C152239 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C152255 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C336 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C152255 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C152239 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                         C152049 * C59428 +
                     C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                        C151867 * C1259 -
                    (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                     C59667 * C59428) *
                        C151867 * C1260 +
                    (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                     (C59432 * C7816 + C59610 + C59610 + C151790 * C7824) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152252 +
                   ((C59671 * C59428 + C59672 * C59429 + C59673 * C59430 +
                     C59674 * C59431) *
                        C151867 * C1260 -
                    (C59673 * C59431 + C59672 * C59430 + C59671 * C59429 +
                     (C59432 * C143 + C59442 + C59442 + C151790 * C159) *
                         C152049 * C59428) *
                        C151867 * C1259 -
                    ((C59432 * C7815 + C59620 + C59620 + C151790 * C7823) *
                         C152049 * C59431 +
                     C59674 * C59430 + C59673 * C59429 + C59672 * C59428) *
                        C151867 * C152208) *
                       C152235 +
                   (((C59432 * C144 + C59443 + C59443 + C151790 * C160) *
                         C152049 * C59428 +
                     C59675 * C59429 + C59676 * C59430 + C59677 * C59431) *
                        C151867 * C1259 -
                    (C59678 * C59431 + C59677 * C59430 + C59676 * C59429 +
                     C59675 * C59428) *
                        C151867 * C1260 +
                    (C59676 * C59428 + C59677 * C59429 + C59678 * C59430 +
                     (C59432 * C8335 + C59630 + C59630 + C151790 * C8337) *
                         C152049 * C59431) *
                        C151867 * C152208) *
                       C152202)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C59432 * C142 + C59435 + C59435 + C151790 * C158) *
                        C152049 * C59428 +
                    C59667 * C59429 + C59668 * C59430 + C59669 * C59431) *
                       C151867 * C1347 -
                   (C59670 * C59431 + C59669 * C59430 + C59668 * C59429 +
                    C59667 * C59428) *
                       C151867 * C1348 +
                   (C59668 * C59428 + C59669 * C59429 + C59670 * C59430 +
                    C60626 * C59431) *
                       C151867 * C1349 -
                   (C60627 * C59431 + C60626 * C59430 + C59670 * C59429 +
                    C59669 * C59428) *
                       C151867 * C1350 +
                   (C59670 * C59428 + C60626 * C59429 + C60627 * C59430 +
                    (C59432 * C60610 + C60619 + C60619 + C151790 * C60612) *
                        C152049 * C59431) *
                       C151867 * C1351) *
                  C151821) /
                     (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C151908 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C151915 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C3585) *
              C151826 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C151915 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C151908 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C3585) *
              C151835 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C151908 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C151915 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C151908 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C152167) *
               C151915 +
           (((C73968 * C101415 + C84578 * C152113) * C152183 +
             ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
                C152167 -
            (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
             (C84579 * C152113 + C75586 * C101415) * C152183) *
                C151954) *
               C3585) *
              C3241 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C152167) *
               C151908 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151915 +
           (((C76134 * C101415 + (C77235 + C77234) * C152113) * C152183 +
             ((C76147 + C76146) * C101415 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                 C152087 +
             (C85224 * C152113 + C73969 * C101415) * C152183) *
                C152167) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C152262 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C152258 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152244 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C151867 * C152218) *
              C3241 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C152258 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C152262 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152244 +
           ((C75830 * C101415 + (C76147 + C76146) * C152113) * C152183 +
            ((C75843 + C75842) * C101415 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C3101 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C151912) *
              C152261 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C3101) *
              C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C3101 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C151912) *
              C152237 +
          ((((C74440 + C74441) * C101415 + (C83168 + C83169) * C152113) *
                C152183 +
            ((C74442 + C74443) * C101415 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C152256 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C152241 +
            (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                 C152183 +
             (C84577 * C101415 + C87188 * C152113) * C152087) *
                C152211) *
               C3101 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C152241 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C152256 -
            (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
             (C87189 * C152113 + C84576 * C101415) * C152183) *
                C152211) *
               C151912) *
              C3241 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C152241 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C152256 -
            (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
             ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                 C152183) *
                C152211) *
               C3101 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C152256 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C152241 +
            ((C86646 * C101415 + (C86657 + C86656) * C152113) * C152183 +
             ((C77235 + C77234) * C101415 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C3101 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C152167) *
               C151912) *
              C151826 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C152167) *
               C3101 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151912) *
              C151835 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C101415 +
              (C82896 + C82897) * C152113) *
                 C152183 +
             ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                C152167 -
            (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                 C152183) *
                C151954) *
               C3101 +
           (((C83832 * C101415 + (C82899 + C82898) * C152113) * C152183 +
             ((C74997 + C74996) * C101415 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
                C152167) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C3101 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C151912) *
              C152261 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C3101) *
              C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C3101 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C151912) *
              C152237 +
          ((((C74440 + C74441) * C101415 + (C83168 + C83169) * C152113) *
                C152183 +
            ((C74442 + C74443) * C101415 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C152262 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C152258 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152244 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C151867 * C152218) *
              C3241 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C152258 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C152262 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152244 +
           ((C75830 * C101415 + (C76147 + C76146) * C152113) * C152183 +
            ((C75843 + C75842) * C101415 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C151908 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C4107) *
               C151915 +
           (((C73968 * C101415 + C84578 * C152113) * C152183 +
             ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
                C4107 -
            (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
             (C84579 * C152113 + C75586 * C101415) * C152183) *
                C151954) *
               C3585) *
              C152152 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C4107) *
               C151908 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151915 +
           (((C76134 * C101415 + (C77235 + C77234) * C152113) * C152183 +
             ((C76147 + C76146) * C101415 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                 C152087 +
             (C85224 * C152113 + C73969 * C101415) * C152183) *
                C4107) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151950 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151957 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C4779) *
              C151908 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C151957 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151950 -
           (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
            (C87189 * C152113 + C84576 * C101415) * C152183) *
               C4779) *
              C151915 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151950 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C151957 +
           ((C75634 * C101415 + (C77651 + C77650) * C152113) * C152183 +
            ((C75633 + C75632) * C101415 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C4779) *
              C3585) *
         C151821) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C152262 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C4107) *
              C152258 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C4107 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C151954) *
              C152244 +
          (((C76342 * C101415 + (C75633 + C75632) * C152113) * C152183 +
            ((C76355 + C76354) * C101415 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C3101 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C4107) *
               C151912) *
              C152252 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C4107) *
               C3101 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151912) *
              C152235 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C101415 +
              (C82896 + C82897) * C152113) *
                 C152183 +
             ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                C4107 -
            (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                 C152183) *
                C151954) *
               C3101 +
           (((C83832 * C101415 + (C82899 + C82898) * C152113) * C152183 +
             ((C74997 + C74996) * C101415 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152263 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C152260 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152247 -
           (((C86256 + C86257) * C152113 + C87189 * C101415) * C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C101415) *
                C152183) *
               C152224) *
              C3101 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C152260 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C152263 -
           (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
            (C87189 * C152113 + C84576 * C101415) * C152183) *
               C152247 +
           ((C87188 * C101415 + (C86257 + C86256) * C152113) * C152183 +
            ((C77651 + C77650) * C101415 +
             (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
              C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                 C152113) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C151950 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151957 +
            (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                 C152183 +
             (C84577 * C101415 + C87188 * C152113) * C152087) *
                C4779) *
               C3101 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151957 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C151950 -
            (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
             (C87189 * C152113 + C84576 * C101415) * C152183) *
                C4779) *
               C151912) *
              C152152 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151957 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C151950 -
            (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
             ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                 C152183) *
                C4779) *
               C3101 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C151950 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151957 +
            ((C86646 * C101415 + (C86657 + C86656) * C152113) * C152183 +
             ((C77235 + C77234) * C101415 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C3101 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C4107) *
               C151912) *
              C152252 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C4107) *
               C3101 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151912) *
              C152235 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C101415 +
              (C82896 + C82897) * C152113) *
                 C152183 +
             ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                C4107 -
            (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                 C152183) *
                C151954) *
               C3101 +
           (((C83832 * C101415 + (C82899 + C82898) * C152113) * C152183 +
             ((C74997 + C74996) * C101415 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C152262 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C4107) *
              C152258 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C4107 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C151954) *
              C152244 +
          (((C76342 * C101415 + (C75633 + C75632) * C152113) * C152183 +
            ((C76355 + C76354) * C101415 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C1709 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C1710 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C1711 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C151867 * C152218) *
              C152152 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C1710 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C1709 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C1711 +
           ((C75830 * C101415 + (C76147 + C76146) * C152113) * C152183 +
            ((C75843 + C75842) * C101415 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C152166 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C151912) *
              C739 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C152166) *
              C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C152166 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C151912) *
              C741 +
          ((((C74440 + C74441) * C101415 + (C83168 + C83169) * C152113) *
                C152183 +
            ((C74442 + C74443) * C101415 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C2215 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C2216 +
            (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                 C152183 +
             (C84577 * C101415 + C87188 * C152113) * C152087) *
                C152211) *
               C152166 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C2216 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C2215 -
            (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
             (C87189 * C152113 + C84576 * C101415) * C152183) *
                C152211) *
               C151912) *
              C152152 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C2216 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C2215 -
            (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
             ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                 C152183) *
                C152211) *
               C152166 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C2215 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C2216 +
            ((C86646 * C101415 + (C86657 + C86656) * C152113) * C152183 +
             ((C77235 + C77234) * C101415 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152167 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C1709 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C152167) *
              C1710 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C152167 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C151954) *
              C1711 +
          (((C76342 * C101415 + (C75633 + C75632) * C152113) * C152183 +
            ((C76355 + C76354) * C101415 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C152166 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C152167) *
               C151912) *
              C335 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C152167) *
               C152166 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151912) *
              C336 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C101415 +
              (C82896 + C82897) * C152113) *
                 C152183 +
             ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                C152167 -
            (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                 C152183) *
                C151954) *
               C152166 +
           (((C83832 * C101415 + (C82899 + C82898) * C152113) * C152183 +
             ((C74997 + C74996) * C101415 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C2814 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C2815 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C2816 -
           (((C86256 + C86257) * C152113 + C87189 * C101415) * C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C101415) *
                C152183) *
               C152224) *
              C152166 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C2815 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C2814 -
           (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
            (C87189 * C152113 + C84576 * C101415) * C152183) *
               C2816 +
           ((C87188 * C101415 + (C86257 + C86256) * C152113) * C152183 +
            ((C77651 + C77650) * C101415 +
             (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
              C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                 C152113) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                 C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                    C101415 +
                (C82888 + C82889) * C152113) *
                   C152183 +
               ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                  C151867 * C151849 * C129 -
              ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
               ((C82893 + C82892) * C152113 +
                (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                 C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                    C101415) *
                   C152183) *
                  C151867 * C151849 * C130 +
              (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                 C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                    C101415 +
                (C82896 + C82897) * C152113) *
                   C152183 +
               ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                  C151867 * C151849 * C131 -
              (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                   C152087 +
               ((C83441 + C83440) * C152113 +
                (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                 C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                    C101415) *
                   C152183) *
                  C151867 * C151849 * C132 +
              (((C73613 * C146 + C73642 + C73642 + C152145 * C162 +
                 C73615 * C147 + C73643 + C73643 + C151795 * C163) *
                    C101415 +
                (C73613 * C555 + C82244 + C82244 + C152145 * C579 +
                 C73615 * C557 + C82245 + C82245 + C151795 * C581) *
                    C152113) *
                   C152183 +
               ((C73613 * C346 + C73644 + C73644 + C152145 * C370 +
                 C73615 * C348 + C73645 + C73645 + C151795 * C372) *
                    C101415 +
                (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
                 C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                    C152113) *
                   C152087) *
                  C151867 * C151849 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                  C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                     C101415 +
                 (C82888 + C82889) * C152113) *
                    C152183 +
                ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                   C151867 * C152255 -
               ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
                (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                   C151867 * C152239 +
               ((C73968 * C101415 + C84578 * C152113) * C152183 +
                ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
                   C151867 * C152208) *
                  C335 +
              ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
                ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                   C151867 * C152239 -
               ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
                ((C82893 + C82892) * C152113 +
                 (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                  C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                     C101415) *
                    C152183) *
                   C151867 * C152255 -
               (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                    C152087 +
                (C85224 * C152113 + C73969 * C101415) * C152183) *
                   C151867 * C152208) *
                  C336 +
              ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                  C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                     C101415 +
                 (C82896 + C82897) * C152113) *
                    C152183 +
                ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                   C151867 * C152255 -
               (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                    C152087 +
                (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
                   C151867 * C152239 +
               ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
                ((C73967 + C73966) * C101415 +
                 (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
                  C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                     C152113) *
                    C152087) *
                   C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152256 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C152241 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C151849 * C335 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C152241 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C152256 -
           (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                C152183) *
               C152211) *
              C151849 * C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C152256 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C152241 +
           (((C82901 + C82900) * C101415 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C152183 +
            ((C82899 + C82898) * C101415 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
              C151867 * C1348 +
          ((C73968 * C101415 + C84578 * C152113) * C152183 +
           ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
               C152087 +
           (C85483 * C152113 + C75340 * C101415) * C152183) *
              C151867 * C1350 +
          ((C75366 * C101415 + (C76355 + C76354) * C152113) * C152183 +
           ((C75365 + C75364) * C101415 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152256 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C152241 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C1259 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C152241 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C152256 -
           (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
            (C87189 * C152113 + C84576 * C101415) * C152183) *
               C152211) *
              C1260 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C152256 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C152241 +
           ((C75634 * C101415 + (C77651 + C77650) * C152113) * C152183 +
            ((C75633 + C75632) * C101415 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C2216 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C151849 * C152252 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C2216 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C2215 -
           (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                C152183) *
               C152211) *
              C151849 * C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C2215 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C2216 +
           (((C82901 + C82900) * C101415 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C152183 +
            ((C82899 + C82898) * C101415 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C2216 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C152255 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C2216 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C2215 -
           (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
            (C87189 * C152113 + C84576 * C101415) * C152183) *
               C152211) *
              C152239 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C2215 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C2216 +
           ((C75634 * C101415 + (C77651 + C77650) * C152113) * C152183 +
            ((C75633 + C75632) * C101415 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C2446 -
          ((C84576 * C152113 + C83829 * C101415) * C152087 +
           ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
               C152183) *
              C2447 +
          (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
               C152183 +
           (C84577 * C101415 + C87188 * C152113) * C152087) *
              C2448 -
          (((C86256 + C86257) * C152113 + C87189 * C101415) * C152087 +
           ((C86258 + C86259) * C152113 + (C86255 + C86254) * C101415) *
               C152183) *
              C2449 +
          (((C86259 + C86258) * C101415 +
            (C73613 * C17805 + C86238 + C86238 + C152145 * C17813 +
             C73615 * C17804 + C86239 + C86239 + C151795 * C17812) *
                C152113) *
               C152183 +
           ((C86257 + C86256) * C101415 +
            (C73613 * C18552 + C86240 + C86240 + C152145 * C18556 +
             C73615 * C18553 + C86241 + C86241 + C151795 * C18557) *
                C152113) *
               C152087) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C1259 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C152167) *
               C1260 +
           (((C73968 * C101415 + C84578 * C152113) * C152183 +
             ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
                C152167 -
            (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
             (C84579 * C152113 + C75586 * C101415) * C152183) *
                C151954) *
               C152208) *
              C152152 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C152167) *
               C1259 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C1260 +
           (((C76134 * C101415 + (C77235 + C77234) * C152113) * C152183 +
             ((C76147 + C76146) * C101415 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                 C152087 +
             (C85224 * C152113 + C73969 * C101415) * C152183) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152167 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C151849 * C739 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C151954 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C152167) *
              C151849 * C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C152167 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C151954) *
              C151849 * C741 +
          ((((C83440 + C83441) * C101415 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C152183 +
            ((C83168 + C83169) * C101415 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C2814 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C2815 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C2816 -
           (((C86256 + C86257) * C152113 + C87189 * C101415) * C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C101415) *
                C152183) *
               C152224) *
              C151849 * C152152 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C2815 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C2814 -
           (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                C152183) *
               C2816 +
           (((C86929 + C86928) * C101415 +
             (C73613 * C2456 + C86920 + C86920 + C152145 * C2472 +
              C73615 * C2457 + C86921 + C86921 + C151795 * C2473) *
                 C152113) *
                C152183 +
            ((C86657 + C86656) * C101415 +
             (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
              C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                 C152113) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C152255 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C152239 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C152239 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C152255 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C152255 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C152239 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C151867 * C151849 * C129 -
          ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
           ((C82893 + C82892) * C152113 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C101415) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C101415 +
            (C82896 + C82897) * C152113) *
               C152183 +
           ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
              C151867 * C151849 * C131 -
          (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
               C152087 +
           ((C83441 + C83440) * C152113 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C101415) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
             C73643 + C73643 + C151795 * C163) *
                C101415 +
            (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
             C82245 + C82245 + C151795 * C581) *
                C152113) *
               C152183 +
           ((C73613 * C346 + C73644 + C73644 + C152145 * C370 + C73615 * C348 +
             C73645 + C73645 + C151795 * C372) *
                C101415 +
            (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
             C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
              C151867 * C1348 +
          ((C73968 * C101415 + C84578 * C152113) * C152183 +
           ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
               C152087 +
           (C85483 * C152113 + C75340 * C101415) * C152183) *
              C151867 * C1350 +
          ((C75366 * C101415 + (C76355 + C76354) * C152113) * C152183 +
           ((C75365 + C75364) * C101415 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C2216 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C151849 * C152252 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C2216 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C2215 -
           (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                C152183) *
               C152211) *
              C151849 * C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C2215 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C2216 +
           (((C82901 + C82900) * C101415 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C152183 +
            ((C82899 + C82898) * C101415 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C2215 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C2216 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C152255 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C2216 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C2215 -
           (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
            (C87189 * C152113 + C84576 * C101415) * C152183) *
               C152211) *
              C152239 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C2215 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C2216 +
           ((C75634 * C101415 + (C77651 + C77650) * C152113) * C152183 +
            ((C75633 + C75632) * C101415 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C152166 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C4107) *
               C151912) *
              C151826 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C4107) *
               C152166 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151912) *
              C151835 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C101415 +
              (C82896 + C82897) * C152113) *
                 C152183 +
             ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                C4107 -
            (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                 C152183) *
                C151954) *
               C152166 +
           (((C83832 * C101415 + (C82899 + C82898) * C152113) * C152183 +
             ((C74997 + C74996) * C101415 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
                C4107) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C151950 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151957 +
            (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                 C152183 +
             (C84577 * C101415 + C87188 * C152113) * C152087) *
                C4779) *
               C152166 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151957 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C151950 -
            (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
             (C87189 * C152113 + C84576 * C101415) * C152183) *
                C4779) *
               C151912) *
              C3241 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151957 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C151950 -
            (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
             ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                 C152183) *
                C4779) *
               C152166 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C151950 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151957 +
            ((C86646 * C101415 + (C86657 + C86656) * C152113) * C152183 +
             ((C77235 + C77234) * C101415 +
              (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
               C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                  C152113) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C152255 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C4107) *
               C152239 +
           (((C73968 * C101415 + C84578 * C152113) * C152183 +
             ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
                C4107 -
            (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
             (C84579 * C152113 + C75586 * C101415) * C152183) *
                C151954) *
               C152208) *
              C3241 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C4107) *
               C152255 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C152239 +
           (((C76134 * C101415 + (C77235 + C77234) * C152113) * C152183 +
             ((C76147 + C76146) * C101415 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                 C152087 +
             (C85224 * C152113 + C73969 * C101415) * C152183) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C151849 * C152261 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C151954 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C4107) *
              C151849 * C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C4107 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C151954) *
              C151849 * C152237 +
          ((((C83440 + C83441) * C101415 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C152183 +
            ((C83168 + C83169) * C101415 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152263 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C152260 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152247 -
           (((C86256 + C86257) * C152113 + C87189 * C101415) * C152087 +
            ((C86258 + C86259) * C152113 + (C86255 + C86254) * C101415) *
                C152183) *
               C152224) *
              C151849 * C3241 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C152260 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C152263 -
           (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                C152183) *
               C152247 +
           (((C86929 + C86928) * C101415 +
             (C73613 * C2456 + C86920 + C86920 + C152145 * C2472 +
              C73615 * C2457 + C86921 + C86921 + C151795 * C2473) *
                 C152113) *
                C152183 +
            ((C86657 + C86656) * C101415 +
             (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
              C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                 C152113) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151950 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151957 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C4779) *
              C151849 * C151826 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C151957 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151950 -
           (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                C152183) *
               C4779) *
              C151849 * C151835 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151950 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C151957 +
           (((C82901 + C82900) * C101415 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C152183 +
            ((C82899 + C82898) * C101415 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C4779) *
              C151849 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C4107 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C151849 * C152261 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C151954 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C4107) *
              C151849 * C152254 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C4107 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C151954) *
              C151849 * C152237 +
          ((((C83440 + C83441) * C101415 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C152183 +
            ((C83168 + C83169) * C101415 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C4107 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C152255 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C4107) *
               C152239 +
           (((C73968 * C101415 + C84578 * C152113) * C152183 +
             ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
                C4107 -
            (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
             (C84579 * C152113 + C75586 * C101415) * C152183) *
                C151954) *
               C152208) *
              C3241 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C4107) *
               C152255 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C4107 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C152239 +
           (((C76134 * C101415 + (C77235 + C77234) * C152113) * C152183 +
             ((C76147 + C76146) * C101415 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                 C152087 +
             (C85224 * C152113 + C73969 * C101415) * C152183) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C152166 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C151912) *
              C739 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C151912 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C152166) *
              C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C152166 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C151912) *
              C741 +
          ((((C74440 + C74441) * C101415 + (C83168 + C83169) * C152113) *
                C152183 +
            ((C74442 + C74443) * C101415 +
             (C73613 * C1535 + C74642 + C74642 + C152145 * C1559 +
              C73615 * C1916 + C74643 + C74643 + C151795 * C1918) *
                 C152113) *
                C152087) *
               C151867 * C151912 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C1709 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C1710 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C1711 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C151867 * C152218) *
              C152152 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C1710 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C1709 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C1711 +
           ((C75830 * C101415 + (C76147 + C76146) * C152113) * C152183 +
            ((C75843 + C75842) * C101415 +
             (C73613 * C8075 + C76139 + C76139 + C152145 * C8087 +
              C73615 * C8642 + C76140 + C76140 + C151795 * C8644) *
                 C152113) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C152166 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C152167) *
               C151912) *
              C335 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C152167) *
               C152166 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C151912) *
              C336 +
          (((((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
               C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                  C101415 +
              (C82896 + C82897) * C152113) *
                 C152183 +
             ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
                C152167 -
            (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
             ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                 C152183) *
                C151954) *
               C152166 +
           (((C83832 * C101415 + (C82899 + C82898) * C152113) * C152183 +
             ((C74997 + C74996) * C101415 +
              (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
               C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                 C152087 +
             (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152167 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C1709 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C151954 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C152167) *
              C1710 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C152167 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C151954) *
              C1711 +
          (((C76342 * C101415 + (C75633 + C75632) * C152113) * C152183 +
            ((C76355 + C76354) * C101415 +
             (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
              C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
                 C152113) *
                C152087) *
               C151954 -
           (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
                C152087 +
            (C85483 * C152113 + C75340 * C101415) * C152183) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C152255 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C152239 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C152239 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C152255 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C152255 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C152239 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C151867 * C151849 * C129 -
          ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
           ((C82893 + C82892) * C152113 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C101415) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C101415 +
            (C82896 + C82897) * C152113) *
               C152183 +
           ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
              C151867 * C151849 * C131 -
          (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
               C152087 +
           ((C83441 + C83440) * C152113 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C101415) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
             C73643 + C73643 + C151795 * C163) *
                C101415 +
            (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
             C82245 + C82245 + C151795 * C581) *
                C152113) *
               C152183 +
           ((C73613 * C346 + C73644 + C73644 + C152145 * C370 + C73615 * C348 +
             C73645 + C73645 + C151795 * C372) *
                C101415 +
            (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
             C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152256 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C152241 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C151849 * C335 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C152241 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C152256 -
           (((C86656 + C86657) * C152113 + C86651 * C101415) * C152087 +
            ((C86928 + C86929) * C152113 + (C82895 + C82894) * C101415) *
                C152183) *
               C152211) *
              C151849 * C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C152256 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C152241 +
           (((C82901 + C82900) * C101415 +
             (C73613 * C2452 + C82856 + C82856 + C152145 * C2468 +
              C73615 * C2451 + C82857 + C82857 + C151795 * C2467) *
                 C152113) *
                C152183 +
            ((C82899 + C82898) * C101415 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C152113) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
              C151867 * C1348 +
          ((C73968 * C101415 + C84578 * C152113) * C152183 +
           ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
               C152087 +
           (C85483 * C152113 + C75340 * C101415) * C152183) *
              C151867 * C1350 +
          ((C75366 * C101415 + (C76355 + C76354) * C152113) * C152183 +
           ((C75365 + C75364) * C101415 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152256 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C152241 +
           (((C82891 + C82890) * C101415 + (C86254 + C86255) * C152113) *
                C152183 +
            (C84577 * C101415 + C87188 * C152113) * C152087) *
               C152211) *
              C1259 +
          (((C83828 * C101415 + C84577 * C152113) * C152183 +
            (C84578 * C101415 + C75634 * C152113) * C152087) *
               C152241 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C152256 -
           (((C77650 + C77651) * C152113 + C84579 * C101415) * C152087 +
            (C87189 * C152113 + C84576 * C101415) * C152183) *
               C152211) *
              C1260 +
          (((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C152256 -
           (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
            (C84579 * C152113 + C75586 * C101415) * C152183) *
               C152241 +
           ((C75634 * C101415 + (C77651 + C77650) * C152113) * C152183 +
            ((C75633 + C75632) * C101415 +
             (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
              C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                 C152113) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C152167 -
           ((C84576 * C152113 + C83829 * C101415) * C152087 +
            ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                C152183) *
               C151954) *
              C151849 * C739 +
          ((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                C152183 +
            (C83830 * C101415 + C86646 * C152113) * C152087) *
               C151954 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C152167) *
              C151849 * C740 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C152167 -
           (((C82898 + C82899) * C152113 + C83833 * C101415) * C152087 +
            ((C82900 + C82901) * C152113 + (C82897 + C82896) * C101415) *
                C152183) *
               C151954) *
              C151849 * C741 +
          ((((C83440 + C83441) * C101415 +
             (C73613 * C554 + C83432 + C83432 + C152145 * C578 + C73615 * C556 +
              C83433 + C83433 + C151795 * C580) *
                 C152113) *
                C152183 +
            ((C83168 + C83169) * C101415 +
             (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
              C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                 C152113) *
                C152087) *
               C151954 -
           (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
                C152087 +
            ((C83441 + C83440) * C152113 +
             (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
              C73641 + C73641 + C152145 * C161) *
                 C101415) *
                C152183) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
               C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                  C101415 +
              (C82888 + C82889) * C152113) *
                 C152183 +
             ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
                C152167 -
            ((C84576 * C152113 + C83829 * C101415) * C152087 +
             ((C82890 + C82891) * C152113 + (C82889 + C82888) * C101415) *
                 C152183) *
                C151954) *
               C1259 +
           (((C83828 * C101415 + C84577 * C152113) * C152183 +
             (C84578 * C101415 + C75634 * C152113) * C152087) *
                C151954 -
            ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
             (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
                C152167) *
               C1260 +
           (((C73968 * C101415 + C84578 * C152113) * C152183 +
             ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
                C152167 -
            (((C75632 + C75633) * C152113 + C85483 * C101415) * C152087 +
             (C84579 * C152113 + C75586 * C101415) * C152183) *
                C151954) *
               C152208) *
              C152152 +
          (((((C82892 + C82893) * C101415 + (C82894 + C82895) * C152113) *
                 C152183 +
             (C83830 * C101415 + C86646 * C152113) * C152087) *
                C151954 -
            ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
             ((C82893 + C82892) * C152113 +
              (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
               C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                  C101415) *
                 C152183) *
                C152167) *
               C1259 +
           ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
             ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
                C152167 -
            (((C77234 + C77235) * C152113 + C85224 * C101415) * C152087 +
             (C86651 * C152113 + C83831 * C101415) * C152183) *
                C151954) *
               C1260 +
           (((C76134 * C101415 + (C77235 + C77234) * C152113) * C152183 +
             ((C76147 + C76146) * C101415 +
              (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
               C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                  C152113) *
                 C152087) *
                C151954 -
            (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                 C152087 +
             (C85224 * C152113 + C73969 * C101415) * C152183) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C151867 * C151849 * C129 -
          ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
           ((C82893 + C82892) * C152113 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C101415) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C101415 +
            (C82896 + C82897) * C152113) *
               C152183 +
           ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
              C151867 * C151849 * C131 -
          (((C83169 + C83168) * C152113 + (C74441 + C74440) * C101415) *
               C152087 +
           ((C83441 + C83440) * C152113 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C101415) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
             C73643 + C73643 + C151795 * C163) *
                C101415 +
            (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
             C82245 + C82245 + C151795 * C581) *
                C152113) *
               C152183 +
           ((C73613 * C346 + C73644 + C73644 + C152145 * C370 + C73615 * C348 +
             C73645 + C73645 + C151795 * C372) *
                C101415 +
            (C73613 * C1087 + C82246 + C82246 + C152145 * C1099 +
             C73615 * C1088 + C82247 + C82247 + C151795 * C1100) *
                C152113) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C152255 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C152239 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C335 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C152239 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C152255 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C152255 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C152239 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C101415 +
             (C82888 + C82889) * C152113) *
                C152183 +
            ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
               C151867 * C1259 -
           ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
            (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73968 * C101415 + C84578 * C152113) * C152183 +
            ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
               C151867 * C152208) *
              C152252 +
          ((((C73956 + C73957) * C101415 + C83830 * C152113) * C152183 +
            ((C73958 + C73959) * C101415 + C76134 * C152113) * C152087) *
               C151867 * C1260 -
           ((C83831 * C152113 + (C73957 + C73956) * C101415) * C152087 +
            ((C82893 + C82892) * C152113 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C101415) *
                C152183) *
               C151867 * C1259 -
           (((C76146 + C76147) * C152113 + (C73961 + C73960) * C101415) *
                C152087 +
            (C85224 * C152113 + C73969 * C101415) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C101415 +
             (C82896 + C82897) * C152113) *
                C152183 +
            ((C73962 + C73963) * C101415 + C83832 * C152113) * C152087) *
               C151867 * C1259 -
           (((C74996 + C74997) * C152113 + (C73965 + C73964) * C101415) *
                C152087 +
            (C83833 * C152113 + (C73963 + C73962) * C101415) * C152183) *
               C151867 * C1260 +
           ((C73970 * C101415 + (C74997 + C74996) * C152113) * C152183 +
            ((C73967 + C73966) * C101415 +
             (C73613 * C2055 + C74962 + C74962 + C152145 * C2063 +
              C73615 * C2056 + C74963 + C74963 + C151795 * C2064) *
                 C152113) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C101415 +
            (C82888 + C82889) * C152113) *
               C152183 +
           ((C73950 + C73951) * C101415 + C83828 * C152113) * C152087) *
              C151867 * C1347 -
          ((C75586 * C152113 + (C73953 + C73952) * C101415) * C152087 +
           (C83829 * C152113 + (C73951 + C73950) * C101415) * C152183) *
              C151867 * C1348 +
          ((C73968 * C101415 + C84578 * C152113) * C152183 +
           ((C73955 + C73954) * C101415 + C76342 * C152113) * C152087) *
              C151867 * C1349 -
          (((C76354 + C76355) * C152113 + (C75363 + C75362) * C101415) *
               C152087 +
           (C85483 * C152113 + C75340 * C101415) * C152183) *
              C151867 * C1350 +
          ((C75366 * C101415 + (C76355 + C76354) * C152113) * C152183 +
           ((C75365 + C75364) * C101415 +
            (C73613 * C8853 + C76347 + C76347 + C152145 * C8857 +
             C73615 * C8854 + C76348 + C76348 + C151795 * C8858) *
                C152113) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C151908 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C151915 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C151867 * C3585) *
              C151826 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C151915 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C151908 -
           ((C144335 + C144336 + C144337) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C3585) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C151908 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C151915 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C152167 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C151908 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C152167) *
               C151915 +
           (((C142647 + C142646 + C142645) * C152183 +
             (C143908 + C143909 + C143910) * C152087) *
                C152167 -
            ((C144825 + C144826 + C144827) * C152087 +
             (C144137 + C144136 + C144135) * C152183) *
                C151954) *
               C3585) *
              C3241 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C152167) *
               C151908 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C152167 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151915 +
           (((C144630 + C144629 + C144628) * C152183 +
             (C60370 * C152250 + C61880 * C152251 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C134230) *
                 C152087) *
                C151954 -
            ((C144335 + C144336 + C144337) * C152087 +
             (C142653 + C142652 + C142651) * C152183) *
                C152167) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C152262 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C152258 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C151867 * C152244 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C151867 * C152218) *
              C3241 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C152258 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C152262 -
           ((C144335 + C144336 + C144337) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152244 +
           ((C144337 + C144336 + C144335) * C152183 +
            (C59662 * C152250 + C61146 * C152251 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C134230) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C3101 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C151912) *
              C152261 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C151912 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C3101 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C151912) *
              C152237 +
          (((C143072 + C143073 + C143074) * C152183 +
            (C59993 * C152250 + C93863 * C152251 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C134230) *
                C152087) *
               C151867 * C151912 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C152256 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C152241 +
            ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) *
                 C152183 +
             (C144132 + C144133 + C144134) * C152087) *
                C152211) *
               C3101 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C152241 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C152256 -
            ((C144138 + C144139 + C144140) * C152087 +
             (C144134 + C144133 + C144132) * C152183) *
                C152211) *
               C151912) *
              C3241 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C152241 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C152256 -
            ((C145676 + C145677 + C145678) * C152087 +
             (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                 C152183) *
                C152211) *
               C3101 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C152256 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C152241 +
            ((C145678 + C145677 + C145676) * C152183 +
             (C61881 * C152250 + C67579 * C152251 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C134230) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C152167 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C3101 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C152167) *
               C151912) *
              C151826 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C152167) *
               C3101 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C152167 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
              C65785 * C152251 + C65786 * C134230) *
                 C152183 +
             (C142654 + C142655 + C142656) * C152087) *
                C152167 -
            ((C143565 + C143566 + C143567) * C152087 +
             (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                 C152183) *
                C151954) *
               C3101 +
           (((C143567 + C143566 + C143565) * C152183 +
             (C60372 * C152250 + C65507 * C152251 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C134230) *
                 C152087) *
                C151954 -
            ((C142657 + C142658 + C142659) * C152087 +
             (C142656 + C142655 + C142654) * C152183) *
                C152167) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C3101 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C151912) *
              C152261 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C151912 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C3101 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C151912) *
              C152237 +
          (((C143072 + C143073 + C143074) * C152183 +
            (C59993 * C152250 + C93863 * C152251 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C134230) *
                C152087) *
               C151867 * C151912 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C152262 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C152258 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C151867 * C152244 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C151867 * C152218) *
              C3241 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C152258 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C152262 -
           ((C144335 + C144336 + C144337) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152244 +
           ((C144337 + C144336 + C144335) * C152183 +
            (C59662 * C152250 + C61146 * C152251 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C134230) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C151908 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C4107) *
               C151915 +
           (((C142647 + C142646 + C142645) * C152183 +
             (C143908 + C143909 + C143910) * C152087) *
                C4107 -
            ((C144825 + C144826 + C144827) * C152087 +
             (C144137 + C144136 + C144135) * C152183) *
                C151954) *
               C3585) *
              C152152 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C4107) *
               C151908 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151915 +
           (((C144630 + C144629 + C144628) * C152183 +
             (C60370 * C152250 + C61880 * C152251 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C134230) *
                 C152087) *
                C151954 -
            ((C144335 + C144336 + C144337) * C152087 +
             (C142653 + C142652 + C142651) * C152183) *
                C4107) *
               C3585) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151950 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151957 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C4779) *
              C151908 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C151957 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151950 -
           ((C144138 + C144139 + C144140) * C152087 +
            (C144134 + C144133 + C144132) * C152183) *
               C4779) *
              C151915 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C151950 -
           ((C144825 + C144826 + C144827) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C151957 +
           ((C144140 + C144139 + C144138) * C152183 +
            (C60802 * C152250 + C62166 * C152251 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C134230) *
                C152087) *
               C4779) *
              C3585) *
         C151821) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C152262 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C151954 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C4107) *
              C152258 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C4107 -
           ((C144825 + C144826 + C144827) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C151954) *
              C152244 +
          (((C144827 + C144826 + C144825) * C152183 +
            (C60803 * C152250 + C60804 * C152251 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C134230) *
                C152087) *
               C151954 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C3101 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C4107) *
               C3101 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
              C65785 * C152251 + C65786 * C134230) *
                 C152183 +
             (C142654 + C142655 + C142656) * C152087) *
                C4107 -
            ((C143565 + C143566 + C143567) * C152087 +
             (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                 C152183) *
                C151954) *
               C3101 +
           (((C143567 + C143566 + C143565) * C152183 +
             (C60372 * C152250 + C65507 * C152251 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C134230) *
                 C152087) *
                C151954 -
            ((C142657 + C142658 + C142659) * C152087 +
             (C142656 + C142655 + C142654) * C152183) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152263 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C152260 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152247 -
           ((C146067 + C146068 + C146069) * C152087 +
            (C68357 * C134230 + C68355 * C152251 + C65780 * C152250) *
                C152183) *
               C152224) *
              C3101 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C152260 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C152263 -
           ((C144138 + C144139 + C144140) * C152087 +
            (C144134 + C144133 + C144132) * C152183) *
               C152247 +
           ((C146069 + C146068 + C146067) * C152183 +
            (C62167 * C152250 + C67083 * C152251 +
             (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C134230) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C151950 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151957 +
            ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) *
                 C152183 +
             (C144132 + C144133 + C144134) * C152087) *
                C4779) *
               C3101 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151957 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C151950 -
            ((C144138 + C144139 + C144140) * C152087 +
             (C144134 + C144133 + C144132) * C152183) *
                C4779) *
               C151912) *
              C152152 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151957 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C151950 -
            ((C145676 + C145677 + C145678) * C152087 +
             (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                 C152183) *
                C4779) *
               C3101 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C151950 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151957 +
            ((C145678 + C145677 + C145676) * C152183 +
             (C61881 * C152250 + C67579 * C152251 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C134230) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C3101 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C4107) *
               C3101 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
              C65785 * C152251 + C65786 * C134230) *
                 C152183 +
             (C142654 + C142655 + C142656) * C152087) *
                C4107 -
            ((C143565 + C143566 + C143567) * C152087 +
             (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                 C152183) *
                C151954) *
               C3101 +
           (((C143567 + C143566 + C143565) * C152183 +
             (C60372 * C152250 + C65507 * C152251 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C134230) *
                 C152087) *
                C151954 -
            ((C142657 + C142658 + C142659) * C152087 +
             (C142656 + C142655 + C142654) * C152183) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C152262 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C151954 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C4107) *
              C152258 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C4107 -
           ((C144825 + C144826 + C144827) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C151954) *
              C152244 +
          (((C144827 + C144826 + C144825) * C152183 +
            (C60803 * C152250 + C60804 * C152251 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C134230) *
                C152087) *
               C151954 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C1709 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C1710 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C151867 * C1711 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C151867 * C152218) *
              C152152 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C1710 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C1709 -
           ((C144335 + C144336 + C144337) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C1711 +
           ((C144337 + C144336 + C144335) * C152183 +
            (C59662 * C152250 + C61146 * C152251 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C134230) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C152166 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C151912) *
              C739 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C151912 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C152166 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C151912) *
              C741 +
          (((C143072 + C143073 + C143074) * C152183 +
            (C59993 * C152250 + C93863 * C152251 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C134230) *
                C152087) *
               C151867 * C151912 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C2215 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C2216 +
            ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) *
                 C152183 +
             (C144132 + C144133 + C144134) * C152087) *
                C152211) *
               C152166 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C2216 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C2215 -
            ((C144138 + C144139 + C144140) * C152087 +
             (C144134 + C144133 + C144132) * C152183) *
                C152211) *
               C151912) *
              C152152 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C2216 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C2215 -
            ((C145676 + C145677 + C145678) * C152087 +
             (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                 C152183) *
                C152211) *
               C152166 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C2215 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C2216 +
            ((C145678 + C145677 + C145676) * C152183 +
             (C61881 * C152250 + C67579 * C152251 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C134230) *
                 C152087) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152167 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C1709 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C151954 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C152167) *
              C1710 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C152167 -
           ((C144825 + C144826 + C144827) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C151954) *
              C1711 +
          (((C144827 + C144826 + C144825) * C152183 +
            (C60803 * C152250 + C60804 * C152251 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C134230) *
                C152087) *
               C151954 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C152167 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C152166 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C60366 * C152250 + C60801 * C152251 + C62167 * C134230) *
                 C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C152167) *
               C152166 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C152167 -
            ((C67579 * C134230 + C61881 * C152251 + C60369 * C152250) *
                 C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
              C65785 * C152251 + C65786 * C134230) *
                 C152183 +
             (C142654 + C142655 + C142656) * C152087) *
                C152167 -
            ((C143565 + C143566 + C143567) * C152087 +
             (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                 C152183) *
                C151954) *
               C152166 +
           (((C143567 + C143566 + C143565) * C152183 +
             (C60372 * C152250 + C65507 * C152251 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C134230) *
                 C152087) *
                C151954 -
            ((C142657 + C142658 + C142659) * C152087 +
             (C142656 + C142655 + C142654) * C152183) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C2814 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C2815 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C2816 -
           ((C146067 + C146068 + C146069) * C152087 +
            (C68357 * C134230 + C68355 * C152251 + C65780 * C152250) *
                C152183) *
               C152224) *
              C152166 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C2815 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C2814 -
           ((C144138 + C144139 + C144140) * C152087 +
            (C144134 + C144133 + C144132) * C152183) *
               C2816 +
           ((C146069 + C146068 + C146067) * C152183 +
            (C62167 * C152250 + C67083 * C152251 +
             (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C134230) *
                C152087) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
                C65778 * C152251 + C65779 * C134230) *
                   C152183 +
               (C59655 * C152250 + C60367 * C152251 + C60800 * C134230) *
                   C152087) *
                  C151867 * C151849 * C129 -
              ((C61882 * C134230 + C60368 * C152251 + C59659 * C152250) *
                   C152087 +
               (C65782 * C134230 + C65781 * C152251 +
                (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                   C152183) *
                  C151867 * C151849 * C130 +
              (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
                C65785 * C152251 + C65786 * C134230) *
                   C152183 +
               (C59663 * C152250 + C60373 * C152251 + C65506 * C134230) *
                   C152087) *
                  C151867 * C151849 * C131 -
              ((C65994 * C134230 + C65993 * C152251 + C59992 * C152250) *
                   C152087 +
               (C66202 * C134230 + C66201 * C152251 +
                (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                   C152183) *
                  C151867 * C151849 * C132 +
              (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152250 +
                (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152251 +
                (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C134230) *
                   C152183 +
               ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152250 +
                (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152251 +
                (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) *
                    C134230) *
                   C152087) *
                  C151867 * C151849 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
                 C65778 * C152251 + C65779 * C134230) *
                    C152183 +
                (C142642 + C142643 + C142644) * C152087) *
                   C151867 * C152255 -
               ((C142645 + C142646 + C142647) * C152087 +
                (C142644 + C142643 + C142642) * C152183) *
                   C151867 * C152239 +
               ((C142647 + C142646 + C142645) * C152183 +
                (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                    C152087) *
                   C151867 * C152208) *
                  C335 +
              (((C142648 + C142649 + C142650) * C152183 +
                (C142651 + C142652 + C142653) * C152087) *
                   C151867 * C152239 -
               ((C142650 + C142649 + C142648) * C152087 +
                (C65782 * C134230 + C65781 * C152251 +
                 (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                    C152183) *
                   C151867 * C152255 -
               ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) *
                    C152087 +
                (C142653 + C142652 + C142651) * C152183) *
                   C151867 * C152208) *
                  C336 +
              ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
                 C65785 * C152251 + C65786 * C134230) *
                    C152183 +
                (C142654 + C142655 + C142656) * C152087) *
                   C151867 * C152255 -
               ((C142657 + C142658 + C142659) * C152087 +
                (C142656 + C142655 + C142654) * C152183) *
                   C151867 * C152239 +
               ((C142659 + C142658 + C142657) * C152183 +
                (C59665 * C152250 + C60371 * C152251 +
                 (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) *
                     C134230) *
                    C152087) *
                   C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152256 -
           ((C62168 * C134230 + C60800 * C152251 + C60367 * C152250) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C152241 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C60800 * C152250 + C62168 * C152251 + C67082 * C134230) *
                C152087) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C60368 * C152250 + C61882 * C152251 + C65784 * C134230) *
                C152087) *
               C152241 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C152256 -
           ((C68655 * C134230 + C65784 * C152251 + C61882 * C152250) * C152087 +
            (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                C152183) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C152256 -
           ((C65787 * C134230 + C65506 * C152251 + C60373 * C152250) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C152241 +
           ((C65786 * C152250 + C65788 * C152251 + C118187 * C134230) *
                C152183 +
            (C65506 * C152250 + C65787 * C152251 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C134230) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C1259 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C1260 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                C152087) *
               C151867 * C152208) *
              C152252 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C1260 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C1259 -
           ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C1259 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C1260 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C142642 + C142643 + C142644) * C152087) *
              C151867 * C1347 -
          ((C142645 + C142646 + C142647) * C152087 +
           (C142644 + C142643 + C142642) * C152183) *
              C151867 * C1348 +
          ((C142647 + C142646 + C142645) * C152183 +
           (C143908 + C143909 + C143910) * C152087) *
              C151867 * C1349 -
          ((C143911 + C143912 + C143913) * C152087 +
           (C143910 + C143909 + C143908) * C152183) *
              C151867 * C1350 +
          ((C143913 + C143912 + C143911) * C152183 +
           (C60624 * C152250 + C61286 * C152251 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C134230) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152256 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C152241 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152211) *
              C1259 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C152241 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C152256 -
           ((C144138 + C144139 + C144140) * C152087 +
            (C144134 + C144133 + C144132) * C152183) *
               C152211) *
              C1260 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C152256 -
           ((C62166 * C134230 + C60802 * C152251 + C60365 * C152250) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C152241 +
           ((C144140 + C144139 + C144138) * C152183 +
            (C60802 * C152250 + C62166 * C152251 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C134230) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C2216 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C143562 + C143563 + C143564) * C152087) *
               C2216 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C2215 -
           ((C68655 * C134230 + C65784 * C152251 + C61882 * C152250) * C152087 +
            (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                C152183) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C2215 -
           ((C143565 + C143566 + C143567) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C2216 +
           ((C65786 * C152250 + C65788 * C152251 + C118187 * C134230) *
                C152183 +
            (C65506 * C152250 + C65787 * C152251 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C134230) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C2216 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152211) *
              C152255 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C2216 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C2215 -
           ((C144138 + C144139 + C144140) * C152087 +
            (C144134 + C144133 + C144132) * C152183) *
               C152211) *
              C152239 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C2215 -
           ((C144825 + C144826 + C144827) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C2216 +
           ((C144140 + C144139 + C144138) * C152183 +
            (C60802 * C152250 + C62166 * C152251 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C134230) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C142642 + C142643 + C142644) * C152087) *
              C2446 -
          ((C143559 + C143560 + C143561) * C152087 +
           (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) * C152183) *
              C2447 +
          ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
           (C144132 + C144133 + C144134) * C152087) *
              C2448 -
          ((C68356 * C134230 + C67082 * C152251 + C62168 * C152250) * C152087 +
           (C68357 * C134230 + C68355 * C152251 + C65780 * C152250) * C152183) *
              C2449 +
          ((C68355 * C152250 + C68357 * C152251 + C119858 * C134230) * C152183 +
           (C67082 * C152250 + C68356 * C152251 +
            (C59432 * C68335 + C68348 + C68348 + C151790 * C68337) * C134230) *
               C152087) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C152167 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C1259 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C152167) *
               C1260 +
           (((C142647 + C142646 + C142645) * C152183 +
             (C143908 + C143909 + C143910) * C152087) *
                C152167 -
            ((C62166 * C134230 + C60802 * C152251 + C60365 * C152250) *
                 C152087 +
             (C144137 + C144136 + C144135) * C152183) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C152167) *
               C1259 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C152167 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C1260 +
           (((C144630 + C144629 + C144628) * C152183 +
             (C60370 * C152250 + C61880 * C152251 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C134230) *
                 C152087) *
                C151954 -
            ((C144335 + C144336 + C144337) * C152087 +
             (C142653 + C142652 + C142651) * C152183) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152167 -
           ((C62168 * C134230 + C60800 * C152251 + C60367 * C152250) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C60368 * C152250 + C61882 * C152251 + C65784 * C134230) *
                C152087) *
               C151954 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C152167 -
           ((C65787 * C134230 + C65506 * C152251 + C60373 * C152250) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C152250 + C66202 * C152251 + C118453 * C134230) *
                C152183 +
            (C65993 * C152250 + C65994 * C152251 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C134230) *
                C152087) *
               C151954 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C2814 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C2815 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C2816 -
           ((C68356 * C134230 + C67082 * C152251 + C62168 * C152250) * C152087 +
            (C68357 * C134230 + C68355 * C152251 + C65780 * C152250) *
                C152183) *
               C152224) *
              C151849 * C152152 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C143562 + C143563 + C143564) * C152087) *
               C2815 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C2814 -
           ((C145676 + C145677 + C145678) * C152087 +
            (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                C152183) *
               C2816 +
           ((C65783 * C152250 + C68857 * C152251 + C120188 * C134230) *
                C152183 +
            (C65784 * C152250 + C68655 * C152251 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C134230) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C152255 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C152239 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                C152087) *
               C151867 * C152208) *
              C335 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C152239 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C152255 -
           ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C152255 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C152239 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C59655 * C152250 + C60367 * C152251 + C60800 * C134230) * C152087) *
              C151867 * C151849 * C129 -
          ((C61882 * C134230 + C60368 * C152251 + C59659 * C152250) * C152087 +
           (C65782 * C134230 + C65781 * C152251 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
            C65785 * C152251 + C65786 * C134230) *
               C152183 +
           (C59663 * C152250 + C60373 * C152251 + C65506 * C134230) * C152087) *
              C151867 * C151849 * C131 -
          ((C65994 * C134230 + C65993 * C152251 + C59992 * C152250) * C152087 +
           (C66202 * C134230 + C66201 * C152251 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152250 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152251 +
            (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C134230) *
               C152183 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152250 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152251 +
            (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) * C134230) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C1259 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C1260 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                C152087) *
               C151867 * C152208) *
              C152252 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C1260 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C1259 -
           ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C1259 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C1260 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C142642 + C142643 + C142644) * C152087) *
              C151867 * C1347 -
          ((C142645 + C142646 + C142647) * C152087 +
           (C142644 + C142643 + C142642) * C152183) *
              C151867 * C1348 +
          ((C142647 + C142646 + C142645) * C152183 +
           (C143908 + C143909 + C143910) * C152087) *
              C151867 * C1349 -
          ((C143911 + C143912 + C143913) * C152087 +
           (C143910 + C143909 + C143908) * C152183) *
              C151867 * C1350 +
          ((C143913 + C143912 + C143911) * C152183 +
           (C60624 * C152250 + C61286 * C152251 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C134230) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C2216 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C143562 + C143563 + C143564) * C152087) *
               C2216 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C2215 -
           ((C68655 * C134230 + C65784 * C152251 + C61882 * C152250) * C152087 +
            (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                C152183) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C2215 -
           ((C143565 + C143566 + C143567) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C2216 +
           ((C65786 * C152250 + C65788 * C152251 + C118187 * C134230) *
                C152183 +
            (C65506 * C152250 + C65787 * C152251 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C134230) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C2216 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152211) *
              C152255 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C2216 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C2215 -
           ((C144138 + C144139 + C144140) * C152087 +
            (C144134 + C144133 + C144132) * C152183) *
               C152211) *
              C152239 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C2215 -
           ((C144825 + C144826 + C144827) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C2216 +
           ((C144140 + C144139 + C144138) * C152183 +
            (C60802 * C152250 + C62166 * C152251 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C134230) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C152166 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C4107) *
               C151912) *
              C151826 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C4107) *
               C152166 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
              C65785 * C152251 + C65786 * C134230) *
                 C152183 +
             (C142654 + C142655 + C142656) * C152087) *
                C4107 -
            ((C143565 + C143566 + C143567) * C152087 +
             (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                 C152183) *
                C151954) *
               C152166 +
           (((C143567 + C143566 + C143565) * C152183 +
             (C60372 * C152250 + C65507 * C152251 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C134230) *
                 C152087) *
                C151954 -
            ((C142657 + C142658 + C142659) * C152087 +
             (C142656 + C142655 + C142654) * C152183) *
                C4107) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C151950 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151957 +
            ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) *
                 C152183 +
             (C144132 + C144133 + C144134) * C152087) *
                C4779) *
               C152166 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151957 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C151950 -
            ((C144138 + C144139 + C144140) * C152087 +
             (C144134 + C144133 + C144132) * C152183) *
                C4779) *
               C151912) *
              C3241 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151957 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C151950 -
            ((C145676 + C145677 + C145678) * C152087 +
             (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                 C152183) *
                C4779) *
               C152166 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C151950 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151957 +
            ((C145678 + C145677 + C145676) * C152183 +
             (C61881 * C152250 + C67579 * C152251 +
              (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C134230) *
                 C152087) *
                C4779) *
               C151912) *
              C151832)) /
        (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C152255 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C4107) *
               C152239 +
           (((C142647 + C142646 + C142645) * C152183 +
             (C143908 + C143909 + C143910) * C152087) *
                C4107 -
            ((C144825 + C144826 + C144827) * C152087 +
             (C144137 + C144136 + C144135) * C152183) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C4107) *
               C152255 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C152239 +
           (((C144630 + C144629 + C144628) * C152183 +
             (C60370 * C152250 + C61880 * C152251 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C134230) *
                 C152087) *
                C151954 -
            ((C144335 + C144336 + C144337) * C152087 +
             (C142653 + C142652 + C142651) * C152183) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C143562 + C143563 + C143564) * C152087) *
               C151954 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C4107 -
           ((C143565 + C143566 + C143567) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C152250 + C66202 * C152251 + C118453 * C134230) *
                C152183 +
            (C65993 * C152250 + C65994 * C152251 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C134230) *
                C152087) *
               C151954 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152263 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C152260 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152247 -
           ((C146067 + C146068 + C146069) * C152087 +
            (C68357 * C134230 + C68355 * C152251 + C65780 * C152250) *
                C152183) *
               C152224) *
              C151849 * C3241 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C143562 + C143563 + C143564) * C152087) *
               C152260 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C152263 -
           ((C145676 + C145677 + C145678) * C152087 +
            (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                C152183) *
               C152247 +
           ((C65783 * C152250 + C68857 * C152251 + C120188 * C134230) *
                C152183 +
            (C65784 * C152250 + C68655 * C152251 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C134230) *
                C152087) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151950 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151957 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C4779) *
              C151849 * C151826 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C143562 + C143563 + C143564) * C152087) *
               C151957 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151950 -
           ((C145676 + C145677 + C145678) * C152087 +
            (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                C152183) *
               C4779) *
              C151849 * C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151950 -
           ((C143565 + C143566 + C143567) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C151957 +
           ((C65786 * C152250 + C65788 * C152251 + C118187 * C134230) *
                C152183 +
            (C65506 * C152250 + C65787 * C152251 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C134230) *
                C152087) *
               C4779) *
              C151849 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C143562 + C143563 + C143564) * C152087) *
               C151954 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C4107 -
           ((C143565 + C143566 + C143567) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C152250 + C66202 * C152251 + C118453 * C134230) *
                C152183 +
            (C65993 * C152250 + C65994 * C152251 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C134230) *
                C152087) *
               C151954 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C152255 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C4107) *
               C152239 +
           (((C142647 + C142646 + C142645) * C152183 +
             (C143908 + C143909 + C143910) * C152087) *
                C4107 -
            ((C144825 + C144826 + C144827) * C152087 +
             (C144137 + C144136 + C144135) * C152183) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C4107) *
               C152255 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C152239 +
           (((C144630 + C144629 + C144628) * C152183 +
             (C60370 * C152250 + C61880 * C152251 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C134230) *
                 C152087) *
                C151954 -
            ((C144335 + C144336 + C144337) * C152087 +
             (C142653 + C142652 + C142651) * C152183) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C152166 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C151912) *
              C739 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C151912 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C152166 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C151912) *
              C741 +
          (((C143072 + C143073 + C143074) * C152183 +
            (C59993 * C152250 + C93863 * C152251 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C134230) *
                C152087) *
               C151867 * C151912 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C1709 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C1710 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C151867 * C1711 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C151867 * C152218) *
              C152152 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C1710 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C1709 -
           ((C144335 + C144336 + C144337) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C1711 +
           ((C144337 + C144336 + C144335) * C152183 +
            (C59662 * C152250 + C61146 * C152251 +
             (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C134230) *
                C152087) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C152167 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C152166 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C60366 * C152250 + C60801 * C152251 + C62167 * C134230) *
                 C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C152167) *
               C152166 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C152167 -
            ((C67579 * C134230 + C61881 * C152251 + C60369 * C152250) *
                 C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
              C65785 * C152251 + C65786 * C134230) *
                 C152183 +
             (C142654 + C142655 + C142656) * C152087) *
                C152167 -
            ((C143565 + C143566 + C143567) * C152087 +
             (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                 C152183) *
                C151954) *
               C152166 +
           (((C143567 + C143566 + C143565) * C152183 +
             (C60372 * C152250 + C65507 * C152251 +
              (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C134230) *
                 C152087) *
                C151954 -
            ((C142657 + C142658 + C142659) * C152087 +
             (C142656 + C142655 + C142654) * C152183) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152167 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C1709 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C151954 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C152167) *
              C1710 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C152167 -
           ((C144825 + C144826 + C144827) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C151954) *
              C1711 +
          (((C144827 + C144826 + C144825) * C152183 +
            (C60803 * C152250 + C60804 * C152251 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C134230) *
                C152087) *
               C151954 -
           ((C143911 + C143912 + C143913) * C152087 +
            (C143910 + C143909 + C143908) * C152183) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C152255 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C152239 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                C152087) *
               C151867 * C152208) *
              C335 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C152239 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C152255 -
           ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C152255 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C152239 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C59655 * C152250 + C60367 * C152251 + C60800 * C134230) * C152087) *
              C151867 * C151849 * C129 -
          ((C61882 * C134230 + C60368 * C152251 + C59659 * C152250) * C152087 +
           (C65782 * C134230 + C65781 * C152251 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
            C65785 * C152251 + C65786 * C134230) *
               C152183 +
           (C59663 * C152250 + C60373 * C152251 + C65506 * C134230) * C152087) *
              C151867 * C151849 * C131 -
          ((C65994 * C134230 + C65993 * C152251 + C59992 * C152250) * C152087 +
           (C66202 * C134230 + C66201 * C152251 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152250 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152251 +
            (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C134230) *
               C152183 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152250 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152251 +
            (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) * C134230) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152256 -
           ((C62168 * C134230 + C60800 * C152251 + C60367 * C152250) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C152241 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C60800 * C152250 + C62168 * C152251 + C67082 * C134230) *
                C152087) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C60368 * C152250 + C61882 * C152251 + C65784 * C134230) *
                C152087) *
               C152241 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C152256 -
           ((C68655 * C134230 + C65784 * C152251 + C61882 * C152250) * C152087 +
            (C68857 * C134230 + C65783 * C152251 + C65782 * C152250) *
                C152183) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C152256 -
           ((C65787 * C134230 + C65506 * C152251 + C60373 * C152250) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C152241 +
           ((C65786 * C152250 + C65788 * C152251 + C118187 * C134230) *
                C152183 +
            (C65506 * C152250 + C65787 * C152251 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C134230) *
                C152087) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C1259 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C1260 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                C152087) *
               C151867 * C152208) *
              C152252 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C1260 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C1259 -
           ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C1259 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C1260 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C142642 + C142643 + C142644) * C152087) *
              C151867 * C1347 -
          ((C142645 + C142646 + C142647) * C152087 +
           (C142644 + C142643 + C142642) * C152183) *
              C151867 * C1348 +
          ((C142647 + C142646 + C142645) * C152183 +
           (C143908 + C143909 + C143910) * C152087) *
              C151867 * C1349 -
          ((C143911 + C143912 + C143913) * C152087 +
           (C143910 + C143909 + C143908) * C152183) *
              C151867 * C1350 +
          ((C143913 + C143912 + C143911) * C152183 +
           (C60624 * C152250 + C61286 * C152251 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C134230) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152256 -
           ((C143559 + C143560 + C143561) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C152241 +
           ((C65779 * C152250 + C65780 * C152251 + C68355 * C134230) * C152183 +
            (C144132 + C144133 + C144134) * C152087) *
               C152211) *
              C1259 +
          (((C143561 + C143560 + C143559) * C152183 +
            (C144135 + C144136 + C144137) * C152087) *
               C152241 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C152256 -
           ((C144138 + C144139 + C144140) * C152087 +
            (C144134 + C144133 + C144132) * C152183) *
               C152211) *
              C1260 +
          (((C142647 + C142646 + C142645) * C152183 +
            (C143908 + C143909 + C143910) * C152087) *
               C152256 -
           ((C62166 * C134230 + C60802 * C152251 + C60365 * C152250) * C152087 +
            (C144137 + C144136 + C144135) * C152183) *
               C152241 +
           ((C144140 + C144139 + C144138) * C152183 +
            (C60802 * C152250 + C62166 * C152251 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C134230) *
                C152087) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C152167 -
           ((C62168 * C134230 + C60800 * C152251 + C60367 * C152250) * C152087 +
            (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                C152183) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) * C152183 +
            (C60368 * C152250 + C61882 * C152251 + C65784 * C134230) *
                C152087) *
               C151954 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C152167 -
           ((C65787 * C134230 + C65506 * C152251 + C60373 * C152250) * C152087 +
            (C65788 * C134230 + C65786 * C152251 + C65785 * C152250) *
                C152183) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C152250 + C66202 * C152251 + C118453 * C134230) *
                C152183 +
            (C65993 * C152250 + C65994 * C152251 +
             (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C134230) *
                C152087) *
               C151954 -
           ((C143074 + C143073 + C143072) * C152087 +
            (C66202 * C134230 + C66201 * C152251 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
                C152183) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
              C65778 * C152251 + C65779 * C134230) *
                 C152183 +
             (C142642 + C142643 + C142644) * C152087) *
                C152167 -
            ((C143559 + C143560 + C143561) * C152087 +
             (C65780 * C134230 + C65779 * C152251 + C65778 * C152250) *
                 C152183) *
                C151954) *
               C1259 +
           (((C143561 + C143560 + C143559) * C152183 +
             (C144135 + C144136 + C144137) * C152087) *
                C151954 -
            ((C142645 + C142646 + C142647) * C152087 +
             (C142644 + C142643 + C142642) * C152183) *
                C152167) *
               C1260 +
           (((C142647 + C142646 + C142645) * C152183 +
             (C143908 + C143909 + C143910) * C152087) *
                C152167 -
            ((C62166 * C134230 + C60802 * C152251 + C60365 * C152250) *
                 C152087 +
             (C144137 + C144136 + C144135) * C152183) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C152250 + C65782 * C152251 + C65783 * C134230) *
                 C152183 +
             (C143562 + C143563 + C143564) * C152087) *
                C151954 -
            ((C142650 + C142649 + C142648) * C152087 +
             (C65782 * C134230 + C65781 * C152251 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                 C152183) *
                C152167) *
               C1259 +
           (((C142648 + C142649 + C142650) * C152183 +
             (C142651 + C142652 + C142653) * C152087) *
                C152167 -
            ((C144628 + C144629 + C144630) * C152087 +
             (C143564 + C143563 + C143562) * C152183) *
                C151954) *
               C1260 +
           (((C144630 + C144629 + C144628) * C152183 +
             (C60370 * C152250 + C61880 * C152251 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C134230) *
                 C152087) *
                C151954 -
            ((C144335 + C144336 + C144337) * C152087 +
             (C142653 + C142652 + C142651) * C152183) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C59655 * C152250 + C60367 * C152251 + C60800 * C134230) * C152087) *
              C151867 * C151849 * C129 -
          ((C61882 * C134230 + C60368 * C152251 + C59659 * C152250) * C152087 +
           (C65782 * C134230 + C65781 * C152251 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
               C152183) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
            C65785 * C152251 + C65786 * C134230) *
               C152183 +
           (C59663 * C152250 + C60373 * C152251 + C65506 * C134230) * C152087) *
              C151867 * C151849 * C131 -
          ((C65994 * C134230 + C65993 * C152251 + C59992 * C152250) * C152087 +
           (C66202 * C134230 + C66201 * C152251 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C152250) *
               C152183) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C152250 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152251 +
            (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C134230) *
               C152183 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C152250 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152251 +
            (C59432 * C2677 + C65263 + C65263 + C151790 * C2679) * C134230) *
               C152087) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C152255 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C152239 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                C152087) *
               C151867 * C152208) *
              C335 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C152239 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C152255 -
           ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C152255 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C152239 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
             C65778 * C152251 + C65779 * C134230) *
                C152183 +
            (C142642 + C142643 + C142644) * C152087) *
               C151867 * C1259 -
           ((C142645 + C142646 + C142647) * C152087 +
            (C142644 + C142643 + C142642) * C152183) *
               C151867 * C1260 +
           ((C142647 + C142646 + C142645) * C152183 +
            (C59657 * C152250 + C60365 * C152251 + C60802 * C134230) *
                C152087) *
               C151867 * C152208) *
              C152252 +
          (((C142648 + C142649 + C142650) * C152183 +
            (C142651 + C142652 + C142653) * C152087) *
               C151867 * C1260 -
           ((C142650 + C142649 + C142648) * C152087 +
            (C65782 * C134230 + C65781 * C152251 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C152250) *
                C152183) *
               C151867 * C1259 -
           ((C61880 * C134230 + C60370 * C152251 + C59661 * C152250) * C152087 +
            (C142653 + C142652 + C142651) * C152183) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C152250 +
             C65785 * C152251 + C65786 * C134230) *
                C152183 +
            (C142654 + C142655 + C142656) * C152087) *
               C151867 * C1259 -
           ((C142657 + C142658 + C142659) * C152087 +
            (C142656 + C142655 + C142654) * C152183) *
               C151867 * C1260 +
           ((C142659 + C142658 + C142657) * C152183 +
            (C59665 * C152250 + C60371 * C152251 +
             (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C134230) *
                C152087) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C152250 +
            C65778 * C152251 + C65779 * C134230) *
               C152183 +
           (C142642 + C142643 + C142644) * C152087) *
              C151867 * C1347 -
          ((C142645 + C142646 + C142647) * C152087 +
           (C142644 + C142643 + C142642) * C152183) *
              C151867 * C1348 +
          ((C142647 + C142646 + C142645) * C152183 +
           (C143908 + C143909 + C143910) * C152087) *
              C151867 * C1349 -
          ((C143911 + C143912 + C143913) * C152087 +
           (C143910 + C143909 + C143908) * C152183) *
              C151867 * C1350 +
          ((C143913 + C143912 + C143911) * C152183 +
           (C60624 * C152250 + C61286 * C152251 +
            (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C134230) *
               C152087) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C151908 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151915 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C3585) *
              C151826 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C151915 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C151908 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C3585) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C151908 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151915 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C151908 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151915 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C3585) *
              C151826 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151915 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C151908 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C3585) *
              C151835 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C151908 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151915 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C151908 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C151915 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C3585) *
              C151826 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C151915 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C151908 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C3585) *
              C151835 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C151908 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C151915 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C151908 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151915 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C152167 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C3585) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C151908 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151915 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C151908 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C151915 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C152167 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C3585) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C151908 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151915 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C152167 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C151908 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C152167) *
               C151915 +
           ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
             C62167 * C117887) *
                C152037 * C152167 -
            (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
             C60366 * C117884) *
                C152037 * C151954) *
               C3585) *
              C3241 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C152167) *
               C151908 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C152167 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151915 +
           ((C60369 * C117884 + C61881 * C117885 + C67579 * C117886 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C117887) *
                C152037 * C151954 -
            (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
             C59660 * C117884) *
                C152037 * C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C151867 * C3101 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C151912) *
                  C152261 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C151912 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C3101) *
                  C152254 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C101944 + C101945 + C101946) * C152113) *
                   C152037 * C151867 * C3101 -
               ((C52245 + C52246 + C52247) * C152113 +
                (C51234 + C51233 + C51232) * C101415) *
                   C152037 * C151867 * C151912) *
                  C152237 +
              (((C51701 + C51702 + C51703) * C101415 +
                (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                 C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                 C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                    C152113) *
                   C152037 * C151867 * C151912 -
               ((C102355 + C102354 + C102353) * C152113 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C101415) *
                   C152037 * C151867 * C3101) *
                  C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C151867 * C152262 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C152258 +
               ((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C151867 * C152244 -
               ((C53625 + C53626 + C53627) * C152113 +
                (C52620 + C52619 + C52618) * C101415) *
                   C152037 * C151867 * C152218) *
                  C3241 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C152258 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C152262 -
               ((C53413 + C53414 + C53415) * C152113 +
                (C51231 + C51230 + C51229) * C101415) *
                   C152037 * C151867 * C152244 +
               ((C53107 + C53106 + C53105) * C101415 +
                (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                 C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                 C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                    C152113) *
                   C152037 * C151867 * C152218) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152256 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C152241 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C152211) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C152241 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152256 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C152211) *
               C151912) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C152241 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152256 -
            ((C104972 + C104973 + C104974) * C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C152211) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152256 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C152241 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C3101 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C3101 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152262 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152258 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C152244 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C152258 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152262 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C152244 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152256 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C152241 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C152211) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C152241 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152256 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C152211) *
               C151912) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C152241 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152256 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C152211) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152256 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C152241 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C3101 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C151912) *
              C152261 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C151912 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C3101 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C151912) *
              C152237 +
          ((C59992 * C117884 + C65993 * C117885 + C65994 * C117886 +
            (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C117887) *
               C152037 * C151867 * C151912 -
           (C118453 * C117887 + C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152262 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C152258 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152244 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C151867 * C152218) *
              C3241 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C152258 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152262 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152244 +
           (C59661 * C117884 + C60370 * C117885 + C61880 * C117886 +
            (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C117887) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C152256 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C152241 +
            (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
             C68357 * C117887) *
                C152037 * C152211) *
               C3101 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C152241 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C152256 -
            (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
             C60800 * C117884) *
                C152037 * C152211) *
               C151912) *
              C3241 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C152241 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C152256 -
            (C120188 * C117887 + C68857 * C117886 + C65783 * C117885 +
             C65782 * C117884) *
                C152037 * C152211) *
               C3101 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C152256 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C152241 +
            (C61882 * C117884 + C65784 * C117885 + C68655 * C117886 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C117887) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151912) *
              C151826 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C152167 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C151912) *
              C151826 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C152167 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C152167 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C3101 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C152167) *
               C151912) *
              C151826 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C152167) *
               C3101 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C152167 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
             C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
                C152037 * C152167 -
            (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
             C65785 * C117884) *
                C152037 * C151954) *
               C3101 +
           ((C60373 * C117884 + C65506 * C117885 + C65787 * C117886 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C117887) *
                C152037 * C151954 -
            (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
             C59663 * C117884) *
                C152037 * C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C152262 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152258 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152244 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C151867 * C152218) *
              C3241 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152258 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152262 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152244 +
           ((C53107 + C53106 + C53105) * C101415 +
            (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
             C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
             C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                C152113) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C3101 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151912) *
              C152261 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151912 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C3101 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151912) *
              C152237 +
          (((C51701 + C51702 + C51703) * C101415 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152113) *
               C152037 * C151867 * C151912 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C3101 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C3101 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152262 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152258 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C152244 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C152258 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152262 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C152244 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C3101 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C151912) *
              C152261 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C151912 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C3101 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C151912) *
              C152237 +
          ((C59992 * C117884 + C65993 * C117885 + C65994 * C117886 +
            (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C117887) *
               C152037 * C151867 * C151912 -
           (C118453 * C117887 + C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152262 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C152258 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152244 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C151867 * C152218) *
              C3241 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C152258 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152262 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152244 +
           (C59661 * C117884 + C60370 * C117885 + C61880 * C117886 +
            (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C117887) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C151908 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151915 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C4107 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C3585) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C151908 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151915 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C151908 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C151915 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C4107 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C3585) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C151908 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151915 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C4107 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C151908 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C4107) *
               C151915 +
           ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
             C62167 * C117887) *
                C152037 * C4107 -
            (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
             C60366 * C117884) *
                C152037 * C151954) *
               C3585) *
              C152152 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C4107) *
               C151908 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C4107 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151915 +
           ((C60369 * C117884 + C61881 * C117885 + C67579 * C117886 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C117887) *
                C152037 * C151954 -
            (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
             C59660 * C117884) *
                C152037 * C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151950 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151957 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C4779) *
              C151908 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151957 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151950 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C4779) *
              C151915 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151950 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151957 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151950 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151957 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C4779) *
              C151908 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151957 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151950 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C4779) *
              C151915 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151950 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151957 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151950 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151957 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C4779) *
              C151908 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C151957 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151950 -
           (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
            C60800 * C117884) *
               C152037 * C4779) *
              C151915 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151950 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C151957 +
           (C60801 * C117884 + C62167 * C117885 + C67083 * C117886 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C117887) *
               C152037 * C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C101415 +
                 (C101932 + C101933 + C101934) * C152113) *
                    C152037 * C4107 -
                ((C101935 + C101936 + C101937) * C152113 +
                 (C101934 + C101933 + C101932) * C101415) *
                    C152037 * C151954) *
                   C3101 +
               (((C52241 + C52240 + C52239) * C101415 +
                 (C52887 + C52888 + C52889) * C152113) *
                    C152037 * C151954 -
                ((C52239 + C52240 + C52241) * C152113 +
                 (C51222 + C51221 + C51220) * C101415) *
                    C152037 * C4107) *
                   C151912) *
                  C152252 +
              ((((C101938 + C101939 + C101940) * C101415 +
                 (C101941 + C101942 + C101943) * C152113) *
                    C152037 * C151954 -
                ((C101940 + C101939 + C101938) * C152113 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C101415) *
                    C152037 * C4107) *
                   C3101 +
               (((C51226 + C51227 + C51228) * C101415 +
                 (C52242 + C52243 + C52244) * C152113) *
                    C152037 * C4107 -
                ((C54503 + C54504 + C54505) * C152113 +
                 (C52244 + C52243 + C52242) * C101415) *
                    C152037 * C151954) *
                   C151912) *
                  C152235 +
              ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                  C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                  C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                     C101415 +
                 (C101944 + C101945 + C101946) * C152113) *
                    C152037 * C4107 -
                ((C101947 + C101948 + C101949) * C152113 +
                 (C101946 + C101945 + C101944) * C101415) *
                    C152037 * C151954) *
                   C3101 +
               (((C52247 + C52246 + C52245) * C101415 +
                 (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                  C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                  C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                     C152113) *
                    C152037 * C151954 -
                ((C52245 + C52246 + C52247) * C152113 +
                 (C51234 + C51233 + C51232) * C101415) *
                    C152037 * C4107) *
                   C151912) *
                  C152202) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C4107 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C151954) *
                  C152262 +
              (((C52241 + C52240 + C52239) * C101415 +
                (C52887 + C52888 + C52889) * C152113) *
                   C152037 * C151954 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C4107) *
                  C152258 +
              (((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C4107 -
               ((C52893 + C52894 + C52895) * C152113 +
                (C52892 + C52891 + C52890) * C101415) *
                   C152037 * C151954) *
                  C152244 +
              (((C53627 + C53626 + C53625) * C101415 +
                (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                 C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                 C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                    C152113) *
                   C152037 * C151954 -
               ((C53625 + C53626 + C53627) * C152113 +
                (C52620 + C52619 + C52618) * C101415) *
                   C152037 * C4107) *
                  C152218) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152263 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152260 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C152247 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C3101 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C152260 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152263 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152247 +
           ((C54917 + C54916 + C54915) * C101415 +
            (C50875 * C9433 + C54195 + C54195 + C50870 * C9445 +
             C50877 * C9434 + C54196 + C54196 + C50871 * C9446 +
             C50879 * C18132 + C54197 + C54197 + C50872 * C18134) *
                C152113) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C4107 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C152262 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C4107) *
              C152258 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C4107 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C152244 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152263 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152260 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152247 -
           ((C113371 + C113372) * C6088 + (C113373 + C113374) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C3101 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C152260 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152263 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152247 +
           ((C113374 + C113373) * C6086 + (C113372 + C113371) * C6087 +
            (C62166 * C101415 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C152113) *
                C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C4107 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C3101 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C4107) *
               C3101 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C4107 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
             C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
                C152037 * C4107 -
            (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
             C65785 * C117884) *
                C152037 * C151954) *
               C3101 +
           ((C60373 * C117884 + C65506 * C117885 + C65787 * C117886 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C117887) *
                C152037 * C151954 -
            (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
             C59663 * C117884) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C4107 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C152262 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C151954 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C4107) *
              C152258 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C4107 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C151954) *
              C152244 +
          ((C60365 * C117884 + C60802 * C117885 + C62166 * C117886 +
            (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C117887) *
               C152037 * C151954 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152263 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C152260 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152247 -
           (C119858 * C117887 + C68357 * C117886 + C68355 * C117885 +
            C65780 * C117884) *
               C152037 * C152224) *
              C3101 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C152260 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C152263 -
           (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
            C60800 * C117884) *
               C152037 * C152247 +
           (C62168 * C117884 + C67082 * C117885 + C68356 * C117886 +
            (C59432 * C68335 + C68348 + C68348 + C151790 * C68337) * C117887) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C151950 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151957 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C4779) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151957 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C151950 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C4779) *
               C151912) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151957 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C151950 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C4779) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C151950 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151957 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C151950 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151957 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C4779) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151957 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C151950 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C4779) *
               C151912) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151957 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C151950 -
            ((C104972 + C104973 + C104974) * C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C4779) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C151950 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151957 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C151950 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151957 +
            (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
             C68357 * C117887) *
                C152037 * C4779) *
               C3101 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151957 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C151950 -
            (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
             C60800 * C117884) *
                C152037 * C4779) *
               C151912) *
              C152152 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151957 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C151950 -
            (C120188 * C117887 + C68857 * C117886 + C65783 * C117885 +
             C65782 * C117884) *
                C152037 * C4779) *
               C3101 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C151950 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151957 +
            (C61882 * C117884 + C65784 * C117885 + C68655 * C117886 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C117887) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C4107 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C152262 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151954 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C4107) *
              C152258 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C4107 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151954) *
              C152244 +
          (((C53627 + C53626 + C53625) * C101415 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152113) *
               C152037 * C151954 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C4107 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C4107 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C152262 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C4107) *
              C152258 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C4107 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C152244 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C4107 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C3101 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C4107) *
               C3101 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C4107 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
             C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
                C152037 * C4107 -
            (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
             C65785 * C117884) *
                C152037 * C151954) *
               C3101 +
           ((C60373 * C117884 + C65506 * C117885 + C65787 * C117886 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C117887) *
                C152037 * C151954 -
            (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
             C59663 * C117884) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C4107 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C152262 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C151954 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C4107) *
              C152258 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C4107 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C151954) *
              C152244 +
          ((C60365 * C117884 + C60802 * C117885 + C62166 * C117886 +
            (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C117887) *
               C152037 * C151954 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C151867 * C152166 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C151912) *
                  C739 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C151912 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C152166) *
                  C740 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C101944 + C101945 + C101946) * C152113) *
                   C152037 * C151867 * C152166 -
               ((C52245 + C52246 + C52247) * C152113 +
                (C51234 + C51233 + C51232) * C101415) *
                   C152037 * C151867 * C151912) *
                  C741 +
              (((C51701 + C51702 + C51703) * C101415 +
                (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
                 C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
                 C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                    C152113) *
                   C152037 * C151867 * C151912 -
               ((C50879 * C557 + C51900 + C51900 + C50872 * C581 +
                 C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                 C50875 * C547 + C51898 + C51898 + C50870 * C571) *
                    C152113 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C101415) *
                   C152037 * C151867 * C152166) *
                  C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C151867 * C1709 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C1710 +
               ((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C151867 * C1711 -
               ((C53625 + C53626 + C53627) * C152113 +
                (C52620 + C52619 + C52618) * C101415) *
                   C152037 * C151867 * C152218) *
                  C152152 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C1710 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C1709 -
               ((C53413 + C53414 + C53415) * C152113 +
                (C51231 + C51230 + C51229) * C101415) *
                   C152037 * C151867 * C1711 +
               ((C53107 + C53106 + C53105) * C101415 +
                (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
                 C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
                 C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                    C152113) *
                   C152037 * C151867 * C152218) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C2215 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C2216 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C152211) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C2216 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C2215 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C152211) *
               C151912) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C2216 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C2215 -
            ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
              C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
              C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                 C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C152211) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C2215 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C2216 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152166 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C739 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152166 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C741 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1709 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1710 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C1711 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C1710 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1709 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C1711 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C2215 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C2216 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C152211) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C2216 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C2215 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C152211) *
               C151912) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C2216 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C2215 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C152211) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C2215 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C2216 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152166 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C151912) *
              C739 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C151912 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C152166 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C151912) *
              C741 +
          ((C59992 * C117884 + C65993 * C117885 + C65994 * C117886 +
            (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C117887) *
               C152037 * C151867 * C151912 -
           ((C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C117887 +
            C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C1709 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C1710 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C1711 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C151867 * C152218) *
              C152152 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C1710 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C1709 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C1711 +
           (C59661 * C117884 + C60370 * C117885 + C61880 * C117886 +
            (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C117887) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C2215 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C2216 +
            (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
             C68357 * C117887) *
                C152037 * C152211) *
               C152166 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C2216 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C2215 -
            (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
             C60800 * C117884) *
                C152037 * C152211) *
               C151912) *
              C152152 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C2216 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C2215 -
            ((C59432 * C17804 + C68853 + C68853 + C151790 * C17812) * C117887 +
             C68857 * C117886 + C65783 * C117885 + C65782 * C117884) *
                C152037 * C152211) *
               C152166 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C2215 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C2216 +
            (C61882 * C117884 + C65784 * C117885 + C68655 * C117886 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C117887) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C101415 +
                 (C101932 + C101933 + C101934) * C152113) *
                    C152037 * C152167 -
                ((C101935 + C101936 + C101937) * C152113 +
                 (C101934 + C101933 + C101932) * C101415) *
                    C152037 * C151954) *
                   C152166 +
               (((C52241 + C52240 + C52239) * C101415 +
                 (C52887 + C52888 + C52889) * C152113) *
                    C152037 * C151954 -
                ((C52239 + C52240 + C52241) * C152113 +
                 (C51222 + C51221 + C51220) * C101415) *
                    C152037 * C152167) *
                   C151912) *
                  C335 +
              ((((C101938 + C101939 + C101940) * C101415 +
                 (C101941 + C101942 + C101943) * C152113) *
                    C152037 * C151954 -
                ((C101940 + C101939 + C101938) * C152113 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C101415) *
                    C152037 * C152167) *
                   C152166 +
               (((C51226 + C51227 + C51228) * C101415 +
                 (C52242 + C52243 + C52244) * C152113) *
                    C152037 * C152167 -
                ((C54503 + C54504 + C54505) * C152113 +
                 (C52244 + C52243 + C52242) * C101415) *
                    C152037 * C151954) *
                   C151912) *
                  C336 +
              ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                  C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                  C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                     C101415 +
                 (C101944 + C101945 + C101946) * C152113) *
                    C152037 * C152167 -
                ((C101947 + C101948 + C101949) * C152113 +
                 (C101946 + C101945 + C101944) * C101415) *
                    C152037 * C151954) *
                   C152166 +
               (((C52247 + C52246 + C52245) * C101415 +
                 (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
                  C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
                  C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                     C152113) *
                    C152037 * C151954 -
                ((C52245 + C52246 + C52247) * C152113 +
                 (C51234 + C51233 + C51232) * C101415) *
                    C152037 * C152167) *
                   C151912) *
                  C152202) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C152167 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C151954) *
                  C1709 +
              (((C52241 + C52240 + C52239) * C101415 +
                (C52887 + C52888 + C52889) * C152113) *
                   C152037 * C151954 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C152167) *
                  C1710 +
              (((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C152167 -
               ((C52893 + C52894 + C52895) * C152113 +
                (C52892 + C52891 + C52890) * C101415) *
                   C152037 * C151954) *
                  C1711 +
              (((C53627 + C53626 + C53625) * C101415 +
                (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
                 C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
                 C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                    C152113) *
                   C152037 * C151954 -
               ((C53625 + C53626 + C53627) * C152113 +
                (C52620 + C52619 + C52618) * C101415) *
                   C152037 * C152167) *
                  C152218) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2814 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2815 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C2816 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C152166 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C2815 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C2814 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C2816 +
           ((C54917 + C54916 + C54915) * C101415 +
            (C50875 * C9433 + C54195 + C54195 + C50870 * C9445 +
             C50877 * C9434 + C54196 + C54196 + C50871 * C9446 +
             C50879 * C18132 + C54197 + C54197 + C50872 * C18134) *
                C152113) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            ((C110858 + C110859) * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C60365 * C101415 + C60802 * C152113) * C6088) *
                C151954 -
            ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + (C110864 + C110865) * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             (C109947 + C109948) * C6088) *
                C152167 -
            ((C61880 * C152113 + C60370 * C101415) * C6088 +
             (C110865 + C110864) * C6087 + (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C152167 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C1709 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152167) *
              C1710 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152167 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C1711 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2814 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2815 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C2816 -
           ((C113371 + C113372) * C6088 + (C113373 + C113374) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C152166 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C2815 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C2814 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C2816 +
           ((C113374 + C113373) * C6086 + (C113372 + C113371) * C6087 +
            (C62166 * C101415 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C152113) *
                C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C152167 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C152166 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C152167) *
               C151912) *
              C335 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C152167) *
               C152166 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C152167 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
             C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
                C152037 * C152167 -
            (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
             C65785 * C117884) *
                C152037 * C151954) *
               C152166 +
           ((C60373 * C117884 + C65506 * C117885 + C65787 * C117886 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C117887) *
                C152037 * C151954 -
            (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
             C59663 * C117884) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152167 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C1709 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C151954 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C152167) *
              C1710 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C152167 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C151954) *
              C1711 +
          ((C60365 * C117884 + C60802 * C117885 + C62166 * C117886 +
            (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C117887) *
               C152037 * C151954 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C2814 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C2815 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C2816 -
           (C119858 * C117887 + C68357 * C117886 + C68355 * C117885 +
            C65780 * C117884) *
               C152037 * C152224) *
              C152166 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C2815 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C2814 -
           (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
            C60800 * C117884) *
               C152037 * C2816 +
           (C62168 * C117884 + C67082 * C117885 + C68356 * C117886 +
            (C59432 * C68335 + C68348 + C68348 + C151790 * C68337) * C117887) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                   C101415 +
               (C50875 * C550 + C51461 + C51461 + C50870 * C574 +
                C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                C50879 * C548 + C51459 + C51459 + C50872 * C572) *
                   C152113) *
                  C152037 * C151867 * C151849 * C129 -
              ((C50879 * C547 + C51470 + C51470 + C50872 * C571 +
                C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                C50875 * C549 + C51468 + C51468 + C50870 * C573) *
                   C152113 +
               (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                   C101415) *
                  C152037 * C151867 * C151849 * C130 +
              ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                   C101415 +
               (C50875 * C548 + C51485 + C51485 + C50870 * C572 +
                C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                C50879 * C555 + C51483 + C51483 + C50872 * C579) *
                   C152113) *
                  C152037 * C151867 * C151849 * C131 -
              ((C50879 * C557 + C51900 + C51900 + C50872 * C581 +
                C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                C50875 * C547 + C51898 + C51898 + C50870 * C571) *
                   C152113 +
               (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                   C101415) *
                  C152037 * C151867 * C151849 * C132 +
              ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                   C101415 +
               (C50875 * C555 + C101418 + C101418 + C50870 * C579 +
                C50877 * C557 + C101419 + C101419 + C50871 * C581 +
                C50879 * C882 + C101420 + C101420 + C50872 * C884) *
                   C152113) *
                  C152037 * C151867 * C151849 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C50875 * C550 + C51461 + C51461 + C50870 * C574 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50879 * C548 + C51459 + C51459 + C50872 * C572) *
                    C152113) *
                   C152037 * C151867 * C152255 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C152239 +
               ((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C151867 * C152208) *
                  C335 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C152239 -
               ((C50879 * C547 + C51470 + C51470 + C50872 * C571 +
                 C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                 C50875 * C549 + C51468 + C51468 + C50870 * C573) *
                    C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C152255 -
               ((C53413 + C53414 + C53415) * C152113 +
                (C51231 + C51230 + C51229) * C101415) *
                   C152037 * C151867 * C152208) *
                  C336 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C50875 * C548 + C51485 + C51485 + C50870 * C572 +
                 C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                 C50879 * C555 + C51483 + C51483 + C50872 * C579) *
                    C152113) *
                   C152037 * C151867 * C152255 -
               ((C52245 + C52246 + C52247) * C152113 +
                (C51234 + C51233 + C51232) * C101415) *
                   C152037 * C151867 * C152239 +
               ((C51237 + C51236 + C51235) * C101415 +
                (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                 C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                 C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                    C152113) *
                   C152037 * C151867 * C152208) *
                  C152202) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C152256 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C152241 +
               ((C101937 + C101936 + C101935) * C101415 +
                (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
                 C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                 C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                    C152113) *
                   C152037 * C152211) *
                  C151849 * C335 +
              (((C101938 + C101939 + C101940) * C101415 +
                (C101941 + C101942 + C101943) * C152113) *
                   C152037 * C152241 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C152256 -
               ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
                 C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
                 C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                    C152113 +
                (C101943 + C101942 + C101941) * C101415) *
                   C152037 * C152211) *
                  C151849 * C336 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C101944 + C101945 + C101946) * C152113) *
                   C152037 * C152256 -
               ((C101947 + C101948 + C101949) * C152113 +
                (C101946 + C101945 + C101944) * C101415) *
                   C152037 * C152241 +
               ((C101949 + C101948 + C101947) * C101415 +
                (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
                 C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
                 C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                    C152113) *
                   C152037 * C152211) *
                  C151849 * C152202) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C151867 * C1259 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C1260 +
               ((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C151867 * C152208) *
                  C152252 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C1260 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C1259 -
               ((C53413 + C53414 + C53415) * C152113 +
                (C51231 + C51230 + C51229) * C101415) *
                   C152037 * C151867 * C152208) *
                  C152235 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C101944 + C101945 + C101946) * C152113) *
                   C152037 * C151867 * C1259 -
               ((C52245 + C52246 + C52247) * C152113 +
                (C51234 + C51233 + C51232) * C101415) *
                   C152037 * C151867 * C1260 +
               ((C51237 + C51236 + C51235) * C101415 +
                (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                 C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                 C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                    C152113) *
                   C152037 * C151867 * C152208) *
                  C152202) -
         0.25 * std::pow(Pi, 2.5) *
             (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                   C101415 +
               (C101932 + C101933 + C101934) * C152113) *
                  C152037 * C151867 * C1347 -
              ((C52239 + C52240 + C52241) * C152113 +
               (C51222 + C51221 + C51220) * C101415) *
                  C152037 * C151867 * C1348 +
              ((C51225 + C51224 + C51223) * C101415 +
               (C52890 + C52891 + C52892) * C152113) *
                  C152037 * C151867 * C1349 -
              ((C53625 + C53626 + C53627) * C152113 +
               (C52620 + C52619 + C52618) * C101415) *
                  C152037 * C151867 * C1350 +
              ((C52623 + C52622 + C52621) * C101415 +
               (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 +
                C50877 * C8075 + C53617 + C53617 + C50871 * C8087 +
                C50879 * C8642 + C53618 + C53618 + C50872 * C8644) *
                   C152113) *
                  C152037 * C151867 * C1351) *
             C151821 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C152256 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C152241 +
               ((C101937 + C101936 + C101935) * C101415 +
                (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
                 C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                 C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                    C152113) *
                   C152037 * C152211) *
                  C1259 +
              (((C52241 + C52240 + C52239) * C101415 +
                (C52887 + C52888 + C52889) * C152113) *
                   C152037 * C152241 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C152256 -
               ((C54915 + C54916 + C54917) * C152113 +
                (C52889 + C52888 + C52887) * C101415) *
                   C152037 * C152211) *
                  C1260 +
              (((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C152256 -
               ((C52893 + C52894 + C52895) * C152113 +
                (C52892 + C52891 + C52890) * C101415) *
                   C152037 * C152241 +
               ((C52895 + C52894 + C52893) * C101415 +
                (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
                 C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
                 C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                    C152113) *
                   C152037 * C152211) *
                  C152208) *
             C151821 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C2215 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C2216 +
               ((C101937 + C101936 + C101935) * C101415 +
                (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
                 C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                 C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                    C152113) *
                   C152037 * C152211) *
                  C151849 * C152252 +
              (((C101938 + C101939 + C101940) * C101415 +
                (C101941 + C101942 + C101943) * C152113) *
                   C152037 * C2216 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C2215 -
               ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
                 C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
                 C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                    C152113 +
                (C101943 + C101942 + C101941) * C101415) *
                   C152037 * C152211) *
                  C151849 * C152235 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C101944 + C101945 + C101946) * C152113) *
                   C152037 * C2215 -
               ((C101947 + C101948 + C101949) * C152113 +
                (C101946 + C101945 + C101944) * C101415) *
                   C152037 * C2216 +
               ((C101949 + C101948 + C101947) * C101415 +
                (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
                 C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
                 C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                    C152113) *
                   C152037 * C152211) *
                  C151849 * C152202) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C2215 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C2216 +
               ((C101937 + C101936 + C101935) * C101415 +
                (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
                 C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
                 C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                    C152113) *
                   C152037 * C152211) *
                  C152255 +
              (((C52241 + C52240 + C52239) * C101415 +
                (C52887 + C52888 + C52889) * C152113) *
                   C152037 * C2216 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C2215 -
               ((C54915 + C54916 + C54917) * C152113 +
                (C52889 + C52888 + C52887) * C101415) *
                   C152037 * C152211) *
                  C152239 +
              (((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C2215 -
               ((C52893 + C52894 + C52895) * C152113 +
                (C52892 + C52891 + C52890) * C101415) *
                   C152037 * C2216 +
               ((C52895 + C52894 + C52893) * C101415 +
                (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
                 C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
                 C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                    C152113) *
                   C152037 * C152211) *
                  C152208) *
             C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C2446 -
          ((C101935 + C101936 + C101937) * C152113 +
           (C101934 + C101933 + C101932) * C101415) *
              C152037 * C2447 +
          ((C101937 + C101936 + C101935) * C101415 +
           (C104467 + C104468 + C104469) * C152113) *
              C152037 * C2448 -
          ((C104470 + C104471 + C104472) * C152113 +
           (C104469 + C104468 + C104467) * C101415) *
              C152037 * C2449 +
          ((C104472 + C104471 + C104470) * C101415 +
           (C50875 * C17805 + C104452 + C104452 + C50870 * C17813 +
            C50877 * C17804 + C104453 + C104453 + C50871 * C17812 +
            C50879 * C18342 + C104454 + C104454 + C50872 * C18344) *
               C152113) *
              C152037 * C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C60800 * C101415 + C62168 * C152113) * C6087 +
            (C60801 * C101415 + C62167 * C152113) * C6088) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C152241 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152256 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152256 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C152241 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C1259 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            (C111439 + C111440) * C6088) *
               C152241 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152256 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C1260 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152256 -
           ((C60804 * C152113 + C60803 * C101415) * C6088 +
            (C111440 + C111439) * C6087 + C111434 * C6086) *
               C152241 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C2216 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C2215 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C2215 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C2216 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C152255 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C2216 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C2215 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C152239 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C2215 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C2216 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C2446 -
          (C111434 * C6088 + (C110860 + C110861) * C6087 +
           (C65779 * C152113 + C65778 * C101415) * C6086) *
              C2447 +
          ((C65779 * C101415 + C65780 * C152113) * C6086 +
           (C111435 + C111436) * C6087 + C111443 * C6088) *
              C2448 -
          ((C67083 * C152113 + C62167 * C101415) * C6088 +
           (C67082 * C152113 + C62168 * C101415) * C6087 +
           (C68355 * C152113 + C65780 * C101415) * C6086) *
              C2449 +
          ((C68355 * C101415 + C68357 * C152113) * C6086 +
           (C67082 * C101415 + C68356 * C152113) * C6087 +
           (C67083 * C101415 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C152113) *
               C6088) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C151849 * C129 -
          (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
              C152037 * C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
           C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
              C152037 * C151867 * C151849 * C131 -
          ((C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C117887 +
           C66202 * C117886 + C66201 * C117885 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
              C152037 * C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C117884 +
           (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C117885 +
           (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C117886 +
           (C59432 * C2818 + C117889 + C117889 + C151790 * C2820) * C117887) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152255 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C152239 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C335 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C152239 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152255 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C152255 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C152239 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152256 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C152241 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C151849 * C335 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C152241 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C152256 -
           ((C59432 * C17804 + C68853 + C68853 + C151790 * C17812) * C117887 +
            C68857 * C117886 + C65783 * C117885 + C65782 * C117884) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C152256 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C152241 +
           (C65786 * C117884 + C65788 * C117885 + C118187 * C117886 +
            (C59432 * C18342 + C118184 + C118184 + C151790 * C18344) *
                C117887) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C1259 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C1260 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C152252 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C1260 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C1259 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C1259 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C1260 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C1347 -
          (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
           C59655 * C117884) *
              C152037 * C151867 * C1348 +
          (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
           C62167 * C117887) *
              C152037 * C151867 * C1349 -
          (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
           C59657 * C117884) *
              C152037 * C151867 * C1350 +
          (C59658 * C117884 + C60803 * C117885 + C60804 * C117886 +
           (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C117887) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152256 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C152241 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C1259 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C152241 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C152256 -
           (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
            C60800 * C117884) *
               C152037 * C152211) *
              C1260 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C152256 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C152241 +
           (C60801 * C117884 + C62167 * C117885 + C67083 * C117886 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C117887) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C2215 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C2216 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C151849 * C152252 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C2216 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C2215 -
           ((C59432 * C17804 + C68853 + C68853 + C151790 * C17812) * C117887 +
            C68857 * C117886 + C65783 * C117885 + C65782 * C117884) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C2215 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C2216 +
           (C65786 * C117884 + C65788 * C117885 + C118187 * C117886 +
            (C59432 * C18342 + C118184 + C118184 + C151790 * C18344) *
                C117887) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C2215 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C2216 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C152255 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C2216 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C2215 -
           (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
            C60800 * C117884) *
               C152037 * C152211) *
              C152239 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C2215 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C2216 +
           (C60801 * C117884 + C62167 * C117885 + C67083 * C117886 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C117887) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C2446 -
          (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
           C65778 * C117884) *
              C152037 * C2447 +
          (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
           C68357 * C117887) *
              C152037 * C2448 -
          (C119858 * C117887 + C68357 * C117886 + C68355 * C117885 +
           C65780 * C117884) *
              C152037 * C2449 +
          (C68355 * C117884 + C68357 * C117885 + C119858 * C117886 +
           (C59432 * C119849 + C119855 + C119855 + C151790 * C119851) *
               C117887) *
              C152037 * C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C152167 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C151954) *
                  C151849 * C739 +
              (((C101938 + C101939 + C101940) * C101415 +
                (C101941 + C101942 + C101943) * C152113) *
                   C152037 * C151954 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C152167) *
                  C151849 * C740 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C101944 + C101945 + C101946) * C152113) *
                   C152037 * C152167 -
               ((C101947 + C101948 + C101949) * C152113 +
                (C101946 + C101945 + C101944) * C101415) *
                   C152037 * C151954) *
                  C151849 * C741 +
              (((C102353 + C102354 + C102355) * C101415 +
                (C50875 * C554 + C102344 + C102344 + C50870 * C578 +
                 C50877 * C556 + C102345 + C102345 + C50871 * C580 +
                 C50879 * C558 + C102346 + C102346 + C50872 * C582) *
                    C152113) *
                   C152037 * C151954 -
               ((C102355 + C102354 + C102353) * C152113 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C101415) *
                   C152037 * C152167) *
                  C151849 * C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C101415 +
                 (C101932 + C101933 + C101934) * C152113) *
                    C152037 * C152167 -
                ((C101935 + C101936 + C101937) * C152113 +
                 (C101934 + C101933 + C101932) * C101415) *
                    C152037 * C151954) *
                   C1259 +
               (((C52241 + C52240 + C52239) * C101415 +
                 (C52887 + C52888 + C52889) * C152113) *
                    C152037 * C151954 -
                ((C52239 + C52240 + C52241) * C152113 +
                 (C51222 + C51221 + C51220) * C101415) *
                    C152037 * C152167) *
                   C1260 +
               (((C51225 + C51224 + C51223) * C101415 +
                 (C52890 + C52891 + C52892) * C152113) *
                    C152037 * C152167 -
                ((C52893 + C52894 + C52895) * C152113 +
                 (C52892 + C52891 + C52890) * C101415) *
                    C152037 * C151954) *
                   C152208) *
                  C152152 +
              ((((C101938 + C101939 + C101940) * C101415 +
                 (C101941 + C101942 + C101943) * C152113) *
                    C152037 * C151954 -
                ((C101940 + C101939 + C101938) * C152113 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C101415) *
                    C152037 * C152167) *
                   C1259 +
               (((C51226 + C51227 + C51228) * C101415 +
                 (C52242 + C52243 + C52244) * C152113) *
                    C152037 * C152167 -
                ((C54503 + C54504 + C54505) * C152113 +
                 (C52244 + C52243 + C52242) * C101415) *
                    C152037 * C151954) *
                   C1260 +
               (((C53415 + C53414 + C53413) * C101415 +
                 (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
                  C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
                  C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                     C152113) *
                    C152037 * C151954 -
                ((C53413 + C53414 + C53415) * C152113 +
                 (C51231 + C51230 + C51229) * C101415) *
                    C152037 * C152167) *
                   C152208) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2814 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2815 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C2816 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C151849 * C152152 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C2815 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C2814 -
           ((C104972 + C104973 + C104974) * C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C2816 +
           ((C104974 + C104973 + C104972) * C101415 +
            (C50875 * C2456 + C104963 + C104963 + C50870 * C2472 +
             C50877 * C2457 + C104964 + C104964 + C50871 * C2473 +
             C50879 * C2458 + C104965 + C104965 + C50872 * C2474) *
                C152113) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152167 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C1259 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C111439 + C111440) * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C1260 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C152167 -
            ((C60804 * C152113 + C60803 * C101415) * C6088 +
             (C111440 + C111439) * C6087 + C111434 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C1259 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C1260 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2814 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2815 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C2816 -
           ((C67083 * C152113 + C62167 * C101415) * C6088 +
            (C67082 * C152113 + C62168 * C101415) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C151849 * C152152 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C2815 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C2814 -
           ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C2816 +
           ((C65783 * C101415 + C68857 * C152113) * C6086 +
            (C65784 * C101415 + C68655 * C152113) * C6087 +
            (C67579 * C101415 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C152113) *
                C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152167 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C151849 * C739 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C151954 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C152167 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C151954) *
              C151849 * C741 +
          ((C66201 * C117884 + C66202 * C117885 + C118453 * C117886 +
            (C59432 * C2458 + C118450 + C118450 + C151790 * C2474) * C117887) *
               C152037 * C151954 -
           (C118453 * C117887 + C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C152167 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C1259 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C152167) *
               C1260 +
           ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
             C62167 * C117887) *
                C152037 * C152167 -
            (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
             C60366 * C117884) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C152167) *
               C1259 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C152167 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C1260 +
           ((C60369 * C117884 + C61881 * C117885 + C67579 * C117886 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C117887) *
                C152037 * C151954 -
            (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
             C59660 * C117884) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C2814 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C2815 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C2816 -
           (C119858 * C117887 + C68357 * C117886 + C68355 * C117885 +
            C65780 * C117884) *
               C152037 * C152224) *
              C151849 * C152152 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C2815 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C2814 -
           (C120188 * C117887 + C68857 * C117886 + C65783 * C117885 +
            C65782 * C117884) *
               C152037 * C2816 +
           (C65783 * C117884 + C68857 * C117885 + C120188 * C117886 +
            (C59432 * C17807 + C120185 + C120185 + C151790 * C17815) *
                C117887) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
            C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
            C50872 * C572) *
               C152113) *
              C152037 * C151867 * C151849 * C129 -
          ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
            C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
            C50870 * C573) *
               C152113 +
           (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
            C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
            C50870 * C159) *
               C101415) *
              C152037 * C151867 * C151849 * C130 +
          ((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
            C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
            C50872 * C162) *
               C101415 +
           (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
            C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
            C50872 * C579) *
               C152113) *
              C152037 * C151867 * C151849 * C131 -
          ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
            C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
            C50870 * C571) *
               C152113 +
           (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
            C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
            C50870 * C161) *
               C101415) *
              C152037 * C151867 * C151849 * C132 +
          ((C50875 * C146 + C50906 + C50906 + C50870 * C162 + C50877 * C147 +
            C50907 + C50907 + C50871 * C163 + C50879 * C148 + C50908 + C50908 +
            C50872 * C164) *
               C101415 +
           (C50875 * C555 + C101418 + C101418 + C50870 * C579 + C50877 * C557 +
            C101419 + C101419 + C50871 * C581 + C50879 * C882 + C101420 +
            C101420 + C50872 * C884) *
               C152113) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
             C50872 * C572) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152239 -
           ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
             C50870 * C573) *
                C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152255 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
             C50872 * C579) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1259 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C151867 * C1347 -
          ((C52239 + C52240 + C52241) * C152113 +
           (C51222 + C51221 + C51220) * C101415) *
              C152037 * C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C101415 +
           (C52890 + C52891 + C52892) * C152113) *
              C152037 * C151867 * C1349 -
          ((C53625 + C53626 + C53627) * C152113 +
           (C52620 + C52619 + C52618) * C101415) *
              C152037 * C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C101415 +
           (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 + C50877 * C8075 +
            C53617 + C53617 + C50871 * C8087 + C50879 * C8642 + C53618 +
            C53618 + C50872 * C8644) *
               C152113) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2215 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2216 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152252 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C2216 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C2215 -
           ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C2215 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C2216 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2215 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2216 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C152255 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C2216 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C2215 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152211) *
              C152239 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C2215 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C2216 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C2216 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C2215 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C2215 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C2216 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C152255 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C2216 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C2215 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C152239 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C2215 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C2216 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C151849 * C129 -
          (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
              C152037 * C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
           C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
              C152037 * C151867 * C151849 * C131 -
          ((C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C117887 +
           C66202 * C117886 + C66201 * C117885 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
              C152037 * C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C117884 +
           (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C117885 +
           (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C117886 +
           (C59432 * C2818 + C117889 + C117889 + C151790 * C2820) * C117887) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152255 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C152239 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C335 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C152239 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152255 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C152255 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C152239 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C1259 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C1260 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C152252 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C1260 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C1259 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C1259 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C1260 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C1347 -
          (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
           C59655 * C117884) *
              C152037 * C151867 * C1348 +
          (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
           C62167 * C117887) *
              C152037 * C151867 * C1349 -
          (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
           C59657 * C117884) *
              C152037 * C151867 * C1350 +
          (C59658 * C117884 + C60803 * C117885 + C60804 * C117886 +
           (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C117887) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C2215 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C2216 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C151849 * C152252 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C2216 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C2215 -
           ((C59432 * C17804 + C68853 + C68853 + C151790 * C17812) * C117887 +
            C68857 * C117886 + C65783 * C117885 + C65782 * C117884) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C2215 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C2216 +
           (C65786 * C117884 + C65788 * C117885 + C118187 * C117886 +
            (C59432 * C18342 + C118184 + C118184 + C151790 * C18344) *
                C117887) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C2215 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C2216 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C152255 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C2216 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C2215 -
           (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
            C60800 * C117884) *
               C152037 * C152211) *
              C152239 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C2215 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C2216 +
           (C60801 * C117884 + C62167 * C117885 + C67083 * C117886 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C117887) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151912) *
              C151826 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C4107 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C151912) *
              C151826 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C4107 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C4107 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C152166 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C4107) *
               C151912) *
              C151826 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C4107) *
               C152166 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C4107 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
             C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
                C152037 * C4107 -
            (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
             C65785 * C117884) *
                C152037 * C151954) *
               C152166 +
           ((C60373 * C117884 + C65506 * C117885 + C65787 * C117886 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C117887) *
                C152037 * C151954 -
            (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
             C59663 * C117884) *
                C152037 * C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C151950 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151957 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C4779) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151957 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C151950 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C4779) *
               C151912) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151957 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C151950 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C4779) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C151950 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151957 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C151950 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151957 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C4779) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151957 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C151950 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C4779) *
               C151912) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151957 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C151950 -
            ((C104972 + C104973 + C104974) * C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C4779) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C151950 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151957 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C151950 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151957 +
            (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
             C68357 * C117887) *
                C152037 * C4779) *
               C152166 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151957 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C151950 -
            (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
             C60800 * C117884) *
                C152037 * C4779) *
               C151912) *
              C3241 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151957 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C151950 -
            (C120188 * C117887 + C68857 * C117886 + C65783 * C117885 +
             C65782 * C117884) *
                C152037 * C4779) *
               C152166 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C151950 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151957 +
            (C61882 * C117884 + C65784 * C117885 + C68655 * C117886 +
             (C59432 * C18553 + C68854 + C68854 + C151790 * C18557) * C117887) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C101932 + C101933 + C101934) * C152113) *
                   C152037 * C4107 -
               ((C101935 + C101936 + C101937) * C152113 +
                (C101934 + C101933 + C101932) * C101415) *
                   C152037 * C151954) *
                  C151849 * C152261 +
              (((C101938 + C101939 + C101940) * C101415 +
                (C101941 + C101942 + C101943) * C152113) *
                   C152037 * C151954 -
               ((C101940 + C101939 + C101938) * C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C4107) *
                  C151849 * C152254 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C101944 + C101945 + C101946) * C152113) *
                   C152037 * C4107 -
               ((C101947 + C101948 + C101949) * C152113 +
                (C101946 + C101945 + C101944) * C101415) *
                   C152037 * C151954) *
                  C151849 * C152237 +
              (((C102353 + C102354 + C102355) * C101415 +
                (C50875 * C554 + C102344 + C102344 + C50870 * C578 +
                 C50877 * C556 + C102345 + C102345 + C50871 * C580 +
                 C50879 * C558 + C102346 + C102346 + C50872 * C582) *
                    C152113) *
                   C152037 * C151954 -
               ((C102355 + C102354 + C102353) * C152113 +
                (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                 C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                 C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                    C101415) *
                   C152037 * C4107) *
                  C151849 * C152212) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                  C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                  C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                     C101415 +
                 (C101932 + C101933 + C101934) * C152113) *
                    C152037 * C4107 -
                ((C101935 + C101936 + C101937) * C152113 +
                 (C101934 + C101933 + C101932) * C101415) *
                    C152037 * C151954) *
                   C152255 +
               (((C52241 + C52240 + C52239) * C101415 +
                 (C52887 + C52888 + C52889) * C152113) *
                    C152037 * C151954 -
                ((C52239 + C52240 + C52241) * C152113 +
                 (C51222 + C51221 + C51220) * C101415) *
                    C152037 * C4107) *
                   C152239 +
               (((C51225 + C51224 + C51223) * C101415 +
                 (C52890 + C52891 + C52892) * C152113) *
                    C152037 * C4107 -
                ((C52893 + C52894 + C52895) * C152113 +
                 (C52892 + C52891 + C52890) * C101415) *
                    C152037 * C151954) *
                   C152208) *
                  C3241 +
              ((((C101938 + C101939 + C101940) * C101415 +
                 (C101941 + C101942 + C101943) * C152113) *
                    C152037 * C151954 -
                ((C101940 + C101939 + C101938) * C152113 +
                 (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                  C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                  C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                     C101415) *
                    C152037 * C4107) *
                   C152255 +
               (((C51226 + C51227 + C51228) * C101415 +
                 (C52242 + C52243 + C52244) * C152113) *
                    C152037 * C4107 -
                ((C54503 + C54504 + C54505) * C152113 +
                 (C52244 + C52243 + C52242) * C101415) *
                    C152037 * C151954) *
                   C152239 +
               (((C53415 + C53414 + C53413) * C101415 +
                 (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
                  C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
                  C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                     C152113) *
                    C152037 * C151954 -
                ((C53413 + C53414 + C53415) * C152113 +
                 (C51231 + C51230 + C51229) * C101415) *
                    C152037 * C4107) *
                   C152208) *
                  C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152263 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152260 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C152247 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C151849 * C3241 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C152260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152263 -
           ((C104972 + C104973 + C104974) * C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152247 +
           ((C104974 + C104973 + C104972) * C101415 +
            (C50875 * C2456 + C104963 + C104963 + C50870 * C2472 +
             C50877 * C2457 + C104964 + C104964 + C50871 * C2473 +
             C50879 * C2458 + C104965 + C104965 + C50872 * C2474) *
                C152113) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C4107 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152255 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C152239 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C4107 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C152255 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C152239 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152263 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152260 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152247 -
           ((C113371 + C113372) * C6088 + (C113373 + C113374) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C151849 * C3241 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C152260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152263 -
           ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152247 +
           ((C65783 * C101415 + C68857 * C152113) * C6086 +
            (C65784 * C101415 + C68655 * C152113) * C6087 +
            (C67579 * C101415 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C152113) *
                C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C4107 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C151849 * C152261 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C151954 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C4107 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C151954) *
              C151849 * C152237 +
          ((C66201 * C117884 + C66202 * C117885 + C118453 * C117886 +
            (C59432 * C2458 + C118450 + C118450 + C151790 * C2474) * C117887) *
               C152037 * C151954 -
           (C118453 * C117887 + C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C4107 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C152255 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C4107) *
               C152239 +
           ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
             C62167 * C117887) *
                C152037 * C4107 -
            (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
             C60366 * C117884) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C4107) *
               C152255 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C4107 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C152239 +
           ((C60369 * C117884 + C61881 * C117885 + C67579 * C117886 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C117887) *
                C152037 * C151954 -
            (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
             C59660 * C117884) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152263 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C152260 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152247 -
           (C119858 * C117887 + C68357 * C117886 + C68355 * C117885 +
            C65780 * C117884) *
               C152037 * C152224) *
              C151849 * C3241 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C152260 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C152263 -
           (C120188 * C117887 + C68857 * C117886 + C65783 * C117885 +
            C65782 * C117884) *
               C152037 * C152247 +
           (C65783 * C117884 + C68857 * C117885 + C120188 * C117886 +
            (C59432 * C17807 + C120185 + C120185 + C151790 * C17815) *
                C117887) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151950 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151957 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C4779) *
              C151849 * C151826 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C151957 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151950 -
           ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C4779) *
              C151849 * C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151950 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151957 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151950 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151957 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C4779) *
              C151849 * C151826 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151957 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151950 -
           ((C104972 + C104973 + C104974) * C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C4779) *
              C151849 * C151835 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151950 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151957 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151950 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151957 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C4779) *
              C151849 * C151826 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C151957 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151950 -
           (C120188 * C117887 + C68857 * C117886 + C65783 * C117885 +
            C65782 * C117884) *
               C152037 * C4779) *
              C151849 * C151835 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151950 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C151957 +
           (C65786 * C117884 + C65788 * C117885 + C118187 * C117886 +
            (C59432 * C18342 + C118184 + C118184 + C151790 * C18344) *
                C117887) *
               C152037 * C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152255 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C152239 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C4107 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C152255 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C152239 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C4107 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C151849 * C152261 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151954 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C4107 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151954) *
              C151849 * C152237 +
          (((C102353 + C102354 + C102355) * C101415 +
            (C50875 * C554 + C102344 + C102344 + C50870 * C578 + C50877 * C556 +
             C102345 + C102345 + C50871 * C580 + C50879 * C558 + C102346 +
             C102346 + C50872 * C582) *
                C152113) *
               C152037 * C151954 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C4107 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152255 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C152239 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C4107 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C152255 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C152239 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C4107 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C151849 * C152261 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C151954 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C4107 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C151954) *
              C151849 * C152237 +
          ((C66201 * C117884 + C66202 * C117885 + C118453 * C117886 +
            (C59432 * C2458 + C118450 + C118450 + C151790 * C2474) * C117887) *
               C152037 * C151954 -
           (C118453 * C117887 + C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C4107 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C152255 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C4107) *
               C152239 +
           ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
             C62167 * C117887) *
                C152037 * C4107 -
            (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
             C60366 * C117884) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C4107) *
               C152255 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C4107 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C152239 +
           ((C60369 * C117884 + C61881 * C117885 + C67579 * C117886 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C117887) *
                C152037 * C151954 -
            (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
             C59660 * C117884) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1709 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1710 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C1711 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C151867 * C152218) *
              C152152 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1710 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1709 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C1711 +
           ((C53107 + C53106 + C53105) * C101415 +
            (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
             C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
             C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                C152113) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C152166 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151912) *
              C739 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151912 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C152166 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151912) *
              C741 +
          (((C51701 + C51702 + C51703) * C101415 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152113) *
               C152037 * C151867 * C151912 -
           ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
             C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
             C50870 * C571) *
                C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152166 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C739 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152166 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C741 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1709 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1710 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C1711 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C1710 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1709 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C1711 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152166 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C151912) *
              C739 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C151912 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C152166 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C151912) *
              C741 +
          ((C59992 * C117884 + C65993 * C117885 + C65994 * C117886 +
            (C59432 * C2958 + C66196 + C66196 + C151790 * C2966) * C117887) *
               C152037 * C151867 * C151912 -
           ((C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C117887 +
            C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C1709 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C1710 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C1711 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C151867 * C152218) *
              C152152 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C1710 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C1709 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C1711 +
           (C59661 * C117884 + C60370 * C117885 + C61880 * C117886 +
            (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) * C117887) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152167 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C1709 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151954 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152167) *
              C1710 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C152167 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151954) *
              C1711 +
          (((C53627 + C53626 + C53625) * C101415 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152113) *
               C152037 * C151954 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C151912) *
              C335 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C152167 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            ((C110858 + C110859) * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C60365 * C101415 + C60802 * C152113) * C6088) *
                C151954 -
            ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + (C110864 + C110865) * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             (C109947 + C109948) * C6088) *
                C152167 -
            ((C61880 * C152113 + C60370 * C101415) * C6088 +
             (C110865 + C110864) * C6087 + (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C152167 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C1709 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152167) *
              C1710 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152167 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C1711 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C152167 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C152166 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C152167) *
               C151912) *
              C335 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C152167) *
               C152166 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C152167 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
             C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
                C152037 * C152167 -
            (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
             C65785 * C117884) *
                C152037 * C151954) *
               C152166 +
           ((C60373 * C117884 + C65506 * C117885 + C65787 * C117886 +
             (C59432 * C18132 + C65755 + C65755 + C151790 * C18134) * C117887) *
                C152037 * C151954 -
            (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
             C59663 * C117884) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152167 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C1709 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C151954 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C152167) *
              C1710 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C152167 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C151954) *
              C1711 +
          ((C60365 * C117884 + C60802 * C117885 + C62166 * C117886 +
            (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C117887) *
               C152037 * C151954 -
           (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
            C59657 * C117884) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                   C101415 +
               (C50875 * C550 + C51461 + C51461 + C50870 * C574 +
                C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                C50879 * C548 + C51459 + C51459 + C50872 * C572) *
                   C152113) *
                  C152037 * C151867 * C151849 * C129 -
              ((C50879 * C547 + C51470 + C51470 + C50872 * C571 +
                C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                C50875 * C549 + C51468 + C51468 + C50870 * C573) *
                   C152113 +
               (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                   C101415) *
                  C152037 * C151867 * C151849 * C130 +
              ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                   C101415 +
               (C50875 * C548 + C51485 + C51485 + C50870 * C572 +
                C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                C50879 * C555 + C51483 + C51483 + C50872 * C579) *
                   C152113) *
                  C152037 * C151867 * C151849 * C131 -
              ((C50879 * C557 + C51900 + C51900 + C50872 * C581 +
                C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                C50875 * C547 + C51898 + C51898 + C50870 * C571) *
                   C152113 +
               (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                   C101415) *
                  C152037 * C151867 * C151849 * C132 +
              ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                   C101415 +
               (C50875 * C555 + C101418 + C101418 + C50870 * C579 +
                C50877 * C557 + C101419 + C101419 + C50871 * C581 +
                C50879 * C882 + C101420 + C101420 + C50872 * C884) *
                   C152113) *
                  C152037 * C151867 * C151849 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C50875 * C550 + C51461 + C51461 + C50870 * C574 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50879 * C548 + C51459 + C51459 + C50872 * C572) *
                    C152113) *
                   C152037 * C151867 * C152255 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C152239 +
               ((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C151867 * C152208) *
                  C335 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C152239 -
               ((C50879 * C547 + C51470 + C51470 + C50872 * C571 +
                 C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                 C50875 * C549 + C51468 + C51468 + C50870 * C573) *
                    C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C152255 -
               ((C53413 + C53414 + C53415) * C152113 +
                (C51231 + C51230 + C51229) * C101415) *
                   C152037 * C151867 * C152208) *
                  C336 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C50875 * C548 + C51485 + C51485 + C50870 * C572 +
                 C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                 C50879 * C555 + C51483 + C51483 + C50872 * C579) *
                    C152113) *
                   C152037 * C151867 * C152255 -
               ((C52245 + C52246 + C52247) * C152113 +
                (C51234 + C51233 + C51232) * C101415) *
                   C152037 * C151867 * C152239 +
               ((C51237 + C51236 + C51235) * C101415 +
                (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                 C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                 C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                    C152113) *
                   C152037 * C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152256 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152241 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C151849 * C335 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C152241 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152256 -
           ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C152256 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C152241 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1259 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C151867 * C1347 -
          ((C52239 + C52240 + C52241) * C152113 +
           (C51222 + C51221 + C51220) * C101415) *
              C152037 * C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C101415 +
           (C52890 + C52891 + C52892) * C152113) *
              C152037 * C151867 * C1349 -
          ((C53625 + C53626 + C53627) * C152113 +
           (C52620 + C52619 + C52618) * C101415) *
              C152037 * C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C101415 +
           (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 + C50877 * C8075 +
            C53617 + C53617 + C50871 * C8087 + C50879 * C8642 + C53618 +
            C53618 + C50872 * C8644) *
               C152113) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152256 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152241 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C1259 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C152241 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152256 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152211) *
              C1260 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C152256 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C152241 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C60800 * C101415 + C62168 * C152113) * C6087 +
            (C60801 * C101415 + C62167 * C152113) * C6088) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C152241 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152256 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152256 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C152241 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C1259 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            (C111439 + C111440) * C6088) *
               C152241 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152256 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C1260 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152256 -
           ((C60804 * C152113 + C60803 * C101415) * C6088 +
            (C111440 + C111439) * C6087 + C111434 * C6086) *
               C152241 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C151849 * C129 -
          (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
              C152037 * C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
           C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
              C152037 * C151867 * C151849 * C131 -
          ((C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C117887 +
           C66202 * C117886 + C66201 * C117885 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
              C152037 * C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C117884 +
           (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C117885 +
           (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C117886 +
           (C59432 * C2818 + C117889 + C117889 + C151790 * C2820) * C117887) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152255 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C152239 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C335 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C152239 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152255 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C152255 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C152239 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152256 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C152241 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C151849 * C335 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C152241 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C152256 -
           ((C59432 * C17804 + C68853 + C68853 + C151790 * C17812) * C117887 +
            C68857 * C117886 + C65783 * C117885 + C65782 * C117884) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C152256 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C152241 +
           (C65786 * C117884 + C65788 * C117885 + C118187 * C117886 +
            (C59432 * C18342 + C118184 + C118184 + C151790 * C18344) *
                C117887) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C1259 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C1260 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C152252 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C1260 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C1259 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C1259 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C1260 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C1347 -
          (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
           C59655 * C117884) *
              C152037 * C151867 * C1348 +
          (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
           C62167 * C117887) *
              C152037 * C151867 * C1349 -
          (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
           C59657 * C117884) *
              C152037 * C151867 * C1350 +
          (C59658 * C117884 + C60803 * C117885 + C60804 * C117886 +
           (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C117887) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152256 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C152241 +
           (C65779 * C117884 + C65780 * C117885 + C68355 * C117886 +
            C68357 * C117887) *
               C152037 * C152211) *
              C1259 +
          ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
            C67082 * C117887) *
               C152037 * C152241 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C152256 -
           (C68356 * C117887 + C67082 * C117886 + C62168 * C117885 +
            C60800 * C117884) *
               C152037 * C152211) *
              C1260 +
          ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C152256 -
           (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
            C60366 * C117884) *
               C152037 * C152241 +
           (C60801 * C117884 + C62167 * C117885 + C67083 * C117886 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C117887) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C1259 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C1260 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C152167 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C1259 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C1260 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152167 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C151849 * C739 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151954 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C152167 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151954) *
              C151849 * C741 +
          (((C102353 + C102354 + C102355) * C101415 +
            (C50875 * C554 + C102344 + C102344 + C50870 * C578 + C50877 * C556 +
             C102345 + C102345 + C50871 * C580 + C50879 * C558 + C102346 +
             C102346 + C50872 * C582) *
                C152113) *
               C152037 * C151954 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152167 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C1259 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C111439 + C111440) * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C1260 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C152167 -
            ((C60804 * C152113 + C60803 * C101415) * C6088 +
             (C111440 + C111439) * C6087 + C111434 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C1259 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C1260 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C152167 -
           (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
            C65778 * C117884) *
               C152037 * C151954) *
              C151849 * C739 +
          ((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
            C68857 * C117887) *
               C152037 * C151954 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C152167 -
           (C118187 * C117887 + C65788 * C117886 + C65786 * C117885 +
            C65785 * C117884) *
               C152037 * C151954) *
              C151849 * C741 +
          ((C66201 * C117884 + C66202 * C117885 + C118453 * C117886 +
            (C59432 * C2458 + C118450 + C118450 + C151790 * C2474) * C117887) *
               C152037 * C151954 -
           (C118453 * C117887 + C66202 * C117886 + C66201 * C117885 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
             C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
                C152037 * C152167 -
            (C68355 * C117887 + C65780 * C117886 + C65779 * C117885 +
             C65778 * C117884) *
                C152037 * C151954) *
               C1259 +
           ((C60367 * C117884 + C60800 * C117885 + C62168 * C117886 +
             C67082 * C117887) *
                C152037 * C151954 -
            (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
             C59655 * C117884) *
                C152037 * C152167) *
               C1260 +
           ((C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
             C62167 * C117887) *
                C152037 * C152167 -
            (C67083 * C117887 + C62167 * C117886 + C60801 * C117885 +
             C60366 * C117884) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          (((C65781 * C117884 + C65782 * C117885 + C65783 * C117886 +
             C68857 * C117887) *
                C152037 * C151954 -
            (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
                C152037 * C152167) *
               C1259 +
           ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
             C65784 * C117887) *
                C152037 * C152167 -
            (C68655 * C117887 + C65784 * C117886 + C61882 * C117885 +
             C60368 * C117884) *
                C152037 * C151954) *
               C1260 +
           ((C60369 * C117884 + C61881 * C117885 + C67579 * C117886 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C117887) *
                C152037 * C151954 -
            (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
             C59660 * C117884) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
             C50872 * C572) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152239 -
           ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
             C50870 * C573) *
                C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152255 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
             C50872 * C579) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
            C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
            C50872 * C572) *
               C152113) *
              C152037 * C151867 * C151849 * C129 -
          ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
            C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
            C50870 * C573) *
               C152113 +
           (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
            C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
            C50870 * C159) *
               C101415) *
              C152037 * C151867 * C151849 * C130 +
          ((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
            C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
            C50872 * C162) *
               C101415 +
           (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
            C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
            C50872 * C579) *
               C152113) *
              C152037 * C151867 * C151849 * C131 -
          ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
            C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
            C50870 * C571) *
               C152113 +
           (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
            C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
            C50870 * C161) *
               C101415) *
              C152037 * C151867 * C151849 * C132 +
          ((C50875 * C146 + C50906 + C50906 + C50870 * C162 + C50877 * C147 +
            C50907 + C50907 + C50871 * C163 + C50879 * C148 + C50908 + C50908 +
            C50872 * C164) *
               C101415 +
           (C50875 * C555 + C101418 + C101418 + C50870 * C579 + C50877 * C557 +
            C101419 + C101419 + C50871 * C581 + C50879 * C882 + C101420 +
            C101420 + C50872 * C884) *
               C152113) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1259 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C151867 * C1347 -
          ((C52239 + C52240 + C52241) * C152113 +
           (C51222 + C51221 + C51220) * C101415) *
              C152037 * C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C101415 +
           (C52890 + C52891 + C52892) * C152113) *
              C152037 * C151867 * C1349 -
          ((C53625 + C53626 + C53627) * C152113 +
           (C52620 + C52619 + C52618) * C101415) *
              C152037 * C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C101415 +
           (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 + C50877 * C8075 +
            C53617 + C53617 + C50871 * C8087 + C50879 * C8642 + C53618 +
            C53618 + C50872 * C8644) *
               C152113) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C151849 * C129 -
          (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
           (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
              C152037 * C151867 * C151849 * C130 +
          ((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
           C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
              C152037 * C151867 * C151849 * C131 -
          ((C59432 * C2451 + C66195 + C66195 + C151790 * C2467) * C117887 +
           C66202 * C117886 + C66201 * C117885 +
           (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C117884) *
              C152037 * C151867 * C151849 * C132 +
          ((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C117884 +
           (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C117885 +
           (C59432 * C556 + C65261 + C65261 + C151790 * C580) * C117886 +
           (C59432 * C2818 + C117889 + C117889 + C151790 * C2820) * C117887) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C152255 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C152239 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C335 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C152239 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C152255 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C152255 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C152239 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
            C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
               C152037 * C151867 * C1259 -
           (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
            C59655 * C117884) *
               C152037 * C151867 * C1260 +
           (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
            C62167 * C117887) *
               C152037 * C151867 * C152208) *
              C152252 +
          ((C59659 * C117884 + C60368 * C117885 + C61882 * C117886 +
            C65784 * C117887) *
               C152037 * C151867 * C1260 -
           (C65783 * C117887 + C65782 * C117886 + C65781 * C117885 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C117884) *
               C152037 * C151867 * C1259 -
           (C67579 * C117887 + C61881 * C117886 + C60369 * C117885 +
            C59660 * C117884) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C117884 +
            C65785 * C117885 + C65786 * C117886 + C65788 * C117887) *
               C152037 * C151867 * C1259 -
           (C65787 * C117887 + C65506 * C117886 + C60373 * C117885 +
            C59663 * C117884) *
               C152037 * C151867 * C1260 +
           (C59664 * C117884 + C60372 * C117885 + C65507 * C117886 +
            (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C117887) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C117884 +
           C65778 * C117885 + C65779 * C117886 + C65780 * C117887) *
              C152037 * C151867 * C1347 -
          (C62168 * C117887 + C60800 * C117886 + C60367 * C117885 +
           C59655 * C117884) *
              C152037 * C151867 * C1348 +
          (C59656 * C117884 + C60366 * C117885 + C60801 * C117886 +
           C62167 * C117887) *
              C152037 * C151867 * C1349 -
          (C62166 * C117887 + C60802 * C117886 + C60365 * C117885 +
           C59657 * C117884) *
              C152037 * C151867 * C1350 +
          (C59658 * C117884 + C60803 * C117885 + C60804 * C117886 +
           (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C117887) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C151908 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C151915 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C3585) *
              C151826 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C151915 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C151908 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C3585) *
              C151835 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C151908 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C151915 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[326] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152250 +
                      (C82888 + C82889) * C152251 + C134670 * C134230) *
                         C152037 * C152167 -
                     (C137169 * C134230 + (C82890 + C82891) * C152251 +
                      (C82889 + C82888) * C152250) *
                         C152037 * C151954) *
                        C151908 +
                    ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) *
                         C152037 * C151954 -
                     (C84576 * C134230 + C83829 * C152251 +
                      (C73951 + C73950) * C152250) *
                         C152037 * C152167) *
                        C151915 +
                    ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) *
                         C152037 * C152167 -
                     ((C77650 + C77651) * C134230 + C84579 * C152251 +
                      C75586 * C152250) *
                         C152037 * C151954) *
                        C3585) *
                       C3241 +
                   ((((C82892 + C82893) * C152250 +
                      (C82894 + C82895) * C152251 + C137667 * C134230) *
                         C152037 * C151954 -
                     (C134671 * C134230 + (C82893 + C82892) * C152251 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152250) *
                         C152037 * C152167) *
                        C151908 +
                    (((C73956 + C73957) * C152250 + C83830 * C152251 +
                      C86646 * C134230) *
                         C152037 * C152167 -
                     ((C86656 + C86657) * C134230 + C86651 * C152251 +
                      C83831 * C152250) *
                         C152037 * C151954) *
                        C151915 +
                    ((C76134 * C152250 + (C77235 + C77234) * C152251 +
                      (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
                       C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                          C134230) *
                         C152037 * C151954 -
                     ((C77234 + C77235) * C134230 + C85224 * C152251 +
                      C73969 * C152250) *
                         C152037 * C152167) *
                        C3585) *
                       C151832)) /
                 (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C152262 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C152258 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152244 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C151867 * C152218) *
              C3241 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C152258 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C152262 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152244 +
           (C75830 * C152250 + (C76147 + C76146) * C152251 +
            (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
             C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                C134230) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C3101 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C151912) *
              C152261 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C151912 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C3101 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C151912) *
              C152237 +
          (((C74440 + C74441) * C152250 + (C83168 + C83169) * C152251 +
            (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
             C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                C134230) *
               C152037 * C151867 * C151912 -
           ((C135084 + C135083) * C134230 + (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C152256 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C152241 +
            (C134670 * C152250 + (C86254 + C86255) * C152251 +
             C137170 * C134230) *
                C152037 * C152211) *
               C3101 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C152241 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C152256 -
            ((C86256 + C86257) * C134230 + C87189 * C152251 +
             C84576 * C152250) *
                C152037 * C152211) *
               C151912) *
              C3241 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             C137667 * C134230) *
                C152037 * C152241 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C152256 -
            ((C137678 + C137679) * C134230 + (C86928 + C86929) * C152251 +
             C134671 * C152250) *
                C152037 * C152211) *
               C3101 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C152256 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C152241 +
            (C86646 * C152250 + (C86657 + C86656) * C152251 +
             (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
              C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                 C134230) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C152167 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C3101 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C152167) *
               C151912) *
              C151826 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             C137667 * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C152167) *
               C3101 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C152167 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152250 +
             (C82896 + C82897) * C152251 + C134672 * C134230) *
                C152037 * C152167 -
            ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
             (C82897 + C82896) * C152250) *
                C152037 * C151954) *
               C3101 +
           ((C83832 * C152250 + (C82899 + C82898) * C152251 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C134230) *
                C152037 * C151954 -
            ((C82898 + C82899) * C134230 + C83833 * C152251 +
             (C73963 + C73962) * C152250) *
                C152037 * C152167) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C3101 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C151912) *
              C152261 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C151912 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C3101 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C151912) *
              C152237 +
          (((C74440 + C74441) * C152250 + (C83168 + C83169) * C152251 +
            (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
             C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                C134230) *
               C152037 * C151867 * C151912 -
           ((C135084 + C135083) * C134230 + (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C152262 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C152258 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152244 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C151867 * C152218) *
              C3241 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C152258 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C152262 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152244 +
           (C75830 * C152250 + (C76147 + C76146) * C152251 +
            (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
             C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                C134230) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[330] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152250 +
                      (C82888 + C82889) * C152251 + C134670 * C134230) *
                         C152037 * C4107 -
                     (C137169 * C134230 + (C82890 + C82891) * C152251 +
                      (C82889 + C82888) * C152250) *
                         C152037 * C151954) *
                        C151908 +
                    ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) *
                         C152037 * C151954 -
                     (C84576 * C134230 + C83829 * C152251 +
                      (C73951 + C73950) * C152250) *
                         C152037 * C4107) *
                        C151915 +
                    ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) *
                         C152037 * C4107 -
                     ((C77650 + C77651) * C134230 + C84579 * C152251 +
                      C75586 * C152250) *
                         C152037 * C151954) *
                        C3585) *
                       C152152 +
                   ((((C82892 + C82893) * C152250 +
                      (C82894 + C82895) * C152251 + C137667 * C134230) *
                         C152037 * C151954 -
                     (C134671 * C134230 + (C82893 + C82892) * C152251 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152250) *
                         C152037 * C4107) *
                        C151908 +
                    (((C73956 + C73957) * C152250 + C83830 * C152251 +
                      C86646 * C134230) *
                         C152037 * C4107 -
                     ((C86656 + C86657) * C134230 + C86651 * C152251 +
                      C83831 * C152250) *
                         C152037 * C151954) *
                        C151915 +
                    ((C76134 * C152250 + (C77235 + C77234) * C152251 +
                      (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
                       C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                          C134230) *
                         C152037 * C151954 -
                     ((C77234 + C77235) * C134230 + C85224 * C152251 +
                      C73969 * C152250) *
                         C152037 * C4107) *
                        C3585) *
                       C151832)) /
                 (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151950 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151957 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            C137170 * C134230) *
               C152037 * C4779) *
              C151908 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C151957 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151950 -
           ((C86256 + C86257) * C134230 + C87189 * C152251 + C84576 * C152250) *
               C152037 * C4779) *
              C151915 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151950 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C151957 +
           (C75634 * C152250 + (C77651 + C77650) * C152251 +
            (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
             C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                C134230) *
               C152037 * C4779) *
              C3585) *
         C151821) /
        (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C4107 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C152262 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C151954 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C4107) *
              C152258 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C4107 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C151954) *
              C152244 +
          ((C76342 * C152250 + (C75633 + C75632) * C152251 +
            (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
             C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                C134230) *
               C152037 * C151954 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C4107 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C3101 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             C137667 * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C4107) *
               C3101 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C4107 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152250 +
             (C82896 + C82897) * C152251 + C134672 * C134230) *
                C152037 * C4107 -
            ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
             (C82897 + C82896) * C152250) *
                C152037 * C151954) *
               C3101 +
           ((C83832 * C152250 + (C82899 + C82898) * C152251 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C134230) *
                C152037 * C151954 -
            ((C82898 + C82899) * C134230 + C83833 * C152251 +
             (C73963 + C73962) * C152250) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152263 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C152260 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            C137170 * C134230) *
               C152037 * C152247 -
           ((C137181 + C137182) * C134230 + (C86258 + C86259) * C152251 +
            C137169 * C152250) *
               C152037 * C152224) *
              C3101 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C152260 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C152263 -
           ((C86256 + C86257) * C134230 + C87189 * C152251 + C84576 * C152250) *
               C152037 * C152247 +
           (C87188 * C152250 + (C86257 + C86256) * C152251 +
            (C73613 * C18552 + C86240 + C86240 + C152145 * C18556 +
             C73615 * C18553 + C86241 + C86241 + C151795 * C18557) *
                C134230) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[333] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152250 +
                      (C82888 + C82889) * C152251 + C134670 * C134230) *
                         C152037 * C151950 -
                     (C137169 * C134230 + (C82890 + C82891) * C152251 +
                      (C82889 + C82888) * C152250) *
                         C152037 * C151957 +
                     (C134670 * C152250 + (C86254 + C86255) * C152251 +
                      C137170 * C134230) *
                         C152037 * C4779) *
                        C3101 +
                    ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) *
                         C152037 * C151957 -
                     (C84576 * C134230 + C83829 * C152251 +
                      (C73951 + C73950) * C152250) *
                         C152037 * C151950 -
                     ((C86256 + C86257) * C134230 + C87189 * C152251 +
                      C84576 * C152250) *
                         C152037 * C4779) *
                        C151912) *
                       C152152 +
                   ((((C82892 + C82893) * C152250 +
                      (C82894 + C82895) * C152251 + C137667 * C134230) *
                         C152037 * C151957 -
                     (C134671 * C134230 + (C82893 + C82892) * C152251 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152250) *
                         C152037 * C151950 -
                     ((C137678 + C137679) * C134230 +
                      (C86928 + C86929) * C152251 + C134671 * C152250) *
                         C152037 * C4779) *
                        C3101 +
                    (((C73956 + C73957) * C152250 + C83830 * C152251 +
                      C86646 * C134230) *
                         C152037 * C151950 -
                     ((C86656 + C86657) * C134230 + C86651 * C152251 +
                      C83831 * C152250) *
                         C152037 * C151957 +
                     (C86646 * C152250 + (C86657 + C86656) * C152251 +
                      (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
                       C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                          C134230) *
                         C152037 * C4779) *
                        C151912) *
                       C151832)) /
                 (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C4107 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C3101 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             C137667 * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C4107) *
               C3101 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C4107 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152250 +
             (C82896 + C82897) * C152251 + C134672 * C134230) *
                C152037 * C4107 -
            ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
             (C82897 + C82896) * C152250) *
                C152037 * C151954) *
               C3101 +
           ((C83832 * C152250 + (C82899 + C82898) * C152251 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C134230) *
                C152037 * C151954 -
            ((C82898 + C82899) * C134230 + C83833 * C152251 +
             (C73963 + C73962) * C152250) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C4107 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C152262 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C151954 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C4107) *
              C152258 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C4107 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C151954) *
              C152244 +
          ((C76342 * C152250 + (C75633 + C75632) * C152251 +
            (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
             C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                C134230) *
               C152037 * C151954 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C1709 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C1710 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C1711 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C151867 * C152218) *
              C152152 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C1710 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C1709 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C1711 +
           (C75830 * C152250 + (C76147 + C76146) * C152251 +
            (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
             C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                C134230) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C152166 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C151912) *
              C739 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C151912 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C152166 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C151912) *
              C741 +
          (((C74440 + C74441) * C152250 + (C83168 + C83169) * C152251 +
            (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
             C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                C134230) *
               C152037 * C151867 * C151912 -
           ((C73615 * C556 + C83433 + C83433 + C151795 * C580 + C73613 * C554 +
             C83432 + C83432 + C152145 * C578) *
                C134230 +
            (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C2215 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C2216 +
            (C134670 * C152250 + (C86254 + C86255) * C152251 +
             C137170 * C134230) *
                C152037 * C152211) *
               C152166 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C2216 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C2215 -
            ((C86256 + C86257) * C134230 + C87189 * C152251 +
             C84576 * C152250) *
                C152037 * C152211) *
               C151912) *
              C152152 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             (C86929 + C86928) * C134230) *
                C152037 * C2216 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C2215 -
            ((C73615 * C2457 + C86921 + C86921 + C151795 * C2473 +
              C73613 * C2456 + C86920 + C86920 + C152145 * C2472) *
                 C134230 +
             (C86928 + C86929) * C152251 + C134671 * C152250) *
                C152037 * C152211) *
               C152166 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C2215 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C2216 +
            (C86646 * C152250 + (C86657 + C86656) * C152251 +
             (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
              C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                 C134230) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152167 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C1709 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C151954 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C152167) *
              C1710 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C152167 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C151954) *
              C1711 +
          ((C76342 * C152250 + (C75633 + C75632) * C152251 +
            (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
             C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                C134230) *
               C152037 * C151954 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C152167 -
            ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C152166 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C152167) *
               C151912) *
              C335 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             (C86929 + C86928) * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C152167) *
               C152166 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C152167 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152250 +
             (C82896 + C82897) * C152251 + C134672 * C134230) *
                C152037 * C152167 -
            ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
             (C82897 + C82896) * C152250) *
                C152037 * C151954) *
               C152166 +
           ((C83832 * C152250 + (C82899 + C82898) * C152251 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C134230) *
                C152037 * C151954 -
            ((C82898 + C82899) * C134230 + C83833 * C152251 +
             (C73963 + C73962) * C152250) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C2814 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C2815 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            C137170 * C134230) *
               C152037 * C2816 -
           ((C137181 + C137182) * C134230 + (C86258 + C86259) * C152251 +
            C137169 * C152250) *
               C152037 * C152224) *
              C152166 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C2815 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C2814 -
           ((C86256 + C86257) * C134230 + C87189 * C152251 + C84576 * C152250) *
               C152037 * C2816 +
           (C87188 * C152250 + (C86257 + C86256) * C152251 +
            (C73613 * C18552 + C86240 + C86240 + C152145 * C18556 +
             C73615 * C18553 + C86241 + C86241 + C151795 * C18557) *
                C134230) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                   C152250 +
               (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
                  C152037 * C151867 * C151849 * C129 -
              ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
               (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                   C152250) *
                  C152037 * C151867 * C151849 * C130 +
              ((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                   C152250 +
               (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
                  C152037 * C151867 * C151849 * C131 -
              ((C73615 * C556 + C83433 + C83433 + C151795 * C580 +
                C73613 * C554 + C83432 + C83432 + C152145 * C578) *
                   C134230 +
               (C83441 + C83440) * C152251 +
               (C73615 * C146 + C73640 + C73640 + C151795 * C162 +
                C73613 * C145 + C73641 + C73641 + C152145 * C161) *
                   C152250) *
                  C152037 * C151867 * C151849 * C132 +
              ((C73613 * C146 + C73642 + C73642 + C152145 * C162 +
                C73615 * C147 + C73643 + C73643 + C151795 * C163) *
                   C152250 +
               (C73613 * C555 + C82244 + C82244 + C152145 * C579 +
                C73615 * C557 + C82245 + C82245 + C151795 * C581) *
                   C152251 +
               (C73613 * C556 + C134232 + C134232 + C152145 * C580 +
                C73615 * C558 + C134233 + C134233 + C151795 * C582) *
                   C134230) *
                  C152037 * C151867 * C151849 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                 C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                    C152250 +
                (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
                   C152037 * C151867 * C152255 -
               (C84576 * C134230 + C83829 * C152251 +
                (C73951 + C73950) * C152250) *
                   C152037 * C151867 * C152239 +
               (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) *
                   C152037 * C151867 * C152208) *
                  C335 +
              (((C73956 + C73957) * C152250 + C83830 * C152251 +
                C86646 * C134230) *
                   C152037 * C151867 * C152239 -
               ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
                (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                 C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                    C152250) *
                   C152037 * C151867 * C152255 -
               ((C77234 + C77235) * C134230 + C85224 * C152251 +
                C73969 * C152250) *
                   C152037 * C151867 * C152208) *
                  C336 +
              (((C73613 * C144 + C73630 + C73630 + C152145 * C160 +
                 C73615 * C145 + C73631 + C73631 + C151795 * C161) *
                    C152250 +
                (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
                   C152037 * C151867 * C152255 -
               ((C82898 + C82899) * C134230 + C83833 * C152251 +
                (C73963 + C73962) * C152250) *
                   C152037 * C151867 * C152239 +
               (C73970 * C152250 + (C74997 + C74996) * C152251 +
                (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
                 C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                    C134230) *
                   C152037 * C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152256 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C152241 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C151849 * C335 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            (C86929 + C86928) * C134230) *
               C152037 * C152241 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C152256 -
           ((C73615 * C2457 + C86921 + C86921 + C151795 * C2473 +
             C73613 * C2456 + C86920 + C86920 + C152145 * C2472) *
                C134230 +
            (C86928 + C86929) * C152251 + C134671 * C152250) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C152256 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C152241 +
           (C134672 * C152250 + (C134684 + C134683) * C152251 +
            (C73613 * C2457 + C134677 + C134677 + C152145 * C2473 +
             C73615 * C2458 + C134678 + C134678 + C151795 * C2474) *
                C134230) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C1259 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C1260 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152208) *
              C152252 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C1260 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C1259 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C1259 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C1260 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + C134670 * C134230) *
              C152037 * C151867 * C1347 -
          (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
              C152037 * C151867 * C1348 +
          (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
              C151867 * C1349 -
          ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
              C152037 * C151867 * C1350 +
          (C75366 * C152250 + (C76355 + C76354) * C152251 +
           (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
            C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
               C134230) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152256 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C152241 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C1259 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C152241 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C152256 -
           ((C86256 + C86257) * C134230 + C87189 * C152251 + C84576 * C152250) *
               C152037 * C152211) *
              C1260 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C152256 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C152241 +
           (C75634 * C152250 + (C77651 + C77650) * C152251 +
            (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
             C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                C134230) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C2215 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C2216 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C151849 * C152252 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            (C86929 + C86928) * C134230) *
               C152037 * C2216 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C2215 -
           ((C73615 * C2457 + C86921 + C86921 + C151795 * C2473 +
             C73613 * C2456 + C86920 + C86920 + C152145 * C2472) *
                C134230 +
            (C86928 + C86929) * C152251 + C134671 * C152250) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C2215 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C2216 +
           (C134672 * C152250 + (C134684 + C134683) * C152251 +
            (C73613 * C2457 + C134677 + C134677 + C152145 * C2473 +
             C73615 * C2458 + C134678 + C134678 + C151795 * C2474) *
                C134230) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C2215 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C2216 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C152255 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C2216 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C2215 -
           ((C86256 + C86257) * C134230 + C87189 * C152251 + C84576 * C152250) *
               C152037 * C152211) *
              C152239 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C2215 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C2216 +
           (C75634 * C152250 + (C77651 + C77650) * C152251 +
            (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
             C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                C134230) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + C134670 * C134230) *
              C152037 * C2446 -
          (C137169 * C134230 + (C82890 + C82891) * C152251 +
           (C82889 + C82888) * C152250) *
              C152037 * C2447 +
          (C134670 * C152250 + (C86254 + C86255) * C152251 +
           C137170 * C134230) *
              C152037 * C2448 -
          ((C137181 + C137182) * C134230 + (C86258 + C86259) * C152251 +
           C137169 * C152250) *
              C152037 * C2449 +
          (C137170 * C152250 + (C137182 + C137181) * C152251 +
           (C73613 * C17806 + C137175 + C137175 + C152145 * C17814 +
            C73615 * C17807 + C137176 + C137176 + C151795 * C17815) *
               C134230) *
              C152037 * C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C152167 -
            ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C1259 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C152167) *
               C1260 +
           ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
                C152167 -
            ((C77650 + C77651) * C134230 + C84579 * C152251 +
             C75586 * C152250) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             (C86929 + C86928) * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C152167) *
               C1259 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C152167 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C1260 +
           ((C76134 * C152250 + (C77235 + C77234) * C152251 +
             (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
              C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                 C134230) *
                C152037 * C151954 -
            ((C77234 + C77235) * C134230 + C85224 * C152251 +
             C73969 * C152250) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152167 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C151849 * C739 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            (C86929 + C86928) * C134230) *
               C152037 * C151954 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C152167 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C151954) *
              C151849 * C741 +
          (((C83440 + C83441) * C152250 + (C135083 + C135084) * C152251 +
            (C73613 * C2451 + C135077 + C135077 + C152145 * C2467 +
             C73615 * C2818 + C135078 + C135078 + C151795 * C2820) *
                C134230) *
               C152037 * C151954 -
           ((C135084 + C135083) * C134230 + (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C2814 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C2815 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            C137170 * C134230) *
               C152037 * C2816 -
           ((C137181 + C137182) * C134230 + (C86258 + C86259) * C152251 +
            C137169 * C152250) *
               C152037 * C152224) *
              C151849 * C152152 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            C137667 * C134230) *
               C152037 * C2815 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C2814 -
           ((C137678 + C137679) * C134230 + (C86928 + C86929) * C152251 +
            C134671 * C152250) *
               C152037 * C2816 +
           (C137667 * C152250 + (C137679 + C137678) * C152251 +
            (C73613 * C17804 + C137672 + C137672 + C152145 * C17812 +
             C73615 * C18342 + C137673 + C137673 + C151795 * C18344) *
                C134230) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
               C152037 * C151867 * C152255 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C152239 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152208) *
              C335 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C152239 -
           ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C152255 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
               C152037 * C151867 * C152255 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C152239 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
              C152037 * C151867 * C151849 * C129 -
          ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
           (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
            C73629 + C73629 + C152145 * C159) *
               C152250) *
              C152037 * C151867 * C151849 * C130 +
          ((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
            C73631 + C73631 + C151795 * C161) *
               C152250 +
           (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
              C152037 * C151867 * C151849 * C131 -
          ((C73615 * C556 + C83433 + C83433 + C151795 * C580 + C73613 * C554 +
            C83432 + C83432 + C152145 * C578) *
               C134230 +
           (C83441 + C83440) * C152251 +
           (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
            C73641 + C73641 + C152145 * C161) *
               C152250) *
              C152037 * C151867 * C151849 * C132 +
          ((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
            C73643 + C73643 + C151795 * C163) *
               C152250 +
           (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
            C82245 + C82245 + C151795 * C581) *
               C152251 +
           (C73613 * C556 + C134232 + C134232 + C152145 * C580 + C73615 * C558 +
            C134233 + C134233 + C151795 * C582) *
               C134230) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C1259 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C1260 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152208) *
              C152252 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C1260 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C1259 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C1259 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C1260 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + C134670 * C134230) *
              C152037 * C151867 * C1347 -
          (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
              C152037 * C151867 * C1348 +
          (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
              C151867 * C1349 -
          ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
              C152037 * C151867 * C1350 +
          (C75366 * C152250 + (C76355 + C76354) * C152251 +
           (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
            C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
               C134230) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C2215 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C2216 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C151849 * C152252 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            (C86929 + C86928) * C134230) *
               C152037 * C2216 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C2215 -
           ((C73615 * C2457 + C86921 + C86921 + C151795 * C2473 +
             C73613 * C2456 + C86920 + C86920 + C152145 * C2472) *
                C134230 +
            (C86928 + C86929) * C152251 + C134671 * C152250) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C2215 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C2216 +
           (C134672 * C152250 + (C134684 + C134683) * C152251 +
            (C73613 * C2457 + C134677 + C134677 + C152145 * C2473 +
             C73615 * C2458 + C134678 + C134678 + C151795 * C2474) *
                C134230) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C2215 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C2216 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C152255 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C2216 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C2215 -
           ((C86256 + C86257) * C134230 + C87189 * C152251 + C84576 * C152250) *
               C152037 * C152211) *
              C152239 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C2215 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C2216 +
           (C75634 * C152250 + (C77651 + C77650) * C152251 +
            (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
             C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                C134230) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C4107 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C152166 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C4107) *
               C151912) *
              C151826 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             C137667 * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C4107) *
               C152166 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C4107 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152250 +
             (C82896 + C82897) * C152251 + C134672 * C134230) *
                C152037 * C4107 -
            ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
             (C82897 + C82896) * C152250) *
                C152037 * C151954) *
               C152166 +
           ((C83832 * C152250 + (C82899 + C82898) * C152251 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C134230) *
                C152037 * C151954 -
            ((C82898 + C82899) * C134230 + C83833 * C152251 +
             (C73963 + C73962) * C152250) *
                C152037 * C4107) *
               C151912) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[341] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 +
                       C73615 * C143 + C73619 + C73619 + C151795 * C159) *
                          C152250 +
                      (C82888 + C82889) * C152251 + C134670 * C134230) *
                         C152037 * C151950 -
                     (C137169 * C134230 + (C82890 + C82891) * C152251 +
                      (C82889 + C82888) * C152250) *
                         C152037 * C151957 +
                     (C134670 * C152250 + (C86254 + C86255) * C152251 +
                      C137170 * C134230) *
                         C152037 * C4779) *
                        C152166 +
                    ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) *
                         C152037 * C151957 -
                     (C84576 * C134230 + C83829 * C152251 +
                      (C73951 + C73950) * C152250) *
                         C152037 * C151950 -
                     ((C86256 + C86257) * C134230 + C87189 * C152251 +
                      C84576 * C152250) *
                         C152037 * C4779) *
                        C151912) *
                       C3241 +
                   ((((C82892 + C82893) * C152250 +
                      (C82894 + C82895) * C152251 + C137667 * C134230) *
                         C152037 * C151957 -
                     (C134671 * C134230 + (C82893 + C82892) * C152251 +
                      (C73615 * C144 + C73628 + C73628 + C151795 * C160 +
                       C73613 * C143 + C73629 + C73629 + C152145 * C159) *
                          C152250) *
                         C152037 * C151950 -
                     ((C137678 + C137679) * C134230 +
                      (C86928 + C86929) * C152251 + C134671 * C152250) *
                         C152037 * C4779) *
                        C152166 +
                    (((C73956 + C73957) * C152250 + C83830 * C152251 +
                      C86646 * C134230) *
                         C152037 * C151950 -
                     ((C86656 + C86657) * C134230 + C86651 * C152251 +
                      C83831 * C152250) *
                         C152037 * C151957 +
                     (C86646 * C152250 + (C86657 + C86656) * C152251 +
                      (C73613 * C9434 + C86922 + C86922 + C152145 * C9446 +
                       C73615 * C18132 + C86923 + C86923 + C151795 * C18134) *
                          C134230) *
                         C152037 * C4779) *
                        C151912) *
                       C151832)) /
                 (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C4107 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C152255 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C4107) *
               C152239 +
           ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
                C4107 -
            ((C77650 + C77651) * C134230 + C84579 * C152251 +
             C75586 * C152250) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             C137667 * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C4107) *
               C152255 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C4107 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C152239 +
           ((C76134 * C152250 + (C77235 + C77234) * C152251 +
             (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
              C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                 C134230) *
                C152037 * C151954 -
            ((C77234 + C77235) * C134230 + C85224 * C152251 +
             C73969 * C152250) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C4107 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C151849 * C152261 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            C137667 * C134230) *
               C152037 * C151954 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C4107 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C151954) *
              C151849 * C152237 +
          (((C83440 + C83441) * C152250 + (C135083 + C135084) * C152251 +
            (C73613 * C2451 + C135077 + C135077 + C152145 * C2467 +
             C73615 * C2818 + C135078 + C135078 + C151795 * C2820) *
                C134230) *
               C152037 * C151954 -
           ((C135084 + C135083) * C134230 + (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152263 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C152260 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            C137170 * C134230) *
               C152037 * C152247 -
           ((C137181 + C137182) * C134230 + (C86258 + C86259) * C152251 +
            C137169 * C152250) *
               C152037 * C152224) *
              C151849 * C3241 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            C137667 * C134230) *
               C152037 * C152260 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C152263 -
           ((C137678 + C137679) * C134230 + (C86928 + C86929) * C152251 +
            C134671 * C152250) *
               C152037 * C152247 +
           (C137667 * C152250 + (C137679 + C137678) * C152251 +
            (C73613 * C17804 + C137672 + C137672 + C152145 * C17812 +
             C73615 * C18342 + C137673 + C137673 + C151795 * C18344) *
                C134230) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151950 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151957 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            C137170 * C134230) *
               C152037 * C4779) *
              C151849 * C151826 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            C137667 * C134230) *
               C152037 * C151957 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151950 -
           ((C137678 + C137679) * C134230 + (C86928 + C86929) * C152251 +
            C134671 * C152250) *
               C152037 * C4779) *
              C151849 * C151835 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151950 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C151957 +
           (C134672 * C152250 + (C134684 + C134683) * C152251 +
            (C73613 * C2457 + C134677 + C134677 + C152145 * C2473 +
             C73615 * C2458 + C134678 + C134678 + C151795 * C2474) *
                C134230) *
               C152037 * C4779) *
              C151849 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C4107 -
           (C137169 * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C151849 * C152261 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            C137667 * C134230) *
               C152037 * C151954 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C4107 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C151954) *
              C151849 * C152237 +
          (((C83440 + C83441) * C152250 + (C135083 + C135084) * C152251 +
            (C73613 * C2451 + C135077 + C135077 + C152145 * C2467 +
             C73615 * C2818 + C135078 + C135078 + C151795 * C2820) *
                C134230) *
               C152037 * C151954 -
           ((C135084 + C135083) * C134230 + (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C4107 -
            (C137169 * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C152255 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C4107) *
               C152239 +
           ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
                C4107 -
            ((C77650 + C77651) * C134230 + C84579 * C152251 +
             C75586 * C152250) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             C137667 * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C4107) *
               C152255 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C4107 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C152239 +
           ((C76134 * C152250 + (C77235 + C77234) * C152251 +
             (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
              C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                 C134230) *
                C152037 * C151954 -
            ((C77234 + C77235) * C134230 + C85224 * C152251 +
             C73969 * C152250) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C152166 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C151912) *
              C739 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C151912 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C152166 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C151912) *
              C741 +
          (((C74440 + C74441) * C152250 + (C83168 + C83169) * C152251 +
            (C73613 * C1531 + C83434 + C83434 + C152145 * C1555 +
             C73615 * C2677 + C83435 + C83435 + C151795 * C2679) *
                C134230) *
               C152037 * C151867 * C151912 -
           ((C73615 * C556 + C83433 + C83433 + C151795 * C580 + C73613 * C554 +
             C83432 + C83432 + C152145 * C578) *
                C134230 +
            (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C1709 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C1710 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C1711 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C151867 * C152218) *
              C152152 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C1710 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C1709 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C1711 +
           (C75830 * C152250 + (C76147 + C76146) * C152251 +
            (C73613 * C8073 + C77224 + C77224 + C152145 * C8085 +
             C73615 * C9751 + C77225 + C77225 + C151795 * C9753) *
                C134230) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C152167 -
            ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C152166 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C152167) *
               C151912) *
              C335 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             (C86929 + C86928) * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C152167) *
               C152166 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C152167 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
              C73631 + C73631 + C151795 * C161) *
                 C152250 +
             (C82896 + C82897) * C152251 + C134672 * C134230) *
                C152037 * C152167 -
            ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
             (C82897 + C82896) * C152250) *
                C152037 * C151954) *
               C152166 +
           ((C83832 * C152250 + (C82899 + C82898) * C152251 +
             (C73613 * C2957 + C82858 + C82858 + C152145 * C2965 +
              C73615 * C2958 + C82859 + C82859 + C151795 * C2966) *
                 C134230) *
                C152037 * C151954 -
            ((C82898 + C82899) * C134230 + C83833 * C152251 +
             (C73963 + C73962) * C152250) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152167 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C1709 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C151954 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C152167) *
              C1710 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C152167 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C151954) *
              C1711 +
          ((C76342 * C152250 + (C75633 + C75632) * C152251 +
            (C73613 * C10173 + C77640 + C77640 + C152145 * C10177 +
             C73615 * C10174 + C77641 + C77641 + C151795 * C10178) *
                C134230) *
               C152037 * C151954 -
           ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
               C152037 * C151867 * C152255 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C152239 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152208) *
              C335 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C152239 -
           ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C152255 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
               C152037 * C151867 * C152255 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C152239 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
              C152037 * C151867 * C151849 * C129 -
          ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
           (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
            C73629 + C73629 + C152145 * C159) *
               C152250) *
              C152037 * C151867 * C151849 * C130 +
          ((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
            C73631 + C73631 + C151795 * C161) *
               C152250 +
           (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
              C152037 * C151867 * C151849 * C131 -
          ((C73615 * C556 + C83433 + C83433 + C151795 * C580 + C73613 * C554 +
            C83432 + C83432 + C152145 * C578) *
               C134230 +
           (C83441 + C83440) * C152251 +
           (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
            C73641 + C73641 + C152145 * C161) *
               C152250) *
              C152037 * C151867 * C151849 * C132 +
          ((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
            C73643 + C73643 + C151795 * C163) *
               C152250 +
           (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
            C82245 + C82245 + C151795 * C581) *
               C152251 +
           (C73613 * C556 + C134232 + C134232 + C152145 * C580 + C73615 * C558 +
            C134233 + C134233 + C151795 * C582) *
               C134230) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152256 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C152241 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C151849 * C335 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            (C86929 + C86928) * C134230) *
               C152037 * C152241 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C152256 -
           ((C73615 * C2457 + C86921 + C86921 + C151795 * C2473 +
             C73613 * C2456 + C86920 + C86920 + C152145 * C2472) *
                C134230 +
            (C86928 + C86929) * C152251 + C134671 * C152250) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C152256 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C152241 +
           (C134672 * C152250 + (C134684 + C134683) * C152251 +
            (C73613 * C2457 + C134677 + C134677 + C152145 * C2473 +
             C73615 * C2458 + C134678 + C134678 + C151795 * C2474) *
                C134230) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C1259 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C1260 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152208) *
              C152252 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C1260 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C1259 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C1259 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C1260 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + C134670 * C134230) *
              C152037 * C151867 * C1347 -
          (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
              C152037 * C151867 * C1348 +
          (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
              C151867 * C1349 -
          ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
              C152037 * C151867 * C1350 +
          (C75366 * C152250 + (C76355 + C76354) * C152251 +
           (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
            C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
               C134230) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152256 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C152241 +
           (C134670 * C152250 + (C86254 + C86255) * C152251 +
            (C86259 + C86258) * C134230) *
               C152037 * C152211) *
              C1259 +
          ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
               C152241 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C152256 -
           ((C86256 + C86257) * C134230 + C87189 * C152251 + C84576 * C152250) *
               C152037 * C152211) *
              C1260 +
          ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C152256 -
           ((C77650 + C77651) * C134230 + C84579 * C152251 + C75586 * C152250) *
               C152037 * C152241 +
           (C75634 * C152250 + (C77651 + C77650) * C152251 +
            (C73613 * C9435 + C76924 + C76924 + C152145 * C9447 +
             C73615 * C9436 + C76925 + C76925 + C151795 * C9448) *
                C134230) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C152167 -
           ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
            (C82889 + C82888) * C152250) *
               C152037 * C151954) *
              C151849 * C739 +
          (((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
            (C86929 + C86928) * C134230) *
               C152037 * C151954 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C152167 -
           ((C134683 + C134684) * C134230 + (C82900 + C82901) * C152251 +
            (C82897 + C82896) * C152250) *
               C152037 * C151954) *
              C151849 * C741 +
          (((C83440 + C83441) * C152250 + (C135083 + C135084) * C152251 +
            (C73613 * C2451 + C135077 + C135077 + C152145 * C2467 +
             C73615 * C2818 + C135078 + C135078 + C151795 * C2820) *
                C134230) *
               C152037 * C151954 -
           ((C135084 + C135083) * C134230 + (C83441 + C83440) * C152251 +
            (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
             C73641 + C73641 + C152145 * C161) *
                C152250) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
              C73619 + C73619 + C151795 * C159) *
                 C152250 +
             (C82888 + C82889) * C152251 + C134670 * C134230) *
                C152037 * C152167 -
            ((C86255 + C86254) * C134230 + (C82890 + C82891) * C152251 +
             (C82889 + C82888) * C152250) *
                C152037 * C151954) *
               C1259 +
           ((C83828 * C152250 + C84577 * C152251 + C87188 * C134230) * C152037 *
                C151954 -
            (C84576 * C134230 + C83829 * C152251 +
             (C73951 + C73950) * C152250) *
                C152037 * C152167) *
               C1260 +
           ((C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
                C152167 -
            ((C77650 + C77651) * C134230 + C84579 * C152251 +
             C75586 * C152250) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          ((((C82892 + C82893) * C152250 + (C82894 + C82895) * C152251 +
             (C86929 + C86928) * C134230) *
                C152037 * C151954 -
            (C134671 * C134230 + (C82893 + C82892) * C152251 +
             (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
              C73629 + C73629 + C152145 * C159) *
                 C152250) *
                C152037 * C152167) *
               C1259 +
           (((C73956 + C73957) * C152250 + C83830 * C152251 +
             C86646 * C134230) *
                C152037 * C152167 -
            ((C86656 + C86657) * C134230 + C86651 * C152251 +
             C83831 * C152250) *
                C152037 * C151954) *
               C1260 +
           ((C76134 * C152250 + (C77235 + C77234) * C152251 +
             (C73613 * C9431 + C77436 + C77436 + C152145 * C9443 +
              C73615 * C9970 + C77437 + C77437 + C151795 * C9972) *
                 C134230) *
                C152037 * C151954 -
            ((C77234 + C77235) * C134230 + C85224 * C152251 +
             C73969 * C152250) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
              C152037 * C151867 * C151849 * C129 -
          ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
           (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
            C73629 + C73629 + C152145 * C159) *
               C152250) *
              C152037 * C151867 * C151849 * C130 +
          ((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
            C73631 + C73631 + C151795 * C161) *
               C152250 +
           (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
              C152037 * C151867 * C151849 * C131 -
          ((C73615 * C556 + C83433 + C83433 + C151795 * C580 + C73613 * C554 +
            C83432 + C83432 + C152145 * C578) *
               C134230 +
           (C83441 + C83440) * C152251 +
           (C73615 * C146 + C73640 + C73640 + C151795 * C162 + C73613 * C145 +
            C73641 + C73641 + C152145 * C161) *
               C152250) *
              C152037 * C151867 * C151849 * C132 +
          ((C73613 * C146 + C73642 + C73642 + C152145 * C162 + C73615 * C147 +
            C73643 + C73643 + C151795 * C163) *
               C152250 +
           (C73613 * C555 + C82244 + C82244 + C152145 * C579 + C73615 * C557 +
            C82245 + C82245 + C151795 * C581) *
               C152251 +
           (C73613 * C556 + C134232 + C134232 + C152145 * C580 + C73615 * C558 +
            C134233 + C134233 + C151795 * C582) *
               C134230) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + (C82891 + C82890) * C134230) *
               C152037 * C151867 * C152255 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C152239 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152208) *
              C335 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C152239 -
           ((C82895 + C82894) * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C152255 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + (C82901 + C82900) * C134230) *
               C152037 * C151867 * C152255 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C152239 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
             C73619 + C73619 + C151795 * C159) *
                C152250 +
            (C82888 + C82889) * C152251 + C134670 * C134230) *
               C152037 * C151867 * C1259 -
           (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
               C152037 * C151867 * C1260 +
           (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
               C151867 * C152208) *
              C152252 +
          (((C73956 + C73957) * C152250 + C83830 * C152251 + C86646 * C134230) *
               C152037 * C151867 * C1260 -
           (C134671 * C134230 + (C82893 + C82892) * C152251 +
            (C73615 * C144 + C73628 + C73628 + C151795 * C160 + C73613 * C143 +
             C73629 + C73629 + C152145 * C159) *
                C152250) *
               C152037 * C151867 * C1259 -
           ((C77234 + C77235) * C134230 + C85224 * C152251 + C73969 * C152250) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C73613 * C144 + C73630 + C73630 + C152145 * C160 + C73615 * C145 +
             C73631 + C73631 + C151795 * C161) *
                C152250 +
            (C82896 + C82897) * C152251 + C134672 * C134230) *
               C152037 * C151867 * C1259 -
           ((C82898 + C82899) * C134230 + C83833 * C152251 +
            (C73963 + C73962) * C152250) *
               C152037 * C151867 * C1260 +
           (C73970 * C152250 + (C74997 + C74996) * C152251 +
            (C73613 * C1541 + C74226 + C74226 + C152145 * C1565 +
             C73615 * C1542 + C74227 + C74227 + C151795 * C1566) *
                C134230) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C73613 * C142 + C73618 + C73618 + C152145 * C158 + C73615 * C143 +
            C73619 + C73619 + C151795 * C159) *
               C152250 +
           (C82888 + C82889) * C152251 + C134670 * C134230) *
              C152037 * C151867 * C1347 -
          (C84576 * C134230 + C83829 * C152251 + (C73951 + C73950) * C152250) *
              C152037 * C151867 * C1348 +
          (C73968 * C152250 + C84578 * C152251 + C75634 * C134230) * C152037 *
              C151867 * C1349 -
          ((C75632 + C75633) * C134230 + C85483 * C152251 + C75340 * C152250) *
              C152037 * C151867 * C1350 +
          (C75366 * C152250 + (C76355 + C76354) * C152251 +
           (C73613 * C8077 + C75607 + C75607 + C152145 * C8089 +
            C73615 * C8078 + C75608 + C75608 + C151795 * C8090) *
               C134230) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C151908 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151915 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C3585) *
              C151826 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151915 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C151908 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C3585) *
              C151835 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C151908 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151915 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C151908 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151915 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C3585) *
              C151826 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C151915 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C151908 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C3585) *
              C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C151908 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151915 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C151908 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C151915 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C152167 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C3585) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C151908 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151915 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C151908 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151915 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C152167 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C3585) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C151908 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151915 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C152167) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C152262 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152258 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152244 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C151867 * C152218) *
              C3241 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152258 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152262 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152244 +
           ((C53107 + C53106 + C53105) * C101415 +
            (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
             C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
             C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                C152113) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C3101 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151912) *
              C152261 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151912 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C3101 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151912) *
              C152237 +
          (((C51701 + C51702 + C51703) * C101415 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152113) *
               C152037 * C151867 * C151912 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152256 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C152241 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C152211) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C152241 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152256 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C152211) *
               C151912) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C152241 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152256 -
            ((C104972 + C104973 + C104974) * C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C152211) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152256 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C152241 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C3101 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C3101 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152262 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152258 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C152244 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C152258 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152262 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C152244 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152256 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C152241 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C152211) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C152241 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152256 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C152211) *
               C151912) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C152241 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152256 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C152211) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152256 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C152241 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C151912) *
              C151826 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C152167 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151912) *
              C151826 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C152167 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C152167) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C3101 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151912) *
              C152261 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151912 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C3101) *
              C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C3101 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151912) *
              C152237 +
          (((C51701 + C51702 + C51703) * C101415 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152113) *
               C152037 * C151867 * C151912 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C152262 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152258 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152244 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C151867 * C152218) *
              C3241 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152258 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152262 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152244 +
           ((C53107 + C53106 + C53105) * C101415 +
            (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
             C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
             C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                C152113) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C3101 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C152261 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C3101 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C152237 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C3101) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152262 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152258 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C152244 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C3241 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C152258 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152262 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C152244 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C151908 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C151915 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C4107 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C3585) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C151908 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151915 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C151908 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151915 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C4107 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C3585) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C151908 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151915 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C4107) *
               C3585) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151950 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151957 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C4779) *
              C151908 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151957 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151950 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C4779) *
              C151915 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151950 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151957 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151950 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151957 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C4779) *
              C151908 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151957 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151950 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C4779) *
              C151915 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151950 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151957 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C4779) *
              C3585) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C4107 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C152262 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151954 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C4107) *
              C152258 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C4107 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151954) *
              C152244 +
          (((C53627 + C53626 + C53625) * C101415 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152113) *
               C152037 * C151954 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C4107 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152263 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152260 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C152247 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C3101 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C152260 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152263 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152247 +
           ((C54917 + C54916 + C54915) * C101415 +
            (C50875 * C9433 + C54195 + C54195 + C50870 * C9445 +
             C50877 * C9434 + C54196 + C54196 + C50871 * C9446 +
             C50879 * C18132 + C54197 + C54197 + C50872 * C18134) *
                C152113) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C4107 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C152262 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C4107) *
              C152258 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C4107 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C152244 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152263 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152260 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152247 -
           ((C113371 + C113372) * C6088 + (C113373 + C113374) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C3101 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C152260 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152263 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152247 +
           ((C113374 + C113373) * C6086 + (C113372 + C113371) * C6087 +
            (C62166 * C101415 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C152113) *
                C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C151950 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151957 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C4779) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151957 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C151950 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C4779) *
               C151912) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151957 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C151950 -
            ((C104972 + C104973 + C104974) * C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C4779) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C151950 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151957 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C151950 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151957 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C4779) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151957 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C151950 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C4779) *
               C151912) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151957 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C151950 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C4779) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C151950 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151957 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C151912) *
              C152252 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C3101 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C152235 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C4107 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C3101 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C4107 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C152262 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151954 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C4107) *
              C152258 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C4107 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151954) *
              C152244 +
          (((C53627 + C53626 + C53625) * C101415 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152113) *
               C152037 * C151954 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151912) *
              C152252 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C3101 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C152235 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C4107 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C3101 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C4107) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C152262 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C4107) *
              C152258 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C4107 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C152244 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C4107) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1709 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1710 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C1711 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C151867 * C152218) *
              C152152 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1710 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1709 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C1711 +
           ((C53107 + C53106 + C53105) * C101415 +
            (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
             C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
             C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                C152113) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C152166 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151912) *
              C739 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151912 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C152166 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151912) *
              C741 +
          (((C51701 + C51702 + C51703) * C101415 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152113) *
               C152037 * C151867 * C151912 -
           ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
             C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
             C50870 * C571) *
                C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C2215 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C2216 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C152211) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C2216 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C2215 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C152211) *
               C151912) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C2216 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C2215 -
            ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
              C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
              C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                 C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C152211) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C2215 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C2216 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152166 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C739 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152166 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C741 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1709 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1710 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C1711 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C1710 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1709 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C1711 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C2215 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C2216 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C152211) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C2216 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C2215 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C152211) *
               C151912) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C2216 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C2215 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C152211) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C2215 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C2216 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C152211) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152167 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C1709 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151954 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152167) *
              C1710 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C152167 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151954) *
              C1711 +
          (((C53627 + C53626 + C53625) * C101415 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152113) *
               C152037 * C151954 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C151912) *
              C335 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C152167 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2814 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2815 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C2816 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C152166 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C2815 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C2814 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C2816 +
           ((C54917 + C54916 + C54915) * C101415 +
            (C50875 * C9433 + C54195 + C54195 + C50870 * C9445 +
             C50877 * C9434 + C54196 + C54196 + C50871 * C9446 +
             C50879 * C18132 + C54197 + C54197 + C50872 * C18134) *
                C152113) *
               C152037 * C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            ((C110858 + C110859) * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C60365 * C101415 + C60802 * C152113) * C6088) *
                C151954 -
            ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + (C110864 + C110865) * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             (C109947 + C109948) * C6088) *
                C152167 -
            ((C61880 * C152113 + C60370 * C101415) * C6088 +
             (C110865 + C110864) * C6087 + (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C152167 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C1709 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152167) *
              C1710 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152167 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C1711 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2814 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2815 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C2816 -
           ((C113371 + C113372) * C6088 + (C113373 + C113374) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C152166 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C2815 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C2814 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C2816 +
           ((C113374 + C113373) * C6086 + (C113372 + C113371) * C6087 +
            (C62166 * C101415 +
             (C59432 * C61661 + C61672 + C61672 + C151790 * C61663) * C152113) *
                C6088) *
               C152224) *
              C151912) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                   C101415 +
               (C50875 * C550 + C51461 + C51461 + C50870 * C574 +
                C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                C50879 * C548 + C51459 + C51459 + C50872 * C572) *
                   C152113) *
                  C152037 * C151867 * C151849 * C129 -
              ((C50879 * C547 + C51470 + C51470 + C50872 * C571 +
                C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                C50875 * C549 + C51468 + C51468 + C50870 * C573) *
                   C152113 +
               (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                   C101415) *
                  C152037 * C151867 * C151849 * C130 +
              ((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                   C101415 +
               (C50875 * C548 + C51485 + C51485 + C50870 * C572 +
                C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                C50879 * C555 + C51483 + C51483 + C50872 * C579) *
                   C152113) *
                  C152037 * C151867 * C151849 * C131 -
              ((C50879 * C557 + C51900 + C51900 + C50872 * C581 +
                C50877 * C555 + C51899 + C51899 + C50871 * C579 +
                C50875 * C547 + C51898 + C51898 + C50870 * C571) *
                   C152113 +
               (C50879 * C147 + C50903 + C50903 + C50872 * C163 +
                C50877 * C146 + C50904 + C50904 + C50871 * C162 +
                C50875 * C145 + C50905 + C50905 + C50870 * C161) *
                   C101415) *
                  C152037 * C151867 * C151849 * C132 +
              ((C50875 * C146 + C50906 + C50906 + C50870 * C162 +
                C50877 * C147 + C50907 + C50907 + C50871 * C163 +
                C50879 * C148 + C50908 + C50908 + C50872 * C164) *
                   C101415 +
               (C50875 * C555 + C101418 + C101418 + C50870 * C579 +
                C50877 * C557 + C101419 + C101419 + C50871 * C581 +
                C50879 * C882 + C101420 + C101420 + C50872 * C884) *
                   C152113) *
                  C152037 * C151867 * C151849 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 +
                 C50877 * C143 + C50883 + C50883 + C50871 * C159 +
                 C50879 * C144 + C50884 + C50884 + C50872 * C160) *
                    C101415 +
                (C50875 * C550 + C51461 + C51461 + C50870 * C574 +
                 C50877 * C549 + C51460 + C51460 + C50871 * C573 +
                 C50879 * C548 + C51459 + C51459 + C50872 * C572) *
                    C152113) *
                   C152037 * C151867 * C152255 -
               ((C52239 + C52240 + C52241) * C152113 +
                (C51222 + C51221 + C51220) * C101415) *
                   C152037 * C151867 * C152239 +
               ((C51225 + C51224 + C51223) * C101415 +
                (C52890 + C52891 + C52892) * C152113) *
                   C152037 * C151867 * C152208) *
                  C335 +
              (((C51226 + C51227 + C51228) * C101415 +
                (C52242 + C52243 + C52244) * C152113) *
                   C152037 * C151867 * C152239 -
               ((C50879 * C547 + C51470 + C51470 + C50872 * C571 +
                 C50877 * C548 + C51469 + C51469 + C50871 * C572 +
                 C50875 * C549 + C51468 + C51468 + C50870 * C573) *
                    C152113 +
                (C50879 * C145 + C50891 + C50891 + C50872 * C161 +
                 C50877 * C144 + C50892 + C50892 + C50871 * C160 +
                 C50875 * C143 + C50893 + C50893 + C50870 * C159) *
                    C101415) *
                   C152037 * C151867 * C152255 -
               ((C53413 + C53414 + C53415) * C152113 +
                (C51231 + C51230 + C51229) * C101415) *
                   C152037 * C151867 * C152208) *
                  C336 +
              (((C50875 * C144 + C50894 + C50894 + C50870 * C160 +
                 C50877 * C145 + C50895 + C50895 + C50871 * C161 +
                 C50879 * C146 + C50896 + C50896 + C50872 * C162) *
                    C101415 +
                (C50875 * C548 + C51485 + C51485 + C50870 * C572 +
                 C50877 * C547 + C51484 + C51484 + C50871 * C571 +
                 C50879 * C555 + C51483 + C51483 + C50872 * C579) *
                    C152113) *
                   C152037 * C151867 * C152255 -
               ((C52245 + C52246 + C52247) * C152113 +
                (C51234 + C51233 + C51232) * C101415) *
                   C152037 * C151867 * C152239 +
               ((C51237 + C51236 + C51235) * C101415 +
                (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
                 C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
                 C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                    C152113) *
                   C152037 * C151867 * C152208) *
                  C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152256 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152241 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C151849 * C335 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C152241 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152256 -
           ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C152256 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C152241 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1259 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C151867 * C1347 -
          ((C52239 + C52240 + C52241) * C152113 +
           (C51222 + C51221 + C51220) * C101415) *
              C152037 * C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C101415 +
           (C52890 + C52891 + C52892) * C152113) *
              C152037 * C151867 * C1349 -
          ((C53625 + C53626 + C53627) * C152113 +
           (C52620 + C52619 + C52618) * C101415) *
              C152037 * C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C101415 +
           (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 + C50877 * C8075 +
            C53617 + C53617 + C50871 * C8087 + C50879 * C8642 + C53618 +
            C53618 + C50872 * C8644) *
               C152113) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152256 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152241 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C1259 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C152241 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152256 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152211) *
              C1260 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C152256 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C152241 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2215 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2216 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152252 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C2216 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C2215 -
           ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C2215 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C2216 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2215 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2216 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C152255 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C2216 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C2215 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152211) *
              C152239 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C2215 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C2216 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C2446 -
          ((C101935 + C101936 + C101937) * C152113 +
           (C101934 + C101933 + C101932) * C101415) *
              C152037 * C2447 +
          ((C101937 + C101936 + C101935) * C101415 +
           (C104467 + C104468 + C104469) * C152113) *
              C152037 * C2448 -
          ((C104470 + C104471 + C104472) * C152113 +
           (C104469 + C104468 + C104467) * C101415) *
              C152037 * C2449 +
          ((C104472 + C104471 + C104470) * C101415 +
           (C50875 * C17805 + C104452 + C104452 + C50870 * C17813 +
            C50877 * C17804 + C104453 + C104453 + C50871 * C17812 +
            C50879 * C18342 + C104454 + C104454 + C50872 * C18344) *
               C152113) *
              C152037 * C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C60800 * C101415 + C62168 * C152113) * C6087 +
            (C60801 * C101415 + C62167 * C152113) * C6088) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C152241 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152256 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152256 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C152241 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C1259 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            (C111439 + C111440) * C6088) *
               C152241 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152256 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C1260 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152256 -
           ((C60804 * C152113 + C60803 * C101415) * C6088 +
            (C111440 + C111439) * C6087 + C111434 * C6086) *
               C152241 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C2216 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C2215 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C2215 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C2216 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C152255 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C2216 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C2215 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C152239 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C2215 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C2216 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C2446 -
          (C111434 * C6088 + (C110860 + C110861) * C6087 +
           (C65779 * C152113 + C65778 * C101415) * C6086) *
              C2447 +
          ((C65779 * C101415 + C65780 * C152113) * C6086 +
           (C111435 + C111436) * C6087 + C111443 * C6088) *
              C2448 -
          ((C67083 * C152113 + C62167 * C101415) * C6088 +
           (C67082 * C152113 + C62168 * C101415) * C6087 +
           (C68355 * C152113 + C65780 * C101415) * C6086) *
              C2449 +
          ((C68355 * C101415 + C68357 * C152113) * C6086 +
           (C67082 * C101415 + C68356 * C152113) * C6087 +
           (C67083 * C101415 +
            (C59432 * C69051 + C69058 + C69058 + C151790 * C69053) * C152113) *
               C6088) *
              C2450) *
         C151849 * C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C1259 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C1260 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C152167 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C1259 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C1260 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152167 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C151849 * C739 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151954 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C152167 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151954) *
              C151849 * C741 +
          (((C102353 + C102354 + C102355) * C101415 +
            (C50875 * C554 + C102344 + C102344 + C50870 * C578 + C50877 * C556 +
             C102345 + C102345 + C50871 * C580 + C50879 * C558 + C102346 +
             C102346 + C50872 * C582) *
                C152113) *
               C152037 * C151954 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2814 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2815 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C2816 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C151849 * C152152 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C2815 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C2814 -
           ((C104972 + C104973 + C104974) * C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C2816 +
           ((C104974 + C104973 + C104972) * C101415 +
            (C50875 * C2456 + C104963 + C104963 + C50870 * C2472 +
             C50877 * C2457 + C104964 + C104964 + C50871 * C2473 +
             C50879 * C2458 + C104965 + C104965 + C50872 * C2474) *
                C152113) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152167 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C1259 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C111439 + C111440) * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C1260 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C152167 -
            ((C60804 * C152113 + C60803 * C101415) * C6088 +
             (C111440 + C111439) * C6087 + C111434 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C1259 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C1260 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2814 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2815 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C2816 -
           ((C67083 * C152113 + C62167 * C101415) * C6088 +
            (C67082 * C152113 + C62168 * C101415) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C151849 * C152152 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C2815 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C2814 -
           ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C2816 +
           ((C65783 * C101415 + C68857 * C152113) * C6086 +
            (C65784 * C101415 + C68655 * C152113) * C6087 +
            (C67579 * C101415 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C152113) *
                C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
             C50872 * C572) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152239 -
           ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
             C50870 * C573) *
                C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152255 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
             C50872 * C579) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
            C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
            C50872 * C572) *
               C152113) *
              C152037 * C151867 * C151849 * C129 -
          ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
            C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
            C50870 * C573) *
               C152113 +
           (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
            C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
            C50870 * C159) *
               C101415) *
              C152037 * C151867 * C151849 * C130 +
          ((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
            C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
            C50872 * C162) *
               C101415 +
           (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
            C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
            C50872 * C579) *
               C152113) *
              C152037 * C151867 * C151849 * C131 -
          ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
            C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
            C50870 * C571) *
               C152113 +
           (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
            C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
            C50870 * C161) *
               C101415) *
              C152037 * C151867 * C151849 * C132 +
          ((C50875 * C146 + C50906 + C50906 + C50870 * C162 + C50877 * C147 +
            C50907 + C50907 + C50871 * C163 + C50879 * C148 + C50908 + C50908 +
            C50872 * C164) *
               C101415 +
           (C50875 * C555 + C101418 + C101418 + C50870 * C579 + C50877 * C557 +
            C101419 + C101419 + C50871 * C581 + C50879 * C882 + C101420 +
            C101420 + C50872 * C884) *
               C152113) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1259 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C151867 * C1347 -
          ((C52239 + C52240 + C52241) * C152113 +
           (C51222 + C51221 + C51220) * C101415) *
              C152037 * C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C101415 +
           (C52890 + C52891 + C52892) * C152113) *
              C152037 * C151867 * C1349 -
          ((C53625 + C53626 + C53627) * C152113 +
           (C52620 + C52619 + C52618) * C101415) *
              C152037 * C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C101415 +
           (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 + C50877 * C8075 +
            C53617 + C53617 + C50871 * C8087 + C50879 * C8642 + C53618 +
            C53618 + C50872 * C8644) *
               C152113) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2215 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2216 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152252 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C2216 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C2215 -
           ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152211) *
              C151849 * C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C2215 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C2216 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C2215 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C2216 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C152255 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C2216 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C2215 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152211) *
              C152239 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C2215 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C2216 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C151849 * C152252 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C2216 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C2215 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C2215 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C2216 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C2215 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C2216 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C152255 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C2216 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C2215 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C152239 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C2215 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C2216 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C151912) *
              C151826 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C151835 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C4107 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C151912) *
              C151826 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C151835 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C4107 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C4107) *
               C151912) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C151950 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151957 +
            ((C101937 + C101936 + C101935) * C101415 +
             (C104467 + C104468 + C104469) * C152113) *
                C152037 * C4779) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151957 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C151950 -
            ((C54915 + C54916 + C54917) * C152113 +
             (C52889 + C52888 + C52887) * C101415) *
                C152037 * C4779) *
               C151912) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151957 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C151950 -
            ((C104972 + C104973 + C104974) * C152113 +
             (C101943 + C101942 + C101941) * C101415) *
                C152037 * C4779) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C151950 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151957 +
            ((C54505 + C54504 + C54503) * C101415 +
             (C50875 * C2956 + C54703 + C54703 + C50870 * C2964 +
              C50877 * C2957 + C54704 + C54704 + C50871 * C2965 +
              C50879 * C2958 + C54705 + C54705 + C50872 * C2966) *
                 C152113) *
                C152037 * C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C151950 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151957 +
            ((C65779 * C101415 + C65780 * C152113) * C6086 +
             (C111435 + C111436) * C6087 + C111443 * C6088) *
                C4779) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151957 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C151950 -
            ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
             (C111436 + C111435) * C6086) *
                C4779) *
               C151912) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151957 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C151950 -
            ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
             (C65783 * C152113 + C65782 * C101415) * C6086) *
                C4779) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C151950 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151957 +
            ((C112982 + C112981) * C6086 + (C112980 + C112979) * C6087 +
             (C61880 * C101415 +
              (C59432 * C10174 + C62019 + C62019 + C151790 * C10178) *
                  C152113) *
                 C6088) *
                C4779) *
               C151912) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152255 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C152239 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C4107 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C152255 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C152239 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C4107 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C151849 * C152261 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151954 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C4107 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151954) *
              C151849 * C152237 +
          (((C102353 + C102354 + C102355) * C101415 +
            (C50875 * C554 + C102344 + C102344 + C50870 * C578 + C50877 * C556 +
             C102345 + C102345 + C50871 * C580 + C50879 * C558 + C102346 +
             C102346 + C50872 * C582) *
                C152113) *
               C152037 * C151954 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152263 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152260 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C152247 -
           ((C104470 + C104471 + C104472) * C152113 +
            (C104469 + C104468 + C104467) * C101415) *
               C152037 * C152224) *
              C151849 * C3241 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C152260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152263 -
           ((C104972 + C104973 + C104974) * C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152247 +
           ((C104974 + C104973 + C104972) * C101415 +
            (C50875 * C2456 + C104963 + C104963 + C50870 * C2472 +
             C50877 * C2457 + C104964 + C104964 + C50871 * C2473 +
             C50879 * C2458 + C104965 + C104965 + C50872 * C2474) *
                C152113) *
               C152037 * C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C4107 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152255 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C152239 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C4107 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C152255 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C152239 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152263 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152260 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152247 -
           ((C113371 + C113372) * C6088 + (C113373 + C113374) * C6087 +
            (C68355 * C152113 + C65780 * C101415) * C6086) *
               C152224) *
              C151849 * C3241 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C152260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152263 -
           ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152247 +
           ((C65783 * C101415 + C68857 * C152113) * C6086 +
            (C65784 * C101415 + C68655 * C152113) * C6087 +
            (C67579 * C101415 +
             (C59432 * C9436 + C68652 + C68652 + C151790 * C9448) * C152113) *
                C6088) *
               C152224) *
              C151849 * C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151950 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151957 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C104467 + C104468 + C104469) * C152113) *
               C152037 * C4779) *
              C151849 * C151826 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151957 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151950 -
           ((C104972 + C104973 + C104974) * C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C4779) *
              C151849 * C151835 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151950 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151957 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151950 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151957 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C4779) *
              C151849 * C151826 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C151957 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151950 -
           ((C112979 + C112980) * C6088 + (C112981 + C112982) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C4779) *
              C151849 * C151835 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151950 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151957 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C4779) *
              C151849 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C4107 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C151849 * C152261 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151954 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C4107) *
              C151849 * C152254 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C4107 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151954) *
              C151849 * C152237 +
          (((C102353 + C102354 + C102355) * C101415 +
            (C50875 * C554 + C102344 + C102344 + C50870 * C578 + C50877 * C556 +
             C102345 + C102345 + C50871 * C580 + C50879 * C558 + C102346 +
             C102346 + C50872 * C582) *
                C152113) *
               C152037 * C151954 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C4107 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152255 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C4107) *
               C152239 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C4107 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C152208) *
              C3241 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C4107) *
               C152255 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C4107 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C152239 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C4107 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C152261 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C110862 + C110863) * C6087 + C111931 * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152254 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C4107 -
           ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C152237 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C4107) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C4107 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152255 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             C112128 * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C4107) *
               C152239 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C4107 -
            ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
             C111434 * C6086) *
                C151954) *
               C152208) *
              C3241 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C4107) *
               C152255 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C4107 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C152239 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C4107) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C152166 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C151912) *
              C739 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C151912 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152166) *
              C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C152166 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C151912) *
              C741 +
          (((C51701 + C51702 + C51703) * C101415 +
            (C50875 * C1086 + C51901 + C51901 + C50870 * C1098 +
             C50877 * C1087 + C51902 + C51902 + C50871 * C1099 +
             C50879 * C1088 + C51903 + C51903 + C50872 * C1100) *
                C152113) *
               C152037 * C151867 * C151912 -
           ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
             C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
             C50870 * C571) *
                C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1709 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1710 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C1711 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C151867 * C152218) *
              C152152 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1710 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1709 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C1711 +
           ((C53107 + C53106 + C53105) * C101415 +
            (C50875 * C2054 + C53404 + C53404 + C50870 * C2062 +
             C50877 * C2055 + C53405 + C53405 + C50871 * C2063 +
             C50879 * C2056 + C53406 + C53406 + C50872 * C2064) *
                C152113) *
               C152037 * C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152166 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C151912) *
              C739 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C151912 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152166) *
              C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152166 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C151912) *
              C741 +
          (((C110370 + C110371) * C6086 + (C110372 + C110373) * C6087 +
            (C59994 * C101415 +
             (C59432 * C2056 + C60131 + C60131 + C151790 * C2064) * C152113) *
                C6088) *
               C151867 * C151912 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C151867 * C152166) *
              C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1709 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1710 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C151867 * C1711 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C151867 * C152218) *
              C152152 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            C111638 * C6088) *
               C151867 * C1710 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1709 -
           ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
            C109956 * C6086) *
               C151867 * C1711 +
           (C111638 * C6086 + (C111640 + C111639) * C6087 +
            (C60945 * C101415 +
             (C59432 * C8854 + C61143 + C61143 + C151790 * C8858) * C152113) *
                C6088) *
               C151867 * C152218) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C151912) *
              C335 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C152166 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C151912) *
              C336 +
          ((((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
              C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 +
              C50896 + C50872 * C162) *
                 C101415 +
             (C101944 + C101945 + C101946) * C152113) *
                C152037 * C152167 -
            ((C101947 + C101948 + C101949) * C152113 +
             (C101946 + C101945 + C101944) * C101415) *
                C152037 * C151954) *
               C152166 +
           (((C52247 + C52246 + C52245) * C101415 +
             (C50875 * C1532 + C51489 + C51489 + C50870 * C1556 +
              C50877 * C1531 + C51490 + C51490 + C50871 * C1555 +
              C50879 * C2677 + C51491 + C51491 + C50872 * C2679) *
                 C152113) *
                C152037 * C151954 -
            ((C52245 + C52246 + C52247) * C152113 +
             (C51234 + C51233 + C51232) * C101415) *
                C152037 * C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152167 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C1709 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C151954 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152167) *
              C1710 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C152167 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C151954) *
              C1711 +
          (((C53627 + C53626 + C53625) * C101415 +
            (C50875 * C8074 + C52866 + C52866 + C50870 * C8086 +
             C50877 * C8073 + C52867 + C52867 + C50871 * C8085 +
             C50879 * C9751 + C52868 + C52868 + C50872 * C9753) *
                C152113) *
               C152037 * C151954 -
           ((C53625 + C53626 + C53627) * C152113 +
            (C52620 + C52619 + C52618) * C101415) *
               C152037 * C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            ((C110858 + C110859) * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C60365 * C101415 + C60802 * C152113) * C6088) *
                C151954 -
            ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C151912) *
              C335 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + (C110864 + C110865) * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C152166 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             (C109947 + C109948) * C6088) *
                C152167 -
            ((C61880 * C152113 + C60370 * C101415) * C6088 +
             (C110865 + C110864) * C6087 + (C110863 + C110862) * C6086) *
                C151954) *
               C151912) *
              C336 +
          (((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
              C65785 * C152113) *
                 C6086 +
             (C109949 + C109950) * C6087 + C109957 * C6088) *
                C152167 -
            ((C110866 + C110867) * C6088 + (C110868 + C110869) * C6087 +
             (C65786 * C152113 + C65785 * C101415) * C6086) *
                C151954) *
               C152166 +
           (((C110869 + C110868) * C6086 + (C110867 + C110866) * C6087 +
             (C60371 * C101415 +
              (C59432 * C9751 + C59848 + C59848 + C151790 * C9753) * C152113) *
                 C6088) *
                C151954 -
            ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
             (C109950 + C109949) * C6086) *
                C152167) *
               C151912) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C1709 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            C112128 * C6088) *
               C151954 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152167) *
              C1710 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152167 -
           ((C112129 + C112130) * C6088 + (C111440 + C111439) * C6087 +
            C111434 * C6086) *
               C151954) *
              C1711 +
          ((C112128 * C6086 + (C112130 + C112129) * C6087 +
            (C61286 * C101415 +
             (C59432 * C60773 + C60789 + C60789 + C151790 * C60775) * C152113) *
                C6088) *
               C151954 -
           ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
            C111210 * C6086) *
               C152167) *
              C152218) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
             C50872 * C572) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152239 -
           ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
             C50870 * C573) *
                C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152255 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
             C50872 * C579) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
            C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
            C50872 * C572) *
               C152113) *
              C152037 * C151867 * C151849 * C129 -
          ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
            C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
            C50870 * C573) *
               C152113 +
           (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
            C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
            C50870 * C159) *
               C101415) *
              C152037 * C151867 * C151849 * C130 +
          ((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
            C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
            C50872 * C162) *
               C101415 +
           (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
            C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
            C50872 * C579) *
               C152113) *
              C152037 * C151867 * C151849 * C131 -
          ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
            C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
            C50870 * C571) *
               C152113 +
           (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
            C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
            C50870 * C161) *
               C101415) *
              C152037 * C151867 * C151849 * C132 +
          ((C50875 * C146 + C50906 + C50906 + C50870 * C162 + C50877 * C147 +
            C50907 + C50907 + C50871 * C163 + C50879 * C148 + C50908 + C50908 +
            C50872 * C164) *
               C101415 +
           (C50875 * C555 + C101418 + C101418 + C50870 * C579 + C50877 * C557 +
            C101419 + C101419 + C50871 * C581 + C50879 * C882 + C101420 +
            C101420 + C50872 * C884) *
               C152113) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152256 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152241 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C151849 * C335 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C152241 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152256 -
           ((C50879 * C2451 + C54702 + C54702 + C50872 * C2467 +
             C50877 * C2452 + C54701 + C54701 + C50871 * C2468 +
             C50875 * C2453 + C54700 + C54700 + C50870 * C2469) *
                C152113 +
            (C101943 + C101942 + C101941) * C101415) *
               C152037 * C152211) *
              C151849 * C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C152256 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C152241 +
           ((C101949 + C101948 + C101947) * C101415 +
            (C50875 * C2452 + C101893 + C101893 + C50870 * C2468 +
             C50877 * C2451 + C101894 + C101894 + C50871 * C2467 +
             C50879 * C2818 + C101895 + C101895 + C50872 * C2820) *
                C152113) *
               C152037 * C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1259 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C151867 * C1347 -
          ((C52239 + C52240 + C52241) * C152113 +
           (C51222 + C51221 + C51220) * C101415) *
              C152037 * C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C101415 +
           (C52890 + C52891 + C52892) * C152113) *
              C152037 * C151867 * C1349 -
          ((C53625 + C53626 + C53627) * C152113 +
           (C52620 + C52619 + C52618) * C101415) *
              C152037 * C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C101415 +
           (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 + C50877 * C8075 +
            C53617 + C53617 + C50871 * C8087 + C50879 * C8642 + C53618 +
            C53618 + C50872 * C8644) *
               C152113) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152256 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C152241 +
           ((C101937 + C101936 + C101935) * C101415 +
            (C50875 * C2454 + C54191 + C54191 + C50870 * C2470 +
             C50877 * C2453 + C54190 + C54190 + C50871 * C2469 +
             C50879 * C2452 + C54189 + C54189 + C50872 * C2468) *
                C152113) *
               C152037 * C152211) *
              C1259 +
          (((C52241 + C52240 + C52239) * C101415 +
            (C52887 + C52888 + C52889) * C152113) *
               C152037 * C152241 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C152256 -
           ((C54915 + C54916 + C54917) * C152113 +
            (C52889 + C52888 + C52887) * C101415) *
               C152037 * C152211) *
              C1260 +
          (((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C152256 -
           ((C52893 + C52894 + C52895) * C152113 +
            (C52892 + C52891 + C52890) * C101415) *
               C152037 * C152241 +
           ((C52895 + C52894 + C52893) * C101415 +
            (C50875 * C9432 + C54906 + C54906 + C50870 * C9444 +
             C50877 * C9431 + C54907 + C54907 + C50871 * C9443 +
             C50879 * C9970 + C54908 + C54908 + C50872 * C9972) *
                C152113) *
               C152037 * C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C60800 * C101415 + C62168 * C152113) * C6087 +
            (C60801 * C101415 + C62167 * C152113) * C6088) *
               C152211) *
              C151849 * C335 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C152241 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152256 -
           ((C67579 * C152113 + C61881 * C101415) * C6088 +
            (C65784 * C152113 + C61882 * C101415) * C6087 +
            (C65783 * C152113 + C65782 * C101415) * C6086) *
               C152211) *
              C151849 * C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152256 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C152241 +
           ((C65786 * C101415 + C65788 * C152113) * C6086 +
            (C65506 * C101415 + C65787 * C152113) * C6087 +
            (C65507 * C101415 +
             (C59432 * C9970 + C66502 + C66502 + C151790 * C9972) * C152113) *
                C6088) *
               C152211) *
              C151849 * C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152256 -
           (C111434 * C6088 + (C110860 + C110861) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C152241 +
           ((C65779 * C101415 + C65780 * C152113) * C6086 +
            (C111435 + C111436) * C6087 + C111443 * C6088) *
               C152211) *
              C1259 +
          (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
            (C111439 + C111440) * C6088) *
               C152241 -
           (C111210 * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C152256 -
           ((C111441 + C111442) * C6088 + (C111438 + C111437) * C6087 +
            (C111436 + C111435) * C6086) *
               C152211) *
              C1260 +
          ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
               C152256 -
           ((C60804 * C152113 + C60803 * C101415) * C6088 +
            (C111440 + C111439) * C6087 + C111434 * C6086) *
               C152241 +
           (C111443 * C6086 + (C111442 + C111441) * C6087 +
            (C60804 * C101415 +
             (C59432 * C62149 + C62159 + C62159 + C151790 * C62151) * C152113) *
                C6088) *
               C152211) *
              C152208) *
         C151821) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C152167 -
           ((C101935 + C101936 + C101937) * C152113 +
            (C101934 + C101933 + C101932) * C101415) *
               C152037 * C151954) *
              C151849 * C739 +
          (((C101938 + C101939 + C101940) * C101415 +
            (C101941 + C101942 + C101943) * C152113) *
               C152037 * C151954 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C152167) *
              C151849 * C740 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C152167 -
           ((C101947 + C101948 + C101949) * C152113 +
            (C101946 + C101945 + C101944) * C101415) *
               C152037 * C151954) *
              C151849 * C741 +
          (((C102353 + C102354 + C102355) * C101415 +
            (C50875 * C554 + C102344 + C102344 + C50870 * C578 + C50877 * C556 +
             C102345 + C102345 + C50871 * C580 + C50879 * C558 + C102346 +
             C102346 + C50872 * C582) *
                C152113) *
               C152037 * C151954 -
           ((C102355 + C102354 + C102353) * C152113 +
            (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
             C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
             C50870 * C161) *
                C101415) *
               C152037 * C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
              C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 +
              C50884 + C50872 * C160) *
                 C101415 +
             (C101932 + C101933 + C101934) * C152113) *
                C152037 * C152167 -
            ((C101935 + C101936 + C101937) * C152113 +
             (C101934 + C101933 + C101932) * C101415) *
                C152037 * C151954) *
               C1259 +
           (((C52241 + C52240 + C52239) * C101415 +
             (C52887 + C52888 + C52889) * C152113) *
                C152037 * C151954 -
            ((C52239 + C52240 + C52241) * C152113 +
             (C51222 + C51221 + C51220) * C101415) *
                C152037 * C152167) *
               C1260 +
           (((C51225 + C51224 + C51223) * C101415 +
             (C52890 + C52891 + C52892) * C152113) *
                C152037 * C152167 -
            ((C52893 + C52894 + C52895) * C152113 +
             (C52892 + C52891 + C52890) * C101415) *
                C152037 * C151954) *
               C152208) *
              C152152 +
          ((((C101938 + C101939 + C101940) * C101415 +
             (C101941 + C101942 + C101943) * C152113) *
                C152037 * C151954 -
            ((C101940 + C101939 + C101938) * C152113 +
             (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
              C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 +
              C50893 + C50870 * C159) *
                 C101415) *
                C152037 * C152167) *
               C1259 +
           (((C51226 + C51227 + C51228) * C101415 +
             (C52242 + C52243 + C52244) * C152113) *
                C152037 * C152167 -
            ((C54503 + C54504 + C54505) * C152113 +
             (C52244 + C52243 + C52242) * C101415) *
                C152037 * C151954) *
               C1260 +
           (((C53415 + C53414 + C53413) * C101415 +
             (C50875 * C1540 + C54494 + C54494 + C50870 * C1564 +
              C50877 * C1541 + C54495 + C54495 + C50871 * C1565 +
              C50879 * C1542 + C54496 + C54496 + C50872 * C1566) *
                 C152113) *
                C152037 * C151954 -
            ((C53413 + C53414 + C53415) * C152113 +
             (C51231 + C51230 + C51229) * C101415) *
                C152037 * C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C152167 -
           ((C60801 * C152113 + C60366 * C101415) * C6088 +
            (C60800 * C152113 + C60367 * C101415) * C6087 +
            (C65779 * C152113 + C65778 * C101415) * C6086) *
               C151954) *
              C151849 * C739 +
          (((C65781 * C101415 + C65782 * C152113) * C6086 +
            (C60368 * C101415 + C61882 * C152113) * C6087 +
            (C60369 * C101415 + C61881 * C152113) * C6088) *
               C151954 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C152167) *
              C151849 * C740 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C152167 -
           ((C65507 * C152113 + C60372 * C101415) * C6088 +
            (C65506 * C152113 + C60373 * C101415) * C6087 +
            (C65786 * C152113 + C65785 * C101415) * C6086) *
               C151954) *
              C151849 * C741 +
          (((C66201 * C101415 + C66202 * C152113) * C6086 +
            (C65993 * C101415 + C65994 * C152113) * C6087 +
            (C93863 * C101415 +
             (C59432 * C1542 + C65988 + C65988 + C151790 * C1566) * C152113) *
                C6088) *
               C151954 -
           ((C110373 + C110372) * C6088 + (C110371 + C110370) * C6087 +
            (C66201 * C152113 +
             (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
                C6086) *
               C152167) *
              C151849 * C152212)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
              C65778 * C152113) *
                 C6086 +
             (C109937 + C109938) * C6087 + C109955 * C6088) *
                C152167 -
            (C111434 * C6088 + (C110860 + C110861) * C6087 +
             (C65779 * C152113 + C65778 * C101415) * C6086) *
                C151954) *
               C1259 +
           (((C110861 + C110860) * C6086 + (C110859 + C110858) * C6087 +
             (C111439 + C111440) * C6088) *
                C151954 -
            (C111210 * C6088 + (C109940 + C109939) * C6087 +
             (C109938 + C109937) * C6086) *
                C152167) *
               C1260 +
           ((C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
                C152167 -
            ((C60804 * C152113 + C60803 * C101415) * C6088 +
             (C111440 + C111439) * C6087 + C111434 * C6086) *
                C151954) *
               C152208) *
              C152152 +
          ((((C65781 * C101415 + C65782 * C152113) * C6086 +
             (C110862 + C110863) * C6087 + C111931 * C6088) *
                C151954 -
            (C109956 * C6088 + (C109944 + C109943) * C6087 +
             (C65781 * C152113 +
              (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                 C6086) *
                C152167) *
               C1259 +
           (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
             C111638 * C6088) *
                C152167 -
            ((C111932 + C111933) * C6088 + (C110865 + C110864) * C6087 +
             (C110863 + C110862) * C6086) *
                C151954) *
               C1260 +
           ((C111931 * C6086 + (C111933 + C111932) * C6087 +
             (C61146 * C101415 +
              (C59432 * C8078 + C61873 + C61873 + C151790 * C8090) * C152113) *
                 C6088) *
                C151954 -
            ((C111639 + C111640) * C6088 + (C109948 + C109947) * C6087 +
             C109956 * C6086) *
                C152167) *
               C152208) *
              C151832)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
            C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
            C50872 * C572) *
               C152113) *
              C152037 * C151867 * C151849 * C129 -
          ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
            C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
            C50870 * C573) *
               C152113 +
           (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
            C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
            C50870 * C159) *
               C101415) *
              C152037 * C151867 * C151849 * C130 +
          ((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
            C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
            C50872 * C162) *
               C101415 +
           (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
            C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
            C50872 * C579) *
               C152113) *
              C152037 * C151867 * C151849 * C131 -
          ((C50879 * C557 + C51900 + C51900 + C50872 * C581 + C50877 * C555 +
            C51899 + C51899 + C50871 * C579 + C50875 * C547 + C51898 + C51898 +
            C50870 * C571) *
               C152113 +
           (C50879 * C147 + C50903 + C50903 + C50872 * C163 + C50877 * C146 +
            C50904 + C50904 + C50871 * C162 + C50875 * C145 + C50905 + C50905 +
            C50870 * C161) *
               C101415) *
              C152037 * C151867 * C151849 * C132 +
          ((C50875 * C146 + C50906 + C50906 + C50870 * C162 + C50877 * C147 +
            C50907 + C50907 + C50871 * C163 + C50879 * C148 + C50908 + C50908 +
            C50872 * C164) *
               C101415 +
           (C50875 * C555 + C101418 + C101418 + C50870 * C579 + C50877 * C557 +
            C101419 + C101419 + C50871 * C581 + C50879 * C882 + C101420 +
            C101420 + C50872 * C884) *
               C152113) *
              C152037 * C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C50875 * C550 + C51461 + C51461 + C50870 * C574 + C50877 * C549 +
             C51460 + C51460 + C50871 * C573 + C50879 * C548 + C51459 + C51459 +
             C50872 * C572) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C335 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C152239 -
           ((C50879 * C547 + C51470 + C51470 + C50872 * C571 + C50877 * C548 +
             C51469 + C51469 + C50871 * C572 + C50875 * C549 + C51468 + C51468 +
             C50870 * C573) *
                C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C152255 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C336 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C50875 * C548 + C51485 + C51485 + C50870 * C572 + C50877 * C547 +
             C51484 + C51484 + C50871 * C571 + C50879 * C555 + C51483 + C51483 +
             C50872 * C579) *
                C152113) *
               C152037 * C151867 * C152255 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C152239 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
             C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
             C50872 * C160) *
                C101415 +
            (C101932 + C101933 + C101934) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52239 + C52240 + C52241) * C152113 +
            (C51222 + C51221 + C51220) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51225 + C51224 + C51223) * C101415 +
            (C52890 + C52891 + C52892) * C152113) *
               C152037 * C151867 * C152208) *
              C152252 +
          (((C51226 + C51227 + C51228) * C101415 +
            (C52242 + C52243 + C52244) * C152113) *
               C152037 * C151867 * C1260 -
           ((C101940 + C101939 + C101938) * C152113 +
            (C50879 * C145 + C50891 + C50891 + C50872 * C161 + C50877 * C144 +
             C50892 + C50892 + C50871 * C160 + C50875 * C143 + C50893 + C50893 +
             C50870 * C159) *
                C101415) *
               C152037 * C151867 * C1259 -
           ((C53413 + C53414 + C53415) * C152113 +
            (C51231 + C51230 + C51229) * C101415) *
               C152037 * C151867 * C152208) *
              C152235 +
          (((C50875 * C144 + C50894 + C50894 + C50870 * C160 + C50877 * C145 +
             C50895 + C50895 + C50871 * C161 + C50879 * C146 + C50896 + C50896 +
             C50872 * C162) *
                C101415 +
            (C101944 + C101945 + C101946) * C152113) *
               C152037 * C151867 * C1259 -
           ((C52245 + C52246 + C52247) * C152113 +
            (C51234 + C51233 + C51232) * C101415) *
               C152037 * C151867 * C1260 +
           ((C51237 + C51236 + C51235) * C101415 +
            (C50875 * C1536 + C52218 + C52218 + C50870 * C1560 +
             C50877 * C1535 + C52219 + C52219 + C50871 * C1559 +
             C50879 * C1916 + C52220 + C52220 + C50872 * C1918) *
                C152113) *
               C152037 * C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C50875 * C142 + C50882 + C50882 + C50870 * C158 + C50877 * C143 +
            C50883 + C50883 + C50871 * C159 + C50879 * C144 + C50884 + C50884 +
            C50872 * C160) *
               C101415 +
           (C101932 + C101933 + C101934) * C152113) *
              C152037 * C151867 * C1347 -
          ((C52239 + C52240 + C52241) * C152113 +
           (C51222 + C51221 + C51220) * C101415) *
              C152037 * C151867 * C1348 +
          ((C51225 + C51224 + C51223) * C101415 +
           (C52890 + C52891 + C52892) * C152113) *
              C152037 * C151867 * C1349 -
          ((C53625 + C53626 + C53627) * C152113 +
           (C52620 + C52619 + C52618) * C101415) *
              C152037 * C151867 * C1350 +
          ((C52623 + C52622 + C52621) * C101415 +
           (C50875 * C8076 + C53616 + C53616 + C50870 * C8088 + C50877 * C8075 +
            C53617 + C53617 + C50871 * C8087 + C50879 * C8642 + C53618 +
            C53618 + C50872 * C8644) *
               C152113) *
              C152037 * C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C59655 * C101415 + C60367 * C152113) * C6087 +
           (C59656 * C101415 + C60366 * C152113) * C6088) *
              C151867 * C151849 * C129 -
          ((C60369 * C152113 + C59660 * C101415) * C6088 +
           (C60368 * C152113 + C59659 * C101415) * C6087 +
           (C65781 * C152113 +
            (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
               C6086) *
              C151867 * C151849 * C130 +
          (((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
            C65785 * C152113) *
               C6086 +
           (C59663 * C101415 + C60373 * C152113) * C6087 +
           (C59664 * C101415 + C60372 * C152113) * C6088) *
              C151867 * C151849 * C131 -
          ((C93863 * C152113 + C59993 * C101415) * C6088 +
           (C65993 * C152113 + C59992 * C101415) * C6087 +
           (C66201 * C152113 +
            (C59432 * C145 + C59450 + C59450 + C151790 * C161) * C101415) *
               C6086) *
              C151867 * C151849 * C132 +
          (((C59432 * C146 + C59451 + C59451 + C151790 * C162) * C101415 +
            (C59432 * C555 + C65260 + C65260 + C151790 * C579) * C152113) *
               C6086 +
           ((C59432 * C346 + C59452 + C59452 + C151790 * C370) * C101415 +
            (C59432 * C1087 + C65262 + C65262 + C151790 * C1099) * C152113) *
               C6087 +
           ((C59432 * C347 + C59453 + C59453 + C151790 * C371) * C101415 +
            (C59432 * C1916 + C93204 + C93204 + C151790 * C1918) * C152113) *
               C6088) *
              C151867 * C151849 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C152255 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C152239 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C335 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C152239 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C152255 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C336 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C152255 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C152239 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
             C65778 * C152113) *
                C6086 +
            (C109937 + C109938) * C6087 + C109955 * C6088) *
               C151867 * C1259 -
           ((C109941 + C109942) * C6088 + (C109940 + C109939) * C6087 +
            (C109938 + C109937) * C6086) *
               C151867 * C1260 +
           (C109955 * C6086 + (C109942 + C109941) * C6087 +
            (C59658 * C101415 + C60803 * C152113) * C6088) *
               C151867 * C152208) *
              C152252 +
          (((C109943 + C109944) * C6086 + (C109945 + C109946) * C6087 +
            (C109947 + C109948) * C6088) *
               C151867 * C1260 -
           (C109956 * C6088 + (C109944 + C109943) * C6087 +
            (C65781 * C152113 +
             (C59432 * C143 + C59442 + C59442 + C151790 * C159) * C101415) *
                C6086) *
               C151867 * C1259 -
           ((C61146 * C152113 + C59662 * C101415) * C6088 +
            (C109948 + C109947) * C6087 + C109956 * C6086) *
               C151867 * C152208) *
              C152235 +
          ((((C59432 * C144 + C59443 + C59443 + C151790 * C160) * C101415 +
             C65785 * C152113) *
                C6086 +
            (C109949 + C109950) * C6087 + C109957 * C6088) *
               C151867 * C1259 -
           ((C109953 + C109954) * C6088 + (C109952 + C109951) * C6087 +
            (C109950 + C109949) * C6086) *
               C151867 * C1260 +
           (C109957 * C6086 + (C109954 + C109953) * C6087 +
            (C59666 * C101415 +
             (C59432 * C8642 + C60346 + C60346 + C151790 * C8644) * C152113) *
                C6088) *
               C151867 * C152208) *
              C152202)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C59432 * C142 + C59435 + C59435 + C151790 * C158) * C101415 +
            C65778 * C152113) *
               C6086 +
           (C109937 + C109938) * C6087 + C109955 * C6088) *
              C151867 * C1347 -
          (C111210 * C6088 + (C109940 + C109939) * C6087 +
           (C109938 + C109937) * C6086) *
              C151867 * C1348 +
          (C109955 * C6086 + (C109942 + C109941) * C6087 + C111215 * C6088) *
              C151867 * C1349 -
          ((C111213 + C111214) * C6088 + (C111212 + C111211) * C6087 +
           C111210 * C6086) *
              C151867 * C1350 +
          (C111215 * C6086 + (C111214 + C111213) * C6087 +
           (C60625 * C101415 +
            (C59432 * C61277 + C61283 + C61283 + C151790 * C61279) * C152113) *
               C6088) *
              C151867 * C1351) *
         C151821) /
            (p * q * std::sqrt(p + q));
}
